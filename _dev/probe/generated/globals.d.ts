declare class NBTIO extends Document.Object {
    static read(file: string): any;
    static read(file: Internal.File): Internal.MapJS;
    static write(file: string, nbt: any): void;
    static write(file: Internal.File, nbt: any): void;
    constructor();
}
type NBTIO_ = NBTIO;
declare interface Color {
    static rgba(r: number, g: number, b: number, a: number): dev.latvian.mods.rhino.mod.util.color.Color;
    static of(o: any): dev.latvian.mods.rhino.mod.util.color.Color;
    static createMapped(o: any, names: string[]): dev.latvian.mods.rhino.mod.util.color.Color;
    readonly BLUE_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly GOLD : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly GRAY : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly MAGENTA_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly BLUE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly DARK_AQUA : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly TEXT : {"dark_red":Internal.TextFormatting,"green":Internal.TextFormatting,"underline":Internal.TextFormatting,"dark_green":Internal.TextFormatting,"black":Internal.TextFormatting,"yellow":Internal.TextFormatting,"bold":Internal.TextFormatting,"italic":Internal.TextFormatting,"dark_blue":Internal.TextFormatting,"dark_purple":Internal.TextFormatting,"gold":Internal.TextFormatting,"red":Internal.TextFormatting,"aqua":Internal.TextFormatting,"gray":Internal.TextFormatting,"light_purple":Internal.TextFormatting,"blue":Internal.TextFormatting,"white":Internal.TextFormatting,"dark_aqua":Internal.TextFormatting,"dark_gray":Internal.TextFormatting,"reset":Internal.TextFormatting,"strikethrough":Internal.TextFormatting,"obfuscated":Internal.TextFormatting};
    readonly DYE : {"magenta":Internal.DyeColor,"pink":Internal.DyeColor,"green":Internal.DyeColor,"lime":Internal.DyeColor,"light_gray":Internal.DyeColor,"yellow":Internal.DyeColor,"black":Internal.DyeColor,"light_blue":Internal.DyeColor,"brown":Internal.DyeColor,"cyan":Internal.DyeColor,"orange":Internal.DyeColor,"red":Internal.DyeColor,"gray":Internal.DyeColor,"white":Internal.DyeColor,"blue":Internal.DyeColor,"purple":Internal.DyeColor};
    readonly WHITE_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly DARK_RED : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly LIGHT_PURPLE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly BROWN_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly BLACK : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly GRAY_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly NONE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly LIGHT_BLUE_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly AQUA : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly WHITE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly LIGHT_GRAY_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly BLACK_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly RED_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly PURPLE_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly GREEN_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly PINK_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly DARK_BLUE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly GREEN : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly CYAN_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly RED : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly DARK_PURPLE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly ORANGE_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly YELLOW_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly DARK_GREEN : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly YELLOW : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly LIME_DYE : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly DARK_GRAY : dev.latvian.mods.rhino.mod.util.color.Color;
    readonly MAP : {"":Internal.NoColor,"light_blue_dye":Internal.DyeColor,"BLUE_DYE":Internal.DyeColor,"purple_dye":Internal.DyeColor,"dark_red":Internal.TextFormatting,"lightGrayDye":Internal.DyeColor,"DARK_AQUA":Internal.TextFormatting,"none":Internal.NoColor,"green_dye":Internal.DyeColor,"blackDye":Internal.DyeColor,"dark_blue":Internal.TextFormatting,"red":Internal.TextFormatting,"pink_dye":Internal.DyeColor,"aqua":Internal.TextFormatting,"white":Internal.TextFormatting,"WHITE_DYE":Internal.DyeColor,"dark_gray":Internal.TextFormatting,"LIGHT_PURPLE":Internal.TextFormatting,"BROWN_DYE":Internal.DyeColor,"BLACK":Internal.TextFormatting,"darkPurple":Internal.TextFormatting,"NONE":Internal.NoColor,"LIGHT_BLUE_DYE":Internal.DyeColor,"AQUA":Internal.TextFormatting,"lightBlueDye":Internal.DyeColor,"limeDye":Internal.DyeColor,"PURPLE_DYE":Internal.DyeColor,"GREEN_DYE":Internal.DyeColor,"magenta_dye":Internal.DyeColor,"-":Internal.NoColor,"lime_dye":Internal.DyeColor,"yellowDye":Internal.DyeColor,"grayDye":Internal.DyeColor,"purpleDye":Internal.DyeColor,"DARK_PURPLE":Internal.TextFormatting,"ORANGE_DYE":Internal.DyeColor,"darkGray":Internal.TextFormatting,"brownDye":Internal.DyeColor,"YELLOW":Internal.TextFormatting,"LIME_DYE":Internal.DyeColor,"blueDye":Internal.DyeColor,"white_dye":Internal.DyeColor,"pinkDye":Internal.DyeColor,"blue_dye":Internal.DyeColor,"cyanDye":Internal.DyeColor,"GOLD":Internal.TextFormatting,"GRAY":Internal.TextFormatting,"MAGENTA_DYE":Internal.DyeColor,"BLUE":Internal.TextFormatting,"yellow":Internal.TextFormatting,"darkBlue":Internal.TextFormatting,"transparent":Internal.NoColor,"orange_dye":Internal.DyeColor,"red_dye":Internal.DyeColor,"dark_purple":Internal.TextFormatting,"gold":Internal.TextFormatting,"gray":Internal.TextFormatting,"light_purple":Internal.TextFormatting,"darkRed":Internal.TextFormatting,"greenDye":Internal.DyeColor,"DARK_RED":Internal.TextFormatting,"redDye":Internal.DyeColor,"GRAY_DYE":Internal.DyeColor,"orangeDye":Internal.DyeColor,"yellow_dye":Internal.DyeColor,"black_dye":Internal.DyeColor,"magentaDye":Internal.DyeColor,"WHITE":Internal.TextFormatting,"green":Internal.TextFormatting,"LIGHT_GRAY_DYE":Internal.DyeColor,"BLACK_DYE":Internal.DyeColor,"darkGreen":Internal.TextFormatting,"RED_DYE":Internal.DyeColor,"dark_green":Internal.TextFormatting,"black":Internal.TextFormatting,"lightPurple":Internal.TextFormatting,"PINK_DYE":Internal.DyeColor,"DARK_BLUE":Internal.TextFormatting,"GREEN":Internal.TextFormatting,"darkAqua":Internal.TextFormatting,"gray_dye":Internal.DyeColor,"CYAN_DYE":Internal.DyeColor,"RED":Internal.TextFormatting,"brown_dye":Internal.DyeColor,"cyan_dye":Internal.DyeColor,"blue":Internal.TextFormatting,"whiteDye":Internal.DyeColor,"dark_aqua":Internal.TextFormatting,"YELLOW_DYE":Internal.DyeColor,"DARK_GREEN":Internal.TextFormatting,"DARK_GRAY":Internal.TextFormatting};
}
type Color_ = Color;
declare const Color: Color;
declare class ingredient extends Document.Object {
    static customNBT(in_: Internal.IngredientJS_, predicate: ((arg0: Internal.CompoundNBT) => boolean)): Internal.IngredientJS;
    static getAll(): Internal.IngredientJS;
    static matchAny(objects: any): Internal.IngredientJS;
    static isIngredient(o: any): boolean;
    static custom(predicate: ((arg0: Internal.ItemStackJS) => boolean)): Internal.IngredientJS;
    static custom(in_: Internal.IngredientJS_, predicate: ((arg0: Internal.ItemStackJS) => boolean)): Internal.IngredientJS;
    static of(object: any): Internal.IngredientJS;
    static of(object: any, count: number): Internal.IngredientJS;
    static registerCustomIngredientAction(id: string, callback: ((arg0: Internal.ItemStackJS, arg1: number, arg2: Internal.InventoryJS) => any)): void;
    static getNone(): Internal.IngredientJS;
    get all(): Internal.IngredientJS;
    get none(): Internal.IngredientJS;
    constructor();
}
type ingredient_ = ingredient;
declare class JsonUtils extends Document.Object {
    static toPrettyString(json: Internal.JsonElement): string;
    static toString(json: Internal.JsonElement): string;
    static copy(json: Internal.JsonElement): Internal.JsonElement;
    static parse(string: string): any;
    constructor();
}
type JsonUtils_ = JsonUtils;
declare class DecorationGenerationStep extends Internal.Enum<DecorationGenerationStep> {
    static valueOf(arg0: string): DecorationGenerationStep;
    static values(): DecorationGenerationStep[];
    static readonly RAW_GENERATION : DecorationGenerationStep;
    static readonly UNDERGROUND_STRUCTURES : DecorationGenerationStep;
    static readonly LOCAL_MODIFICATIONS : DecorationGenerationStep;
    static readonly TOP_LAYER_MODIFICATION : DecorationGenerationStep;
    static readonly UNDERGROUND_DECORATION : DecorationGenerationStep;
    static readonly LAKES : DecorationGenerationStep;
    static readonly SURFACE_STRUCTURES : DecorationGenerationStep;
    static readonly STRONGHOLDS : DecorationGenerationStep;
    static readonly VEGETAL_DECORATION : DecorationGenerationStep;
    static readonly UNDERGROUND_ORES : DecorationGenerationStep;
}
type DecorationGenerationStep_ = "raw_generation" | "lakes" | "local_modifications" | "underground_structures" | "surface_structures" | "strongholds" | "underground_ores" | "underground_decoration" | "vegetal_decoration" | "top_layer_modification" | DecorationGenerationStep;
declare class BiomeDictionary extends Document.Object {
    static printTags(biome: ResourceLocation_): void;
    static getBiomeType(o: any): Internal.BiomeDictionary$Type;
    static printBiomes(type: Internal.BiomeDictionary$Type): void;
    static addTypes(biomes: ResourceLocation[], tags: Internal.BiomeDictionary$Type[]): void;
    constructor();
}
type BiomeDictionary_ = BiomeDictionary;
declare class EquipmentSlot extends Internal.Enum<EquipmentSlot> {
    func_188454_b(): number;
    static func_220318_a(arg0: Internal.EquipmentSlotType$Group_, arg1: number): EquipmentSlot;
    static valueOf(arg0: string): EquipmentSlot;
    static values(): EquipmentSlot[];
    static func_188451_a(arg0: string): EquipmentSlot;
    func_188452_c(): number;
    func_188450_d(): string;
    func_188453_a(): Internal.EquipmentSlotType$Group;
    static readonly CHEST : EquipmentSlot;
    static readonly HEAD : EquipmentSlot;
    static readonly OFFHAND : EquipmentSlot;
    static readonly MAINHAND : EquipmentSlot;
    static readonly LEGS : EquipmentSlot;
    static readonly FEET : EquipmentSlot;
}
type EquipmentSlot_ = "mainhand" | "offhand" | "feet" | "legs" | "chest" | "head" | EquipmentSlot;
declare interface AABB {
    static ofBlock(pos: BlockPos): Internal.AxisAlignedBB;
    static ofSize(x: number, y: number, z: number): Internal.AxisAlignedBB;
    static of(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number): Internal.AxisAlignedBB;
    static wrap(o: any): Internal.AxisAlignedBB;
    static ofBlocks(pos1: BlockPos, pos2: BlockPos): Internal.AxisAlignedBB;
    readonly CUBE : Internal.AxisAlignedBB;
    readonly EMPTY : Internal.AxisAlignedBB;
}
type AABB_ = AABB;
declare const AABB: AABB;
declare class Vec3i extends Document.Object implements Internal.Comparable<Vec3i> {
    func_177981_b(arg0: number): Vec3i;
    func_218138_a(arg0: Internal.IPosition, arg1: boolean): number;
    func_218137_a(arg0: Internal.IPosition, arg1: number): boolean;
    func_229422_x_(): string;
    func_177956_o(): number;
    func_177958_n(): number;
    compareTo(arg0: Vec3i): number;
    compareTo(arg0: any): number;
    func_243648_a(arg0: Internal.Direction$Axis_): number;
    func_177952_p(): number;
    func_218140_a(arg0: number, arg1: number, arg2: number, arg3: boolean): number;
    func_218141_a(arg0: Vec3i, arg1: number): boolean;
    func_218139_n(arg0: Vec3i): number;
    func_177979_c(arg0: number): Vec3i;
    func_177955_d(arg0: Vec3i): Vec3i;
    func_177951_i(arg0: Vec3i): number;
    hashCode(): number;
    equals(arg0: any): boolean;
    toString(): string;
    func_177967_a(arg0: Internal.Direction_, arg1: number): Vec3i;
    func_177977_b(): Vec3i;
    func_177984_a(): Vec3i;
    static readonly field_239781_c_ : Internal.Codec<Vec3i>;
    static readonly field_177959_e : Vec3i;
    constructor(arg0: number, arg1: number, arg2: number);
    constructor(arg0: number, arg1: number, arg2: number);
}
type Vec3i_ = Vec3i;
declare interface NBT {
    static longArrayTag(v: number[]): Internal.INBT;
    static byteArrayTag(v: number[]): Internal.INBT;
    static b(v: number): Internal.INBT;
    static fromTag(t: Internal.INBT): any;
    static d(v: number): Internal.INBT;
    static listTag(): Internal.INBT;
    static f(v: number): Internal.INBT;
    static compoundTag(): Internal.INBT;
    static i(v: number): Internal.INBT;
    static toTag(v: any): Internal.INBT;
    static shortTag(v: number): Internal.INBT;
    static l(v: number): Internal.INBT;
    static floatTag(v: number): Internal.INBT;
    static s(v: number): Internal.INBT;
    static la(v: number[]): Internal.INBT;
    static longTag(v: number): Internal.INBT;
    static intArrayTag(v: number[]): Internal.INBT;
    static ia(v: number[]): Internal.INBT;
    static doubleTag(v: number): Internal.INBT;
    static intTag(v: number): Internal.INBT;
    static byteTag(v: number): Internal.INBT;
    static stringTag(v: string): Internal.INBT;
    static ba(v: number[]): Internal.INBT;
}
type NBT_ = NBT;
declare const NBT: NBT;
declare class ToolType extends Document.Object {
    static create(forgeName: string, fabricTag: (() => Internal.ITag<Internal.Item>)): ToolType;
    static byName(forgeName: string): ToolType;
    readonly fabricTag : (() => Internal.ITag<Internal.Item>);
    readonly forgeName : string;
    static readonly PICKAXE : ToolType;
    static readonly SHOVEL : ToolType;
    static readonly AXE : ToolType;
    static readonly HOE : ToolType;
}
type ToolType_ = ToolType;
declare class Result extends Document.Object {
    static success(): Result;
    static error(arg0: Internal.Text_): Result;
}
type Result_ = Result;
declare class block extends Document.Object {
    static getMaterial(): Internal.Map<string, Internal.MaterialJS>;
    static getBlock(id: ResourceLocation_): Internal.Block;
    static getTaggedIds(tag: ResourceLocation_): Internal.List<string>;
    static custom(predicate: Internal.BlockPredicate): Internal.BlockPredicate;
    static getTypeList(): Internal.List<string>;
    static getFacing(): Internal.Map<string, Internal.Direction>;
    static id(id: ResourceLocation_, properties: Internal.Map_<string, any>): Internal.BlockIDPredicate;
    static id(id: ResourceLocation_): Internal.BlockIDPredicate;
    static entity(id: ResourceLocation_): Internal.BlockEntityPredicate;
    get material(): Internal.Map<string, Internal.MaterialJS>;
    get typeList(): Internal.List<string>;
    get facing(): Internal.Map<string, Internal.Direction>;
    constructor();
}
type block_ = block;
declare class Rarity extends Document.Object {
    static readonly RARE : Rarity;
    static readonly EPIC : Rarity;
    static readonly UNCOMMON : Rarity;
    static readonly COMMON : Rarity;
    readonly rarity : Internal.Rarity;
}
type Rarity_ = Rarity;
declare interface uuid {
    static digits(sb: Internal.StringBuilder, val: number, digits: number): void;
    static toString(id: Internal.UUID): string;
    static fromString(o: any): Internal.UUID;
}
type uuid_ = uuid;
declare const uuid: uuid;
declare class Vec3 extends Document.Object implements Internal.IPosition {
    func_72444_a(arg0: Vec3): Vec3;
    func_216370_a(arg0: Internal.Direction$Axis_): number;
    static func_237490_a_(arg0: Vec3i, arg1: number): Vec3;
    static func_237491_b_(arg0: Vec3i): Vec3;
    static func_237492_c_(arg0: Vec3i): Vec3;
    func_237488_a_(arg0: Internal.IPosition, arg1: number): boolean;
    func_216371_e(): Vec3;
    func_216372_d(arg0: number, arg1: number, arg2: number): Vec3;
    func_197746_a(arg0: Internal.EnumSet<Internal.Direction$Axis>): Vec3;
    func_216369_h(arg0: Vec3): Vec3;
    func_242988_c(arg0: number): Vec3;
    func_178788_d(arg0: Vec3): Vec3;
    func_178787_e(arg0: Vec3): Vec3;
    func_178789_a(arg0: number): Vec3;
    hashCode(): number;
    func_178786_a(arg0: number, arg1: number, arg2: number): Vec3;
    func_178785_b(arg0: number): Vec3;
    func_72430_b(arg0: Vec3): number;
    func_72431_c(arg0: Vec3): Vec3;
    func_72432_b(): Vec3;
    func_186678_a(arg0: number): Vec3;
    func_72433_c(): number;
    func_82615_a(): number;
    static func_237487_a_(arg0: number): Vec3;
    func_72436_e(arg0: Vec3): number;
    static func_237489_a_(arg0: Vec3i): Vec3;
    func_72438_d(arg0: Vec3): number;
    func_82617_b(): number;
    func_82616_c(): number;
    static func_189986_a(arg0: number, arg1: number): Vec3;
    func_186679_c(arg0: number, arg1: number, arg2: number): number;
    func_189985_c(): number;
    static func_189984_a(arg0: Internal.Vector2f): Vec3;
    equals(arg0: any): boolean;
    toString(): string;
    func_72441_c(arg0: number, arg1: number, arg2: number): Vec3;
    readonly field_72450_a : number;
    static readonly field_186680_a : Vec3;
    readonly field_72448_b : number;
    readonly field_72449_c : number;
    constructor(arg0: number, arg1: number, arg2: number);
    constructor(arg0: Internal.Vector3f);
}
type Vec3_ = Vec3;
declare interface Facing {
    readonly ALL : {"east":Internal.Direction,"south":Internal.Direction,"north":Internal.Direction,"west":Internal.Direction,"up":Internal.Direction,"down":Internal.Direction};
    readonly DOWN : Internal.Direction;
    readonly south : Internal.Direction;
    readonly north : Internal.Direction;
    readonly WEST : Internal.Direction;
    readonly down : Internal.Direction;
    readonly east : Internal.Direction;
    readonly NORTH : Internal.Direction;
    readonly west : Internal.Direction;
    readonly up : Internal.Direction;
    readonly UP : Internal.Direction;
    readonly SOUTH : Internal.Direction;
    readonly EAST : Internal.Direction;
}
type Facing_ = Facing;
declare const Facing: Facing;
declare class text extends Document.Object {
    static green(text: any): Internal.Text;
    static string(text: any): Internal.Text;
    static darkGreen(text: any): Internal.Text;
    static yellow(text: any): Internal.Text;
    static black(text: any): Internal.Text;
    static lightPurple(text: any): Internal.Text;
    static darkBlue(text: any): Internal.Text;
    static translate(key: string): Internal.Text;
    static translate(key: string, objects: any[]): Internal.Text;
    static darkAqua(text: any): Internal.Text;
    static red(text: any): Internal.Text;
    static gold(text: any): Internal.Text;
    static aqua(text: any): Internal.Text;
    static gray(text: any): Internal.Text;
    static white(text: any): Internal.Text;
    static blue(text: any): Internal.Text;
    static darkRed(text: any): Internal.Text;
    static of(object: any): Internal.Text;
    static keybind(keybind: string): Internal.Text;
    static darkGray(text: any): Internal.Text;
    static darkPurple(text: any): Internal.Text;
    static join(separator: Internal.Text_, texts: Internal.Iterable<Internal.Text>): Internal.Text;
    constructor();
}
type text_ = text;
declare class utils extends Document.Object {
    static getSystemTime(): number;
    static getWorld(world: Internal.World): Internal.WorldJS;
    static listOrSelf(o: any): Internal.ListJS;
    static getStat(id: ResourceLocation_): Internal.Stat<ResourceLocation>;
    static parseDouble(object: any, def: number): number;
    static emptyList<T_>(): Internal.List<T_>;
    static getToolType(id: string): ToolType;
    static getRandom(): Internal.Random;
    static randomOf(random: Internal.Random, objects: Internal.Collection<any>): any;
    static emptyMap<K_, V_>(): Internal.Map<K_, V_>;
    static getClientWorld(): Internal.WorldJS;
    static copy(o: any): any;
    static id(id: ResourceLocation_): ResourceLocation;
    static id(namespace: string, path: string): ResourceLocation;
    static listOf(o: any): Internal.ListJS;
    static rollChestLoot(id: ResourceLocation_): Internal.ListJS;
    static rollChestLoot(id: ResourceLocation_, entity: Internal.EntityJS_): Internal.ListJS;
    static getServer(): Internal.ServerJS;
    static newCountingMap(): Internal.CountingMap;
    static createConsole(name: string): Internal.ConsoleJS;
    static newMap(): Internal.MapJS;
    static newList(): Internal.ListJS;
    static parseInt(object: any, def: number): number;
    static isWrapped(o: any): boolean;
    static regex(pattern: string, flags: number): Internal.Pattern;
    static regex(s: any): Internal.Pattern;
    static newRandom(seed: number): Internal.Random;
    static queueIO(runnable: (() => void)): void;
    static mapOf(o: any): Internal.MapJS;
    static getSound(id: ResourceLocation_): Internal.SoundEvent;
    get random(): Internal.Random;
    get server(): Internal.ServerJS;
    get clientWorld(): Internal.WorldJS;
    get systemTime(): number;
    constructor();
}
type utils_ = utils;
declare class BlockPos extends Vec3i {
    func_241872_a(arg0: Internal.Direction$Axis_, arg1: number): BlockPos;
    static func_239588_b_(arg0: BlockPos, arg1: number, arg2: number, arg3: number): Internal.Stream<BlockPos>;
    func_177971_a(arg0: Vec3i): BlockPos;
    static func_239583_a_(arg0: BlockPos, arg1: number, arg2: number, arg3: number): Internal.Iterable<BlockPos>;
    static func_239585_a_(arg0: Internal.Random, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.Iterable<BlockPos>;
    static func_239581_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<BlockPos>;
    static func_229383_a_(arg0: Internal.MutableBoundingBox): Internal.Stream<BlockPos>;
    func_177965_g(arg0: number): BlockPos;
    func_177968_d(): BlockPos;
    static func_218288_f(arg0: number): number;
    func_177985_f(arg0: number): BlockPos;
    static func_218287_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.Stream<BlockPos>;
    static func_218283_e(arg0: number): BlockPos;
    static func_191531_b(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.Iterable<BlockPos>;
    func_190942_a(arg0: Internal.Rotation_): BlockPos;
    func_177967_a(arg0: Internal.Direction_, arg1: number): BlockPos;
    func_177967_a(arg0: Internal.Direction_, arg1: number): Vec3i;
    func_177964_d(arg0: number): BlockPos;
    static func_218289_a(arg0: number, arg1: Internal.Direction_): number;
    static func_218281_b(arg0: BlockPos, arg1: BlockPos): Internal.Stream<BlockPos>;
    func_177984_a(): BlockPos;
    func_177984_a(): Vec3i;
    func_177963_a(arg0: number, arg1: number, arg2: number): BlockPos;
    static func_218282_d(arg0: number): number;
    func_177981_b(arg0: number): Vec3i;
    func_177981_b(arg0: number): BlockPos;
    func_177982_a(arg0: number, arg1: number, arg2: number): BlockPos;
    static func_218291_a(arg0: number, arg1: number, arg2: number, arg3: number): number;
    static func_218290_b(arg0: number): number;
    func_185334_h(): BlockPos;
    func_239590_i_(): Internal.BlockPos$Mutable;
    static func_239584_a_(arg0: BlockPos, arg1: number, arg2: number, arg3: ((arg0: BlockPos) => boolean)): Internal.Optional<BlockPos>;
    func_177979_c(arg0: number): Vec3i;
    func_177979_c(arg0: number): BlockPos;
    func_177955_d(arg0: Vec3i): BlockPos;
    func_177955_d(arg0: Vec3i): Vec3i;
    func_177976_e(): BlockPos;
    func_177978_c(): BlockPos;
    static func_243514_a(arg0: BlockPos, arg1: number, arg2: Internal.Direction_, arg3: Internal.Direction_): Internal.Iterable<Internal.BlockPos$Mutable>;
    func_177974_f(): BlockPos;
    func_177977_b(): BlockPos;
    func_177977_b(): Vec3i;
    static func_218278_a(arg0: BlockPos, arg1: BlockPos): Internal.Iterable<BlockPos>;
    func_177972_a(arg0: Internal.Direction_): BlockPos;
    static func_218276_a(arg0: number, arg1: number, arg2: number): number;
    static func_218274_c(arg0: number): number;
    func_177970_e(arg0: number): BlockPos;
    func_218275_a(): number;
    func_177973_b(arg0: Vec3i): BlockPos;
    static readonly field_177992_a : BlockPos;
    static readonly field_239578_a_ : Internal.Codec<BlockPos>;
    constructor(arg0: Vec3);
    constructor(arg0: Vec3i);
    constructor(arg0: number, arg1: number, arg2: number);
    constructor(arg0: number, arg1: number, arg2: number);
    constructor(arg0: Internal.IPosition);
}
type BlockPos_ = BlockPos;
declare class Platform extends Document.Object {
    static isDevelopmentEnvironment(): boolean;
    static isClientEnvironment(): boolean;
    static getName(): string;
    static getInfo(modID: string): Internal.PlatformWrapper$ModInfo;
    static getMods(): Internal.Map<string, Internal.PlatformWrapper$ModInfo>;
    static getList(): Internal.Set<string>;
    static isForge(): boolean;
    static getModVersion(): string;
    static isLoaded(modId: string): boolean;
    static getMcVersion(): string;
    static isFabric(): boolean;
    get mods(): Internal.Map<string, Internal.PlatformWrapper$ModInfo>;
    get modVersion(): string;
    get developmentEnvironment(): boolean;
    get forge(): boolean;
    get fabric(): boolean;
    get mcVersion(): string;
    get clientEnvironment(): boolean;
    get name(): string;
    get list(): Internal.Set<string>;
    constructor();
}
type Platform_ = Platform;
declare class Hand extends Internal.Enum<Hand> {
    static valueOf(arg0: string): Hand;
    static values(): Hand[];
    static readonly MAIN_HAND : Hand;
    static readonly OFF_HAND : Hand;
}
type Hand_ = "main_hand" | "off_hand" | Hand;
declare class CarvingGenerationStep extends Internal.Enum<CarvingGenerationStep> implements Internal.IStringSerializable {
    static func_236075_a_(arg0: string): CarvingGenerationStep;
    static valueOf(arg0: string): CarvingGenerationStep;
    func_222671_a(): string;
    func_176610_l(): string;
    static values(): CarvingGenerationStep[];
    static readonly LIQUID : CarvingGenerationStep;
    static readonly AIR : CarvingGenerationStep;
    static readonly field_236074_c_ : Internal.Codec<CarvingGenerationStep>;
}
type CarvingGenerationStep_ = "air" | "liquid" | CarvingGenerationStep;
declare class JsonIO extends Document.Object {
    static read(file: string): Internal.MapJS;
    static read(file: Internal.File): Internal.MapJS;
    static write(file: string, json: any): void;
    static write(file: Internal.File, json: any): void;
    constructor();
}
type JsonIO_ = JsonIO;
declare class fluid extends Document.Object {
    static lava(): Internal.FluidStackJS;
    static lava(amount: number): Internal.FluidStackJS;
    static getType(id: ResourceLocation_): Internal.Fluid;
    static of(o: Internal.FluidStackJS, amount: number): Internal.FluidStackJS;
    static of(o: Internal.FluidStackJS): Internal.FluidStackJS;
    static of(o: Internal.FluidStackJS, amount: number, nbt: Internal.CompoundNBT): Internal.FluidStackJS;
    static of(o: Internal.FluidStackJS, nbt: Internal.CompoundNBT): Internal.FluidStackJS;
    static getEmpty(): Internal.FluidStackJS;
    static exists(id: ResourceLocation_): boolean;
    static getTypes(): Internal.List<string>;
    static water(amount: number): Internal.FluidStackJS;
    static water(): Internal.FluidStackJS;
    static readonly LAVA_ID : ResourceLocation;
    static readonly WATER_ID : ResourceLocation;
    get types(): Internal.List<string>;
    get empty(): Internal.FluidStackJS;
    constructor();
}
type fluid_ = fluid;
/**
*/
declare class ResourceLocation extends Document.Object implements Internal.Comparable<ResourceLocation>, Internal.ResourceLocationAccess, Internal.SpecialEquality {
    handler$zzd000$hashCodeHeadInjected(arg0: Internal.CallbackInfoReturnable<any>): void;
    setPath(arg0: string): void;
    static func_208304_a(arg0: string): ResourceLocation;
    compareTo(arg0: ResourceLocation_): number;
    compareTo(arg0: any): number;
    static func_217855_b(arg0: string): boolean;
    handler$zzd000$hashCodeReturnInjected(arg0: Internal.CallbackInfoReturnable<any>): void;
    hashCode(): number;
    equals(arg0: any): boolean;
    compareNamespaced(arg0: ResourceLocation_): number;
    toString(): string;
    static func_195824_a(arg0: string): boolean;
    static func_195826_a(arg0: Internal.StringReader): ResourceLocation;
    static func_240909_b_(arg0: string): boolean;
    setNamespace(arg0: string): void;
    func_110623_a(): string;
    static func_195828_a(arg0: string, arg1: string): ResourceLocation;
    func_110624_b(): string;
    specialEquals(o: any, shallow: boolean): boolean;
    static readonly field_240908_a_ : Internal.Codec<ResourceLocation>;
    set path(arg0: string);
    set namespace(arg0: string);
    constructor(arg0: string, arg1: string);
    constructor(arg0: string);
}
type ResourceLocation_ = string | ResourceLocation;
declare class Item extends Document.Object {
    static clearListCache(): void;
    static getList(): Internal.ListJS;
    static of(in_: Internal.ItemStackJS_): Internal.ItemStackJS;
    static of(in_: Internal.ItemStackJS_, count: number, nbt: Internal.CompoundNBT): Internal.ItemStackJS;
    static of(in_: Internal.ItemStackJS_, count: number): Internal.ItemStackJS;
    static of(in_: Internal.ItemStackJS_, tag: Internal.CompoundNBT): Internal.ItemStackJS;
    static getEmpty(): Internal.ItemStackJS;
    static getTypeList(): Internal.ListJS;
    static getItem(id: ResourceLocation_): Internal.Item;
    static exists(id: ResourceLocation_): boolean;
    static isItem(o: any): boolean;
    static findGroup(id: string): Internal.ItemGroup;
    static withChance(in_: Internal.ItemStackJS_, c: number): Internal.ItemStackJS;
    static fireworks(properties: Internal.Map_<string, any>): Internal.FireworksJS;
    static withNBT(in_: Internal.ItemStackJS_, nbt: Internal.CompoundNBT): Internal.ItemStackJS;
    get typeList(): Internal.ListJS;
    get list(): Internal.ListJS;
    get empty(): Internal.ItemStackJS;
    constructor();
}
type Item_ = Item;
declare class JavaMath extends Document.Object {
    static multiplyFull(arg0: number, arg1: number): number;
    static copySign(arg0: number, arg1: number): number;
    static copySign(arg0: number, arg1: number): number;
    static log1p(arg0: number): number;
    static expm1(arg0: number): number;
    static cos(arg0: number): number;
    static rint(arg0: number): number;
    static atan(arg0: number): number;
    static ceilDiv(arg0: number, arg1: number): number;
    static ceilDiv(arg0: number, arg1: number): number;
    static ceilDiv(arg0: number, arg1: number): number;
    static nextUp(arg0: number): number;
    static nextUp(arg0: number): number;
    static sqrt(arg0: number): number;
    static ceilDivExact(arg0: number, arg1: number): number;
    static ceilDivExact(arg0: number, arg1: number): number;
    static decrementExact(arg0: number): number;
    static decrementExact(arg0: number): number;
    static absExact(arg0: number): number;
    static absExact(arg0: number): number;
    static exp(arg0: number): number;
    static clamp(arg0: number, arg1: number, arg2: number): number;
    static clamp(arg0: number, arg1: number, arg2: number): number;
    static clamp(arg0: number, arg1: number, arg2: number): number;
    static clamp(arg0: number, arg1: number, arg2: number): number;
    static atan2(arg0: number, arg1: number): number;
    static signum(arg0: number): number;
    static signum(arg0: number): number;
    static tan(arg0: number): number;
    static floorDivExact(arg0: number, arg1: number): number;
    static floorDivExact(arg0: number, arg1: number): number;
    static sinh(arg0: number): number;
    static toDegrees(arg0: number): number;
    static acos(arg0: number): number;
    static ceil(arg0: number): number;
    static divideExact(arg0: number, arg1: number): number;
    static divideExact(arg0: number, arg1: number): number;
    static getExponent(arg0: number): number;
    static getExponent(arg0: number): number;
    static addExact(arg0: number, arg1: number): number;
    static addExact(arg0: number, arg1: number): number;
    static multiplyHigh(arg0: number, arg1: number): number;
    static ulp(arg0: number): number;
    static ulp(arg0: number): number;
    static scalb(arg0: number, arg1: number): number;
    static scalb(arg0: number, arg1: number): number;
    static floorMod(arg0: number, arg1: number): number;
    static floorMod(arg0: number, arg1: number): number;
    static floorMod(arg0: number, arg1: number): number;
    static log(arg0: number): number;
    static log10(arg0: number): number;
    static nextAfter(arg0: number, arg1: number): number;
    static nextAfter(arg0: number, arg1: number): number;
    static multiplyExact(arg0: number, arg1: number): number;
    static multiplyExact(arg0: number, arg1: number): number;
    static multiplyExact(arg0: number, arg1: number): number;
    static cbrt(arg0: number): number;
    static random(): number;
    static tanh(arg0: number): number;
    static min(arg0: number, arg1: number): number;
    static min(arg0: number, arg1: number): number;
    static min(arg0: number, arg1: number): number;
    static min(arg0: number, arg1: number): number;
    static negateExact(arg0: number): number;
    static negateExact(arg0: number): number;
    static hypot(arg0: number, arg1: number): number;
    static pow(arg0: number, arg1: number): number;
    static sin(arg0: number): number;
    static unsignedMultiplyHigh(arg0: number, arg1: number): number;
    static floor(arg0: number): number;
    static subtractExact(arg0: number, arg1: number): number;
    static subtractExact(arg0: number, arg1: number): number;
    static ceilMod(arg0: number, arg1: number): number;
    static ceilMod(arg0: number, arg1: number): number;
    static ceilMod(arg0: number, arg1: number): number;
    static max(arg0: number, arg1: number): number;
    static max(arg0: number, arg1: number): number;
    static max(arg0: number, arg1: number): number;
    static max(arg0: number, arg1: number): number;
    static toIntExact(arg0: number): number;
    static nextDown(arg0: number): number;
    static nextDown(arg0: number): number;
    static toRadians(arg0: number): number;
    static cosh(arg0: number): number;
    static IEEEremainder(arg0: number, arg1: number): number;
    static abs(arg0: number): number;
    static abs(arg0: number): number;
    static abs(arg0: number): number;
    static abs(arg0: number): number;
    static round(arg0: number): number;
    static round(arg0: number): number;
    static floorDiv(arg0: number, arg1: number): number;
    static floorDiv(arg0: number, arg1: number): number;
    static floorDiv(arg0: number, arg1: number): number;
    static incrementExact(arg0: number): number;
    static incrementExact(arg0: number): number;
    static asin(arg0: number): number;
    static fma(arg0: number, arg1: number, arg2: number): number;
    static fma(arg0: number, arg1: number, arg2: number): number;
    static readonly E : 2.718281828459045;
    static readonly PI : 3.141592653589793;
    static readonly TAU : 6.283185307179586;
}
type JavaMath_ = JavaMath;
declare namespace com.mojang.bridge.game {
    interface Language {
        getName(): string;
        getRegion(): string;
        getCode(): string;
    }
    type Language_ = Language;
}
declare namespace net.minecraft.util {
    class Unit extends Internal.Enum<net.minecraft.util.Unit> {
        static valueOf(arg0: string): net.minecraft.util.Unit;
        static values(): net.minecraft.util.Unit[];
        static readonly INSTANCE : net.minecraft.util.Unit;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Unit_ = "instance" | Unit;
}
declare namespace fr.frinn.custommachinery.common.integration.kubejs.function_ {
    interface RecipeFunction extends Internal.Function<any, Result> {
    }
    type RecipeFunction_ = RecipeFunction;
}
declare namespace java_.nio.file {
    interface Path extends Internal.Comparable<java_.nio.file.Path>, Internal.Iterable<java_.nio.file.Path>, Internal.Watchable {
        getNameCount(): number;
        getParent(): java_.nio.file.Path;
        getName(arg0: number): java_.nio.file.Path;
        resolve(arg0: java_.nio.file.Path): java_.nio.file.Path;
        resolve(arg0: string): java_.nio.file.Path;
        resolveSibling(arg0: java_.nio.file.Path): java_.nio.file.Path;
        resolveSibling(arg0: string): java_.nio.file.Path;
        toUri(): Internal.URI;
        subpath(arg0: number, arg1: number): java_.nio.file.Path;
        toAbsolutePath(): java_.nio.file.Path;
        getFileSystem(): Internal.FileSystem;
        compareTo(arg0: java_.nio.file.Path): number;
        compareTo(arg0: any): number;
        iterator(): Internal.Iterator<java_.nio.file.Path>;
        hashCode(): number;
        normalize(): java_.nio.file.Path;
        equals(arg0: any): boolean;
        toFile(): Internal.File;
        toRealPath(arg0: any[]): java_.nio.file.Path;
        endsWith(arg0: string): boolean;
        endsWith(arg0: java_.nio.file.Path): boolean;
        isAbsolute(): boolean;
        toString(): string;
        relativize(arg0: java_.nio.file.Path): java_.nio.file.Path;
        getRoot(): java_.nio.file.Path;
        getFileName(): java_.nio.file.Path;
        register(arg0: Internal.WatchService, arg1: Internal.WatchEvent$Kind<any>[], arg2: any[]): Internal.WatchKey;
        register(arg0: Internal.WatchService, arg1: Internal.WatchEvent$Kind<any>[]): Internal.WatchKey;
        startsWith(arg0: string): boolean;
        startsWith(arg0: java_.nio.file.Path): boolean;
    }
    type Path_ = Path;
}
declare namespace it.unimi.dsi.fastutil {
    interface Function <K, V> extends Internal.Function<K, V> {
        size(): number;
        apply(arg0: K): V;
        containsKey(arg0: any): boolean;
        get(arg0: any): V;
        clear(): void;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
    }
    type Function_<K, V> = ((arg0: any) => V) | Function<K, V>;
}
declare namespace Internal {
    class TextureManager extends Document.Object implements Internal.IFutureReloadListener, Internal.ITickable, Internal.AutoCloseable {
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor, arg5: Internal.Executor): Internal.CompletableFuture<void>;
        func_215268_a(arg0: ResourceLocation_, arg1: Internal.Executor): Internal.CompletableFuture<void>;
        func_229263_a_(arg0: ResourceLocation_, arg1: Internal.Texture): void;
        func_110577_a(arg0: ResourceLocation_): void;
        close(): void;
        func_110578_a(arg0: string, arg1: Internal.DynamicTexture): ResourceLocation;
        func_110550_d(): void;
        func_147645_c(arg0: ResourceLocation_): void;
        func_229267_b_(arg0: ResourceLocation_): Internal.Texture;
        static readonly field_194008_a : ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TextureManager_ = TextureManager;
    class AtomicReferenceArray <E> extends Document.Object implements Internal.Serializable {
        setPlain(arg0: number, arg1: E): void;
        weakCompareAndSetPlain(arg0: number, arg1: E, arg2: E): boolean;
        set(arg0: number, arg1: E): void;
        weakCompareAndSetRelease(arg0: number, arg1: E, arg2: E): boolean;
        weakCompareAndSet(arg0: number, arg1: E, arg2: E): boolean;
        compareAndExchange(arg0: number, arg1: E, arg2: E): E;
        getAcquire(arg0: number): E;
        length(): number;
        updateAndGet(arg0: number, arg1: Internal.UnaryOperator<E>): E;
        setOpaque(arg0: number, arg1: E): void;
        getPlain(arg0: number): E;
        compareAndExchangeRelease(arg0: number, arg1: E, arg2: E): E;
        getOpaque(arg0: number): E;
        compareAndSet(arg0: number, arg1: E, arg2: E): boolean;
        compareAndExchangeAcquire(arg0: number, arg1: E, arg2: E): E;
        get(arg0: number): E;
        lazySet(arg0: number, arg1: E): void;
        setRelease(arg0: number, arg1: E): void;
        toString(): string;
        getAndUpdate(arg0: number, arg1: Internal.UnaryOperator<E>): E;
        getAndSet(arg0: number, arg1: E): E;
        weakCompareAndSetAcquire(arg0: number, arg1: E, arg2: E): boolean;
        getAndAccumulate(arg0: number, arg1: E, arg2: Internal.BinaryOperator<E>): E;
        accumulateAndGet(arg0: number, arg1: E, arg2: Internal.BinaryOperator<E>): E;
        weakCompareAndSetVolatile(arg0: number, arg1: E, arg2: E): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AtomicReferenceArray_<E> = AtomicReferenceArray<E>;
    interface IIngredientHelper <V> {
        getMatch(arg0: Internal.Iterable<V>, arg1: V, arg2: Internal.UidContext_): V;
        getMatch(arg0: Internal.Iterable<V>, arg1: V): V;
        getDisplayModId(arg0: V): string;
        getTags(arg0: V): Internal.Collection<ResourceLocation>;
        getErrorInfo(arg0: V): string;
        isValidIngredient(arg0: V): boolean;
        getCreativeTabNames(arg0: V): Internal.Collection<string>;
        isIngredientOnServer(arg0: V): boolean;
        copyIngredient(arg0: V): V;
        getUniqueId(arg0: V, arg1: Internal.UidContext_): string;
        getUniqueId(arg0: V): string;
        normalizeIngredient(arg0: V): V;
        getColors(arg0: V): Internal.Iterable<number>;
        getWildcardId(arg0: V): string;
        getResourceId(arg0: V): string;
        getDisplayName(arg0: V): string;
        getModId(arg0: V): string;
        translateFocus(arg0: Internal.IFocus<V>, arg1: Internal.IFocusFactory): Internal.IFocus<any>;
        getCheatItemStack(arg0: V): Internal.ItemStack;
    }
    type IIngredientHelper_<V> = IIngredientHelper<V>;
    abstract class DoubleBuffer extends Internal.Buffer implements Internal.Comparable<Internal.DoubleBuffer> {
        hasArray(): boolean;
        compact(): Internal.DoubleBuffer;
        clear(): Internal.DoubleBuffer;
        clear(): Internal.Buffer;
        duplicate(): Internal.DoubleBuffer;
        duplicate(): Internal.Buffer;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.DoubleBuffer): number;
        asReadOnlyBuffer(): Internal.DoubleBuffer;
        put(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.DoubleBuffer;
        put(arg0: number, arg1: number[]): Internal.DoubleBuffer;
        put(arg0: number, arg1: Internal.DoubleBuffer, arg2: number, arg3: number): Internal.DoubleBuffer;
        put(arg0: number[]): Internal.DoubleBuffer;
        put(arg0: Internal.DoubleBuffer): Internal.DoubleBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.DoubleBuffer;
        put(arg0: number): Internal.DoubleBuffer;
        put(arg0: number, arg1: number): Internal.DoubleBuffer;
        static allocate(arg0: number): Internal.DoubleBuffer;
        rewind(): Internal.DoubleBuffer;
        rewind(): Internal.Buffer;
        slice(): Internal.DoubleBuffer;
        slice(): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.DoubleBuffer;
        array(): number[];
        array(): any;
        hashCode(): number;
        mismatch(arg0: Internal.DoubleBuffer): number;
        equals(arg0: any): boolean;
        get(arg0: number, arg1: number[]): Internal.DoubleBuffer;
        get(arg0: number): number;
        get(arg0: number[], arg1: number, arg2: number): Internal.DoubleBuffer;
        get(arg0: number[]): Internal.DoubleBuffer;
        get(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.DoubleBuffer;
        get(): number;
        limit(arg0: number): Internal.Buffer;
        limit(arg0: number): Internal.DoubleBuffer;
        arrayOffset(): number;
        reset(): Internal.Buffer;
        reset(): Internal.DoubleBuffer;
        toString(): string;
        position(arg0: number): Internal.DoubleBuffer;
        position(arg0: number): Internal.Buffer;
        flip(): Internal.Buffer;
        flip(): Internal.DoubleBuffer;
        isDirect(): boolean;
        static wrap(arg0: number[], arg1: number, arg2: number): Internal.DoubleBuffer;
        static wrap(arg0: number[]): Internal.DoubleBuffer;
        mark(): Internal.DoubleBuffer;
        mark(): Internal.Buffer;
        order(): Internal.ByteOrder;
        get direct(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DoubleBuffer_ = DoubleBuffer;
    class SPlaySoundEffectPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_149210_f(): number;
        func_149211_e(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149209_h(): number;
        func_186978_a(): Internal.SoundEvent;
        func_186977_b(): Internal.SoundCategory;
        func_149208_g(): number;
        func_149207_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlaySoundEffectPacket_ = SPlaySoundEffectPacket;
    class PandaEntity$Gene extends Internal.Enum<Internal.PandaEntity$Gene> {
        func_221100_b(): string;
        static valueOf(arg0: string): Internal.PandaEntity$Gene;
        static values(): Internal.PandaEntity$Gene[];
        func_221107_c(): boolean;
        static func_221108_a(arg0: string): Internal.PandaEntity$Gene;
        static func_221105_a(arg0: number): Internal.PandaEntity$Gene;
        func_221106_a(): number;
        static func_221104_a(arg0: Internal.Random): Internal.PandaEntity$Gene;
        static readonly WEAK : Internal.PandaEntity$Gene;
        static readonly WORRIED : Internal.PandaEntity$Gene;
        static readonly LAZY : Internal.PandaEntity$Gene;
        static readonly PLAYFUL : Internal.PandaEntity$Gene;
        static readonly AGGRESSIVE : Internal.PandaEntity$Gene;
        static readonly NORMAL : Internal.PandaEntity$Gene;
        static readonly BROWN : Internal.PandaEntity$Gene;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PandaEntity$Gene_ = "normal" | "lazy" | "worried" | "playful" | "brown" | "weak" | "aggressive" | PandaEntity$Gene;
    interface TemporalAccessor {
        getLong(arg0: Internal.TemporalField): number;
        query<R>(arg0: ((arg0: Internal.TemporalAccessor) => R)): R;
        get(arg0: Internal.TemporalField): number;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        isSupported(arg0: Internal.TemporalField): boolean;
    }
    type TemporalAccessor_ = TemporalAccessor;
    class SSpawnMovingSoundEffectPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218760_c(): Internal.SoundCategory;
        func_218763_b(): Internal.SoundEvent;
        func_218761_f(): number;
        func_218762_d(): number;
        func_218764_e(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SSpawnMovingSoundEffectPacket_ = SSpawnMovingSoundEffectPacket;
    class Rarity extends Internal.Enum<Internal.Rarity> implements Internal.IExtensibleEnum {
        static valueOf(arg0: string): Internal.Rarity;
        static values(): Internal.Rarity[];
        static create(arg0: string, arg1: Internal.TextFormatting_): Internal.Rarity;
        readonly field_77937_e : Internal.TextFormatting;
        static readonly RARE : Internal.Rarity;
        static readonly EPIC : Internal.Rarity;
        static readonly UNCOMMON : Internal.Rarity;
        static readonly COMMON : Internal.Rarity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Rarity_ = "common" | "uncommon" | "rare" | "epic" | Rarity;
    class SheepEntity extends Internal.AnimalEntity implements Internal.IShearable, Internal.IForgeShearable {
        func_175509_cj(): Internal.DyeColor;
        func_230262_K__(): boolean;
        onSheared(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack, arg2: Internal.World, arg3: BlockPos, arg4: number): Internal.List<Internal.ItemStack>;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70103_a(arg0: number): void;
        func_70615_aA(): void;
        func_184647_J(): ResourceLocation;
        func_230263_a_(arg0: Internal.SoundCategory_): void;
        func_70893_e(arg0: boolean): void;
        isShearable(arg0: Internal.ItemStack, arg1: Internal.World, arg2: BlockPos): boolean;
        func_70890_k(arg0: number): number;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        static func_234225_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70636_d(): void;
        static func_175510_a(arg0: Internal.Random): Internal.DyeColor;
        func_70894_j(arg0: number): number;
        static func_175513_a(arg0: Internal.DyeColor_): number[];
        func_70892_o(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_175512_b(arg0: Internal.DyeColor_): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.SheepEntity;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SheepEntity_ = SheepEntity;
    interface ITickable {
        func_110550_d(): void;
    }
    type ITickable_ = ITickable;
    class SUpdateChunkPositionPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218754_c(): number;
        func_218755_b(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SUpdateChunkPositionPacket_ = SUpdateChunkPositionPacket;
    class KeyBinding extends Document.Object implements Internal.Comparable<Internal.KeyBinding>, Internal.IForgeKeybinding {
        func_197979_b(arg0: Internal.InputMappings$Input): void;
        func_197977_i(): Internal.InputMappings$Input;
        func_151464_g(): string;
        func_151466_e(): string;
        func_151468_f(): boolean;
        static func_186704_a(): void;
        getKeyModifier(): Internal.KeyModifier;
        compareTo(arg0: Internal.KeyBinding): number;
        compareTo(arg0: any): number;
        setKeyModifierAndCode(arg0: Internal.KeyModifier_, arg1: Internal.InputMappings$Input): void;
        func_197976_a(arg0: number, arg1: number): boolean;
        setKeyConflictContext(arg0: Internal.IKeyConflictContext): void;
        getKeyModifierDefault(): Internal.KeyModifier;
        static func_197980_a(arg0: Internal.InputMappings$Input, arg1: boolean): void;
        getKeyConflictContext(): Internal.IKeyConflictContext;
        func_238171_j_(): Internal.ITextComponent;
        getKey(): Internal.InputMappings$Input;
        func_197986_j(): boolean;
        func_197985_l(): boolean;
        func_197982_m(): string;
        static func_193626_b(arg0: string): Internal.Supplier<Internal.ITextComponent>;
        func_197983_b(arg0: Internal.KeyBinding): boolean;
        func_197984_a(arg0: number): boolean;
        static func_197981_a(arg0: Internal.InputMappings$Input): void;
        func_151470_d(): boolean;
        static func_74506_a(): void;
        func_225593_a_(arg0: boolean): void;
        static func_74508_b(): void;
        get keyModifier(): Internal.KeyModifier;
        get keyConflictContext(): Internal.IKeyConflictContext;
        get keyModifierDefault(): Internal.KeyModifier;
        get key(): Internal.InputMappings$Input;
        set keyConflictContext(arg0: Internal.IKeyConflictContext);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type KeyBinding_ = KeyBinding;
    abstract class AbstractTrunkPlacer extends Document.Object {
        func_230382_a_(arg0: Internal.IWorldGenerationReader, arg1: Internal.Random, arg2: number, arg3: BlockPos, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox, arg6: Internal.BaseTreeFeatureConfig): Internal.List<Internal.FoliagePlacer$Foliage>;
        func_236917_a_(arg0: Internal.Random): number;
        static readonly field_236905_c_ : Internal.Codec<Internal.AbstractTrunkPlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractTrunkPlacer_ = AbstractTrunkPlacer;
    abstract class FileChannel extends Internal.AbstractInterruptibleChannel implements Internal.SeekableByteChannel, Internal.GatheringByteChannel, Internal.ScatteringByteChannel {
        read(arg0: Internal.ByteBuffer, arg1: number): number;
        read(arg0: Internal.ByteBuffer): number;
        read(arg0: Internal.ByteBuffer[], arg1: number, arg2: number): number;
        read(arg0: Internal.ByteBuffer[]): number;
        transferFrom(arg0: Internal.ReadableByteChannel, arg1: number, arg2: number): number;
        truncate(arg0: number): Internal.SeekableByteChannel;
        truncate(arg0: number): Internal.FileChannel;
        size(): number;
        lock(arg0: number, arg1: number, arg2: boolean): Internal.FileLock;
        lock(): Internal.FileLock;
        force(arg0: boolean): void;
        position(arg0: number): Internal.FileChannel;
        position(arg0: number): Internal.SeekableByteChannel;
        position(): number;
        transferTo(arg0: number, arg1: number, arg2: Internal.WritableByteChannel): number;
        write(arg0: Internal.ByteBuffer, arg1: number): number;
        write(arg0: Internal.ByteBuffer): number;
        write(arg0: Internal.ByteBuffer[], arg1: number, arg2: number): number;
        write(arg0: Internal.ByteBuffer[]): number;
        map(arg0: Internal.FileChannel$MapMode, arg1: number, arg2: number): Internal.MappedByteBuffer;
        map(arg0: Internal.FileChannel$MapMode, arg1: number, arg2: number, arg3: Internal.Arena): Internal.MemorySegment;
        tryLock(): Internal.FileLock;
        tryLock(arg0: number, arg1: number, arg2: boolean): Internal.FileLock;
        static open(arg0: java_.nio.file.Path, arg1: Internal.OpenOption[]): Internal.FileChannel;
        static open(arg0: java_.nio.file.Path, arg1: Internal.Set<Internal.OpenOption>, arg2: any[]): Internal.FileChannel;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FileChannel_ = FileChannel;
    abstract class AbstractMap <K, V> extends Document.Object implements Internal.Map<K, V> {
        entrySet(): Internal.Set<Internal.Map$Entry<K, V>>;
        containsKey(arg0: any): boolean;
        values(): Internal.Collection<V>;
        isEmpty(): boolean;
        clear(): void;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        size(): number;
        hashCode(): number;
        putAll(arg0: Internal.Map_<K, V>): void;
        equals(arg0: any): boolean;
        get(arg0: any): V;
        toString(): string;
        keySet(): Internal.Set<K>;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractMap_<K, V> = AbstractMap<K, V>;
    class Rotation extends Internal.Enum<Internal.Rotation> {
        static func_222467_b(arg0: Internal.Random): Internal.List<Internal.Rotation>;
        static valueOf(arg0: string): Internal.Rotation;
        static values(): Internal.Rotation[];
        func_235574_a_(): Internal.Orientation;
        func_185833_a(arg0: number, arg1: number): number;
        func_185830_a(arg0: Internal.Rotation_): Internal.Rotation;
        static func_222466_a(arg0: Internal.Random): Internal.Rotation;
        func_185831_a(arg0: Internal.Direction_): Internal.Direction;
        static readonly COUNTERCLOCKWISE_90 : Internal.Rotation;
        static readonly CLOCKWISE_90 : Internal.Rotation;
        static readonly CLOCKWISE_180 : Internal.Rotation;
        static readonly NONE : Internal.Rotation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Rotation_ = "none" | "clockwise_90" | "clockwise_180" | "counterclockwise_90" | Rotation;
    class SUpdateBossInfoPacket$Operation extends Internal.Enum<Internal.SUpdateBossInfoPacket$Operation> {
        static valueOf(arg0: string): Internal.SUpdateBossInfoPacket$Operation;
        static values(): Internal.SUpdateBossInfoPacket$Operation[];
        static readonly UPDATE_PROPERTIES : Internal.SUpdateBossInfoPacket$Operation;
        static readonly ADD : Internal.SUpdateBossInfoPacket$Operation;
        static readonly UPDATE_PCT : Internal.SUpdateBossInfoPacket$Operation;
        static readonly UPDATE_NAME : Internal.SUpdateBossInfoPacket$Operation;
        static readonly UPDATE_STYLE : Internal.SUpdateBossInfoPacket$Operation;
        static readonly REMOVE : Internal.SUpdateBossInfoPacket$Operation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SUpdateBossInfoPacket$Operation_ = "add" | "remove" | "update_pct" | "update_name" | "update_style" | "update_properties" | SUpdateBossInfoPacket$Operation;
    interface VoxelShapePart$ILineConsumer {
        consume(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
    }
    type VoxelShapePart$ILineConsumer_ = VoxelShapePart$ILineConsumer;
    abstract class MappedByteBuffer extends Internal.ByteBuffer {
        compact(): Internal.MappedByteBuffer;
        compact(): Internal.ByteBuffer;
        clear(): Internal.MappedByteBuffer;
        clear(): Internal.ByteBuffer;
        clear(): Internal.Buffer;
        duplicate(): Internal.MappedByteBuffer;
        duplicate(): Internal.Buffer;
        duplicate(): Internal.ByteBuffer;
        isLoaded(): boolean;
        rewind(): Internal.MappedByteBuffer;
        rewind(): Internal.Buffer;
        rewind(): Internal.ByteBuffer;
        load(): Internal.MappedByteBuffer;
        slice(arg0: number, arg1: number): Internal.ByteBuffer;
        slice(arg0: number, arg1: number): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.MappedByteBuffer;
        slice(): Internal.ByteBuffer;
        slice(): Internal.MappedByteBuffer;
        slice(): Internal.Buffer;
        limit(arg0: number): Internal.ByteBuffer;
        limit(arg0: number): Internal.Buffer;
        limit(arg0: number): Internal.MappedByteBuffer;
        reset(): Internal.ByteBuffer;
        reset(): Internal.Buffer;
        reset(): Internal.MappedByteBuffer;
        force(): Internal.MappedByteBuffer;
        force(arg0: number, arg1: number): Internal.MappedByteBuffer;
        position(arg0: number): Internal.ByteBuffer;
        position(arg0: number): Internal.Buffer;
        position(arg0: number): Internal.MappedByteBuffer;
        flip(): Internal.Buffer;
        flip(): Internal.ByteBuffer;
        flip(): Internal.MappedByteBuffer;
        mark(): Internal.MappedByteBuffer;
        mark(): Internal.ByteBuffer;
        mark(): Internal.Buffer;
        get loaded(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MappedByteBuffer_ = MappedByteBuffer;
    class OpticParts <A, B> extends Document.Object {
        bounds(): Internal.Set<Internal.TypeToken<Internal.K1>>;
        optic(): Internal.Optic<any, any, any, A, B>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OpticParts_<A, B> = OpticParts<A, B>;
    interface IIngredients {
        setInputs<T>(arg0: Internal.IIngredientType<T>, arg1: Internal.List<T>): void;
        setOutputs<T>(arg0: Internal.IIngredientType<T>, arg1: Internal.List<T>): void;
        getOutputs<T>(arg0: Internal.IIngredientType<T>): Internal.List<Internal.List<T>>;
        setOutputLists<T>(arg0: Internal.IIngredientType<T>, arg1: Internal.List<Internal.List<T>>): void;
        setInputIngredients(arg0: Internal.List<Internal.Ingredient>): void;
        setInputLists<T>(arg0: Internal.IIngredientType<T>, arg1: Internal.List<Internal.List<T>>): void;
        getInputs<T>(arg0: Internal.IIngredientType<T>): Internal.List<Internal.List<T>>;
        setOutput<T>(arg0: Internal.IIngredientType<T>, arg1: T): void;
        setInput<T>(arg0: Internal.IIngredientType<T>, arg1: T): void;
    }
    type IIngredients_ = IIngredients;
    class PointOfInterest extends Document.Object {
        func_218265_d(): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        func_218263_e(): boolean;
        func_218261_f(): BlockPos;
        static func_234150_a_(arg0: (() => void)): Internal.Codec<Internal.PointOfInterest>;
        func_218260_g(): Internal.PointOfInterestType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PointOfInterest_ = PointOfInterest;
    class StatType <T> extends Internal.ForgeRegistryEntry<Internal.StatType<any>> implements Internal.Iterable<Internal.Stat<T>> {
        func_199080_a(): Internal.Registry<Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>>;
        iterator(): Internal.Iterator<Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>>>;
        func_199076_b(arg0: Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>): Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>>;
        func_242170_d(): Internal.ITextComponent;
        func_199077_a(arg0: Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>, arg1: Internal.IStatFormatter): Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>>;
        func_199078_c(): string;
        func_199079_a(arg0: Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StatType_<T> = StatType<T>;
    interface IServerPlayNetHandler extends Internal.INetHandler {
        func_230549_a_(arg0: Internal.CJigsawBlockGeneratePacket): void;
        func_211525_a(arg0: Internal.CQueryTileEntityNBTPacket): void;
        func_211526_a(arg0: Internal.CQueryEntityNBTPacket): void;
        func_184339_a(arg0: Internal.CConfirmTeleportPacket): void;
        func_184338_a(arg0: Internal.CMoveVehiclePacket): void;
        func_184337_a(arg0: Internal.CPlayerTryUseItemOnBlockPacket): void;
        func_175087_a(arg0: Internal.CAnimateHandPacket): void;
        func_147356_a(arg0: Internal.CCloseWindowPacket): void;
        func_175086_a(arg0: Internal.CResourcePackStatusPacket): void;
        func_147355_a(arg0: Internal.CHeldItemChangePacket): void;
        func_147358_a(arg0: Internal.CInputPacket): void;
        func_147357_a(arg0: Internal.CEntityActionPacket): void;
        func_175088_a(arg0: Internal.CSpectatePacket): void;
        func_147352_a(arg0: Internal.CClientSettingsPacket): void;
        func_147351_a(arg0: Internal.CClickWindowPacket): void;
        func_147354_a(arg0: Internal.CChatMessagePacket): void;
        func_147353_a(arg0: Internal.CKeepAlivePacket): void;
        func_184340_a(arg0: Internal.CSteerBoatPacket): void;
        func_147349_a(arg0: Internal.CCustomPayloadPacket): void;
        func_147348_a(arg0: Internal.CPlayerAbilitiesPacket): void;
        func_210158_a(arg0: Internal.CUpdateMinecartCommandBlockPacket): void;
        func_210159_a(arg0: Internal.CSelectTradePacket): void;
        func_194308_a(arg0: Internal.CPlaceRecipePacket): void;
        func_217263_a(arg0: Internal.CSetDifficultyPacket): void;
        func_191984_a(arg0: Internal.CMarkRecipeSeenPacket): void;
        func_217261_a(arg0: Internal.CLockDifficultyPacket): void;
        func_217262_a(arg0: Internal.CUpdateJigsawBlockPacket): void;
        func_210156_a(arg0: Internal.CEditBookPacket): void;
        func_147345_a(arg0: Internal.CPlayerDiggingPacket): void;
        func_210157_a(arg0: Internal.CUpdateStructureBlockPacket): void;
        func_195518_a(arg0: Internal.CTabCompletePacket): void;
        func_147344_a(arg0: Internal.CCreativeInventoryActionPacket): void;
        func_147347_a(arg0: Internal.CPlayerPacket): void;
        func_210154_a(arg0: Internal.CUpdateBeaconPacket): void;
        func_210155_a(arg0: Internal.CRenameItemPacket): void;
        func_147346_a(arg0: Internal.CPlayerTryUseItemPacket): void;
        func_194027_a(arg0: Internal.CSeenAdvancementsPacket): void;
        func_210152_a(arg0: Internal.CPickItemPacket): void;
        func_210153_a(arg0: Internal.CUpdateCommandBlockPacket): void;
        func_147340_a(arg0: Internal.CUseEntityPacket): void;
        func_147343_a(arg0: Internal.CUpdateSignPacket): void;
        func_147342_a(arg0: Internal.CClientStatusPacket): void;
        func_147338_a(arg0: Internal.CEnchantItemPacket): void;
        func_147339_a(arg0: Internal.CConfirmTransactionPacket): void;
        func_241831_a(arg0: Internal.CUpdateRecipeBookStatusPacket): void;
    }
    type IServerPlayNetHandler_ = IServerPlayNetHandler;
    interface DoubleBidirectionalIterator extends Internal.DoubleIterator, Internal.ObjectBidirectionalIterator<number> {
        previous(): any;
        previous(): number;
        previousDouble(): number;
        back(arg0: number): number;
        skip(arg0: number): number;
    }
    type DoubleBidirectionalIterator_ = DoubleBidirectionalIterator;
    interface Decoder <A> {
        simple(): Internal.Decoder$Simple<A>;
        terminal(): Internal.Decoder$Terminal<A>;
        parse<T>(arg0: Internal.DynamicOps<T>, arg1: T): Internal.DataResult<A>;
        parse<T>(arg0: Internal.Dynamic<T>): Internal.DataResult<A>;
        decode<T>(arg0: Internal.DynamicOps<T>, arg1: T): Internal.DataResult<com.mojang.datafixers.util.Pair<A, T>>;
        decode<T>(arg0: Internal.Dynamic<T>): Internal.DataResult<com.mojang.datafixers.util.Pair<A, T>>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Decoder<A>;
        promotePartial(arg0: ((arg0: string) => void)): Internal.Decoder<A>;
        flatMap<B>(arg0: ((arg0: A) => Internal.DataResult<B>)): Internal.Decoder<B>;
        boxed(): Internal.Decoder$Boxed<A>;
        fieldOf(arg0: string): Internal.MapDecoder<A>;
        map<B>(arg0: ((arg0: A) => B)): Internal.Decoder<B>;
    }
    type Decoder_<A> = Decoder<A>;
    interface Int2ObjectFunction <V> extends it.unimi.dsi.fastutil.Function<number, V>, Internal.IntFunction<V> {
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        apply(arg0: number): V;
        containsKey(arg0: any): boolean;
        containsKey(arg0: number): boolean;
        get(arg0: any): V;
        get(arg0: number): V;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        put(arg0: number, arg1: V): V;
        remove(arg0: number): V;
        remove(arg0: any): V;
    }
    type Int2ObjectFunction_<V> = ((arg0: number) => V) | Int2ObjectFunction<V>;
    class LivingAttackEvent extends Internal.LivingEvent {
        getListenerList(): Internal.ListenerList;
        getSource(): Internal.DamageSource;
        isCancelable(): boolean;
        getAmount(): number;
        get amount(): number;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get source(): Internal.DamageSource;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingAttackEvent_ = LivingAttackEvent;
    class RegisterGUIHandlersEventJS extends Internal.JEIEventJS {
        readonly data : Internal.IGuiHandlerRegistration;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegisterGUIHandlersEventJS_ = RegisterGUIHandlersEventJS;
    interface Serializable {
    }
    type Serializable_ = Serializable;
    interface IParticleRenderType {
        func_217600_a(arg0: Internal.BufferBuilder, arg1: Internal.TextureManager): void;
        func_217599_a(arg0: Internal.Tessellator): void;
    }
    type IParticleRenderType_ = IParticleRenderType;
    class SPlayerListHeaderFooterPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179700_a(): Internal.ITextComponent;
        func_179701_b(): Internal.ITextComponent;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlayerListHeaderFooterPacket_ = SPlayerListHeaderFooterPacket;
    interface IProfiler {
        func_219894_a(): void;
        func_230035_c_(arg0: string): void;
        func_230036_c_(arg0: (() => string)): void;
        func_76319_b(): void;
        func_194340_a(arg0: (() => string)): void;
        func_76320_a(arg0: string): void;
        func_219897_b(): void;
        func_219895_b(arg0: string): void;
        func_194339_b(arg0: (() => string)): void;
    }
    type IProfiler_ = IProfiler;
    interface BiomeGenerationSettingsBuilderAccessor {
        getFeatures(): Internal.List<Internal.List<Internal.Supplier<Internal.ConfiguredFeature<any, any>>>>;
    }
    type BiomeGenerationSettingsBuilderAccessor_ = BiomeGenerationSettingsBuilderAccessor;
    class Collector$Characteristics extends Internal.Enum<Internal.Collector$Characteristics> {
        static valueOf(arg0: string): Internal.Collector$Characteristics;
        static values(): Internal.Collector$Characteristics[];
        static readonly IDENTITY_FINISH : Internal.Collector$Characteristics;
        static readonly UNORDERED : Internal.Collector$Characteristics;
        static readonly CONCURRENT : Internal.Collector$Characteristics;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Collector$Characteristics_ = "concurrent" | "unordered" | "identity_finish" | Collector$Characteristics;
    interface LongFunction <R> {
        apply(arg0: number): R;
    }
    type LongFunction_<R> = ((arg0: number) => R) | LongFunction<R>;
    class ZombifiedPiglinEntity extends Internal.ZombieEntity implements Internal.IAngerable {
        func_230256_F__(): number;
        func_70033_W(): number;
        static func_234351_b_(arg0: Internal.EntityType<Internal.ZombifiedPiglinEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_230258_H__(): void;
        static func_234352_eU_(): Internal.AttributeModifierMap$MutableAttribute;
        func_230260_a__(arg0: number): void;
        func_70624_b(arg0: Internal.LivingEntity): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_205019_a(arg0: Internal.IWorldReader): boolean;
        func_230292_f_(arg0: Internal.PlayerEntity): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_230257_G__(): Internal.UUID;
        func_230259_a_(arg0: Internal.UUID): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZombifiedPiglinEntity_ = ZombifiedPiglinEntity;
    class TickEvent$ServerTickEvent extends Internal.TickEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TickEvent$ServerTickEvent_ = TickEvent$ServerTickEvent;
    class Int2IntOpenHashMap extends Internal.AbstractInt2IntMap implements Internal.Serializable, Internal.Cloneable, Internal.Hash {
        getOrDefault(arg0: number, arg1: number): number;
        computeIfAbsentNullable(arg0: number, arg1: ((arg0: number) => number)): number;
        containsKey(arg0: number): boolean;
        computeIfAbsent(arg0: number, arg1: ((arg0: number) => number)): number;
        values(): Internal.IntCollection;
        values(): Internal.Collection<any>;
        replace(arg0: number, arg1: number, arg2: number): boolean;
        replace(arg0: number, arg1: number): number;
        isEmpty(): boolean;
        clear(): void;
        containsValue(arg0: number): boolean;
        put(arg0: number, arg1: number): number;
        remove(arg0: number): number;
        remove(arg0: number, arg1: number): boolean;
        int2IntEntrySet(): Internal.ObjectSet<any>;
        int2IntEntrySet(): Internal.Int2IntMap$FastEntrySet;
        compute(arg0: number, arg1: ((arg0: number, arg1: number) => number)): number;
        computeIfPresent(arg0: number, arg1: ((arg0: number, arg1: number) => number)): number;
        trim(arg0: number): boolean;
        trim(): boolean;
        size(): number;
        hashCode(): number;
        putAll(arg0: Internal.Map_<number, number>): void;
        merge(arg0: number, arg1: number, arg2: ((arg0: number, arg1: number) => number)): number;
        get(arg0: number): number;
        clone(): Internal.Int2IntOpenHashMap;
        clone(): any;
        addTo(arg0: number, arg1: number): number;
        keySet(): Internal.Set<any>;
        keySet(): Internal.IntSet;
        putIfAbsent(arg0: number, arg1: number): number;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Int2IntOpenHashMap_ = Int2IntOpenHashMap;
    interface IVanillaCategoryExtensionRegistration {
        getCraftingCategory(): Internal.IExtendableRecipeCategory<Internal.ICraftingRecipe, Internal.ICraftingCategoryExtension>;
    }
    type IVanillaCategoryExtensionRegistration_ = IVanillaCategoryExtensionRegistration;
    interface IFutureReloadListener$IStage {
        func_216872_a<T>(arg0: T): Internal.CompletableFuture<T>;
    }
    type IFutureReloadListener$IStage_ = IFutureReloadListener$IStage;
    class MobSpawnInfoBuilder extends Internal.MobSpawnInfo$Builder {
        getEntityTypes(): Internal.Set<Internal.EntityType<any>>;
        getSpawner(arg0: Internal.EntityClassification_): Internal.List<Internal.MobSpawnInfo$Spawners>;
        getProbability(): number;
        disablePlayerSpawn(): Internal.MobSpawnInfoBuilder;
        getCost(arg0: Internal.EntityType<any>): Internal.MobSpawnInfo$SpawnCosts;
        getSpawnerTypes(): Internal.Set<Internal.EntityClassification>;
        get probability(): number;
        get spawnerTypes(): Internal.Set<Internal.EntityClassification>;
        get entityTypes(): Internal.Set<Internal.EntityType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MobSpawnInfoBuilder_ = MobSpawnInfoBuilder;
    interface Future <V> {
        cancel(arg0: boolean): boolean;
        resultNow(): V;
        isCancelled(): boolean;
        exceptionNow(): Internal.Throwable;
        get(arg0: number, arg1: Internal.TimeUnit_): V;
        get(): V;
        state(): Internal.Future$State;
        isDone(): boolean;
    }
    type Future_<V> = Future<V>;
    interface DoublePredicate {
        or(arg0: ((arg0: number) => boolean)): Internal.DoublePredicate;
        test(arg0: number): boolean;
        and(arg0: ((arg0: number) => boolean)): Internal.DoublePredicate;
        negate(): Internal.DoublePredicate;
    }
    type DoublePredicate_ = ((arg0: number) => boolean) | DoublePredicate;
    interface ToLongFunction <T> {
        applyAsLong(arg0: T): number;
    }
    type ToLongFunction_<T> = ((arg0: T) => number) | ToLongFunction<T>;
    interface Function6 <T1, T2, T3, T4, T5, T6, R> {
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6): R;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function<T6, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function3<T4, T5, T6, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.BiFunction<T5, T6, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function4<T3, T4, T5, T6, R>>;
        curry(): Internal.Function<T1, Internal.Function5<T2, T3, T4, T5, T6, R>>;
    }
    type Function6_<T1, T2, T3, T4, T5, T6, R> = Function6<T1, T2, T3, T4, T5, T6, R>;
    abstract class Executable extends Internal.AccessibleObject implements Internal.Member, Internal.GenericDeclaration {
        getName(): string;
        getParameterCount(): number;
        isVarArgs(): boolean;
        isSynthetic(): boolean;
        getAnnotatedParameterTypes(): Internal.AnnotatedType[];
        getParameterTypes(): Internal.Class<any>[];
        getGenericExceptionTypes(): java_.lang.reflect.Type[];
        getAnnotatedReceiverType(): Internal.AnnotatedType;
        getDeclaredAnnotations(): Internal.Annotation[];
        getAnnotatedExceptionTypes(): Internal.AnnotatedType[];
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        getExceptionTypes(): Internal.Class<any>[];
        getDeclaringClass(): Internal.Class<any>;
        getGenericParameterTypes(): java_.lang.reflect.Type[];
        getAnnotationsByType<T_>(arg0: Internal.Class_<T_>): T_[];
        getAnnotation<T_>(arg0: Internal.Class_<T_>): T_;
        toGenericString(): string;
        getParameters(): any[];
        getTypeParameters(): any[];
        getModifiers(): number;
        getAnnotatedReturnType(): Internal.AnnotatedType;
        getParameterAnnotations(): Internal.Annotation[][];
        get declaredAnnotations(): Internal.Annotation[];
        get annotatedReturnType(): Internal.AnnotatedType;
        get parameterTypes(): Internal.Class<any>[];
        get parameterCount(): number;
        get modifiers(): number;
        get typeParameters(): any[];
        get varArgs(): boolean;
        get declaringClass(): Internal.Class<any>;
        get synthetic(): boolean;
        get genericParameterTypes(): java_.lang.reflect.Type[];
        get exceptionTypes(): Internal.Class<any>[];
        get name(): string;
        get annotatedReceiverType(): Internal.AnnotatedType;
        get genericExceptionTypes(): java_.lang.reflect.Type[];
        get parameterAnnotations(): Internal.Annotation[][];
        get parameters(): any[];
        get annotatedExceptionTypes(): Internal.AnnotatedType[];
        get annotatedParameterTypes(): Internal.AnnotatedType[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Executable_ = Executable;
    class EntityDataManager extends Document.Object {
        func_187231_c(): Internal.List<Internal.EntityDataManager$DataEntry<any>>;
        func_187221_b(): Internal.List<Internal.EntityDataManager$DataEntry<any>>;
        func_187228_d(): boolean;
        func_187218_a(entries: Internal.List<any>): void;
        static func_187229_a(arg0: Internal.List<Internal.EntityDataManager$DataEntry<any>>, arg1: Internal.PacketBuffer): void;
        static func_187215_b(arg0: Internal.PacketBuffer): Internal.List<Internal.EntityDataManager$DataEntry<any>>;
        func_187227_b<T_>(arg0: Internal.DataParameter<T_>, arg1: T_): void;
        func_187214_a<T_>(arg0: Internal.DataParameter<T_>, arg1: T_): void;
        static func_187226_a<T_>(arg0: Internal.Class_<Internal.Entity_>, arg1: Internal.IDataSerializer<T_>): Internal.DataParameter<T_>;
        func_187225_a<T_>(arg0: Internal.DataParameter<T_>): T_;
        func_187230_e(): void;
        func_187223_a(): boolean;
        readonly field_187234_c : Internal.Map<number, Internal.EntityDataManager$DataEntry<any>>;
        readonly field_187235_d : Internal.ReadWriteLock;
        static readonly field_187232_a : {};
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityDataManager_ = EntityDataManager;
    class ChunkDataBuiltEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getDataBuilder(): Internal.ChunkRenderData$Builder;
        get listenerList(): Internal.ListenerList;
        get dataBuilder(): Internal.ChunkRenderData$Builder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkDataBuiltEvent_ = ChunkDataBuiltEvent;
    class UnitStorage extends Document.Object {
        addConstant(name: string, val: number): void;
        createFunc(name: string, args: Internal.List<Internal.Unit>): Internal.Unit;
        addFunc(name: string, func: ((arg0: Internal.List<Internal.Unit>) => Internal.Unit)): void;
        addOp(name: string, op: ((arg0: Internal.Unit, arg1: Internal.Unit) => Internal.Unit)): void;
        getConstant(name: string): Internal.ConstantUnit;
        setVariable(key: string, unit: Internal.Unit): void;
        getVariableVersion(): number;
        addFunc2(name: string, func: ((arg0: Internal.Unit, arg1: Internal.Unit) => Internal.Unit)): void;
        parse(string: string): Internal.Unit;
        addFunc1(name: string, func: ((arg0: Internal.Unit) => Internal.Unit)): void;
        createOp(name: string, unit: Internal.Unit, with_: Internal.Unit): Internal.Unit;
        getVariable(key: string): Internal.Unit;
        clearVariables(): void;
        get variableVersion(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type UnitStorage_ = UnitStorage;
    interface ResourcePackInfo$IFactory {
        create(arg0: string, arg1: boolean, arg2: (() => Internal.IResourcePack), arg3: Internal.IResourcePack, arg4: Internal.PackMetadataSection, arg5: Internal.ResourcePackInfo$Priority_, arg6: Internal.IPackNameDecorator): Internal.ResourcePackInfo;
    }
    type ResourcePackInfo$IFactory_ = ((arg0: string, arg1: boolean, arg2: (() => Internal.IResourcePack), arg3: Internal.IResourcePack, arg4: Internal.PackMetadataSection, arg5: Internal.ResourcePackInfo$Priority, arg6: Internal.IPackNameDecorator) => Internal.ResourcePackInfo) | ResourcePackInfo$IFactory;
    class WhiteList extends Internal.UserList<Internal.GameProfile, any> {
        func_152705_a(arg0: Internal.GameProfile): boolean;
        func_152685_a(): string[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WhiteList_ = WhiteList;
    class SpectatorGui extends Internal.AbstractGui implements Internal.ISpectatorMenuRecipient {
        func_175257_a(arg0: Internal.SpectatorMenu): void;
        func_238528_a_(arg0: Internal.MatrixStack, arg1: number): void;
        func_195621_a(arg0: number): void;
        func_238527_a_(arg0: Internal.MatrixStack): void;
        func_175260_a(arg0: number): void;
        func_175261_b(): void;
        func_175262_a(): boolean;
        static readonly field_175269_a : ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpectatorGui_ = SpectatorGui;
    interface FastMapStateHolder <S> {
        getNeighborTable(): Internal.Table<Internal.Property<any>, Internal.Comparable<any>, S>;
        getStateIndex(): number;
        setNeighborTable(arg0: Internal.Table<Internal.Property<any>, Internal.Comparable<any>, S>): void;
        setStateIndex(arg0: number): void;
        setStateMap(arg0: Internal.FastMap<S>): void;
        getVanillaPropertyMap(): Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>;
        getStateMap(): Internal.FastMap<S>;
        replacePropertyMap(arg0: Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>): void;
    }
    type FastMapStateHolder_<S> = FastMapStateHolder<S>;
    class LiquidsConfig extends Document.Object implements Internal.IFeatureConfig {
        readonly field_227366_f_ : Internal.Set<Internal.Block>;
        static readonly field_236649_a_ : Internal.Codec<Internal.LiquidsConfig>;
        readonly field_214678_a : Internal.FluidState;
        readonly field_227363_b_ : boolean;
        readonly field_227364_c_ : number;
        readonly field_227365_d_ : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LiquidsConfig_ = LiquidsConfig;
    class RenderLivingEvent$Post <T, M> extends Internal.RenderLivingEvent<T, M> {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderLivingEvent$Post_<T, M> = RenderLivingEvent$Post<T, M>;
    class PandaEntity extends Internal.AnimalEntity {
        func_213553_r(arg0: boolean): void;
        func_213591_x(arg0: number): number;
        func_213556_dX(): boolean;
        func_213569_ek(): boolean;
        func_213539_dW(): boolean;
        func_70071_h_(): void;
        func_213541_b(arg0: Internal.PandaEntity$Gene_): void;
        func_213589_a(arg0: Internal.PandaEntity$Gene_): void;
        func_213545_a(arg0: Internal.PandaEntity, arg1: Internal.PandaEntity): void;
        func_213544_dV(): number;
        func_213590_ei(): Internal.PandaEntity$Gene;
        func_213564_eh(): boolean;
        func_213567_dY(): boolean;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_213549_ef(): Internal.PandaEntity$Gene;
        func_213585_ee(): number;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_213537_eq(): boolean;
        func_213554_ep(): void;
        func_213534_t(arg0: boolean): void;
        func_213576_v(arg0: boolean): void;
        func_213583_w(arg0: number): number;
        func_213588_r(arg0: number): void;
        func_213562_s(arg0: number): void;
        func_213542_s(arg0: boolean): void;
        func_213561_v(arg0: number): number;
        static func_234204_eW_(): Internal.AttributeModifierMap$MutableAttribute;
        func_213581_u(arg0: boolean): void;
        func_213582_en(): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_213566_eo(): boolean;
        func_213365_e(arg0: Internal.ItemStack): boolean;
        func_213536_eg(): Internal.PandaEntity$Gene;
        func_213398_dR(): boolean;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_213584_ej(): boolean;
        func_213578_dZ(): boolean;
        func_184652_a(arg0: Internal.PlayerEntity): boolean;
        func_213557_el(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        field_213608_bz : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PandaEntity_ = PandaEntity;
    class STitlePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179806_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179805_b(): Internal.ITextComponent;
        func_179804_d(): number;
        func_179803_e(): number;
        func_179807_a(): Internal.STitlePacket$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type STitlePacket_ = STitlePacket;
    class OffsetTime extends Document.Object implements Internal.Temporal, Internal.TemporalAdjuster, Internal.Comparable<Internal.OffsetTime>, Internal.Serializable {
        static ofInstant(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.OffsetTime;
        minus(arg0: Internal.TemporalAmount): Internal.OffsetTime;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.OffsetTime;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plusHours(arg0: number): Internal.OffsetTime;
        minusHours(arg0: number): Internal.OffsetTime;
        isEqual(arg0: Internal.OffsetTime): boolean;
        getOffset(): Internal.ZoneOffset;
        atDate(arg0: Internal.LocalDate): Internal.OffsetDateTime;
        toLocalTime(): Internal.LocalTime;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.OffsetTime): number;
        plusMinutes(arg0: number): Internal.OffsetTime;
        withOffsetSameLocal(arg0: Internal.ZoneOffset): Internal.OffsetTime;
        minusMinutes(arg0: number): Internal.OffsetTime;
        hashCode(): number;
        static now(): Internal.OffsetTime;
        static now(arg0: Internal.ZoneId): Internal.OffsetTime;
        static now(arg0: Internal.Clock): Internal.OffsetTime;
        static of(arg0: Internal.LocalTime, arg1: Internal.ZoneOffset): Internal.OffsetTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.ZoneOffset): Internal.OffsetTime;
        get(arg0: Internal.TemporalField): number;
        plusSeconds(arg0: number): Internal.OffsetTime;
        getMinute(): number;
        getHour(): number;
        static from(arg0: Internal.TemporalAccessor): Internal.OffsetTime;
        plusNanos(arg0: number): Internal.OffsetTime;
        withMinute(arg0: number): Internal.OffsetTime;
        withHour(arg0: number): Internal.OffsetTime;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.OffsetTime;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        minusNanos(arg0: number): Internal.OffsetTime;
        getNano(): number;
        format(arg0: Internal.DateTimeFormatter): string;
        static parse(arg0: Internal.CharSequence): Internal.OffsetTime;
        static parse(arg0: Internal.CharSequence, arg1: Internal.DateTimeFormatter): Internal.OffsetTime;
        isSupported(arg0: Internal.TemporalField): boolean;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isBefore(arg0: Internal.OffsetTime): boolean;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.OffsetTime;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.OffsetTime;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        withNano(arg0: number): Internal.OffsetTime;
        getLong(arg0: Internal.TemporalField): number;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.OffsetTime;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.Temporal;
        with(arg0: Internal.TemporalField, arg1: number): Internal.OffsetTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        withOffsetSameInstant(arg0: Internal.ZoneOffset): Internal.OffsetTime;
        toEpochSecond(arg0: Internal.LocalDate): number;
        equals(arg0: any): boolean;
        getSecond(): number;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        toString(): string;
        minusSeconds(arg0: number): Internal.OffsetTime;
        isAfter(arg0: Internal.OffsetTime): boolean;
        withSecond(arg0: number): Internal.OffsetTime;
        static readonly MIN : Internal.OffsetTime;
        static readonly MAX : Internal.OffsetTime;
        get offset(): Internal.ZoneOffset;
        get hour(): number;
        get nano(): number;
        get minute(): number;
        get second(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OffsetTime_ = OffsetTime;
    class DataResult$Instance extends Internal.Enum<Internal.DataResult$Instance> implements Internal.Applicative<Internal.DataResult$Mu, any> {
        ap2<A_, B_, R_>(arg0: Internal.App<Internal.DataResult$Mu, ((arg0: A_, arg1: B_) => R_)>, arg1: Internal.App<Internal.DataResult$Mu, A_>, arg2: Internal.App<Internal.DataResult$Mu, B_>): Internal.App<Internal.DataResult$Mu, R_>;
        ap3<T1_, T2_, T3_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function3<T1_, T2_, T3_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>): Internal.App<Internal.DataResult$Mu, R_>;
        lift1<A_, R_>(arg0: Internal.App<Internal.DataResult$Mu, ((arg0: A_) => R_)>): Internal.Function<Internal.App<Internal.DataResult$Mu, A_>, Internal.App<Internal.DataResult$Mu, R_>>;
        static valueOf(arg0: string): Internal.DataResult$Instance;
        static values(): Internal.DataResult$Instance[];
        map<T_, R_>(arg0: ((arg0: T_) => R_), arg1: Internal.App<Internal.DataResult$Mu, T_>): Internal.App<Internal.DataResult$Mu, R_>;
        point<A_>(arg0: A_): Internal.App<Internal.DataResult$Mu, A_>;
        ap<A_, R_>(arg0: Internal.App<Internal.DataResult$Mu, ((arg0: A_) => R_)>, arg1: Internal.App<Internal.DataResult$Mu, A_>): Internal.App<Internal.DataResult$Mu, R_>;
        static readonly INSTANCE : Internal.DataResult$Instance;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DataResult$Instance_ = "instance" | DataResult$Instance;
    abstract class ImmutableCollection$Builder <E> extends Document.Object {
        add(arg0: E): Internal.ImmutableCollection$Builder<E>;
        add(arg0: E[]): Internal.ImmutableCollection$Builder<E>;
        build(): Internal.ImmutableCollection<E>;
        addAll(arg0: Internal.Iterator<E>): Internal.ImmutableCollection$Builder<E>;
        addAll(arg0: Internal.Iterable<E>): Internal.ImmutableCollection$Builder<E>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableCollection$Builder_<E> = ImmutableCollection$Builder<E>;
    interface ISpectatorMenuObject {
        func_178664_z_(): Internal.ITextComponent;
        func_230485_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        func_178662_A_(): boolean;
        func_178661_a(arg0: Internal.SpectatorMenu): void;
    }
    type ISpectatorMenuObject_ = ISpectatorMenuObject;
    class Suggestion extends Document.Object implements Internal.Comparable<Internal.Suggestion> {
        expand(arg0: string, arg1: Internal.StringRange): Internal.Suggestion;
        getTooltip(): Internal.Message;
        apply(arg0: string): string;
        getText(): string;
        hashCode(): number;
        getRange(): Internal.StringRange;
        equals(arg0: any): boolean;
        toString(): string;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.Suggestion): number;
        compareToIgnoreCase(arg0: Internal.Suggestion): number;
        get tooltip(): Internal.Message;
        get range(): Internal.StringRange;
        get text(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Suggestion_ = Suggestion;
    class ModifiableAttributeInstance extends Document.Object {
        func_225505_c_(): Internal.Set<Internal.AttributeModifier>;
        func_142049_d(): void;
        func_233772_g_(): Internal.CompoundNBT;
        func_225504_a_(arg0: Internal.AttributeModifier$Operation_): Internal.Set<Internal.AttributeModifier>;
        func_111124_b(arg0: Internal.AttributeModifier): void;
        func_111125_b(): number;
        func_111127_a(arg0: Internal.UUID): Internal.AttributeModifier;
        func_233763_a_(arg0: Internal.ModifiableAttributeInstance): void;
        func_111128_a(arg0: number): void;
        func_111126_e(): number;
        func_188479_b(arg0: Internal.UUID): void;
        func_233770_c_(arg0: Internal.UUID): boolean;
        func_233765_a_(arg0: Internal.CompoundNBT): void;
        func_233769_c_(arg0: Internal.AttributeModifier): void;
        func_111123_a(): Internal.Attribute;
        func_233767_b_(arg0: Internal.AttributeModifier): void;
        func_180374_a(arg0: Internal.AttributeModifier): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModifiableAttributeInstance_ = ModifiableAttributeInstance;
    interface MessageSizeEstimator$Handle {
        size(arg0: any): number;
    }
    type MessageSizeEstimator$Handle_ = MessageSizeEstimator$Handle;
    class SWindowItemsPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_148910_d(): Internal.List<Internal.ItemStack>;
        func_148911_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SWindowItemsPacket_ = SWindowItemsPacket;
    class InputEvent$ClickInputEvent extends Internal.InputEvent {
        setSwingHand(arg0: boolean): void;
        getListenerList(): Internal.ListenerList;
        getHand(): Hand;
        shouldSwingHand(): boolean;
        isUseItem(): boolean;
        isAttack(): boolean;
        getKeyBinding(): Internal.KeyBinding;
        isCancelable(): boolean;
        isPickBlock(): boolean;
        get useItem(): boolean;
        get keyBinding(): Internal.KeyBinding;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get attack(): boolean;
        get pickBlock(): boolean;
        get hand(): Hand;
        set swingHand(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InputEvent$ClickInputEvent_ = InputEvent$ClickInputEvent;
    abstract class FastMapKey <T> extends Document.Object {
        getProperty(): Internal.Property<T>;
        numValues(): number;
        get property(): Internal.Property<T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FastMapKey_<T> = FastMapKey<T>;
    interface ICarverConfig {
    }
    type ICarverConfig_ = ICarverConfig;
    class TurtleEntity extends Internal.AnimalEntity {
        func_203023_dy(): boolean;
        func_203011_g(arg0: BlockPos): void;
        func_203020_dx(): boolean;
        func_213355_cm(): number;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_96092_aw(): boolean;
        static func_223322_c(arg0: Internal.EntityType<Internal.TurtleEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_213352_e(arg0: Vec3): void;
        static func_234228_eK_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70648_aU(): boolean;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_70668_bt(): Internal.CreatureAttribute;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_204701_dC(): boolean;
        func_70636_d(): void;
        func_184652_a(arg0: Internal.PlayerEntity): boolean;
        func_241841_a(arg0: Internal.ServerWorld, arg1: Internal.LightningBoltEntity): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70627_aG(): number;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        static readonly field_203029_bx : ((arg0: Internal.LivingEntity) => boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TurtleEntity_ = TurtleEntity;
    interface MerchantOfferAccess {
        setMaxUses(arg0: number): void;
    }
    type MerchantOfferAccess_ = MerchantOfferAccess;
    abstract class AbstractFurnaceContainer extends Internal.RecipeBookContainer<Internal.IInventory> {
        func_217061_l(): boolean;
        func_201771_a(arg0: Internal.RecipeItemHelper): void;
        func_217060_j(): number;
        func_203721_h(): number;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_241850_m(): Internal.RecipeBookCategory;
        func_217056_a(arg0: boolean, arg1: Internal.IRecipe<any>, arg2: Internal.ServerPlayerEntity): void;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_201772_h(): number;
        func_217059_k(): number;
        func_201770_g(): number;
        func_201769_a(arg0: Internal.IRecipe<Internal.IInventory>): boolean;
        func_201767_f(): number;
        func_201768_e(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractFurnaceContainer_ = AbstractFurnaceContainer;
    interface IItemProvider {
        func_199767_j(): Internal.Item;
    }
    type IItemProvider_ = IItemProvider;
    class FancyFoliagePlacer extends Internal.BlobFoliagePlacer {
        static readonly field_236747_c_ : Internal.Codec<Internal.FancyFoliagePlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FancyFoliagePlacer_ = FancyFoliagePlacer;
    class InventoryEventJS extends Internal.PlayerEventJS {
        getInventoryContainer(): Internal.Container;
        getEntity(): Internal.EntityJS;
        get inventoryContainer(): Internal.Container;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InventoryEventJS_ = InventoryEventJS;
    class LegacySingleJigsawPiece extends Internal.SingleJigsawPiece {
        func_214853_a(): Internal.IJigsawDeserializer<any>;
        toString(): string;
        static readonly field_236832_a_ : Internal.Codec<Internal.LegacySingleJigsawPiece>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LegacySingleJigsawPiece_ = LegacySingleJigsawPiece;
    abstract class AbstractByteBuf extends Internal.ByteBuf {
        asReadOnly(): Internal.ByteBuf;
        markReaderIndex(): Internal.ByteBuf;
        getByte(arg0: number): number;
        writeZero(arg0: number): Internal.ByteBuf;
        writeFloat(arg0: number): Internal.ByteBuf;
        resetReaderIndex(): Internal.ByteBuf;
        setLongLE(arg0: number, arg1: number): Internal.ByteBuf;
        readRetainedSlice(arg0: number): Internal.ByteBuf;
        slice(): Internal.ByteBuf;
        slice(arg0: number, arg1: number): Internal.ByteBuf;
        getMediumLE(arg0: number): number;
        readUnsignedIntLE(): number;
        readInt(): number;
        order(arg0: Internal.ByteOrder): Internal.ByteBuf;
        writeMedium(arg0: number): Internal.ByteBuf;
        resetWriterIndex(): Internal.ByteBuf;
        writableBytes(): number;
        getUnsignedShort(arg0: number): number;
        maxCapacity(): number;
        bytesBefore(arg0: number, arg1: number, arg2: number): number;
        bytesBefore(arg0: number): number;
        bytesBefore(arg0: number, arg1: number): number;
        setInt(arg0: number, arg1: number): Internal.ByteBuf;
        getInt(arg0: number): number;
        markWriterIndex(): Internal.ByteBuf;
        isReadable(arg0: number): boolean;
        isReadable(): boolean;
        writeBoolean(arg0: boolean): Internal.ByteBuf;
        setIntLE(arg0: number, arg1: number): Internal.ByteBuf;
        writeLongLE(arg0: number): Internal.ByteBuf;
        setShortLE(arg0: number, arg1: number): Internal.ByteBuf;
        isWritable(arg0: number): boolean;
        isWritable(): boolean;
        readChar(): string;
        readCharSequence(arg0: number, arg1: Internal.Charset): Internal.CharSequence;
        isReadOnly(): boolean;
        readDouble(): number;
        readUnsignedShortLE(): number;
        readFloat(): number;
        getLongLE(arg0: number): number;
        getBoolean(arg0: number): boolean;
        copy(): Internal.ByteBuf;
        readShortLE(): number;
        readUnsignedMedium(): number;
        writeInt(arg0: number): Internal.ByteBuf;
        ensureWritable(arg0: number, arg1: boolean): number;
        ensureWritable(arg0: number): Internal.ByteBuf;
        readableBytes(): number;
        readSlice(arg0: number): Internal.ByteBuf;
        getIntLE(arg0: number): number;
        nioBuffers(): Internal.ByteBuffer[];
        forEachByteDesc(arg0: number, arg1: number, arg2: Internal.ByteProcessor): number;
        forEachByteDesc(arg0: Internal.ByteProcessor): number;
        skipBytes(arg0: number): Internal.ByteBuf;
        getLong(arg0: number): number;
        readLong(): number;
        readShort(): number;
        equals(arg0: any): boolean;
        readBytes(arg0: Internal.GatheringByteChannel, arg1: number): number;
        readBytes(arg0: Internal.FileChannel, arg1: number, arg2: number): number;
        readBytes(arg0: number[], arg1: number, arg2: number): Internal.ByteBuf;
        readBytes(arg0: Internal.OutputStream, arg1: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf): Internal.ByteBuf;
        readBytes(arg0: number[]): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.ByteBuf;
        readBytes(arg0: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuffer): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number): Internal.ByteBuf;
        setZero(arg0: number, arg1: number): Internal.ByteBuf;
        getUnsignedMedium(arg0: number): number;
        readBoolean(): boolean;
        toString(arg0: number, arg1: number, arg2: Internal.Charset): string;
        toString(): string;
        toString(arg0: Internal.Charset): string;
        retainedSlice(arg0: number, arg1: number): Internal.ByteBuf;
        retainedSlice(): Internal.ByteBuf;
        readMediumLE(): number;
        setMedium(arg0: number, arg1: number): Internal.ByteBuf;
        setBoolean(arg0: number, arg1: boolean): Internal.ByteBuf;
        readerIndex(): number;
        readerIndex(arg0: number): Internal.ByteBuf;
        setShort(arg0: number, arg1: number): Internal.ByteBuf;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.ByteBuf): number;
        getCharSequence(arg0: number, arg1: number, arg2: Internal.Charset): Internal.CharSequence;
        getBytes(arg0: number, arg1: number[]): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf): Internal.ByteBuf;
        setDouble(arg0: number, arg1: number): Internal.ByteBuf;
        setChar(arg0: number, arg1: number): Internal.ByteBuf;
        getUnsignedIntLE(arg0: number): number;
        getUnsignedInt(arg0: number): number;
        indexOf(arg0: number, arg1: number, arg2: number): number;
        writeByte(arg0: number): Internal.ByteBuf;
        nioBuffer(): Internal.ByteBuffer;
        discardSomeReadBytes(): Internal.ByteBuf;
        duplicate(): Internal.ByteBuf;
        writerIndex(arg0: number): Internal.ByteBuf;
        writerIndex(): number;
        writeCharSequence(arg0: Internal.CharSequence, arg1: Internal.Charset): number;
        readUnsignedInt(): number;
        getUnsignedShortLE(arg0: number): number;
        getChar(arg0: number): string;
        retainedDuplicate(): Internal.ByteBuf;
        setLong(arg0: number, arg1: number): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf, arg1: number): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf): Internal.ByteBuf;
        writeBytes(arg0: number[]): Internal.ByteBuf;
        writeBytes(arg0: number[], arg1: number, arg2: number): Internal.ByteBuf;
        writeBytes(arg0: Internal.FileChannel, arg1: number, arg2: number): number;
        writeBytes(arg0: Internal.ScatteringByteChannel, arg1: number): number;
        writeBytes(arg0: Internal.InputStream, arg1: number): number;
        writeBytes(arg0: Internal.ByteBuffer): Internal.ByteBuf;
        readMedium(): number;
        forEachByte(arg0: number, arg1: number, arg2: Internal.ByteProcessor): number;
        forEachByte(arg0: Internal.ByteProcessor): number;
        setIndex(arg0: number, arg1: number): Internal.ByteBuf;
        writeShort(arg0: number): Internal.ByteBuf;
        getShortLE(arg0: number): number;
        readUnsignedShort(): number;
        getMedium(arg0: number): number;
        setByte(arg0: number, arg1: number): Internal.ByteBuf;
        writeShortLE(arg0: number): Internal.ByteBuf;
        maxWritableBytes(): number;
        getDouble(arg0: number): number;
        getFloat(arg0: number): number;
        writeLong(arg0: number): Internal.ByteBuf;
        writeIntLE(arg0: number): Internal.ByteBuf;
        hashCode(): number;
        setCharSequence(arg0: number, arg1: Internal.CharSequence, arg2: Internal.Charset): number;
        readIntLE(): number;
        setMediumLE(arg0: number, arg1: number): Internal.ByteBuf;
        readUnsignedByte(): number;
        readLongLE(): number;
        readUnsignedMediumLE(): number;
        writeDouble(arg0: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf): Internal.ByteBuf;
        setBytes(arg0: number, arg1: number[]): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.ByteBuf;
        setFloat(arg0: number, arg1: number): Internal.ByteBuf;
        getShort(arg0: number): number;
        writeMediumLE(arg0: number): Internal.ByteBuf;
        clear(): Internal.ByteBuf;
        getUnsignedByte(arg0: number): number;
        discardReadBytes(): Internal.ByteBuf;
        writeChar(arg0: number): Internal.ByteBuf;
        getUnsignedMediumLE(arg0: number): number;
        readByte(): number;
        get readable(): boolean;
        get readOnly(): boolean;
        get writable(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractByteBuf_ = AbstractByteBuf;
    abstract class AbstractEventExecutorGroup extends Document.Object implements Internal.EventExecutorGroup {
        scheduleAtFixedRate(arg0: (() => void), arg1: number, arg2: number, arg3: Internal.TimeUnit_): java_.util.concurrent.ScheduledFuture<any>;
        scheduleAtFixedRate(arg0: (() => void), arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        schedule<V_>(arg0: (() => V_), arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<V_>;
        schedule(arg0: (() => any), arg1: number, arg2: Internal.TimeUnit_): java_.util.concurrent.ScheduledFuture<any>;
        schedule(arg0: (() => void), arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        schedule(arg0: (() => void), arg1: number, arg2: Internal.TimeUnit_): java_.util.concurrent.ScheduledFuture<any>;
        shutdownGracefully(): io.netty.util.concurrent.Future<any>;
        submit(arg0: (() => any)): Internal.Future<any>;
        submit<T_>(arg0: (() => T_)): io.netty.util.concurrent.Future<T_>;
        submit(arg0: (() => void)): Internal.Future<any>;
        submit(arg0: (() => void)): io.netty.util.concurrent.Future<any>;
        submit(arg0: (() => void), arg1: any): Internal.Future<any>;
        submit<T_>(arg0: (() => void), arg1: T_): io.netty.util.concurrent.Future<T_>;
        scheduleWithFixedDelay(arg0: (() => void), arg1: number, arg2: number, arg3: Internal.TimeUnit_): java_.util.concurrent.ScheduledFuture<any>;
        scheduleWithFixedDelay(arg0: (() => void), arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        invokeAll<T_>(arg0: Internal.Collection<(() => T_)>, arg1: number, arg2: Internal.TimeUnit_): Internal.List<Internal.Future<T_>>;
        invokeAll<T_>(arg0: Internal.Collection<(() => T_)>): Internal.List<Internal.Future<T_>>;
        shutdownNow(): Internal.List<Internal.Runnable>;
        invokeAny<T_>(arg0: Internal.Collection<(() => T_)>, arg1: number, arg2: Internal.TimeUnit_): T_;
        invokeAny<T_>(arg0: Internal.Collection<(() => T_)>): T_;
        execute(arg0: (() => void)): void;
        shutdown(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractEventExecutorGroup_ = AbstractEventExecutorGroup;
    interface IForgeEffect {
        renderInventoryEffect(arg0: Internal.EffectInstance, arg1: Internal.DisplayEffectsScreen<any>, arg2: Internal.MatrixStack, arg3: number, arg4: number, arg5: number): void;
        getGuiSortColor(arg0: Internal.EffectInstance): number;
        shouldRenderHUD(arg0: Internal.EffectInstance): boolean;
        getEffect(): Internal.Effect;
        shouldRenderInvText(arg0: Internal.EffectInstance): boolean;
        shouldRender(arg0: Internal.EffectInstance): boolean;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        renderHUDEffect(arg0: Internal.EffectInstance, arg1: Internal.AbstractGui, arg2: Internal.MatrixStack, arg3: number, arg4: number, arg5: number, arg6: number): void;
    }
    type IForgeEffect_ = IForgeEffect;
    class Tag <T> extends Document.Object implements Internal.ITag<T> {
        static func_241286_a_<T_>(arg0: Internal.Set<T_>): Internal.Tag<T_>;
        static func_241284_a_<T_>(): Internal.Tag<T_>;
        func_230235_a_(arg0: T): boolean;
        func_230236_b_(): Internal.List<T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Tag_<T> = Tag<T>;
    class SPlayerAbilitiesPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149103_f(): boolean;
        func_149105_e(): boolean;
        func_149106_d(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149107_h(): number;
        func_149112_c(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149101_g(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlayerAbilitiesPacket_ = SPlayerAbilitiesPacket;
    class PointOfInterestManager extends Internal.RegionSectionCache<any> {
        func_219140_a(arg0: BlockPos): void;
        func_219142_b(arg0: BlockPos): boolean;
        func_219163_a(arg0: ((arg0: Internal.PointOfInterestType) => boolean), arg1: ((arg0: BlockPos) => boolean), arg2: Internal.PointOfInterestManager$Status_, arg3: BlockPos, arg4: number, arg5: Internal.Random): Internal.Optional<BlockPos>;
        func_219145_a(arg0: ((arg0: Internal.PointOfInterestType) => boolean), arg1: BlockPos, arg2: number, arg3: Internal.PointOfInterestManager$Status_): number;
        func_219146_b(arg0: ((arg0: Internal.PointOfInterestType) => boolean), arg1: BlockPos, arg2: number, arg3: Internal.PointOfInterestManager$Status_): Internal.Stream<Internal.PointOfInterest>;
        func_219135_a(arg0: BlockPos, arg1: Internal.PointOfInterestType): void;
        func_234148_d_(arg0: ((arg0: Internal.PointOfInterestType) => boolean), arg1: BlockPos, arg2: number, arg3: Internal.PointOfInterestManager$Status_): Internal.Optional<BlockPos>;
        func_219157_a(arg0: ((arg0: Internal.PointOfInterestType) => boolean), arg1: ((arg0: BlockPos) => boolean), arg2: BlockPos, arg3: number): Internal.Optional<BlockPos>;
        func_219137_a(arg0: ((arg0: Internal.PointOfInterestType) => boolean), arg1: Internal.ChunkPos, arg2: Internal.PointOfInterestManager$Status_): Internal.Stream<Internal.PointOfInterest>;
        func_234135_a_(arg0: Internal.PointOfInterestType, arg1: BlockPos): boolean;
        func_219138_a(arg0: BlockPos, arg1: ((arg0: Internal.PointOfInterestType) => boolean)): boolean;
        func_219127_a(arg0: ((arg0: Internal.PointOfInterestType) => boolean), arg1: ((arg0: BlockPos) => boolean), arg2: BlockPos, arg3: number, arg4: Internal.PointOfInterestManager$Status_): Internal.Optional<BlockPos>;
        func_219139_a(arg0: Internal.ChunkPos, arg1: Internal.ChunkSection): void;
        func_219148_c(arg0: BlockPos): Internal.Optional<Internal.PointOfInterestType>;
        func_226347_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: number): void;
        func_242324_b(arg0: ((arg0: Internal.PointOfInterestType) => boolean), arg1: ((arg0: BlockPos) => boolean), arg2: BlockPos, arg3: number, arg4: Internal.PointOfInterestManager$Status_): Internal.Stream<BlockPos>;
        func_219115_a(arg0: (() => boolean)): void;
        func_225399_a(arg0: ((arg0: Internal.PointOfInterestType) => boolean), arg1: ((arg0: BlockPos) => boolean), arg2: BlockPos, arg3: number, arg4: Internal.PointOfInterestManager$Status_): Internal.Stream<BlockPos>;
        func_226353_b_(arg0: ((arg0: Internal.PointOfInterestType) => boolean), arg1: BlockPos, arg2: number, arg3: Internal.PointOfInterestManager$Status_): Internal.Stream<Internal.PointOfInterest>;
        func_219150_a(arg0: Internal.SectionPos): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PointOfInterestManager_ = PointOfInterestManager;
    class SmallFireballEntity extends Internal.AbstractFireballEntity {
        func_70067_L(): boolean;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SmallFireballEntity_ = SmallFireballEntity;
    interface BlockStateKJS {
        setDestroySpeedKJS(arg0: number): void;
        setLightEmissionKJS(arg0: number): void;
        setRequiresToolKJS(arg0: boolean): void;
        setMaterialKJS(arg0: Internal.Material): void;
    }
    type BlockStateKJS_ = BlockStateKJS;
    class PiglinAction extends Internal.Enum<Internal.PiglinAction> {
        static valueOf(arg0: string): Internal.PiglinAction;
        static values(): Internal.PiglinAction[];
        static readonly CROSSBOW_HOLD : Internal.PiglinAction;
        static readonly ATTACKING_WITH_MELEE_WEAPON : Internal.PiglinAction;
        static readonly CROSSBOW_CHARGE : Internal.PiglinAction;
        static readonly DANCING : Internal.PiglinAction;
        static readonly DEFAULT : Internal.PiglinAction;
        static readonly ADMIRING_ITEM : Internal.PiglinAction;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PiglinAction_ = "attacking_with_melee_weapon" | "crossbow_hold" | "crossbow_charge" | "admiring_item" | "dancing" | "default" | PiglinAction;
    class RandomBlockMatchRuleTest extends Internal.RuleTest {
        func_215181_a(arg0: Internal.BlockState, arg1: Internal.Random): boolean;
        static readonly field_237117_a_ : Internal.Codec<Internal.RandomBlockMatchRuleTest>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RandomBlockMatchRuleTest_ = RandomBlockMatchRuleTest;
    interface ChronoPeriod extends Internal.TemporalAmount {
        minus(arg0: Internal.TemporalAmount): Internal.ChronoPeriod;
        isNegative(): boolean;
        negated(): Internal.ChronoPeriod;
        normalized(): Internal.ChronoPeriod;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoPeriod;
        multipliedBy(arg0: number): Internal.ChronoPeriod;
        subtractFrom(arg0: Internal.Temporal): Internal.Temporal;
        hashCode(): number;
        equals(arg0: any): boolean;
        get(arg0: Internal.TemporalUnit): number;
        getUnits(): Internal.List<Internal.TemporalUnit>;
        addTo(arg0: Internal.Temporal): Internal.Temporal;
        isZero(): boolean;
        toString(): string;
        getChronology(): Internal.Chronology;
    }
    type ChronoPeriod_ = ChronoPeriod;
    class Throwable extends Document.Object implements Internal.Serializable {
        addSuppressed(arg0: Internal.Throwable): void;
        setStackTrace(arg0: Internal.StackTraceElement[]): void;
        getStackTrace(): Internal.StackTraceElement[];
        printStackTrace(arg0: Internal.PrintWriter): void;
        printStackTrace(): void;
        printStackTrace(arg0: Internal.PrintStream): void;
        getLocalizedMessage(): string;
        initCause(arg0: Internal.Throwable): Internal.Throwable;
        getMessage(): string;
        getSuppressed(): Internal.Throwable[];
        toString(): string;
        getCause(): Internal.Throwable;
        fillInStackTrace(): Internal.Throwable;
        get localizedMessage(): string;
        get cause(): Internal.Throwable;
        get stackTrace(): Internal.StackTraceElement[];
        get suppressed(): Internal.Throwable[];
        get message(): string;
        set stackTrace(arg0: Internal.StackTraceElement[]);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Throwable_ = Throwable;
    interface IGuiIngredient <T> {
        getDisplayedIngredient(): T;
        isInput(): boolean;
        getAllIngredients(): Internal.List<T>;
        drawHighlight(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
    }
    type IGuiIngredient_<T> = IGuiIngredient<T>;
    interface EntityTargetKJS {
        getNameKJS(): string;
    }
    type EntityTargetKJS_ = EntityTargetKJS;
    abstract class NumberNBT extends Document.Object implements Internal.INBT {
        func_150291_c(): number;
        func_150290_f(): number;
        func_150289_e(): number;
        func_209908_j(): Internal.Number;
        func_150288_h(): number;
        func_150287_d(): number;
        func_150286_g(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NumberNBT_ = NumberNBT;
    class ValueRange extends Document.Object implements Internal.Serializable {
        getMaximum(): number;
        getSmallestMaximum(): number;
        isIntValue(): boolean;
        getLargestMinimum(): number;
        isValidValue(arg0: number): boolean;
        hashCode(): number;
        static of(arg0: number, arg1: number): Internal.ValueRange;
        static of(arg0: number, arg1: number, arg2: number, arg3: number): Internal.ValueRange;
        static of(arg0: number, arg1: number, arg2: number): Internal.ValueRange;
        equals(arg0: any): boolean;
        getMinimum(): number;
        checkValidValue(arg0: number, arg1: Internal.TemporalField): number;
        checkValidIntValue(arg0: number, arg1: Internal.TemporalField): number;
        toString(): string;
        isFixed(): boolean;
        isValidIntValue(arg0: number): boolean;
        get largestMinimum(): number;
        get smallestMaximum(): number;
        get intValue(): boolean;
        get maximum(): number;
        get fixed(): boolean;
        get minimum(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ValueRange_ = ValueRange;
    class KeyCompressor <T> extends Document.Object {
        decompress(arg0: number): T;
        size(): number;
        compress(arg0: T): number;
        compress(arg0: string): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type KeyCompressor_<T> = KeyCompressor<T>;
    class SOpenSignMenuPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179777_a(): BlockPos;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SOpenSignMenuPacket_ = SOpenSignMenuPacket;
    class CloudOption extends Internal.Enum<Internal.CloudOption> {
        static func_216804_a(arg0: number): Internal.CloudOption;
        func_216803_b(): string;
        static valueOf(arg0: string): Internal.CloudOption;
        static values(): Internal.CloudOption[];
        func_216806_a(): number;
        static readonly FANCY : Internal.CloudOption;
        static readonly FAST : Internal.CloudOption;
        static readonly OFF : Internal.CloudOption;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CloudOption_ = "off" | "fast" | "fancy" | CloudOption;
    interface IForgeKeybinding {
        getKeyModifierDefault(): Internal.KeyModifier;
        getKey(): Internal.InputMappings$Input;
        setToDefault(): void;
        isConflictContextAndModifierActive(): boolean;
        getKeyConflictContext(): Internal.IKeyConflictContext;
        isActiveAndMatches(arg0: Internal.InputMappings$Input): boolean;
        getKeyModifier(): Internal.KeyModifier;
        getKeyBinding(): Internal.KeyBinding;
        hasKeyCodeModifierConflict(arg0: Internal.KeyBinding): boolean;
        setKeyModifierAndCode(arg0: Internal.KeyModifier_, arg1: Internal.InputMappings$Input): void;
        setKeyConflictContext(arg0: Internal.IKeyConflictContext): void;
    }
    type IForgeKeybinding_ = IForgeKeybinding;
    interface INBT {
        func_74737_b(): Internal.INBT;
        func_197637_c(): Internal.ITextComponent;
        func_150285_a_(): string;
        func_74732_a(): number;
        func_74734_a(arg0: Internal.DataOutput): void;
        toString(): string;
        func_225647_b_(): Internal.INBTType<any>;
        func_199850_a(arg0: string, arg1: number): Internal.ITextComponent;
    }
    type INBT_ = INBT;
    interface IClearable {
        func_174888_l(): void;
    }
    type IClearable_ = IClearable;
    class IntSummaryStatistics extends Document.Object implements Internal.IntConsumer {
        getMin(): number;
        getMax(): number;
        toString(): string;
        getAverage(): number;
        getSum(): number;
        getCount(): number;
        combine(arg0: Internal.IntSummaryStatistics): void;
        accept(arg0: number): void;
        get average(): number;
        get min(): number;
        get max(): number;
        get count(): number;
        get sum(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IntSummaryStatistics_ = IntSummaryStatistics;
    class EventsJS extends Document.Object {
        postToHandlers(id: string, list: Internal.List<Internal.EventsJS$ScriptEventHandler>, event: Internal.EventJS): boolean;
        handlers(id: string): Internal.List<Internal.EventsJS$ScriptEventHandler>;
        clear(): void;
        listen(id: string, handler: ((arg0: Internal.EventJS) => void)): void;
        readonly scriptManager : Internal.ScriptManager;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EventsJS_ = EventsJS;
    interface Temporal extends Internal.TemporalAccessor {
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.Temporal;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
    }
    type Temporal_ = Temporal;
    class BlockRegistryEventJS extends Internal.StartupEventJS {
        create(name: string): Internal.BlockBuilder;
        create(name: string, callback: ((arg0: Internal.BlockBuilder) => void)): void;
        addDetector(id: string): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockRegistryEventJS_ = BlockRegistryEventJS;
    class BlobFoliagePlacer extends Internal.FoliagePlacer {
        func_230374_a_(arg0: Internal.Random, arg1: number, arg2: Internal.BaseTreeFeatureConfig): number;
        static readonly field_236738_a_ : Internal.Codec<Internal.BlobFoliagePlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlobFoliagePlacer_ = BlobFoliagePlacer;
    interface RecvByteBufAllocator$Handle {
        continueReading(): boolean;
        allocate(arg0: Internal.ByteBufAllocator): Internal.ByteBuf;
        incMessagesRead(arg0: number): void;
        guess(): number;
        reset(arg0: Internal.ChannelConfig): void;
        readComplete(): void;
        attemptedBytesRead(arg0: number): void;
        attemptedBytesRead(): number;
        lastBytesRead(): number;
        lastBytesRead(arg0: number): void;
    }
    type RecvByteBufAllocator$Handle_ = RecvByteBufAllocator$Handle;
    class TutorialToast extends Document.Object implements Internal.IToast {
        func_230444_a_(arg0: Internal.MatrixStack, arg1: Internal.ToastGui, arg2: number): Internal.IToast$Visibility;
        func_193669_a(arg0: number): void;
        func_193670_a(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TutorialToast_ = TutorialToast;
    class SSpawnPlayerPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148945_j(): number;
        func_148941_i(): number;
        func_186899_f(): number;
        func_186897_e(): number;
        func_186898_d(): number;
        func_179819_c(): Internal.UUID;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_148943_d(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SSpawnPlayerPacket_ = SSpawnPlayerPacket;
    class MoverType extends Internal.Enum<Internal.MoverType> {
        static valueOf(arg0: string): Internal.MoverType;
        static values(): Internal.MoverType[];
        static readonly PLAYER : Internal.MoverType;
        static readonly PISTON : Internal.MoverType;
        static readonly SHULKER_BOX : Internal.MoverType;
        static readonly SELF : Internal.MoverType;
        static readonly SHULKER : Internal.MoverType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MoverType_ = "self" | "player" | "piston" | "shulker_box" | "shulker" | MoverType;
    interface Object2ObjectFunction <K, V> extends it.unimi.dsi.fastutil.Function<K, V> {
        defaultReturnValue(): V;
        defaultReturnValue(arg0: V): void;
        get(arg0: any): V;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
    }
    type Object2ObjectFunction_<K, V> = ((arg0: any) => V) | Object2ObjectFunction<K, V>;
    class FilterOutputStream extends Internal.OutputStream {
        flush(): void;
        close(): void;
        write(arg0: number[], arg1: number, arg2: number): void;
        write(arg0: number[]): void;
        write(arg0: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FilterOutputStream_ = FilterOutputStream;
    class HugeFungusConfig extends Document.Object implements Internal.IFeatureConfig {
        readonly field_236306_i_ : Internal.BlockState;
        static readonly field_236299_b_ : Internal.HugeFungusConfig;
        static readonly field_236300_c_ : Internal.HugeFungusConfig;
        readonly field_236305_h_ : Internal.BlockState;
        static readonly field_236298_a_ : Internal.Codec<Internal.HugeFungusConfig>;
        readonly field_236307_j_ : boolean;
        static readonly field_236302_e_ : Internal.HugeFungusConfig;
        readonly field_236304_g_ : Internal.BlockState;
        static readonly field_236301_d_ : Internal.HugeFungusConfig;
        readonly field_236303_f_ : Internal.BlockState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HugeFungusConfig_ = HugeFungusConfig;
    class Painter extends Document.Object {
        getObject(key: string): Internal.PainterObject;
        clear(): void;
        setVariable(key: string, variable: Internal.Unit): void;
        paint(root: Internal.CompoundNBT): void;
        make(type: string): Internal.PainterObject;
        readonly unitStorage : Internal.UnitStorage;
        static readonly LEFT : -1;
        static readonly RANDOM : Internal.Random;
        static readonly DRAW_INGAME : 1;
        static readonly INSTANCE : Internal.Painter;
        static readonly BOTTOM : 1;
        readonly screenHeightUnit : Internal.MutableUnit;
        static readonly DRAW_GUI : 2;
        static readonly CENTER : 0;
        readonly screenWidthUnit : Internal.MutableUnit;
        static readonly DRAW_ALWAYS : 0;
        static readonly TOP : -1;
        readonly mouseXUnit : Internal.MutableUnit;
        readonly mouseYUnit : Internal.MutableUnit;
        readonly deltaUnit : Internal.MutableUnit;
        static readonly RIGHT : 1;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Painter_ = Painter;
    class DecimalFormatSymbols extends Document.Object implements Internal.Cloneable, Internal.Serializable {
        setPercent(arg0: string): void;
        getCurrencySymbol(): string;
        getMonetaryGroupingSeparator(): string;
        getPatternSeparator(): string;
        setCurrency(arg0: Internal.Currency): void;
        getNaN(): string;
        setMonetaryDecimalSeparator(arg0: string): void;
        setInfinity(arg0: string): void;
        getGroupingSeparator(): string;
        hashCode(): number;
        getPercent(): string;
        setMinusSign(arg0: string): void;
        static getAvailableLocales(): Internal.Locale[];
        getCurrency(): Internal.Currency;
        getDecimalSeparator(): string;
        setCurrencySymbol(arg0: string): void;
        getDigit(): string;
        setPatternSeparator(arg0: string): void;
        getPerMill(): string;
        getInternationalCurrencySymbol(): string;
        setPerMill(arg0: string): void;
        getMinusSign(): string;
        getExponentSeparator(): string;
        getZeroDigit(): string;
        getInfinity(): string;
        setDecimalSeparator(arg0: string): void;
        setGroupingSeparator(arg0: string): void;
        setInternationalCurrencySymbol(arg0: string): void;
        setDigit(arg0: string): void;
        setExponentSeparator(arg0: string): void;
        setMonetaryGroupingSeparator(arg0: string): void;
        setZeroDigit(arg0: string): void;
        getMonetaryDecimalSeparator(): string;
        equals(arg0: any): boolean;
        clone(): any;
        setNaN(arg0: string): void;
        static getInstance(arg0: Internal.Locale): Internal.DecimalFormatSymbols;
        static getInstance(): Internal.DecimalFormatSymbols;
        getLocale(): Internal.Locale;
        get exponentSeparator(): string;
        get internationalCurrencySymbol(): string;
        get minusSign(): string;
        get instance(): Internal.DecimalFormatSymbols;
        get decimalSeparator(): string;
        get monetaryGroupingSeparator(): string;
        get perMill(): string;
        get currencySymbol(): string;
        get groupingSeparator(): string;
        get locale(): Internal.Locale;
        get percent(): string;
        get availableLocales(): Internal.Locale[];
        get monetaryDecimalSeparator(): string;
        get zeroDigit(): string;
        get naN(): string;
        get currency(): Internal.Currency;
        get infinity(): string;
        get patternSeparator(): string;
        get digit(): string;
        set exponentSeparator(arg0: string);
        set internationalCurrencySymbol(arg0: string);
        set minusSign(arg0: string);
        set decimalSeparator(arg0: string);
        set monetaryGroupingSeparator(arg0: string);
        set perMill(arg0: string);
        set currencySymbol(arg0: string);
        set groupingSeparator(arg0: string);
        set percent(arg0: string);
        set monetaryDecimalSeparator(arg0: string);
        set zeroDigit(arg0: string);
        set naN(arg0: string);
        set infinity(arg0: string);
        set currency(arg0: Internal.Currency);
        set digit(arg0: string);
        set patternSeparator(arg0: string);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DecimalFormatSymbols_ = DecimalFormatSymbols;
    class EndGatewayTileEntity extends Internal.EndPortalTileEntity implements Internal.ITickableTileEntity {
        static func_242690_a(arg0: Internal.Entity): boolean;
        func_145833_n(): number;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_195491_b(arg0: number): number;
        func_73660_a(): void;
        func_184313_a(arg0: Internal.Direction_): boolean;
        func_195500_d(): boolean;
        func_145842_c(arg0: number, arg1: number): boolean;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_189517_E_(): Internal.CompoundNBT;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_195497_a(arg0: number): number;
        func_195496_a(arg0: Internal.Entity): void;
        func_195490_f(): void;
        func_195489_b(arg0: BlockPos, arg1: boolean): void;
        func_195499_c(): boolean;
        func_195493_h(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EndGatewayTileEntity_ = EndGatewayTileEntity;
    class PiglinBruteSpecificSensor extends Internal.Sensor<Internal.LivingEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PiglinBruteSpecificSensor_ = PiglinBruteSpecificSensor;
    interface PlayerKJS {
        setStagesKJS(arg0: Internal.Stages): void;
        getStagesRawKJS(): Internal.Stages;
        getStagesKJS(): Internal.Stages;
    }
    type PlayerKJS_ = PlayerKJS;
    class AttackIndicatorStatus extends Internal.Enum<Internal.AttackIndicatorStatus> {
        func_216748_b(): string;
        static func_216749_a(arg0: number): Internal.AttackIndicatorStatus;
        static valueOf(arg0: string): Internal.AttackIndicatorStatus;
        static values(): Internal.AttackIndicatorStatus[];
        func_216751_a(): number;
        static readonly CROSSHAIR : Internal.AttackIndicatorStatus;
        static readonly HOTBAR : Internal.AttackIndicatorStatus;
        static readonly OFF : Internal.AttackIndicatorStatus;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttackIndicatorStatus_ = "off" | "crosshair" | "hotbar" | AttackIndicatorStatus;
    class GossipManager$Gossips extends Document.Object {
        func_220895_a(arg0: Internal.UUID): Internal.Stream<Internal.GossipManager$GossipEntry>;
        func_220896_a(arg0: ((arg0: Internal.GossipType) => boolean)): number;
        func_223529_a(): void;
        func_223528_b(arg0: Internal.GossipType_): void;
        func_223531_a(arg0: Internal.GossipType_): void;
        func_223530_b(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GossipManager$Gossips_ = GossipManager$Gossips;
    interface Function <T, R> {
        compose<V>(arg0: ((arg0: V) => T)): Internal.Function<V, R>;
        apply(arg0: T): R;
        andThen<V>(arg0: ((arg0: R) => V)): Internal.Function<T, V>;
    }
    type Function_<T, R> = ((arg0: T) => R) | Function<T, R>;
    abstract class IdScriptableObject extends Internal.ScriptableObject implements Internal.IdFunctionCall {
        getAttributes(key: Internal.Symbol): number;
        getAttributes(name: string): number;
        initPrototypeConstructor(f: Internal.IdFunctionObject): void;
        activatePrototypeMap(maxPrototypeId: number): void;
        execIdCall(f: Internal.IdFunctionObject, cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        setAttributes(name: string, attributes: number): void;
        delete(name: string): void;
        delete(key: Internal.Symbol): void;
        put(key: Internal.Symbol, start: Internal.Scriptable, value: any): void;
        put(name: string, start: Internal.Scriptable, value: any): void;
        exportAsJSClass(maxPrototypeId: number, scope: Internal.Scriptable, sealed: boolean): Internal.IdFunctionObject;
        hasPrototypeMap(): boolean;
        initPrototypeMethod(tag: any, id: number, propertyName: string, functionName: string, arity: number): Internal.IdFunctionObject;
        initPrototypeMethod(tag: any, id: number, name: string, arity: number): Internal.IdFunctionObject;
        initPrototypeMethod(tag: any, id: number, key: Internal.Symbol, functionName: string, arity: number): Internal.IdFunctionObject;
        defineOwnProperty(cx: Internal.Context, key: any, desc: Internal.ScriptableObject): void;
        get(key: Internal.Symbol, start: Internal.Scriptable): any;
        get(name: string, start: Internal.Scriptable): any;
        initPrototypeValue(id: number, key: Internal.Symbol, value: any, attributes: number): void;
        initPrototypeValue(id: number, name: string, value: any, attributes: number): void;
        has(name: string, start: Internal.Scriptable): boolean;
        has(key: Internal.Symbol, start: Internal.Scriptable): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IdScriptableObject_ = IdScriptableObject;
    class Currency extends Document.Object implements Internal.Serializable {
        getNumericCodeAsString(): string;
        getCurrencyCode(): string;
        getDefaultFractionDigits(): number;
        getDisplayName(): string;
        getDisplayName(arg0: Internal.Locale): string;
        getNumericCode(): number;
        toString(): string;
        static getInstance(arg0: Internal.Locale): Internal.Currency;
        static getInstance(arg0: string): Internal.Currency;
        static getAvailableCurrencies(): Internal.Set<Internal.Currency>;
        getSymbol(): string;
        getSymbol(arg0: Internal.Locale): string;
        get symbol(): string;
        get displayName(): string;
        get availableCurrencies(): Internal.Set<Internal.Currency>;
        get numericCodeAsString(): string;
        get currencyCode(): string;
        get defaultFractionDigits(): number;
        get numericCode(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Currency_ = Currency;
    interface IntIterator extends Internal.PrimitiveIterator$OfInt {
        next(): any;
        next(): number;
        skip(arg0: number): number;
        nextInt(): number;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
    }
    type IntIterator_ = IntIterator;
    class AttachServerDataEvent extends Internal.AttachDataEvent<Internal.ServerJS> {
        getListenerList(): Internal.ListenerList;
        invoke(): void;
        static readonly EVENT : Internal.Event<((arg0: Internal.AttachServerDataEvent) => void)>;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttachServerDataEvent_ = AttachServerDataEvent;
    interface Deque <E> extends Internal.Queue<E>, Internal.SequencedCollection<E> {
        descendingIterator(): Internal.Iterator<E>;
        offerFirst(arg0: E): boolean;
        poll(): E;
        pollLast(): E;
        removeLast(): E;
        getLast(): E;
        remove(arg0: any): boolean;
        remove(): E;
        offer(arg0: E): boolean;
        pop(): E;
        addLast(arg0: E): void;
        iterator(): Internal.Iterator<E>;
        getFirst(): E;
        removeFirst(): E;
        removeLastOccurrence(arg0: any): boolean;
        element(): E;
        add(arg0: E): boolean;
        peekFirst(): E;
        peekLast(): E;
        push(arg0: E): void;
        peek(): E;
        offerLast(arg0: E): boolean;
        contains(arg0: any): boolean;
        size(): number;
        addAll(arg0: Internal.Collection<E>): boolean;
        removeFirstOccurrence(arg0: any): boolean;
        pollFirst(): E;
        reversed(): Internal.Deque<E>;
        reversed(): Internal.SequencedCollection<any>;
        addFirst(arg0: E): void;
    }
    type Deque_<E> = Deque<E>;
    interface BinaryOperator <T> extends Internal.BiFunction<T, T, T> {
    }
    type BinaryOperator_<T> = BinaryOperator<T>;
    abstract class Locale$IsoCountryCode extends Internal.Enum<Internal.Locale$IsoCountryCode> {
        static valueOf(arg0: string): Internal.Locale$IsoCountryCode;
        static values(): Internal.Locale$IsoCountryCode[];
        static readonly PART3 : Internal.Locale$IsoCountryCode;
        static readonly PART1_ALPHA2 : Internal.Locale$IsoCountryCode;
        static readonly PART1_ALPHA3 : Internal.Locale$IsoCountryCode;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Locale$IsoCountryCode_ = "part1_alpha2" | "part1_alpha3" | "part3" | Locale$IsoCountryCode;
    interface ISidedInventory extends Internal.IInventory {
        func_180463_a(arg0: Internal.Direction_): number[];
        func_180461_b(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        func_180462_a(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
    }
    type ISidedInventory_ = ISidedInventory;
    class LootBuilder extends Document.Object implements Internal.FunctionContainer, Internal.ConditionContainer {
        clearFunctions(): void;
        toJson(): Internal.JsonObject;
        addFunction(arg0: Internal.JsonObject): Internal.FunctionContainer;
        addFunction(o: Internal.JsonObject): Internal.LootBuilder;
        addPool(p: ((arg0: Internal.LootBuilderPool) => void)): void;
        clearPools(): void;
        pool(p: ((arg0: Internal.LootBuilderPool) => void)): void;
        addCondition(arg0: Internal.JsonObject): Internal.ConditionContainer;
        addCondition(o: Internal.JsonObject): Internal.LootBuilder;
        clearConditions(): void;
        functions : Internal.JsonArray;
        pools : Internal.JsonArray;
        type : string;
        conditions : Internal.JsonArray;
        customId : ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootBuilder_ = LootBuilder;
    class EntityPotionEffectsJS extends Document.Object {
        add(mobEffect: Internal.Effect, duration: number): void;
        add(mobEffect: Internal.Effect, duration: number, amplifier: number): void;
        add(mobEffect: Internal.Effect, duration: number, amplifier: number, ambient: boolean, showParticles: boolean): void;
        add(mobEffect: Internal.Effect): void;
        getDuration(mobEffect: Internal.Effect): number;
        clear(): void;
        isApplicable(effect: Internal.EffectInstance): boolean;
        getActive(mobEffect: Internal.Effect): Internal.EffectInstance;
        getActive(): Internal.Collection<Internal.EffectInstance>;
        isActive(mobEffect: Internal.Effect): boolean;
        getMap(): Internal.Map<Internal.Effect, Internal.EffectInstance>;
        get active(): Internal.Collection<Internal.EffectInstance>;
        get map(): Internal.Map<Internal.Effect, Internal.EffectInstance>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityPotionEffectsJS_ = EntityPotionEffectsJS;
    interface Event <T> {
        unregister(arg0: T): void;
        isRegistered(arg0: T): boolean;
        invoker(): T;
        clearListeners(): void;
        register(arg0: T): void;
    }
    type Event_<T> = Event<T>;
    interface MapEncoder <A> extends Internal.Keyable {
        encode<T_>(arg0: A, arg1: Internal.DynamicOps<T_>, arg2: Internal.RecordBuilder<T_>): Internal.RecordBuilder<T_>;
        flatComap<B_>(arg0: ((arg0: B_) => Internal.DataResult<A>)): Internal.MapEncoder<B_>;
        compressedBuilder<T_>(arg0: Internal.DynamicOps<T_>): Internal.RecordBuilder<T_>;
        comap<B_>(arg0: ((arg0: B_) => A)): Internal.MapEncoder<B_>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.MapEncoder<A>;
        encoder(): Internal.Encoder<A>;
        compressor<T_>(arg0: Internal.DynamicOps<T_>): Internal.KeyCompressor<T_>;
    }
    type MapEncoder_<A> = MapEncoder<A>;
    class VillagerBabiesSensor extends Internal.Sensor<Internal.LivingEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VillagerBabiesSensor_ = VillagerBabiesSensor;
    class TimerCallbackManager <T> extends Document.Object {
        func_227574_a_(): Internal.Set<string>;
        func_216327_b(): Internal.ListNBT;
        func_216331_a(arg0: T, arg1: number): void;
        func_227576_a_(arg0: string, arg1: number, arg2: ((arg0: T, arg1: Internal.TimerCallbackManager<T>, arg2: number) => void)): void;
        func_227575_a_(arg0: string): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TimerCallbackManager_<T> = TimerCallbackManager<T>;
    class Biome$Category extends Internal.Enum<Internal.Biome$Category> implements Internal.IStringSerializable {
        static valueOf(arg0: string): Internal.Biome$Category;
        func_176610_l(): string;
        static values(): Internal.Biome$Category[];
        static func_235103_a_(arg0: string): Internal.Biome$Category;
        func_222352_a(): string;
        static readonly BEACH : Internal.Biome$Category;
        static readonly MESA : Internal.Biome$Category;
        static readonly SAVANNA : Internal.Biome$Category;
        static readonly THEEND : Internal.Biome$Category;
        static readonly JUNGLE : Internal.Biome$Category;
        static readonly OCEAN : Internal.Biome$Category;
        static readonly TAIGA : Internal.Biome$Category;
        static readonly DESERT : Internal.Biome$Category;
        static readonly RIVER : Internal.Biome$Category;
        static readonly FOREST : Internal.Biome$Category;
        static readonly MUSHROOM : Internal.Biome$Category;
        static readonly field_235102_r_ : Internal.Codec<Internal.Biome$Category>;
        static readonly NETHER : Internal.Biome$Category;
        static readonly PLAINS : Internal.Biome$Category;
        static readonly SWAMP : Internal.Biome$Category;
        static readonly NONE : Internal.Biome$Category;
        static readonly EXTREME_HILLS : Internal.Biome$Category;
        static readonly ICY : Internal.Biome$Category;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Biome$Category_ = "none" | "taiga" | "extreme_hills" | "jungle" | "mesa" | "plains" | "savanna" | "icy" | "theend" | "beach" | "forest" | "ocean" | "desert" | "river" | "swamp" | "mushroom" | "nether" | Biome$Category;
    class ItemRequirement$ItemUseType extends Internal.Enum<Internal.ItemRequirement$ItemUseType> {
        static valueOf(arg0: string): Internal.ItemRequirement$ItemUseType;
        static values(): Internal.ItemRequirement$ItemUseType[];
        static readonly CONSUME : Internal.ItemRequirement$ItemUseType;
        static readonly DAMAGE : Internal.ItemRequirement$ItemUseType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemRequirement$ItemUseType_ = "consume" | "damage" | ItemRequirement$ItemUseType;
    interface IDayTimeReader extends Internal.IWorldReader {
        func_242415_f(arg0: number): number;
        func_242413_ae(): number;
        func_242414_af(): number;
        func_241851_ab(): number;
    }
    type IDayTimeReader_ = IDayTimeReader;
    class RenderState$AlphaState extends Internal.RenderState {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$AlphaState_ = RenderState$AlphaState;
    class MobSpawnInfo$Spawners extends Internal.WeightedRandom$Item {
        toString(): string;
        static readonly field_242587_b : Internal.Codec<Internal.MobSpawnInfo$Spawners>;
        readonly field_242588_c : Internal.EntityType<any>;
        readonly field_242589_d : number;
        readonly field_242590_e : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MobSpawnInfo$Spawners_ = MobSpawnInfo$Spawners;
    interface ObjectIterator <K> extends Internal.Iterator<K> {
        skip(arg0: number): number;
    }
    type ObjectIterator_<K> = ObjectIterator<K>;
    class BlockPos$Mutable extends BlockPos {
        func_241872_a(arg0: Internal.Direction$Axis_, arg1: number): BlockPos;
        func_239621_a_(arg0: Vec3i, arg1: number, arg2: number, arg3: number): Internal.BlockPos$Mutable;
        func_189534_c(arg0: Internal.Direction_, arg1: number): Internal.BlockPos$Mutable;
        func_189532_c(arg0: number, arg1: number, arg2: number): Internal.BlockPos$Mutable;
        func_189533_g(arg0: Vec3i): Internal.BlockPos$Mutable;
        func_196234_d(arg0: number, arg1: number, arg2: number): Internal.BlockPos$Mutable;
        func_189536_c(arg0: Internal.Direction_): Internal.BlockPos$Mutable;
        func_190942_a(arg0: Internal.Rotation_): BlockPos;
        func_177967_a(arg0: Internal.Direction_, arg1: number): BlockPos;
        func_177967_a(arg0: Internal.Direction_, arg1: number): Vec3i;
        func_177984_a(): Vec3i;
        func_177963_a(arg0: number, arg1: number, arg2: number): BlockPos;
        func_177981_b(arg0: number): Vec3i;
        func_177982_a(arg0: number, arg1: number, arg2: number): BlockPos;
        func_223471_o(arg0: number): void;
        func_239622_a_(arg0: Vec3i, arg1: Internal.Direction_): Internal.BlockPos$Mutable;
        func_239620_a_(arg0: Internal.Direction$Axis_, arg1: number, arg2: number): Internal.BlockPos$Mutable;
        func_185334_h(): BlockPos;
        func_223472_q(arg0: number): void;
        func_181079_c(arg0: number, arg1: number, arg2: number): Internal.BlockPos$Mutable;
        func_185336_p(arg0: number): void;
        func_177979_c(arg0: number): Vec3i;
        func_177955_d(arg0: Vec3i): Vec3i;
        func_243531_h(arg0: Vec3i): Internal.BlockPos$Mutable;
        func_177977_b(): Vec3i;
        func_218294_g(arg0: number): Internal.BlockPos$Mutable;
        func_218295_a(arg0: Internal.AxisRotation_, arg1: number, arg2: number, arg3: number): Internal.BlockPos$Mutable;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockPos$Mutable_ = BlockPos$Mutable;
    interface IWorldGenerationReader extends Internal.IWorldGenerationBaseReader, Internal.IWorldWriter {
    }
    type IWorldGenerationReader_ = IWorldGenerationReader;
    class MaterialColor extends Document.Object {
        func_151643_b(arg0: number): number;
        static readonly field_76281_a : Internal.MaterialColor[];
        static readonly field_151658_d : Internal.MaterialColor;
        static readonly field_151656_f : Internal.MaterialColor;
        static readonly field_151646_E : Internal.MaterialColor;
        static readonly field_241543_af_ : Internal.MaterialColor;
        static readonly field_151675_r : Internal.MaterialColor;
        static readonly field_151677_p : Internal.MaterialColor;
        static readonly field_151673_t : Internal.MaterialColor;
        static readonly field_151671_v : Internal.MaterialColor;
        static readonly field_193572_X : Internal.MaterialColor;
        static readonly field_197656_x : Internal.MaterialColor;
        static readonly field_193574_Z : Internal.MaterialColor;
        static readonly field_151648_G : Internal.MaterialColor;
        static readonly field_193562_N : Internal.MaterialColor;
        static readonly field_193564_P : Internal.MaterialColor;
        static readonly field_241542_ae_ : Internal.MaterialColor;
        static readonly field_151652_H : Internal.MaterialColor;
        static readonly field_193565_Q : Internal.MaterialColor;
        static readonly field_197655_T : Internal.MaterialColor;
        static readonly field_151654_J : Internal.MaterialColor;
        static readonly field_151668_h : Internal.MaterialColor;
        static readonly field_151666_j : Internal.MaterialColor;
        static readonly field_151664_l : Internal.MaterialColor;
        static readonly field_151662_n : Internal.MaterialColor;
        static readonly field_193567_S : Internal.MaterialColor;
        static readonly field_241540_ac_ : Internal.MaterialColor;
        static readonly field_193570_V : Internal.MaterialColor;
        static readonly field_151650_B : Internal.MaterialColor;
        static readonly field_151660_b : Internal.MaterialColor;
        static readonly field_151678_z : Internal.MaterialColor;
        readonly field_76290_q : number;
        static readonly field_151649_A : Internal.MaterialColor;
        static readonly field_151645_D : Internal.MaterialColor;
        static readonly field_151676_q : Internal.MaterialColor;
        static readonly field_151674_s : Internal.MaterialColor;
        static readonly field_151672_u : Internal.MaterialColor;
        static readonly field_151670_w : Internal.MaterialColor;
        static readonly field_193571_W : Internal.MaterialColor;
        static readonly field_151647_F : Internal.MaterialColor;
        static readonly field_151659_e : Internal.MaterialColor;
        static readonly field_151657_g : Internal.MaterialColor;
        static readonly field_193573_Y : Internal.MaterialColor;
        static readonly field_193560_ab : Internal.MaterialColor;
        static readonly field_241539_ab_ : Internal.MaterialColor;
        static readonly field_193561_M : Internal.MaterialColor;
        static readonly field_193563_O : Internal.MaterialColor;
        static readonly field_241545_ah_ : Internal.MaterialColor;
        static readonly field_151653_I : Internal.MaterialColor;
        static readonly field_241541_ad_ : Internal.MaterialColor;
        static readonly field_193559_aa : Internal.MaterialColor;
        static readonly field_193566_R : Internal.MaterialColor;
        static readonly field_241544_ag_ : Internal.MaterialColor;
        static readonly field_151655_K : Internal.MaterialColor;
        static readonly field_151669_i : Internal.MaterialColor;
        static readonly field_151667_k : Internal.MaterialColor;
        static readonly field_151665_m : Internal.MaterialColor;
        static readonly field_151663_o : Internal.MaterialColor;
        static readonly field_193568_T : Internal.MaterialColor;
        static readonly field_151651_C : Internal.MaterialColor;
        static readonly field_151661_c : Internal.MaterialColor;
        static readonly field_151679_y : Internal.MaterialColor;
        readonly field_76291_p : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MaterialColor_ = MaterialColor;
    class ContinuationPending extends Internal.RuntimeException {
        getContinuation(): any;
        setApplicationState(applicationState: any): void;
        getApplicationState(): any;
        setContinuation(continuation: Internal.NativeContinuation): void;
        get applicationState(): any;
        get continuation(): any;
        set applicationState(applicationState: any);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ContinuationPending_ = ContinuationPending;
    class SearchTreeManager$Key <T> extends Document.Object {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SearchTreeManager$Key_<T> = SearchTreeManager$Key<T>;
    class HopperContainer extends Internal.Container {
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HopperContainer_ = HopperContainer;
    class BlockContainerJS extends Document.Object implements Internal.SpecialEquality {
        getBreakSound(): Internal.SoundEvent;
        getStepSound(): Internal.SoundEvent;
        emissiveRendering(blockGetter: Internal.IBlockReader, blockPos: BlockPos): boolean;
        stepOn(level: Internal.World, blockPos: BlockPos, entity: Internal.Entity): void;
        spawnFireworks(fireworks: Internal.FireworksJS): void;
        getOffsetType(): Internal.AbstractBlock$OffsetType;
        isPossibleToRespawnInThis(): boolean;
        getDestroySpeed(blockGetter: Internal.IBlockReader, blockPos: BlockPos): number;
        getItem(): Internal.ItemStackJS;
        getTags(): Internal.Collection<ResourceLocation>;
        getEast(): Internal.BlockContainerJS;
        isRedstoneConductor(blockGetter: Internal.IBlockReader, blockPos: BlockPos): boolean;
        isViewBlocking(blockGetter: Internal.IBlockReader, blockPos: BlockPos): boolean;
        animateTick(blockState: Internal.BlockState, level: Internal.World, blockPos: BlockPos, random: Internal.Random): void;
        animateTick(level: Internal.World, blockPos: BlockPos, random: Internal.Random): void;
        useShapeForLightOcclusion(blockState: Internal.BlockState): boolean;
        useShapeForLightOcclusion(): boolean;
        distManhattan(vec3i: Vec3i): number;
        above(i: number): Internal.BlockContainerJS;
        entityCanStandOn(blockGetter: Internal.IBlockReader, blockPos: BlockPos, entity: Internal.Entity): boolean;
        getMapColor(blockGetter: Internal.IBlockReader, blockPos: BlockPos): Internal.MaterialColor;
        getStateForPlacement(blockPlaceContext: Internal.BlockItemUseContext): Internal.BlockState;
        subtract(vec3i: Vec3i): Internal.BlockContainerJS;
        getProperties(): Internal.Map<string, string>;
        getProperties(): Internal.Collection<any>;
        closerThan(position: Internal.IPosition, d: number): boolean;
        closerThan(vec3i: Vec3i, d: number): boolean;
        destroy(levelAccessor: Internal.IWorld, blockPos: BlockPos, blockState: Internal.BlockState): void;
        is(block: Internal.Block): boolean;
        is(tag: Internal.ITag<any>): boolean;
        is(tag: Internal.ITag<any>, predicate: ((arg0: any) => boolean)): boolean;
        updateNeighbourShapes(levelAccessor: Internal.IWorld, blockPos: BlockPos, i: number): void;
        updateNeighbourShapes(levelAccessor: Internal.IWorld, blockPos: BlockPos, i: number, j: number): void;
        fallOn(level: Internal.World, blockPos: BlockPos, entity: Internal.Entity, f: number): void;
        playerDestroy(level: Internal.World, player: Internal.PlayerEntity, blockPos: BlockPos, blockState: Internal.BlockState, blockEntity: Internal.TileEntity, itemStack: Internal.ItemStack): void;
        getMaterial(): Internal.MaterialJS;
        getMaterial(): Internal.Material;
        getSouth(): Internal.BlockContainerJS;
        getSpeedFactor(): number;
        getType(): Internal.TileEntityType<any>;
        getDestroyProgress(blockState: Internal.BlockState, player: Internal.PlayerEntity, blockGetter: Internal.IBlockReader, blockPos: BlockPos): number;
        getDestroyProgress(player: Internal.PlayerEntity, blockGetter: Internal.IBlockReader, blockPos: BlockPos): number;
        hasLargeCollisionShape(): boolean;
        triggerEvent(level: Internal.World, blockPos: BlockPos, i: number, j: number): boolean;
        triggerEvent(i: number, j: number): boolean;
        triggerEvent(blockState: Internal.BlockState, level: Internal.World, blockPos: BlockPos, i: number, j: number): boolean;
        getLightBlock(blockGetter: Internal.IBlockReader, blockPos: BlockPos): number;
        getLightBlock(blockState: Internal.BlockState, blockGetter: Internal.IBlockReader, blockPos: BlockPos): number;
        isAir(): boolean;
        shouldRenderBackwardUpFace(blockGetter: Internal.IBlockReader, blockPos: BlockPos): boolean;
        relative(direction: Internal.Direction_): Internal.BlockContainerJS;
        relative(direction: Internal.Direction_, i: number): Internal.BlockContainerJS;
        relative(axis: Internal.Direction$Axis_, i: number): Internal.BlockContainerJS;
        specialEquals(o: any, shallow: boolean): boolean;
        logInvalidState(): void;
        getMenuProvider(level: Internal.World, blockPos: BlockPos): Internal.INamedContainerProvider;
        getMenuProvider(blockState: Internal.BlockState, level: Internal.World, blockPos: BlockPos): Internal.INamedContainerProvider;
        mirror(mirror: Internal.Mirror_): void;
        mirror(blockState: Internal.BlockState, mirror: Internal.Mirror_): Internal.BlockState;
        initCache(): void;
        south(i: number): Internal.BlockContainerJS;
        playerWillDestroy(level: Internal.World, blockPos: BlockPos, blockState: Internal.BlockState, player: Internal.PlayerEntity): void;
        getViewDistance(): number;
        north(i: number): Internal.BlockContainerJS;
        save(compoundTag: Internal.CompoundNBT): Internal.CompoundNBT;
        getUp(): Internal.BlockContainerJS;
        onPlace(blockState: Internal.BlockState, level: Internal.World, blockPos: BlockPos, blockState2: Internal.BlockState, bl: boolean): void;
        onPlace(level: Internal.World, blockPos: BlockPos, blockState: Internal.BlockState, bl: boolean): void;
        getPistonPushReaction(blockState: Internal.BlockState): Internal.PushReaction;
        getPistonPushReaction(): Internal.PushReaction;
        cycle(property: Internal.Property<any>): Internal.BlockState;
        getRenderShape(blockState: Internal.BlockState): Internal.BlockRenderType;
        getRenderShape(): Internal.BlockRenderType;
        getHeight(blockGetter: Internal.IBlockReader, blockPos: BlockPos): number;
        isRemoved(): boolean;
        attack(blockState: Internal.BlockState, level: Internal.World, blockPos: BlockPos, player: Internal.PlayerEntity): void;
        attack(level: Internal.World, blockPos: BlockPos, player: Internal.PlayerEntity): void;
        getSoundType(): Internal.SoundType;
        getSoundType(blockState: Internal.BlockState): Internal.SoundType;
        get(axis: Internal.Direction$Axis_): number;
        isSource(): boolean;
        neighborChanged(level: Internal.World, blockPos: BlockPos, block: Internal.Block, blockPos2: BlockPos, bl: boolean): void;
        neighborChanged(blockState: Internal.BlockState, level: Internal.World, blockPos: BlockPos, block: Internal.Block, blockPos2: BlockPos, bl: boolean): void;
        getVisualShape(blockState: Internal.BlockState, blockGetter: Internal.IBlockReader, blockPos: BlockPos, collisionContext: Internal.ISelectionContext): Internal.VoxelShape;
        getVisualShape(blockGetter: Internal.IBlockReader, blockPos: BlockPos, collisionContext: Internal.ISelectionContext): Internal.VoxelShape;
        getEntityId(): string;
        getInventory(facing: Internal.Direction_): Internal.InventoryJS;
        getCloneItemStack(blockGetter: Internal.IBlockReader, blockPos: BlockPos, blockState: Internal.BlockState): Internal.ItemStack;
        isEntityBlock(): boolean;
        spawnAfterBreak(serverLevel: Internal.ServerWorld, blockPos: BlockPos, itemStack: Internal.ItemStack): void;
        spawnAfterBreak(blockState: Internal.BlockState, serverLevel: Internal.ServerWorld, blockPos: BlockPos, itemStack: Internal.ItemStack): void;
        getSeed(blockState: Internal.BlockState, blockPos: BlockPos): number;
        getSeed(blockPos: BlockPos): number;
        getPlayersInRadius(): Internal.EntityArrayList;
        getPlayersInRadius(radius: number): Internal.EntityArrayList;
        set(id: ResourceLocation_, properties: Internal.Map_<any, any>): void;
        set(id: ResourceLocation_): void;
        set(id: ResourceLocation_, properties: Internal.Map_<any, any>, flags: number): void;
        fillItemCategory(creativeModeTab: Internal.ItemGroup, nonNullList: Internal.NonNullList<any>): void;
        getUpdateTag(): Internal.CompoundNBT;
        getDown(): Internal.BlockContainerJS;
        fillCrashReportCategory(crashReportCategory: Internal.CrashReportCategory): void;
        getEntity(): Internal.TileEntity;
        setBlockState(state: Internal.BlockState, flags: number): void;
        createLegacyBlock(): Internal.BlockState;
        wasExploded(level: Internal.World, blockPos: BlockPos, explosion: Internal.Explosion): void;
        getLevel(): Internal.WorldJS;
        populateNeighbours(map: Internal.Map_<any, any>): void;
        getPitch(): number;
        canBeReplacedWith(blockGetter: Internal.IBlockReader, blockPos: BlockPos, fluid: Internal.Fluid, direction: Internal.Direction_): boolean;
        hasAnalogOutputSignal(blockState: Internal.BlockState): boolean;
        hasAnalogOutputSignal(): boolean;
        equals(obj: any): boolean;
        toString(): string;
        updateShape(direction: Internal.Direction_, blockState: Internal.BlockState, levelAccessor: Internal.IWorld, blockPos: BlockPos, blockPos2: BlockPos): Internal.BlockState;
        updateShape(blockState: Internal.BlockState, direction: Internal.Direction_, blockState2: Internal.BlockState, levelAccessor: Internal.IWorld, blockPos: BlockPos, blockPos2: BlockPos): Internal.BlockState;
        onRemove(blockState: Internal.BlockState, level: Internal.World, blockPos: BlockPos, blockState2: Internal.BlockState, bl: boolean): void;
        onRemove(level: Internal.World, blockPos: BlockPos, blockState: Internal.BlockState, bl: boolean): void;
        rotate(blockState: Internal.BlockState, rotation: Internal.Rotation_): Internal.BlockState;
        rotate(rotation: Internal.Rotation_): Internal.BlockContainerJS;
        isSuffocating(blockGetter: Internal.IBlockReader, blockPos: BlockPos): boolean;
        getWorld(): Internal.WorldJS;
        getName(): Internal.IFormattableTextComponent;
        getPlaceSound(): Internal.SoundEvent;
        use(level: Internal.World, player: Internal.PlayerEntity, interactionHand: Hand_, blockHitResult: Internal.BlockRayTraceResult): Internal.ActionResultType;
        use(blockState: Internal.BlockState, level: Internal.World, blockPos: BlockPos, player: Internal.PlayerEntity, interactionHand: Hand_, blockHitResult: Internal.BlockRayTraceResult): Internal.ActionResultType;
        defaultMaterialColor(): Internal.MaterialColor;
        clearCache(): void;
        compareTo(vec3i: Vec3i): number;
        defaultBlockState(): Internal.BlockState;
        getCanSeeSky(): boolean;
        setPosition(blockPos: BlockPos): void;
        onProjectileHit(level: Internal.World, blockState: Internal.BlockState, blockHitResult: Internal.BlockRayTraceResult, projectile: Internal.ProjectileEntity): void;
        getNorth(): Internal.BlockContainerJS;
        getJumpFactor(): number;
        entityCanStandOnFace(blockGetter: Internal.IBlockReader, blockPos: BlockPos, entity: Internal.Entity, direction: Internal.Direction_): boolean;
        getUpdatePacket(): Internal.SUpdateTileEntityPacket;
        updateIndirectNeighbourShapes(levelAccessor: Internal.IWorld, blockPos: BlockPos, i: number, j: number): void;
        updateIndirectNeighbourShapes(levelAccessor: Internal.IWorld, blockPos: BlockPos, i: number): void;
        updateIndirectNeighbourShapes(blockState: Internal.BlockState, levelAccessor: Internal.IWorld, blockPos: BlockPos, i: number, j: number): void;
        hasDynamicShape(): boolean;
        getPos(): BlockPos;
        getDimension(): string;
        asItem(): Internal.Item;
        west(i: number): Internal.BlockContainerJS;
        getCollisionShape(blockGetter: Internal.IBlockReader, blockPos: BlockPos, collisionContext: Internal.ISelectionContext): Internal.VoxelShape;
        getCollisionShape(blockGetter: Internal.IBlockReader, blockPos: BlockPos): Internal.VoxelShape;
        getCollisionShape(blockState: Internal.BlockState, blockGetter: Internal.IBlockReader, blockPos: BlockPos, collisionContext: Internal.ISelectionContext): Internal.VoxelShape;
        isFaceSturdy(blockGetter: Internal.IBlockReader, blockPos: BlockPos, direction: Internal.Direction_, supportType: Internal.BlockVoxelShape_): boolean;
        isFaceSturdy(blockGetter: Internal.IBlockReader, blockPos: BlockPos, direction: Internal.Direction_): boolean;
        getOcclusionShape(blockGetter: Internal.IBlockReader, blockPos: BlockPos): Internal.VoxelShape;
        getOcclusionShape(blockState: Internal.BlockState, blockGetter: Internal.IBlockReader, blockPos: BlockPos): Internal.VoxelShape;
        getFriction(): number;
        isPathfindable(blockGetter: Internal.IBlockReader, blockPos: BlockPos, pathComputationType: Internal.PathType_): boolean;
        isPathfindable(blockState: Internal.BlockState, blockGetter: Internal.IBlockReader, blockPos: BlockPos, pathComputationType: Internal.PathType_): boolean;
        getAmount(): number;
        getLight(): number;
        getWest(): Internal.BlockContainerJS;
        isValidSpawn(blockGetter: Internal.IBlockReader, blockPos: BlockPos, entityType: Internal.EntityType<any>): boolean;
        offset(f: Internal.Direction_, d: number): Internal.BlockContainerJS;
        offset(vec3i: Vec3i): Internal.BlockContainerJS;
        offset(d: number, e: number, f: number): Internal.BlockContainerJS;
        offset(f: Internal.Direction_): Internal.BlockContainerJS;
        offset(x: number, y: number, z: number): Internal.BlockContainerJS;
        getExplosionResistance(): number;
        getDripParticle(): Internal.IParticleData;
        hasTag(tag: ResourceLocation_): boolean;
        isRandomlyTicking(blockState: Internal.BlockState): boolean;
        isRandomlyTicking(): boolean;
        isCollisionShapeFullBlock(blockGetter: Internal.IBlockReader, blockPos: BlockPos): boolean;
        getStateDefinition(): Internal.StateContainer<any, any>;
        below(i: number): Internal.BlockContainerJS;
        handleRain(level: Internal.World, blockPos: BlockPos): void;
        setPlacedBy(level: Internal.World, blockPos: BlockPos, blockState: Internal.BlockState, livingEntity: Internal.LivingEntity, itemStack: Internal.ItemStack): void;
        tick(level: Internal.World, blockPos: BlockPos): void;
        tick(serverLevel: Internal.ServerWorld, blockPos: BlockPos, random: Internal.Random): void;
        tick(blockState: Internal.BlockState, serverLevel: Internal.ServerWorld, blockPos: BlockPos, random: Internal.Random): void;
        getFallSound(): Internal.SoundEvent;
        createEntity(id: ResourceLocation_): Internal.EntityJS;
        hasProperty(property: Internal.Property<any>): boolean;
        getAnalogOutputSignal(blockState: Internal.BlockState, level: Internal.World, blockPos: BlockPos): number;
        getAnalogOutputSignal(level: Internal.World, blockPos: BlockPos): number;
        onlyOpCanSetNbt(): boolean;
        setChanged(): void;
        isSignalSource(blockState: Internal.BlockState): boolean;
        isSignalSource(): boolean;
        getOptionalValue(property: Internal.Property<any>): Internal.Optional<any>;
        getBlockState(): Internal.BlockState;
        getDirectSignal(blockState: Internal.BlockState, blockGetter: Internal.IBlockReader, blockPos: BlockPos, direction: Internal.Direction_): number;
        getDirectSignal(blockGetter: Internal.IBlockReader, blockPos: BlockPos, direction: Internal.Direction_): number;
        getDescriptionId(): string;
        getOffset(blockGetter: Internal.IBlockReader, blockPos: BlockPos): Vec3;
        getOwnHeight(): number;
        getHitSound(): Internal.SoundEvent;
        getLightEmission(): number;
        getShape(blockGetter: Internal.IBlockReader, blockPos: BlockPos, collisionContext: Internal.ISelectionContext): Internal.VoxelShape;
        getShape(blockGetter: Internal.IBlockReader, blockPos: BlockPos): Internal.VoxelShape;
        getShape(blockState: Internal.BlockState, blockGetter: Internal.IBlockReader, blockPos: BlockPos, collisionContext: Internal.ISelectionContext): Internal.VoxelShape;
        getBiomeId(): string;
        getId(): string;
        requiresCorrectToolForDrops(): boolean;
        setRemoved(): void;
        canOcclude(): boolean;
        getLootTable(): ResourceLocation;
        getInteractionShape(blockState: Internal.BlockState, blockGetter: Internal.IBlockReader, blockPos: BlockPos): Internal.VoxelShape;
        getInteractionShape(blockGetter: Internal.IBlockReader, blockPos: BlockPos): Internal.VoxelShape;
        east(i: number): Internal.BlockContainerJS;
        getVolume(): number;
        getSignal(blockState: Internal.BlockState, blockGetter: Internal.IBlockReader, blockPos: BlockPos, direction: Internal.Direction_): number;
        getSignal(blockGetter: Internal.IBlockReader, blockPos: BlockPos, direction: Internal.Direction_): number;
        load(blockState: Internal.BlockState, compoundTag: Internal.CompoundNBT): void;
        getFaceOcclusionShape(blockGetter: Internal.IBlockReader, blockPos: BlockPos, direction: Internal.Direction_): Internal.VoxelShape;
        setEntityData(tag: Internal.CompoundNBT): void;
        mergeEntityData(tag: Internal.CompoundNBT): void;
        getFlow(blockGetter: Internal.IBlockReader, blockPos: BlockPos): Vec3;
        entityInside(blockState: Internal.BlockState, level: Internal.World, blockPos: BlockPos, entity: Internal.Entity): void;
        entityInside(level: Internal.World, blockPos: BlockPos, entity: Internal.Entity): void;
        appendHoverText(itemStack: Internal.ItemStack, blockGetter: Internal.IBlockReader, list: Internal.List<any>, tooltipFlag: Internal.ITooltipFlag): void;
        hasPostProcess(blockGetter: Internal.IBlockReader, blockPos: BlockPos): boolean;
        propagatesSkylightDown(blockState: Internal.BlockState, blockGetter: Internal.IBlockReader, blockPos: BlockPos): boolean;
        propagatesSkylightDown(blockGetter: Internal.IBlockReader, blockPos: BlockPos): boolean;
        canBeReplaced(blockState: Internal.BlockState, fluid: Internal.Fluid): boolean;
        canBeReplaced(blockState: Internal.BlockState, blockPlaceContext: Internal.BlockItemUseContext): boolean;
        canBeReplaced(blockPlaceContext: Internal.BlockItemUseContext): boolean;
        canBeReplaced(fluid: Internal.Fluid): boolean;
        getBlock(): Internal.Block;
        canSurvive(blockState: Internal.BlockState, levelReader: Internal.IWorldReader, blockPos: BlockPos): boolean;
        canSurvive(levelReader: Internal.IWorldReader, blockPos: BlockPos): boolean;
        randomTick(blockState: Internal.BlockState, serverLevel: Internal.ServerWorld, blockPos: BlockPos, random: Internal.Random): void;
        randomTick(serverLevel: Internal.ServerWorld, blockPos: BlockPos, random: Internal.Random): void;
        randomTick(level: Internal.World, blockPos: BlockPos, random: Internal.Random): void;
        getValues(): Internal.ImmutableMap<any, any>;
        cross(vec3i: Vec3i): Internal.BlockContainerJS;
        updateEntityAfterFallOn(blockGetter: Internal.IBlockReader, entity: Internal.Entity): void;
        setLevelAndPosition(level: Internal.World, blockPos: BlockPos): void;
        distSqr(vec3i: Vec3i): number;
        distSqr(position: Internal.IPosition, bl: boolean): number;
        distSqr(d: number, e: number, f: number, bl: boolean): number;
        createExplosion(): Internal.ExplosionJS;
        getShadeBrightness(blockGetter: Internal.IBlockReader, blockPos: BlockPos): number;
        getShadeBrightness(blockState: Internal.BlockState, blockGetter: Internal.IBlockReader, blockPos: BlockPos): number;
        skipRendering(blockState: Internal.BlockState, direction: Internal.Direction_): boolean;
        skipRendering(blockState: Internal.BlockState, blockState2: Internal.BlockState, direction: Internal.Direction_): boolean;
        getValue(property: Internal.Property<any>): Internal.Comparable<any>;
        spawnLightning(effectOnly: boolean, player: Internal.EntityJS_): void;
        spawnLightning(effectOnly: boolean): void;
        getX(): number;
        getY(): number;
        dropFromExplosion(explosion: Internal.Explosion): boolean;
        getZ(): number;
        isSolidRender(blockGetter: Internal.IBlockReader, blockPos: BlockPos): boolean;
        setValue(property: Internal.Property<any>, comparable: Internal.Comparable<any>): Internal.BlockState;
        getBlockSupportShape(blockState: Internal.BlockState, blockGetter: Internal.IBlockReader, blockPos: BlockPos): Internal.VoxelShape;
        getBlockSupportShape(blockGetter: Internal.IBlockReader, blockPos: BlockPos): Internal.VoxelShape;
        getEntityData(): Internal.CompoundNBT;
        getDrops(builder: Internal.LootContext$Builder): Internal.List<any>;
        getDrops(blockState: Internal.BlockState, builder: Internal.LootContext$Builder): Internal.List<any>;
        getInstance(): Internal.BlockContainerJS;
        clearRemoved(): void;
        getFluidState(blockState: Internal.BlockState): Internal.FluidState;
        getFluidState(): Internal.FluidState;
        readonly minecraftLevel : Internal.World;
        get blockState(): Internal.BlockState;
        get fluidState(): Internal.FluidState;
        get explosionResistance(): number;
        get instance(): Internal.BlockContainerJS;
        get playersInRadius(): Internal.EntityArrayList;
        get source(): boolean;
        get type(): Internal.TileEntityType<any>;
        get down(): Internal.BlockContainerJS;
        get stateDefinition(): Internal.StateContainer<any, any>;
        get lootTable(): ResourceLocation;
        get signalSource(): boolean;
        get block(): Internal.Block;
        get up(): Internal.BlockContainerJS;
        get pitch(): number;
        get id(): string;
        get fallSound(): Internal.SoundEvent;
        get hitSound(): Internal.SoundEvent;
        get pistonPushReaction(): Internal.PushReaction;
        get soundType(): Internal.SoundType;
        get item(): Internal.ItemStackJS;
        get entityBlock(): boolean;
        get stepSound(): Internal.SoundEvent;
        get level(): Internal.WorldJS;
        get canSeeSky(): boolean;
        get tags(): Internal.Collection<ResourceLocation>;
        get ownHeight(): number;
        get volume(): number;
        get placeSound(): Internal.SoundEvent;
        get light(): number;
        get name(): Internal.IFormattableTextComponent;
        get viewDistance(): number;
        get entityData(): Internal.CompoundNBT;
        get updateTag(): Internal.CompoundNBT;
        get biomeId(): string;
        get values(): Internal.ImmutableMap<any, any>;
        get offsetType(): Internal.AbstractBlock$OffsetType;
        get air(): boolean;
        get possibleToRespawnInThis(): boolean;
        get lightEmission(): number;
        get world(): Internal.WorldJS;
        get descriptionId(): string;
        get pos(): BlockPos;
        get breakSound(): Internal.SoundEvent;
        get dripParticle(): Internal.IParticleData;
        get dimension(): string;
        get jumpFactor(): number;
        get amount(): number;
        get renderShape(): Internal.BlockRenderType;
        get speedFactor(): number;
        get entityId(): string;
        get friction(): number;
        get updatePacket(): Internal.SUpdateTileEntityPacket;
        get material(): Internal.Material;
        get removed(): boolean;
        get x(): number;
        get y(): number;
        get z(): number;
        get randomlyTicking(): boolean;
        get properties(): Internal.Collection<any>;
        get entity(): Internal.TileEntity;
        set position(blockPos: BlockPos);
        set entityData(tag: Internal.CompoundNBT);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockContainerJS_ = BlockContainerJS;
    class BlockColors extends Document.Object implements Internal.BlockColorsExtended {
        func_228054_a_(arg0: Internal.BlockState, arg1: Internal.IBlockDisplayReader, arg2: BlockPos, arg3: number): number;
        func_189991_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos): number;
        getColorProvider(state: Internal.BlockState): Internal.IBlockColor;
        func_225310_a(arg0: Internal.Block): Internal.Set<Internal.Property<any>>;
        func_186722_a(arg0: Internal.IBlockColor, arg1: Internal.Block[]): void;
        static func_186723_a(): Internal.BlockColors;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockColors_ = BlockColors;
    interface Pointer {
        address(): number;
    }
    type Pointer_ = Pointer;
    interface ITextProperties$IStyledTextAcceptor <T> {
        accept(arg0: Internal.Style, arg1: string): Internal.Optional<T>;
    }
    type ITextProperties$IStyledTextAcceptor_<T> = ITextProperties$IStyledTextAcceptor<T>;
    class TileEntityBehaviourEvent <T> extends Internal.GenericEvent<T> {
        getListenerList(): Internal.ListenerList;
        getTileEntity(): T;
        attach(arg0: Internal.TileEntityBehaviour): void;
        getGenericType(): java_.lang.reflect.Type;
        getBlockState(): Internal.BlockState;
        remove(arg0: Internal.BehaviourType<any>): Internal.TileEntityBehaviour;
        get blockState(): Internal.BlockState;
        get listenerList(): Internal.ListenerList;
        get genericType(): java_.lang.reflect.Type;
        get tileEntity(): T;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TileEntityBehaviourEvent_<T> = TileEntityBehaviourEvent<T>;
    class GameRules$Category extends Internal.Enum<Internal.GameRules$Category> {
        static valueOf(arg0: string): Internal.GameRules$Category;
        static values(): Internal.GameRules$Category[];
        func_234908_a_(): string;
        static readonly PLAYER : Internal.GameRules$Category;
        static readonly DROPS : Internal.GameRules$Category;
        static readonly MOBS : Internal.GameRules$Category;
        static readonly CHAT : Internal.GameRules$Category;
        static readonly UPDATES : Internal.GameRules$Category;
        static readonly MISC : Internal.GameRules$Category;
        static readonly SPAWNING : Internal.GameRules$Category;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameRules$Category_ = "player" | "mobs" | "spawning" | "drops" | "updates" | "chat" | "misc" | GameRules$Category;
    class ModuleDescriptor$Requires extends Document.Object implements Internal.Comparable<Internal.ModuleDescriptor$Requires> {
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        compiledVersion(): Internal.Optional<Internal.ModuleDescriptor$Version>;
        hashCode(): number;
        equals(arg0: any): boolean;
        rawCompiledVersion(): Internal.Optional<string>;
        name(): string;
        toString(): string;
        compareTo(arg0: Internal.ModuleDescriptor$Requires): number;
        compareTo(arg0: any): number;
        modifiers(): Internal.Set<Internal.ModuleDescriptor$Requires$Modifier>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleDescriptor$Requires_ = ModuleDescriptor$Requires;
    interface IWorldWriter {
        func_225521_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity): boolean;
        func_180501_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: number): boolean;
        func_217376_c(arg0: Internal.Entity): boolean;
        func_175655_b(arg0: BlockPos, arg1: boolean): boolean;
        func_217377_a(arg0: BlockPos, arg1: boolean): boolean;
        func_241212_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity, arg3: number): boolean;
        func_241211_a_(arg0: BlockPos, arg1: Internal.BlockState, arg2: number, arg3: number): boolean;
    }
    type IWorldWriter_ = IWorldWriter;
    class ItemModificationEventJS extends Internal.EventJS {
        modify(in_: Internal.IngredientJS_, c: ((arg0: Internal.ItemModificationProperties) => void)): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemModificationEventJS_ = ItemModificationEventJS;
    class HurtBySensor extends Internal.Sensor<Internal.LivingEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HurtBySensor_ = HurtBySensor;
    class HoverPhase extends Internal.Phase {
        func_188660_d(): void;
        func_188659_c(): void;
        func_188652_i(): Internal.PhaseType<Internal.HoverPhase>;
        func_188654_a(): boolean;
        func_188651_f(): number;
        func_188650_g(): Vec3;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HoverPhase_ = HoverPhase;
    abstract class Direction$Axis extends Internal.Enum<Internal.Direction$Axis> implements Internal.IStringSerializable, Internal.Predicate<Internal.Direction> {
        static func_176717_a(arg0: string): Internal.Direction$Axis;
        static func_239634_a_(arg0: Internal.Random): Internal.Direction$Axis;
        test(arg0: Internal.Direction_): boolean;
        test(arg0: any): boolean;
        func_176716_d(): Internal.Direction$Plane;
        static valueOf(arg0: string): Internal.Direction$Axis;
        func_176610_l(): string;
        func_176719_a(): string;
        static values(): Internal.Direction$Axis[];
        func_196052_a(arg0: number, arg1: number, arg2: number): number;
        toString(): string;
        func_176722_c(): boolean;
        func_200128_b(): boolean;
        func_196051_a(arg0: number, arg1: number, arg2: number): number;
        static readonly X : Internal.Direction$Axis;
        static readonly Y : Internal.Direction$Axis;
        static readonly Z : Internal.Direction$Axis;
        static readonly field_239632_d_ : Internal.Codec<Internal.Direction$Axis>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Direction$Axis_ = "x" | "y" | "z" | Direction$Axis;
    interface CompletionHandler <V, A> {
        failed(arg0: Internal.Throwable, arg1: A): void;
        completed(arg0: V, arg1: A): void;
    }
    type CompletionHandler_<V, A> = CompletionHandler<V, A>;
    class CSpectatePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179727_a(arg0: Internal.ServerWorld): Internal.Entity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CSpectatePacket_ = CSpectatePacket;
    class RegionSectionCache <R> extends Document.Object implements Internal.AutoCloseable {
        func_219112_a(arg0: Internal.ChunkPos): void;
        close(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegionSectionCache_<R> = RegionSectionCache<R>;
    abstract class AbstractSkeletonEntity extends Internal.MonsterEntity implements Internal.IRangedAttackMob {
        func_70098_U(): void;
        static func_234275_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        func_85036_m(): void;
        func_70668_bt(): Internal.CreatureAttribute;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70636_d(): void;
        func_70033_W(): number;
        func_184201_a(arg0: EquipmentSlot_, arg1: Internal.ItemStack): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_230280_a_(arg0: Internal.ShootableItem): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractSkeletonEntity_ = AbstractSkeletonEntity;
    abstract class SimpleChannelInboundHandler <I> extends Internal.ChannelInboundHandlerAdapter {
        acceptInboundMessage(arg0: any): boolean;
        channelRead(arg0: Internal.ChannelHandlerContext, arg1: any): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SimpleChannelInboundHandler_<I> = SimpleChannelInboundHandler<I>;
    abstract class RenderLivingEvent <T, M> extends net.minecraftforge.eventbus.api.Event {
        getLight(): number;
        getRenderer(): Internal.LivingRenderer<T, M>;
        getListenerList(): Internal.ListenerList;
        getPartialRenderTick(): number;
        getBuffers(): Internal.IRenderTypeBuffer;
        getEntity(): Internal.LivingEntity;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get renderer(): Internal.LivingRenderer<T, M>;
        get light(): number;
        get listenerList(): Internal.ListenerList;
        get partialRenderTick(): number;
        get buffers(): Internal.IRenderTypeBuffer;
        get entity(): Internal.LivingEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderLivingEvent_<T, M> = RenderLivingEvent<T, M>;
    class BindingsEvent extends net.minecraftforge.eventbus.api.Event {
        addConstant(name: string, value: any): void;
        add(name: string, value: any): void;
        getListenerList(): Internal.ListenerList;
        addFunction(name: string, callback: ((arg0: any[]) => any)): void;
        addFunction(name: string, callback: ((arg0: any[]) => any), types: Internal.Class<any>[]): void;
        addFunction(name: string, function_: Internal.BaseFunction): void;
        getType(): Internal.ScriptType;
        addClass(name: string, clazz: Internal.Class_<any>): void;
        readonly manager : Internal.ScriptManager;
        readonly scope : Internal.Scriptable;
        readonly context : Internal.Context;
        readonly type : Internal.ScriptType;
        static readonly EVENT : Internal.Event<((arg0: Internal.BindingsEvent) => void)>;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BindingsEvent_ = BindingsEvent;
    class RenderType$State extends Document.Object {
        hashCode(): number;
        equals(arg0: any): boolean;
        static func_228694_a_(): Internal.RenderType$State$Builder;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderType$State_ = RenderType$State;
    class LivingEntityJS extends Internal.EntityJS {
        setYHeadRot(f: number): void;
        getLastAttackedEntity(): Internal.LivingEntityJS;
        setRecordPlayingNearby(blockPos: BlockPos, bl: boolean): void;
        getKillCredit(): Internal.LivingEntityJS;
        canAttack(livingEntity: Internal.LivingEntity): boolean;
        canAttack(livingEntity: Internal.LivingEntity, targetingConditions: Internal.EntityPredicate): boolean;
        getAttributeValue(attribute: Internal.Attribute): number;
        isLiving(): boolean;
        setSleepingPos(blockPos: BlockPos): void;
        getRevengeTarget(): Internal.LivingEntityJS;
        getLastHurtMob(): Internal.LivingEntityJS;
        getProjectile(itemStack: Internal.ItemStack): Internal.ItemStackJS;
        getOffHandItem(): Internal.ItemStackJS;
        setLastHurtMob(entity: Internal.Entity): void;
        canStandOnFluid(fluid: Internal.Fluid): boolean;
        setOnGround(bl: boolean): void;
        setItemInHand(interactionHand: Hand_, itemStack: Internal.ItemStack): void;
        getIdleTime(): number;
        addAdditionalSaveData(compoundTag: Internal.CompoundNBT): void;
        getMovementSpeed(): number;
        getStingerCount(): number;
        stopRiding(): void;
        onLeaveCombat(): void;
        canSee(entity: Internal.Entity): boolean;
        setLegsArmorItem(item: Internal.ItemStackJS_): void;
        getHealth(): number;
        getItemInHand(interactionHand: Hand_): Internal.ItemStackJS;
        calculateEntityAnimation(livingEntity: Internal.LivingEntity, bl: boolean): void;
        getAttributeBaseValue(attribute: Internal.Attribute): number;
        getAttackAnim(f: number): number;
        setFeetArmorItem(item: Internal.ItemStackJS_): void;
        isEffectiveAi(): boolean;
        setMaxHealth(hp: number): void;
        getAttributes(): Internal.AttributeModifierManager;
        canBeAffected(mobEffectInstance: Internal.EffectInstance): boolean;
        isSensitiveToWater(): boolean;
        isPushable(): boolean;
        removeEffectNoUpdate(mobEffect: Internal.Effect): Internal.EffectInstance;
        push(entity: Internal.Entity): void;
        hasItemInSlot(equipmentSlot: EquipmentSlot_): boolean;
        getDimensions(pose: Internal.Pose_): Internal.EntitySize;
        isUsingItem(): boolean;
        getUseItemRemainingTicks(): number;
        setAbsorptionAmount(f: number): void;
        startUsingItem(interactionHand: Hand_): void;
        onItemPickup(itemEntity: Internal.ItemEntity): void;
        getTicksUsingItem(): number;
        setOffHandItem(item: Internal.ItemStackJS_): void;
        isVisuallySwimming(): boolean;
        canTakeItem(itemStack: Internal.ItemStack): boolean;
        hurt(damageSource: Internal.DamageSource, f: number): boolean;
        shouldShowName(): boolean;
        getMaxHealth(): number;
        lerpTo(d: number, e: number, f: number, g: number, h: number, i: number, bl: boolean): void;
        clearSleepingPos(): void;
        removeEffect(mobEffect: Internal.Effect): boolean;
        setLastHurtByPlayer(player: Internal.PlayerEntity): void;
        getHeldItem(hand: Hand_): Internal.ItemStackJS;
        lerpHeadTo(f: number, i: number): void;
        setArrowCount(i: number): void;
        getEquipment(slot: EquipmentSlot_): Internal.ItemStackJS;
        damageHeldItem(): void;
        damageHeldItem(hand: Hand_, amount: number): void;
        damageHeldItem(hand: Hand_, amount: number, onBroken: ((arg0: Internal.ItemStackJS) => void)): void;
        isOnLadder(): boolean;
        isUndead(): boolean;
        eat(level: Internal.World, itemStack: Internal.ItemStack): Internal.ItemStackJS;
        setJumping(bl: boolean): void;
        getActiveEffectsMap(): Internal.Map<any, any>;
        aiStep(): void;
        getLastDamageSource(): Internal.DamageSourceJS;
        getLastDamageSource(): Internal.DamageSource;
        forceAddEffect(mobEffectInstance: Internal.EffectInstance): void;
        isAffectedByPotions(): boolean;
        isBlocking(): boolean;
        getReachDistance(): number;
        getSwimAmount(f: number): number;
        onSyncedDataUpdated(entityDataAccessor: Internal.DataParameter<any>): void;
        getArmorCoverPercentage(): number;
        setLastHurtByMob(livingEntity: Internal.LivingEntity): void;
        kill(): void;
        baseTick(): void;
        getItemBySlot(equipmentSlot: EquipmentSlot_): Internal.ItemStackJS;
        swing(interactionHand: Hand_): void;
        swing(interactionHand: Hand_, bl: boolean): void;
        getLastAttackedEntityTime(): number;
        getBrain(): Internal.Brain<any>;
        handleRelativeFrictionAndCalculateMovement(vec3: Vec3, f: number): Vec3;
        canSpawnSoulSpeedParticle(): boolean;
        getViewYRot(f: number): number;
        isInvertedHealAndHarm(): boolean;
        travel(vec3: Vec3): void;
        getYHeadRot(): number;
        getFeetBlockState(): Internal.BlockState;
        getFluidFallingAdjustedMovement(d: number, bl: boolean, vec3: Vec3): Vec3;
        isBaby(): boolean;
        die(damageSource: Internal.DamageSource): void;
        getFeetArmorItem(): Internal.ItemStackJS;
        setMainHandItem(item: Internal.ItemStackJS_): void;
        removeAllEffects(): boolean;
        isSuppressingSlidingDownLadder(): boolean;
        knockback(f: number, d: number, e: number): void;
        causeFallDamage(f: number, g: number): boolean;
        getRandom(): Internal.Random;
        doHurtTarget(entity: Internal.Entity): boolean;
        animateHurt(): void;
        setRevengeTarget(target: Internal.LivingEntityJS): void;
        setMovementSpeed(speed: number): void;
        isChild(): boolean;
        getNoActionTime(): number;
        stopUsingItem(): void;
        getArmorSlots(): Internal.Iterable<any>;
        getLastHurtByMobTimestamp(): number;
        getActiveEffects(): Internal.Collection<any>;
        setEquipment(slot: EquipmentSlot_, item: Internal.ItemStackJS_): void;
        getLegsArmorItem(): Internal.ItemStackJS;
        lookAt(anchor: Internal.EntityAnchorArgument$Type_, vec3: Vec3): void;
        getAttackingEntity(): Internal.LivingEntityJS;
        tick(): void;
        setNoActionTime(i: number): void;
        isHoldingInAnyHand(ingredient: any): boolean;
        damageEquipment(slot: EquipmentSlot_, amount: number, onBroken: ((arg0: Internal.ItemStackJS) => void)): void;
        damageEquipment(slot: EquipmentSlot_): void;
        damageEquipment(slot: EquipmentSlot_, amount: number): void;
        rideableUnderWater(): boolean;
        take(entity: Internal.Entity, i: number): void;
        isAlive(): boolean;
        setSpeed(f: number): void;
        getVisibilityPercent(entity: Internal.Entity): number;
        getBedOrientation(): Internal.Direction;
        getScale(): number;
        getHeadArmorItem(): Internal.ItemStackJS;
        getSpeed(): number;
        getEffect(mobEffect: Internal.Effect): Internal.EffectInstance;
        canAttackType(entityType: Internal.EntityType<any>): boolean;
        rideTick(): void;
        stopSleeping(): void;
        setHeldItem(hand: Hand_, item: Internal.ItemStackJS_): void;
        broadcastBreakEvent(interactionHand: Hand_): void;
        broadcastBreakEvent(equipmentSlot: EquipmentSlot_): void;
        getFallFlyingTicks(): number;
        getDismountPoses(): Internal.ImmutableList<any>;
        setSprinting(bl: boolean): void;
        isHolding(predicate: ((arg0: any) => boolean)): boolean;
        isHolding(item: Internal.Item): boolean;
        attackable(): boolean;
        handleEntityEvent(b: number): void;
        getRevengeTimer(): number;
        getAbsorptionAmount(): number;
        isInWall(): boolean;
        addEffect(mobEffectInstance: Internal.EffectInstance): boolean;
        getOffhandItem(): Internal.ItemStackJS;
        isAutoSpinAttack(): boolean;
        isDeadOrDying(): boolean;
        getLootTable(): ResourceLocation;
        onClimbable(): boolean;
        getLastHurtMobTimestamp(): number;
        getAttribute(attribute: Internal.Attribute): Internal.ModifiableAttributeInstance;
        startSleeping(blockPos: BlockPos): void;
        getChestArmorItem(): Internal.ItemStackJS;
        onEnterCombat(): void;
        getEatingSound(itemStack: Internal.ItemStack): Internal.SoundEvent;
        randomTeleport(d: number, e: number, f: number, bl: boolean): boolean;
        heal(f: number): void;
        getLastHurtByMob(): Internal.LivingEntityJS;
        getArmorValue(): number;
        setChestArmorItem(item: Internal.ItemStackJS_): void;
        hasEffect(mobEffect: Internal.Effect): boolean;
        getMainHandItem(): Internal.ItemStackJS;
        setHealth(f: number): void;
        getArrowCount(): number;
        setYBodyRot(f: number): void;
        isElytraFlying(): boolean;
        getBoundingBoxForCulling(): Internal.AxisAlignedBB;
        isSleeping(): boolean;
        getPotionEffects(): Internal.EntityPotionEffectsJS;
        swingArm(hand: Hand_): void;
        rayTrace(): Internal.RayTraceResultJS;
        getLocalBoundsForPose(pose: Internal.Pose_): Internal.AxisAlignedBB;
        readAdditionalSaveData(compoundTag: Internal.CompoundNBT): void;
        isFallFlying(): boolean;
        getUsedItemHand(): Hand;
        setStingerCount(i: number): void;
        releaseUsingItem(): void;
        setHeadArmorItem(item: Internal.ItemStackJS_): void;
        isPickable(): boolean;
        getMobType(): Internal.CreatureAttribute;
        getAddEntityPacket(): Internal.IPacket<any>;
        startAutoSpinAttack(i: number): void;
        getUseItem(): Internal.ItemStackJS;
        getCombatTracker(): Internal.CombatTracker;
        canEntityBeSeen(entity: Internal.EntityJS_): boolean;
        setItemSlot(equipmentSlot: EquipmentSlot_, itemStack: Internal.ItemStack): void;
        getMainArm(): Internal.HandSide;
        getSleepingPos(): Internal.Optional<any>;
        getInstance(): Internal.LivingEntityJS;
        getLastClimbablePos(): Internal.Optional<any>;
        canBreatheUnderwater(): boolean;
        readonly minecraftLivingEntity : Internal.LivingEntity;
        get armorValue(): number;
        get lastHurtMob(): Internal.LivingEntityJS;
        get instance(): Internal.LivingEntityJS;
        get fallFlying(): boolean;
        get pickable(): boolean;
        get movementSpeed(): number;
        get idleTime(): number;
        get visuallySwimming(): boolean;
        get legsArmorItem(): Internal.ItemStackJS;
        get lootTable(): ResourceLocation;
        get useItem(): Internal.ItemStackJS;
        get yHeadRot(): number;
        get pushable(): boolean;
        get invertedHealAndHarm(): boolean;
        get bedOrientation(): Internal.Direction;
        get revengeTarget(): Internal.LivingEntityJS;
        get undead(): boolean;
        get autoSpinAttack(): boolean;
        get lastAttackedEntity(): Internal.LivingEntityJS;
        get maxHealth(): number;
        get sleepingPos(): Internal.Optional<any>;
        get combatTracker(): Internal.CombatTracker;
        get boundingBoxForCulling(): Internal.AxisAlignedBB;
        get potionEffects(): Internal.EntityPotionEffectsJS;
        get mobType(): Internal.CreatureAttribute;
        get onLadder(): boolean;
        get feetArmorItem(): Internal.ItemStackJS;
        get offHandItem(): Internal.ItemStackJS;
        get lastAttackedEntityTime(): number;
        get useItemRemainingTicks(): number;
        get stingerCount(): number;
        get ticksUsingItem(): number;
        get deadOrDying(): boolean;
        get lastDamageSource(): Internal.DamageSource;
        get effectiveAi(): boolean;
        get activeEffectsMap(): Internal.Map<any, any>;
        get child(): boolean;
        get alive(): boolean;
        get fallFlyingTicks(): number;
        get armorCoverPercentage(): number;
        get revengeTimer(): number;
        get mainHandItem(): Internal.ItemStackJS;
        get scale(): number;
        get sensitiveToWater(): boolean;
        get elytraFlying(): boolean;
        get feetBlockState(): Internal.BlockState;
        get lastHurtByMobTimestamp(): number;
        get speed(): number;
        get sleeping(): boolean;
        get lastClimbablePos(): Internal.Optional<any>;
        get random(): Internal.Random;
        get offhandItem(): Internal.ItemStackJS;
        get affectedByPotions(): boolean;
        get blocking(): boolean;
        get killCredit(): Internal.LivingEntityJS;
        get usedItemHand(): Hand;
        get arrowCount(): number;
        get headArmorItem(): Internal.ItemStackJS;
        get addEntityPacket(): Internal.IPacket<any>;
        get reachDistance(): number;
        get absorptionAmount(): number;
        get living(): boolean;
        get lastHurtMobTimestamp(): number;
        get mainArm(): Internal.HandSide;
        get usingItem(): boolean;
        get health(): number;
        get dismountPoses(): Internal.ImmutableList<any>;
        get chestArmorItem(): Internal.ItemStackJS;
        get brain(): Internal.Brain<any>;
        get inWall(): boolean;
        get attackingEntity(): Internal.LivingEntityJS;
        get lastHurtByMob(): Internal.LivingEntityJS;
        get suppressingSlidingDownLadder(): boolean;
        get noActionTime(): number;
        get baby(): boolean;
        get attributes(): Internal.AttributeModifierManager;
        get armorSlots(): Internal.Iterable<any>;
        get activeEffects(): Internal.Collection<any>;
        set absorptionAmount(f: number);
        set jumping(bl: boolean);
        set mainHandItem(item: Internal.ItemStackJS_);
        set health(f: number);
        set feetArmorItem(item: Internal.ItemStackJS_);
        set offHandItem(item: Internal.ItemStackJS_);
        set chestArmorItem(item: Internal.ItemStackJS_);
        set movementSpeed(speed: number);
        set speed(f: number);
        set yBodyRot(f: number);
        set stingerCount(i: number);
        set sprinting(bl: boolean);
        set legsArmorItem(item: Internal.ItemStackJS_);
        set yHeadRot(f: number);
        set onGround(bl: boolean);
        set noActionTime(i: number);
        set revengeTarget(target: Internal.LivingEntityJS);
        set arrowCount(i: number);
        set maxHealth(hp: number);
        set headArmorItem(item: Internal.ItemStackJS_);
        set lastHurtByPlayer(player: Internal.PlayerEntity);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingEntityJS_ = LivingEntityJS;
    interface Annotation {
        hashCode(): number;
        equals(arg0: any): boolean;
        annotationType(): Internal.Class<Internal.Annotation>;
        toString(): string;
    }
    type Annotation_ = Annotation;
    abstract class CharBuffer extends Internal.Buffer implements Internal.Comparable<Internal.CharBuffer>, Internal.Appendable, Internal.CharSequence, Internal.Readable {
        compact(): Internal.CharBuffer;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.CharBuffer): number;
        asReadOnlyBuffer(): Internal.CharBuffer;
        put(arg0: number, arg1: string): Internal.CharBuffer;
        put(arg0: string[], arg1: number, arg2: number): Internal.CharBuffer;
        put(arg0: number, arg1: string[], arg2: number, arg3: number): Internal.CharBuffer;
        put(arg0: string[]): Internal.CharBuffer;
        put(arg0: Internal.CharBuffer): Internal.CharBuffer;
        put(arg0: number, arg1: Internal.CharBuffer, arg2: number, arg3: number): Internal.CharBuffer;
        put(arg0: number, arg1: string[]): Internal.CharBuffer;
        put(arg0: string): Internal.CharBuffer;
        put(arg0: string, arg1: number, arg2: number): Internal.CharBuffer;
        put(arg0: string): Internal.CharBuffer;
        slice(arg0: number, arg1: number): Internal.CharBuffer;
        slice(arg0: number, arg1: number): Internal.Buffer;
        slice(): Internal.CharBuffer;
        slice(): Internal.Buffer;
        array(): any;
        array(): string[];
        hashCode(): number;
        get(arg0: string[], arg1: number, arg2: number): Internal.CharBuffer;
        get(arg0: number): string;
        get(): string;
        get(arg0: string[]): Internal.CharBuffer;
        get(arg0: number, arg1: string[], arg2: number, arg3: number): Internal.CharBuffer;
        get(arg0: number, arg1: string[]): Internal.CharBuffer;
        limit(arg0: number): Internal.Buffer;
        limit(arg0: number): Internal.CharBuffer;
        arrayOffset(): number;
        flip(): Internal.CharBuffer;
        flip(): Internal.Buffer;
        order(): Internal.ByteOrder;
        hasArray(): boolean;
        read(arg0: Internal.CharBuffer): number;
        isEmpty(): boolean;
        clear(): Internal.CharBuffer;
        clear(): Internal.Buffer;
        length(): number;
        duplicate(): Internal.CharBuffer;
        duplicate(): Internal.Buffer;
        subSequence(arg0: number, arg1: number): Internal.CharSequence;
        subSequence(arg0: number, arg1: number): Internal.CharBuffer;
        static allocate(arg0: number): Internal.CharBuffer;
        rewind(): Internal.Buffer;
        rewind(): Internal.CharBuffer;
        mismatch(arg0: Internal.CharBuffer): number;
        equals(arg0: any): boolean;
        reset(): Internal.CharBuffer;
        reset(): Internal.Buffer;
        toString(): string;
        position(arg0: number): Internal.CharBuffer;
        position(arg0: number): Internal.Buffer;
        isDirect(): boolean;
        static wrap(arg0: string[], arg1: number, arg2: number): Internal.CharBuffer;
        static wrap(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.CharBuffer;
        static wrap(arg0: Internal.CharSequence): Internal.CharBuffer;
        static wrap(arg0: string[]): Internal.CharBuffer;
        mark(): Internal.CharBuffer;
        mark(): Internal.Buffer;
        chars(): Internal.IntStream;
        charAt(arg0: number): string;
        append(arg0: string): Internal.CharBuffer;
        append(arg0: string): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.CharBuffer;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.CharBuffer;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        get direct(): boolean;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CharBuffer_ = CharBuffer;
    class CommandSyntaxException extends Internal.Exception {
        getCursor(): number;
        getType(): Internal.CommandExceptionType;
        getRawMessage(): Internal.Message;
        getMessage(): string;
        getInput(): string;
        getContext(): string;
        static BUILT_IN_EXCEPTIONS : Internal.BuiltInExceptionProvider;
        static ENABLE_COMMAND_STACK_TRACES : false;
        static readonly CONTEXT_AMOUNT : 10;
        get cursor(): number;
        get input(): string;
        get context(): string;
        get type(): Internal.CommandExceptionType;
        get message(): string;
        get rawMessage(): Internal.Message;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandSyntaxException_ = CommandSyntaxException;
    interface IServerLevel {
        mfix$getStrongholdCache(): Internal.StrongholdLocationCache;
    }
    type IServerLevel_ = IServerLevel;
    interface Chronology extends Internal.Comparable<Internal.Chronology> {
        localDateTime(arg0: Internal.TemporalAccessor): Internal.ChronoLocalDateTime<Internal.ChronoLocalDate>;
        date(arg0: number, arg1: number, arg2: number): Internal.ChronoLocalDate;
        date(arg0: Internal.TemporalAccessor): Internal.ChronoLocalDate;
        date(arg0: Internal.Era, arg1: number, arg2: number, arg3: number): Internal.ChronoLocalDate;
        isIsoBased(): boolean;
        range(arg0: Internal.ChronoField_): Internal.ValueRange;
        getId(): string;
        compareTo(arg0: Internal.Chronology): number;
        compareTo(arg0: any): number;
        dateNow(): Internal.ChronoLocalDate;
        dateNow(arg0: Internal.ZoneId): Internal.ChronoLocalDate;
        dateNow(arg0: Internal.Clock): Internal.ChronoLocalDate;
        eraOf(arg0: number): Internal.Era;
        prolepticYear(arg0: Internal.Era, arg1: number): number;
        zonedDateTime(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.ChronoZonedDateTime<Internal.ChronoLocalDate>;
        zonedDateTime(arg0: Internal.TemporalAccessor): Internal.ChronoZonedDateTime<Internal.ChronoLocalDate>;
        hashCode(): number;
        epochSecond(arg0: Internal.Era, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.ZoneOffset): number;
        epochSecond(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.ZoneOffset): number;
        period(arg0: number, arg1: number, arg2: number): Internal.ChronoPeriod;
        dateYearDay(arg0: number, arg1: number): Internal.ChronoLocalDate;
        dateYearDay(arg0: Internal.Era, arg1: number, arg2: number): Internal.ChronoLocalDate;
        getCalendarType(): string;
        resolveDate(arg0: Internal.Map_<Internal.TemporalField_, number>, arg1: Internal.ResolverStyle_): Internal.ChronoLocalDate;
        isLeapYear(arg0: number): boolean;
        dateEpochDay(arg0: number): Internal.ChronoLocalDate;
        eras(): Internal.List<Internal.Era>;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        equals(arg0: any): boolean;
        toString(): string;
    }
    type Chronology_ = Chronology;
    class ChunkEvent extends Internal.WorldEvent {
        getListenerList(): Internal.ListenerList;
        getChunk(): Internal.IChunk;
        get listenerList(): Internal.ListenerList;
        get chunk(): Internal.IChunk;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkEvent_ = ChunkEvent;
    class StructureFeature <FC, F> extends Document.Object {
        func_242771_a(arg0: Internal.DynamicRegistries, arg1: Internal.ChunkGenerator, arg2: Internal.BiomeProvider, arg3: Internal.TemplateManager, arg4: number, arg5: Internal.ChunkPos, arg6: Internal.Biome, arg7: number, arg8: Internal.StructureSeparationSettings): Internal.StructureStart<any>;
        static readonly field_244391_b_ : Internal.Codec<(() => Internal.StructureFeature<any, any>)>;
        readonly field_236268_b_ : F;
        static readonly field_236267_a_ : Internal.Codec<Internal.StructureFeature<any, any>>;
        readonly field_236269_c_ : FC;
        static readonly field_242770_c : Internal.Codec<Internal.List<(() => Internal.StructureFeature<any, any>)>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureFeature_<FC, F> = StructureFeature<FC, F>;
    abstract class SecurityController extends Document.Object {
        static getStaticSecurityDomainClass(): Internal.Class<any>;
        static initGlobal(controller: Internal.SecurityController): void;
        static hasGlobal(): boolean;
        static createLoader(parent: Internal.ClassLoader, staticDomain: any): Internal.GeneratedClassLoader;
        getStaticSecurityDomainClassInternal(): Internal.Class<any>;
        createClassLoader(arg0: Internal.ClassLoader, arg1: any): Internal.GeneratedClassLoader;
        execWithDomain(cx: Internal.Context, scope: Internal.Scriptable, script: Internal.Script, securityDomain: any): any;
        getDynamicSecurityDomain(arg0: any): any;
        callWithDomain(securityDomain: any, cx: Internal.Context, callable: Internal.Callable, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        get staticSecurityDomainClassInternal(): Internal.Class<any>;
        get staticSecurityDomainClass(): Internal.Class<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SecurityController_ = SecurityController;
    abstract class WorldJS extends Document.Object implements Internal.WithAttachedData {
        setRainLevel(f: number): void;
        disconnect(): void;
        getLightEngine(): Internal.WorldLightManager;
        findNearestMapFeature(structureFeature: Internal.Structure<any>, pos: BlockPos, i: number, bl: boolean): Internal.BlockContainerJS;
        getEntityCollisions(entity: Internal.Entity, aABB: Internal.AxisAlignedBB, predicate: ((arg0: any) => boolean)): Internal.Stream<any>;
        getPlayerData(arg0: Internal.PlayerEntity): Internal.PlayerDataJS<any, any>;
        spawnFireworks(x: number, y: number, z: number, f: Internal.FireworksJS): void;
        getUncachedNoiseBiome(i: number, j: number, k: number): Internal.Biome;
        getGameRules(): Internal.GameRules;
        getGameRules(): Internal.GameRulesJS;
        isLoaded(blockPos: BlockPos): boolean;
        tickChunk(x: number, z: number): void;
        tickChunk(pos: Internal.ChunkPos): void;
        tickChunk(x: number, z: number, tickCount: number): void;
        getMoonPhase(): number;
        getNearestPlayer(d: number, e: number, f: number, g: number, bl: boolean): Internal.PlayerJS<any>;
        getNearestPlayer(d: number, e: number, f: number, g: number, predicate: ((arg0: any) => boolean)): Internal.PlayerJS<any>;
        getNearestPlayer(targetingConditions: Internal.EntityPredicate, livingEntity: Internal.LivingEntity, d: number, e: number, f: number): Internal.PlayerJS<any>;
        getNearestPlayer(targetingConditions: Internal.EntityPredicate, livingEntity: Internal.LivingEntity): Internal.PlayerJS<any>;
        getNearestPlayer(targetingConditions: Internal.EntityPredicate, d: number, e: number, f: number): Internal.PlayerJS<any>;
        getNearestPlayer(entity: Internal.Entity, d: number): Internal.PlayerJS<any>;
        explode(entity: Internal.Entity, d: number, e: number, f: number, g: number, blockInteraction: Internal.Explosion$Mode_): Internal.Explosion;
        explode(entity: Internal.Entity, damageSource: Internal.DamageSource, explosionDamageCalculator: Internal.ExplosionContext, d: number, e: number, f: number, g: number, bl: boolean, blockInteraction: Internal.Explosion$Mode_): Internal.Explosion;
        explode(entity: Internal.Entity, d: number, e: number, f: number, g: number, bl: boolean, blockInteraction: Internal.Explosion$Mode_): Internal.Explosion;
        forceLoadChunk(pos: Internal.ChunkPos, forceLoad: boolean): void;
        forceLoadChunk(x: number, z: number, forceLoad: boolean): void;
        getBiomeName(blockPos: BlockPos): Internal.Optional<any>;
        getLiquidTicks(): Internal.ITickList<any>;
        hasNearbyAlivePlayer(d: number, e: number, f: number, g: number): boolean;
        isDaytime(): boolean;
        tickBlockEntities(): void;
        getPlayers(): Internal.EntityArrayList;
        getLoadedEntitiesOfClass(class_: Internal.Class_<any>, aABB: Internal.AxisAlignedBB): Internal.List<any>;
        getLoadedEntitiesOfClass(class_: Internal.Class_<any>, aABB: Internal.AxisAlignedBB, predicate: ((arg0: any) => boolean)): Internal.List<any>;
        getBlockTint(blockPos: BlockPos, colorResolver: Internal.ColorResolver): number;
        getRainLevel(f: number): number;
        getServer(): Internal.ServerJS;
        noBlockCollision(entity: Internal.Entity, aABB: Internal.AxisAlignedBB, biPredicate: ((arg0: any, arg1: any) => boolean)): boolean;
        getMaxLightLevel(): number;
        players(): Internal.List<any>;
        setSpawnSettings(bl: boolean, bl2: boolean): void;
        hasChunk(i: number, j: number): boolean;
        noSave(): boolean;
        isNight(): boolean;
        onBlockStateChange(blockPos: BlockPos, blockState: Internal.BlockState, blockState2: Internal.BlockState): void;
        getRawBrightness(blockPos: BlockPos, i: number): number;
        setBlockAndUpdate(blockPos: BlockPos, blockState: Internal.BlockState): boolean;
        getBestNeighborSignal(blockPos: BlockPos): number;
        playLocalSound(d: number, e: number, f: number, soundEvent: Internal.SoundEvent, soundSource: Internal.SoundCategory_, g: number, h: number, bl: boolean): void;
        isStateAtPosition(blockPos: BlockPos, predicate: ((arg0: any) => boolean)): boolean;
        getForceLoadedChunks(): Internal.List<any>;
        getGameTime(): number;
        getMaxBuildHeight(): number;
        loadedAndEntityCanStandOn(blockPos: BlockPos, entity: Internal.Entity): boolean;
        loadedAndEntityCanStandOnFace(blockPos: BlockPos, entity: Internal.Entity, direction: Internal.Direction_): boolean;
        getBlockStates(aABB: Internal.AxisAlignedBB): Internal.Stream<any>;
        getLevelData(): Internal.IWorldInfo;
        isRaining(): boolean;
        getDayTime(): number;
        getProfiler(): Internal.IProfiler;
        getEntitiesWithin(aabb: Internal.AxisAlignedBB): Internal.EntityArrayList;
        updateNeighborsAt(blockPos: BlockPos, block: Internal.Block): void;
        getFreeMapId(): number;
        blockUpdated(blockPos: BlockPos, block: Internal.Block): void;
        getServerLevel(): Internal.ServerWorld;
        getSide(): Internal.ScriptType;
        blockEvent(blockPos: BlockPos, block: Internal.Block, i: number, j: number): void;
        getSeaLevel(): number;
        getCollisions(entity: Internal.Entity, aABB: Internal.AxisAlignedBB, predicate: ((arg0: any) => boolean)): Internal.Stream<any>;
        getHeight(): number;
        getHeight(types: Internal.Heightmap$Type_, i: number, j: number): number;
        setRainStrength(strength: number): void;
        getShade(direction: Internal.Direction_, bl: boolean): number;
        getMapData(string: string): Internal.MapData;
        playSound(player: Internal.PlayerEntity, d: number, e: number, f: number, soundEvent: Internal.SoundEvent, soundSource: Internal.SoundCategory_, g: number, h: number): void;
        playSound(player: Internal.PlayerEntity, blockPos: BlockPos, soundEvent: Internal.SoundEvent, soundSource: Internal.SoundCategory_, f: number, g: number): void;
        playSound(player: Internal.PlayerEntity, entity: Internal.Entity, soundEvent: Internal.SoundEvent, soundSource: Internal.SoundCategory_, f: number, g: number): void;
        setSkyFlashTime(i: number): void;
        neighborChanged(blockPos: BlockPos, block: Internal.Block, blockPos2: BlockPos): void;
        getScoreboard(): Internal.Scoreboard;
        createEntityList(entities: Internal.Collection<Internal.Entity>): Internal.EntityArrayList;
        close(): void;
        getData(): Internal.AttachedData;
        getLivingEntity(entity: Internal.Entity): Internal.LivingEntityJS;
        registryAccess(): Internal.DynamicRegistries;
        globalLevelEvent(i: number, blockPos: BlockPos, j: number): void;
        noCollision(entity: Internal.Entity, aABB: Internal.AxisAlignedBB, predicate: ((arg0: any) => boolean)): boolean;
        noCollision(aABB: Internal.AxisAlignedBB): boolean;
        noCollision(entity: Internal.Entity, aABB: Internal.AxisAlignedBB): boolean;
        noCollision(entity: Internal.Entity): boolean;
        getDirectSignalTo(blockPos: BlockPos): number;
        getChunkForCollisions(i: number, j: number): Internal.IBlockReader;
        getPlayerByUUID(uUID: Internal.UUID): Internal.PlayerJS<any>;
        isUnobstructed(entity: Internal.Entity): boolean;
        isUnobstructed(blockState: Internal.BlockState, blockPos: BlockPos, collisionContext: Internal.ISelectionContext): boolean;
        isUnobstructed(entity: Internal.Entity, voxelShape: Internal.VoxelShape): boolean;
        getEntity(e: Internal.Entity): Internal.EntityJS;
        getEntity(i: number): Internal.EntityJS;
        getThunderLevel(f: number): number;
        setMapData(mapItemSavedData: Internal.MapData): void;
        findNearestBiome(biome: Internal.Biome, pos: BlockPos, i: number, j: number): Internal.BlockContainerJS;
        getProfilerSupplier(): Internal.Supplier;
        getBlockRandomPos(i: number, j: number, k: number, l: number): BlockPos;
        getTimeOfDay(f: number): number;
        getBlockCollisions(entity: Internal.Entity, aABB: Internal.AxisAlignedBB, biPredicate: ((arg0: any, arg1: any) => boolean)): Internal.Stream<any>;
        getBlockCollisions(entity: Internal.Entity, aABB: Internal.AxisAlignedBB): Internal.Stream<any>;
        clip(clipContext: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        getWorldBorder(): Internal.WorldBorder;
        getCurrentDifficultyAt(blockPos: BlockPos): Internal.DifficultyInstance;
        getPlayer(entity: Internal.Entity): Internal.PlayerJS<any>;
        countTickableBlocks(): number;
        getNearestLoadedEntity(class_: Internal.Class_<any>, targetingConditions: Internal.EntityPredicate, livingEntity: Internal.LivingEntity, d: number, e: number, f: number, aABB: Internal.AxisAlignedBB): Internal.LivingEntity;
        fillReportDetails(crashReport: Internal.CrashReport): Internal.CrashReportCategory;
        setBlock(blockPos: BlockPos, blockState: Internal.BlockState, i: number): boolean;
        setBlock(blockPos: BlockPos, blockState: Internal.BlockState, i: number, j: number): boolean;
        addAllPendingBlockEntities(collection: Internal.Collection<any>): void;
        updateSkyBrightness(): void;
        guardEntityTick(consumer: ((arg0: any) => void), entity: Internal.Entity): void;
        addParticle(particleOptions: Internal.IParticleData, d: number, e: number, f: number, g: number, h: number, i: number): void;
        addParticle(particleOptions: Internal.IParticleData, bl: boolean, d: number, e: number, f: number, g: number, h: number, i: number): void;
        removeBlock(blockPos: BlockPos, bl: boolean): boolean;
        getBlockTicks(): Internal.ITickList<any>;
        sendBlockUpdated(blockPos: BlockPos, blockState: Internal.BlockState, blockState2: Internal.BlockState, i: number): void;
        getRandom(): Internal.Random;
        updateNeighbourForOutputSignal(blockPos: BlockPos, block: Internal.Block): void;
        clipWithInteractionOverride(vec3: Vec3, vec32: Vec3, blockPos: BlockPos, voxelShape: Internal.VoxelShape, blockState: Internal.BlockState): Internal.BlockRayTraceResult;
        getNearbyEntities(class_: Internal.Class_<any>, targetingConditions: Internal.EntityPredicate, livingEntity: Internal.LivingEntity, aABB: Internal.AxisAlignedBB): Internal.List<any>;
        getDimension(): string;
        updateNeighborsAtExceptFromFacing(blockPos: BlockPos, block: Internal.Block, direction: Internal.Direction_): void;
        levelEvent(i: number, blockPos: BlockPos, j: number): void;
        levelEvent(player: Internal.PlayerEntity, i: number, blockPos: BlockPos, j: number): void;
        createFireworks(d: number, e: number, f: number, g: number, h: number, i: number, compoundTag: Internal.CompoundNBT): void;
        removeBlockEntity(blockPos: BlockPos): void;
        getRecipeManager(): Internal.RecipeManager;
        getBrightness(blockPos: BlockPos): number;
        getBrightness(lightLayer: Internal.LightType_, blockPos: BlockPos): number;
        getMaxLocalRawBrightness(blockPos: BlockPos, i: number): number;
        getMaxLocalRawBrightness(blockPos: BlockPos): number;
        isEmptyBlock(blockPos: BlockPos): boolean;
        addAlwaysVisibleParticle(particleOptions: Internal.IParticleData, bl: boolean, d: number, e: number, f: number, g: number, h: number, i: number): void;
        addAlwaysVisibleParticle(particleOptions: Internal.IParticleData, d: number, e: number, f: number, g: number, h: number, i: number): void;
        canSeeSky(blockPos: BlockPos): boolean;
        sendPacketToServer(packet: Internal.IPacket<any>): void;
        isClientSide(): boolean;
        createEntity(id: ResourceLocation_): Internal.EntityJS;
        blockEntityChanged(blockPos: BlockPos, blockEntity: Internal.TileEntity): void;
        isWaterAt(blockPos: BlockPos): boolean;
        isRainingAt(blockPos: BlockPos): boolean;
        getNearestEntity(class_: Internal.Class_<any>, targetingConditions: Internal.EntityPredicate, livingEntity: Internal.LivingEntity, d: number, e: number, f: number, aABB: Internal.AxisAlignedBB): Internal.LivingEntity;
        getNearestEntity(list: Internal.List<any>, targetingConditions: Internal.EntityPredicate, livingEntity: Internal.LivingEntity, d: number, e: number, f: number): Internal.LivingEntity;
        getBlockFloorHeight(voxelShape: Internal.VoxelShape, supplier: (() => any)): number;
        getBlockFloorHeight(blockPos: BlockPos): number;
        getLocalTime(): number;
        spawnNetherPortal(pos: BlockPos, axis: Internal.Direction$Axis_): void;
        getRandomPlayer(): Internal.PlayerJS<any>;
        getChunkAt(blockPos: BlockPos): Internal.Chunk;
        getEntities(entity: Internal.Entity, aABB: Internal.AxisAlignedBB): Internal.List<any>;
        getEntities(entity: Internal.Entity, aABB: Internal.AxisAlignedBB, predicate: ((arg0: any) => boolean)): Internal.List<any>;
        getEntities(entityType: Internal.EntityType<any>, aABB: Internal.AxisAlignedBB, predicate: ((arg0: any) => boolean)): Internal.List<any>;
        getEntities(): Internal.EntityArrayList;
        getTagManager(): Internal.ITagCollectionSupplier;
        destroyBlock(blockPos: BlockPos, bl: boolean, entity: Internal.Entity): boolean;
        destroyBlock(blockPos: BlockPos, bl: boolean, entity: Internal.Entity, i: number): boolean;
        destroyBlock(blockPos: BlockPos, bl: boolean): boolean;
        getBlockState(blockPos: BlockPos): Internal.BlockState;
        hasNeighborSignal(blockPos: BlockPos): boolean;
        getDirectSignal(blockPos: BlockPos, direction: Internal.Direction_): number;
        getMoonBrightness(): number;
        gatherChunkSourceStats(): string;
        dimensionType(): Internal.DimensionType;
        hasSignal(blockPos: BlockPos, direction: Internal.Direction_): boolean;
        getTime(): number;
        setBlocksDirty(blockPos: BlockPos, blockState: Internal.BlockState, blockState2: Internal.BlockState): void;
        getBlockEntity(blockPos: BlockPos): Internal.TileEntity;
        getLightEmission(blockPos: BlockPos): number;
        getBlockStatesIfLoaded(aABB: Internal.AxisAlignedBB): Internal.Stream<any>;
        setThunderLevel(f: number): void;
        setBlockEntity(blockPos: BlockPos, blockEntity: Internal.TileEntity): void;
        hasChunkAt(blockPos: BlockPos): boolean;
        dayTime(): number;
        canSeeSkyFromBelowWater(blockPos: BlockPos): boolean;
        isDebug(): boolean;
        getSignal(blockPos: BlockPos, direction: Internal.Direction_): number;
        getSkyDarken(): number;
        addFreshEntity(entity: Internal.Entity): boolean;
        dimension(): Internal.RegistryKey<any>;
        mayInteract(player: Internal.PlayerEntity, blockPos: BlockPos): boolean;
        getBiome(blockPos: BlockPos): Internal.Biome;
        getBlock(x: number, y: number, z: number): Internal.BlockContainerJS;
        getBlock(pos: BlockPos): Internal.BlockContainerJS;
        getBlock(blockEntity: Internal.TileEntity): Internal.BlockContainerJS;
        addBlockEntity(blockEntity: Internal.TileEntity): boolean;
        isOverworld(): boolean;
        getChunkSource(): Internal.AbstractChunkProvider;
        createExplosion(x: number, y: number, z: number): Internal.ExplosionJS;
        getSunAngle(f: number): number;
        hasChunksAt(blockPos: BlockPos, blockPos2: BlockPos): boolean;
        hasChunksAt(i: number, j: number, k: number, l: number, m: number, n: number): boolean;
        getNoiseBiome(i: number, j: number, k: number): Internal.Biome;
        getHeightmapPos(types: Internal.Heightmap$Type_, blockPos: BlockPos): BlockPos;
        isDay(): boolean;
        destroyBlockProgress(i: number, blockPos: BlockPos, j: number): void;
        spawnLightning(x: number, y: number, z: number, effectOnly: boolean, player: Internal.EntityJS_): void;
        spawnLightning(x: number, y: number, z: number, effectOnly: boolean): void;
        getNearbyPlayers(targetingConditions: Internal.EntityPredicate, livingEntity: Internal.LivingEntity, aABB: Internal.AxisAlignedBB): Internal.List<any>;
        getEntitiesOfClass(class_: Internal.Class_<any>, aABB: Internal.AxisAlignedBB, predicate: ((arg0: any) => boolean)): Internal.List<any>;
        getEntitiesOfClass(class_: Internal.Class_<any>, aABB: Internal.AxisAlignedBB): Internal.List<any>;
        isHumidAt(blockPos: BlockPos): boolean;
        containsAnyLiquid(aABB: Internal.AxisAlignedBB): boolean;
        getChunk(i: number, j: number, chunkStatus: Internal.ChunkStatus, bl: boolean): Internal.IChunk;
        getChunk(i: number, j: number): Internal.Chunk;
        getChunk(i: number, j: number, chunkStatus: Internal.ChunkStatus): Internal.IChunk;
        getChunk(blockPos: BlockPos): Internal.IChunk;
        isThundering(): boolean;
        getBiomeManager(): Internal.BiomeManager;
        broadcastEntityEvent(entity: Internal.Entity, b: number): void;
        getInstance(): Internal.WorldJS;
        getFluidState(blockPos: BlockPos): Internal.FluidState;
        getDifficulty(): Internal.Difficulty;
        readonly minecraftLevel : Internal.World;
        readonly minecraftWorld : Internal.World;
        get server(): Internal.ServerJS;
        get instance(): Internal.WorldJS;
        get data(): Internal.AttachedData;
        get liquidTicks(): Internal.ITickList<any>;
        get raining(): boolean;
        get maxLightLevel(): number;
        get forceLoadedChunks(): Internal.List<any>;
        get maxBuildHeight(): number;
        get moonBrightness(): number;
        get levelData(): Internal.IWorldInfo;
        get biomeManager(): Internal.BiomeManager;
        get gameRules(): Internal.GameRulesJS;
        get random(): Internal.Random;
        get gameTime(): number;
        get seaLevel(): number;
        get lightEngine(): Internal.WorldLightManager;
        get chunkSource(): Internal.AbstractChunkProvider;
        get scoreboard(): Internal.Scoreboard;
        get moonPhase(): number;
        get day(): boolean;
        get worldBorder(): Internal.WorldBorder;
        get randomPlayer(): Internal.PlayerJS<any>;
        get height(): number;
        get side(): Internal.ScriptType;
        get tagManager(): Internal.ITagCollectionSupplier;
        get debug(): boolean;
        get skyDarken(): number;
        get night(): boolean;
        get blockTicks(): Internal.ITickList<any>;
        get freeMapId(): number;
        get thundering(): boolean;
        get profiler(): Internal.IProfiler;
        get overworld(): boolean;
        get difficulty(): Internal.Difficulty;
        get localTime(): number;
        get profilerSupplier(): Internal.Supplier;
        get entities(): Internal.EntityArrayList;
        get serverLevel(): Internal.ServerWorld;
        get recipeManager(): Internal.RecipeManager;
        get clientSide(): boolean;
        get time(): number;
        get daytime(): boolean;
        set thunderLevel(f: number);
        set mapData(mapItemSavedData: Internal.MapData);
        set skyFlashTime(i: number);
        set rainLevel(f: number);
        set rainStrength(strength: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldJS_ = WorldJS;
    class DataParameter <T> extends Document.Object {
        func_187156_b(): Internal.IDataSerializer<T>;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        func_187155_a(): number;
        field_187157_a : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DataParameter_<T> = DataParameter<T>;
    class PlayerAdvancementEventJS extends Internal.PlayerEventJS {
        getAdvancement(): Internal.AdvancementJS;
        getEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get advancement(): Internal.AdvancementJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerAdvancementEventJS_ = PlayerAdvancementEventJS;
    class LivingSpawnEvent$SpecialSpawn extends Internal.LivingSpawnEvent {
        getListenerList(): Internal.ListenerList;
        getSpawner(): Internal.AbstractSpawner;
        isCancelable(): boolean;
        getSpawnReason(): Internal.SpawnReason;
        get spawnReason(): Internal.SpawnReason;
        get spawner(): Internal.AbstractSpawner;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingSpawnEvent$SpecialSpawn_ = LivingSpawnEvent$SpecialSpawn;
    class BooleanProperty extends Internal.Property<boolean> {
        static func_177716_a(arg0: string): Internal.BooleanProperty;
        equals(arg0: any): boolean;
        func_185929_b(arg0: string): Internal.Optional<boolean>;
        func_177700_c(): Internal.Collection<boolean>;
        func_177702_a(arg0: Internal.Comparable<any>): string;
        func_177702_a(arg0: boolean): string;
        func_206906_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BooleanProperty_ = BooleanProperty;
    class PrioritizedGoal extends Internal.Goal {
        func_220685_C_(): boolean;
        func_75246_d(): void;
        func_75249_e(): void;
        func_220686_i(): Internal.EnumSet<Internal.Goal$Flag>;
        func_220771_a(arg0: Internal.PrioritizedGoal): boolean;
        func_75250_a(): boolean;
        func_220770_h(): number;
        hashCode(): number;
        equals(arg0: any): boolean;
        func_220773_g(): boolean;
        func_220772_j(): Internal.Goal;
        func_75253_b(): boolean;
        func_75251_c(): void;
        func_220684_a(arg0: Internal.EnumSet<Internal.Goal$Flag>): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PrioritizedGoal_ = PrioritizedGoal;
    class MovementController extends Document.Object {
        func_75640_a(): boolean;
        func_188488_a(arg0: number, arg1: number): void;
        func_75641_c(): void;
        func_75642_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_179917_d(): number;
        func_179918_f(): number;
        func_179919_e(): number;
        func_75638_b(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MovementController_ = MovementController;
    interface PalettedContainerExtended <T> {
        getDataArray(): Internal.BitArray;
        getPalette(): Internal.IPalette<T>;
        getDefaultValue(): T;
        getPaletteSize(): number;
    }
    type PalettedContainerExtended_<T> = PalettedContainerExtended<T>;
    class PlayStreamingSourceEvent extends Internal.SoundEvent$SoundSourceEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayStreamingSourceEvent_ = PlayStreamingSourceEvent;
    interface JsonSerializableKJS {
        toJsonKJS(): Internal.JsonElement;
    }
    type JsonSerializableKJS_ = JsonSerializableKJS;
    class LivingSpawnEvent$CheckSpawn extends Internal.LivingSpawnEvent {
        getListenerList(): Internal.ListenerList;
        isSpawner(): boolean;
        getSpawner(): Internal.AbstractSpawner;
        hasResult(): boolean;
        getSpawnReason(): Internal.SpawnReason;
        get spawnReason(): Internal.SpawnReason;
        get spawner(): Internal.AbstractSpawner;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingSpawnEvent$CheckSpawn_ = LivingSpawnEvent$CheckSpawn;
    class ConsoleJS extends Document.Object {
        printObject(o: any): void;
        printObject(o: any, tree: boolean): void;
        infof(message: any, args: any[]): void;
        log(message: any): void;
        errorf(message: string, args: any[]): void;
        setMuted(m: boolean): void;
        error(message: any): void;
        error(message: string, throwable: Internal.Throwable, skip: Internal.Pattern): void;
        error(message: string, throwable: Internal.Throwable): void;
        debugf(message: string, args: any[]): void;
        trace(): void;
        flush(): void;
        setWriteToFile(m: boolean): void;
        setLineNumber(b: boolean): void;
        getScriptLine(): number;
        warnf(message: string, args: any[]): void;
        info(message: any): void;
        group(): void;
        getMuted(): boolean;
        debug(message: any): void;
        printStackTrace(throwable: Internal.Throwable, skip: Internal.Pattern): void;
        getLogger(): Internal.Logger;
        shouldPrintDebug(): boolean;
        setDebugEnabled(m: boolean): void;
        warn(message: string, throwable: Internal.Throwable, skip: Internal.Pattern): void;
        warn(message: string, throwable: Internal.Throwable): void;
        warn(message: any): void;
        resetFile(): void;
        groupEnd(): void;
        getDebugEnabled(): boolean;
        printClass(className: string, tree: boolean): void;
        printClass(className: string): void;
        getWriteToFile(): boolean;
        static SERVER : Internal.ConsoleJS;
        static STARTUP : Internal.ConsoleJS;
        static CLIENT : Internal.ConsoleJS;
        get scriptLine(): number;
        get writeToFile(): boolean;
        get logger(): Internal.Logger;
        get debugEnabled(): boolean;
        get muted(): boolean;
        set writeToFile(m: boolean);
        set debugEnabled(m: boolean);
        set lineNumber(b: boolean);
        set muted(m: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ConsoleJS_ = ConsoleJS;
    class SEntityHeadLookPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149381_a(arg0: Internal.World): Internal.Entity;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149380_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SEntityHeadLookPacket_ = SEntityHeadLookPacket;
    class ServerPlayerEntity extends Internal.PlayerEntity implements Internal.IContainerListener {
        func_146097_a(arg0: Internal.ItemStack, arg1: boolean, arg2: boolean): Internal.ItemEntity;
        func_191956_a(arg0: Internal.Entity, arg1: number, arg2: Internal.DamageSource): void;
        func_213297_N(): Internal.IPacket<any>;
        func_175399_e(arg0: Internal.Entity): void;
        func_213850_a(arg0: Internal.SectionPos): void;
        func_180431_b(arg0: Internal.DamageSource): boolean;
        func_71001_a(arg0: Internal.Entity, arg1: number): void;
        func_71059_n(arg0: Internal.Entity): void;
        func_71110_a(arg0: Internal.Container, arg1: Internal.NonNullList<Internal.ItemStack>): void;
        func_184814_a(arg0: Internal.ItemStack, arg1: Hand_): void;
        func_193104_a(arg0: Internal.ServerPlayerEntity, arg1: boolean): void;
        func_213342_e(arg0: BlockPos): void;
        func_71118_n(): void;
        func_71114_r(): string;
        func_195394_a(arg0: number): void;
        func_70688_c(arg0: Internal.EffectInstance): void;
        func_184848_d(arg0: Internal.Entity): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_241141_L_(): Internal.RegistryKey<Internal.World>;
        func_175141_a(arg0: Internal.SignTileEntity): void;
        func_195065_a(arg0: Internal.Collection<Internal.IRecipe<any>>): number;
        func_110430_a(arg0: number, arg1: number, arg2: boolean, arg3: boolean): void;
        func_71016_p(): void;
        func_195069_b(arg0: Internal.Collection<Internal.IRecipe<any>>): number;
        func_71127_g(): void;
        func_192037_E(): Internal.ServerRecipeBook;
        func_71123_m(): void;
        func_184812_l_(): boolean;
        func_147100_a(arg0: Internal.CClientSettingsPacket): void;
        func_96122_a(arg0: Internal.PlayerEntity): boolean;
        func_184210_p(): void;
        refreshTabListName(): void;
        func_241151_a_(arg0: Internal.ITextComponent_, arg1: Internal.ChatType_, arg2: Internal.UUID): void;
        func_213823_a(arg0: Internal.SoundEvent, arg1: Internal.SoundCategory_, arg2: number, arg3: number): void;
        func_184205_a(arg0: Internal.Entity, arg1: boolean): boolean;
        func_71111_a(arg0: Internal.Container, arg1: number, arg2: Internal.ItemStack): void;
        func_175396_E(): Internal.ITextComponent;
        func_242109_L(): number;
        getLanguage(): string;
        func_71047_c(arg0: Internal.Entity): void;
        func_71009_b(arg0: Internal.Entity): void;
        func_225652_a_(arg0: boolean, arg1: boolean): void;
        func_184826_a(arg0: Internal.AbstractHorseEntity, arg1: Internal.IInventory): void;
        func_200619_a(arg0: Internal.ServerWorld, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        func_213842_M(): Internal.SectionPos;
        func_71122_b(arg0: number, arg1: boolean): void;
        func_184846_L(): void;
        func_195068_e(arg0: number): void;
        func_70071_h_(): void;
        func_71128_l(): void;
        changeDimension(arg0: Internal.ServerWorld, arg1: Internal.ITeleporter): Internal.Entity;
        func_71064_a(arg0: Internal.Stat<any>, arg1: number): void;
        func_71053_j(): void;
        func_213845_a(arg0: Internal.ChunkPos): void;
        func_184609_a(arg0: Hand_): void;
        func_71117_bO(): void;
        func_147099_x(): Internal.ServerStatisticsManager;
        func_71112_a(arg0: Internal.Container, arg1: number, arg2: number): void;
        func_146105_b(arg0: Internal.ITextComponent_, arg1: boolean): void;
        func_71116_b(): void;
        func_145747_a(arg0: Internal.ITextComponent_, arg1: Internal.UUID): void;
        func_193102_a(arg0: ResourceLocation[]): void;
        func_70670_a(arg0: Internal.EffectInstance): void;
        func_152112_bu(): void;
        func_241142_M_(): boolean;
        func_82242_a(arg0: number): void;
        func_152339_d(arg0: Internal.Entity): void;
        func_200618_a(arg0: Internal.EntityAnchorArgument$Type_, arg1: Internal.Entity, arg2: Internal.EntityAnchorArgument$Type_): void;
        func_213819_a(arg0: BlockPos): Internal.Either<Internal.PlayerEntity$SleepResult, net.minecraft.util.Unit>;
        func_241140_K_(): BlockPos;
        func_175397_a(arg0: string, arg1: string): void;
        func_143004_u(): void;
        func_174827_a(arg0: Internal.ServerPlayerEntity): boolean;
        func_175145_a(arg0: Internal.Stat<any>): void;
        func_244529_Q(): Internal.IChatFilter;
        func_192024_a(arg0: Internal.ItemStack, arg1: number): void;
        func_147096_v(): Internal.ChatVisibility;
        func_154331_x(): number;
        func_195399_b(arg0: number): void;
        func_152111_bt(): void;
        func_71121_q(): Internal.ServerWorld;
        func_242111_a(arg0: Internal.RegistryKey<Internal.World>, arg1: BlockPos, arg2: number, arg3: boolean, arg4: boolean): void;
        func_200602_a(arg0: Internal.EntityAnchorArgument$Type_, arg1: Vec3): void;
        func_70695_b(arg0: Internal.EffectInstance, arg1: boolean): void;
        func_192039_O(): Internal.PlayerAdvancements;
        func_70634_a(arg0: number, arg1: number, arg2: number): void;
        func_213844_a(arg0: Internal.ChunkPos, arg1: Internal.IPacket<any>, arg2: Internal.IPacket<any>): void;
        func_175149_v(): boolean;
        func_213829_a(arg0: Internal.INamedContainerProvider): Internal.OptionalInt;
        func_175398_C(): Internal.Entity;
        func_71113_k(): void;
        func_71033_a(arg0: Internal.GameType_): void;
        func_225653_b_(arg0: number, arg1: number, arg2: number): void;
        func_70645_a(arg0: Internal.DamageSource): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_193105_t(): boolean;
        func_184850_K(): boolean;
        func_71120_a(arg0: Internal.Container): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_213818_a(arg0: number, arg1: Internal.MerchantOffers, arg2: number, arg3: number, arg4: boolean, arg5: boolean): void;
        func_184824_a(arg0: Internal.CommandBlockTileEntity): void;
        field_71138_i : number;
        field_71136_j : boolean;
        readonly field_71133_b : Internal.MinecraftServer;
        readonly field_71134_c : Internal.PlayerInteractionManager;
        field_71135_a : Internal.ServerPlayNetHandler;
        field_71139_cq : number;
        field_71137_h : boolean;
        get language(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerPlayerEntity_ = ServerPlayerEntity;
    interface IChunkStatusListener {
        func_219510_b(): void;
        func_219509_a(arg0: Internal.ChunkPos): void;
        func_219508_a(arg0: Internal.ChunkPos, arg1: Internal.ChunkStatus): void;
    }
    type IChunkStatusListener_ = IChunkStatusListener;
    class Element extends Internal.AccessibleObject implements Internal.Member {
        isAccessible(): boolean;
        isStatic(): boolean;
        getName(): string;
        setAccessible(arg0: boolean): void;
        isAnnotationPresent(arg0: Internal.Class_<Internal.Annotation_>): boolean;
        isPackagePrivate(): boolean;
        isSynthetic(): boolean;
        isSynchronized(): boolean;
        isPrivate(): boolean;
        getOwnerType(): Internal.TypeToken<any>;
        isAbstract(): boolean;
        getAnnotations(): Internal.Annotation[];
        isNative(): boolean;
        getDeclaredAnnotations(): Internal.Annotation[];
        getDeclaringClass(): Internal.Class<any>;
        isProtected(): boolean;
        getAnnotation<A_>(arg0: Internal.Class_<A_>): A_;
        hashCode(): number;
        equals(arg0: any): boolean;
        isPublic(): boolean;
        toString(): string;
        isFinal(): boolean;
        getModifiers(): number;
        get ownerType(): Internal.TypeToken<any>;
        get accessible(): boolean;
        get synchronized(): boolean;
        get declaredAnnotations(): Internal.Annotation[];
        get private(): boolean;
        get static(): boolean;
        get annotations(): Internal.Annotation[];
        get abstract(): boolean;
        get modifiers(): number;
        get declaringClass(): Internal.Class<any>;
        get synthetic(): boolean;
        get protected(): boolean;
        get public(): boolean;
        get native(): boolean;
        get name(): string;
        get final(): boolean;
        get packagePrivate(): boolean;
        set accessible(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Element_ = Element;
    class SSpawnObjectPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_186880_c(): number;
        func_186882_d(): number;
        func_186881_e(): number;
        func_218694_l(): Internal.EntityType<any>;
        func_149001_c(): number;
        func_186879_b(): Internal.UUID;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149006_k(): number;
        func_218695_h(): number;
        func_149008_j(): number;
        func_149009_m(): number;
        func_218692_i(): number;
        func_218693_g(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SSpawnObjectPacket_ = SSpawnObjectPacket;
    class GossipManager extends Document.Object {
        func_220916_a(arg0: Internal.UUID, arg1: Internal.GossipType_, arg2: number): void;
        func_234057_a_(arg0: Internal.Dynamic<any>): void;
        func_234058_a_<T_>(arg0: Internal.DynamicOps<T_>): Internal.Dynamic<T_>;
        func_223538_b(): void;
        func_220912_a(arg0: Internal.GossipManager, arg1: Internal.Random, arg2: number): void;
        func_220921_a(arg0: Internal.UUID, arg1: ((arg0: Internal.GossipType) => boolean)): number;
        readonly field_220928_a : Internal.Map<Internal.UUID, Internal.GossipManager$Gossips>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GossipManager_ = GossipManager;
    interface DirectoryStream <T> extends Internal.Closeable, Internal.Iterable<T> {
        iterator(): Internal.Iterator<T>;
    }
    type DirectoryStream_<T> = DirectoryStream<T>;
    class ChunkLoader extends Document.Object implements Internal.AutoCloseable {
        static func_219165_a(arg0: Internal.CompoundNBT): number;
        func_227078_e_(arg0: Internal.ChunkPos): Internal.CompoundNBT;
        func_235968_a_(arg0: Internal.RegistryKey<Internal.World>, arg1: (() => Internal.DimensionSavedDataManager), arg2: Internal.CompoundNBT): Internal.CompoundNBT;
        func_219100_a(arg0: Internal.ChunkPos, arg1: Internal.CompoundNBT): void;
        close(): void;
        func_227079_i_(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkLoader_ = ChunkLoader;
    class BiomeDictionary$Type extends Document.Object {
        static getAll(): Internal.Collection<Internal.BiomeDictionary$Type>;
        getName(): string;
        static getType(arg0: string, arg1: Internal.BiomeDictionary$Type[]): Internal.BiomeDictionary$Type;
        toString(): string;
        static fromVanilla(arg0: Internal.Biome$Category_): Internal.BiomeDictionary$Type;
        static readonly SNOWY : Internal.BiomeDictionary$Type;
        static readonly BEACH : Internal.BiomeDictionary$Type;
        static readonly SAVANNA : Internal.BiomeDictionary$Type;
        static readonly MESA : Internal.BiomeDictionary$Type;
        static readonly RARE : Internal.BiomeDictionary$Type;
        static readonly SPOOKY : Internal.BiomeDictionary$Type;
        static readonly WET : Internal.BiomeDictionary$Type;
        static readonly SPARSE : Internal.BiomeDictionary$Type;
        static readonly MOUNTAIN : Internal.BiomeDictionary$Type;
        static readonly DRY : Internal.BiomeDictionary$Type;
        static readonly RIVER : Internal.BiomeDictionary$Type;
        static readonly MAGICAL : Internal.BiomeDictionary$Type;
        static readonly NETHER : Internal.BiomeDictionary$Type;
        static readonly WATER : Internal.BiomeDictionary$Type;
        static readonly DENSE : Internal.BiomeDictionary$Type;
        static readonly JUNGLE : Internal.BiomeDictionary$Type;
        static readonly SANDY : Internal.BiomeDictionary$Type;
        static readonly OCEAN : Internal.BiomeDictionary$Type;
        static readonly HILLS : Internal.BiomeDictionary$Type;
        static readonly HOT : Internal.BiomeDictionary$Type;
        static readonly FOREST : Internal.BiomeDictionary$Type;
        static readonly MUSHROOM : Internal.BiomeDictionary$Type;
        static readonly OVERWORLD : Internal.BiomeDictionary$Type;
        static readonly PLATEAU : Internal.BiomeDictionary$Type;
        static readonly PLAINS : Internal.BiomeDictionary$Type;
        static readonly SWAMP : Internal.BiomeDictionary$Type;
        static readonly END : Internal.BiomeDictionary$Type;
        static readonly COLD : Internal.BiomeDictionary$Type;
        static readonly DEAD : Internal.BiomeDictionary$Type;
        static readonly MODIFIED : Internal.BiomeDictionary$Type;
        static readonly VOID : Internal.BiomeDictionary$Type;
        static readonly LUSH : Internal.BiomeDictionary$Type;
        static readonly CONIFEROUS : Internal.BiomeDictionary$Type;
        static readonly WASTELAND : Internal.BiomeDictionary$Type;
        get all(): Internal.Collection<Internal.BiomeDictionary$Type>;
        get name(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BiomeDictionary$Type_ = BiomeDictionary$Type;
    class RenderState$DepthTestState extends Internal.RenderState {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$DepthTestState_ = RenderState$DepthTestState;
    interface DoubleFunction <R> {
        apply(arg0: number): R;
    }
    type DoubleFunction_<R> = ((arg0: number) => R) | DoubleFunction<R>;
    class DebugRenderer extends Document.Object {
        static func_217732_a(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number): void;
        static func_217731_a(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number): void;
        static func_217730_a(arg0: Internal.AxisAlignedBB, arg1: number, arg2: number, arg3: number, arg4: number): void;
        static func_217736_a(arg0: BlockPos, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        static func_217735_a(arg0: BlockPos, arg1: BlockPos, arg2: number, arg3: number, arg4: number, arg5: number): void;
        static func_217734_a(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: number, arg8: boolean): void;
        static func_217733_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        static func_217729_a(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        static func_217728_a(arg0: Internal.Entity, arg1: number): Internal.Optional<Internal.Entity>;
        func_229019_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer$Impl, arg2: number, arg3: number, arg4: number): void;
        func_217737_a(): void;
        func_190075_b(): boolean;
        readonly field_229017_n_ : Internal.BeeDebugRenderer;
        readonly field_222927_n : Internal.RaidDebugRenderer;
        readonly field_193852_g : Internal.DebugRenderer$IDebugRenderer;
        readonly field_217740_l : Internal.DebugRenderer$IDebugRenderer;
        readonly field_188286_a : Internal.PathfindingDebugRenderer;
        readonly field_229018_q_ : Internal.GameTestDebugRenderer;
        readonly field_201750_j : Internal.DebugRenderer$IDebugRenderer;
        readonly field_188287_b : Internal.DebugRenderer$IDebugRenderer;
        readonly field_201747_g : Internal.CaveDebugRenderer;
        readonly field_201748_h : Internal.StructureDebugRenderer;
        readonly field_239372_n_ : Internal.VillageSectionsDebugRender;
        readonly field_190078_d : Internal.DebugRenderer$IDebugRenderer;
        readonly field_190077_c : Internal.DebugRenderer$IDebugRenderer;
        readonly field_239371_m_ : Internal.PointOfInterestDebugRenderer;
        readonly field_217742_n : Internal.EntityAIDebugRenderer;
        readonly field_191325_e : Internal.DebugRenderer$IDebugRenderer;
        readonly field_191557_f : Internal.DebugRenderer$IDebugRenderer;
        readonly field_201749_i : Internal.DebugRenderer$IDebugRenderer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DebugRenderer_ = DebugRenderer;
    class Size2i extends Document.Object {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        readonly width : number;
        readonly height : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Size2i_ = Size2i;
    interface IStackHelper {
        isEquivalent(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        isEquivalent(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.UidContext_): boolean;
        getUniqueIdentifierForStack(arg0: Internal.ItemStack, arg1: Internal.UidContext_): string;
    }
    type IStackHelper_ = IStackHelper;
    interface LongIterator extends Internal.PrimitiveIterator$OfLong {
        next(): any;
        next(): number;
        skip(arg0: number): number;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
        nextLong(): number;
    }
    type LongIterator_ = LongIterator;
    class Lifecycle extends Document.Object {
        add(arg0: Internal.Lifecycle): Internal.Lifecycle;
        static stable(): Internal.Lifecycle;
        static deprecated(arg0: number): Internal.Lifecycle;
        static experimental(): Internal.Lifecycle;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Lifecycle_ = Lifecycle;
    interface ValueLayout$OfBoolean extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfBoolean;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfBoolean;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.ValueLayout$OfBoolean;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfBoolean;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfBoolean_ = ValueLayout$OfBoolean;
    interface ChronoZonedDateTime <D> extends Internal.Temporal, Internal.Comparable<Internal.ChronoZonedDateTime<any>> {
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.ChronoZonedDateTime<D>;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoZonedDateTime<D>;
        isEqual(arg0: Internal.ChronoZonedDateTime<any>): boolean;
        getOffset(): Internal.ZoneOffset;
        toLocalTime(): Internal.LocalTime;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.ChronoZonedDateTime<any>): number;
        withLaterOffsetAtOverlap(): Internal.ChronoZonedDateTime<D>;
        hashCode(): number;
        get(arg0: Internal.TemporalField): number;
        withEarlierOffsetAtOverlap(): Internal.ChronoZonedDateTime<D>;
        withZoneSameLocal(arg0: Internal.ZoneId): Internal.ChronoZonedDateTime<D>;
        getChronology(): Internal.Chronology;
        withZoneSameInstant(arg0: Internal.ZoneId): Internal.ChronoZonedDateTime<D>;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        format(arg0: Internal.DateTimeFormatter): string;
        getZone(): Internal.ZoneId;
        isSupported(arg0: Internal.TemporalField): boolean;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        toInstant(): Internal.Instant;
        isBefore(arg0: Internal.ChronoZonedDateTime<any>): boolean;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoZonedDateTime<D>;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoZonedDateTime<D>;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        getLong(arg0: Internal.TemporalField): number;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.Temporal;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.ChronoZonedDateTime<D>;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ChronoZonedDateTime<D>;
        toLocalDate(): D;
        toEpochSecond(): number;
        toLocalDateTime(): Internal.ChronoLocalDateTime<D>;
        equals(arg0: any): boolean;
        toString(): string;
        isAfter(arg0: Internal.ChronoZonedDateTime<any>): boolean;
    }
    type ChronoZonedDateTime_<D> = ChronoZonedDateTime<D>;
    class SDestroyEntitiesPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149098_c(): number[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SDestroyEntitiesPacket_ = SDestroyEntitiesPacket;
    interface FileAttributeView extends Internal.AttributeView {
    }
    type FileAttributeView_ = FileAttributeView;
    class RegisterRecipesEventJS extends Internal.JEIEventJS {
        readonly data : Internal.IRecipeRegistration;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegisterRecipesEventJS_ = RegisterRecipesEventJS;
    class LinkedHashMap <K, V> extends Internal.HashMap<K, V> implements Internal.SequencedMap<K, V> {
        putLast(arg0: K, arg1: V): V;
        getOrDefault(arg0: any, arg1: V): V;
        static newLinkedHashMap<K_, V_>(arg0: number): Internal.LinkedHashMap<K_, V_>;
        entrySet(): Internal.Set<Internal.Map$Entry<K, V>>;
        sequencedKeySet(): Internal.SequencedSet<K>;
        forEach(arg0: ((arg0: K, arg1: V) => void)): void;
        values(): Internal.Collection<V>;
        clear(): void;
        sequencedValues(): Internal.SequencedCollection<V>;
        replaceAll(arg0: ((arg0: K, arg1: V) => V)): void;
        containsValue(arg0: any): boolean;
        get(arg0: any): V;
        putFirst(arg0: K, arg1: V): V;
        sequencedEntrySet(): Internal.SequencedSet<Internal.Map$Entry<K, V>>;
        keySet(): Internal.Set<K>;
        reversed(): Internal.SequencedMap<K, V>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LinkedHashMap_<K, V> = LinkedHashMap<K, V>;
    class ModLifecycleEvent extends net.minecraftforge.eventbus.api.Event implements Internal.IModBusEvent {
        getListenerList(): Internal.ListenerList;
        description(): string;
        toString(): string;
        getIMCStream(arg0: ((arg0: string) => boolean)): Internal.Stream<Internal.InterModComms$IMCMessage>;
        getIMCStream(): Internal.Stream<Internal.InterModComms$IMCMessage>;
        get listenerList(): Internal.ListenerList;
        get iMCStream(): Internal.Stream<Internal.InterModComms$IMCMessage>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModLifecycleEvent_ = ModLifecycleEvent;
    class SharedSeedRandom extends Internal.Random {
        func_202425_c(arg0: number, arg1: number, arg2: number): number;
        func_202427_a(arg0: number, arg1: number, arg2: number, arg3: number): number;
        func_202426_b(arg0: number, arg1: number, arg2: number): number;
        static func_205190_a(arg0: number, arg1: number, arg2: number, arg3: number): Internal.Random;
        func_202423_a(arg0: number): void;
        func_202424_a(arg0: number, arg1: number, arg2: number): number;
        func_202422_a(arg0: number, arg1: number): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SharedSeedRandom_ = SharedSeedRandom;
    class SPlaceGhostRecipePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_199615_a(): ResourceLocation;
        func_194313_b(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlaceGhostRecipePacket_ = SPlaceGhostRecipePacket;
    class GameRules$IntegerValue extends Internal.GameRules$RuleValue<Internal.GameRules$IntegerValue> implements Internal.GameRulesAccessor$IntegerValue, Internal.GameRulesAccessor$IntegerValueSimple {
        func_223557_c(): number;
        func_230313_a_(arg0: Internal.GameRules$RuleValue<any>, arg1: Internal.MinecraftServer): void;
        func_230313_a_(arg0: Internal.GameRules$IntegerValue, arg1: Internal.MinecraftServer): void;
        static invokeCreateArchitectury_$md$cf0726$0(arg0: number, arg1: ((arg0: any, arg1: any) => void)): Internal.GameRules$RuleType<any>;
        static invokeCreateArchitectury_$md$cf0726$1(arg0: number): Internal.GameRules$RuleType<any>;
        func_223560_a(): number;
        func_234909_b_(arg0: string): boolean;
        func_223552_b(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameRules$IntegerValue_ = GameRules$IntegerValue;
    interface Function12 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.Function3<T10, T11, T12, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function5<T8, T9, T10, T11, T12, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function4<T9, T10, T11, T12, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function7<T6, T7, T8, T9, T10, T11, T12, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function6<T7, T8, T9, T10, T11, T12, R>>;
        curry10(): Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Internal.BiFunction<T11, T12, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function9<T4, T5, T6, T7, T8, T9, T10, T11, T12, R>>;
        curry11(): Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Internal.Function<T12, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function8<T5, T6, T7, T8, T9, T10, T11, T12, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function10<T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R>>;
        curry(): Internal.Function<T1, Internal.Function11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R>>;
    }
    type Function12_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R> = Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R>;
    interface ChannelId extends Internal.Serializable, Internal.Comparable<Internal.ChannelId> {
        asShortText(): string;
        asLongText(): string;
    }
    type ChannelId_ = ChannelId;
    class SSelectAdvancementsTabPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_194154_a(): ResourceLocation;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SSelectAdvancementsTabPacket_ = SSelectAdvancementsTabPacket;
    class LootPredicateManager extends Internal.JsonReloadListener {
        func_227513_a_(): Internal.Set<ResourceLocation>;
        func_227517_a_(arg0: ResourceLocation_): Internal.ILootCondition;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootPredicateManager_ = LootPredicateManager;
    interface LivingEntityKJS {
        foodEatenKJS(is: Internal.ItemStack): void;
    }
    type LivingEntityKJS_ = LivingEntityKJS;
    interface Int2IntMap extends Internal.Int2IntFunction, Internal.Map<number, number> {
        getOrDefault(arg0: number, arg1: number): number;
        getOrDefault(arg0: any, arg1: number): number;
        getOrDefault(arg0: any, arg1: any): any;
        entrySet(): Internal.Set<any>;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<number, number>>;
        computeIfAbsentNullable(arg0: number, arg1: ((arg0: number) => number)): number;
        containsKey(arg0: number): boolean;
        containsKey(arg0: any): boolean;
        computeIfAbsent(arg0: any, arg1: ((arg0: any) => any)): any;
        computeIfAbsent(arg0: number, arg1: ((arg0: number) => number)): number;
        computeIfAbsent(arg0: number, arg1: ((arg0: number) => number)): number;
        values(): Internal.Collection<any>;
        values(): Internal.IntCollection;
        replace(arg0: any, arg1: any): any;
        replace(arg0: number, arg1: number): number;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: number, arg1: number): number;
        replace(arg0: number, arg1: number, arg2: number): boolean;
        replace(arg0: number, arg1: number, arg2: number): boolean;
        clear(): void;
        computeIfAbsentPartial(arg0: number, arg1: ((arg0: number) => number)): number;
        containsValue(arg0: number): boolean;
        containsValue(arg0: any): boolean;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: number): number;
        remove(arg0: any): number;
        remove(arg0: any): any;
        remove(arg0: number, arg1: number): boolean;
        remove(arg0: any, arg1: any): boolean;
        int2IntEntrySet(): Internal.ObjectSet<Internal.Int2IntMap$Entry>;
        compute(arg0: number, arg1: ((arg0: number, arg1: number) => number)): number;
        compute(arg0: any, arg1: ((arg0: any, arg1: any) => any)): any;
        compute(arg0: number, arg1: ((arg0: number, arg1: number) => number)): number;
        defaultReturnValue(): number;
        defaultReturnValue(arg0: number): void;
        computeIfPresent(arg0: number, arg1: ((arg0: number, arg1: number) => number)): number;
        computeIfPresent(arg0: number, arg1: ((arg0: number, arg1: number) => number)): number;
        computeIfPresent(arg0: any, arg1: ((arg0: any, arg1: any) => any)): any;
        size(): number;
        merge(arg0: number, arg1: number, arg2: ((arg0: number, arg1: number) => number)): number;
        merge(arg0: number, arg1: number, arg2: ((arg0: number, arg1: number) => number)): number;
        merge(arg0: any, arg1: any, arg2: ((arg0: any, arg1: any) => any)): any;
        get(arg0: any): number;
        get(arg0: any): any;
        keySet(): Internal.IntSet;
        keySet(): Internal.Set<any>;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: number, arg1: number): number;
        putIfAbsent(arg0: number, arg1: number): number;
    }
    type Int2IntMap_ = Int2IntMap;
    class Heightmap$Type extends Internal.Enum<Internal.Heightmap$Type> implements Internal.IStringSerializable {
        func_222683_c(): boolean;
        static valueOf(arg0: string): Internal.Heightmap$Type;
        func_222681_b(): boolean;
        func_176610_l(): string;
        static values(): Internal.Heightmap$Type[];
        static func_203501_a(arg0: string): Internal.Heightmap$Type;
        func_203500_b(): string;
        func_222684_d(): Internal.Predicate<Internal.BlockState>;
        static readonly OCEAN_FLOOR : Internal.Heightmap$Type;
        static readonly MOTION_BLOCKING_NO_LEAVES : Internal.Heightmap$Type;
        static readonly field_236078_g_ : Internal.Codec<Internal.Heightmap$Type>;
        static readonly MOTION_BLOCKING : Internal.Heightmap$Type;
        static readonly WORLD_SURFACE : Internal.Heightmap$Type;
        static readonly OCEAN_FLOOR_WG : Internal.Heightmap$Type;
        static readonly WORLD_SURFACE_WG : Internal.Heightmap$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Heightmap$Type_ = "world_surface_wg" | "world_surface" | "ocean_floor_wg" | "ocean_floor" | "motion_blocking" | "motion_blocking_no_leaves" | Heightmap$Type;
    class FallingBlockEntity extends Internal.Entity {
        func_213297_N(): Internal.IPacket<any>;
        func_70067_L(): boolean;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_184531_j(): BlockPos;
        func_70075_an(): boolean;
        func_184213_bq(): boolean;
        func_70071_h_(): void;
        func_145806_a(arg0: boolean): void;
        func_184530_a(arg0: BlockPos): void;
        func_195054_l(): Internal.BlockState;
        func_90999_ad(): boolean;
        func_85029_a(arg0: Internal.CrashReportCategory): void;
        func_145807_e(): Internal.World;
        field_145812_b : number;
        field_145810_d : Internal.CompoundNBT;
        field_145813_c : boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FallingBlockEntity_ = FallingBlockEntity;
    interface IStringSerializable {
        func_176610_l(): string;
    }
    type IStringSerializable_ = IStringSerializable;
    interface ParticleEngineAccessor {
        getTextureAtlas(): Internal.AtlasTexture;
    }
    type ParticleEngineAccessor_ = ParticleEngineAccessor;
    interface MapCodec$ResultFunction <A> {
        apply<T>(arg0: Internal.DynamicOps<T>, arg1: Internal.MapLike<T>, arg2: Internal.DataResult<A>): Internal.DataResult<A>;
        coApply<T>(arg0: Internal.DynamicOps<T>, arg1: A, arg2: Internal.RecordBuilder<T>): Internal.RecordBuilder<T>;
    }
    type MapCodec$ResultFunction_<A> = MapCodec$ResultFunction<A>;
    class LandingApproachPhase extends Internal.Phase {
        func_188660_d(): void;
        func_188659_c(): void;
        func_188652_i(): Internal.PhaseType<Internal.LandingApproachPhase>;
        func_188650_g(): Vec3;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LandingApproachPhase_ = LandingApproachPhase;
    class EffectInstance extends Document.Object implements Internal.Comparable<Internal.EffectInstance>, Internal.IForgeEffectInstance {
        func_100012_b(arg0: boolean): void;
        func_188418_e(): boolean;
        func_188419_a(): Internal.Effect;
        func_76455_a(arg0: Internal.LivingEntity, arg1: (() => void)): boolean;
        func_76453_d(): string;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.EffectInstance): number;
        func_76457_b(arg0: Internal.LivingEntity): void;
        func_205348_f(): boolean;
        func_76459_b(): number;
        static func_82722_b(arg0: Internal.CompoundNBT): Internal.EffectInstance;
        func_76458_c(): number;
        hashCode(): number;
        setCurativeItems(arg0: Internal.List<Internal.ItemStack>): void;
        func_82720_e(): boolean;
        equals(arg0: any): boolean;
        toString(): string;
        func_199308_a(arg0: Internal.EffectInstance): boolean;
        func_100011_g(): boolean;
        func_82719_a(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        get curativeItems(): Internal.List<Internal.ItemStack>;
        set curativeItems(arg0: Internal.List<Internal.ItemStack>);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EffectInstance_ = EffectInstance;
    interface ITag <T> {
        func_205596_a(arg0: Internal.Random): T;
        func_230235_a_(arg0: T): boolean;
        func_230236_b_(): Internal.List<T>;
    }
    type ITag_<T> = ITag<T>;
    class ConfiguredCarver <WC> extends Document.Object {
        func_222730_a(arg0: Internal.Random, arg1: number, arg2: number): boolean;
        func_227207_a_(arg0: Internal.IChunk, arg1: ((arg0: BlockPos) => Internal.Biome), arg2: Internal.Random, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: Internal.BitSet): boolean;
        func_242760_a(): WC;
        static readonly field_242759_c : Internal.Codec<Internal.List<(() => Internal.ConfiguredCarver<any>)>>;
        static readonly field_244390_b_ : Internal.Codec<(() => Internal.ConfiguredCarver<any>)>;
        static readonly field_236235_a_ : Internal.Codec<Internal.ConfiguredCarver<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ConfiguredCarver_<WC> = ConfiguredCarver<WC>;
    class PacketDirection extends Internal.Enum<Internal.PacketDirection> {
        static valueOf(arg0: string): Internal.PacketDirection;
        static values(): Internal.PacketDirection[];
        static readonly CLIENTBOUND : Internal.PacketDirection;
        static readonly SERVERBOUND : Internal.PacketDirection;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PacketDirection_ = "serverbound" | "clientbound" | PacketDirection;
    class TreeDecoratorType <P> extends Internal.ForgeRegistryEntry<Internal.TreeDecoratorType<any>> {
        func_236876_a_(): Internal.Codec<P>;
        static readonly field_227427_c_ : Internal.TreeDecoratorType<Internal.CocoaTreeDecorator>;
        static readonly field_227426_b_ : Internal.TreeDecoratorType<Internal.LeaveVineTreeDecorator>;
        static readonly field_227429_e_ : Internal.TreeDecoratorType<Internal.AlterGroundTreeDecorator>;
        static readonly field_227428_d_ : Internal.TreeDecoratorType<Internal.BeehiveTreeDecorator>;
        static readonly field_227425_a_ : Internal.TreeDecoratorType<Internal.TrunkVineTreeDecorator>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TreeDecoratorType_<P> = TreeDecoratorType<P>;
    class RenderArmEvent extends net.minecraftforge.eventbus.api.Event {
        getMultiBufferSource(): Internal.IRenderTypeBuffer;
        getPlayer(): Internal.AbstractClientPlayerEntity;
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        getArm(): Internal.HandSide;
        getPoseStack(): Internal.MatrixStack;
        getPackedLight(): number;
        get multiBufferSource(): Internal.IRenderTypeBuffer;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get poseStack(): Internal.MatrixStack;
        get arm(): Internal.HandSide;
        get player(): Internal.AbstractClientPlayerEntity;
        get packedLight(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderArmEvent_ = RenderArmEvent;
    abstract class Sensor <E> extends Document.Object {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        func_220973_b(arg0: Internal.ServerWorld, arg1: E): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Sensor_<E> = Sensor<E>;
    class AirItem extends Internal.Item {
        func_77658_a(): string;
        func_77624_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.List<Internal.ITextComponent>, arg3: Internal.ITooltipFlag): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AirItem_ = AirItem;
    class ScriptPack extends Document.Object {
        readonly manager : Internal.ScriptManager;
        scope : Internal.Scriptable;
        context : Internal.Context;
        readonly scripts : Internal.List<Internal.ScriptFile>;
        readonly info : Internal.ScriptPackInfo;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScriptPack_ = ScriptPack;
    interface SortedSet <E> extends Internal.Set<E>, Internal.SequencedSet<E> {
        tailSet(arg0: E): Internal.SortedSet<E>;
        last(): E;
        headSet(arg0: E): Internal.SortedSet<E>;
        spliterator(): Internal.Spliterator<E>;
        removeLast(): E;
        getLast(): E;
        comparator(): Internal.Comparator<E>;
        addLast(arg0: E): void;
        getFirst(): E;
        removeFirst(): E;
        subSet(arg0: E, arg1: E): Internal.SortedSet<E>;
        reversed(): Internal.SequencedSet<any>;
        reversed(): Internal.SortedSet<E>;
        reversed(): Internal.SequencedCollection<any>;
        addFirst(arg0: E): void;
        first(): E;
    }
    type SortedSet_<E> = SortedSet<E>;
    interface ITagCollection <T> {
        func_232973_a_(arg0: Internal.ITag<T>): ResourceLocation;
        func_199910_a(arg0: ResourceLocation_): Internal.ITag<T>;
        func_232975_b_(arg0: Internal.ITag<T>): ResourceLocation;
        func_199913_a(arg0: T): Internal.Collection<ResourceLocation>;
        func_241834_b(arg0: ResourceLocation_): Internal.ITag<T>;
        func_241833_a(): Internal.Map<ResourceLocation, Internal.ITag<T>>;
        func_242203_a(arg0: Internal.PacketBuffer, arg1: Internal.DefaultedRegistry<T>): void;
        func_199908_a(): Internal.Collection<ResourceLocation>;
    }
    type ITagCollection_<T> = ITagCollection<T>;
    interface TypeTemplate {
        toSimpleType(): Internal.Type<any>;
        hmap(arg0: Internal.TypeFamily, arg1: ((arg0: number) => Internal.RewriteResult<any, any>)): Internal.IntFunction<Internal.RewriteResult<any, any>>;
        size(): number;
        applyO<A, B>(arg0: Internal.FamilyOptic<A, B>, arg1: Internal.Type<A>, arg2: Internal.Type<B>): Internal.FamilyOptic<A, B>;
        apply(arg0: Internal.TypeFamily): Internal.TypeFamily;
        findFieldOrType<A, B>(arg0: number, arg1: string, arg2: Internal.Type<A>, arg3: Internal.Type<B>): Internal.Either<Internal.TypeTemplate, Internal.Type$FieldNotFoundException>;
    }
    type TypeTemplate_ = TypeTemplate;
    class SEntityMetadataPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149376_c(): Internal.List<Internal.EntityDataManager$DataEntry<any>>;
        func_149375_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SEntityMetadataPacket_ = SEntityMetadataPacket;
    interface Function16 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.Function7<T10, T11, T12, T13, T14, T15, T16, R>>;
        curry12(): Internal.Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Internal.Function4<T13, T14, T15, T16, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13, arg13: T14, arg14: T15, arg15: T16): R;
        curry13(): Internal.Function13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Internal.Function3<T14, T15, T16, R>>;
        curry14(): Internal.Function14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Internal.BiFunction<T15, T16, R>>;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function9<T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry15(): Internal.Function15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Internal.Function<T16, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function8<T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry10(): Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Internal.Function6<T11, T12, T13, T14, T15, T16, R>>;
        curry11(): Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Internal.Function5<T12, T13, T14, T15, T16, R>>;
        curry(): Internal.Function<T1, Internal.Function15<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function11<T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function10<T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function13<T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function12<T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function14<T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
    }
    type Function16_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R> = Function16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>;
    class AbstractIllagerEntity$ArmPose extends Internal.Enum<Internal.AbstractIllagerEntity$ArmPose> {
        static valueOf(arg0: string): Internal.AbstractIllagerEntity$ArmPose;
        static values(): Internal.AbstractIllagerEntity$ArmPose[];
        static readonly CROSSED : Internal.AbstractIllagerEntity$ArmPose;
        static readonly SPELLCASTING : Internal.AbstractIllagerEntity$ArmPose;
        static readonly BOW_AND_ARROW : Internal.AbstractIllagerEntity$ArmPose;
        static readonly CROSSBOW_HOLD : Internal.AbstractIllagerEntity$ArmPose;
        static readonly ATTACKING : Internal.AbstractIllagerEntity$ArmPose;
        static readonly CELEBRATING : Internal.AbstractIllagerEntity$ArmPose;
        static readonly CROSSBOW_CHARGE : Internal.AbstractIllagerEntity$ArmPose;
        static readonly NEUTRAL : Internal.AbstractIllagerEntity$ArmPose;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractIllagerEntity$ArmPose_ = "crossed" | "attacking" | "spellcasting" | "bow_and_arrow" | "crossbow_hold" | "crossbow_charge" | "celebrating" | "neutral" | AbstractIllagerEntity$ArmPose;
    class RecipeBook extends Document.Object {
        func_226144_b_(arg0: ResourceLocation_): boolean;
        func_194076_e(arg0: Internal.IRecipe<any>): boolean;
        func_193824_a(arg0: Internal.RecipeBook): void;
        func_242141_a(arg0: Internal.RecipeBookContainer<any>): boolean;
        func_193830_f(arg0: Internal.IRecipe<any>): boolean;
        func_242140_a(arg0: Internal.RecipeBookStatus): void;
        func_242143_a(arg0: Internal.RecipeBookCategory_, arg1: boolean): void;
        func_242142_a(arg0: Internal.RecipeBookCategory_): boolean;
        func_194074_f(arg0: Internal.IRecipe<any>): void;
        func_242144_a(arg0: Internal.RecipeBookCategory_, arg1: boolean, arg2: boolean): void;
        func_193831_b(arg0: Internal.IRecipe<any>): void;
        func_242145_b(arg0: Internal.RecipeBookCategory_): boolean;
        func_194073_a(arg0: Internal.IRecipe<any>): void;
        func_242146_b(arg0: Internal.RecipeBookCategory_, arg1: boolean): void;
        func_242139_a(): Internal.RecipeBookStatus;
        func_193825_e(arg0: Internal.IRecipe<any>): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecipeBook_ = RecipeBook;
    class NBTSizeTracker extends Document.Object {
        readUTF(arg0: string): string;
        func_152450_a(arg0: number): void;
        static readonly field_152451_a : Internal.NBTSizeTracker;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NBTSizeTracker_ = NBTSizeTracker;
    class FancyTrunkPlacer extends Internal.AbstractTrunkPlacer {
        func_230382_a_(arg0: Internal.IWorldGenerationReader, arg1: Internal.Random, arg2: number, arg3: BlockPos, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox, arg6: Internal.BaseTreeFeatureConfig): Internal.List<Internal.FoliagePlacer$Foliage>;
        static readonly field_236884_a_ : Internal.Codec<Internal.FancyTrunkPlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FancyTrunkPlacer_ = FancyTrunkPlacer;
    class VideoMode extends Document.Object {
        func_198063_d(): number;
        func_198065_b(): number;
        func_198062_c(): number;
        func_198064_a(): number;
        hashCode(): number;
        equals(arg0: any): boolean;
        static func_198061_a(arg0: string): Internal.Optional<Internal.VideoMode>;
        toString(): string;
        func_198066_g(): string;
        func_198067_f(): number;
        func_198068_e(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VideoMode_ = VideoMode;
    class Locale$Category extends Internal.Enum<Internal.Locale$Category> {
        static valueOf(arg0: string): Internal.Locale$Category;
        static values(): Internal.Locale$Category[];
        static readonly DISPLAY : Internal.Locale$Category;
        static readonly FORMAT : Internal.Locale$Category;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Locale$Category_ = "display" | "format" | Locale$Category;
    interface ISpectatorMenuRecipient {
        func_175257_a(arg0: Internal.SpectatorMenu): void;
    }
    type ISpectatorMenuRecipient_ = ISpectatorMenuRecipient;
    class CCreativeInventoryActionPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149625_d(): Internal.ItemStack;
        func_149627_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CCreativeInventoryActionPacket_ = CCreativeInventoryActionPacket;
    interface Context$ClassShutterSetter {
        setClassShutter(arg0: Internal.ClassShutter): void;
        getClassShutter(): Internal.ClassShutter;
    }
    type Context$ClassShutterSetter_ = Context$ClassShutterSetter;
    class VertexFormat extends Document.Object implements Internal.BufferVertexFormat, Internal.ExtendedVertexFormat {
        func_227895_d_(): void;
        getStride(): number;
        hasPosition(): boolean;
        func_227894_c_(): Internal.ImmutableList<Internal.VertexFormatElement>;
        getOffset(arg0: number): number;
        func_227892_a_(arg0: number): void;
        func_177338_f(): number;
        embeddium$getExtendedElements(): any[];
        hasColor(): boolean;
        hashCode(): number;
        hasNormal(): boolean;
        equals(arg0: any): boolean;
        toString(): string;
        hasUV(arg0: number): boolean;
        func_181719_f(): number;
        get stride(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VertexFormat_ = VertexFormat;
    interface DynamicFunction$Callback {
        call(arg0: any[]): any;
    }
    type DynamicFunction$Callback_ = ((arg0: any[]) => any) | DynamicFunction$Callback;
    class SoundAdditionsAmbience extends Document.Object {
        func_235021_a_(): Internal.SoundEvent;
        func_235024_b_(): number;
        static readonly field_235018_a_ : Internal.Codec<Internal.SoundAdditionsAmbience>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SoundAdditionsAmbience_ = SoundAdditionsAmbience;
    interface UserPrincipal extends Internal.Principal {
    }
    type UserPrincipal_ = UserPrincipal;
    class ChestEventJS extends Internal.InventoryEventJS {
        getWrappedInventory(): Internal.IInventory;
        getBlock(): Internal.BlockContainerJS;
        getInventory(): Internal.InventoryJS;
        get wrappedInventory(): Internal.IInventory;
        get block(): Internal.BlockContainerJS;
        get inventory(): Internal.InventoryJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChestEventJS_ = ChestEventJS;
    class AttachDataEvent <T> extends net.minecraftforge.eventbus.api.Event {
        add(id: string, object: any): void;
        getParent(): T;
        getListenerList(): Internal.ListenerList;
        getType(): Internal.DataType<T>;
        get parent(): T;
        get listenerList(): Internal.ListenerList;
        get type(): Internal.DataType<T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttachDataEvent_<T> = AttachDataEvent<T>;
    interface DoubleStream extends Internal.BaseStream<number, Internal.DoubleStream> {
        average(): Internal.OptionalDouble;
        sequential(): Internal.BaseStream<any, any>;
        sequential(): Internal.DoubleStream;
        takeWhile(arg0: ((arg0: number) => boolean)): Internal.DoubleStream;
        distinct(): Internal.DoubleStream;
        findFirst(): Internal.OptionalDouble;
        sum(): number;
        skip(arg0: number): Internal.DoubleStream;
        allMatch(arg0: ((arg0: number) => boolean)): boolean;
        mapToObj<U_>(arg0: ((arg0: number) => U_)): Internal.Stream<U_>;
        mapMulti(arg0: ((arg0: number, arg1: ((arg0: number) => void)) => void)): Internal.DoubleStream;
        iterator(): Internal.PrimitiveIterator$OfDouble;
        iterator(): Internal.Iterator<any>;
        min(): Internal.OptionalDouble;
        mapToLong(arg0: ((arg0: number) => number)): Internal.LongStream;
        parallel(): Internal.DoubleStream;
        parallel(): Internal.BaseStream<any, any>;
        noneMatch(arg0: ((arg0: number) => boolean)): boolean;
        findAny(): Internal.OptionalDouble;
        limit(arg0: number): Internal.DoubleStream;
        toArray(): number[];
        forEachOrdered(arg0: ((arg0: number) => void)): void;
        anyMatch(arg0: ((arg0: number) => boolean)): boolean;
        map(arg0: ((arg0: number) => number)): Internal.DoubleStream;
        reduce(arg0: number, arg1: ((arg0: number, arg1: number) => number)): number;
        reduce(arg0: ((arg0: number, arg1: number) => number)): Internal.OptionalDouble;
        spliterator(): Internal.Spliterator<any>;
        spliterator(): Internal.Spliterator$OfDouble;
        max(): Internal.OptionalDouble;
        forEach(arg0: ((arg0: number) => void)): void;
        count(): number;
        dropWhile(arg0: ((arg0: number) => boolean)): Internal.DoubleStream;
        peek(arg0: ((arg0: number) => void)): Internal.DoubleStream;
        flatMap(arg0: ((arg0: number) => Internal.DoubleStream)): Internal.DoubleStream;
        filter(arg0: ((arg0: number) => boolean)): Internal.DoubleStream;
        sorted(): Internal.DoubleStream;
        boxed(): Internal.Stream<number>;
        summaryStatistics(): Internal.DoubleSummaryStatistics;
        mapToInt(arg0: ((arg0: number) => number)): Internal.IntStream;
        collect<R_>(arg0: (() => R_), arg1: ((arg0: R_, arg1: number) => void), arg2: ((arg0: R_, arg1: R_) => void)): R_;
    }
    type DoubleStream_ = DoubleStream;
    abstract class Texture extends Document.Object implements Internal.AutoCloseable {
        restoreLastBlurMipmap(): void;
        func_147631_c(): void;
        func_195413_a(arg0: Internal.IResourceManager): void;
        func_174937_a(arg0: boolean, arg1: boolean): void;
        func_215244_a(arg0: Internal.TextureManager, arg1: Internal.IResourceManager, arg2: ResourceLocation_, arg3: Internal.Executor): void;
        setBlurMipmap(arg0: boolean, arg1: boolean): void;
        func_229148_d_(): void;
        close(): void;
        func_110552_b(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Texture_ = Texture;
    interface Type$TypeMatcher <FT, FR> {
        match<S>(arg0: Internal.Type<S>): Internal.Either<Internal.TypedOptic<S, any, FT, FR>, Internal.Type$FieldNotFoundException>;
    }
    type Type$TypeMatcher_<FT, FR> = Type$TypeMatcher<FT, FR>;
    interface IGuiHandlerRegistration {
        addGhostIngredientHandler<T>(arg0: Internal.Class_<T>, arg1: Internal.IGhostIngredientHandler<T>): void;
        addGuiScreenHandler<T>(arg0: Internal.Class_<T>, arg1: ((arg0: T) => Internal.IGuiProperties)): void;
        addRecipeClickArea<T>(arg0: Internal.Class_<T>, arg1: number, arg2: number, arg3: number, arg4: number, arg5: ResourceLocation[]): void;
        addGenericGuiContainerHandler<T>(arg0: Internal.Class_<T>, arg1: Internal.IGuiContainerHandler<any>): void;
        addGlobalGuiHandler(arg0: Internal.IGlobalGuiHandler): void;
        addGuiContainerHandler<T>(arg0: Internal.Class_<T>, arg1: Internal.IGuiContainerHandler<T>): void;
    }
    type IGuiHandlerRegistration_ = IGuiHandlerRegistration;
    interface Principal {
        getName(): string;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        implies(arg0: Internal.Subject): boolean;
    }
    type Principal_ = Principal;
    interface LootContext$IDynamicDropProvider {
        add(arg0: Internal.LootContext, arg1: ((arg0: Internal.ItemStack) => void)): void;
    }
    type LootContext$IDynamicDropProvider_ = ((arg0: Internal.LootContext, arg1: ((arg0: Internal.ItemStack) => void)) => void) | LootContext$IDynamicDropProvider;
    class PlayerContainerEvent$Close extends Internal.PlayerContainerEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerContainerEvent$Close_ = PlayerContainerEvent$Close;
    class BlockEvent extends net.minecraftforge.eventbus.api.Event {
        getWorld(): Internal.IWorld;
        getListenerList(): Internal.ListenerList;
        getState(): Internal.BlockState;
        getPos(): BlockPos;
        get world(): Internal.IWorld;
        get listenerList(): Internal.ListenerList;
        get pos(): BlockPos;
        get state(): Internal.BlockState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockEvent_ = BlockEvent;
    class LandingPhase extends Internal.Phase {
        func_188660_d(): void;
        func_188659_c(): void;
        func_188657_b(): void;
        func_188653_h(): number;
        func_188652_i(): Internal.PhaseType<Internal.LandingPhase>;
        func_188651_f(): number;
        func_188650_g(): Vec3;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LandingPhase_ = LandingPhase;
    class RenderTooltipEvent$Color extends Internal.RenderTooltipEvent {
        setBorderStart(arg0: number): void;
        getOriginalBackground(): number;
        getListenerList(): Internal.ListenerList;
        getOriginalBorderStart(): number;
        setBorderEnd(arg0: number): void;
        getBorderEnd(): number;
        getBackground(): number;
        setBackground(arg0: number): void;
        getBorderStart(): number;
        getOriginalBorderEnd(): number;
        get originalBackground(): number;
        get listenerList(): Internal.ListenerList;
        get background(): number;
        get borderEnd(): number;
        get originalBorderStart(): number;
        get originalBorderEnd(): number;
        get borderStart(): number;
        set background(arg0: number);
        set borderEnd(arg0: number);
        set borderStart(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderTooltipEvent$Color_ = RenderTooltipEvent$Color;
    interface ContextFactory$GlobalSetter {
        setContextFactoryGlobal(arg0: Internal.ContextFactory): void;
        getContextFactoryGlobal(): Internal.ContextFactory;
    }
    type ContextFactory$GlobalSetter_ = ContextFactory$GlobalSetter;
    class TagMatchRuleTest extends Internal.RuleTest {
        func_215181_a(arg0: Internal.BlockState, arg1: Internal.Random): boolean;
        static readonly field_237161_a_ : Internal.Codec<Internal.TagMatchRuleTest>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TagMatchRuleTest_ = TagMatchRuleTest;
    interface SaveFormatAccessor {
        invokeReadLevelData<T>(arg0: Internal.File, arg1: ((arg0: Internal.File, arg1: Internal.DataFixer) => T)): T;
    }
    type SaveFormatAccessor_ = SaveFormatAccessor;
    interface ContextFactory$Listener {
        contextReleased(arg0: Internal.Context): void;
        contextCreated(arg0: Internal.Context): void;
    }
    type ContextFactory$Listener_ = ContextFactory$Listener;
    class FireworkStarRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_77571_b(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FireworkStarRecipe_ = FireworkStarRecipe;
    class Matrix3f extends Document.Object implements Internal.Matrix3fExtended {
        multiplyBackward(arg0: Internal.Matrix3f): void;
        rotate(quaternion: Internal.Quaternion): void;
        func_226121_d_(): Internal.Matrix3f;
        func_232605_a_(arg0: number, arg1: number, arg2: number): void;
        func_226118_b_(arg0: Internal.Matrix3f): void;
        func_226122_e_(): number;
        func_226123_f_(): boolean;
        func_226119_c_(): void;
        hashCode(): number;
        equals(arg0: any): boolean;
        transformVecZ(x: number, y: number, z: number): number;
        toString(): string;
        static func_226117_b_(arg0: number, arg1: number, arg2: number): Internal.Matrix3f;
        func_226115_a_(arg0: Internal.Quaternion): void;
        transformVecY(x: number, y: number, z: number): number;
        func_226116_b_(): Internal.Triple<Internal.Quaternion, Internal.Vector3f, Internal.Quaternion>;
        transformVecX(x: number, y: number, z: number): number;
        func_226114_a_(arg0: Internal.Matrix3f): void;
        computeNormal(dir: Internal.Direction_): number;
        func_226111_a_(arg0: number): void;
        func_226110_a_(): void;
        field_226104_h_ : number;
        field_226099_c_ : number;
        field_226105_i_ : number;
        field_226098_b_ : number;
        field_226103_g_ : number;
        field_226102_f_ : number;
        field_226101_e_ : number;
        field_226100_d_ : number;
        field_226097_a_ : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Matrix3f_ = Matrix3f;
    class Memory <T> extends Document.Object {
        static func_234069_a_<T_>(arg0: T_, arg1: number): Internal.Memory<T_>;
        static func_234068_a_<T_>(arg0: T_): Internal.Memory<T_>;
        func_234072_c_(): T;
        static func_234066_a_<T_>(arg0: Internal.Codec<T_>): Internal.Codec<Internal.Memory<T_>>;
        func_234064_a_(): void;
        func_234074_e_(): boolean;
        toString(): string;
        func_234073_d_(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Memory_<T> = Memory<T>;
    class SkinManager extends Document.Object {
        func_152790_a(arg0: Internal.GameProfile, arg1: Internal.SkinManager$ISkinAvailableCallback, arg2: boolean): void;
        func_152792_a(arg0: Internal.MinecraftProfileTexture, arg1: Internal.MinecraftProfileTexture$Type_): ResourceLocation;
        func_152788_a(arg0: Internal.GameProfile): Internal.Map<Internal.MinecraftProfileTexture$Type, Internal.MinecraftProfileTexture>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SkinManager_ = SkinManager;
    interface IDrawable {
        getHeight(): number;
        getWidth(): number;
        draw(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        draw(arg0: Internal.MatrixStack): void;
    }
    type IDrawable_ = IDrawable;
    class WeightedRandom$Item extends Document.Object {
        field_76292_a : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WeightedRandom$Item_ = WeightedRandom$Item;
    class BoatEntity$Type extends Internal.Enum<Internal.BoatEntity$Type> {
        func_184980_a(): string;
        func_195933_b(): Internal.Block;
        static valueOf(arg0: string): Internal.BoatEntity$Type;
        static values(): Internal.BoatEntity$Type[];
        static func_184981_a(arg0: string): Internal.BoatEntity$Type;
        toString(): string;
        static func_184979_a(arg0: number): Internal.BoatEntity$Type;
        static readonly SPRUCE : Internal.BoatEntity$Type;
        static readonly BIRCH : Internal.BoatEntity$Type;
        static readonly JUNGLE : Internal.BoatEntity$Type;
        static readonly ACACIA : Internal.BoatEntity$Type;
        static readonly OAK : Internal.BoatEntity$Type;
        static readonly DARK_OAK : Internal.BoatEntity$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BoatEntity$Type_ = "oak" | "spruce" | "birch" | "jungle" | "acacia" | "dark_oak" | BoatEntity$Type;
    class RenderState$LayerState extends Internal.RenderState {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$LayerState_ = RenderState$LayerState;
    class IdFunctionObject extends Internal.BaseFunction {
        getFunctionName(): string;
        addAsProperty(target: Internal.Scriptable): void;
        hasTag(tag: any): boolean;
        initFunction(name: string, scope: Internal.Scriptable): void;
        methodId(): number;
        getTag(): any;
        createObject(cx: Internal.Context, scope: Internal.Scriptable): Internal.Scriptable;
        getArity(): number;
        unknown(): Internal.RuntimeException;
        call(cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        getPrototype(): Internal.Scriptable;
        exportAsScopeProperty(): void;
        markAsConstructor(prototypeProperty: Internal.Scriptable): void;
        getLength(): number;
        get arity(): number;
        get functionName(): string;
        get length(): number;
        get tag(): any;
        get prototype(): Internal.Scriptable;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IdFunctionObject_ = IdFunctionObject;
    class BedTileEntity extends Internal.TileEntity {
        func_193048_a(): Internal.DyeColor;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_193052_a(arg0: Internal.DyeColor_): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BedTileEntity_ = BedTileEntity;
    interface LongUnaryOperator {
        applyAsLong(arg0: number): number;
        compose(arg0: ((arg0: number) => number)): Internal.LongUnaryOperator;
        andThen(arg0: ((arg0: number) => number)): Internal.LongUnaryOperator;
    }
    type LongUnaryOperator_ = ((arg0: number) => number) | LongUnaryOperator;
    class ItemEntity extends Internal.Entity {
        func_213297_N(): Internal.IPacket<any>;
        func_70071_h_(): void;
        func_174869_p(): void;
        func_174868_q(): void;
        static func_226533_a_(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: number): Internal.ItemStack;
        changeDimension(arg0: Internal.ServerWorld, arg1: Internal.ITeleporter): Internal.Entity;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_174867_a(arg0: number): void;
        func_234272_a_(arg0: number): number;
        func_174872_o(): number;
        func_234273_t_(): Internal.ItemEntity;
        func_174871_r(): void;
        func_174870_v(): void;
        func_70100_b_(arg0: Internal.PlayerEntity): void;
        func_174873_u(): void;
        func_174874_s(): boolean;
        static func_226532_a_(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_200214_m(): Internal.UUID;
        func_92059_d(): Internal.ItemStack;
        func_200215_l(): Internal.UUID;
        func_92058_a(arg0: Internal.ItemStack): void;
        func_200200_C_(): Internal.ITextComponent;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70075_an(): boolean;
        func_200216_c(arg0: Internal.UUID): void;
        func_200217_b(arg0: Internal.UUID): void;
        func_230279_az_(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        lifespan : number;
        field_70292_b : number;
        readonly field_70290_d : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemEntity_ = ItemEntity;
    class PlayerContainerEvent extends Internal.PlayerEvent {
        getListenerList(): Internal.ListenerList;
        getContainer(): Internal.Container;
        get container(): Internal.Container;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerContainerEvent_ = PlayerContainerEvent;
    class RemoveSpawnsByIDProperties extends Document.Object {
        readonly biomes : Internal.WorldgenEntryList;
        readonly entities : Internal.WorldgenEntryList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RemoveSpawnsByIDProperties_ = RemoveSpawnsByIDProperties;
    class Team$Visible extends Internal.Enum<Internal.Team$Visible> {
        func_197910_b(): Internal.ITextComponent;
        static valueOf(arg0: string): Internal.Team$Visible;
        static values(): Internal.Team$Visible[];
        static func_178824_a(arg0: string): Internal.Team$Visible;
        readonly field_178830_e : string;
        static readonly HIDE_FOR_OTHER_TEAMS : Internal.Team$Visible;
        static readonly NEVER : Internal.Team$Visible;
        readonly field_178827_f : number;
        static readonly ALWAYS : Internal.Team$Visible;
        static readonly HIDE_FOR_OWN_TEAM : Internal.Team$Visible;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Team$Visible_ = "always" | "never" | "hide_for_other_teams" | "hide_for_own_team" | Team$Visible;
    interface DoubleCollection extends Internal.Collection<number>, Internal.DoubleIterable {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        add(arg0: number): boolean;
        removeAll(arg0: Internal.DoubleCollection): boolean;
        contains(arg0: any): boolean;
        contains(arg0: number): boolean;
        iterator(): Internal.DoubleIterator;
        iterator(): Internal.Iterator<any>;
        addAll(arg0: Internal.DoubleCollection): boolean;
        toDoubleArray(): number[];
        toDoubleArray(arg0: number[]): number[];
        containsAll(arg0: Internal.DoubleCollection): boolean;
        toArray(arg0: number[]): number[];
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.DoubleCollection): boolean;
        removeIf(arg0: ((arg0: number) => boolean)): boolean;
        removeIf(arg0: ((arg0: number) => boolean)): boolean;
    }
    type DoubleCollection_ = DoubleCollection;
    interface IForgeFluidState {
        getExplosionResistance(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Explosion): number;
        isEntityInside(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Entity, arg3: number, arg4: Internal.Tag<Internal.Fluid>, arg5: boolean): boolean;
        getFluidState(): Internal.FluidState;
    }
    type IForgeFluidState_ = IForgeFluidState;
    interface ClientAdvancementManager$IListener extends Internal.AdvancementList$IListener {
        func_191933_a(arg0: Internal.Advancement, arg1: Internal.AdvancementProgress): void;
        func_193982_e(arg0: Internal.Advancement): void;
    }
    type ClientAdvancementManager$IListener_ = ClientAdvancementManager$IListener;
    class CommandContext <S> extends Document.Object {
        copyFor(arg0: S): Internal.CommandContext<S>;
        getRedirectModifier(): Internal.RedirectModifier<S>;
        getNodes(): Internal.List<Internal.ParsedCommandNode<S>>;
        hasNodes(): boolean;
        getCommand(): Internal.Command<S>;
        getChild(): Internal.CommandContext<S>;
        isForked(): boolean;
        getArgument<V_>(arg0: string, arg1: Internal.Class_<V_>): V_;
        getInput(): string;
        getLastChild(): Internal.CommandContext<S>;
        getSource(): S;
        hashCode(): number;
        getRange(): Internal.StringRange;
        equals(arg0: any): boolean;
        getRootNode(): Internal.CommandNode<S>;
        get input(): string;
        get nodes(): Internal.List<Internal.ParsedCommandNode<S>>;
        get lastChild(): Internal.CommandContext<S>;
        get range(): Internal.StringRange;
        get source(): S;
        get redirectModifier(): Internal.RedirectModifier<S>;
        get command(): Internal.Command<S>;
        get forked(): boolean;
        get child(): Internal.CommandContext<S>;
        get rootNode(): Internal.CommandNode<S>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandContext_<S> = CommandContext<S>;
    class ModuleDescriptor$Opens extends Document.Object implements Internal.Comparable<Internal.ModuleDescriptor$Opens> {
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        hashCode(): number;
        equals(arg0: any): boolean;
        isQualified(): boolean;
        toString(): string;
        source(): string;
        compareTo(arg0: Internal.ModuleDescriptor$Opens): number;
        compareTo(arg0: any): number;
        modifiers(): Internal.Set<Internal.ModuleDescriptor$Opens$Modifier>;
        targets(): Internal.Set<string>;
        get qualified(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleDescriptor$Opens_ = ModuleDescriptor$Opens;
    abstract class DynamicLike <T> extends Document.Object {
        createLong(arg0: number): Internal.Dynamic<T>;
        createIntList(arg0: Internal.IntStream): Internal.Dynamic<any>;
        asLongStreamOpt(): Internal.DataResult<Internal.LongStream>;
        getElementGeneric(arg0: T): Internal.DataResult<T>;
        getElementGeneric(arg0: T, arg1: T): T;
        createDouble(arg0: number): Internal.Dynamic<T>;
        createLongList(arg0: Internal.LongStream): Internal.Dynamic<any>;
        readMap<K_, V_>(arg0: Internal.Decoder<K_>, arg1: Internal.Decoder<V_>): Internal.DataResult<Internal.List<com.mojang.datafixers.util.Pair<K_, V_>>>;
        readMap<R_>(arg0: Internal.DataResult<R_>, arg1: Internal.Function3<R_, Internal.Dynamic<T>, Internal.Dynamic<T>, Internal.DataResult<R_>>): Internal.DataResult<R_>;
        readMap<K_, V_>(arg0: Internal.Decoder<K_>, arg1: ((arg0: K_) => Internal.Decoder<V_>)): Internal.DataResult<Internal.List<com.mojang.datafixers.util.Pair<K_, V_>>>;
        asListOpt<U_>(arg0: ((arg0: Internal.Dynamic<T>) => U_)): Internal.DataResult<Internal.List<U_>>;
        asMap<K_, V_>(arg0: ((arg0: Internal.Dynamic<T>) => K_), arg1: ((arg0: Internal.Dynamic<T>) => V_)): Internal.Map<K_, V_>;
        createShort(arg0: number): Internal.Dynamic<T>;
        asStreamOpt(): Internal.DataResult<Internal.Stream<Internal.Dynamic<T>>>;
        createByteList(arg0: Internal.ByteBuffer): Internal.Dynamic<any>;
        asIntStream(): Internal.IntStream;
        asByteBuffer(): Internal.ByteBuffer;
        decode<A_>(arg0: Internal.Decoder<A_>): Internal.DataResult<com.mojang.datafixers.util.Pair<A_, T>>;
        asFloat(arg0: number): number;
        asLongStream(): Internal.LongStream;
        asIntStreamOpt(): Internal.DataResult<Internal.IntStream>;
        asList<U_>(arg0: ((arg0: Internal.Dynamic<T>) => U_)): Internal.List<U_>;
        createBoolean(arg0: boolean): Internal.Dynamic<T>;
        asInt(arg0: number): number;
        emptyList(): Internal.Dynamic<T>;
        readList<E_>(arg0: ((arg0: Internal.Dynamic<any>) => Internal.DataResult<E_>)): Internal.DataResult<Internal.List<E_>>;
        readList<E_>(arg0: Internal.Decoder<E_>): Internal.DataResult<Internal.List<E_>>;
        asShort(arg0: number): number;
        get(arg0: string): Internal.OptionalDynamic<T>;
        emptyMap(): Internal.Dynamic<T>;
        createNumeric(arg0: Internal.Number): Internal.Dynamic<T>;
        asString(arg0: string): string;
        asString(): Internal.DataResult<string>;
        asByte(arg0: number): number;
        createList(arg0: Internal.Stream<Internal.Dynamic<any>>): Internal.Dynamic<T>;
        read<A_>(arg0: Internal.Decoder<A_>): Internal.DataResult<A_>;
        asByteBufferOpt(): Internal.DataResult<Internal.ByteBuffer>;
        createString(arg0: string): Internal.Dynamic<T>;
        asNumber(arg0: Internal.Number): Internal.Number;
        asNumber(): Internal.DataResult<Internal.Number>;
        asMapOpt<K_, V_>(arg0: ((arg0: Internal.Dynamic<T>) => K_), arg1: ((arg0: Internal.Dynamic<T>) => V_)): Internal.DataResult<Internal.Map<K_, V_>>;
        asMapOpt(): Internal.DataResult<Internal.Stream<com.mojang.datafixers.util.Pair<Internal.Dynamic<T>, Internal.Dynamic<T>>>>;
        getGeneric(arg0: T): Internal.DataResult<T>;
        createMap(arg0: Internal.Map_<Internal.Dynamic_<any>, Internal.Dynamic_<any>>): Internal.Dynamic<T>;
        asStream(): Internal.Stream<Internal.Dynamic<T>>;
        asLong(arg0: number): number;
        createByte(arg0: number): Internal.Dynamic<T>;
        createFloat(arg0: number): Internal.Dynamic<T>;
        getOps(): Internal.DynamicOps<T>;
        getElement(arg0: string, arg1: T): T;
        getElement(arg0: string): Internal.DataResult<T>;
        asDouble(arg0: number): number;
        createInt(arg0: number): Internal.Dynamic<T>;
        asBoolean(arg0: boolean): boolean;
        get ops(): Internal.DynamicOps<T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DynamicLike_<T> = DynamicLike<T>;
    abstract class Structure <C> extends Internal.ForgeRegistryEntry<Internal.Structure<any>> implements Internal.IForgeStructure {
        func_214469_f(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        func_143025_a(): string;
        static func_236397_g_(): void;
        func_236396_f_(): DecorationGenerationStep;
        func_236398_h_(): Internal.Codec<Internal.StructureFeature<C, Internal.Structure<C>>>;
        func_202279_e(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        func_242785_a(arg0: Internal.DynamicRegistries, arg1: Internal.ChunkGenerator, arg2: Internal.BiomeProvider, arg3: Internal.TemplateManager, arg4: number, arg5: Internal.ChunkPos, arg6: Internal.Biome, arg7: number, arg8: Internal.SharedSeedRandom, arg9: Internal.StructureSeparationSettings, arg10: C): Internal.StructureStart<any>;
        func_236388_a_(arg0: Internal.IWorldReader, arg1: Internal.StructureManager, arg2: BlockPos, arg3: number, arg4: boolean, arg5: number, arg6: Internal.StructureSeparationSettings): BlockPos;
        getSpawnList(arg0: Internal.EntityClassification_): Internal.List<Internal.MobSpawnInfo$Spawners>;
        func_214557_a(): Internal.Structure$IStartFactory<C>;
        static func_236393_a_(arg0: Internal.TemplateManager, arg1: Internal.CompoundNBT, arg2: number): Internal.StructureStart<any>;
        func_236391_a_(arg0: C): Internal.StructureFeature<C, Internal.Structure<C>>;
        func_236392_a_(arg0: Internal.StructureSeparationSettings, arg1: number, arg2: Internal.SharedSeedRandom, arg3: number, arg4: number): Internal.ChunkPos;
        static readonly field_236376_l_ : Internal.Structure<Internal.NoFeatureConfig>;
        static readonly field_236375_k_ : Internal.Structure<Internal.NoFeatureConfig>;
        static readonly field_236380_p_ : Internal.Structure<Internal.ProbabilityConfig>;
        static readonly field_236381_q_ : Internal.Structure<Internal.VillageConfig>;
        static readonly field_236369_e_ : Internal.Structure<Internal.NoFeatureConfig>;
        static readonly field_236383_s_ : Internal.Structure<Internal.VillageConfig>;
        static readonly field_236370_f_ : Internal.Structure<Internal.NoFeatureConfig>;
        static readonly field_236382_r_ : Internal.Structure<Internal.NoFeatureConfig>;
        static readonly field_236371_g_ : Internal.Structure<Internal.NoFeatureConfig>;
        static readonly field_236367_c_ : Internal.Structure<Internal.MineshaftConfig>;
        static readonly field_236368_d_ : Internal.Structure<Internal.NoFeatureConfig>;
        static readonly field_236372_h_ : Internal.Structure<Internal.RuinedPortalFeature>;
        static readonly field_236384_t_ : [undefined, undefined, undefined];
        static readonly field_236373_i_ : Internal.Structure<Internal.ShipwreckConfig>;
        static readonly field_236365_a_ : {"pillager_outpost":Internal.PillagerOutpostStructure,"mineshaft":Internal.MineshaftStructure,"mansion":Internal.WoodlandMansionStructure,"jungle_pyramid":Internal.JunglePyramidStructure,"desert_pyramid":Internal.DesertPyramidStructure,"igloo":Internal.IglooStructure,"ruined_portal":Internal.RuinedPortalStructure,"shipwreck":Internal.ShipwreckStructure,"swamp_hut":Internal.SwampHutStructure,"stronghold":Internal.StrongholdStructure,"monument":Internal.OceanMonumentStructure,"ocean_ruin":Internal.OceanRuinStructure,"fortress":Internal.FortressStructure,"endcity":Internal.EndCityStructure,"buried_treasure":Internal.BuriedTreasureStructure,"village":Internal.VillageStructure,"nether_fossil":Internal.NetherFossilStructure,"bastion_remnant":Internal.BastionRemantsStructure,"quark:big_dungeon":Internal.BigDungeonStructure};
        static readonly field_236366_b_ : Internal.Structure<Internal.VillageConfig>;
        static readonly field_236374_j_ : Internal.SwampHutStructure;
        static readonly field_236379_o_ : Internal.Structure<Internal.NoFeatureConfig>;
        static readonly field_236378_n_ : Internal.Structure<Internal.NoFeatureConfig>;
        static readonly field_236377_m_ : Internal.Structure<Internal.OceanRuinConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Structure_<C> = Structure<C>;
    class SEntityPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_149065_a(arg0: Internal.World): Internal.Entity;
        func_149066_f(): number;
        static func_218743_a(arg0: number): number;
        func_244300_a(arg0: Vec3): Vec3;
        static func_218744_a(arg0: number, arg1: number, arg2: number): Vec3;
        func_179742_g(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149060_h(): boolean;
        func_149063_g(): number;
        func_229745_h_(): boolean;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        static func_244299_a(arg0: number): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SEntityPacket_ = SEntityPacket;
    class IToast$Visibility extends Internal.Enum<Internal.IToast$Visibility> {
        static valueOf(arg0: string): Internal.IToast$Visibility;
        static values(): Internal.IToast$Visibility[];
        func_194169_a(arg0: Internal.SoundHandler): void;
        static readonly HIDE : Internal.IToast$Visibility;
        static readonly SHOW : Internal.IToast$Visibility;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IToast$Visibility_ = "show" | "hide" | IToast$Visibility;
    class MapJS extends Internal.LinkedHashMap<string, any> implements Internal.StringBuilderAppendable, Internal.ChangeListener<any>, Internal.Copyable, Internal.JsonSerializable, Internal.NBTSerializable {
        static nbt(map: any): Internal.CompoundNBT;
        appendString(builder: Internal.StringBuilder): void;
        onChanged(o: any): void;
        containsAll(other: Internal.MapJS): boolean;
        containsAny(other: Internal.MapJS): boolean;
        clear(): void;
        static isNbt(o: any): boolean;
        put(key: string, value: any): any;
        put(arg0: any, arg1: any): any;
        remove(key: any): any;
        toJson(): Internal.JsonObject;
        toJson(): Internal.JsonElement;
        toNBT(): Internal.CompoundNBT;
        toNBT(): Internal.INBT;
        getOrNewList(id: string): Internal.ListJS;
        getOrNewMap(id: string): Internal.MapJS;
        putAll(m: Internal.Map_<string, any>): void;
        static of(o: any): Internal.MapJS;
        static json(map: any): Internal.JsonObject;
        getLength(): number;
        toString(): string;
        copy(): Internal.MapJS;
        copy(): Internal.Copyable;
        changeListener : ((arg0: Internal.MapJS) => void);
        get length(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MapJS_ = MapJS;
    class ItemBuilder extends Internal.BuilderBase {
        maxStackSize(v: number): Internal.ItemBuilder;
        color(index: number, c: number): Internal.ItemBuilder;
        getBuilderType(): string;
        maxDamage(v: number): Internal.ItemBuilder;
        tooltip(text: Internal.ITextComponent_): Internal.ItemBuilder;
        type(t: Internal.ItemType): Internal.ItemBuilder;
        containerItem(id: string): Internal.ItemBuilder;
        subtypes(fn: ((arg0: Internal.ItemStackJS) => Internal.Collection<Internal.ItemStackJS>)): Internal.ItemBuilder;
        tier(t: string): Internal.ItemBuilder;
        getAttackSpeed(): number;
        burnTime(v: number): Internal.ItemBuilder;
        tag(tag: string): Internal.ItemBuilder;
        parentModel(m: string): Internal.ItemBuilder;
        group(g: string): Internal.ItemBuilder;
        attackDamage(f: number): Internal.ItemBuilder;
        texture(tex: string): Internal.ItemBuilder;
        food(b: ((arg0: Internal.FoodBuilder) => void)): Internal.ItemBuilder;
        tool(type: ToolType, level: number): Internal.ItemBuilder;
        getMiningSpeed(): number;
        miningSpeed(f: number): Internal.ItemBuilder;
        getToolsMap(): Internal.Map<ToolType, number>;
        unstackable(): Internal.ItemBuilder;
        getAttackDamage(): number;
        attackSpeed(f: number): Internal.ItemBuilder;
        glow(v: boolean): Internal.ItemBuilder;
        rarity(v: Rarity): Internal.ItemBuilder;
        createItemProperties(): Internal.Item$Properties;
        toolTier : Internal.IItemTier;
        foodBuilder : Internal.FoodBuilder;
        tools : Internal.Map<ToolType, number>;
        defaultTags : Internal.Set<string>;
        armorTier : Internal.IArmorMaterial;
        modelJson : Internal.JsonObject;
        static readonly ARMOR_TIERS : {"gold":Internal.ArmorMaterial,"chain":Internal.ArmorMaterial,"diamond":Internal.ArmorMaterial,"turtle":Internal.ArmorMaterial,"iron":Internal.ArmorMaterial,"leather":Internal.ArmorMaterial,"netherite":Internal.ArmorMaterial};
        item : Internal.Item;
        attackSpeedBaseline : number;
        static readonly TOOL_TIERS : {"gold":Internal.ItemTier,"diamond":Internal.ItemTier,"iron":Internal.ItemTier,"wood":Internal.ItemTier,"stone":Internal.ItemTier,"netherite":Internal.ItemTier};
        attackDamageBaseline : number;
        get builderType(): string;
        get toolsMap(): Internal.Map<ToolType, number>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemBuilder_ = ItemBuilder;
    interface IRecipeHolder {
        func_201560_d(arg0: Internal.PlayerEntity): void;
        func_193056_a(arg0: Internal.IRecipe<any>): void;
        func_201561_a(arg0: Internal.World, arg1: Internal.ServerPlayerEntity, arg2: Internal.IRecipe<any>): boolean;
        func_193055_i(): Internal.IRecipe<any>;
    }
    type IRecipeHolder_ = IRecipeHolder;
    class BannerTileEntity extends Internal.TileEntity implements Internal.INameable {
        func_195534_a(arg0: Internal.ItemStack, arg1: Internal.DyeColor_): void;
        static func_175113_c(arg0: Internal.ItemStack): number;
        func_175114_c(): Internal.List<com.mojang.datafixers.util.Pair<Internal.BannerPattern, Internal.DyeColor>>;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        static func_230138_a_(arg0: Internal.DyeColor_, arg1: Internal.ListNBT): Internal.List<com.mojang.datafixers.util.Pair<Internal.BannerPattern, Internal.DyeColor>>;
        static func_175117_e(arg0: Internal.ItemStack): void;
        static func_230139_a_(arg0: Internal.ItemStack): Internal.ListNBT;
        func_213136_a(arg0: Internal.ITextComponent_): void;
        func_190615_l(arg0: Internal.BlockState): Internal.ItemStack;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_195533_l(arg0: (() => Internal.BlockState)): Internal.DyeColor;
        func_200200_C_(): Internal.ITextComponent;
        func_189517_E_(): Internal.CompoundNBT;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_200201_e(): Internal.ITextComponent;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BannerTileEntity_ = BannerTileEntity;
    interface ExecutorService extends Internal.Executor, Internal.AutoCloseable {
        submit<T_>(arg0: (() => void), arg1: T_): Internal.Future<T_>;
        submit(arg0: (() => void)): Internal.Future<any>;
        submit<T_>(arg0: (() => T_)): Internal.Future<T_>;
        isTerminated(): boolean;
        invokeAll<T_>(arg0: Internal.Collection<(() => T_)>): Internal.List<Internal.Future<T_>>;
        invokeAll<T_>(arg0: Internal.Collection<(() => T_)>, arg1: number, arg2: Internal.TimeUnit_): Internal.List<Internal.Future<T_>>;
        awaitTermination(arg0: number, arg1: Internal.TimeUnit_): boolean;
        shutdownNow(): Internal.List<Internal.Runnable>;
        invokeAny<T_>(arg0: Internal.Collection<(() => T_)>): T_;
        invokeAny<T_>(arg0: Internal.Collection<(() => T_)>, arg1: number, arg2: Internal.TimeUnit_): T_;
        close(): void;
        shutdown(): void;
        isShutdown(): boolean;
    }
    type ExecutorService_ = ExecutorService;
    class WorldgenEntryList extends Document.Object {
        verify(contains: string): boolean;
        verify(filter: ((arg0: string) => boolean)): boolean;
        verifyIgnoreCase(contains: string): boolean;
        values : Internal.List<string>;
        blacklist : boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldgenEntryList_ = WorldgenEntryList;
    interface Tags$IOptionalNamedTag <T> extends Internal.ITag$INamedTag<T> {
        isDefaulted(): boolean;
    }
    type Tags$IOptionalNamedTag_<T> = Tags$IOptionalNamedTag<T>;
    abstract class Team extends Document.Object {
        func_96661_b(): string;
        func_186681_k(): Internal.Team$CollisionRule;
        func_96670_d(): Internal.Collection<string>;
        func_178771_j(): Internal.Team$Visible;
        func_178770_i(): Internal.Team$Visible;
        func_230427_d_(arg0: Internal.ITextComponent_): Internal.IFormattableTextComponent;
        func_96665_g(): boolean;
        func_178775_l(): Internal.TextFormatting;
        func_142054_a(arg0: Internal.Team): boolean;
        func_98297_h(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Team_ = Team;
    interface IStatFormatter {
        format(arg0: number): string;
    }
    type IStatFormatter_ = IStatFormatter;
    class ShulkerBoxContainer extends Internal.Container {
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShulkerBoxContainer_ = ShulkerBoxContainer;
    class PlayerInteractionManager extends Document.Object implements Internal.PlayerInteractionManagerKJS {
        func_73077_b(arg0: Internal.GameType_): void;
        func_180239_c(): boolean;
        func_73076_a(arg0: Internal.GameType_): void;
        func_180237_b(arg0: BlockPos): boolean;
        func_73083_d(): boolean;
        func_73075_a(): void;
        func_73081_b(): Internal.GameType;
        func_229860_a_(arg0: BlockPos, arg1: Internal.CPlayerDiggingPacket$Action_, arg2: string): void;
        func_73080_a(arg0: Internal.ServerWorld): void;
        func_225416_a(arg0: BlockPos, arg1: Internal.CPlayerDiggingPacket$Action_, arg2: Internal.Direction_, arg3: number): void;
        func_219441_a(arg0: Internal.ServerPlayerEntity, arg1: Internal.World, arg2: Internal.ItemStack, arg3: Hand_, arg4: Internal.BlockRayTraceResult): Internal.ActionResultType;
        isDestroyingBlockKJS(): boolean;
        func_187250_a(arg0: Internal.ServerPlayerEntity, arg1: Internal.World, arg2: Internal.ItemStack, arg3: Hand_): Internal.ActionResultType;
        func_241820_a(arg0: Internal.GameType_, arg1: Internal.GameType_): void;
        func_241815_c_(): Internal.GameType;
        field_73092_a : Internal.ServerWorld;
        field_73090_b : Internal.ServerPlayerEntity;
        get destroyingBlockKJS(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerInteractionManager_ = PlayerInteractionManager;
    interface MinecraftServerKJS extends Internal.AsKJS {
        getServerResourcesKJS(): Internal.DataPackRegistries;
        asKJS(): any;
    }
    type MinecraftServerKJS_ = MinecraftServerKJS;
    class TwoLayerFeature extends Internal.AbstractFeatureSizeType {
        func_230369_a_(arg0: number, arg1: number): number;
        static readonly field_236728_c_ : Internal.Codec<Internal.TwoLayerFeature>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TwoLayerFeature_ = TwoLayerFeature;
    interface IAudioStream extends Internal.Closeable {
        func_216454_a(): Internal.AudioFormat;
        func_216455_a(arg0: number): Internal.ByteBuffer;
    }
    type IAudioStream_ = IAudioStream;
    interface IRegistryDelegate <T> extends Internal.Supplier<T> {
        get(): T;
        name(): ResourceLocation;
        type(): Internal.Class<T>;
    }
    type IRegistryDelegate_<T> = IRegistryDelegate<T>;
    interface IFormattableTextComponent extends Internal.ITextComponent {
        func_240703_c_(arg0: Internal.Style): Internal.IFormattableTextComponent;
        func_240702_b_(arg0: string): Internal.IFormattableTextComponent;
        func_240700_a_(arg0: Internal.UnaryOperator<Internal.Style>): Internal.IFormattableTextComponent;
        func_240699_a_(arg0: Internal.TextFormatting_): Internal.IFormattableTextComponent;
        func_240701_a_(arg0: Internal.TextFormatting[]): Internal.IFormattableTextComponent;
        func_230529_a_(arg0: Internal.ITextComponent_): Internal.IFormattableTextComponent;
        func_230530_a_(arg0: Internal.Style): Internal.IFormattableTextComponent;
    }
    type IFormattableTextComponent_ = IFormattableTextComponent;
    class SExplosionPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_149146_i(): number;
        func_149145_h(): number;
        func_149148_f(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149144_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149147_e(): number;
        func_149149_c(): number;
        func_149150_j(): Internal.List<BlockPos>;
        func_149143_g(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SExplosionPacket_ = SExplosionPacket;
    class CustomMachineJSRecipeBuilder extends Internal.RecipeJS {
        consumeDropOnEnd(arg0: Internal.ItemStackJS_, arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        requireItem(arg0: Internal.ItemStackJS_, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        requireItem(arg0: Internal.ItemStackJS_): Internal.CustomMachineJSRecipeBuilder;
        consumeDropOnStart(arg0: Internal.ItemStackJS_, arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        breakBlockOnStart(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        breakBlockOnStart(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.CustomMachineJSRecipeBuilder;
        destroyBlockOnEnd(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.CustomMachineJSRecipeBuilder;
        destroyBlockOnEnd(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        requirePosition(arg0: string[]): Internal.CustomMachineJSRecipeBuilder;
        requireStructure(arg0: string[][], arg1: Internal.Map_<string, string>): Internal.CustomMachineJSRecipeBuilder;
        requireFunctionToStart(arg0: fr.frinn.custommachinery.common.integration.kubejs.function_.RecipeFunction): Internal.CustomMachineJSRecipeBuilder;
        requireEntities(arg0: number, arg1: number, arg2: string[], arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        jei(): Internal.CustomMachineJSRecipeBuilder;
        damageItem(arg0: Internal.ItemStackJS_, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        damageItem(arg0: Internal.ItemStackJS_, arg1: number, arg2: string): Internal.CustomMachineJSRecipeBuilder;
        merge(arg0: any): Internal.RecipeJS;
        destroyAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[]): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[], arg9: boolean): Internal.CustomMachineJSRecipeBuilder;
        consumeEntityHealthOnEnd(arg0: number, arg1: number, arg2: string[], arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        create(arg0: Internal.ListJS): void;
        requireRedstone(arg0: number, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        requireRedstone(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        destroyBlockOnStart(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.CustomMachineJSRecipeBuilder;
        destroyBlockOnStart(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        requireFluidTagPerTick(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        requireFluidTagPerTick(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSRecipeBuilder;
        requireFluidTagPerTick(arg0: string, arg1: number, arg2: Internal.MapJS, arg3: string): Internal.CustomMachineJSRecipeBuilder;
        checkDrops(arg0: Internal.ItemStackJS[], arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        checkDrops(arg0: Internal.ItemStackJS[], arg1: number, arg2: number, arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        produceEnergyPerTick(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        requireBlockLight(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        requireBlockLight(arg0: number, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        killEntitiesOnEnd(arg0: number, arg1: number, arg2: string[], arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        requireFunctionEachTick(arg0: fr.frinn.custommachinery.common.integration.kubejs.function_.RecipeFunction): Internal.CustomMachineJSRecipeBuilder;
        dropItemOnStart(arg0: Internal.ItemStackJS_): Internal.CustomMachineJSRecipeBuilder;
        requireFuel(): Internal.CustomMachineJSRecipeBuilder;
        requireFuel(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        priority(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        produceItem(arg0: Internal.ItemStackJS_): Internal.CustomMachineJSRecipeBuilder;
        produceItem(arg0: Internal.ItemStackJS_, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        checkDrop(arg0: Internal.ItemStackJS_, arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        consumeDropsOnEnd(arg0: Internal.ItemStackJS[], arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        consumeDropsOnEnd(arg0: Internal.ItemStackJS[], arg1: number, arg2: number, arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        requireSkyLight(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        requireSkyLight(arg0: number, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        placeBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        placeBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.CustomMachineJSRecipeBuilder;
        dimensionBlacklist(arg0: string[]): Internal.CustomMachineJSRecipeBuilder;
        giveEffectEachTick(arg0: string, arg1: number, arg2: number, arg3: number, arg4: string[]): Internal.CustomMachineJSRecipeBuilder;
        giveEffectEachTick(arg0: string, arg1: number, arg2: number, arg3: any): Internal.CustomMachineJSRecipeBuilder;
        giveEffectEachTick(arg0: string, arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        serialize(): void;
        delay(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        requireFluid(arg0: Internal.FluidStackJS): Internal.CustomMachineJSRecipeBuilder;
        requireFluid(arg0: Internal.FluidStackJS, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        produceFluid(arg0: Internal.FluidStackJS): Internal.CustomMachineJSRecipeBuilder;
        produceFluid(arg0: Internal.FluidStackJS, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        requireWeather(arg0: string): Internal.CustomMachineJSRecipeBuilder;
        biomeBlacklist(arg0: string[]): Internal.CustomMachineJSRecipeBuilder;
        breakBlockOnEnd(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.CustomMachineJSRecipeBuilder;
        breakBlockOnEnd(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        repairItemTag(arg0: string, arg1: number, arg2: Internal.MapJS, arg3: string): Internal.CustomMachineJSRecipeBuilder;
        repairItemTag(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        repairItemTag(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[]): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[], arg9: boolean): Internal.CustomMachineJSRecipeBuilder;
        requireBlock(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: string): Internal.CustomMachineJSRecipeBuilder;
        requireBlock(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        requireBlock(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.CustomMachineJSRecipeBuilder;
        consumeEntityHealthOnStart(arg0: number, arg1: number, arg2: string[], arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        lootTableOutput(arg0: string): Internal.CustomMachineJSRecipeBuilder;
        lootTableOutput(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnEnd(arg0: string): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnEnd(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnEnd(arg0: string, arg1: number, arg2: boolean): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnEnd(arg0: string, arg1: boolean): Internal.CustomMachineJSRecipeBuilder;
        consumeAnyDropOnEnd(arg0: number, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        consumeAnyDropOnStart(arg0: number, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        consumeDropsOnStart(arg0: Internal.ItemStackJS[], arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        consumeDropsOnStart(arg0: Internal.ItemStackJS[], arg1: number, arg2: number, arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        repairItem(arg0: Internal.ItemStackJS_, arg1: number, arg2: string): Internal.CustomMachineJSRecipeBuilder;
        repairItem(arg0: Internal.ItemStackJS_, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        requireItemTag(arg0: string, arg1: number, arg2: Internal.MapJS, arg3: string): Internal.CustomMachineJSRecipeBuilder;
        requireItemTag(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSRecipeBuilder;
        requireItemTag(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        checkAnyDrop(arg0: number, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[], arg9: boolean): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[]): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        requireTime(arg0: string[]): Internal.CustomMachineJSRecipeBuilder;
        createRecipe(): Internal.IRecipe<any>;
        getFromToString(): string;
        requireFluidPerTick(arg0: Internal.FluidStackJS, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        requireFluidPerTick(arg0: Internal.FluidStackJS): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnStart(arg0: string): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnStart(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnStart(arg0: string, arg1: number, arg2: boolean): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnStart(arg0: string, arg1: boolean): Internal.CustomMachineJSRecipeBuilder;
        requireEnergy(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        killEntitiesOnStart(arg0: number, arg1: number, arg2: string[], arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        giveEffectOnEnd(arg0: string, arg1: number, arg2: number, arg3: string[]): Internal.CustomMachineJSRecipeBuilder;
        giveEffectOnEnd(arg0: string, arg1: number, arg2: number, arg3: number): Internal.CustomMachineJSRecipeBuilder;
        giveEffectOnEnd(arg0: string, arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        giveEffectOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: string[]): Internal.CustomMachineJSRecipeBuilder;
        deserialize(): void;
        breakAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[]): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[], arg9: boolean): Internal.CustomMachineJSRecipeBuilder;
        requireFunctionOnEnd(arg0: fr.frinn.custommachinery.common.integration.kubejs.function_.RecipeFunction): Internal.CustomMachineJSRecipeBuilder;
        requireEntitiesHealth(arg0: number, arg1: number, arg2: string[], arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        chance(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        biomeWhitelist(arg0: string[]): Internal.CustomMachineJSRecipeBuilder;
        runCommandEachTick(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        runCommandEachTick(arg0: string, arg1: number, arg2: boolean): Internal.CustomMachineJSRecipeBuilder;
        runCommandEachTick(arg0: string, arg1: boolean): Internal.CustomMachineJSRecipeBuilder;
        runCommandEachTick(arg0: string): Internal.CustomMachineJSRecipeBuilder;
        placeBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        placeBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.CustomMachineJSRecipeBuilder;
        requireFunctionOnStart(arg0: fr.frinn.custommachinery.common.integration.kubejs.function_.RecipeFunction): Internal.CustomMachineJSRecipeBuilder;
        requireEnergyPerTick(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        dimensionWhitelist(arg0: string[]): Internal.CustomMachineJSRecipeBuilder;
        produceFluidPerTick(arg0: Internal.FluidStackJS, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        produceFluidPerTick(arg0: Internal.FluidStackJS): Internal.CustomMachineJSRecipeBuilder;
        hide(): Internal.CustomMachineJSRecipeBuilder;
        damageItemTag(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        damageItemTag(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSRecipeBuilder;
        damageItemTag(arg0: string, arg1: number, arg2: Internal.MapJS, arg3: string): Internal.CustomMachineJSRecipeBuilder;
        dropItemOnEnd(arg0: Internal.ItemStackJS_): Internal.CustomMachineJSRecipeBuilder;
        requireWeatherOnMachine(arg0: string): Internal.CustomMachineJSRecipeBuilder;
        requireFluidTag(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        requireFluidTag(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSRecipeBuilder;
        requireFluidTag(arg0: string, arg1: number, arg2: Internal.MapJS, arg3: string): Internal.CustomMachineJSRecipeBuilder;
        produceEnergy(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        get fromToString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CustomMachineJSRecipeBuilder_ = CustomMachineJSRecipeBuilder;
    class GameRules$RuleType <T> extends Document.Object {
        func_223579_a(): T;
        func_223581_a(arg0: string): Internal.RequiredArgumentBuilder<Internal.CommandSource, any>;
        func_234914_a_(arg0: Internal.GameRules$IRuleEntryVisitor, arg1: Internal.GameRules$RuleKey<T>): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameRules$RuleType_<T> = GameRules$RuleType<T>;
    class PathNodeType extends Internal.Enum<Internal.PathNodeType> {
        static valueOf(arg0: string): Internal.PathNodeType;
        static values(): Internal.PathNodeType[];
        func_186289_a(): number;
        getDanger(): Internal.PathNodeType;
        static readonly WALKABLE_DOOR : Internal.PathNodeType;
        static readonly DAMAGE_CACTUS : Internal.PathNodeType;
        static readonly LAVA : Internal.PathNodeType;
        static readonly LEAVES : Internal.PathNodeType;
        static readonly BLOCKED : Internal.PathNodeType;
        static readonly WALKABLE : Internal.PathNodeType;
        static readonly DOOR_IRON_CLOSED : Internal.PathNodeType;
        static readonly DANGER_CACTUS : Internal.PathNodeType;
        static readonly FENCE : Internal.PathNodeType;
        static readonly OPEN : Internal.PathNodeType;
        static readonly TRAPDOOR : Internal.PathNodeType;
        static readonly BREACH : Internal.PathNodeType;
        static readonly RAIL : Internal.PathNodeType;
        static readonly DAMAGE_OTHER : Internal.PathNodeType;
        static readonly DOOR_OPEN : Internal.PathNodeType;
        static readonly DOOR_WOOD_CLOSED : Internal.PathNodeType;
        static readonly UNPASSABLE_RAIL : Internal.PathNodeType;
        static readonly DANGER_FIRE : Internal.PathNodeType;
        static readonly COCOA : Internal.PathNodeType;
        static readonly DAMAGE_FIRE : Internal.PathNodeType;
        static readonly DANGER_OTHER : Internal.PathNodeType;
        static readonly STICKY_HONEY : Internal.PathNodeType;
        static readonly WATER : Internal.PathNodeType;
        static readonly WATER_BORDER : Internal.PathNodeType;
        get danger(): Internal.PathNodeType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PathNodeType_ = "blocked" | "open" | "walkable" | "walkable_door" | "trapdoor" | "fence" | "lava" | "water" | "water_border" | "rail" | "unpassable_rail" | "danger_fire" | "damage_fire" | "danger_cactus" | "damage_cactus" | "danger_other" | "damage_other" | "door_open" | "door_wood_closed" | "door_iron_closed" | "breach" | "leaves" | "sticky_honey" | "cocoa" | PathNodeType;
    interface IRecipeCatalystRegistration {
        addRecipeCatalyst(arg0: any, arg1: ResourceLocation[]): void;
    }
    type IRecipeCatalystRegistration_ = IRecipeCatalystRegistration;
    interface IntCollection extends Internal.Collection<number>, Internal.IntIterable {
        add(arg0: number): boolean;
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        removeAll(arg0: Internal.IntCollection): boolean;
        contains(arg0: any): boolean;
        contains(arg0: number): boolean;
        iterator(): Internal.IntIterator;
        iterator(): Internal.Iterator<any>;
        addAll(arg0: Internal.IntCollection): boolean;
        toIntArray(): number[];
        toIntArray(arg0: number[]): number[];
        containsAll(arg0: Internal.IntCollection): boolean;
        toArray(arg0: number[]): number[];
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.IntCollection): boolean;
        removeIf(arg0: ((arg0: number) => boolean)): boolean;
        removeIf(arg0: ((arg0: number) => boolean)): boolean;
    }
    type IntCollection_ = IntCollection;
    class RenderLivingEvent$Pre <T, M> extends Internal.RenderLivingEvent<T, M> {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderLivingEvent$Pre_<T, M> = RenderLivingEvent$Pre<T, M>;
    interface AttributedCharacterIterator extends Internal.CharacterIterator {
        getAttribute(arg0: Internal.AttributedCharacterIterator$Attribute): any;
        getAttributes(): Internal.Map<Internal.AttributedCharacterIterator$Attribute, any>;
        getRunLimit(): number;
        getRunLimit(arg0: Internal.Set<Internal.AttributedCharacterIterator$Attribute>): number;
        getRunLimit(arg0: Internal.AttributedCharacterIterator$Attribute): number;
        getRunStart(): number;
        getRunStart(arg0: Internal.Set<Internal.AttributedCharacterIterator$Attribute>): number;
        getRunStart(arg0: Internal.AttributedCharacterIterator$Attribute): number;
        getAllAttributeKeys(): Internal.Set<Internal.AttributedCharacterIterator$Attribute>;
    }
    type AttributedCharacterIterator_ = AttributedCharacterIterator;
    class IntOpenHashSet extends Internal.AbstractIntSet implements Internal.Serializable, Internal.Cloneable, Internal.Hash {
        add(arg0: number): boolean;
        contains(arg0: number): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.IntIterator;
        trim(arg0: number): boolean;
        trim(): boolean;
        size(): number;
        addAll(arg0: Internal.IntCollection): boolean;
        addAll(arg0: Internal.Collection<number>): boolean;
        hashCode(): number;
        isEmpty(): boolean;
        clear(): void;
        clone(): Internal.IntOpenHashSet;
        clone(): any;
        remove(arg0: number): boolean;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IntOpenHashSet_ = IntOpenHashSet;
    class ZoneOffsetTransitionRule extends Document.Object implements Internal.Serializable {
        getOffsetAfter(): Internal.ZoneOffset;
        getOffsetBefore(): Internal.ZoneOffset;
        isMidnightEndOfDay(): boolean;
        getDayOfWeek(): Internal.DayOfWeek;
        getLocalTime(): Internal.LocalTime;
        hashCode(): number;
        static of(arg0: Internal.Month_, arg1: number, arg2: Internal.DayOfWeek_, arg3: Internal.LocalTime, arg4: boolean, arg5: Internal.ZoneOffsetTransitionRule$TimeDefinition_, arg6: Internal.ZoneOffset, arg7: Internal.ZoneOffset, arg8: Internal.ZoneOffset): Internal.ZoneOffsetTransitionRule;
        equals(arg0: any): boolean;
        getStandardOffset(): Internal.ZoneOffset;
        toString(): string;
        createTransition(arg0: number): Internal.ZoneOffsetTransition;
        getTimeDefinition(): Internal.ZoneOffsetTransitionRule$TimeDefinition;
        getMonth(): Internal.Month;
        getDayOfMonthIndicator(): number;
        get localTime(): Internal.LocalTime;
        get dayOfWeek(): Internal.DayOfWeek;
        get dayOfMonthIndicator(): number;
        get midnightEndOfDay(): boolean;
        get standardOffset(): Internal.ZoneOffset;
        get month(): Internal.Month;
        get timeDefinition(): Internal.ZoneOffsetTransitionRule$TimeDefinition;
        get offsetAfter(): Internal.ZoneOffset;
        get offsetBefore(): Internal.ZoneOffset;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZoneOffsetTransitionRule_ = ZoneOffsetTransitionRule;
    interface Thread$Builder$OfVirtual extends Internal.Thread$Builder {
        inheritInheritableThreadLocals(arg0: boolean): Internal.Thread$Builder$OfVirtual;
        inheritInheritableThreadLocals(arg0: boolean): Internal.Thread$Builder;
        name(arg0: string, arg1: number): Internal.Thread$Builder;
        name(arg0: string, arg1: number): Internal.Thread$Builder$OfVirtual;
        name(arg0: string): Internal.Thread$Builder;
        name(arg0: string): Internal.Thread$Builder$OfVirtual;
        uncaughtExceptionHandler(arg0: ((arg0: Internal.Thread, arg1: Internal.Throwable) => void)): Internal.Thread$Builder;
        uncaughtExceptionHandler(arg0: ((arg0: Internal.Thread, arg1: Internal.Throwable) => void)): Internal.Thread$Builder$OfVirtual;
    }
    type Thread$Builder$OfVirtual_ = Thread$Builder$OfVirtual;
    class RenderTooltipEvent$PostBackground extends Internal.RenderTooltipEvent$Post {
        getHeight(): number;
        getListenerList(): Internal.ListenerList;
        getWidth(): number;
        get listenerList(): Internal.ListenerList;
        get width(): number;
        get height(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderTooltipEvent$PostBackground_ = RenderTooltipEvent$PostBackground;
    class ItemUseContext extends Document.Object {
        func_221532_j(): Vec3;
        func_195999_j(): Internal.PlayerEntity;
        func_221533_k(): boolean;
        func_221531_n(): Hand;
        func_195995_a(): BlockPos;
        func_195990_h(): number;
        func_195992_f(): Internal.Direction;
        func_196000_l(): Internal.Direction;
        func_195991_k(): Internal.World;
        func_225518_g_(): boolean;
        func_195996_i(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemUseContext_ = ItemUseContext;
    abstract class Point2D extends Document.Object implements Internal.Cloneable {
        getX(): number;
        getY(): number;
        static distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
        distance(arg0: Internal.Point2D): number;
        distance(arg0: number, arg1: number): number;
        setLocation(arg0: number, arg1: number): void;
        setLocation(arg0: Internal.Point2D): void;
        hashCode(): number;
        equals(arg0: any): boolean;
        clone(): any;
        static distanceSq(arg0: number, arg1: number, arg2: number, arg3: number): number;
        distanceSq(arg0: Internal.Point2D): number;
        distanceSq(arg0: number, arg1: number): number;
        get x(): number;
        get y(): number;
        set location(arg0: Internal.Point2D);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Point2D_ = Point2D;
    interface SequenceLayout extends Internal.MemoryLayout {
        flatten(): Internal.SequenceLayout;
        elementLayout(): Internal.MemoryLayout;
        withElementCount(arg0: number): Internal.SequenceLayout;
        elementCount(): number;
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.SequenceLayout;
        reshape(arg0: number[]): Internal.SequenceLayout;
        withoutName(): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.SequenceLayout;
    }
    type SequenceLayout_ = SequenceLayout;
    abstract class AbstractChunkProvider extends Document.Object implements Internal.IChunkLightProvider, Internal.AutoCloseable {
        func_212863_j_(): Internal.WorldLightManager;
        func_225313_a(arg0: number, arg1: number): Internal.Chunk;
        func_212849_a_(arg0: number, arg1: number, arg2: Internal.ChunkStatus, arg3: boolean): Internal.IChunk;
        func_217204_a(arg0: Internal.Entity): boolean;
        func_73148_d(): string;
        func_217202_b(arg0: number, arg1: number): Internal.IBlockReader;
        func_217203_a(arg0: boolean, arg1: boolean): void;
        func_222866_a(arg0: BlockPos): boolean;
        func_73149_a(arg0: number, arg1: number): boolean;
        func_222865_a(arg0: Internal.ChunkPos): boolean;
        close(): void;
        func_217206_a(arg0: Internal.ChunkPos, arg1: boolean): void;
        func_217205_a(arg0: number, arg1: number, arg2: boolean): Internal.Chunk;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractChunkProvider_ = AbstractChunkProvider;
    interface IBookmarkOverlay {
        getIngredientUnderMouse(): any;
    }
    type IBookmarkOverlay_ = IBookmarkOverlay;
    class SDisplayObjectivePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149370_d(): string;
        func_149371_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SDisplayObjectivePacket_ = SDisplayObjectivePacket;
    class BlockBreakEventJS extends Internal.PlayerEventJS {
        getBlock(): Internal.BlockContainerJS;
        getXp(): number;
        getEntity(): Internal.EntityJS;
        setXp(xp: number): void;
        canCancel(): boolean;
        get xp(): number;
        get block(): Internal.BlockContainerJS;
        get entity(): Internal.EntityJS;
        set xp(xp: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockBreakEventJS_ = BlockBreakEventJS;
    class SPlayerLookPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_200531_a(arg0: Internal.World): Vec3;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_201064_a(): Internal.EntityAnchorArgument$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlayerLookPacket_ = SPlayerLookPacket;
    class RegisterFluidSubtypeEventJS extends Internal.JEIEventJS {
        readonly data : Internal.ISubtypeRegistration;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegisterFluidSubtypeEventJS_ = RegisterFluidSubtypeEventJS;
    interface Readable {
        read(arg0: Internal.CharBuffer): number;
    }
    type Readable_ = Readable;
    class PhaseManager extends Document.Object {
        func_188758_a(arg0: Internal.PhaseType<any>): void;
        func_188757_b<T_>(arg0: Internal.PhaseType<T_>): T_;
        func_188756_a(): Internal.IPhase;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PhaseManager_ = PhaseManager;
    interface ProfileLookupCallback {
        onProfileLookupFailed(arg0: Internal.GameProfile, arg1: Internal.Exception): void;
        onProfileLookupSucceeded(arg0: Internal.GameProfile): void;
    }
    type ProfileLookupCallback_ = ProfileLookupCallback;
    class ServerWorldLightManager extends Internal.WorldLightManager implements Internal.AutoCloseable, Internal.StarLightLightingProvider {
        func_215571_a(arg0: Internal.ChunkPos, arg1: boolean): void;
        func_215581_a(arg0: Internal.ChunkPos): void;
        func_215588_z_(): void;
        func_215598_a(arg0: number): void;
        func_215568_a(arg0: BlockPos): void;
        func_223115_b(arg0: Internal.ChunkPos, arg1: boolean): void;
        func_215566_a(arg0: Internal.SectionPos, arg1: boolean): void;
        close(): void;
        func_215575_a(arg0: number, arg1: boolean, arg2: boolean): number;
        func_215593_a(arg0: Internal.IChunk, arg1: boolean): Internal.CompletableFuture<any>;
        func_215574_a(arg0: Internal.LightType_, arg1: Internal.SectionPos, arg2: Internal.NibbleArray, arg3: boolean): void;
        func_215573_a(arg0: BlockPos, arg1: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerWorldLightManager_ = ServerWorldLightManager;
    class ModelProperty <T> extends Document.Object implements Internal.Predicate<T> {
        test(arg0: T): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModelProperty_<T> = ModelProperty<T>;
    class CUpdateBeaconPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_210356_b(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_210355_a(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CUpdateBeaconPacket_ = CUpdateBeaconPacket;
    class ChunkHolder$LocationType extends Internal.Enum<Internal.ChunkHolder$LocationType> {
        static valueOf(arg0: string): Internal.ChunkHolder$LocationType;
        func_219065_a(arg0: Internal.ChunkHolder$LocationType_): boolean;
        static values(): Internal.ChunkHolder$LocationType[];
        static readonly ENTITY_TICKING : Internal.ChunkHolder$LocationType;
        static readonly INACCESSIBLE : Internal.ChunkHolder$LocationType;
        static readonly BORDER : Internal.ChunkHolder$LocationType;
        static readonly TICKING : Internal.ChunkHolder$LocationType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkHolder$LocationType_ = "inaccessible" | "border" | "ticking" | "entity_ticking" | ChunkHolder$LocationType;
    interface IParameterized {
        func_225580_a_(arg0: Internal.ValidationTracker): void;
        func_215855_a(): Internal.Set<Internal.LootParameter<any>>;
    }
    type IParameterized_ = IParameterized;
    interface IForgeShearable {
        isShearable(arg0: Internal.ItemStack, arg1: Internal.World, arg2: BlockPos): boolean;
        onSheared(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack, arg2: Internal.World, arg3: BlockPos, arg4: number): Internal.List<Internal.ItemStack>;
    }
    type IForgeShearable_ = IForgeShearable;
    interface WatchEvent$Kind <T> {
        name(): string;
        type(): Internal.Class<T>;
    }
    type WatchEvent$Kind_<T> = WatchEvent$Kind<T>;
    class SPlayerListItemPacket$AddPlayerData extends Document.Object {
        func_179963_b(): number;
        func_179961_d(): Internal.ITextComponent;
        func_179962_a(): Internal.GameProfile;
        func_179960_c(): Internal.GameType;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlayerListItemPacket$AddPlayerData_ = SPlayerListItemPacket$AddPlayerData;
    class ZombieEntity extends Internal.MonsterEntity {
        func_82227_f(arg0: boolean): void;
        func_146070_a(arg0: boolean): void;
        func_204706_dD(): boolean;
        static func_241399_a_(arg0: Internal.Random): boolean;
        static func_234342_eQ_(): Internal.AttributeModifierMap$MutableAttribute;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70071_h_(): void;
        func_70033_W(): number;
        func_175448_a(arg0: Internal.ItemStack): boolean;
        func_146072_bX(): boolean;
        func_70668_bt(): Internal.CreatureAttribute;
        func_241847_a(arg0: Internal.ServerWorld, arg1: Internal.LivingEntity): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_70636_d(): void;
        func_70631_g_(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZombieEntity_ = ZombieEntity;
    abstract class StructureProcessor extends Document.Object {
        process(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings, arg6: Internal.Template): Internal.Template$BlockInfo;
        func_230386_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings): Internal.Template$BlockInfo;
        processEntity(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Template$EntityInfo, arg3: Internal.Template$EntityInfo, arg4: Internal.PlacementSettings, arg5: Internal.Template): Internal.Template$EntityInfo;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureProcessor_ = StructureProcessor;
    interface IForgePacketBuffer {
        readRegistryIdSafe<T>(arg0: Internal.Class_<T>): T;
        readRegistryId<T>(): T;
        getBuffer(): Internal.PacketBuffer;
        readFluidStack(): net.minecraftforge.fluids.FluidStack;
        writeRegistryId<T>(arg0: T): void;
        readRegistryIdUnsafe<T>(arg0: Internal.IForgeRegistry<T>): T;
        writeFluidStack(arg0: net.minecraftforge.fluids.FluidStack): void;
        writeRegistryIdUnsafe(arg0: Internal.IForgeRegistry<any>, arg1: ResourceLocation_): void;
        writeRegistryIdUnsafe<T>(arg0: Internal.IForgeRegistry<T>, arg1: T): void;
    }
    type IForgePacketBuffer_ = IForgePacketBuffer;
    interface Decoder$Terminal <A> {
        decoder(): Internal.Decoder<A>;
        decode<T>(arg0: Internal.DynamicOps<T>, arg1: T): Internal.DataResult<A>;
    }
    type Decoder$Terminal_<A> = Decoder$Terminal<A>;
    class EntityViewRenderEvent$FogColors extends Internal.EntityViewRenderEvent {
        getListenerList(): Internal.ListenerList;
        getRed(): number;
        getGreen(): number;
        setBlue(arg0: number): void;
        setGreen(arg0: number): void;
        setRed(arg0: number): void;
        getBlue(): number;
        get red(): number;
        get green(): number;
        get blue(): number;
        get listenerList(): Internal.ListenerList;
        set red(arg0: number);
        set green(arg0: number);
        set blue(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityViewRenderEvent$FogColors_ = EntityViewRenderEvent$FogColors;
    class GlVertexFormat$Builder <T> extends Document.Object {
        build(): Internal.GlVertexFormat<T>;
        addElement(type: T, pointer: number, format: Internal.GlVertexAttributeFormat, count: number, normalized: boolean): Internal.GlVertexFormat$Builder<T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GlVertexFormat$Builder_<T> = GlVertexFormat$Builder<T>;
    abstract class MinecraftServer extends Internal.RecursiveEventLoop<any> implements Internal.ISnooperInfo, Internal.ICommandSource, Internal.AutoCloseable, Internal.MinecraftServerKJS {
        func_71273_Y(): string;
        func_71209_f(arg0: string): Internal.File;
        func_71224_l(arg0: string): void;
        func_184103_al(): Internal.PlayerList;
        func_211150_az(): number;
        func_184106_y(): boolean;
        func_147137_ag(): Internal.NetworkSystem;
        func_240776_a_(arg0: Internal.FolderName): java_.nio.file.Path;
        markWorldsDirty(): void;
        func_71231_X(): boolean;
        func_71205_p(arg0: string): void;
        func_240790_aQ_(): void;
        func_240789_aP_(): boolean;
        func_147132_au(): void;
        func_195039_a(): boolean;
        func_200252_aR(): Internal.GameRules;
        func_195561_aH(): Internal.ResourcePackList;
        func_181035_ah(): boolean;
        func_71242_L(): boolean;
        func_191949_aK(): Internal.AdvancementManager;
        func_240792_aT_(): Internal.TemplateManager;
        func_213199_b(arg0: Internal.GameProfile): boolean;
        func_71235_a(arg0: Internal.GameType_): void;
        func_205743_a(arg0: Internal.CommandSource): void;
        func_104055_i(arg0: boolean): void;
        func_230540_aS_(): boolean;
        func_193030_aL(): Internal.FunctionManager;
        func_71229_d(arg0: boolean): void;
        getDataPackRegistries(): Internal.DataPackRegistries;
        func_71188_g(arg0: boolean): void;
        func_200251_aP(): Internal.ServerScoreboard;
        func_223711_a(arg0: java_.nio.file.Path): void;
        func_143007_ar(): number;
        func_80003_ah(): Internal.Snooper;
        func_211833_a(arg0: Internal.GameProfile): number;
        func_205744_aT(): boolean;
        func_152358_ax(): Internal.PlayerProfileCache;
        func_143006_e(arg0: number): void;
        func_180507_a_(arg0: string, arg1: string): void;
        func_71263_m(arg0: boolean): void;
        func_147139_a(arg0: Internal.Difficulty_, arg1: boolean): void;
        func_240770_D_(): Internal.Set<Internal.RegistryKey<Internal.World>>;
        close(): void;
        func_71191_d(arg0: number): void;
        func_240793_aU_(): Internal.IServerConfiguration;
        func_71255_r(): boolean;
        func_71199_h(): boolean;
        func_244266_aF(): Internal.ITagCollectionSupplier;
        func_230537_U_(): boolean;
        func_71266_T(): boolean;
        func_71259_af(): number;
        func_175580_aG(): number;
        func_230541_aj_(): boolean;
        func_147130_as(): Internal.MinecraftSessionService;
        func_71250_E(): Internal.KeyPair;
        static func_240777_a_(arg0: Internal.SaveFormat$LevelSave): void;
        func_82010_a(arg0: (() => void)): void;
        func_195573_aM(): Internal.CommandSource;
        func_213185_aS(): Internal.IProfiler;
        func_71213_z(): string[];
        func_240780_a_(arg0: Internal.Collection<string>): Internal.CompletableFuture<void>;
        func_211149_aT(): number;
        func_71279_ae(): boolean;
        func_71278_l(): boolean;
        func_175577_aI(): number;
        func_71262_S(): boolean;
        func_223707_k(): number;
        func_71189_e(arg0: string): void;
        func_195565_a(arg0: Internal.GameType_, arg1: boolean, arg2: number): boolean;
        func_71214_G(): string;
        func_205741_k(arg0: boolean): void;
        func_71249_w(): string;
        func_71241_aa(): boolean;
        func_82357_ak(): number;
        func_213164_aw(): boolean;
        func_240791_aR_(): Internal.IProfileResult;
        func_195569_l(): boolean;
        func_199529_aN(): Internal.RecipeManager;
        func_71245_h(arg0: boolean): void;
        func_184108_a(arg0: Internal.ServerWorld): number;
        static func_240772_a_(arg0: Internal.ResourcePackList, arg1: Internal.DatapackCodec, arg2: boolean): Internal.DatapackCodec;
        func_213211_a(arg0: boolean, arg1: boolean, arg2: boolean): boolean;
        func_104056_am(): boolean;
        func_190518_ac(): boolean;
        getServerResourcesKJS(): Internal.DataPackRegistries;
        func_70000_a(arg0: Internal.Snooper): void;
        func_71275_y(): number;
        func_241755_D_(): Internal.ServerWorld;
        func_145747_a(arg0: Internal.ITextComponent_, arg1: Internal.UUID): void;
        func_201300_aS(): Internal.CustomServerBossInfoManager;
        func_71218_a(arg0: Internal.RegistryKey<Internal.World>): Internal.ServerWorld;
        getServerModName(): string;
        func_229736_aP_(): Internal.LootPredicateManager;
        func_71200_ad(): boolean;
        func_195571_aL(): Internal.Commands;
        func_152359_aw(): Internal.GameProfileRepository;
        func_184109_z(): Internal.File;
        func_110455_j(): number;
        func_71233_x(): number;
        func_213170_ax(): Internal.Thread;
        func_195040_b(): boolean;
        func_82356_Z(): boolean;
        func_244435_a(arg0: Internal.ServerPlayerEntity): Internal.IChatFilter;
        forgeGetWorldMap(): Internal.Map<Internal.RegistryKey<Internal.World>, Internal.ServerWorld>;
        func_71208_b(arg0: number): void;
        func_71215_F(): number;
        func_213209_d(arg0: boolean): void;
        func_71204_b(arg0: boolean): void;
        static func_240784_a_<S_>(arg0: ((arg0: Internal.Thread) => S_)): S_;
        func_241871_k(): number;
        getTickTime(arg0: Internal.RegistryKey<Internal.World>): number[];
        func_212370_w(): Internal.Iterable<Internal.ServerWorld>;
        func_213201_w(): boolean;
        func_71230_b(arg0: Internal.CrashReport): Internal.CrashReport;
        func_71219_W(): boolean;
        func_71265_f(): Internal.GameType;
        func_244267_aX(): Internal.DynamicRegistries;
        func_184105_a(arg0: Internal.PlayerList): void;
        func_229735_aN_(): Internal.CommandStorage;
        func_200249_aQ(): Internal.LootTableManager;
        func_71344_c(): boolean;
        func_175579_a(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        func_213210_aR(): Internal.FrameTimer;
        func_147134_at(): Internal.ServerStatusResponse;
        func_230538_V_(): boolean;
        func_71211_k(): string;
        func_190517_e(arg0: boolean): void;
        func_175581_ab(): string;
        func_195563_aC(): Internal.DataFixer;
        func_71207_Z(): number;
        func_71264_H(): boolean;
        func_147133_T(): string;
        func_230045_q_(): Internal.Optional<string>;
        func_230512_b_(arg0: number): number;
        func_213168_p(): boolean;
        func_71238_n(): Internal.File;
        static readonly field_213219_c : Internal.WorldSettings;
        readonly field_71311_j : number[];
        field_195576_ac : Internal.DataPackRegistries;
        static readonly field_152367_a : Internal.File;
        readonly field_71310_m : Internal.SaveFormat$LevelSave;
        get serverModName(): string;
        get dataPackRegistries(): Internal.DataPackRegistries;
        get serverResourcesKJS(): Internal.DataPackRegistries;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MinecraftServer_ = MinecraftServer;
    class EntitySpawnedEventJS extends Internal.EntityEventJS {
        getWorld(): Internal.WorldJS;
        getEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get world(): Internal.WorldJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntitySpawnedEventJS_ = EntitySpawnedEventJS;
    interface IShapedRecipe <T> extends Internal.IRecipe<T> {
        getRecipeWidth(): number;
        getRecipeHeight(): number;
    }
    type IShapedRecipe_<T> = IShapedRecipe<T>;
    class RecipeFunction extends Internal.BaseFunction implements Internal.WrappedJS {
        call(arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Scriptable, arg3: any[]): any;
        call(cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args0: any[]): Internal.RecipeJS;
        createRecipe(args0: any[]): Internal.RecipeJS;
        toString(): string;
        readonly typeID : ResourceLocation;
        readonly type : Internal.RecipeTypeJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecipeFunction_ = RecipeFunction;
    class AtSurfaceWithExtraConfig extends Document.Object implements Internal.IPlacementConfig {
        readonly field_202480_c : number;
        static readonly field_236973_a_ : Internal.Codec<Internal.AtSurfaceWithExtraConfig>;
        readonly field_202478_a : number;
        readonly field_202479_b : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AtSurfaceWithExtraConfig_ = AtSurfaceWithExtraConfig;
    class ChunkDataEvent$Save extends Internal.ChunkDataEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkDataEvent$Save_ = ChunkDataEvent$Save;
    class Inventory extends Document.Object implements Internal.IInventory, Internal.IRecipeHelperPopulator {
        func_70304_b(arg0: number): Internal.ItemStack;
        func_194018_a(arg0: Internal.RecipeItemHelper): void;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_174888_l(): void;
        func_233541_b_(arg0: Internal.ItemStack): boolean;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_110134_a(arg0: Internal.IInventoryChangedListener): void;
        func_223374_a(arg0: Internal.Item, arg1: number): Internal.ItemStack;
        func_110132_b(arg0: Internal.IInventoryChangedListener): void;
        func_174894_a(arg0: Internal.ItemStack): Internal.ItemStack;
        func_70302_i_(): number;
        func_191420_l(): boolean;
        func_70486_a(arg0: Internal.ListNBT): void;
        toString(): string;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_70296_d(): void;
        func_233543_f_(): Internal.List<Internal.ItemStack>;
        func_70487_g(): Internal.ListNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Inventory_ = Inventory;
    interface MapLike <T> {
        entries(): Internal.Stream<com.mojang.datafixers.util.Pair<T, T>>;
        get(arg0: T): T;
        get(arg0: string): T;
    }
    type MapLike_<T> = MapLike<T>;
    interface CraftingInventoryAccessor {
        getEventHandler(): Internal.Container;
        getStackList(): Internal.NonNullList<Internal.ItemStack>;
    }
    type CraftingInventoryAccessor_ = CraftingInventoryAccessor;
    class OreFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        static readonly field_236566_a_ : Internal.Codec<Internal.OreFeatureConfig>;
        readonly field_202442_b : Internal.RuleTest;
        readonly field_202443_c : number;
        readonly field_202444_d : Internal.BlockState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OreFeatureConfig_ = OreFeatureConfig;
    class BiomeGenerationSettingsBuilder extends Internal.BiomeGenerationSettings$Builder {
        getSurfaceBuilder(): Internal.Optional<Internal.Supplier<Internal.ConfiguredSurfaceBuilder<any>>>;
        getFeatures(arg0: DecorationGenerationStep_): Internal.List<Internal.Supplier<Internal.ConfiguredFeature<any, any>>>;
        getCarvers(arg0: CarvingGenerationStep_): Internal.List<Internal.Supplier<Internal.ConfiguredCarver<any>>>;
        getStructures(): Internal.List<Internal.Supplier<Internal.StructureFeature<any, any>>>;
        get surfaceBuilder(): Internal.Optional<Internal.Supplier<Internal.ConfiguredSurfaceBuilder<any>>>;
        get structures(): Internal.List<Internal.Supplier<Internal.StructureFeature<any, any>>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BiomeGenerationSettingsBuilder_ = BiomeGenerationSettingsBuilder;
    class FeatureSpread extends Document.Object {
        func_242259_a(arg0: Internal.Random): number;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        static func_242252_a(arg0: number): Internal.FeatureSpread;
        static func_242253_a(arg0: number, arg1: number): Internal.FeatureSpread;
        static func_242254_a(arg0: number, arg1: number, arg2: number): Internal.Codec<Internal.FeatureSpread>;
        static readonly field_242249_a : Internal.Codec<Internal.FeatureSpread>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FeatureSpread_ = FeatureSpread;
    class LivingEvent$LivingUpdateEvent extends Internal.LivingEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingEvent$LivingUpdateEvent_ = LivingEvent$LivingUpdateEvent;
    class ServerJS extends Document.Object implements Internal.MessageSender, Internal.WithAttachedData {
        getAdvancement(id: ResourceLocation_): Internal.AdvancementJS;
        publishServer(gameType: Internal.GameType_, bl: boolean, i: number): boolean;
        getFunctionCompilationLevel(): number;
        setForceGameType(bl: boolean): void;
        release(): void;
        getPlayerCount(): number;
        isCommandBlockEnabled(): boolean;
        populateSnooper(snooper: Internal.Snooper): void;
        getTags(): Internal.ITagCollectionSupplier;
        getStatus(): Internal.ServerStatusResponse;
        getGameRules(): Internal.GameRules;
        getCommands(): Internal.Commands;
        runCommandSilent(command: string): number;
        startProfiling(): void;
        isSingleplayer(): boolean;
        areNpcsEnabled(): boolean;
        isNetherEnabled(): boolean;
        getSpawnRadius(serverLevel: Internal.ServerWorld): number;
        getAverageTickTime(): number;
        getPlayers(): Internal.EntityArrayList;
        hasWorldScreenshot(): boolean;
        getCustomBossEvents(): Internal.CustomServerBossInfoManager;
        getServerVersion(): string;
        setDemo(bl: boolean): void;
        getMaxBuildHeight(): number;
        stop(): void;
        getDisplayName(): Internal.Text;
        setDefaultGameType(gameType: Internal.GameType_): void;
        setMaxBuildHeight(i: number): void;
        setEnforceWhitelist(bl: boolean): void;
        createCommandSourceStack(): Internal.CommandSource;
        getPlayerList(): Internal.PlayerList;
        isShutdown(): boolean;
        getProfiler(): Internal.IProfiler;
        getLocalIp(): string;
        updateWorldList(): void;
        hasGui(): boolean;
        getAllLevels(): Internal.Iterable<any>;
        getSessionService(): Internal.MinecraftSessionService;
        getHardcore(): boolean;
        isProfiling(): boolean;
        setPort(i: number): void;
        getFrameTimer(): Internal.FrameTimer;
        getFixerUpper(): Internal.DataFixer;
        getAbsoluteMaxWorldSize(): number;
        pollTask(): boolean;
        setMotd(text: Internal.ITextComponent_): void;
        setMotd(string: string): void;
        setLocalIp(string: string): void;
        getScoreboard(): Internal.ServerScoreboard;
        isSinglePlayer(): boolean;
        setPvpAllowed(bl: boolean): void;
        close(): void;
        addTickable(runnable: (() => void)): void;
        getData(): Internal.AttachedData;
        forceSynchronousWrites(): boolean;
        registryAccess(): Internal.DynamicRegistries;
        setStatusMessage(message: Internal.ITextComponent_): void;
        isStopped(): boolean;
        usesAuthentication(): boolean;
        invalidateStatus(): void;
        getPredicateManager(): Internal.LootPredicateManager;
        isPublished(): boolean;
        isPvpAllowed(): boolean;
        isDedicated(): boolean;
        sendMessage(component: Internal.ITextComponent_, uUID: Internal.UUID): void;
        getMaxPlayers(): number;
        setPlayerList(playerList: Internal.PlayerList): void;
        getWorlds(): Internal.List<Internal.ServerWorldJS>;
        getDefaultGameType(): Internal.GameType;
        getLevel(minecraftLevel: Internal.World): Internal.WorldJS;
        getLevel(resourceKey: Internal.RegistryKey<any>): Internal.ServerWorldJS;
        getLevel(dimension: string): Internal.WorldJS;
        halt(bl: boolean): void;
        setPreventProxyConnections(bl: boolean): void;
        getPort(): number;
        getOperatorUserPermissionLevel(): number;
        shouldRconBroadcast(): boolean;
        isFlightAllowed(): boolean;
        finishProfiling(): Internal.IProfileResult;
        getWorldPath(levelResource: Internal.FolderName): java_.nio.file.Path;
        toString(): string;
        getRateLimitPacketsPerSecond(): number;
        isUnderSpawnProtection(serverLevel: Internal.ServerWorld, blockPos: BlockPos, player: Internal.PlayerEntity): boolean;
        isEnforceWhitelist(): boolean;
        getWorld(dimension: string): Internal.WorldJS;
        getWorld(minecraftLevel: Internal.World): Internal.WorldJS;
        getPlayer(name: string): Internal.ServerPlayerJS;
        getPlayer(uuid: Internal.UUID): Internal.ServerPlayerJS;
        getPlayer(minecraftPlayer: Internal.PlayerEntity): Internal.ServerPlayerJS;
        getName(): Internal.Text;
        getRunningThread(): Internal.Thread;
        isEpollEnabled(): boolean;
        getCompressionThreshold(): number;
        isSingleplayerOwner(gameProfile: Internal.GameProfile): boolean;
        tell(message: Internal.ITextComponent_): void;
        getMotd(): string;
        getOverworld(): Internal.ServerWorldJS;
        isDemo(): boolean;
        getFile(string: string): Internal.File;
        getWorldScreenshotFile(): Internal.File;
        getKeyPair(): Internal.KeyPair;
        reloadResources(collection: Internal.Collection<any>): Internal.CompletableFuture<any>;
        getStructureManager(): Internal.TemplateManager;
        saveDebugReport(path: java_.nio.file.Path): void;
        getLootTables(): Internal.LootTableManager;
        setResourcePack(string: string, string2: string): void;
        scheduleExecutables(): boolean;
        getServerDirectory(): Internal.File;
        getProfileCache(): Internal.PlayerProfileCache;
        repliesToStatus(): boolean;
        getPackRepository(): Internal.ResourcePackList;
        getScaledTrackingDistance(i: number): number;
        getRecipeManager(): Internal.RecipeManager;
        getPlayerNames(): string[];
        setFlightAllowed(bl: boolean): void;
        getResourcePackHash(): string;
        setSingleplayerName(string: string): void;
        getModdedStatus(): Internal.Optional<any>;
        overworld(): Internal.ServerWorldJS;
        getServerModName(): string;
        getNextTickTime(): number;
        fillReport(crashReport: Internal.CrashReport): Internal.CrashReport;
        getSnooper(): Internal.Snooper;
        getMinecraftServer(): Internal.MinecraftServer;
        getEntities(filter: string): Internal.EntityArrayList;
        getEntities(): Internal.EntityArrayList;
        getAdvancements(): Internal.AdvancementManager;
        getResourcePack(): string;
        getSingleplayerName(): string;
        getProfilePermissions(gameProfile: Internal.GameProfile): number;
        acceptsSuccess(): boolean;
        isReady(): boolean;
        isSpawningAnimals(): boolean;
        createTextFilterForPlayer(serverPlayer: Internal.ServerPlayerEntity): Internal.IChatFilter;
        setDifficulty(difficulty: Internal.Difficulty_, bl: boolean): void;
        getPlayerIdleTimeout(): number;
        getConnection(): Internal.NetworkSystem;
        kickUnlistedPlayers(commandSourceStack: Internal.CommandSource): void;
        setDifficultyLocked(bl: boolean): void;
        isRunning(): boolean;
        scheduleInTicks(ticks: number, event: ((arg0: Internal.ScheduledEvent) => void)): Internal.ScheduledEvent;
        scheduleInTicks(ticks: number, data: any, event: ((arg0: Internal.ScheduledEvent) => void)): Internal.ScheduledEvent;
        getPreventProxyConnections(): boolean;
        runCommand(command: string): number;
        levelKeys(): Internal.Set<any>;
        getForceGameType(): boolean;
        getProfileRepository(): Internal.GameProfileRepository;
        setPlayerIdleTimeout(i: number): void;
        sendDataToAll(channel: string, data: Internal.CompoundNBT): void;
        setUsesAuthentication(bl: boolean): void;
        getFunctions(): Internal.FunctionManager;
        getCommandStorage(): Internal.CommandStorage;
        schedule(timer: number, event: ((arg0: Internal.ScheduledEvent) => void)): Internal.ScheduledEvent;
        schedule(timer: number, data: any, event: ((arg0: Internal.ScheduledEvent) => void)): Internal.ScheduledEvent;
        isHardcore(): boolean;
        getTickCount(): number;
        isDedicatedServer(): boolean;
        getSpawnProtectionRadius(): number;
        getWorldData(): Internal.IServerConfiguration;
        acceptsFailure(): boolean;
        saveAllChunks(bl: boolean, bl2: boolean, bl3: boolean): boolean;
        readonly playerMap : Internal.Map<Internal.UUID, Internal.ServerPlayerDataJS>;
        readonly serverScriptManager : Internal.ServerScriptManager;
        static instance : Internal.ServerJS;
        readonly worlds : Internal.List<Internal.ServerWorldJS>;
        readonly persistentData : Internal.CompoundNBT;
        readonly fakePlayerMap : Internal.Map<Internal.UUID, Internal.FakeServerPlayerDataJS>;
        readonly scheduledEvents : Internal.List<Internal.ScheduledEvent>;
        readonly levelMap : Internal.Map<string, Internal.ServerWorldJS>;
        readonly scheduledTickEvents : Internal.List<Internal.ScheduledEvent>;
        get serverVersion(): string;
        get commandStorage(): Internal.CommandStorage;
        get resourcePackHash(): string;
        get customBossEvents(): Internal.CustomServerBossInfoManager;
        get data(): Internal.AttachedData;
        get functions(): Internal.FunctionManager;
        get playerCount(): number;
        get profileCache(): Internal.PlayerProfileCache;
        get pvpAllowed(): boolean;
        get defaultGameType(): Internal.GameType;
        get tickCount(): number;
        get frameTimer(): Internal.FrameTimer;
        get profileRepository(): Internal.GameProfileRepository;
        get connection(): Internal.NetworkSystem;
        get scoreboard(): Internal.ServerScoreboard;
        get minecraftServer(): Internal.MinecraftServer;
        get commands(): Internal.Commands;
        get dedicated(): boolean;
        get motd(): string;
        get moddedStatus(): Internal.Optional<any>;
        get maxPlayers(): number;
        get flightAllowed(): boolean;
        get functionCompilationLevel(): number;
        get players(): Internal.EntityArrayList;
        get serverDirectory(): Internal.File;
        get dedicatedServer(): boolean;
        get profiler(): Internal.IProfiler;
        get published(): boolean;
        get spawningAnimals(): boolean;
        get netherEnabled(): boolean;
        get rateLimitPacketsPerSecond(): number;
        get tags(): Internal.ITagCollectionSupplier;
        get snooper(): Internal.Snooper;
        get profiling(): boolean;
        get port(): number;
        get forceGameType(): boolean;
        get name(): Internal.Text;
        get worldData(): Internal.IServerConfiguration;
        get keyPair(): Internal.KeyPair;
        get shutdown(): boolean;
        get runningThread(): Internal.Thread;
        get status(): Internal.ServerStatusResponse;
        get displayName(): Internal.Text;
        get predicateManager(): Internal.LootPredicateManager;
        get singleplayerName(): string;
        get maxBuildHeight(): number;
        get demo(): boolean;
        get gameRules(): Internal.GameRules;
        get running(): boolean;
        get packRepository(): Internal.ResourcePackList;
        get serverModName(): string;
        get advancements(): Internal.AdvancementManager;
        get resourcePack(): string;
        get lootTables(): Internal.LootTableManager;
        get operatorUserPermissionLevel(): number;
        get nextTickTime(): number;
        get ready(): boolean;
        get localIp(): string;
        get absoluteMaxWorldSize(): number;
        get sessionService(): Internal.MinecraftSessionService;
        get playerNames(): string[];
        get epollEnabled(): boolean;
        get singlePlayer(): boolean;
        get fixerUpper(): Internal.DataFixer;
        get preventProxyConnections(): boolean;
        get stopped(): boolean;
        get enforceWhitelist(): boolean;
        get hardcore(): boolean;
        get playerIdleTimeout(): number;
        get averageTickTime(): number;
        get singleplayer(): boolean;
        get commandBlockEnabled(): boolean;
        get allLevels(): Internal.Iterable<any>;
        get compressionThreshold(): number;
        get worldScreenshotFile(): Internal.File;
        get structureManager(): Internal.TemplateManager;
        get entities(): Internal.EntityArrayList;
        get playerList(): Internal.PlayerList;
        get recipeManager(): Internal.RecipeManager;
        get spawnProtectionRadius(): number;
        set preventProxyConnections(bl: boolean);
        set motd(string: string);
        set enforceWhitelist(bl: boolean);
        set flightAllowed(bl: boolean);
        set playerIdleTimeout(i: number);
        set pvpAllowed(bl: boolean);
        set defaultGameType(gameType: Internal.GameType_);
        set singleplayerName(string: string);
        set maxBuildHeight(i: number);
        set demo(bl: boolean);
        set statusMessage(message: Internal.ITextComponent_);
        set port(i: number);
        set playerList(playerList: Internal.PlayerList);
        set forceGameType(bl: boolean);
        set localIp(string: string);
        set difficultyLocked(bl: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerJS_ = ServerJS;
    abstract class CharsetDecoder extends Document.Object {
        averageCharsPerByte(): number;
        charset(): Internal.Charset;
        maxCharsPerByte(): number;
        onUnmappableCharacter(arg0: Internal.CodingErrorAction): Internal.CharsetDecoder;
        isCharsetDetected(): boolean;
        decode(arg0: Internal.ByteBuffer): Internal.CharBuffer;
        decode(arg0: Internal.ByteBuffer, arg1: Internal.CharBuffer, arg2: boolean): Internal.CoderResult;
        isAutoDetecting(): boolean;
        unmappableCharacterAction(): Internal.CodingErrorAction;
        detectedCharset(): Internal.Charset;
        malformedInputAction(): Internal.CodingErrorAction;
        flush(arg0: Internal.CharBuffer): Internal.CoderResult;
        onMalformedInput(arg0: Internal.CodingErrorAction): Internal.CharsetDecoder;
        reset(): Internal.CharsetDecoder;
        replacement(): string;
        replaceWith(arg0: string): Internal.CharsetDecoder;
        get autoDetecting(): boolean;
        get charsetDetected(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CharsetDecoder_ = CharsetDecoder;
    interface IPackNameDecorator {
        decorate(arg0: Internal.ITextComponent_): Internal.ITextComponent;
    }
    type IPackNameDecorator_ = IPackNameDecorator;
    class Locale$FilteringMode extends Internal.Enum<Internal.Locale$FilteringMode> {
        static valueOf(arg0: string): Internal.Locale$FilteringMode;
        static values(): Internal.Locale$FilteringMode[];
        static readonly IGNORE_EXTENDED_RANGES : Internal.Locale$FilteringMode;
        static readonly MAP_EXTENDED_RANGES : Internal.Locale$FilteringMode;
        static readonly AUTOSELECT_FILTERING : Internal.Locale$FilteringMode;
        static readonly REJECT_EXTENDED_RANGES : Internal.Locale$FilteringMode;
        static readonly EXTENDED_FILTERING : Internal.Locale$FilteringMode;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Locale$FilteringMode_ = "autoselect_filtering" | "extended_filtering" | "ignore_extended_ranges" | "map_extended_ranges" | "reject_extended_ranges" | Locale$FilteringMode;
    abstract class ProjectileEntity extends Internal.Entity {
        func_70186_c(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_234616_v_(): Internal.Entity;
        func_234615_h_(): boolean;
        func_212361_a(arg0: Internal.Entity): void;
        func_70016_h(arg0: number, arg1: number, arg2: number): void;
        func_70071_h_(): void;
        func_234612_a_(arg0: Internal.Entity, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        field_234611_d_ : boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ProjectileEntity_ = ProjectileEntity;
    class ParticleEffectAmbience extends Document.Object {
        func_235047_a_(arg0: Internal.Random): boolean;
        func_235044_a_(): Internal.IParticleData;
        static readonly field_235041_a_ : Internal.Codec<Internal.ParticleEffectAmbience>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ParticleEffectAmbience_ = ParticleEffectAmbience;
    class BossInfo$Overlay extends Internal.Enum<Internal.BossInfo$Overlay> {
        static valueOf(arg0: string): Internal.BossInfo$Overlay;
        static values(): Internal.BossInfo$Overlay[];
        static func_201485_a(arg0: string): Internal.BossInfo$Overlay;
        func_201486_a(): string;
        static readonly NOTCHED_6 : Internal.BossInfo$Overlay;
        static readonly NOTCHED_12 : Internal.BossInfo$Overlay;
        static readonly PROGRESS : Internal.BossInfo$Overlay;
        static readonly NOTCHED_20 : Internal.BossInfo$Overlay;
        static readonly NOTCHED_10 : Internal.BossInfo$Overlay;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BossInfo$Overlay_ = "progress" | "notched_6" | "notched_10" | "notched_12" | "notched_20" | BossInfo$Overlay;
    interface OrderedEventExecutor extends Internal.EventExecutor {
    }
    type OrderedEventExecutor_ = OrderedEventExecutor;
    class Template$Palette extends Document.Object {
        func_237157_a_(): Internal.List<Internal.Template$BlockInfo>;
        func_237158_a_(arg0: Internal.Block): Internal.List<Internal.Template$BlockInfo>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Template$Palette_ = Template$Palette;
    class WailaRenderEvent$Color extends net.minecraftforge.eventbus.api.Event {
        setGradientStart(arg0: number): void;
        getListenerList(): Internal.ListenerList;
        getGradientStart(): number;
        getGradientEnd(): number;
        setGradientEnd(arg0: number): void;
        isReset(): boolean;
        setReset(arg0: boolean): void;
        getBackground(): number;
        setBackground(arg0: number): void;
        getAlpha(): number;
        get listenerList(): Internal.ListenerList;
        get background(): number;
        get alpha(): number;
        get gradientStart(): number;
        get reset(): boolean;
        get gradientEnd(): number;
        set background(arg0: number);
        set gradientStart(arg0: number);
        set reset(arg0: boolean);
        set gradientEnd(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WailaRenderEvent$Color_ = WailaRenderEvent$Color;
    class AttributedCharacterIterator$Attribute extends Document.Object implements Internal.Serializable {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        static readonly LANGUAGE : Internal.AttributedCharacterIterator$Attribute;
        static readonly INPUT_METHOD_SEGMENT : Internal.AttributedCharacterIterator$Attribute;
        static readonly READING : Internal.AttributedCharacterIterator$Attribute;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttributedCharacterIterator$Attribute_ = AttributedCharacterIterator$Attribute;
    interface IForgeBlockState {
        rotate(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.Rotation_): Internal.BlockState;
        getStateAtViewpoint(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Vec3): Internal.BlockState;
        getBedDirection(arg0: Internal.IWorldReader, arg1: BlockPos): Internal.Direction;
        onBlockExploded(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Explosion): void;
        getHarvestLevel(): number;
        isBed(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.LivingEntity): boolean;
        canHarvestBlock(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        getBedSpawnPosition(arg0: Internal.EntityType<any>, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: number, arg4: Internal.LivingEntity): Internal.Optional<Vec3>;
        isLadder(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.LivingEntity): boolean;
        shouldDisplayFluidOverlay(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.FluidState): boolean;
        onNeighborChange(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos): void;
        canStickTo(arg0: Internal.BlockState): boolean;
        getPickBlock(arg0: Internal.RayTraceResult, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.PlayerEntity): Internal.ItemStack;
        getWeakChanges(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        canEntityDestroy(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Entity): boolean;
        isBurning(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        getHarvestTool(): Internal.ToolType;
        isPortalFrame(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        hasTileEntity(): boolean;
        getExplosionResistance(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Explosion): number;
        canSustainPlant(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_, arg3: Internal.IPlantable): boolean;
        isScaffolding(arg0: Internal.LivingEntity): boolean;
        observedNeighborChange(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Block, arg3: BlockPos): void;
        canDropFromExplosion(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Explosion): boolean;
        removedByPlayer(arg0: Internal.World, arg1: BlockPos, arg2: Internal.PlayerEntity, arg3: boolean, arg4: Internal.FluidState): boolean;
        isStickyBlock(): boolean;
        createTileEntity(arg0: Internal.IBlockReader): Internal.TileEntity;
        isFertile(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        getAiPathNodeType(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.MobEntity): Internal.PathNodeType;
        getAiPathNodeType(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.PathNodeType;
        getFogColor(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Entity, arg3: Vec3, arg4: number): Vec3;
        isSlimeBlock(): boolean;
        getLightValue(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        getFireSpreadSpeed(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): number;
        isAir(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        getToolModifiedState(arg0: Internal.World, arg1: BlockPos, arg2: Internal.PlayerEntity, arg3: Internal.ItemStack, arg4: Internal.ToolType): Internal.BlockState;
        getBlockState(): Internal.BlockState;
        getBeaconColorMultiplier(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos): number[];
        getExpDrop(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: number, arg3: number): number;
        isConduitFrame(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos): boolean;
        canBeReplacedByLogs(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        shouldCheckWeakPower(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Entity): boolean;
        addLandingEffects(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.LivingEntity, arg4: number): boolean;
        canCreatureSpawn(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.EntitySpawnPlacementRegistry$PlacementType_, arg3: Internal.EntityType<any>): boolean;
        getSoundType(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Entity): Internal.SoundType;
        isToolEffective(arg0: Internal.ToolType): boolean;
        addRunningEffects(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Entity): boolean;
        canBeReplacedByLeaves(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        getSlipperiness(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Entity): number;
        isFlammable(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        addDestroyEffects(arg0: Internal.World, arg1: BlockPos, arg2: Internal.ParticleManager): boolean;
        getEnchantPowerBonus(arg0: Internal.IWorldReader, arg1: BlockPos): number;
        setBedOccupied(arg0: Internal.World, arg1: BlockPos, arg2: Internal.LivingEntity, arg3: boolean): void;
        isFireSource(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        getRespawnPosition(arg0: Internal.EntityType<any>, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: number, arg4: Internal.LivingEntity): Internal.Optional<Vec3>;
        catchFire(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Direction_, arg3: Internal.LivingEntity): void;
        canConnectRedstone(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        addHitEffects(arg0: Internal.World, arg1: Internal.RayTraceResult, arg2: Internal.ParticleManager): boolean;
        getFlammability(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): number;
    }
    type IForgeBlockState_ = IForgeBlockState;
    abstract class FoliagePlacer extends Document.Object {
        func_230374_a_(arg0: Internal.Random, arg1: number, arg2: Internal.BaseTreeFeatureConfig): number;
        func_230376_a_(arg0: Internal.Random, arg1: number): number;
        func_236752_a_(arg0: Internal.IWorldGenerationReader, arg1: Internal.Random, arg2: Internal.BaseTreeFeatureConfig, arg3: number, arg4: Internal.FoliagePlacer$Foliage, arg5: number, arg6: number, arg7: Internal.Set<BlockPos>, arg8: Internal.MutableBoundingBox): void;
        static readonly field_236749_d_ : Internal.Codec<Internal.FoliagePlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FoliagePlacer_ = FoliagePlacer;
    abstract class AbstractIntSet extends Internal.AbstractIntCollection implements Internal.Cloneable, Internal.IntSet {
        iterator(): Internal.IntIterator;
        iterator(): Internal.Iterator<any>;
        hashCode(): number;
        equals(arg0: any): boolean;
        rem(arg0: number): boolean;
        remove(arg0: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractIntSet_ = AbstractIntSet;
    class ItemPickupEventJS extends Internal.PlayerEventJS {
        getItem(): Internal.ItemStackJS;
        getEntity(): Internal.EntityJS;
        getItemEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get item(): Internal.ItemStackJS;
        get itemEntity(): Internal.EntityJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemPickupEventJS_ = ItemPickupEventJS;
    class CUseEntityPacket$Action extends Internal.Enum<Internal.CUseEntityPacket$Action> {
        static valueOf(arg0: string): Internal.CUseEntityPacket$Action;
        static values(): Internal.CUseEntityPacket$Action[];
        static readonly INTERACT_AT : Internal.CUseEntityPacket$Action;
        static readonly INTERACT : Internal.CUseEntityPacket$Action;
        static readonly ATTACK : Internal.CUseEntityPacket$Action;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CUseEntityPacket$Action_ = "interact" | "attack" | "interact_at" | CUseEntityPacket$Action;
    class LanguageManager extends Document.Object implements Internal.IResourceManagerReloadListener {
        func_135045_a(arg0: Internal.Language): void;
        func_135041_c(): Internal.Language;
        func_135040_d(): Internal.SortedSet<Internal.Language>;
        func_195410_a(arg0: Internal.IResourceManager): void;
        getResourceType(): Internal.IResourceType;
        func_191960_a(arg0: string): Internal.Language;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LanguageManager_ = LanguageManager;
    class ItemRequirement$StackRequirement extends Document.Object {
        readonly item : Internal.ItemStack;
        readonly usage : Internal.ItemRequirement$ItemUseType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemRequirement$StackRequirement_ = ItemRequirement$StackRequirement;
    class ShulkerBoxTileEntity extends Internal.LockableLootTileEntity implements Internal.ISidedInventory, Internal.ITickableTileEntity {
        func_235676_l_(): boolean;
        func_190584_a(arg0: Internal.BlockState): Internal.AxisAlignedBB;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_190585_a(arg0: number): number;
        func_190580_f(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_73660_a(): void;
        func_190587_b(arg0: Internal.Direction_): Internal.AxisAlignedBB;
        func_190586_e(arg0: Internal.CompoundNBT): void;
        func_180463_a(arg0: Internal.Direction_): number[];
        func_180461_b(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        func_180462_a(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        func_70302_i_(): number;
        func_190591_p(): Internal.ShulkerBoxTileEntity$AnimationStatus;
        func_145842_c(arg0: number, arg1: number): boolean;
        func_190592_s(): Internal.DyeColor;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShulkerBoxTileEntity_ = ShulkerBoxTileEntity;
    class BeaconTileEntity$BeamSegment extends Document.Object {
        func_177264_c(): number;
        func_177263_b(): number[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BeaconTileEntity$BeamSegment_ = BeaconTileEntity$BeamSegment;
    class SWindowPropertyPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_149181_d(): number;
        func_149182_c(): number;
        func_149180_e(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SWindowPropertyPacket_ = SWindowPropertyPacket;
    class GuiScreenEvent$KeyboardCharTypedEvent$Pre extends Internal.GuiScreenEvent$KeyboardCharTypedEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$KeyboardCharTypedEvent$Pre_ = GuiScreenEvent$KeyboardCharTypedEvent$Pre;
    class BlockModelRenderer extends Document.Object {
        func_228806_c_(arg0: Internal.IBlockDisplayReader, arg1: Internal.IBakedModel, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.MatrixStack, arg5: Internal.IVertexBuilder, arg6: boolean, arg7: Internal.Random, arg8: number, arg9: number): boolean;
        renderModelSmooth(arg0: Internal.IBlockDisplayReader, arg1: Internal.IBakedModel, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.MatrixStack, arg5: Internal.IVertexBuilder, arg6: boolean, arg7: Internal.Random, arg8: number, arg9: number, arg10: Internal.IModelData): boolean;
        renderModelFlat(arg0: Internal.IBlockDisplayReader, arg1: Internal.IBakedModel, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.MatrixStack, arg5: Internal.IVertexBuilder, arg6: boolean, arg7: Internal.Random, arg8: number, arg9: number, arg10: Internal.IModelData): boolean;
        func_228805_b_(arg0: Internal.IBlockDisplayReader, arg1: Internal.IBakedModel, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.MatrixStack, arg5: Internal.IVertexBuilder, arg6: boolean, arg7: Internal.Random, arg8: number, arg9: number): boolean;
        func_228804_a_(arg0: Internal.MatrixStack$Entry, arg1: Internal.IVertexBuilder, arg2: Internal.BlockState, arg3: Internal.IBakedModel, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): void;
        func_228802_a_(arg0: Internal.IBlockDisplayReader, arg1: Internal.IBakedModel, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.MatrixStack, arg5: Internal.IVertexBuilder, arg6: boolean, arg7: Internal.Random, arg8: number, arg9: number): boolean;
        static func_210266_a(): void;
        static func_211847_a(): void;
        renderModel(entry: Internal.MatrixStack$Entry, vertexConsumer: Internal.IVertexBuilder, blockState: Internal.BlockState, bakedModel: Internal.IBakedModel, red: number, green: number, blue: number, light: number, overlay: number, modelData: Internal.IModelData): void;
        renderModel(arg0: Internal.IBlockDisplayReader, arg1: Internal.IBakedModel, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.MatrixStack, arg5: Internal.IVertexBuilder, arg6: boolean, arg7: Internal.Random, arg8: number, arg9: number, arg10: Internal.IModelData): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockModelRenderer_ = BlockModelRenderer;
    interface ThreadFactory {
        newThread(arg0: (() => void)): Internal.Thread;
    }
    type ThreadFactory_ = ThreadFactory;
    interface ItemColorsExtended {
        getColorProvider(arg0: Internal.ItemStack): Internal.IItemColor;
    }
    type ItemColorsExtended_ = ItemColorsExtended;
    abstract class URLStreamHandler extends Document.Object {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type URLStreamHandler_ = URLStreamHandler;
    interface ICraftingCategoryExtension extends Internal.IRecipeCategoryExtension {
        getSize(): Internal.Size2i;
        getRegistryName(): ResourceLocation;
    }
    type ICraftingCategoryExtension_ = ICraftingCategoryExtension;
    class LootPoolEntryType extends Internal.LootType<Internal.LootEntry> {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootPoolEntryType_ = LootPoolEntryType;
    interface LongSupplier {
        getAsLong(): number;
    }
    type LongSupplier_ = (() => number) | LongSupplier;
    class Tuple3d extends Document.Object {
        field_181059_a : number;
        field_181060_b : number;
        field_181061_c : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Tuple3d_ = Tuple3d;
    interface IObjectIntIterable <T> extends Internal.Iterable<T> {
        func_148757_b(arg0: T): number;
        func_148745_a(arg0: number): T;
    }
    type IObjectIntIterable_<T> = IObjectIntIterable<T>;
    class Mirror extends Internal.Enum<Internal.Mirror> {
        func_185802_a(arg0: number, arg1: number): number;
        func_185803_b(arg0: Internal.Direction_): Internal.Direction;
        static valueOf(arg0: string): Internal.Mirror;
        func_235512_a_(): Internal.Orientation;
        static values(): Internal.Mirror[];
        func_185800_a(arg0: Internal.Direction_): Internal.Rotation;
        static readonly FRONT_BACK : Internal.Mirror;
        static readonly LEFT_RIGHT : Internal.Mirror;
        static readonly NONE : Internal.Mirror;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Mirror_ = "none" | "left_right" | "front_back" | Mirror;
    class StackTraceElement extends Document.Object implements Internal.Serializable {
        getLineNumber(): number;
        getMethodName(): string;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        getClassLoaderName(): string;
        getClassName(): string;
        getModuleName(): string;
        getFileName(): string;
        isNativeMethod(): boolean;
        getModuleVersion(): string;
        get fileName(): string;
        get moduleVersion(): string;
        get moduleName(): string;
        get nativeMethod(): boolean;
        get methodName(): string;
        get className(): string;
        get lineNumber(): number;
        get classLoaderName(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StackTraceElement_ = StackTraceElement;
    class AlwaysTrueRuleTest extends Internal.RuleTest {
        func_215181_a(arg0: Internal.BlockState, arg1: Internal.Random): boolean;
        static readonly field_237043_a_ : Internal.Codec<Internal.AlwaysTrueRuleTest>;
        static readonly field_215190_a : Internal.AlwaysTrueRuleTest;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AlwaysTrueRuleTest_ = AlwaysTrueRuleTest;
    interface MethodHandleDesc extends Internal.ConstantDesc {
        invocationType(): Internal.MethodTypeDesc;
        equals(arg0: any): boolean;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): any;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): Internal.MethodHandle;
        asType(arg0: Internal.MethodTypeDesc): Internal.MethodHandleDesc;
    }
    type MethodHandleDesc_ = MethodHandleDesc;
    class EventObject extends Document.Object implements Internal.Serializable {
        getSource(): any;
        toString(): string;
        get source(): any;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EventObject_ = EventObject;
    interface MemoryLayout {
        sliceHandle(arg0: any[]): Internal.MethodHandle;
        select(arg0: any[]): Internal.MemoryLayout;
        byteOffsetHandle(arg0: any[]): Internal.MethodHandle;
        byteSize(): number;
        varHandle(arg0: any[]): Internal.VarHandle;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        byteOffset(arg0: any[]): number;
        hashCode(): number;
        byteAlignment(): number;
        equals(arg0: any): boolean;
        name(): Internal.Optional<string>;
        toString(): string;
        withName(arg0: string): Internal.MemoryLayout;
        withoutName(): Internal.MemoryLayout;
    }
    type MemoryLayout_ = MemoryLayout;
    class GuiOpenEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        setGui(arg0: Internal.Screen): void;
        isCancelable(): boolean;
        getGui(): Internal.Screen;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get gui(): Internal.Screen;
        set gui(arg0: Internal.Screen);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiOpenEvent_ = GuiOpenEvent;
    class VillagerTradesEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getType(): Internal.VillagerProfession;
        getTrades(): Internal.Int2ObjectMap<Internal.List<Internal.VillagerTrades$ITrade>>;
        get listenerList(): Internal.ListenerList;
        get trades(): Internal.Int2ObjectMap<Internal.List<Internal.VillagerTrades$ITrade>>;
        get type(): Internal.VillagerProfession;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VillagerTradesEvent_ = VillagerTradesEvent;
    interface ILootSerializer <T> {
        func_230424_a_(arg0: Internal.JsonObject, arg1: T, arg2: Internal.JsonSerializationContext): void;
        func_230423_a_(arg0: Internal.JsonObject, arg1: Internal.JsonDeserializationContext): T;
    }
    type ILootSerializer_<T> = ILootSerializer<T>;
    class LiteralCommandNode <S> extends Internal.CommandNode<S> {
        getName(): string;
        listSuggestions(arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        createBuilder(): Internal.LiteralArgumentBuilder<S>;
        createBuilder(): Internal.ArgumentBuilder<any, any>;
        getLiteral(): string;
        isValidInput(arg0: string): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        getExamples(): Internal.Collection<string>;
        getUsageText(): string;
        toString(): string;
        parse(arg0: Internal.StringReader, arg1: Internal.CommandContextBuilder<S>): void;
        get examples(): Internal.Collection<string>;
        get name(): string;
        get usageText(): string;
        get literal(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LiteralCommandNode_<S> = LiteralCommandNode<S>;
    class MapDecoration$Type extends Internal.Enum<Internal.MapDecoration$Type> {
        static func_191159_a(arg0: number): Internal.MapDecoration$Type;
        static valueOf(arg0: string): Internal.MapDecoration$Type;
        static values(): Internal.MapDecoration$Type[];
        func_191161_d(): number;
        func_191162_c(): boolean;
        func_191160_b(): boolean;
        func_191163_a(): number;
        static readonly BLUE_MARKER : Internal.MapDecoration$Type;
        static readonly TARGET_POINT : Internal.MapDecoration$Type;
        static readonly BANNER_ORANGE : Internal.MapDecoration$Type;
        static readonly BANNER_PINK : Internal.MapDecoration$Type;
        static readonly BANNER_MAGENTA : Internal.MapDecoration$Type;
        static readonly FRAME : Internal.MapDecoration$Type;
        static readonly RED_MARKER : Internal.MapDecoration$Type;
        static readonly PLAYER_OFF_LIMITS : Internal.MapDecoration$Type;
        static readonly BANNER_RED : Internal.MapDecoration$Type;
        static readonly BANNER_LIME : Internal.MapDecoration$Type;
        static readonly BANNER_GREEN : Internal.MapDecoration$Type;
        static readonly TARGET_X : Internal.MapDecoration$Type;
        static readonly BANNER_YELLOW : Internal.MapDecoration$Type;
        static readonly BANNER_PURPLE : Internal.MapDecoration$Type;
        static readonly BANNER_WHITE : Internal.MapDecoration$Type;
        static readonly BANNER_BLACK : Internal.MapDecoration$Type;
        static readonly RED_X : Internal.MapDecoration$Type;
        static readonly BANNER_BLUE : Internal.MapDecoration$Type;
        static readonly BANNER_LIGHT_GRAY : Internal.MapDecoration$Type;
        static readonly BANNER_BROWN : Internal.MapDecoration$Type;
        static readonly PLAYER : Internal.MapDecoration$Type;
        static readonly PLAYER_OFF_MAP : Internal.MapDecoration$Type;
        static readonly BANNER_CYAN : Internal.MapDecoration$Type;
        static readonly MANSION : Internal.MapDecoration$Type;
        static readonly MONUMENT : Internal.MapDecoration$Type;
        static readonly BANNER_LIGHT_BLUE : Internal.MapDecoration$Type;
        static readonly BANNER_GRAY : Internal.MapDecoration$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MapDecoration$Type_ = "player" | "frame" | "red_marker" | "blue_marker" | "target_x" | "target_point" | "player_off_map" | "player_off_limits" | "mansion" | "monument" | "banner_white" | "banner_orange" | "banner_magenta" | "banner_light_blue" | "banner_yellow" | "banner_lime" | "banner_pink" | "banner_gray" | "banner_light_gray" | "banner_cyan" | "banner_purple" | "banner_blue" | "banner_brown" | "banner_green" | "banner_red" | "banner_black" | "red_x" | MapDecoration$Type;
    class CAnimateHandPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_187018_a(): Hand;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CAnimateHandPacket_ = CAnimateHandPacket;
    class ClientTickEventJS extends Internal.ClientEventJS {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientTickEventJS_ = ClientTickEventJS;
    interface BiConsumer <T, U> {
        andThen(arg0: ((arg0: T, arg1: U) => void)): Internal.BiConsumer<T, U>;
        accept(arg0: T, arg1: U): void;
    }
    type BiConsumer_<T, U> = ((arg0: T, arg1: U) => void) | BiConsumer<T, U>;
    class Difficulty extends Internal.Enum<Internal.Difficulty> {
        func_233536_d_(): Internal.Difficulty;
        func_151525_a(): number;
        func_151526_b(): string;
        static valueOf(arg0: string): Internal.Difficulty;
        static values(): Internal.Difficulty[];
        static func_219963_a(arg0: string): Internal.Difficulty;
        func_199285_b(): Internal.ITextComponent;
        static func_151523_a(arg0: number): Internal.Difficulty;
        static readonly EASY : Internal.Difficulty;
        static readonly PEACEFUL : Internal.Difficulty;
        static readonly HARD : Internal.Difficulty;
        static readonly NORMAL : Internal.Difficulty;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Difficulty_ = "peaceful" | "easy" | "normal" | "hard" | Difficulty;
    class MapData extends Internal.WorldSavedData {
        static func_191094_a(arg0: Internal.ItemStack, arg1: BlockPos, arg2: string, arg3: Internal.MapDecoration$Type_): void;
        func_176053_a(arg0: number, arg1: number): void;
        func_82568_a(arg0: Internal.PlayerEntity): Internal.MapData$MapInfo;
        func_212441_a(arg0: BlockPos, arg1: number): void;
        func_176052_a(arg0: Internal.ItemStack, arg1: Internal.IBlockReader, arg2: Internal.PlayerEntity): Internal.IPacket<any>;
        func_176054_a(arg0: number, arg1: number, arg2: number): void;
        func_237241_a_(arg0: number, arg1: number, arg2: number, arg3: boolean, arg4: boolean, arg5: Internal.RegistryKey<Internal.World>): void;
        func_189551_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_204268_a(arg0: Internal.IBlockReader, arg1: number, arg2: number): void;
        func_215160_a(arg0: Internal.MapData): void;
        func_204269_a(arg0: Internal.IWorld, arg1: BlockPos): void;
        func_76191_a(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack): void;
        func_76184_a(arg0: Internal.CompoundNBT): void;
        field_76200_c : Internal.RegistryKey<Internal.World>;
        field_76201_a : number;
        field_186210_e : boolean;
        field_76199_b : number;
        field_191096_f : boolean;
        field_76197_d : number;
        readonly field_76203_h : Internal.Map<string, Internal.MapDecoration>;
        field_76198_e : number[];
        readonly field_76196_g : Internal.List<Internal.MapData$MapInfo>;
        field_215161_h : boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MapData_ = MapData;
    class EventJS extends Document.Object {
        cancel(): void;
        isCancelled(): boolean;
        post(t: Internal.ScriptType_, id: string): boolean;
        post(t: Internal.ScriptType_, id: string, sub: string): boolean;
        canCancel(): boolean;
        get cancelled(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EventJS_ = EventJS;
    class PathfindingDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: number, arg4: number): void;
        func_188289_a(arg0: number, arg1: Internal.Path, arg2: number): void;
        static func_229032_a_(arg0: Internal.Path, arg1: number, arg2: boolean, arg3: boolean, arg4: number, arg5: number, arg6: number): void;
        static func_229031_a_(arg0: Internal.Path, arg1: number, arg2: number, arg3: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PathfindingDebugRenderer_ = PathfindingDebugRenderer;
    class BlockWithContextConfig extends Document.Object implements Internal.IFeatureConfig {
        static readonly field_236636_a_ : Internal.Codec<Internal.BlockWithContextConfig>;
        readonly field_206924_a : Internal.BlockState;
        readonly field_206925_b : Internal.List<Internal.BlockState>;
        readonly field_206926_c : Internal.List<Internal.BlockState>;
        readonly field_206927_d : Internal.List<Internal.BlockState>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockWithContextConfig_ = BlockWithContextConfig;
    interface IShearable {
        func_230262_K__(): boolean;
        func_230263_a_(arg0: Internal.SoundCategory_): void;
    }
    type IShearable_ = IShearable;
    class GiantEntity extends Internal.MonsterEntity {
        static func_234291_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GiantEntity_ = GiantEntity;
    class ProtectionDomain extends Document.Object {
        getPermissions(): Internal.PermissionCollection;
        getClassLoader(): Internal.ClassLoader;
        toString(): string;
        getPrincipals(): Internal.Principal[];
        implies(arg0: Internal.Permission): boolean;
        staticPermissionsOnly(): boolean;
        getCodeSource(): Internal.CodeSource;
        get classLoader(): Internal.ClassLoader;
        get permissions(): Internal.PermissionCollection;
        get principals(): Internal.Principal[];
        get codeSource(): Internal.CodeSource;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ProtectionDomain_ = ProtectionDomain;
    interface Int2IntFunction extends it.unimi.dsi.fastutil.Function<number, number>, Internal.IntUnaryOperator {
        defaultReturnValue(): number;
        defaultReturnValue(arg0: number): void;
        applyAsInt(arg0: number): number;
        containsKey(arg0: any): boolean;
        containsKey(arg0: number): boolean;
        get(arg0: any): any;
        get(arg0: any): number;
        get(arg0: number): number;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: number): number;
        put(arg0: number, arg1: number): number;
        remove(arg0: number): number;
        remove(arg0: any): number;
        remove(arg0: any): any;
    }
    type Int2IntFunction_ = ((arg0: number) => number) | Int2IntFunction;
    interface AttributeMap {
        hasAttr<T>(arg0: Internal.AttributeKey<T>): boolean;
        attr<T>(arg0: Internal.AttributeKey<T>): io.netty.util.Attribute<T>;
    }
    type AttributeMap_ = AttributeMap;
    class AdvancementList extends Document.Object {
        func_192087_a(): void;
        func_195651_c(): Internal.Collection<Internal.Advancement>;
        func_192086_a(arg0: Internal.AdvancementList$IListener): void;
        func_192085_a(arg0: Internal.Set<ResourceLocation>): void;
        func_192088_b(): Internal.Iterable<Internal.Advancement>;
        func_192084_a(arg0: ResourceLocation_): Internal.Advancement;
        func_192083_a(arg0: Internal.Map_<ResourceLocation_, Internal.Advancement$Builder_>): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AdvancementList_ = AdvancementList;
    class DynamicTexture extends Internal.Texture {
        func_195413_a(arg0: Internal.IResourceManager): void;
        func_195414_e(): Internal.NativeImage;
        close(): void;
        func_110564_a(): void;
        func_195415_a(arg0: Internal.NativeImage): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DynamicTexture_ = DynamicTexture;
    class Context extends Document.Object {
        isSealed(): boolean;
        static throwAsScriptRuntimeEx(e: Internal.Throwable): Internal.RuntimeException;
        isGeneratingDebugChanged(): boolean;
        callFunctionWithContinuations(function_: Internal.Callable, scope: Internal.Scriptable, args: any[]): any;
        createClassLoader(parent: Internal.ClassLoader): Internal.GeneratedClassLoader;
        getClassShutterSetter(): Internal.Context$ClassShutterSetter;
        executeScriptWithContinuations(script: Internal.Script, scope: Internal.Scriptable): any;
        static getDebuggableView(script: Internal.Script): Internal.DebuggableScript;
        getApplicationClassLoader(): Internal.ClassLoader;
        evaluateReader(scope: Internal.Scriptable, in_: Internal.Reader, sourceName: string, lineno: number, securityDomain: any): any;
        getTypeWrappers(): Internal.TypeWrappers;
        static toBoolean(value: any): boolean;
        static javaToJS(value: any, scope: Internal.Scriptable): any;
        compileReader(in_: Internal.Reader, sourceName: string, lineno: number, securityDomain: any): Internal.Script;
        getDebugger(): Internal.Debugger;
        removeActivationName(name: string): void;
        setDebugger(debugger_: Internal.Debugger, contextData: any): void;
        static enter(): Internal.Context;
        captureContinuation(): Internal.ContinuationPending;
        resumeContinuation(continuation: any, scope: Internal.Scriptable, functionResult: any): any;
        static reportRuntimeError0(messageId: string): Internal.EvaluatorException;
        static reportRuntimeError1(messageId: string, arg1: any): Internal.EvaluatorException;
        isActivationNeeded(name: string): boolean;
        static reportRuntimeError2(messageId: string, arg1: any, arg2: any): Internal.EvaluatorException;
        setGeneratingSource(generatingSource: boolean): void;
        static reportRuntimeError3(messageId: string, arg1: any, arg2: any, arg3: any): Internal.EvaluatorException;
        hasTypeWrappers(): boolean;
        static reportRuntimeError(message: string, sourceName: string, lineno: number, lineSource: string, lineOffset: number): Internal.EvaluatorException;
        static reportRuntimeError(message: string): Internal.EvaluatorException;
        getInstructionObserverThreshold(): number;
        getThreadLocal(key: any): any;
        removePropertyChangeListener(l: Internal.PropertyChangeListener): void;
        static getUndefinedValue(): any;
        putThreadLocal(key: any, value: any): void;
        setClassShutter(shutter: Internal.ClassShutter): void;
        static exit(): void;
        setGeneratingDebug(generatingDebug: boolean): void;
        getElements(object: Internal.Scriptable): any[];
        setInstructionObserverThreshold(threshold: number): void;
        static reportRuntimeError4(messageId: string, arg1: any, arg2: any, arg3: any, arg4: any): Internal.EvaluatorException;
        hasFeature(featureIndex: number): boolean;
        initSafeStandardObjects(scope: Internal.ScriptableObject, sealed: boolean): Internal.ScriptableObject;
        initSafeStandardObjects(scope: Internal.ScriptableObject): Internal.Scriptable;
        initSafeStandardObjects(): Internal.ScriptableObject;
        static toNumber(value: any): number;
        setLocale(loc: Internal.Locale): Internal.Locale;
        initStandardObjects(scope: Internal.ScriptableObject, sealed: boolean): Internal.ScriptableObject;
        initStandardObjects(): Internal.ScriptableObject;
        initStandardObjects(scope: Internal.ScriptableObject): Internal.Scriptable;
        isStrictMode(): boolean;
        setApplicationClassLoader(loader: Internal.ClassLoader): void;
        getWrapFactory(): Internal.WrapFactory;
        setGenerateObserverCount(generateObserverCount: boolean): void;
        seal(sealKey: any): void;
        setWrapFactory(wrapFactory: Internal.WrapFactory): void;
        evaluateString(scope: Internal.Scriptable, source: string, sourceName: string, lineno: number, securityDomain: any): any;
        setSecurityController(controller: Internal.SecurityController): void;
        compileFunction(scope: Internal.Scriptable, source: string, sourceName: string, lineno: number, securityDomain: any): dev.latvian.mods.rhino.Function;
        setErrorReporter(reporter: Internal.ErrorReporter): Internal.ErrorReporter;
        getClassShutter(): Internal.ClassShutter;
        newObject(scope: Internal.Scriptable, constructorName: string, args: any[]): Internal.Scriptable;
        newObject(scope: Internal.Scriptable, constructorName: string): Internal.Scriptable;
        newObject(scope: Internal.Scriptable): Internal.Scriptable;
        static jsToJava(value: any, desiredType: Internal.Class_<any>): any;
        static toObject(value: any, scope: Internal.Scriptable): Internal.Scriptable;
        static getSourcePositionFromStack(linep: number[]): string;
        addPropertyChangeListener(l: Internal.PropertyChangeListener): void;
        static reportWarning(message: string): void;
        static reportWarning(message: string, t: Internal.Throwable): void;
        static reportWarning(message: string, sourceName: string, lineno: number, lineSource: string, lineOffset: number): void;
        setLanguageVersion(version: number): void;
        stringIsCompilableUnit(source: string): boolean;
        removeThreadLocal(key: any): void;
        static getCurrentContext(): Internal.Context;
        newArray(scope: Internal.Scriptable, length: number): Internal.Scriptable;
        newArray(scope: Internal.Scriptable, elements: any[]): Internal.Scriptable;
        static reportError(message: string): void;
        static reportError(message: string, sourceName: string, lineno: number, lineSource: string, lineOffset: number): void;
        isGeneratingSource(): boolean;
        getFactory(): Internal.ContextFactory;
        getDebuggerContextData(): any;
        getErrorReporter(): Internal.ErrorReporter;
        isGeneratingDebug(): boolean;
        static call(factory: Internal.ContextFactory, callable: Internal.Callable, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        getMaximumInterpreterStackDepth(): number;
        addActivationName(name: string): void;
        setMaximumInterpreterStackDepth(max: number): void;
        compileString(source: string, sourceName: string, lineno: number, securityDomain: any): Internal.Script;
        static toString(value: any): string;
        unseal(sealKey: any): void;
        getLocale(): Internal.Locale;
        static getContext(): Internal.Context;
        static enterWithNewFactory(): Internal.Context;
        getImplementationVersion(): string;
        static readonly FEATURE_INTEGER_WITHOUT_DECIMAL_PLACE : 18;
        static readonly FEATURE_ENHANCED_JAVA_ACCESS : 13;
        static readonly FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER : 3;
        static readonly FEATURE_DYNAMIC_SCOPE : 7;
        static readonly FEATURE_LITTLE_ENDIAN : 19;
        static readonly FEATURE_THREAD_SAFE_OBJECTS : 17;
        generateObserverCount : boolean;
        static readonly FEATURE_STRICT_MODE : 11;
        static readonly FEATURE_WARNING_AS_ERROR : 12;
        static readonly FEATURE_STRICT_EVAL : 9;
        static readonly FEATURE_LOCATION_INFORMATION_IN_ERROR : 10;
        static readonly errorReporterProperty : "error reporter";
        static readonly FEATURE_V8_EXTENSIONS : 14;
        static readonly FEATURE_STRICT_VARS : 8;
        static readonly FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME : 2;
        static readonly FEATURE_PARENT_PROTO_PROPERTIES : 5;
        static readonly languageVersionProperty : "language version";
        static readonly emptyArgs : any[];
        get factory(): Internal.ContextFactory;
        get undefinedValue(): any;
        get implementationVersion(): string;
        get currentContext(): Internal.Context;
        get sealed(): boolean;
        get debugger(): Internal.Debugger;
        get strictMode(): boolean;
        get debuggerContextData(): any;
        get maximumInterpreterStackDepth(): number;
        get locale(): Internal.Locale;
        get typeWrappers(): Internal.TypeWrappers;
        get classShutterSetter(): Internal.Context$ClassShutterSetter;
        get generatingDebug(): boolean;
        get errorReporter(): Internal.ErrorReporter;
        get generatingDebugChanged(): boolean;
        get applicationClassLoader(): Internal.ClassLoader;
        get wrapFactory(): Internal.WrapFactory;
        get context(): Internal.Context;
        get instructionObserverThreshold(): number;
        get classShutter(): Internal.ClassShutter;
        get generatingSource(): boolean;
        set generatingDebug(generatingDebug: boolean);
        set errorReporter(reporter: Internal.ErrorReporter);
        set languageVersion(version: number);
        set applicationClassLoader(loader: Internal.ClassLoader);
        set wrapFactory(wrapFactory: Internal.WrapFactory);
        set maximumInterpreterStackDepth(max: number);
        set securityController(controller: Internal.SecurityController);
        set locale(loc: Internal.Locale);
        set instructionObserverThreshold(threshold: number);
        set classShutter(shutter: Internal.ClassShutter);
        set generatingSource(generatingSource: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Context_ = Context;
    class ChestLootEventJS extends Internal.LootEventJS {
        getType(): string;
        addChest(id: ResourceLocation_, b: ((arg0: Internal.LootBuilder) => void)): void;
        getDirectory(): string;
        get type(): string;
        get directory(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChestLootEventJS_ = ChestLootEventJS;
    interface BlockKJS {
        getBlockStatesKJS(): Internal.List<Internal.BlockState>;
        setSoundTypeKJS(arg0: Internal.SoundType): void;
        getBlockBuilderKJS(): Internal.BlockBuilder;
        setExplosionResistanceKJS(arg0: number): void;
        setSpeedFactorKJS(arg0: number): void;
        setJumpFactorKJS(arg0: number): void;
        setBlockBuilderKJS(arg0: Internal.BlockBuilder): void;
        setFrictionKJS(arg0: number): void;
        setIsRandomlyTickingKJS(arg0: boolean): void;
        setHasCollisionKJS(arg0: boolean): void;
        setMaterialKJS(arg0: Internal.Material): void;
    }
    type BlockKJS_ = BlockKJS;
    interface IRecipeLayoutDrawable extends Internal.IRecipeLayout {
        isMouseOver(arg0: number, arg1: number): boolean;
        drawOverlays(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        getIngredientUnderMouse(arg0: number, arg1: number): any;
        setPosition(arg0: number, arg1: number): void;
        drawRecipe(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
    }
    type IRecipeLayoutDrawable_ = IRecipeLayoutDrawable;
    class IronGolemEntity extends Internal.GolemEntity implements Internal.IAngerable {
        func_230256_F__(): number;
        func_70850_q(): boolean;
        func_70853_p(): number;
        func_70854_o(): number;
        static func_234200_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70103_a(arg0: number): void;
        func_230258_H__(): void;
        func_213358_a(arg0: Internal.EntityType<any>): boolean;
        func_230260_a__(arg0: number): void;
        func_70645_a(arg0: Internal.DamageSource): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_241205_ce_(): Vec3;
        func_70851_e(arg0: boolean): void;
        func_205019_a(arg0: Internal.IWorldReader): boolean;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_70636_d(): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_226512_l_(): Internal.IronGolemEntity$Cracks;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_230257_G__(): Internal.UUID;
        func_70849_f(arg0: boolean): void;
        func_230259_a_(arg0: Internal.UUID): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IronGolemEntity_ = IronGolemEntity;
    class AttributeKey <T> extends Internal.AbstractConstant<Internal.AttributeKey<T>> {
        static valueOf<T_>(arg0: string): Internal.AttributeKey<T_>;
        static valueOf<T_>(arg0: Internal.Class_<any>, arg1: string): Internal.AttributeKey<T_>;
        static exists(arg0: string): boolean;
        static newInstance<T_>(arg0: string): Internal.AttributeKey<T_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttributeKey_<T> = AttributeKey<T>;
    interface INPC {
    }
    type INPC_ = INPC;
    interface EventListener {
    }
    type EventListener_ = EventListener;
    class FMLServerAboutToStartEvent extends Internal.ServerLifecycleEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FMLServerAboutToStartEvent_ = FMLServerAboutToStartEvent;
    class StringReader extends Document.Object implements Internal.ImmutableStringReader {
        getCursor(): number;
        read(): string;
        getTotalLength(): number;
        readStringUntil(arg0: string): string;
        canRead(): boolean;
        canRead(arg0: number): boolean;
        static isAllowedInUnquotedString(arg0: string): boolean;
        getRemaining(): string;
        readString(): string;
        getRead(): string;
        skip(): void;
        getString(): string;
        peek(): string;
        peek(arg0: number): string;
        expect(arg0: string): void;
        getRemainingLength(): number;
        readLong(): number;
        readDouble(): number;
        readFloat(): number;
        readUnquotedString(): string;
        static isQuotedStringStart(arg0: string): boolean;
        readBoolean(): boolean;
        static isAllowedNumber(arg0: string): boolean;
        setCursor(arg0: number): void;
        readInt(): number;
        readQuotedString(): string;
        skipWhitespace(): void;
        get cursor(): number;
        get string(): string;
        get totalLength(): number;
        get remaining(): string;
        get remainingLength(): number;
        set cursor(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StringReader_ = StringReader;
    class BlockItem extends Internal.Item {
        func_195939_a(arg0: Internal.ItemUseContext): Internal.ActionResultType;
        func_179223_d(): Internal.Block;
        removeFromBlockToItemMap(arg0: Internal.Map_<Internal.Block_, Internal.Item_>, arg1: Internal.Item): void;
        func_195946_a(arg0: Internal.Map_<Internal.Block_, Internal.Item_>, arg1: Internal.Item): void;
        func_77658_a(): string;
        func_150895_a(arg0: Internal.ItemGroup, arg1: Internal.NonNullList<Internal.ItemStack>): void;
        func_195942_a(arg0: Internal.BlockItemUseContext): Internal.ActionResultType;
        func_219984_b(arg0: Internal.BlockItemUseContext): Internal.BlockItemUseContext;
        func_77624_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.List<Internal.ITextComponent>, arg3: Internal.ITooltipFlag): void;
        static func_179224_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: BlockPos, arg3: Internal.ItemStack): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockItem_ = BlockItem;
    interface InterruptibleChannel extends Internal.Channel {
        close(): void;
    }
    type InterruptibleChannel_ = InterruptibleChannel;
    class DifficultyChangeEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getOldDifficulty(): Internal.Difficulty;
        getDifficulty(): Internal.Difficulty;
        get difficulty(): Internal.Difficulty;
        get listenerList(): Internal.ListenerList;
        get oldDifficulty(): Internal.Difficulty;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DifficultyChangeEvent_ = DifficultyChangeEvent;
    class SoundEvent$SoundSourceEvent extends net.minecraftforge.client.event.sound.SoundEvent {
        getListenerList(): Internal.ListenerList;
        getName(): string;
        getSource(): Internal.SoundSource;
        getSound(): Internal.ISound;
        get listenerList(): Internal.ListenerList;
        get sound(): Internal.ISound;
        get name(): string;
        get source(): Internal.SoundSource;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SoundEvent$SoundSourceEvent_ = SoundEvent$SoundSourceEvent;
    interface IForgeStructure {
        getDefaultSpawnList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        getDefaultRestrictsSpawnsToInside(): boolean;
        getStructure(): Internal.Structure<any>;
        getSpawnList(arg0: Internal.EntityClassification_): Internal.List<Internal.MobSpawnInfo$Spawners>;
        getDefaultCreatureSpawnList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
    }
    type IForgeStructure_ = IForgeStructure;
    interface Function10 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.Function<T10, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function3<T8, T9, T10, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.BiFunction<T9, T10, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function5<T6, T7, T8, T9, T10, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function4<T7, T8, T9, T10, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function7<T4, T5, T6, T7, T8, T9, T10, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function6<T5, T6, T7, T8, T9, T10, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function8<T3, T4, T5, T6, T7, T8, T9, T10, R>>;
        curry(): Internal.Function<T1, Internal.Function9<T2, T3, T4, T5, T6, T7, T8, T9, T10, R>>;
    }
    type Function10_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R> = Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>;
    interface Promise <V> extends io.netty.util.concurrent.Future<V> {
        setSuccess(arg0: V): Internal.Promise<V>;
        setFailure(arg0: Internal.Throwable): Internal.Promise<V>;
        removeListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>[]): Internal.Promise<V>;
        trySuccess(arg0: V): boolean;
        syncUninterruptibly(): Internal.Promise<V>;
        await(): Internal.Promise<V>;
        awaitUninterruptibly(): Internal.Promise<V>;
        removeListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>): Internal.Promise<V>;
        tryFailure(arg0: Internal.Throwable): boolean;
        sync(): Internal.Promise<V>;
        addListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>[]): Internal.Promise<V>;
        addListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>): Internal.Promise<V>;
        setUncancellable(): boolean;
    }
    type Promise_<V> = Promise<V>;
    interface EntryMessage extends Internal.FlowMessage {
    }
    type EntryMessage_ = EntryMessage;
    class EntitySize extends Document.Object {
        static func_220314_b(arg0: number, arg1: number): Internal.EntitySize;
        static func_220311_c(arg0: number, arg1: number): Internal.EntitySize;
        func_220313_a(arg0: number): Internal.EntitySize;
        func_220312_a(arg0: number, arg1: number): Internal.EntitySize;
        toString(): string;
        func_242286_a(arg0: Vec3): Internal.AxisAlignedBB;
        func_242285_a(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        readonly field_220317_c : boolean;
        readonly field_220316_b : number;
        readonly field_220315_a : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntitySize_ = EntitySize;
    interface IIngredientRenderer <T> {
        getTooltip(arg0: T, arg1: Internal.ITooltipFlag): Internal.List<Internal.ITextComponent>;
        getFontRenderer(arg0: Internal.Minecraft, arg1: T): Internal.FontRenderer;
        render(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: T): void;
    }
    type IIngredientRenderer_<T> = IIngredientRenderer<T>;
    interface IEquipable {
        func_110257_ck(): boolean;
        func_230264_L__(): boolean;
        func_230266_a_(arg0: Internal.SoundCategory_): void;
    }
    type IEquipable_ = IEquipable;
    class ClientWorldJS extends Internal.WorldJS {
        getPlayerSocialManager(): Internal.FilterManager;
        shouldEntityAppearGlowing(entity: Internal.Entity): boolean;
        getPlayerData(player: Internal.PlayerEntity): Internal.ClientPlayerDataJS;
        getPlayerData(arg0: Internal.PlayerEntity): Internal.PlayerDataJS<any, any>;
        populateSnooper(snooper: Internal.Snooper): void;
        clearLevel(screen: Internal.Screen): void;
        clearLevel(): void;
        getTextureAtlas(resourceLocation: ResourceLocation_): Internal.Function;
        getResourcePackRepository(): Internal.ResourcePackList;
        setLevel(clientLevel: Internal.ClientWorld): void;
        getVersionType(): string;
        getGame(): Internal.MinecraftGame;
        isPaused(): boolean;
        getSkinManager(): Internal.SkinManager;
        getCurrentServer(): Internal.ServerData;
        getGpuWarnlistManager(): Internal.GPUWarning;
        destroy(): void;
        getMinecraft(): Internal.Minecraft;
        getLaunchedVersion(): string;
        getSingleplayerServer(): Internal.IntegratedServer;
        stop(): void;
        is64Bit(): boolean;
        renderOnThread(): boolean;
        updateTitle(): void;
        getProfiler(): Internal.IProfiler;
        getProxy(): Internal.Proxy;
        getSide(): Internal.ScriptType;
        isBlocked(uUID: Internal.UUID): boolean;
        getSituationalMusic(): Internal.BackgroundMusicSelector;
        getLevelSource(): Internal.SaveFormat;
        getFrameTimer(): Internal.FrameTimer;
        hasSingleplayerServer(): boolean;
        getMinecraftPlayer(): Internal.ClientPlayerEntity;
        getFixerUpper(): Internal.DataFixer;
        setScreen(screen: Internal.Screen): void;
        close(): void;
        pauseGame(bl: boolean): void;
        createLevel(string: string, levelSettings: Internal.WorldSettings, registryHolder: Internal.DynamicRegistries$Impl, worldGenSettings: Internal.DimensionGeneratorSettings): void;
        getMinecraftSessionService(): Internal.MinecraftSessionService;
        setConnectedToRealms(bl: boolean): void;
        getToasts(): Internal.ToastGui;
        updateMaxMipLevel(i: number): void;
        clearResourcePacksOnError(throwable: Internal.Throwable, component: Internal.ITextComponent_): void;
        toString(): string;
        getMusicManager(): Internal.MusicTicker;
        getProfileProperties(): Internal.PropertyMap;
        getLanguageManager(): Internal.LanguageManager;
        getItemRenderer(): Internal.ItemRenderer;
        isProbablyModded(): boolean;
        run(): void;
        setCameraEntity(entity: Internal.Entity): void;
        getResourceManager(): Internal.IResourceManager;
        getTutorial(): Internal.Tutorial;
        isDemo(): boolean;
        getMainRenderTarget(): Internal.Framebuffer;
        getMobEffectTextures(): Internal.PotionSpriteUploader;
        getPaintingTextures(): Internal.PaintingSpriteUploader;
        getTextureManager(): Internal.TextureManager;
        forceSetScreen(screen: Internal.Screen): void;
        isLocalServer(): boolean;
        getClientPackSource(): Internal.DownloadingPackFinder;
        tick(): void;
        delayCrash(crashReport: Internal.CrashReport): void;
        reloadResourcePacks(): Internal.CompletableFuture<any>;
        makeServerStem(registryHolder: Internal.DynamicRegistries$Impl, function_: ((arg0: any) => any), function4: Internal.Function4<any, any, any, any, any>, bl: boolean, levelStorageAccess: Internal.SaveFormat$LevelSave): Internal.Minecraft$PackManager;
        fillReport(crashReport: Internal.CrashReport): Internal.CrashReport;
        getSnooper(): Internal.Snooper;
        getEntities(): Internal.EntityArrayList;
        cursorEntered(): void;
        getBlockRenderer(): Internal.BlockRendererDispatcher;
        getDeltaFrameTime(): number;
        setWindowActive(bl: boolean): void;
        getSearchTree(key: Internal.SearchTreeManager$Key<any>): Internal.IMutableSearchTree<any>;
        setOverlay(overlay: Internal.LoadingGui): void;
        static setInstance(instance: Internal.ClientWorldJS): void;
        setCurrentServer(serverData: Internal.ServerData): void;
        getWindow(): Internal.MainWindow;
        renderBuffers(): Internal.RenderTypeBuffers;
        getUser(): Internal.Session;
        allowsChat(): boolean;
        getCameraEntity(): Internal.Entity;
        getModelManager(): Internal.ModelManager;
        getSoundManager(): Internal.SoundHandler;
        getFrameTime(): number;
        getConnection(): Internal.ClientPlayNetHandler;
        isRunning(): boolean;
        getBlockColors(): Internal.BlockColors;
        getOverlay(): Internal.LoadingGui;
        getHotbarManager(): Internal.CreativeSettings;
        getResourcePackDirectory(): Internal.File;
        isWindowActive(): boolean;
        showOnlyReducedInfo(): boolean;
        isEnforceUnicode(): boolean;
        getSplashManager(): Internal.Splashes;
        isConnectedToRealms(): boolean;
        getItemInHandRenderer(): Internal.FirstPersonRenderer;
        delayTextureReload(): Internal.CompletableFuture<any>;
        resizeDisplay(): void;
        getEntityRenderDispatcher(): Internal.EntityRendererManager;
        allowsMultiplayer(): boolean;
        static getInstance(): Internal.ClientWorldJS;
        emergencySave(): void;
        loadLevel(string: string): void;
        readonly clientPlayerData : Internal.ClientPlayerDataJS;
        get itemRenderer(): Internal.ItemRenderer;
        get clientPackSource(): Internal.DownloadingPackFinder;
        get paused(): boolean;
        get instance(): Internal.ClientWorldJS;
        get musicManager(): Internal.MusicTicker;
        get mobEffectTextures(): Internal.PotionSpriteUploader;
        get mainRenderTarget(): Internal.Framebuffer;
        get toasts(): Internal.ToastGui;
        get hotbarManager(): Internal.CreativeSettings;
        get frameTimer(): Internal.FrameTimer;
        get connection(): Internal.ClientPlayNetHandler;
        get itemInHandRenderer(): Internal.FirstPersonRenderer;
        get resourceManager(): Internal.IResourceManager;
        get probablyModded(): boolean;
        get versionType(): string;
        get situationalMusic(): Internal.BackgroundMusicSelector;
        get overlay(): Internal.LoadingGui;
        get playerSocialManager(): Internal.FilterManager;
        get frameTime(): number;
        get deltaFrameTime(): number;
        get localServer(): boolean;
        get profiler(): Internal.IProfiler;
        get languageManager(): Internal.LanguageManager;
        get paintingTextures(): Internal.PaintingSpriteUploader;
        get snooper(): Internal.Snooper;
        get proxy(): Internal.Proxy;
        get skinManager(): Internal.SkinManager;
        get minecraftSessionService(): Internal.MinecraftSessionService;
        get entityRenderDispatcher(): Internal.EntityRendererManager;
        get modelManager(): Internal.ModelManager;
        get minecraft(): Internal.Minecraft;
        get game(): Internal.MinecraftGame;
        get gpuWarnlistManager(): Internal.GPUWarning;
        get enforceUnicode(): boolean;
        get cameraEntity(): Internal.Entity;
        get demo(): boolean;
        get resourcePackDirectory(): Internal.File;
        get blockRenderer(): Internal.BlockRendererDispatcher;
        get running(): boolean;
        get levelSource(): Internal.SaveFormat;
        get connectedToRealms(): boolean;
        get tutorial(): Internal.Tutorial;
        get splashManager(): Internal.Splashes;
        get singleplayerServer(): Internal.IntegratedServer;
        get launchedVersion(): string;
        get fixerUpper(): Internal.DataFixer;
        get side(): Internal.ScriptType;
        get minecraftPlayer(): Internal.ClientPlayerEntity;
        get resourcePackRepository(): Internal.ResourcePackList;
        get textureManager(): Internal.TextureManager;
        get profileProperties(): Internal.PropertyMap;
        get windowActive(): boolean;
        get entities(): Internal.EntityArrayList;
        get soundManager(): Internal.SoundHandler;
        get blockColors(): Internal.BlockColors;
        get window(): Internal.MainWindow;
        get user(): Internal.Session;
        get currentServer(): Internal.ServerData;
        set windowActive(bl: boolean);
        set instance(instance: Internal.ClientWorldJS);
        set overlay(overlay: Internal.LoadingGui);
        set level(clientLevel: Internal.ClientWorld);
        set connectedToRealms(bl: boolean);
        set screen(screen: Internal.Screen);
        set cameraEntity(entity: Internal.Entity);
        set currentServer(serverData: Internal.ServerData);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientWorldJS_ = ClientWorldJS;
    interface Object2ObjectMap <K, V> extends Internal.Object2ObjectFunction<K, V>, Internal.Map<K, V> {
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        object2ObjectEntrySet(): Internal.ObjectSet<Internal.Object2ObjectMap$Entry<K, V>>;
        size(): number;
        entrySet(): Internal.Set<any>;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<K, V>>;
        containsKey(arg0: any): boolean;
        values(): Internal.ObjectCollection<V>;
        values(): Internal.Collection<any>;
        clear(): void;
        keySet(): Internal.Set<any>;
        keySet(): Internal.ObjectSet<K>;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
    }
    type Object2ObjectMap_<K, V> = Object2ObjectMap<K, V>;
    class JSONBlendingMode extends Document.Object {
        hashCode(): number;
        func_148111_b(): boolean;
        equals(arg0: any): boolean;
        static func_148107_b(arg0: string): number;
        static func_148108_a(arg0: string): number;
        func_148109_a(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JSONBlendingMode_ = JSONBlendingMode;
    abstract class Container extends Document.Object implements Internal.ContainerAccessor {
        static func_94525_a(arg0: Internal.Set<Internal.Slot>, arg1: number, arg2: Internal.ItemStack, arg3: number): void;
        func_216957_a(): Internal.ContainerType<any>;
        static func_94526_b(arg0: Internal.IInventory): number;
        static func_94527_a(arg0: Internal.Slot, arg1: Internal.ItemStack, arg2: boolean): boolean;
        func_75130_a(arg0: Internal.IInventory): void;
        insert(arg0: Internal.ItemStack, arg1: number, arg2: number, arg3: boolean): boolean;
        func_75136_a(arg0: Internal.PlayerInventory): number;
        func_75138_a(): Internal.NonNullList<Internal.ItemStack>;
        func_75137_b(arg0: number, arg1: number): void;
        func_75132_a(arg0: Internal.IContainerListener): void;
        static func_94529_b(arg0: number): number;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        func_75128_a(arg0: Internal.PlayerEntity, arg1: boolean): void;
        func_75129_b(arg0: Internal.PlayerEntity): boolean;
        func_82847_b(arg0: Internal.IContainerListener): void;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_94530_a(arg0: Internal.ItemStack, arg1: Internal.Slot): boolean;
        func_184996_a(arg0: number, arg1: number, arg2: Internal.ClickType_, arg3: Internal.PlayerEntity): Internal.ItemStack;
        static func_94534_d(arg0: number, arg1: number): number;
        func_190896_a(arg0: Internal.List<Internal.ItemStack>): void;
        func_75141_a(arg0: number, arg1: Internal.ItemStack): void;
        func_75140_a(arg0: Internal.PlayerEntity, arg1: number): boolean;
        func_94531_b(arg0: Internal.Slot): boolean;
        static func_94532_c(arg0: number): number;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_75142_b(): void;
        static func_180610_a(arg0: number, arg1: Internal.PlayerEntity): boolean;
        static func_195929_a(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_75139_a(arg0: number): Internal.Slot;
        static func_178144_a(arg0: Internal.TileEntity): number;
        field_94536_g : number;
        readonly field_94537_h : Internal.Set<Internal.Slot>;
        readonly field_75151_b : Internal.List<Internal.Slot>;
        field_75152_c : number;
        field_94535_f : number;
        readonly field_75148_f : Internal.Set<Internal.PlayerEntity>;
        readonly field_75149_d : Internal.List<Internal.IContainerListener>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Container_ = Container;
    class Capability <T> extends Document.Object {
        getDefaultInstance(): T;
        orEmpty<R_>(arg0: Internal.Capability<R_>, arg1: Internal.LazyOptional<T>): Internal.LazyOptional<R_>;
        writeNBT(arg0: T, arg1: Internal.Direction_): Internal.INBT;
        getName(): string;
        getStorage(): Internal.Capability$IStorage<T>;
        readNBT(arg0: T, arg1: Internal.Direction_, arg2: Internal.INBT): void;
        get defaultInstance(): T;
        get name(): string;
        get storage(): Internal.Capability$IStorage<T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Capability_<T> = Capability<T>;
    interface IPlacementConfig {
    }
    type IPlacementConfig_ = IPlacementConfig;
    abstract class LockableLootTileEntity extends Internal.LockableTileEntity {
        func_70304_b(arg0: number): Internal.ItemStack;
        createMenu(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity): Internal.Container;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_174888_l(): void;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_191420_l(): boolean;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_189404_a(arg0: ResourceLocation_, arg1: number): void;
        func_213904_e(arg0: Internal.PlayerEntity): boolean;
        static func_195479_a(arg0: Internal.IBlockReader, arg1: Internal.Random, arg2: BlockPos, arg3: ResourceLocation_): void;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_184281_d(arg0: Internal.PlayerEntity): void;
        field_184284_m : ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LockableLootTileEntity_ = LockableLootTileEntity;
    class SimpleRegistry$Entry <T> extends Document.Object {
        readonly field_243546_a : Internal.RegistryKey<T>;
        readonly field_243547_b : number;
        readonly field_243548_c : T;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SimpleRegistry$Entry_<T> = SimpleRegistry$Entry<T>;
    class DarkOakFoliagePlacer extends Internal.FoliagePlacer {
        func_230374_a_(arg0: Internal.Random, arg1: number, arg2: Internal.BaseTreeFeatureConfig): number;
        static readonly field_236745_a_ : Internal.Codec<Internal.DarkOakFoliagePlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DarkOakFoliagePlacer_ = DarkOakFoliagePlacer;
    class EnchantmentContainer extends Internal.Container {
        func_178147_e(): number;
        func_75140_a(arg0: Internal.PlayerEntity, arg1: number): boolean;
        func_75130_a(arg0: Internal.IInventory): void;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_217005_f(): number;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        readonly field_75167_g : number[];
        readonly field_185001_h : number[];
        readonly field_185002_i : number[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EnchantmentContainer_ = EnchantmentContainer;
    interface IInteractionChecker {
        canPlayerUse(arg0: Internal.PlayerEntity): boolean;
    }
    type IInteractionChecker_ = IInteractionChecker;
    interface IFocus <V> {
        getValue(): V;
        getMode(): Internal.IFocus$Mode;
    }
    type IFocus_<V> = IFocus<V>;
    class NoiseChunkGenerator extends Internal.ChunkGenerator {
        func_230356_f_(): number;
        func_230348_a_(arg0: number, arg1: number): Internal.IBlockReader;
        func_230349_a_(arg0: number): Internal.ChunkGenerator;
        func_222552_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): number;
        func_230353_a_(arg0: Internal.Biome, arg1: Internal.StructureManager, arg2: Internal.EntityClassification_, arg3: BlockPos): Internal.List<Internal.MobSpawnInfo$Spawners>;
        func_230352_b_(arg0: Internal.IWorld, arg1: Internal.StructureManager, arg2: Internal.IChunk): void;
        func_230354_a_(arg0: Internal.WorldGenRegion): void;
        func_222548_a(arg0: number[], arg1: number, arg2: number): void;
        func_222529_a(arg0: number, arg1: number, arg2: Internal.Heightmap$Type_): number;
        func_225551_a_(arg0: Internal.WorldGenRegion, arg1: Internal.IChunk): void;
        func_236088_a_(arg0: number, arg1: Internal.RegistryKey<Internal.DimensionSettings>): boolean;
        func_230355_e_(): number;
        func_236095_c_(arg0: number, arg1: number): number;
        readonly field_236083_v_ : Internal.SimplexNoiseGenerator;
        static readonly field_236081_j_ : number[];
        static readonly field_236079_d_ : Internal.Codec<Internal.NoiseChunkGenerator>;
        readonly field_222566_m : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NoiseChunkGenerator_ = NoiseChunkGenerator;
    class StringBuffer extends Internal.AbstractStringBuilder implements Internal.Appendable, Internal.Serializable, Internal.Comparable<Internal.StringBuffer>, Internal.CharSequence {
        deleteCharAt(arg0: number): Internal.StringBuffer;
        deleteCharAt(arg0: number): Internal.AbstractStringBuilder;
        codePointAt(arg0: number): number;
        setCharAt(arg0: number, arg1: string): void;
        replace(arg0: number, arg1: number, arg2: string): Internal.StringBuffer;
        replace(arg0: number, arg1: number, arg2: string): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.StringBuffer;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.StringBuffer;
        insert(arg0: number, arg1: string): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string): Internal.StringBuffer;
        insert(arg0: number, arg1: boolean): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: boolean): Internal.StringBuffer;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.StringBuffer;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.StringBuffer;
        insert(arg0: number, arg1: any): Internal.StringBuffer;
        insert(arg0: number, arg1: any): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string): Internal.StringBuffer;
        insert(arg0: number, arg1: string[], arg2: number, arg3: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string[], arg2: number, arg3: number): Internal.StringBuffer;
        insert(arg0: number, arg1: string[]): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string[]): Internal.StringBuffer;
        insert(arg0: number, arg1: Internal.CharSequence): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: Internal.CharSequence): Internal.StringBuffer;
        insert(arg0: number, arg1: Internal.CharSequence, arg2: number, arg3: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: Internal.CharSequence, arg2: number, arg3: number): Internal.StringBuffer;
        compareTo(arg0: Internal.StringBuffer): number;
        compareTo(arg0: any): number;
        delete(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        delete(arg0: number, arg1: number): Internal.StringBuffer;
        substring(arg0: number): string;
        substring(arg0: number, arg1: number): string;
        capacity(): number;
        appendCodePoint(arg0: number): Internal.StringBuffer;
        appendCodePoint(arg0: number): Internal.AbstractStringBuilder;
        repeat(arg0: Internal.CharSequence, arg1: number): Internal.AbstractStringBuilder;
        repeat(arg0: Internal.CharSequence, arg1: number): Internal.StringBuffer;
        repeat(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        repeat(arg0: number, arg1: number): Internal.StringBuffer;
        codePointBefore(arg0: number): number;
        indexOf(arg0: string, arg1: number): number;
        indexOf(arg0: string): number;
        codePointCount(arg0: number, arg1: number): number;
        codePoints(): Internal.IntStream;
        trimToSize(): void;
        getChars(arg0: number, arg1: number, arg2: string[], arg3: number): void;
        length(): number;
        subSequence(arg0: number, arg1: number): Internal.CharSequence;
        reverse(): Internal.StringBuffer;
        reverse(): Internal.AbstractStringBuilder;
        lastIndexOf(arg0: string, arg1: number): number;
        lastIndexOf(arg0: string): number;
        setLength(arg0: number): void;
        toString(): string;
        ensureCapacity(arg0: number): void;
        chars(): Internal.IntStream;
        offsetByCodePoints(arg0: number, arg1: number): number;
        charAt(arg0: number): string;
        append(arg0: string[]): Internal.AbstractStringBuilder;
        append(arg0: string[]): Internal.StringBuffer;
        append(arg0: number): Internal.StringBuffer;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.StringBuffer;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.StringBuffer;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: string[], arg1: number, arg2: number): Internal.StringBuffer;
        append(arg0: string[], arg1: number, arg2: number): Internal.AbstractStringBuilder;
        append(arg0: boolean): Internal.StringBuffer;
        append(arg0: boolean): Internal.AbstractStringBuilder;
        append(arg0: string): Internal.StringBuffer;
        append(arg0: string): Internal.AbstractStringBuilder;
        append(arg0: string): Internal.Appendable;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.StringBuffer;
        append(arg0: string): Internal.AbstractStringBuilder;
        append(arg0: string): Internal.StringBuffer;
        append(arg0: Internal.StringBuffer): Internal.AbstractStringBuilder;
        append(arg0: Internal.StringBuffer): Internal.StringBuffer;
        append(arg0: Internal.CharSequence): Internal.AbstractStringBuilder;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.StringBuffer;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.StringBuffer;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.AbstractStringBuilder;
        append(arg0: any): Internal.AbstractStringBuilder;
        append(arg0: any): Internal.StringBuffer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StringBuffer_ = StringBuffer;
    abstract class Type <A> extends Document.Object implements Internal.App<Internal.Type$Mu, A> {
        template(): Internal.TypeTemplate;
        findTypeInChildren<FT_, FR_>(arg0: Internal.Type<FT_>, arg1: Internal.Type<FR_>, arg2: Internal.Type$TypeMatcher<FT_, FR_>, arg3: boolean): Internal.Either<Internal.TypedOptic<A, any, FT_, FR_>, Internal.Type$FieldNotFoundException>;
        updateMu(arg0: Internal.RecursiveTypeFamily): Internal.Type<any>;
        rewriteOrNop(arg0: Internal.TypeRewriteRule): Internal.RewriteResult<A, any>;
        point(arg0: Internal.DynamicOps<any>): Internal.Optional<A>;
        findChoiceType(arg0: string, arg1: number): Internal.Optional<Internal.TaggedChoice$TaggedChoiceType<any>>;
        ifSame<B_>(arg0: Internal.Type<B_>, arg1: B_): Internal.Optional<A>;
        ifSame<B_>(arg0: Internal.Typed<B_>): Internal.Optional<A>;
        ifSame<B_>(arg0: Internal.Type<B_>, arg1: Internal.RewriteResult<B_, any>): Internal.Optional<Internal.RewriteResult<A, any>>;
        findType<FT_, FR_>(arg0: Internal.Type<FT_>, arg1: Internal.Type<FR_>, arg2: Internal.Type$TypeMatcher<FT_, FR_>, arg3: boolean): Internal.Either<Internal.TypedOptic<A, any, FT_, FR_>, Internal.Type$FieldNotFoundException>;
        static opticView<S_, T_, A_, B_>(arg0: Internal.Type<S_>, arg1: Internal.RewriteResult<A_, B_>, arg2: Internal.TypedOptic<S_, T_, A_, B_>): Internal.RewriteResult<S_, T_>;
        pointTyped(arg0: Internal.DynamicOps<any>): Internal.Optional<Internal.Typed<A>>;
        getSetType<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: Internal.Type<FR_>): Internal.Type<any>;
        write<T_>(arg0: Internal.DynamicOps<T_>, arg1: A): Internal.DataResult<T_>;
        readAndWrite<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.Type<any>, arg2: Internal.TypeRewriteRule, arg3: Internal.PointFreeRule, arg4: T_): Internal.DataResult<T_>;
        findCheckedType(arg0: number): Internal.Optional<Internal.Type<any>>;
        all(arg0: Internal.TypeRewriteRule, arg1: boolean, arg2: boolean): Internal.RewriteResult<A, any>;
        writeDynamic<T_>(arg0: Internal.DynamicOps<T_>, arg1: A): Internal.DataResult<Internal.Dynamic<T_>>;
        read<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<com.mojang.datafixers.util.Pair<A, Internal.Dynamic<T_>>>;
        read<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.TypeRewriteRule, arg2: Internal.PointFreeRule, arg3: T_): Internal.DataResult<com.mojang.datafixers.util.Pair<Internal.Optional<any>, T_>>;
        one(arg0: Internal.TypeRewriteRule): Internal.Optional<Internal.RewriteResult<A, any>>;
        rewrite(arg0: Internal.TypeRewriteRule, arg1: Internal.PointFreeRule): Internal.Optional<Internal.RewriteResult<A, any>>;
        finder(): Internal.OpticFinder<A>;
        codec(): Internal.Codec<A>;
        static unbox<A_>(arg0: Internal.App<Internal.Type$Mu, A_>): Internal.Type<A_>;
        everywhere(arg0: Internal.TypeRewriteRule, arg1: Internal.PointFreeRule, arg2: boolean, arg3: boolean): Internal.Optional<Internal.RewriteResult<A, any>>;
        equals(arg0: any, arg1: boolean, arg2: boolean): boolean;
        equals(arg0: any): boolean;
        findFieldType(arg0: string): Internal.Type<any>;
        buildTemplate(): Internal.TypeTemplate;
        findField(arg0: string): Internal.OpticFinder<any>;
        readTyped<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<com.mojang.datafixers.util.Pair<Internal.Typed<A>, T_>>;
        readTyped<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<com.mojang.datafixers.util.Pair<Internal.Typed<A>, T_>>;
        findFieldTypeOpt(arg0: string): Internal.Optional<Internal.Type<any>>;
        findTypeCached<FT_, FR_>(arg0: Internal.Type<FT_>, arg1: Internal.Type<FR_>, arg2: Internal.Type$TypeMatcher<FT_, FR_>, arg3: boolean): Internal.Either<Internal.TypedOptic<A, any, FT_, FR_>, Internal.Type$FieldNotFoundException>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Type_<A> = Type<A>;
    class ScriptEventsWrapper extends Document.Object {
        postCancellable(id: string): boolean;
        postCancellable(id: string, data: any): boolean;
        post(id: string, data: any): void;
        post(id: string): void;
        listen(id: any, handler: ((arg0: Internal.EventJS) => void)): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScriptEventsWrapper_ = ScriptEventsWrapper;
    class MooshroomEntity$Type extends Internal.Enum<Internal.MooshroomEntity$Type> {
        func_221093_a(): Internal.BlockState;
        static valueOf(arg0: string): Internal.MooshroomEntity$Type;
        static values(): Internal.MooshroomEntity$Type[];
        static readonly RED : Internal.MooshroomEntity$Type;
        static readonly BROWN : Internal.MooshroomEntity$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MooshroomEntity$Type_ = "red" | "brown" | MooshroomEntity$Type;
    interface IGlyphProvider extends Internal.Closeable {
        func_230428_a_(): Internal.IntSet;
        close(): void;
        func_212248_a(arg0: number): Internal.IGlyphInfo;
    }
    type IGlyphProvider_ = IGlyphProvider;
    class Chunk$CreateEntityType extends Internal.Enum<Internal.Chunk$CreateEntityType> {
        static valueOf(arg0: string): Internal.Chunk$CreateEntityType;
        static values(): Internal.Chunk$CreateEntityType[];
        static readonly QUEUED : Internal.Chunk$CreateEntityType;
        static readonly CHECK : Internal.Chunk$CreateEntityType;
        static readonly IMMEDIATE : Internal.Chunk$CreateEntityType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Chunk$CreateEntityType_ = "immediate" | "queued" | "check" | Chunk$CreateEntityType;
    interface DoubleList extends Internal.List<number>, Internal.Comparable<Internal.List<number>>, Internal.DoubleCollection {
        add(arg0: number, arg1: any): void;
        add(arg0: any): boolean;
        add(arg0: number, arg1: number): void;
        add(arg0: number): boolean;
        add(arg0: number): boolean;
        add(arg0: number, arg1: number): void;
        subList(arg0: number, arg1: number): Internal.DoubleList;
        subList(arg0: number, arg1: number): Internal.List<any>;
        set(arg0: number, arg1: number): number;
        set(arg0: number, arg1: any): any;
        set(arg0: number, arg1: number): number;
        getDouble(arg0: number): number;
        removeElements(arg0: number, arg1: number): void;
        remove(arg0: any): boolean;
        remove(arg0: number): any;
        remove(arg0: number): number;
        lastIndexOf(arg0: any): number;
        lastIndexOf(arg0: number): number;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.DoubleIterator;
        iterator(): Internal.DoubleListIterator;
        size(arg0: number): void;
        addAll(arg0: Internal.DoubleList): boolean;
        addAll(arg0: number, arg1: Internal.DoubleList): boolean;
        addAll(arg0: number, arg1: Internal.DoubleCollection): boolean;
        addElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
        addElements(arg0: number, arg1: number[]): void;
        removeDouble(arg0: number): number;
        getElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
        get(arg0: number): any;
        get(arg0: number): number;
        listIterator(arg0: number): Internal.ListIterator<any>;
        listIterator(arg0: number): Internal.DoubleListIterator;
        listIterator(): Internal.DoubleListIterator;
        listIterator(): Internal.ListIterator<any>;
        indexOf(arg0: number): number;
        indexOf(arg0: any): number;
    }
    type DoubleList_ = DoubleList;
    class SPlayerListItemPacket$Action extends Internal.Enum<Internal.SPlayerListItemPacket$Action> {
        static valueOf(arg0: string): Internal.SPlayerListItemPacket$Action;
        static values(): Internal.SPlayerListItemPacket$Action[];
        static readonly REMOVE_PLAYER : Internal.SPlayerListItemPacket$Action;
        static readonly UPDATE_DISPLAY_NAME : Internal.SPlayerListItemPacket$Action;
        static readonly ADD_PLAYER : Internal.SPlayerListItemPacket$Action;
        static readonly UPDATE_GAME_MODE : Internal.SPlayerListItemPacket$Action;
        static readonly UPDATE_LATENCY : Internal.SPlayerListItemPacket$Action;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlayerListItemPacket$Action_ = "add_player" | "update_game_mode" | "update_latency" | "update_display_name" | "remove_player" | SPlayerListItemPacket$Action;
    abstract class ItemType extends Document.Object {
        applyDefaults(builder: Internal.ItemBuilder): void;
        createItem(arg0: Internal.ItemBuilder): Internal.Item;
        generateData(builder: Internal.ItemBuilder, generator: Internal.DataJsonGenerator): void;
        generateAssets(builder: Internal.ItemBuilder, generator: Internal.AssetJsonGenerator): void;
        readonly name : string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemType_ = ItemType;
    class SuggestionContext <S> extends Document.Object {
        readonly parent : Internal.CommandNode<S>;
        readonly startPos : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SuggestionContext_<S> = SuggestionContext<S>;
    interface Function11 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.BiFunction<T10, T11, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function4<T8, T9, T10, T11, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function3<T9, T10, T11, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function6<T6, T7, T8, T9, T10, T11, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function5<T7, T8, T9, T10, T11, R>>;
        curry10(): Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Internal.Function<T11, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function8<T4, T5, T6, T7, T8, T9, T10, T11, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function7<T5, T6, T7, T8, T9, T10, T11, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function9<T3, T4, T5, T6, T7, T8, T9, T10, T11, R>>;
        curry(): Internal.Function<T1, Internal.Function10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R>>;
    }
    type Function11_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R> = Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R>;
    class SpectralArrowEntity extends Internal.AbstractArrowEntity {
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70071_h_(): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpectralArrowEntity_ = SpectralArrowEntity;
    class StringBuilder extends Internal.AbstractStringBuilder implements Internal.Appendable, Internal.Serializable, Internal.Comparable<Internal.StringBuilder>, Internal.CharSequence {
        deleteCharAt(arg0: number): Internal.StringBuilder;
        deleteCharAt(arg0: number): Internal.AbstractStringBuilder;
        codePointAt(arg0: number): number;
        setCharAt(arg0: number, arg1: string): void;
        replace(arg0: number, arg1: number, arg2: string): Internal.StringBuilder;
        replace(arg0: number, arg1: number, arg2: string): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: Internal.CharSequence): Internal.StringBuilder;
        insert(arg0: number, arg1: Internal.CharSequence): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string): Internal.StringBuilder;
        insert(arg0: number, arg1: string): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string[]): Internal.StringBuilder;
        insert(arg0: number, arg1: string[]): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: any): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: any): Internal.StringBuilder;
        insert(arg0: number, arg1: string[], arg2: number, arg3: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string[], arg2: number, arg3: number): Internal.StringBuilder;
        insert(arg0: number, arg1: number): Internal.StringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.StringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.StringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.StringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string): Internal.StringBuilder;
        insert(arg0: number, arg1: string): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: boolean): Internal.StringBuilder;
        insert(arg0: number, arg1: boolean): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: Internal.CharSequence, arg2: number, arg3: number): Internal.StringBuilder;
        insert(arg0: number, arg1: Internal.CharSequence, arg2: number, arg3: number): Internal.AbstractStringBuilder;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.StringBuilder): number;
        delete(arg0: number, arg1: number): Internal.StringBuilder;
        delete(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        substring(arg0: number): string;
        substring(arg0: number, arg1: number): string;
        capacity(): number;
        appendCodePoint(arg0: number): Internal.AbstractStringBuilder;
        appendCodePoint(arg0: number): Internal.StringBuilder;
        repeat(arg0: Internal.CharSequence, arg1: number): Internal.StringBuilder;
        repeat(arg0: Internal.CharSequence, arg1: number): Internal.AbstractStringBuilder;
        repeat(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        repeat(arg0: number, arg1: number): Internal.StringBuilder;
        codePointBefore(arg0: number): number;
        indexOf(arg0: string, arg1: number): number;
        indexOf(arg0: string): number;
        codePointCount(arg0: number, arg1: number): number;
        codePoints(): Internal.IntStream;
        trimToSize(): void;
        getChars(arg0: number, arg1: number, arg2: string[], arg3: number): void;
        length(): number;
        subSequence(arg0: number, arg1: number): Internal.CharSequence;
        reverse(): Internal.StringBuilder;
        reverse(): Internal.AbstractStringBuilder;
        lastIndexOf(arg0: string, arg1: number): number;
        lastIndexOf(arg0: string): number;
        setLength(arg0: number): void;
        toString(): string;
        ensureCapacity(arg0: number): void;
        chars(): Internal.IntStream;
        offsetByCodePoints(arg0: number, arg1: number): number;
        charAt(arg0: number): string;
        append(arg0: Internal.StringBuffer): Internal.AbstractStringBuilder;
        append(arg0: Internal.StringBuffer): Internal.StringBuilder;
        append(arg0: Internal.CharSequence): Internal.AbstractStringBuilder;
        append(arg0: Internal.CharSequence): Internal.StringBuilder;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.AbstractStringBuilder;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.StringBuilder;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: string[]): Internal.AbstractStringBuilder;
        append(arg0: string[]): Internal.StringBuilder;
        append(arg0: string): Internal.AbstractStringBuilder;
        append(arg0: string): Internal.StringBuilder;
        append(arg0: any): Internal.AbstractStringBuilder;
        append(arg0: any): Internal.StringBuilder;
        append(arg0: string): Internal.Appendable;
        append(arg0: string): Internal.AbstractStringBuilder;
        append(arg0: string): Internal.StringBuilder;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.StringBuilder;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.StringBuilder;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.StringBuilder;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.StringBuilder;
        append(arg0: boolean): Internal.AbstractStringBuilder;
        append(arg0: boolean): Internal.StringBuilder;
        append(arg0: string[], arg1: number, arg2: number): Internal.AbstractStringBuilder;
        append(arg0: string[], arg1: number, arg2: number): Internal.StringBuilder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StringBuilder_ = StringBuilder;
    interface IPosition {
        func_82615_a(): number;
        func_82617_b(): number;
        func_82616_c(): number;
    }
    type IPosition_ = IPosition;
    class FeatureSizeType <P> extends Document.Object {
        func_236714_a_(): Internal.Codec<P>;
        static readonly field_236712_b_ : Internal.FeatureSizeType<Internal.ThreeLayerFeature>;
        static readonly field_236711_a_ : Internal.FeatureSizeType<Internal.TwoLayerFeature>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FeatureSizeType_<P> = FeatureSizeType<P>;
    abstract class WorldEventJS extends Internal.EventJS {
        getServer(): Internal.ServerJS;
        getLevel(): Internal.WorldJS;
        getWorld(): Internal.WorldJS;
        post(id: string): boolean;
        post(id: string, sub: string): boolean;
        get server(): Internal.ServerJS;
        get world(): Internal.WorldJS;
        get level(): Internal.WorldJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldEventJS_ = WorldEventJS;
    class BlockItemBuilder extends Internal.ItemBuilder {
        getBuilderType(): string;
        blockBuilder : Internal.BlockBuilder;
        blockItem : Internal.BlockItem;
        get builderType(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockItemBuilder_ = BlockItemBuilder;
    class FormatStyle extends Internal.Enum<Internal.FormatStyle> {
        static valueOf(arg0: string): Internal.FormatStyle;
        static values(): Internal.FormatStyle[];
        static readonly MEDIUM : Internal.FormatStyle;
        static readonly FULL : Internal.FormatStyle;
        static readonly LONG : Internal.FormatStyle;
        static readonly SHORT : Internal.FormatStyle;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FormatStyle_ = "full" | "long" | "medium" | "short" | FormatStyle;
    abstract class RhinoException extends Internal.RuntimeException {
        getScriptStackTrace(limit: number, functionName: string): string;
        getScriptStackTrace(): string;
        initLineSource(lineSource: string): void;
        printStackTrace(s: Internal.PrintWriter): void;
        printStackTrace(s: Internal.PrintStream): void;
        columnNumber(): number;
        getScriptStack(): any[];
        getScriptStack(limit: number, hideFunction: string): any[];
        lineSource(): string;
        initSourceName(sourceName: string): void;
        initColumnNumber(columnNumber: number): void;
        initLineNumber(lineNumber: number): void;
        getMessage(): string;
        details(): string;
        sourceName(): string;
        lineNumber(): number;
        get scriptStack(): any[];
        get scriptStackTrace(): string;
        get message(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RhinoException_ = RhinoException;
    class Dynamic2CommandExceptionType extends Document.Object implements Internal.CommandExceptionType {
        createWithContext(arg0: Internal.ImmutableStringReader, arg1: any, arg2: any): Internal.CommandSyntaxException;
        create(arg0: any, arg1: any): Internal.CommandSyntaxException;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Dynamic2CommandExceptionType_ = Dynamic2CommandExceptionType;
    interface IPhase {
        func_221113_a(arg0: Internal.DamageSource, arg1: number): number;
        func_188660_d(): void;
        func_188658_e(): void;
        func_188659_c(): void;
        func_188657_b(): void;
        func_188653_h(): number;
        func_188652_i(): Internal.PhaseType<Internal.IPhase>;
        func_188654_a(): boolean;
        func_188651_f(): number;
        func_188650_g(): Vec3;
        func_188655_a(arg0: Internal.EnderCrystalEntity, arg1: BlockPos, arg2: Internal.DamageSource, arg3: Internal.PlayerEntity): void;
    }
    type IPhase_ = IPhase;
    class DecimalStyle extends Document.Object {
        getPositiveSign(): string;
        getDecimalSeparator(): string;
        getNegativeSign(): string;
        static ofDefaultLocale(): Internal.DecimalStyle;
        getZeroDigit(): string;
        withPositiveSign(arg0: string): Internal.DecimalStyle;
        hashCode(): number;
        withDecimalSeparator(arg0: string): Internal.DecimalStyle;
        static of(arg0: Internal.Locale): Internal.DecimalStyle;
        equals(arg0: any): boolean;
        toString(): string;
        withNegativeSign(arg0: string): Internal.DecimalStyle;
        withZeroDigit(arg0: string): Internal.DecimalStyle;
        static getAvailableLocales(): Internal.Set<Internal.Locale>;
        static readonly STANDARD : Internal.DecimalStyle;
        get negativeSign(): string;
        get decimalSeparator(): string;
        get zeroDigit(): string;
        get positiveSign(): string;
        get availableLocales(): Internal.Set<Internal.Locale>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DecimalStyle_ = DecimalStyle;
    class Style extends Document.Object {
        func_240719_a_(arg0: ResourceLocation_): Internal.Style;
        func_240713_a_(arg0: boolean): Internal.Style;
        func_240715_a_(arg0: Internal.ClickEvent): Internal.Style;
        func_240717_a_(arg0: Internal.Style): Internal.Style;
        func_150229_g(): boolean;
        func_240711_a_(): Internal.Color;
        func_179986_j(): string;
        setUnderlined(arg0: boolean): Internal.Style;
        hashCode(): number;
        func_150242_c(): boolean;
        func_240721_b_(arg0: Internal.TextFormatting_): Internal.Style;
        func_150223_b(): boolean;
        func_240716_a_(arg0: Internal.HoverEvent): Internal.Style;
        func_240720_a_(arg0: Internal.TextFormatting[]): Internal.Style;
        func_240714_a_(arg0: string): Internal.Style;
        func_240718_a_(arg0: Internal.Color): Internal.Style;
        func_240712_a_(arg0: Internal.TextFormatting_): Internal.Style;
        func_240729_k_(): ResourceLocation;
        setStrikethrough(arg0: boolean): Internal.Style;
        func_150210_i(): Internal.HoverEvent;
        func_150236_d(): boolean;
        func_150233_f(): boolean;
        func_244282_c(arg0: boolean): Internal.Style;
        func_150234_e(): boolean;
        func_150235_h(): Internal.ClickEvent;
        equals(arg0: any): boolean;
        func_240723_c_(arg0: Internal.TextFormatting_): Internal.Style;
        setObfuscated(arg0: boolean): Internal.Style;
        func_240722_b_(arg0: boolean): Internal.Style;
        toString(): string;
        static readonly field_240708_a_ : ResourceLocation;
        static readonly field_240709_b_ : Internal.Style;
        set underlined(arg0: boolean);
        set strikethrough(arg0: boolean);
        set obfuscated(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Style_ = Style;
    class EntityEvent$EnteringChunk extends Internal.EntityEvent {
        setOldChunkX(arg0: number): void;
        getOldChunkX(): number;
        setNewChunkZ(arg0: number): void;
        getNewChunkZ(): number;
        setOldChunkZ(arg0: number): void;
        getListenerList(): Internal.ListenerList;
        getOldChunkZ(): number;
        setNewChunkX(arg0: number): void;
        getNewChunkX(): number;
        get newChunkX(): number;
        get newChunkZ(): number;
        get listenerList(): Internal.ListenerList;
        get oldChunkZ(): number;
        get oldChunkX(): number;
        set newChunkX(arg0: number);
        set newChunkZ(arg0: number);
        set oldChunkZ(arg0: number);
        set oldChunkX(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityEvent$EnteringChunk_ = EntityEvent$EnteringChunk;
    class GuiScreenEvent$MouseDragEvent$Pre extends Internal.GuiScreenEvent$MouseDragEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$MouseDragEvent$Pre_ = GuiScreenEvent$MouseDragEvent$Pre;
    abstract class Unit extends Document.Object {
        sub(with_: Internal.Unit): Internal.Unit;
        mod(with_: Internal.Unit): Internal.Unit;
        mul(with_: Internal.Unit): Internal.Unit;
        log(): Internal.Unit;
        log1p(): Internal.Unit;
        log10(): Internal.Unit;
        cos(): Internal.Unit;
        deg(): Internal.Unit;
        lt(with_: Internal.Unit): Internal.Unit;
        atan(): Internal.Unit;
        getAsInt(): number;
        div(with_: Internal.Unit): Internal.Unit;
        neg(): Internal.Unit;
        not(): Internal.Unit;
        shiftLeft(with_: Internal.Unit): Internal.Unit;
        min(with_: Internal.Unit): Internal.Unit;
        rad(): Internal.Unit;
        sqrt(): Internal.Unit;
        and(with_: Internal.Unit): Internal.Unit;
        get(): number;
        pow(with_: Internal.Unit): Internal.Unit;
        sin(): Internal.Unit;
        gte(with_: Internal.Unit): Internal.Unit;
        xor(with_: Internal.Unit): Internal.Unit;
        neq(with_: Internal.Unit): Internal.Unit;
        floor(): Internal.Unit;
        lte(with_: Internal.Unit): Internal.Unit;
        isFixed(): boolean;
        sq(): Internal.Unit;
        atan2(with_: Internal.Unit): Internal.Unit;
        add(with_: Internal.Unit): Internal.Unit;
        tan(): Internal.Unit;
        or(with_: Internal.Unit): Internal.Unit;
        max(with_: Internal.Unit): Internal.Unit;
        ceil(): Internal.Unit;
        toBool(): Internal.Unit;
        eq(with_: Internal.Unit): Internal.Unit;
        gt(with_: Internal.Unit): Internal.Unit;
        shiftRight(with_: Internal.Unit): Internal.Unit;
        abs(): Internal.Unit;
        getAsBoolean(): boolean;
        toString(): string;
        append(arg0: Internal.StringBuilder): void;
        get asInt(): number;
        get fixed(): boolean;
        get asBoolean(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Unit_ = Unit;
    interface Queue <E> extends Internal.Collection<E> {
        offer(arg0: E): boolean;
        add(arg0: E): boolean;
        poll(): E;
        remove(): E;
        element(): E;
        peek(): E;
    }
    type Queue_<E> = Queue<E>;
    class PackMetadataSectionSerializer extends Document.Object implements Internal.IMetadataSectionSerializer<Internal.PackMetadataSection> {
        func_195812_a(arg0: Internal.JsonObject): any;
        func_195812_a(arg0: Internal.JsonObject): Internal.PackMetadataSection;
        func_110483_a(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PackMetadataSectionSerializer_ = PackMetadataSectionSerializer;
    class PlayerProfileCache extends Document.Object {
        static func_187320_a(arg0: boolean): void;
        func_242116_a(): Internal.List<Internal.PlayerProfileCache$ProfileEntry>;
        func_152658_c(): void;
        func_152649_a(arg0: Internal.GameProfile): void;
        func_152655_a(arg0: string): Internal.GameProfile;
        func_152652_a(arg0: Internal.UUID): Internal.GameProfile;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerProfileCache_ = PlayerProfileCache;
    class WorldgenRemoveEventJSForge extends Internal.WorldgenRemoveEventJS {
        removeAllSpawns(): void;
        printSpawns(category: Internal.EntityClassification_): void;
        removeFeatureById(type: DecorationGenerationStep_, ids: ResourceLocation[]): void;
        printFeatures(type: DecorationGenerationStep_): void;
        removeAllFeatures(type: DecorationGenerationStep_): void;
        removeAllFeatures(): void;
        getConfiguredFeatureKey(feature: Internal.ConfiguredFeature<any, any>): ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldgenRemoveEventJSForge_ = WorldgenRemoveEventJSForge;
    class PlayerController extends Document.Object {
        func_217292_a(arg0: Internal.ClientPlayerEntity, arg1: Internal.ClientWorld, arg2: Hand_, arg3: Internal.BlockRayTraceResult): Internal.ActionResultType;
        func_78757_d(): number;
        func_181040_m(): boolean;
        func_241822_k(): Internal.GameType;
        func_78758_h(): boolean;
        func_187102_a(arg0: Internal.PlayerEntity, arg1: Internal.Entity, arg2: Internal.EntityRayTraceResult, arg3: Hand_): Internal.ActionResultType;
        func_199681_a(arg0: Internal.ClientWorld, arg1: Internal.StatisticsManager, arg2: Internal.ClientRecipeBook): Internal.ClientPlayerEntity;
        func_187103_a(arg0: BlockPos): boolean;
        func_78761_a(arg0: Internal.ItemStack, arg1: number): void;
        func_78764_a(arg0: Internal.PlayerEntity, arg1: Internal.Entity): void;
        func_78766_c(arg0: Internal.PlayerEntity): void;
        func_78762_g(): boolean;
        func_78763_f(): boolean;
        func_78746_a(arg0: Internal.GameType_): void;
        func_187098_a(arg0: number, arg1: number, arg2: number, arg3: Internal.ClickType_, arg4: Internal.PlayerEntity): Internal.ItemStack;
        func_180512_c(arg0: BlockPos, arg1: Internal.Direction_): boolean;
        func_180511_b(arg0: BlockPos, arg1: Internal.Direction_): boolean;
        func_239167_a_(arg0: Internal.ClientWorld, arg1: Internal.StatisticsManager, arg2: Internal.ClientRecipeBook, arg3: boolean, arg4: boolean): Internal.ClientPlayerEntity;
        func_187097_a(arg0: Internal.PlayerEntity, arg1: Internal.Entity, arg2: Hand_): Internal.ActionResultType;
        func_78749_i(): boolean;
        func_225323_a(arg0: Internal.ClientWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.CPlayerDiggingPacket$Action_, arg4: boolean): void;
        func_241675_a_(arg0: Internal.GameType_): void;
        func_203413_a(arg0: number, arg1: Internal.IRecipe<any>, arg2: boolean): void;
        func_78748_a(arg0: Internal.PlayerEntity): void;
        func_78765_e(): void;
        func_78767_c(): void;
        func_178887_k(): boolean;
        func_178889_l(): Internal.GameType;
        func_187100_a(arg0: number): void;
        func_187101_a(arg0: Internal.PlayerEntity, arg1: Internal.World, arg2: Hand_): Internal.ActionResultType;
        func_78752_a(arg0: Internal.ItemStack): void;
        func_78756_a(arg0: number, arg1: number): void;
        func_78755_b(): boolean;
        func_110738_j(): boolean;
        field_78778_j : boolean;
        field_78770_f : number;
        field_178895_c : BlockPos;
        field_85183_f : Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerController_ = PlayerController;
    abstract class SocketAddress extends Document.Object implements Internal.Serializable {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SocketAddress_ = SocketAddress;
    class Teleporter extends Document.Object implements Internal.ITeleporter {
        func_242956_a(arg0: BlockPos, arg1: Internal.Direction$Axis_): Internal.Optional<Internal.TeleportationRepositioner$Result>;
        func_242957_a(arg0: BlockPos, arg1: boolean): Internal.Optional<Internal.TeleportationRepositioner$Result>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Teleporter_ = Teleporter;
    interface ExternalArrayData {
        setArrayElement(arg0: number, arg1: any): void;
        getArrayLength(): number;
        getArrayElement(arg0: number): any;
    }
    type ExternalArrayData_ = ExternalArrayData;
    interface IResourceManagerReloadListener extends Internal.IFutureReloadListener {
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor, arg5: Internal.Executor): Internal.CompletableFuture<void>;
        getResourceType(): Internal.IResourceType;
    }
    type IResourceManagerReloadListener_ = IResourceManagerReloadListener;
    class GuiScreenEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getGui(): Internal.Screen;
        get listenerList(): Internal.ListenerList;
        get gui(): Internal.Screen;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent_ = GuiScreenEvent;
    interface IGuiProperties {
        getScreenClass(): Internal.Class<Internal.Screen>;
        getGuiYSize(): number;
        getScreenWidth(): number;
        getGuiXSize(): number;
        getGuiTop(): number;
        getGuiLeft(): number;
        getScreenHeight(): number;
    }
    type IGuiProperties_ = IGuiProperties;
    abstract class AbstractLong2ObjectMap <V> extends Internal.AbstractLong2ObjectFunction<V> implements Internal.Long2ObjectMap<V>, Internal.Serializable {
        containsKey(arg0: number): boolean;
        hashCode(): number;
        putAll(arg0: Internal.Map_<number, V>): void;
        values(): Internal.ObjectCollection<V>;
        values(): Internal.Collection<any>;
        equals(arg0: any): boolean;
        isEmpty(): boolean;
        toString(): string;
        keySet(): Internal.LongSet;
        keySet(): Internal.Set<any>;
        containsValue(arg0: any): boolean;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractLong2ObjectMap_<V> = AbstractLong2ObjectMap<V>;
    class ModelGenerator extends Document.Object {
        parent(s: string): void;
        toJson(): Internal.JsonObject;
        textures(json: Internal.JsonObject): void;
        texture(name: string, texture: string): void;
        element(consumer: ((arg0: Internal.ModelGenerator$Element) => void)): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModelGenerator_ = ModelGenerator;
    class SScoreboardObjectivePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149339_c(): string;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149338_e(): number;
        func_199856_d(): Internal.ScoreCriteria$RenderType;
        func_149337_d(): Internal.ITextComponent;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SScoreboardObjectivePacket_ = SScoreboardObjectivePacket;
    class TrunkPlacerType <P> extends Document.Object {
        func_236927_a_(): Internal.Codec<P>;
        static readonly field_236921_b_ : Internal.TrunkPlacerType<Internal.ForkyTrunkPlacer>;
        static readonly field_236920_a_ : Internal.TrunkPlacerType<Internal.StraightTrunkPlacer>;
        static readonly field_236923_d_ : Internal.TrunkPlacerType<Internal.MegaJungleTrunkPlacer>;
        static readonly field_236922_c_ : Internal.TrunkPlacerType<Internal.GiantTrunkPlacer>;
        static readonly field_236924_e_ : Internal.TrunkPlacerType<Internal.DarkOakTrunkPlacer>;
        static readonly field_236925_f_ : Internal.TrunkPlacerType<Internal.FancyTrunkPlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TrunkPlacerType_<P> = TrunkPlacerType<P>;
    class ClientChatReceivedEvent extends net.minecraftforge.eventbus.api.Event {
        getSenderUUID(): Internal.UUID;
        getListenerList(): Internal.ListenerList;
        getType(): Internal.ChatType;
        getMessage(): Internal.ITextComponent;
        setMessage(arg0: Internal.ITextComponent_): void;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get senderUUID(): Internal.UUID;
        get listenerList(): Internal.ListenerList;
        get type(): Internal.ChatType;
        get message(): Internal.ITextComponent;
        set message(arg0: Internal.ITextComponent_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientChatReceivedEvent_ = ClientChatReceivedEvent;
    class RegisterRecipeCatalystsEventJS extends Internal.JEIEventJS {
        readonly data : Internal.IRecipeCatalystRegistration;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegisterRecipeCatalystsEventJS_ = RegisterRecipeCatalystsEventJS;
    class ChanceConfig extends Document.Object implements Internal.IPlacementConfig {
        readonly field_202477_a : number;
        static readonly field_236950_a_ : Internal.Codec<Internal.ChanceConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChanceConfig_ = ChanceConfig;
    interface INameable {
        func_200200_C_(): Internal.ITextComponent;
        func_200201_e(): Internal.ITextComponent;
        func_145748_c_(): Internal.ITextComponent;
        func_145818_k_(): boolean;
    }
    type INameable_ = INameable;
    class MusicTicker extends Document.Object {
        func_239539_a_(arg0: Internal.BackgroundMusicSelector): void;
        func_239540_b_(arg0: Internal.BackgroundMusicSelector): boolean;
        func_209200_a(): void;
        func_73660_a(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MusicTicker_ = MusicTicker;
    class DoubleSummaryStatistics extends Document.Object implements Internal.DoubleConsumer {
        getMin(): number;
        getMax(): number;
        toString(): string;
        getAverage(): number;
        getSum(): number;
        getCount(): number;
        combine(arg0: Internal.DoubleSummaryStatistics): void;
        accept(arg0: number): void;
        get average(): number;
        get min(): number;
        get max(): number;
        get count(): number;
        get sum(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DoubleSummaryStatistics_ = DoubleSummaryStatistics;
    class Configuration extends Document.Object {
        findModule(arg0: string): Internal.Optional<Internal.ResolvedModule>;
        resolve(arg0: Internal.ModuleFinder, arg1: Internal.ModuleFinder, arg2: Internal.Collection<string>): Internal.Configuration;
        static resolve(arg0: Internal.ModuleFinder, arg1: Internal.List<Internal.Configuration>, arg2: Internal.ModuleFinder, arg3: Internal.Collection<string>): Internal.Configuration;
        toString(): string;
        static resolveAndBind(arg0: Internal.ModuleFinder, arg1: Internal.List<Internal.Configuration>, arg2: Internal.ModuleFinder, arg3: Internal.Collection<string>): Internal.Configuration;
        resolveAndBind(arg0: Internal.ModuleFinder, arg1: Internal.ModuleFinder, arg2: Internal.Collection<string>): Internal.Configuration;
        modules(): Internal.Set<Internal.ResolvedModule>;
        parents(): Internal.List<Internal.Configuration>;
        static empty(): Internal.Configuration;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Configuration_ = Configuration;
    /**
    */
    interface Map <K, V> {
        getOrDefault(arg0: any, arg1: V): V;
        computeIfAbsent(arg0: K, arg1: ((arg0: K) => V)): V;
        values(): Internal.Collection<V>;
        replace(arg0: K, arg1: V, arg2: V): boolean;
        replace(arg0: K, arg1: V): V;
        replaceAll(arg0: ((arg0: K, arg1: V) => V)): void;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): V;
        remove(arg0: any, arg1: any): boolean;
        remove(arg0: any): V;
        compute(arg0: K, arg1: ((arg0: K, arg1: V) => V)): V;
        hashCode(): number;
        putAll(arg0: Internal.Map_<K, V>): void;
        merge(arg0: K, arg1: V, arg2: ((arg0: V, arg1: V) => V)): V;
        get(arg0: any): V;
        keySet(): Internal.Set<K>;
        entrySet(): Internal.Set<Internal.Map$Entry<K, V>>;
        containsKey(arg0: any): boolean;
        forEach(arg0: ((arg0: K, arg1: V) => void)): void;
        isEmpty(): boolean;
        clear(): void;
        computeIfPresent(arg0: K, arg1: ((arg0: K, arg1: V) => V)): V;
        size(): number;
        equals(arg0: any): boolean;
        putIfAbsent(arg0: K, arg1: V): V;
    }
    type Map_<K, V> = {[key: K]: V} | Map<K, V>;
    class PlaySoundEvent extends net.minecraftforge.client.event.sound.SoundEvent {
        getListenerList(): Internal.ListenerList;
        getName(): string;
        getResultSound(): Internal.ISound;
        setResultSound(arg0: Internal.ISound): void;
        getSound(): Internal.ISound;
        get resultSound(): Internal.ISound;
        get listenerList(): Internal.ListenerList;
        get sound(): Internal.ISound;
        get name(): string;
        set resultSound(arg0: Internal.ISound);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlaySoundEvent_ = PlaySoundEvent;
    interface Cancellable {
        cancel(): void;
        isCancelled(): boolean;
        isCancellable(): boolean;
    }
    type Cancellable_ = Cancellable;
    class CustomServerBossInfo extends Internal.ServerBossInfo {
        func_201367_d(): number;
        func_201369_e(): Internal.ITextComponent;
        func_186760_a(arg0: Internal.ServerPlayerEntity): void;
        func_186761_b(arg0: Internal.ServerPlayerEntity): void;
        static func_201371_a(arg0: Internal.CompoundNBT, arg1: ResourceLocation_): Internal.CustomServerBossInfo;
        func_201362_a(arg0: number): void;
        func_201372_a(arg0: Internal.UUID): void;
        func_201360_b(): void;
        func_201370_f(): Internal.CompoundNBT;
        func_201364_a(): ResourceLocation;
        func_201361_c(arg0: Internal.ServerPlayerEntity): void;
        func_201363_d(arg0: Internal.ServerPlayerEntity): void;
        func_201368_a(arg0: Internal.Collection<Internal.ServerPlayerEntity>): boolean;
        func_201365_c(): number;
        func_201366_b(arg0: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CustomServerBossInfo_ = CustomServerBossInfo;
    class WorldEvent$Save extends Internal.WorldEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldEvent$Save_ = WorldEvent$Save;
    interface ISubtypeRegistration {
        registerSubtypeInterpreter(arg0: Internal.Fluid, arg1: ((arg0: net.minecraftforge.fluids.FluidStack, arg1: Internal.UidContext) => string)): void;
        registerSubtypeInterpreter(arg0: Internal.Item, arg1: ((arg0: Internal.ItemStack, arg1: Internal.UidContext) => string)): void;
        registerSubtypeInterpreter(arg0: Internal.Item, arg1: ((arg0: Internal.ItemStack) => string)): void;
        hasSubtypeInterpreter(arg0: Internal.ItemStack): boolean;
        hasSubtypeInterpreter(arg0: net.minecraftforge.fluids.FluidStack): boolean;
        useNbtForSubtypes(arg0: Internal.Fluid[]): void;
        useNbtForSubtypes(arg0: Internal.Item[]): void;
    }
    type ISubtypeRegistration_ = ISubtypeRegistration;
    class WitherSkeletonEntity extends Internal.AbstractSkeletonEntity {
        func_70687_e(arg0: Internal.EffectInstance): boolean;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WitherSkeletonEntity_ = WitherSkeletonEntity;
    class CSeenAdvancementsPacket$Action extends Internal.Enum<Internal.CSeenAdvancementsPacket$Action> {
        static valueOf(arg0: string): Internal.CSeenAdvancementsPacket$Action;
        static values(): Internal.CSeenAdvancementsPacket$Action[];
        static readonly OPENED_TAB : Internal.CSeenAdvancementsPacket$Action;
        static readonly CLOSED_SCREEN : Internal.CSeenAdvancementsPacket$Action;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CSeenAdvancementsPacket$Action_ = "opened_tab" | "closed_screen" | CSeenAdvancementsPacket$Action;
    class ShaderLoader extends Document.Object {
        func_195656_a(): void;
        static func_216534_a(arg0: Internal.ShaderLoader$ShaderType_, arg1: string, arg2: Internal.InputStream, arg3: string): Internal.ShaderLoader;
        func_148055_a(): string;
        func_148056_a(arg0: Internal.IShaderManager): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShaderLoader_ = ShaderLoader;
    class WorldSettings extends Document.Object {
        func_234953_b_(): Internal.GameType;
        func_234955_d_(): Internal.Difficulty;
        func_234954_c_(): boolean;
        func_234949_a_(arg0: Internal.DatapackCodec): Internal.WorldSettings;
        func_234956_e_(): boolean;
        func_234947_a_(): string;
        func_234948_a_(arg0: Internal.Difficulty_): Internal.WorldSettings;
        func_234950_a_(arg0: Internal.GameType_): Internal.WorldSettings;
        func_234957_f_(): Internal.GameRules;
        static func_234951_a_(arg0: Internal.Dynamic<any>, arg1: Internal.DatapackCodec): Internal.WorldSettings;
        func_234958_g_(): Internal.DatapackCodec;
        func_234959_h_(): Internal.WorldSettings;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldSettings_ = WorldSettings;
    abstract class URLConnection extends Document.Object {
        getLastModified(): number;
        setConnectTimeout(arg0: number): void;
        setIfModifiedSince(arg0: number): void;
        getHeaderFieldLong(arg0: string, arg1: number): number;
        getContent(): any;
        getContent(arg0: Internal.Class<any>[]): any;
        getReadTimeout(): number;
        setUseCaches(arg0: boolean): void;
        getHeaderFieldInt(arg0: string, arg1: number): number;
        getRequestProperty(arg0: string): string;
        static guessContentTypeFromStream(arg0: Internal.InputStream): string;
        setRequestProperty(arg0: string, arg1: string): void;
        static setDefaultRequestProperty(arg0: string, arg1: string): void;
        getDoInput(): boolean;
        getHeaderFieldDate(arg0: string, arg1: number): number;
        getDate(): number;
        static getFileNameMap(): Internal.FileNameMap;
        connect(): void;
        getIfModifiedSince(): number;
        getHeaderFieldKey(arg0: number): string;
        static setContentHandlerFactory(arg0: Internal.ContentHandlerFactory): void;
        getContentEncoding(): string;
        getPermission(): Internal.Permission;
        static getDefaultAllowUserInteraction(): boolean;
        static getDefaultUseCaches(arg0: string): boolean;
        getDefaultUseCaches(): boolean;
        getUseCaches(): boolean;
        getAllowUserInteraction(): boolean;
        getConnectTimeout(): number;
        getContentLength(): number;
        getInputStream(): Internal.InputStream;
        setDoInput(arg0: boolean): void;
        addRequestProperty(arg0: string, arg1: string): void;
        setAllowUserInteraction(arg0: boolean): void;
        getRequestProperties(): Internal.Map<string, Internal.List<string>>;
        getURL(): Internal.URL;
        setReadTimeout(arg0: number): void;
        getHeaderField(arg0: number): string;
        getHeaderField(arg0: string): string;
        getHeaderFields(): Internal.Map<string, Internal.List<string>>;
        getExpiration(): number;
        static getDefaultRequestProperty(arg0: string): string;
        getContentLengthLong(): number;
        static setDefaultAllowUserInteraction(arg0: boolean): void;
        static setFileNameMap(arg0: Internal.FileNameMap): void;
        getContentType(): string;
        toString(): string;
        getOutputStream(): Internal.OutputStream;
        getDoOutput(): boolean;
        setDefaultUseCaches(arg0: boolean): void;
        static setDefaultUseCaches(arg0: string, arg1: boolean): void;
        setDoOutput(arg0: boolean): void;
        static guessContentTypeFromName(arg0: string): string;
        get date(): number;
        get contentLengthLong(): number;
        get defaultAllowUserInteraction(): boolean;
        get defaultUseCaches(): boolean;
        get useCaches(): boolean;
        get requestProperties(): Internal.Map<string, Internal.List<string>>;
        get inputStream(): Internal.InputStream;
        get ifModifiedSince(): number;
        get permission(): Internal.Permission;
        get content(): any;
        get doInput(): boolean;
        get uRL(): Internal.URL;
        get allowUserInteraction(): boolean;
        get doOutput(): boolean;
        get readTimeout(): number;
        get connectTimeout(): number;
        get contentEncoding(): string;
        get fileNameMap(): Internal.FileNameMap;
        get contentLength(): number;
        get headerFields(): Internal.Map<string, Internal.List<string>>;
        get expiration(): number;
        get lastModified(): number;
        get outputStream(): Internal.OutputStream;
        get contentType(): string;
        set doOutput(arg0: boolean);
        set defaultUseCaches(arg0: boolean);
        set defaultAllowUserInteraction(arg0: boolean);
        set useCaches(arg0: boolean);
        set readTimeout(arg0: number);
        set connectTimeout(arg0: number);
        set fileNameMap(arg0: Internal.FileNameMap);
        set ifModifiedSince(arg0: number);
        set doInput(arg0: boolean);
        set contentHandlerFactory(arg0: Internal.ContentHandlerFactory);
        set allowUserInteraction(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type URLConnection_ = URLConnection;
    class PlayerContainer extends Internal.RecipeBookContainer<Internal.CraftingInventory> implements Internal.PlayerContainerAccessor {
        getCraftResult(): Internal.CraftResultInventory;
        func_201771_a(arg0: Internal.RecipeItemHelper): void;
        func_75130_a(arg0: Internal.IInventory): void;
        func_203721_h(): number;
        func_234641_j_(): Internal.CraftingInventory;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        getCraftMatrix(): Internal.CraftingInventory;
        func_241850_m(): Internal.RecipeBookCategory;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_201772_h(): number;
        func_201770_g(): number;
        func_94530_a(arg0: Internal.ItemStack, arg1: Internal.Slot): boolean;
        func_201769_a(arg0: Internal.IRecipe<Internal.CraftingInventory>): boolean;
        func_201767_f(): number;
        func_201768_e(): void;
        static readonly field_226619_g_ : ResourceLocation;
        readonly field_75179_f : Internal.CraftResultInventory;
        static readonly field_226618_f_ : ResourceLocation;
        static readonly field_226617_e_ : ResourceLocation;
        static readonly field_226620_h_ : ResourceLocation;
        readonly field_75180_g : boolean;
        static readonly field_226616_d_ : ResourceLocation;
        static readonly field_226615_c_ : ResourceLocation;
        readonly field_75181_e : Internal.CraftingInventory;
        get craftMatrix(): Internal.CraftingInventory;
        get craftResult(): Internal.CraftResultInventory;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerContainer_ = PlayerContainer;
    interface Condition {
        signalAll(): void;
        awaitNanos(arg0: number): number;
        await(arg0: number, arg1: Internal.TimeUnit_): boolean;
        await(): void;
        awaitUninterruptibly(): void;
        signal(): void;
        awaitUntil(arg0: Internal.Date): boolean;
    }
    type Condition_ = Condition;
    class RaidDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: number, arg4: number): void;
        func_222906_a(arg0: Internal.Collection<BlockPos>): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RaidDebugRenderer_ = RaidDebugRenderer;
    class FurnaceContainer extends Internal.AbstractFurnaceContainer {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FurnaceContainer_ = FurnaceContainer;
    interface Function9 <T1, T2, T3, T4, T5, T6, T7, T8, T9, R> {
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.BiFunction<T8, T9, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function<T9, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function4<T6, T7, T8, T9, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function3<T7, T8, T9, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function6<T4, T5, T6, T7, T8, T9, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function5<T5, T6, T7, T8, T9, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function7<T3, T4, T5, T6, T7, T8, T9, R>>;
        curry(): Internal.Function<T1, Internal.Function8<T2, T3, T4, T5, T6, T7, T8, T9, R>>;
    }
    type Function9_<T1, T2, T3, T4, T5, T6, T7, T8, T9, R> = Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, R>;
    class ChunkPrimerWrapper extends Internal.ChunkPrimer implements Internal.IChunk, Internal.ExtendedChunk {
        func_201593_f(): boolean;
        func_201574_a(arg0: Internal.ChunkStatus): void;
        func_201594_d(arg0: BlockPos): void;
        func_201576_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_225549_i_(): Internal.BiomeContainer;
        func_201612_a(arg0: Internal.Map_<Internal.Structure_<any>, Internal.StructureStart_<any>>): void;
        func_201591_a(arg0: Internal.CompoundNBT): void;
        func_217310_r(): boolean;
        setBlockEmptinessMap(arg0: boolean[]): void;
        func_217336_u(): Internal.Chunk;
        func_205749_a(arg0: CarvingGenerationStep_): Internal.BitSet;
        func_177426_a(arg0: BlockPos, arg1: Internal.TileEntity): void;
        func_177425_e(arg0: BlockPos): void;
        func_230345_b_(arg0: CarvingGenerationStep_): Internal.BitSet;
        getSkyEmptinessMap(): boolean[];
        func_230344_a_(arg0: Internal.Structure<any>, arg1: Internal.StructureStart<any>): void;
        func_76632_l(): Internal.ChunkPos;
        func_201589_g(): Internal.ChunkStatus;
        setSkyEmptinessMap(arg0: boolean[]): void;
        getBlockEmptinessMap(): boolean[];
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
        func_177427_f(arg0: boolean): void;
        func_217305_b(arg0: boolean): void;
        func_205218_i_(): Internal.ChunkPrimerTickList<Internal.Block>;
        func_205218_i_(): Internal.ITickList<any>;
        func_76587_i(): Internal.ChunkSection[];
        func_201572_C(): number;
        func_217307_e(): Internal.WorldLightManager;
        func_201609_c(): Internal.Map<Internal.Structure<any>, Internal.StructureStart<any>>;
        func_212247_j(): Internal.ChunkPrimerTickList<Internal.Fluid>;
        func_212247_j(): Internal.ITickList<any>;
        func_230342_a_(arg0: Internal.Structure<any>): Internal.StructureStart<any>;
        func_217304_m(): Internal.Stream<BlockPos>;
        getBlockNibbles(): any[];
        func_225548_a_(arg0: Internal.BiomeContainer): void;
        func_201606_b(arg0: Internal.Map_<Internal.Structure_<any>, Internal.LongSet_>): void;
        func_201607_a(arg0: Internal.Heightmap$Type_, arg1: number[]): void;
        func_201604_d(): Internal.Map<Internal.Structure<any>, Internal.LongSet>;
        func_76612_a(arg0: Internal.Entity): void;
        setSkyNibbles(arg0: any[]): void;
        func_230346_b_(arg0: Internal.Structure<any>): Internal.LongSet;
        func_177432_b(arg0: number): void;
        func_177436_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: boolean): Internal.BlockState;
        func_230343_a_(arg0: Internal.Structure<any>, arg1: number): void;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_201579_g(arg0: BlockPos): Internal.CompoundNBT;
        getSkyNibbles(): any[];
        func_223134_j(arg0: BlockPos): Internal.CompoundNBT;
        setBlockNibbles(arg0: any[]): void;
        get skyNibbles(): any[];
        get skyEmptinessMap(): boolean[];
        get blockEmptinessMap(): boolean[];
        get blockNibbles(): any[];
        set skyNibbles(arg0: any[]);
        set skyEmptinessMap(arg0: boolean[]);
        set blockEmptinessMap(arg0: boolean[]);
        set blockNibbles(arg0: any[]);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkPrimerWrapper_ = ChunkPrimerWrapper;
    abstract class PlayerEntity extends Internal.LivingEntity implements Internal.PlayerKJS {
        func_146097_a(arg0: Internal.ItemStack, arg1: boolean, arg2: boolean): Internal.ItemEntity;
        func_195066_a(arg0: ResourceLocation_): void;
        func_174820_d(arg0: number, arg1: Internal.ItemStack): boolean;
        func_71004_bE(): void;
        func_213357_a(arg0: Internal.World, arg1: Internal.ItemStack): Internal.ItemStack;
        func_180431_b(arg0: Internal.DamageSource): boolean;
        func_230297_ef_(): Internal.ImmutableList<Internal.Pose>;
        func_184193_aE(): Internal.Iterable<Internal.ItemStack>;
        func_226567_ej_(): void;
        func_71059_n(arg0: Internal.Entity): void;
        func_184814_a(arg0: Internal.ItemStack, arg1: Hand_): void;
        func_184810_cG(): void;
        func_82147_ab(): number;
        getSuffixes(): Internal.Collection<Internal.IFormattableTextComponent>;
        func_94059_bO(): boolean;
        func_85040_s(arg0: number): void;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_71024_bL(): Internal.FoodStats;
        func_195070_dx(): boolean;
        func_70103_a(arg0: number): void;
        func_96092_aw(): boolean;
        func_184825_o(arg0: number): number;
        func_213365_e(arg0: Internal.ItemStack): boolean;
        func_226563_dT_(): boolean;
        func_175138_ci(): number;
        func_71029_a(arg0: Internal.Stat<any>): void;
        getPrefixes(): Internal.Collection<Internal.IFormattableTextComponent>;
        static func_234570_el_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_175141_a(arg0: Internal.SignTileEntity): void;
        getStagesKJS(): Internal.Stages;
        func_195065_a(arg0: Internal.Collection<Internal.IRecipe<any>>): number;
        func_175144_cb(): boolean;
        func_184591_cq(): Internal.HandSide;
        func_71050_bK(): number;
        static func_175147_b(arg0: string): Internal.UUID;
        func_71016_p(): void;
        func_184819_a(arg0: Internal.HandSide_): void;
        func_190777_m(arg0: boolean): void;
        func_195069_b(arg0: Internal.Collection<Internal.IRecipe<any>>): number;
        func_70033_W(): number;
        func_184812_l_(): boolean;
        func_96122_a(arg0: Internal.PlayerEntity): boolean;
        func_213305_a(arg0: Internal.Pose_): Internal.EntitySize;
        func_213823_a(arg0: Internal.SoundEvent, arg1: Internal.SoundCategory_, arg2: number, arg3: number): void;
        func_70636_d(): void;
        func_184201_a(arg0: EquipmentSlot_, arg1: Internal.ItemStack): void;
        func_184821_cY(): void;
        func_184818_cX(): number;
        func_71005_bN(): Internal.EnderChestInventory;
        func_175150_k(arg0: boolean): void;
        func_71047_c(arg0: Internal.Entity): void;
        static func_242374_a(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: number, arg3: boolean, arg4: boolean): Internal.Optional<Vec3>;
        func_71043_e(arg0: boolean): boolean;
        func_71009_b(arg0: Internal.Entity): void;
        func_71020_j(arg0: number): void;
        func_225652_a_(arg0: boolean, arg1: boolean): void;
        func_241208_cS_(): boolean;
        func_226568_ek_(): void;
        func_184826_a(arg0: Internal.AbstractHorseEntity, arg1: Internal.IInventory): void;
        refreshDisplayName(): void;
        getForcedPose(): Internal.Pose;
        func_175148_a(arg0: Internal.PlayerModelPart_): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        func_226566_ei_(): boolean;
        func_225609_n_(arg0: boolean): boolean;
        func_195068_e(arg0: number): void;
        func_70071_h_(): void;
        func_70065_x(): void;
        func_213366_dy(): void;
        func_192027_g(arg0: Internal.CompoundNBT): boolean;
        func_71064_a(arg0: Internal.Stat<any>, arg1: number): void;
        func_213826_a(arg0: Internal.JigsawTileEntity): void;
        func_71053_j(): void;
        func_213348_b(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_213295_a(arg0: Internal.BlockState, arg1: Vec3): void;
        func_241209_g_(arg0: number): void;
        func_189807_a(arg0: Internal.StructureBlockTileEntity): void;
        func_71019_a(arg0: Internal.ItemStack, arg1: boolean): Internal.ItemEntity;
        func_175151_a(arg0: BlockPos, arg1: Internal.Direction_, arg2: Internal.ItemStack): boolean;
        func_184214_aD(): Internal.Iterable<Internal.ItemStack>;
        getDigSpeed(arg0: Internal.BlockState, arg1: BlockPos): number;
        func_192025_dl(): Internal.CompoundNBT;
        func_70689_ay(): number;
        func_146105_b(arg0: Internal.ITextComponent_, arg1: boolean): void;
        func_233575_bb_(): void;
        func_71037_bA(): number;
        func_223729_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.GameType_): boolean;
        func_193102_a(arg0: ResourceLocation[]): void;
        func_110139_bj(): number;
        func_70996_bM(): boolean;
        func_175140_cp(): boolean;
        setForcedPose(arg0: Internal.Pose_): void;
        func_70098_U(): void;
        func_234569_d_(arg0: Internal.BlockState): boolean;
        func_96123_co(): Internal.Scoreboard;
        func_184817_da(): number;
        func_213356_f(arg0: Internal.ItemStack): Internal.ItemStack;
        func_200200_C_(): Internal.ITextComponent;
        func_82242_a(arg0: number): void;
        func_71000_j(arg0: number, arg1: number, arg2: number): void;
        func_191521_c(arg0: Internal.ItemStack): boolean;
        func_110149_m(arg0: number): void;
        func_213819_a(arg0: BlockPos): Internal.Either<Internal.PlayerEntity$SleepResult, net.minecraft.util.Unit>;
        func_184176_by(): Internal.SoundCategory;
        func_195067_a(arg0: ResourceLocation_, arg1: number): void;
        func_70664_aZ(): void;
        func_146103_bH(): Internal.GameProfile;
        func_175145_a(arg0: Internal.Stat<any>): void;
        func_192024_a(arg0: Internal.ItemStack, arg1: number): void;
        getStagesRawKJS(): Internal.Stages;
        func_241843_o(arg0: number): Vec3;
        func_145748_c_(): Internal.ITextComponent;
        func_213352_e(arg0: Vec3): void;
        static func_146094_a(arg0: Internal.GameProfile): Internal.UUID;
        remove(arg0: boolean): void;
        func_184811_cZ(): Internal.CooldownTracker;
        func_241847_a(arg0: Internal.ServerWorld, arg1: Internal.LivingEntity): void;
        func_190775_a(arg0: Internal.Entity, arg1: Hand_): Internal.ActionResultType;
        func_195047_I_(): string;
        func_192023_dk(): Internal.CompoundNBT;
        func_205343_av(): void;
        func_175149_v(): boolean;
        func_213829_a(arg0: Internal.INamedContainerProvider): Internal.OptionalInt;
        func_85039_t(arg0: number): void;
        func_184813_a(arg0: Internal.BlockState): number;
        func_203007_ba(): boolean;
        func_82145_z(): number;
        func_184809_a(arg0: Internal.CommandBlockLogic): void;
        func_184185_a(arg0: Internal.SoundEvent, arg1: number, arg2: number): void;
        func_71026_bH(): boolean;
        func_71033_a(arg0: Internal.GameType_): void;
        func_175142_cm(): boolean;
        func_71060_bI(): number;
        func_184582_a(arg0: EquipmentSlot_): Internal.ItemStack;
        func_70645_a(arg0: Internal.DamageSource): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_213818_a(arg0: number, arg1: Internal.MerchantOffers, arg2: number, arg3: number, arg4: boolean, arg5: boolean): void;
        func_184824_a(arg0: Internal.CommandBlockTileEntity): void;
        field_71104_cf : Internal.FishingBobberEntity;
        field_71097_bO : number;
        field_71096_bN : number;
        field_71085_bR : number;
        static readonly field_213835_bs : Internal.EntitySize;
        field_71070_bA : Internal.Container;
        field_71069_bz : Internal.PlayerContainer;
        readonly field_71075_bZ : Internal.PlayerAbilities;
        readonly field_71071_by : Internal.PlayerInventory;
        field_71106_cc : number;
        field_71094_bP : number;
        field_71090_bL : number;
        field_71091_bM : number;
        field_71107_bF : number;
        field_71109_bG : number;
        field_71095_bQ : number;
        field_71068_ca : number;
        field_71067_cb : number;
        static readonly PERSISTED_NBT_TAG : "PlayerPersisted";
        get suffixes(): Internal.Collection<Internal.IFormattableTextComponent>;
        get prefixes(): Internal.Collection<Internal.IFormattableTextComponent>;
        get forcedPose(): Internal.Pose;
        get stagesKJS(): Internal.Stages;
        get stagesRawKJS(): Internal.Stages;
        set forcedPose(arg0: Internal.Pose_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerEntity_ = PlayerEntity;
    class Sound$Type extends Internal.Enum<Internal.Sound$Type> {
        static valueOf(arg0: string): Internal.Sound$Type;
        static values(): Internal.Sound$Type[];
        static func_188704_a(arg0: string): Internal.Sound$Type;
        static readonly SOUND_EVENT : Internal.Sound$Type;
        static readonly FILE : Internal.Sound$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Sound$Type_ = "file" | "sound_event" | Sound$Type;
    class RenderGameOverlayEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getWindow(): Internal.MainWindow;
        getType(): Internal.RenderGameOverlayEvent$ElementType;
        getPartialTicks(): number;
        isCancelable(): boolean;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get window(): Internal.MainWindow;
        get type(): Internal.RenderGameOverlayEvent$ElementType;
        get partialTicks(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderGameOverlayEvent_ = RenderGameOverlayEvent;
    class WantedItemsSensor extends Internal.Sensor<Internal.MobEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WantedItemsSensor_ = WantedItemsSensor;
    class ModifiedToolTier extends Document.Object implements Internal.IItemTier {
        setRepairIngredient(in_: Internal.IngredientJS_): void;
        setSpeed(f: number): void;
        func_200929_c(): number;
        func_200927_e(): number;
        func_200928_b(): number;
        func_200924_f(): Internal.Ingredient;
        func_200925_d(): number;
        func_200926_a(): number;
        setEnchantmentValue(i: number): void;
        setAttackDamageBonus(f: number): void;
        setLevel(i: number): void;
        setUses(i: number): void;
        readonly parent : Internal.IItemTier;
        set repairIngredient(in_: Internal.IngredientJS_);
        set level(i: number);
        set attackDamageBonus(f: number);
        set enchantmentValue(i: number);
        set uses(i: number);
        set speed(f: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModifiedToolTier_ = ModifiedToolTier;
    interface ListLike <T> extends Internal.CustomJavaObjectWrapper {
        wrapAsJavaObject(cx: Internal.Context, scope: Internal.Scriptable, staticType: Internal.Class_<any>): Internal.Scriptable;
        setLL(index: number, value: T): void;
        removeLL(index: number): void;
        clearLL(): void;
        sizeLL(): number;
        getLL(arg0: number): T;
    }
    type ListLike_<T> = ListLike<T>;
    class Raid extends Document.Object {
        func_221301_k(): boolean;
        func_221309_a(arg0: Internal.PlayerEntity): void;
        func_221320_q(): void;
        func_221326_a(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_221321_e(): boolean;
        func_221324_a(arg0: number, arg1: Internal.AbstractRaiderEntity): void;
        static func_221312_H(): Internal.ItemStack;
        func_221306_a(arg0: Internal.Difficulty_): number;
        func_221332_b(arg0: number): Internal.AbstractRaiderEntity;
        func_221311_a(arg0: Internal.Entity): void;
        func_221308_w(): number;
        func_221327_m(): number;
        func_221296_c(arg0: number): void;
        func_221304_t(): BlockPos;
        func_221325_u(): number;
        func_221307_p(): void;
        func_221303_s(): number;
        func_221297_c(): boolean;
        func_221291_n(): number;
        func_221315_l(): number;
        func_221290_r(): number;
        func_221316_i(): Internal.World;
        func_221295_o(): void;
        func_221310_d(): boolean;
        func_221336_f(): boolean;
        func_221319_a(): boolean;
        func_221334_b(): boolean;
        func_221317_a(arg0: number, arg1: Internal.AbstractRaiderEntity, arg2: BlockPos, arg3: boolean): void;
        func_221322_a(arg0: Internal.AbstractRaiderEntity, arg1: boolean): void;
        func_221300_a(arg0: number, arg1: Internal.AbstractRaiderEntity, arg2: boolean): boolean;
        func_221333_v(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Raid_ = Raid;
    abstract class GuiScreenEvent$KeyboardKeyReleasedEvent extends Internal.GuiScreenEvent$KeyboardKeyEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$KeyboardKeyReleasedEvent_ = GuiScreenEvent$KeyboardKeyReleasedEvent;
    class BeeEntity extends Internal.AnimalEntity implements Internal.IAngerable, Internal.IFlyingAnimal {
        func_230256_F__(): number;
        func_70071_h_(): void;
        func_230260_a__(arg0: number): void;
        func_226426_eu_(): void;
        func_70668_bt(): Internal.CreatureAttribute;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_70636_d(): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.BeeEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_230257_G__(): Internal.UUID;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        func_226409_eA_(): boolean;
        func_226455_v_(arg0: number): number;
        func_226413_eG_(): void;
        func_226425_er_(): boolean;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_226411_eD_(): boolean;
        static func_234182_eX_(): Internal.AttributeModifierMap$MutableAttribute;
        func_230258_H__(): void;
        func_226412_eE_(): boolean;
        func_226431_g_(arg0: BlockPos): void;
        func_226424_eq_(): BlockPos;
        func_226410_eB_(): BlockPos;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_241205_ce_(): Vec3;
        func_226450_t_(arg0: number): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_230259_a_(arg0: Internal.UUID): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BeeEntity_ = BeeEntity;
    class ZombieHorseEntity extends Internal.AbstractHorseEntity {
        func_70668_bt(): Internal.CreatureAttribute;
        static func_234256_eJ_(): Internal.AttributeModifierMap$MutableAttribute;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZombieHorseEntity_ = ZombieHorseEntity;
    abstract class MultithreadEventLoopGroup extends Internal.MultithreadEventExecutorGroup implements Internal.EventLoopGroup {
        next(): Internal.EventExecutor;
        next(): Internal.EventLoop;
        register(arg0: io.netty.channel.Channel): Internal.ChannelFuture;
        register(arg0: io.netty.channel.Channel, arg1: Internal.ChannelPromise): Internal.ChannelFuture;
        register(arg0: Internal.ChannelPromise): Internal.ChannelFuture;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MultithreadEventLoopGroup_ = MultithreadEventLoopGroup;
    class DummySensor extends Internal.Sensor<Internal.LivingEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DummySensor_ = DummySensor;
    interface IVertexConsumer extends Internal.IVertexBuilder {
        func_225582_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_227847_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_225592_i_(): Internal.VertexFormatElement;
        func_181667_k(): void;
        func_225587_b_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225589_a_(arg0: number, arg1: number): void;
        func_225585_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225590_a_(arg0: number, arg1: number): void;
        func_225586_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IVertexBuilder;
        func_225591_a_(arg0: number, arg1: number): void;
        func_225583_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225584_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
    }
    type IVertexConsumer_ = IVertexConsumer;
    class ItemFrameEntity extends Internal.HangingEntity {
        func_174812_G(): void;
        func_213297_N(): Internal.IPacket<any>;
        func_174820_d(arg0: number, arg1: Internal.ItemStack): boolean;
        func_174866_q(): number;
        func_70518_d(): boolean;
        func_70112_a(arg0: number): boolean;
        func_213315_a(arg0: Internal.MoverType_, arg1: Vec3): void;
        func_82336_g(arg0: number): void;
        func_82333_j(): number;
        func_82329_d(): number;
        func_82335_i(): Internal.ItemStack;
        func_174864_a(arg0: Internal.ItemStack, arg1: boolean): void;
        func_110128_b(arg0: Internal.Entity): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_70024_g(arg0: number, arg1: number, arg2: number): void;
        func_82334_a(arg0: Internal.ItemStack): void;
        func_82330_g(): number;
        func_70111_Y(): number;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_184523_o(): void;
        func_184230_a(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemFrameEntity_ = ItemFrameEntity;
    interface LongBidirectionalIterable extends Internal.LongIterable {
        iterator(): Internal.LongBidirectionalIterator;
        iterator(): Internal.LongIterator;
        iterator(): Internal.Iterator<any>;
    }
    type LongBidirectionalIterable_ = LongBidirectionalIterable;
    class ShapedRecipeJS extends Internal.RecipeJS {
        serialize(): void;
        noMirror(): Internal.ShapedRecipeJS;
        create(args: Internal.ListJS): void;
        noShrink(): Internal.ShapedRecipeJS;
        deserialize(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShapedRecipeJS_ = ShapedRecipeJS;
    class DecoratedFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        toString(): string;
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_214689_a : (() => Internal.ConfiguredFeature<any, any>);
        static readonly field_236491_a_ : Internal.Codec<Internal.DecoratedFeatureConfig>;
        readonly field_214690_b : Internal.ConfiguredPlacement<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DecoratedFeatureConfig_ = DecoratedFeatureConfig;
    class AttributeModifier extends Document.Object {
        func_111167_a(): Internal.UUID;
        func_111164_d(): number;
        func_111166_b(): string;
        static func_233800_a_(arg0: Internal.CompoundNBT): Internal.AttributeModifier;
        hashCode(): number;
        equals(arg0: any): boolean;
        func_220375_c(): Internal.AttributeModifier$Operation;
        toString(): string;
        func_233801_e_(): Internal.CompoundNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttributeModifier_ = AttributeModifier;
    interface ICapabilityProvider {
        getCapability<T>(arg0: Internal.Capability<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        getCapability<T>(arg0: Internal.Capability<T>): Internal.LazyOptional<T>;
    }
    type ICapabilityProvider_ = ICapabilityProvider;
    class Month extends Internal.Enum<Internal.Month> implements Internal.TemporalAccessor, Internal.TemporalAdjuster {
        minus(arg0: number): Internal.Month;
        firstMonthOfQuarter(): Internal.Month;
        firstDayOfYear(arg0: boolean): number;
        static valueOf(arg0: string): Internal.Month;
        minLength(): number;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        static values(): Internal.Month[];
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        length(arg0: boolean): number;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        isSupported(arg0: Internal.TemporalField): boolean;
        plus(arg0: number): Internal.Month;
        getLong(arg0: Internal.TemporalField): number;
        getValue(): number;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        static of(arg0: number): Internal.Month;
        get(arg0: Internal.TemporalField): number;
        static from(arg0: Internal.TemporalAccessor): Internal.Month;
        maxLength(): number;
        static readonly JANUARY : Internal.Month;
        static readonly JUNE : Internal.Month;
        static readonly MAY : Internal.Month;
        static readonly OCTOBER : Internal.Month;
        static readonly DECEMBER : Internal.Month;
        static readonly MARCH : Internal.Month;
        static readonly FEBRUARY : Internal.Month;
        static readonly AUGUST : Internal.Month;
        static readonly JULY : Internal.Month;
        static readonly SEPTEMBER : Internal.Month;
        static readonly NOVEMBER : Internal.Month;
        static readonly APRIL : Internal.Month;
        get value(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Month_ = "january" | "february" | "march" | "april" | "may" | "june" | "july" | "august" | "september" | "october" | "november" | "december" | Month;
    class BufferBuilder$DrawState extends Document.Object {
        func_227838_a_(): Internal.VertexFormat;
        func_227840_c_(): number;
        func_227839_b_(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BufferBuilder$DrawState_ = BufferBuilder$DrawState;
    class ScorePlayerTeam extends Internal.Team {
        func_96661_b(): string;
        func_186681_k(): Internal.Team$CollisionRule;
        func_96670_d(): Internal.Collection<string>;
        func_96664_a(arg0: Internal.ITextComponent_): void;
        func_98300_b(arg0: boolean): void;
        func_96660_a(arg0: boolean): void;
        static func_237500_a_(arg0: Internal.Team, arg1: Internal.ITextComponent_): Internal.IFormattableTextComponent;
        func_98298_a(arg0: number): void;
        func_178773_b(arg0: Internal.Team$Visible_): void;
        func_207408_a(arg0: Internal.ITextComponent_): void;
        func_178774_a(arg0: Internal.TextFormatting_): void;
        func_207406_e(): Internal.ITextComponent;
        func_178772_a(arg0: Internal.Team$Visible_): void;
        func_207409_b(arg0: Internal.ITextComponent_): void;
        func_207407_f(): Internal.ITextComponent;
        func_98297_h(): boolean;
        func_98299_i(): number;
        func_178771_j(): Internal.Team$Visible;
        func_178770_i(): Internal.Team$Visible;
        func_230427_d_(arg0: Internal.ITextComponent_): Internal.IFormattableTextComponent;
        func_96665_g(): boolean;
        func_237501_d_(): Internal.IFormattableTextComponent;
        func_186682_a(arg0: Internal.Team$CollisionRule_): void;
        func_96669_c(): Internal.ITextComponent;
        func_178775_l(): Internal.TextFormatting;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScorePlayerTeam_ = ScorePlayerTeam;
    class EntityEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getEntity(): Internal.Entity;
        get listenerList(): Internal.ListenerList;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityEvent_ = EntityEvent;
    abstract class GameRules$RuleValue <T> extends Document.Object {
        func_223557_c(): number;
        func_230313_a_(arg0: T, arg1: Internal.MinecraftServer): void;
        toString(): string;
        func_223554_b(arg0: Internal.CommandContext<Internal.CommandSource>, arg1: string): void;
        func_223552_b(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameRules$RuleValue_<T> = GameRules$RuleValue<T>;
    class CRenameItemPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_210351_a(): string;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CRenameItemPacket_ = CRenameItemPacket;
    class JigsawPattern$PlacementBehaviour extends Internal.Enum<Internal.JigsawPattern$PlacementBehaviour> implements Internal.IStringSerializable, Internal.IExtensibleEnum {
        init(): void;
        static valueOf(arg0: string): Internal.JigsawPattern$PlacementBehaviour;
        func_176610_l(): string;
        static values(): Internal.JigsawPattern$PlacementBehaviour[];
        static create(arg0: string, arg1: string, arg2: Internal.ImmutableList<Internal.StructureProcessor>): Internal.JigsawPattern$PlacementBehaviour;
        func_214936_a(): string;
        static func_214938_a(arg0: string): Internal.JigsawPattern$PlacementBehaviour;
        func_214937_b(): Internal.ImmutableList<Internal.StructureProcessor>;
        static readonly TERRAIN_MATCHING : Internal.JigsawPattern$PlacementBehaviour;
        static readonly field_236858_c_ : Internal.Codec<Internal.JigsawPattern$PlacementBehaviour>;
        static readonly RIGID : Internal.JigsawPattern$PlacementBehaviour;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JigsawPattern$PlacementBehaviour_ = "terrain_matching" | "rigid" | JigsawPattern$PlacementBehaviour;
    class SOpenBookWindowPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218746_b(): Hand;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SOpenBookWindowPacket_ = SOpenBookWindowPacket;
    class GiftLootEventJS extends Internal.LootEventJS {
        getType(): string;
        addGift(id: ResourceLocation_, b: ((arg0: Internal.LootBuilder) => void)): void;
        getDirectory(): string;
        get type(): string;
        get directory(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GiftLootEventJS_ = GiftLootEventJS;
    interface VSPartAccess {
        getZSize(): number;
        getYSize(): number;
        getXSize(): number;
    }
    type VSPartAccess_ = VSPartAccess;
    class Team$CollisionRule extends Internal.Enum<Internal.Team$CollisionRule> {
        static valueOf(arg0: string): Internal.Team$CollisionRule;
        static values(): Internal.Team$CollisionRule[];
        static func_186686_a(arg0: string): Internal.Team$CollisionRule;
        func_197907_b(): Internal.ITextComponent;
        static readonly PUSH_OTHER_TEAMS : Internal.Team$CollisionRule;
        static readonly NEVER : Internal.Team$CollisionRule;
        static readonly PUSH_OWN_TEAM : Internal.Team$CollisionRule;
        readonly field_186694_f : number;
        static readonly ALWAYS : Internal.Team$CollisionRule;
        readonly field_186693_e : string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Team$CollisionRule_ = "always" | "never" | "push_other_teams" | "push_own_team" | Team$CollisionRule;
    class TickPriority extends Internal.Enum<Internal.TickPriority> {
        static func_205397_a(arg0: number): Internal.TickPriority;
        static valueOf(arg0: string): Internal.TickPriority;
        static values(): Internal.TickPriority[];
        func_205398_a(): number;
        static readonly EXTREMELY_LOW : Internal.TickPriority;
        static readonly VERY_HIGH : Internal.TickPriority;
        static readonly HIGH : Internal.TickPriority;
        static readonly LOW : Internal.TickPriority;
        static readonly VERY_LOW : Internal.TickPriority;
        static readonly EXTREMELY_HIGH : Internal.TickPriority;
        static readonly NORMAL : Internal.TickPriority;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TickPriority_ = "extremely_high" | "very_high" | "high" | "normal" | "low" | "very_low" | "extremely_low" | TickPriority;
    interface ITagCollectionSupplier extends Internal.IForgeTagCollectionSupplier {
        func_242210_a(arg0: Internal.PacketBuffer): void;
        func_241838_d(): Internal.ITagCollection<Internal.EntityType<any>>;
        func_241837_c(): Internal.ITagCollection<Internal.Fluid>;
        func_241836_b(): Internal.ITagCollection<Internal.Item>;
        func_241835_a(): Internal.ITagCollection<Internal.Block>;
        func_242212_e(): void;
    }
    type ITagCollectionSupplier_ = ITagCollectionSupplier;
    class HandSide extends Internal.Enum<Internal.HandSide> {
        func_233609_b_(): Internal.ITextComponent;
        func_188468_a(): Internal.HandSide;
        static valueOf(arg0: string): Internal.HandSide;
        static values(): Internal.HandSide[];
        toString(): string;
        static readonly LEFT : Internal.HandSide;
        static readonly RIGHT : Internal.HandSide;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HandSide_ = "left" | "right" | HandSide;
    abstract class BlockVoxelShape extends Internal.Enum<Internal.BlockVoxelShape> {
        func_241854_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        static valueOf(arg0: string): Internal.BlockVoxelShape;
        static values(): Internal.BlockVoxelShape[];
        static readonly CENTER : Internal.BlockVoxelShape;
        static readonly FULL : Internal.BlockVoxelShape;
        static readonly RIGID : Internal.BlockVoxelShape;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockVoxelShape_ = "full" | "center" | "rigid" | BlockVoxelShape;
    class SQueryNBTResponsePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_211712_c(): Internal.CompoundNBT;
        func_211713_b(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SQueryNBTResponsePacket_ = SQueryNBTResponsePacket;
    class ItemCameraTransforms extends Document.Object {
        func_181688_b(arg0: Internal.ItemCameraTransforms$TransformType_): Internal.ItemTransformVec3f;
        func_181687_c(arg0: Internal.ItemCameraTransforms$TransformType_): boolean;
        static readonly field_178357_a : Internal.ItemCameraTransforms;
        readonly field_188037_l : Internal.ItemTransformVec3f;
        readonly field_178354_e : Internal.ItemTransformVec3f;
        readonly field_188038_m : Internal.ItemTransformVec3f;
        readonly field_178353_d : Internal.ItemTransformVec3f;
        readonly field_188036_k : Internal.ItemTransformVec3f;
        readonly field_181700_p : Internal.ItemTransformVec3f;
        readonly field_181699_o : Internal.ItemTransformVec3f;
        readonly field_188039_n : Internal.ItemTransformVec3f;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemCameraTransforms_ = ItemCameraTransforms;
    interface VoxelShapes$ILineConsumer {
        consume(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
    }
    type VoxelShapes$ILineConsumer_ = VoxelShapes$ILineConsumer;
    class RecipeItemHelper extends Document.Object {
        func_194118_a(arg0: Internal.IRecipe<any>, arg1: Internal.IntList, arg2: number): boolean;
        func_194119_a(): void;
        func_221264_a(arg0: Internal.ItemStack, arg1: number): void;
        func_195932_a(arg0: Internal.ItemStack): void;
        func_194121_a(arg0: Internal.IRecipe<any>, arg1: number, arg2: Internal.IntList): number;
        func_194112_a(arg0: Internal.ItemStack): void;
        static func_194113_b(arg0: Internal.ItemStack): number;
        func_194114_b(arg0: Internal.IRecipe<any>, arg1: Internal.IntList): number;
        static func_194115_b(arg0: number): Internal.ItemStack;
        func_194116_a(arg0: Internal.IRecipe<any>, arg1: Internal.IntList): boolean;
        readonly field_194124_a : Internal.Int2IntMap;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecipeItemHelper_ = RecipeItemHelper;
    class Minecraft extends Internal.RecursiveEventLoop<Internal.Runnable> implements Internal.ISnooperInfo, Internal.IWindowEventListener, Internal.IForgeMinecraft {
        func_195551_G(): Internal.IResourceManager;
        func_213161_c(pIsDone: (() => boolean)): void;
        func_71398_f(): void;
        static func_238181_a_(arg0: Internal.SaveFormat$LevelSave, arg1: Internal.DynamicRegistries$Impl, arg2: Internal.IResourceManager, arg3: Internal.DatapackCodec): Internal.IServerConfiguration;
        func_213239_aq(): Internal.IProfiler;
        func_238189_a_(arg0: Internal.DynamicRegistries$Impl, arg1: ((arg0: Internal.SaveFormat$LevelSave) => Internal.DatapackCodec), arg2: Internal.Function4<Internal.SaveFormat$LevelSave, Internal.DynamicRegistries$Impl, Internal.IResourceManager, Internal.DatapackCodec, Internal.IServerConfiguration>, arg3: boolean, arg4: Internal.SaveFormat$LevelSave): Internal.Minecraft$PackManager;
        func_189648_am(): boolean;
        func_241558_U_(): Internal.GPUWarning;
        func_110437_J(): Internal.Proxy;
        func_228019_au_(): Internal.RenderTypeBuffers;
        func_135016_M(): Internal.LanguageManager;
        func_213263_ao(): Internal.PaintingSpriteUploader;
        func_213248_ap(): Internal.PotionSpriteUploader;
        func_175606_aa(): Internal.Entity;
        func_175598_ae(): Internal.EntityRendererManager;
        func_71356_B(): boolean;
        func_71405_e(): void;
        func_213237_g(): Internal.CompletableFuture<void>;
        func_212871_a_(arg0: any): void;
        static func_71379_u(): boolean;
        func_241562_c_(arg0: Internal.Screen): void;
        static func_71375_t(): boolean;
        func_230151_c_(): boolean;
        func_181539_aj(): Internal.FrameTimer;
        func_147108_a(arg0: Internal.Screen): void;
        func_238192_a_(arg0: string, arg1: Internal.WorldSettings, arg2: Internal.DynamicRegistries$Impl, arg3: Internal.DimensionGeneratorSettings): void;
        func_184126_aj(): Internal.DataFixer;
        func_147111_S(): boolean;
        func_71387_A(): boolean;
        func_175600_c(): string;
        func_228025_l_(): boolean;
        func_193989_ak(): number;
        func_241216_b_(): void;
        func_238216_r_(): boolean;
        func_71401_C(): Internal.IntegratedServer;
        func_213245_w(): Internal.CompletableFuture<void>;
        func_195544_aj(): boolean;
        func_110434_K(): Internal.TextureManager;
        func_213269_at(): Internal.Splashes;
        func_184125_al(): Internal.BlockColors;
        func_228020_b_(arg0: number): void;
        func_147104_D(): Internal.ServerData;
        close(): void;
        func_193986_ar(): void;
        func_211821_e(): boolean;
        func_238198_a_(arg0: Internal.UUID): boolean;
        func_181540_al(): boolean;
        func_195548_H(): Internal.ResourcePackList;
        func_152342_ad(): Internal.SkinManager;
        func_181535_r(): Internal.MusicTicker;
        func_175599_af(): Internal.ItemRenderer;
        func_184119_a(arg0: Internal.ItemStack, arg1: Internal.TileEntity): Internal.ItemStack;
        func_193033_an(): Internal.ToastGui;
        func_213268_a(arg0: Internal.LoadingGui): void;
        func_213226_a(): void;
        func_71396_d(arg0: Internal.CrashReport): Internal.CrashReport;
        static func_228009_a_(arg0: Internal.LanguageManager, arg1: string, arg2: Internal.GameSettings, arg3: Internal.CrashReport): void;
        func_238191_a_(arg0: string): void;
        func_99999_d(): void;
        func_175607_a(arg0: Internal.Entity): void;
        func_213250_au(): Internal.LoadingGui;
        func_175602_ab(): Internal.BlockRendererDispatcher;
        func_181037_M(): Internal.PropertyMap;
        func_228015_a_(arg0: ResourceLocation_): Internal.Function<ResourceLocation, Internal.TextureAtlasSprite>;
        func_184123_d(): string;
        func_71385_j(arg0: boolean): void;
        func_213229_ar(): Internal.MinecraftGame;
        func_213253_a<T_>(arg0: Internal.SearchTreeManager$Key<T_>): Internal.IMutableSearchTree<T_>;
        static func_71410_x(): Internal.Minecraft;
        func_70000_a(arg0: Internal.Snooper): void;
        func_152347_ac(): Internal.MinecraftSessionService;
        func_213254_o(): void;
        func_195541_I(): Internal.DownloadingPackFinder;
        func_71403_a(arg0: Internal.ClientWorld): void;
        func_238206_b_(arg0: Internal.Entity): boolean;
        func_228018_at_(): Internal.MainWindow;
        func_230150_b_(): void;
        func_244599_aA(): Internal.FilterManager;
        static func_238218_y_(): boolean;
        func_195549_J(): Internal.File;
        func_243208_a(arg0: Internal.Throwable, arg1: Internal.ITextComponent_): void;
        func_147113_T(): boolean;
        func_71407_l(): void;
        func_175597_ag(): Internal.FirstPersonRenderer;
        getItemColors(): Internal.ItemColors;
        static func_71377_b(arg0: Internal.CrashReport): void;
        func_213228_a(arg0: boolean): void;
        func_71351_a(arg0: Internal.ServerData): void;
        func_147114_u(): Internal.ClientPlayNetHandler;
        func_238178_U_(): Internal.BackgroundMusicSelector;
        func_238217_s_(): boolean;
        static func_71382_s(): boolean;
        getSearchTreeManager(): Internal.SearchTreeManager;
        func_110432_I(): Internal.Session;
        func_184121_ak(): number;
        func_71378_E(): Internal.Snooper;
        func_213231_b(arg0: Internal.Screen): void;
        func_193032_ao(): Internal.Tutorial;
        func_209506_al(): Internal.ModelManager;
        func_181537_a(arg0: boolean): void;
        func_147118_V(): Internal.SoundHandler;
        func_71400_g(): void;
        func_71355_q(): boolean;
        func_147110_a(): Internal.Framebuffer;
        func_71404_a(arg0: Internal.CrashReport): void;
        func_199403_al(): Internal.CreativeSettings;
        static func_238180_a_(arg0: Internal.SaveFormat$LevelSave): Internal.DatapackCodec;
        func_71359_d(): Internal.SaveFormat;
        func_228017_as_(): boolean;
        readonly field_71452_i : Internal.ParticleManager;
        field_228004_B_ : boolean;
        static readonly field_211502_b : ResourceLocation;
        field_228005_C_ : boolean;
        static readonly field_142025_a : false;
        field_175612_E : boolean;
        field_193996_ah : number;
        field_175622_Z : Internal.Entity;
        field_147125_j : Internal.Entity;
        static readonly field_71464_q : ResourceLocation;
        readonly field_71460_t : Internal.GameRenderer;
        field_71462_r : Internal.Screen;
        readonly field_184132_p : Internal.DebugRenderer;
        readonly field_71446_o : Internal.TextureManager;
        readonly field_71466_p : Internal.FontRenderer;
        readonly field_195559_v : Internal.KeyboardListener;
        readonly field_71412_D : Internal.File;
        readonly field_71417_B : Internal.MouseHelper;
        field_71441_e : Internal.ClientWorld;
        field_213279_p : Internal.LoadingGui;
        field_71442_b : Internal.PlayerController;
        static field_71444_a : number[];
        static readonly field_238177_c_ : ResourceLocation;
        field_71476_x : Internal.RayTraceResult;
        field_71454_w : boolean;
        readonly field_71456_v : Internal.IngameGui;
        readonly field_71474_y : Internal.GameSettings;
        readonly field_181542_y : Internal.FrameTimer;
        field_71439_g : Internal.ClientPlayerEntity;
        readonly field_71438_f : Internal.WorldRenderer;
        field_71426_K : string;
        get itemColors(): Internal.ItemColors;
        get searchTreeManager(): Internal.SearchTreeManager;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Minecraft_ = Minecraft;
    abstract class DamagingProjectileEntity extends Internal.ProjectileEntity {
        func_213297_N(): Internal.IPacket<any>;
        func_70067_L(): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70071_h_(): void;
        func_70112_a(arg0: number): boolean;
        func_70111_Y(): number;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_70013_c(): number;
        field_70233_c : number;
        field_70232_b : number;
        field_70230_d : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DamagingProjectileEntity_ = DamagingProjectileEntity;
    interface ISelectionContext extends Internal.IForgeSelectionContext {
        func_216375_a(arg0: Internal.Item): boolean;
        func_216378_a(arg0: Internal.VoxelShape, arg1: BlockPos, arg2: boolean): boolean;
        func_230426_a_(arg0: Internal.FluidState, arg1: Internal.FlowingFluid): boolean;
        func_225581_b_(): boolean;
    }
    type ISelectionContext_ = ISelectionContext;
    interface Thread$UncaughtExceptionHandler {
        uncaughtException(arg0: Internal.Thread, arg1: Internal.Throwable): void;
    }
    type Thread$UncaughtExceptionHandler_ = ((arg0: Internal.Thread, arg1: Internal.Throwable) => void) | Thread$UncaughtExceptionHandler;
    class ItemEntityInteractEventJS extends Internal.PlayerEventJS {
        getTarget(): Internal.EntityJS;
        getHand(): Hand;
        getItem(): Internal.ItemStackJS;
        getEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get item(): Internal.ItemStackJS;
        get entity(): Internal.EntityJS;
        get target(): Internal.EntityJS;
        get hand(): Hand;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemEntityInteractEventJS_ = ItemEntityInteractEventJS;
    class Properties extends Internal.Hashtable<any, any> {
        getOrDefault(arg0: any, arg1: any): any;
        loadFromXML(arg0: Internal.InputStream): void;
        keys(): Internal.Enumeration<any>;
        computeIfAbsent(arg0: any, arg1: ((arg0: any) => any)): any;
        values(): Internal.Collection<any>;
        save(arg0: Internal.OutputStream, arg1: string): void;
        replace(arg0: any, arg1: any): any;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replaceAll(arg0: ((arg0: any, arg1: any) => any)): void;
        containsValue(arg0: any): boolean;
        put(arg0: any, arg1: any): any;
        remove(arg0: any): any;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: any, arg1: ((arg0: any, arg1: any) => any)): any;
        load(arg0: Internal.Reader): void;
        load(arg0: Internal.InputStream): void;
        hashCode(): number;
        putAll(arg0: Internal.Map_<any, any>): void;
        merge(arg0: any, arg1: any, arg2: ((arg0: any, arg1: any) => any)): any;
        get(arg0: any): any;
        keySet(): Internal.Set<any>;
        getProperty(arg0: string): string;
        getProperty(arg0: string, arg1: string): string;
        entrySet(): Internal.Set<Internal.Map$Entry<any, any>>;
        containsKey(arg0: any): boolean;
        forEach(arg0: ((arg0: any, arg1: any) => void)): void;
        stringPropertyNames(): Internal.Set<string>;
        isEmpty(): boolean;
        clear(): void;
        store(arg0: Internal.OutputStream, arg1: string): void;
        store(arg0: Internal.Writer, arg1: string): void;
        list(arg0: Internal.PrintStream): void;
        list(arg0: Internal.PrintWriter): void;
        storeToXML(arg0: Internal.OutputStream, arg1: string, arg2: string): void;
        storeToXML(arg0: Internal.OutputStream, arg1: string, arg2: Internal.Charset): void;
        storeToXML(arg0: Internal.OutputStream, arg1: string): void;
        contains(arg0: any): boolean;
        computeIfPresent(arg0: any, arg1: ((arg0: any, arg1: any) => any)): any;
        size(): number;
        propertyNames(): Internal.Enumeration<any>;
        setProperty(arg0: string, arg1: string): any;
        elements(): Internal.Enumeration<any>;
        equals(arg0: any): boolean;
        clone(): any;
        toString(): string;
        putIfAbsent(arg0: any, arg1: any): any;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Properties_ = Properties;
    class SnowGolemEntity extends Internal.GolemEntity implements Internal.IShearable, Internal.IRangedAttackMob, Internal.IForgeShearable {
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        func_184748_o(): boolean;
        static func_234226_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_184747_a(arg0: boolean): void;
        func_230262_K__(): boolean;
        func_230263_a_(arg0: Internal.SoundCategory_): void;
        isShearable(arg0: Internal.ItemStack, arg1: Internal.World, arg2: BlockPos): boolean;
        onSheared(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack, arg2: Internal.World, arg3: BlockPos, arg4: number): Internal.List<Internal.ItemStack>;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_241205_ce_(): Vec3;
        func_70636_d(): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_230270_dK_(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SnowGolemEntity_ = SnowGolemEntity;
    class TrunkVineTreeDecorator extends Internal.TreeDecorator {
        func_225576_a_(arg0: Internal.ISeedReader, arg1: Internal.Random, arg2: Internal.List<BlockPos>, arg3: Internal.List<BlockPos>, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox): void;
        static readonly field_236879_b_ : Internal.TrunkVineTreeDecorator;
        static readonly field_236878_a_ : Internal.Codec<Internal.TrunkVineTreeDecorator>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TrunkVineTreeDecorator_ = TrunkVineTreeDecorator;
    interface IResource extends Internal.Closeable {
        func_199028_a<T_>(arg0: Internal.IMetadataSectionSerializer<T_>): T_;
        func_199027_b(): Internal.InputStream;
        func_199029_a(): ResourceLocation;
        func_199026_d(): string;
    }
    type IResource_ = IResource;
    class SCombatPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        field_179774_b : number;
        field_179772_d : number;
        field_179776_a : Internal.SCombatPacket$Event;
        field_179775_c : number;
        field_179773_e : Internal.ITextComponent;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SCombatPacket_ = SCombatPacket;
    interface LongCollection extends Internal.Collection<number>, Internal.LongIterable {
        add(arg0: number): boolean;
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        removeAll(arg0: Internal.LongCollection): boolean;
        contains(arg0: any): boolean;
        contains(arg0: number): boolean;
        iterator(): Internal.LongIterator;
        iterator(): Internal.Iterator<any>;
        toLongArray(): number[];
        toLongArray(arg0: number[]): number[];
        addAll(arg0: Internal.LongCollection): boolean;
        containsAll(arg0: Internal.LongCollection): boolean;
        toArray(arg0: number[]): number[];
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.LongCollection): boolean;
        removeIf(arg0: ((arg0: number) => boolean)): boolean;
        removeIf(arg0: ((arg0: number) => boolean)): boolean;
    }
    type LongCollection_ = LongCollection;
    interface IPaperChunkHolder {
        mfix$canAdvanceStatus(): boolean;
    }
    type IPaperChunkHolder_ = IPaperChunkHolder;
    class NativeImage$PixelFormat extends Internal.Enum<Internal.NativeImage$PixelFormat> {
        func_211653_r(): boolean;
        func_211648_n(): number;
        func_211656_b(): void;
        static valueOf(arg0: string): Internal.NativeImage$PixelFormat;
        static values(): Internal.NativeImage$PixelFormat[];
        func_211658_c(): void;
        func_211654_w(): boolean;
        func_211647_v(): number;
        func_211645_i(): boolean;
        func_211651_a(): number;
        func_211650_d(): number;
        static readonly LUMINANCE_ALPHA : Internal.NativeImage$PixelFormat;
        static readonly RGBA : Internal.NativeImage$PixelFormat;
        static readonly LUMINANCE : Internal.NativeImage$PixelFormat;
        static readonly RGB : Internal.NativeImage$PixelFormat;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NativeImage$PixelFormat_ = "rgba" | "rgb" | "luminance_alpha" | "luminance" | NativeImage$PixelFormat;
    interface ValueLayout$OfFloat extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfFloat;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfFloat;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.ValueLayout$OfFloat;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfFloat;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfFloat_ = ValueLayout$OfFloat;
    interface IGuiIngredientGroup <T> {
        init(arg0: number, arg1: boolean, arg2: number, arg3: number): void;
        init(arg0: number, arg1: boolean, arg2: Internal.IIngredientRenderer<T>, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): void;
        set(arg0: Internal.IIngredients): void;
        set(arg0: number, arg1: Internal.List<T>): void;
        set(arg0: number, arg1: T): void;
        getGuiIngredients(): Internal.Map<number, Internal.IGuiIngredient<T>>;
        addTooltipCallback(arg0: ((arg0: number, arg1: boolean, arg2: T, arg3: Internal.List<Internal.ITextComponent>) => void)): void;
        setOverrideDisplayFocus(arg0: Internal.IFocus<T>): void;
        setBackground(arg0: number, arg1: Internal.IDrawable): void;
    }
    type IGuiIngredientGroup_<T> = IGuiIngredientGroup<T>;
    class ParticleManager extends Document.Object implements Internal.IFutureReloadListener, Internal.ParticleEngineAccessor {
        func_78870_a(arg0: Internal.ClientWorld): void;
        func_199281_a(arg0: Internal.Entity, arg1: Internal.IParticleData, arg2: number): void;
        func_199280_a(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.Particle;
        func_199283_a<T_>(arg0: Internal.ParticleType<T_>, arg1: Internal.IParticleFactory<T_>): void;
        func_199282_a(arg0: Internal.Entity, arg1: Internal.IParticleData): void;
        getTextureAtlas(): Internal.AtlasTexture;
        func_78873_a(arg0: Internal.Particle): void;
        renderParticles(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer$Impl, arg2: Internal.LightTexture, arg3: Internal.ActiveRenderInfo, arg4: number, arg5: Internal.ClippingHelper): void;
        func_215234_a<T_>(arg0: Internal.ParticleType<T_>, arg1: ((arg0: Internal.IAnimatedSprite) => Internal.IParticleFactory<T>)): void;
        func_215232_a(): void;
        func_78869_b(): string;
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor, arg5: Internal.Executor): Internal.CompletableFuture<void>;
        func_78868_a(): void;
        addBlockHitEffects(arg0: BlockPos, arg1: Internal.BlockRayTraceResult): void;
        func_228345_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer$Impl, arg2: Internal.LightTexture, arg3: Internal.ActiveRenderInfo, arg4: number): void;
        func_180533_a(arg0: BlockPos, arg1: Internal.BlockState): void;
        func_180532_a(arg0: BlockPos, arg1: Internal.Direction_): void;
        get textureAtlas(): Internal.AtlasTexture;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ParticleManager_ = ParticleManager;
    interface IntBinaryOperator {
        applyAsInt(arg0: number, arg1: number): number;
    }
    type IntBinaryOperator_ = ((arg0: number, arg1: number) => number) | IntBinaryOperator;
    class SConfirmTransactionPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148889_c(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148888_e(): boolean;
        func_148890_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SConfirmTransactionPacket_ = SConfirmTransactionPacket;
    class CombatTracker extends Document.Object {
        func_180135_h(): Internal.LivingEntity;
        func_94547_a(arg0: Internal.DamageSource, arg1: number, arg2: number): void;
        func_180134_f(): number;
        func_94545_a(): void;
        func_94549_h(): void;
        func_94550_c(): Internal.LivingEntity;
        func_151521_b(): Internal.ITextComponent;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CombatTracker_ = CombatTracker;
    class ServerData$ServerResourceMode extends Internal.Enum<Internal.ServerData$ServerResourceMode> {
        func_152589_a(): Internal.ITextComponent;
        static valueOf(arg0: string): Internal.ServerData$ServerResourceMode;
        static values(): Internal.ServerData$ServerResourceMode[];
        static readonly DISABLED : Internal.ServerData$ServerResourceMode;
        static readonly PROMPT : Internal.ServerData$ServerResourceMode;
        static readonly ENABLED : Internal.ServerData$ServerResourceMode;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerData$ServerResourceMode_ = "enabled" | "disabled" | "prompt" | ServerData$ServerResourceMode;
    class TileEntityType <T> extends Internal.ForgeRegistryEntry<Internal.TileEntityType<any>> {
        func_226986_a_(arg0: Internal.IBlockReader, arg1: BlockPos): T;
        static func_200969_a(arg0: Internal.TileEntityType<any>): ResourceLocation;
        func_223045_a(arg0: Internal.Block): boolean;
        func_200968_a(): T;
        getTags(): Internal.Set<ResourceLocation>;
        isIn(arg0: Internal.ITag<Internal.TileEntityType<any>>): boolean;
        static readonly field_200994_y : Internal.TileEntityType<Internal.BedTileEntity>;
        static readonly field_222488_F : Internal.TileEntityType<Internal.CampfireTileEntity>;
        static readonly field_200987_r : Internal.TileEntityType<Internal.HopperTileEntity>;
        static readonly field_222487_E : Internal.TileEntityType<Internal.JigsawTileEntity>;
        static readonly field_200986_q : Internal.TileEntityType<Internal.DaylightDetectorTileEntity>;
        static readonly field_222486_D : Internal.TileEntityType<Internal.BellTileEntity>;
        static readonly field_200985_p : Internal.TileEntityType<Internal.SkullTileEntity>;
        static readonly field_222485_C : Internal.TileEntityType<Internal.LecternTileEntity>;
        static readonly field_200984_o : Internal.TileEntityType<Internal.BeaconTileEntity>;
        static readonly field_222484_B : Internal.TileEntityType<Internal.BlastFurnaceTileEntity>;
        static readonly field_200983_n : Internal.TileEntityType<Internal.EndPortalTileEntity>;
        static readonly field_200982_m : Internal.TileEntityType<Internal.EnchantingTableTileEntity>;
        static readonly field_222483_A : Internal.TileEntityType<Internal.SmokerTileEntity>;
        static readonly field_200981_l : Internal.TileEntityType<Internal.BrewingStandTileEntity>;
        static readonly field_222489_z : Internal.TileEntityType<Internal.BarrelTileEntity>;
        static readonly field_200980_k : Internal.TileEntityType<Internal.PistonTileEntity>;
        static readonly field_205166_z : Internal.TileEntityType<Internal.ConduitTileEntity>;
        static readonly field_200974_e : Internal.TileEntityType<Internal.EnderChestTileEntity>;
        static readonly field_200973_d : Internal.TileEntityType<Internal.TrappedChestTileEntity>;
        static readonly field_200972_c : Internal.TileEntityType<Internal.ChestTileEntity>;
        static readonly field_200971_b : Internal.TileEntityType<Internal.FurnaceTileEntity>;
        static readonly field_226985_G_ : Internal.TileEntityType<Internal.BeehiveTileEntity>;
        static readonly field_200989_t : Internal.TileEntityType<Internal.BannerTileEntity>;
        static readonly field_200988_s : Internal.TileEntityType<Internal.ComparatorTileEntity>;
        static readonly field_200993_x : Internal.TileEntityType<Internal.ShulkerBoxTileEntity>;
        static readonly field_200992_w : Internal.TileEntityType<Internal.CommandBlockTileEntity>;
        static readonly field_200991_v : Internal.TileEntityType<Internal.EndGatewayTileEntity>;
        static readonly field_200990_u : Internal.TileEntityType<Internal.StructureBlockTileEntity>;
        static readonly field_200979_j : Internal.TileEntityType<Internal.MobSpawnerTileEntity>;
        field_223046_I : Internal.Set<Internal.Block>;
        static readonly field_200978_i : Internal.TileEntityType<Internal.SignTileEntity>;
        static readonly field_200977_h : Internal.TileEntityType<Internal.DropperTileEntity>;
        static readonly field_200976_g : Internal.TileEntityType<Internal.DispenserTileEntity>;
        static readonly field_200975_f : Internal.TileEntityType<Internal.JukeboxTileEntity>;
        get tags(): Internal.Set<ResourceLocation>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TileEntityType_<T> = TileEntityType<T>;
    interface VoxelShapeAccess {
        setFaces(arg0: Internal.VoxelShape[]): void;
        getFaces(): Internal.VoxelShape[];
        getShape(): Internal.VoxelShapePart;
        setShape(arg0: Internal.VoxelShapePart): void;
    }
    type VoxelShapeAccess_ = VoxelShapeAccess;
    interface IPosRuleTests <P> {
        codec(): Internal.Codec<P>;
    }
    type IPosRuleTests_<P> = IPosRuleTests<P>;
    interface IChestLid {
        func_195480_a(arg0: number): number;
    }
    type IChestLid_ = IChestLid;
    class CommandSource extends Document.Object implements Internal.ISuggestionProvider, Internal.CommandSourceStackAccess {
        func_197010_l(): Internal.Collection<ResourceLocation>;
        func_197012_k(): Internal.Collection<string>;
        func_197034_c(arg0: number): boolean;
        func_199612_m(): Internal.Stream<ResourceLocation>;
        func_197038_a(arg0: Internal.CommandContext<Internal.CommandSource>, arg1: boolean, arg2: number): void;
        func_197037_c(): string;
        func_197036_d(): Vec3;
        func_201010_a(arg0: Internal.EntityAnchorArgument$Type_): Internal.CommandSource;
        func_197035_h(): Internal.ServerPlayerEntity;
        func_197011_j(): Internal.Collection<string>;
        func_197019_b(): Internal.ITextComponent;
        func_209550_a(arg0: ((arg0: Internal.CommandContext<S>, arg1: boolean, arg2: number) => void), arg1: Internal.BinaryOperator<((arg0: Internal.CommandContext<S>, arg1: boolean, arg2: number) => void)>): Internal.CommandSource;
        func_201004_i(): Internal.Vector2f;
        func_201005_b(arg0: Vec3): Internal.CommandSource;
        func_201006_a(arg0: Internal.Entity, arg1: Internal.EntityAnchorArgument$Type_): Internal.CommandSource;
        func_197021_a(arg0: Internal.ITextComponent_): void;
        func_201007_a(arg0: Internal.Vector2f): Internal.CommandSource;
        func_201009_a(arg0: Vec3): Internal.CommandSource;
        func_201008_k(): Internal.EntityAnchorArgument$Type;
        func_197027_g(): Internal.Entity;
        func_197028_i(): Internal.MinecraftServer;
        func_197024_a(arg0: Internal.Entity): Internal.CommandSource;
        func_201003_a(arg0: Internal.ServerWorld): Internal.CommandSource;
        func_197023_e(): Internal.ServerWorld;
        func_197022_f(): Internal.Entity;
        func_197026_b(arg0: number): Internal.CommandSource;
        func_197029_a(arg0: ((arg0: Internal.CommandContext<S>, arg1: boolean, arg2: number) => void)): Internal.CommandSource;
        func_197009_a(arg0: Internal.CommandContext<Internal.ISuggestionProvider>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        func_241861_q(): Internal.DynamicRegistries;
        func_197030_a(arg0: Internal.ITextComponent_, arg1: boolean): void;
        func_230390_p_(): Internal.Set<Internal.RegistryKey<Internal.World>>;
        func_197031_a(): Internal.CommandSource;
        getSource(): Internal.ICommandSource;
        func_197033_a(arg0: number): Internal.CommandSource;
        static readonly field_197040_b : Internal.SimpleCommandExceptionType;
        static readonly field_197039_a : Internal.SimpleCommandExceptionType;
        get source(): Internal.ICommandSource;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandSource_ = CommandSource;
    class RecipeTypeJS extends Document.Object {
        getMod(): string;
        hashCode(): number;
        equals(obj: any): boolean;
        isCustom(): boolean;
        getId(): string;
        toString(): string;
        getIdRL(): ResourceLocation;
        readonly factory : (() => Internal.RecipeJS);
        readonly serializer : Internal.IRecipeSerializer<any>;
        get mod(): string;
        get idRL(): ResourceLocation;
        get custom(): boolean;
        get id(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecipeTypeJS_ = RecipeTypeJS;
    class LootType <T> extends Document.Object {
        func_237408_a_(): Internal.ILootSerializer<T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootType_<T> = LootType<T>;
    class ChunkStatus$Type extends Internal.Enum<Internal.ChunkStatus$Type> {
        static valueOf(arg0: string): Internal.ChunkStatus$Type;
        static values(): Internal.ChunkStatus$Type[];
        static readonly LEVELCHUNK : Internal.ChunkStatus$Type;
        static readonly PROTOCHUNK : Internal.ChunkStatus$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkStatus$Type_ = "protochunk" | "levelchunk" | ChunkStatus$Type;
    class RenderGameOverlayEvent$Post extends Internal.RenderGameOverlayEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderGameOverlayEvent$Post_ = RenderGameOverlayEvent$Post;
    interface DebuggableObject {
        getAllIds(): any[];
    }
    type DebuggableObject_ = DebuggableObject;
    class WrapFactory extends Document.Object {
        wrapAsJavaObject(cx: Internal.Context, scope: Internal.Scriptable, javaObject: any, staticType: Internal.Class_<any>): Internal.Scriptable;
        wrapJavaClass(cx: Internal.Context, scope: Internal.Scriptable, javaClass: Internal.Class_<any>): Internal.Scriptable;
        setJavaPrimitiveWrap(value: boolean): void;
        isJavaPrimitiveWrap(): boolean;
        wrap(cx: Internal.Context, scope: Internal.Scriptable, obj: any, staticType: Internal.Class_<any>): any;
        wrapNewObject(cx: Internal.Context, scope: Internal.Scriptable, obj: any): Internal.Scriptable;
        get javaPrimitiveWrap(): boolean;
        set javaPrimitiveWrap(value: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WrapFactory_ = WrapFactory;
    class ClassFileFormatVersion extends Internal.Enum<Internal.ClassFileFormatVersion> {
        runtimeVersion(): Internal.Runtime$Version;
        major(): number;
        static valueOf(arg0: string): Internal.ClassFileFormatVersion;
        static valueOf(arg0: Internal.Runtime$Version): Internal.ClassFileFormatVersion;
        static fromMajor(arg0: number): Internal.ClassFileFormatVersion;
        static values(): Internal.ClassFileFormatVersion[];
        static latest(): Internal.ClassFileFormatVersion;
        static readonly RELEASE_15 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_16 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_17 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_18 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_11 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_12 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_13 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_14 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_20 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_10 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_21 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_9 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_8 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_7 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_6 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_5 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_4 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_3 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_2 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_1 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_0 : Internal.ClassFileFormatVersion;
        static readonly RELEASE_19 : Internal.ClassFileFormatVersion;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClassFileFormatVersion_ = "release_0" | "release_1" | "release_2" | "release_3" | "release_4" | "release_5" | "release_6" | "release_7" | "release_8" | "release_9" | "release_10" | "release_11" | "release_12" | "release_13" | "release_14" | "release_15" | "release_16" | "release_17" | "release_18" | "release_19" | "release_20" | "release_21" | ClassFileFormatVersion;
    interface ValueLayout$OfInt extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfInt;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfInt;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.ValueLayout$OfInt;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfInt;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfInt_ = ValueLayout$OfInt;
    class ServerWorld extends Internal.World implements Internal.ISeedReader, Internal.IForgeWorldServer, Internal.ISafeBlockGetter, Internal.IServerLevel, Internal.ExtendedWorld {
        func_184163_y(): Internal.TemplateManager;
        getChunkAtImmediately(arg0: number, arg1: number): Internal.Chunk;
        func_217461_a(arg0: Internal.UUID): Internal.Entity;
        func_241109_A_(): boolean;
        func_217484_g(arg0: Internal.Entity): void;
        func_217446_a(arg0: Internal.ServerPlayerEntity): void;
        removePlayer(arg0: Internal.ServerPlayerEntity, arg1: boolean): void;
        func_85176_s(): Internal.Teleporter;
        func_225604_a_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_195600_a<T_>(arg0: Internal.ServerPlayerEntity, arg1: T_, arg2: boolean, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number): boolean;
        func_184148_a(arg0: Internal.PlayerEntity, arg1: number, arg2: number, arg3: number, arg4: Internal.SoundEvent, arg5: Internal.SoundCategory_, arg6: number, arg7: number): void;
        func_217455_d_(arg0: BlockPos): boolean;
        mfix$getStrongholdCache(): Internal.StrongholdLocationCache;
        func_217439_j(): Internal.List<Internal.EnderDragonEntity>;
        removeEntityComplete(arg0: Internal.Entity, arg1: boolean): void;
        func_241113_a_(arg0: number, arg1: number, arg2: boolean, arg3: boolean): void;
        func_211158_j_(): boolean;
        func_217469_z(): Internal.LongSet;
        static func_241121_a_(arg0: Internal.ServerWorld): void;
        func_222887_a(arg0: Internal.SectionPos): boolean;
        func_72905_C(): number;
        func_230487_a_(arg0: Internal.Direction_, arg1: boolean): number;
        func_241124_a__(arg0: BlockPos, arg1: number): void;
        func_217434_e(arg0: Internal.ServerPlayerEntity): void;
        func_201672_e(): Internal.ServerWorld;
        getAnyChunkImmediately(arg0: number, arg1: number): Internal.IChunk;
        func_217393_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.BlockState): void;
        func_217378_a(arg0: Internal.PlayerEntity, arg1: number, arg2: BlockPos, arg3: number): void;
        func_241112_a_(): Internal.StructureManager;
        func_217489_a(arg0: Internal.IReputationType, arg1: Internal.Entity, arg2: Internal.IReputationTracking): void;
        func_217395_y(): number;
        func_217466_a(arg0: Internal.Chunk): void;
        func_217447_b(arg0: Internal.ServerPlayerEntity): void;
        func_230547_a_(arg0: BlockPos, arg1: Internal.Block): void;
        func_175669_a(arg0: number, arg1: BlockPos, arg2: number): void;
        func_73046_m(): Internal.MinecraftServer;
        func_242106_g(arg0: Internal.Entity): boolean;
        func_72854_c(): void;
        func_72835_b(arg0: (() => boolean)): void;
        func_73045_a(arg0: number): Internal.Entity;
        func_217435_c(arg0: Internal.ServerPlayerEntity): void;
        func_195598_a<T_>(arg0: T_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): number;
        removeEntity(arg0: Internal.Entity, arg1: boolean): void;
        func_217458_b(arg0: number, arg1: number, arg2: boolean): boolean;
        func_229854_a_(arg0: Internal.MutableBoundingBox): void;
        func_217483_b_(arg0: BlockPos): boolean;
        func_184138_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.BlockState, arg3: number): void;
        func_205772_D(): Internal.ITagCollectionSupplier;
        func_175660_a(arg0: Internal.PlayerEntity, arg1: BlockPos): boolean;
        toString(): string;
        func_217481_x(): Internal.DimensionSavedDataManager;
        func_217482_a(arg0: Internal.EntityType<any>, arg1: ((arg0: Internal.Entity) => boolean)): Internal.List<Internal.Entity>;
        func_241114_a_(arg0: number): void;
        func_217486_a(arg0: Internal.SectionPos): number;
        mfix$getSafeBlockGetter(): Internal.SafeBlockGetter;
        func_242107_v(): number;
        func_175641_c(arg0: BlockPos, arg1: Internal.Block, arg2: number, arg3: number): void;
        func_217440_f(arg0: Internal.Entity): boolean;
        func_96441_U(): Internal.ServerScoreboard;
        func_96441_U(): Internal.Scoreboard;
        func_217406_a(arg0: string): Internal.MapData;
        func_217384_a(arg0: Internal.PlayerEntity, arg1: Internal.Entity, arg2: Internal.SoundEvent, arg3: Internal.SoundCategory_, arg4: number, arg5: number): void;
        func_241827_a(arg0: Internal.SectionPos, arg1: Internal.Structure<any>): Internal.Stream<Internal.StructureStart<any>>;
        func_241123_a_(arg0: boolean, arg1: boolean): void;
        func_217402_u(): boolean;
        func_225322_a(arg0: java_.nio.file.Path): void;
        func_241117_a_(arg0: Internal.Structure<any>, arg1: BlockPos, arg2: number, arg3: boolean): BlockPos;
        func_217470_d(arg0: Internal.Entity): boolean;
        func_217443_B(): Internal.PointOfInterestManager;
        func_217459_a(arg0: Internal.Entity, arg1: Internal.Entity): void;
        func_217467_h(arg0: Internal.Entity): void;
        func_72960_a(arg0: Internal.Entity, arg1: number): void;
        getEntities(): Internal.Stream<Internal.Entity>;
        func_217376_c(arg0: Internal.Entity): boolean;
        func_205219_F_(): Internal.ITickList<any>;
        func_205219_F_(): Internal.ServerTickList<Internal.Fluid>;
        func_217399_a(arg0: Internal.MapData): void;
        func_241828_r(): Internal.DynamicRegistries;
        func_217460_e(arg0: Internal.Entity): void;
        func_212866_a_(arg0: number, arg1: number): Internal.IChunk;
        func_241116_a_(arg0: Internal.Biome, arg1: BlockPos, arg2: number, arg3: number): BlockPos;
        func_217441_a(arg0: Internal.Chunk, arg1: number): void;
        func_217464_b(arg0: Internal.Entity): void;
        func_217452_C(): Internal.RaidManager;
        func_217445_a(arg0: Internal.IProgressUpdate, arg1: boolean, arg2: boolean): void;
        func_217472_l_(): Internal.ServerPlayerEntity;
        func_205220_G_(): Internal.ITickList<any>;
        func_205220_G_(): Internal.ServerTickList<Internal.Block>;
        func_241135_u_(): BlockPos;
        func_217475_c_(arg0: BlockPos): Internal.Raid;
        func_244521_F(): string;
        func_82742_i(): void;
        func_73051_P(): void;
        func_72863_F(): Internal.ServerChunkProvider;
        func_72863_F(): Internal.AbstractChunkProvider;
        func_241136_z_(): Internal.Iterable<Internal.Entity>;
        getPartEntities(): Internal.Collection<Internal.PartEntity<any>>;
        func_199532_z(): Internal.RecipeManager;
        func_217490_a(arg0: ((arg0: Internal.ServerPlayerEntity) => boolean)): Internal.List<Internal.ServerPlayerEntity>;
        func_241110_C_(): Internal.DragonFightManager;
        func_241119_a_(arg0: BlockPos, arg1: number): boolean;
        func_217479_a(arg0: Internal.Entity): void;
        func_230546_a_(arg0: Internal.Entity, arg1: Internal.DamageSource, arg2: Internal.ExplosionContext, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: Internal.Explosion$Mode_): Internal.Explosion;
        func_217433_d(arg0: Internal.ServerPlayerEntity): void;
        func_175715_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_217369_A(): Internal.List<Internal.ServerPlayerEntity>;
        static readonly field_241108_a_ : BlockPos;
        field_73058_d : boolean;
        get partEntities(): Internal.Collection<Internal.PartEntity<any>>;
        get entities(): Internal.Stream<Internal.Entity>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerWorld_ = ServerWorld;
    abstract class AbstractIntCollection extends Internal.AbstractCollection<number> implements Internal.IntCollection {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        add(arg0: number): boolean;
        removeAll(arg0: Internal.IntCollection): boolean;
        contains(arg0: number): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.IntIterator;
        addAll(arg0: Internal.IntCollection): boolean;
        toIntArray(): number[];
        toIntArray(arg0: number[]): number[];
        containsAll(arg0: Internal.IntCollection): boolean;
        toArray(arg0: number[]): number[];
        toString(): string;
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.IntCollection): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractIntCollection_ = AbstractIntCollection;
    interface IEventListener {
        listenerName(): string;
        invoke(arg0: net.minecraftforge.eventbus.api.Event): void;
    }
    type IEventListener_ = IEventListener;
    interface IModIngredientRegistration {
        getSubtypeManager(): Internal.ISubtypeManager;
        getColorHelper(): Internal.IColorHelper;
        register<V>(arg0: Internal.IIngredientType<V>, arg1: Internal.Collection<V>, arg2: Internal.IIngredientHelper<V>, arg3: Internal.IIngredientRenderer<V>): void;
    }
    type IModIngredientRegistration_ = IModIngredientRegistration;
    class TextFormatting extends Internal.Enum<Internal.TextFormatting> implements dev.latvian.mods.rhino.mod.util.color.Color {
        getRgbKJS(): number;
        static valueOf(arg0: string): Internal.TextFormatting;
        static values(): Internal.TextFormatting[];
        static func_96300_b(arg0: string): Internal.TextFormatting;
        func_96301_b(): boolean;
        static func_211165_a(arg0: string): Internal.TextFormatting;
        func_96302_c(): boolean;
        static func_175744_a(arg0: number): Internal.TextFormatting;
        func_211163_e(): number;
        getArgbKJS(): number;
        toString(): string;
        func_96297_d(): string;
        func_175746_b(): number;
        static func_96296_a(arg0: boolean, arg1: boolean): Internal.Collection<string>;
        static func_110646_a(arg0: string): string;
        static readonly ITALIC : Internal.TextFormatting;
        static readonly GOLD : Internal.TextFormatting;
        static readonly GRAY : Internal.TextFormatting;
        static readonly AQUA : Internal.TextFormatting;
        static readonly WHITE : Internal.TextFormatting;
        static readonly BLUE : Internal.TextFormatting;
        static readonly OBFUSCATED : Internal.TextFormatting;
        static readonly DARK_AQUA : Internal.TextFormatting;
        static readonly RESET : Internal.TextFormatting;
        static readonly DARK_BLUE : Internal.TextFormatting;
        static readonly GREEN : Internal.TextFormatting;
        static readonly UNDERLINE : Internal.TextFormatting;
        static readonly RED : Internal.TextFormatting;
        static readonly DARK_PURPLE : Internal.TextFormatting;
        static readonly STRIKETHROUGH : Internal.TextFormatting;
        static readonly DARK_RED : Internal.TextFormatting;
        static readonly LIGHT_PURPLE : Internal.TextFormatting;
        static readonly BLACK : Internal.TextFormatting;
        static readonly BOLD : Internal.TextFormatting;
        static readonly DARK_GREEN : Internal.TextFormatting;
        static readonly YELLOW : Internal.TextFormatting;
        static readonly DARK_GRAY : Internal.TextFormatting;
        get rgbKJS(): number;
        get argbKJS(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TextFormatting_ = "black" | "dark_blue" | "dark_green" | "dark_aqua" | "dark_red" | "dark_purple" | "gold" | "gray" | "dark_gray" | "blue" | "green" | "aqua" | "red" | "light_purple" | "yellow" | "white" | "obfuscated" | "bold" | "strikethrough" | "underline" | "italic" | "reset" | TextFormatting;
    class ActionResultType extends Internal.Enum<Internal.ActionResultType> {
        static func_233537_a_(arg0: boolean): Internal.ActionResultType;
        static valueOf(arg0: string): Internal.ActionResultType;
        static values(): Internal.ActionResultType[];
        func_226247_b_(): boolean;
        func_226246_a_(): boolean;
        static readonly SUCCESS : Internal.ActionResultType;
        static readonly PASS : Internal.ActionResultType;
        static readonly CONSUME : Internal.ActionResultType;
        static readonly FAIL : Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ActionResultType_ = "success" | "consume" | "pass" | "fail" | ActionResultType;
    class RuinedPortalFeature extends Document.Object implements Internal.IFeatureConfig {
        readonly field_236628_b_ : Internal.RuinedPortalStructure$Location;
        static readonly field_236627_a_ : Internal.Codec<Internal.RuinedPortalFeature>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RuinedPortalFeature_ = RuinedPortalFeature;
    class EnchantmentType extends Internal.Enum<Internal.EnchantmentType> implements Internal.IExtensibleEnum {
        static valueOf(arg0: string): Internal.EnchantmentType;
        static values(): Internal.EnchantmentType[];
        static create(arg0: string, arg1: ((arg0: Internal.Item) => boolean)): Internal.EnchantmentType;
        func_77557_a(arg0: Internal.Item): boolean;
        static readonly ARMOR_HEAD : Internal.EnchantmentType;
        static readonly BREAKABLE : Internal.EnchantmentType;
        static readonly ARMOR : Internal.EnchantmentType;
        static readonly ARMOR_LEGS : Internal.EnchantmentType;
        static readonly FISHING_ROD : Internal.EnchantmentType;
        static readonly BOW : Internal.EnchantmentType;
        static readonly ARMOR_FEET : Internal.EnchantmentType;
        static readonly TRIDENT : Internal.EnchantmentType;
        static readonly VANISHABLE : Internal.EnchantmentType;
        static readonly ARMOR_CHEST : Internal.EnchantmentType;
        static readonly WEARABLE : Internal.EnchantmentType;
        static readonly WEAPON : Internal.EnchantmentType;
        static readonly DIGGER : Internal.EnchantmentType;
        static readonly CROSSBOW : Internal.EnchantmentType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EnchantmentType_ = "armor" | "armor_feet" | "armor_legs" | "armor_chest" | "armor_head" | "weapon" | "digger" | "fishing_rod" | "trident" | "breakable" | "bow" | "wearable" | "crossbow" | "vanishable" | "enchantable" | "hoe" | "pickaxe_or_shovel" | "sword_or_axe" | "sword_or_axe_or_crossbow" | EnchantmentType;
    interface IWorldInfo {
        func_82574_x(): Internal.GameRules;
        func_76079_c(): number;
        func_241860_d(): number;
        func_76061_m(): boolean;
        func_76075_d(): number;
        func_76074_e(): number;
        func_76073_f(): number;
        func_176130_y(): Internal.Difficulty;
        func_76084_b(arg0: boolean): void;
        func_176123_z(): boolean;
        func_82573_f(): number;
        func_76059_o(): boolean;
        func_85118_a(arg0: Internal.CrashReportCategory): void;
        func_76093_s(): boolean;
    }
    type IWorldInfo_ = IWorldInfo;
    class SoundEvent extends Internal.ForgeRegistryEntry<Internal.SoundEvent> {
        func_187503_a(): ResourceLocation;
        static readonly field_232678_a_ : Internal.Codec<Internal.SoundEvent>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SoundEvent_ = SoundEvent;
    abstract class CapabilityProvider <B> extends Document.Object implements Internal.ICapabilityProvider {
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        areCapsCompatible(arg0: Internal.CapabilityProvider<B>): boolean;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CapabilityProvider_<B> = CapabilityProvider<B>;
    abstract class TimeZone extends Document.Object implements Internal.Serializable, Internal.Cloneable {
        static getTimeZone(arg0: Internal.ZoneId): Internal.TimeZone;
        static getTimeZone(arg0: string): Internal.TimeZone;
        getOffset(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        getOffset(arg0: number): number;
        useDaylightTime(): boolean;
        getID(): string;
        static getDefault(): Internal.TimeZone;
        static getAvailableIDs(): string[];
        static getAvailableIDs(arg0: number): string[];
        observesDaylightTime(): boolean;
        static setDefault(arg0: Internal.TimeZone): void;
        getDSTSavings(): number;
        getDisplayName(): string;
        getDisplayName(arg0: boolean, arg1: number): string;
        getDisplayName(arg0: boolean, arg1: number, arg2: Internal.Locale): string;
        getDisplayName(arg0: Internal.Locale): string;
        setRawOffset(arg0: number): void;
        clone(): any;
        setID(arg0: string): void;
        hasSameRules(arg0: Internal.TimeZone): boolean;
        inDaylightTime(arg0: Internal.Date): boolean;
        toZoneId(): Internal.ZoneId;
        getRawOffset(): number;
        static readonly SHORT : 0;
        static readonly LONG : 1;
        get default(): Internal.TimeZone;
        get displayName(): string;
        get rawOffset(): number;
        get availableIDs(): string[];
        get dSTSavings(): number;
        get iD(): string;
        set default(arg0: Internal.TimeZone);
        set rawOffset(arg0: number);
        set iD(arg0: string);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TimeZone_ = TimeZone;
    class GhastEntity extends Internal.FlyingEntity implements Internal.IMob {
        func_70641_bl(): number;
        static func_234290_eH_(): Internal.AttributeModifierMap$MutableAttribute;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        static func_223368_b(arg0: Internal.EntityType<Internal.GhastEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_175453_cd(): number;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_175454_a(arg0: boolean): void;
        func_110182_bF(): boolean;
        func_184176_by(): Internal.SoundCategory;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GhastEntity_ = GhastEntity;
    class RenderState$LineState extends Internal.RenderState {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$LineState_ = RenderState$LineState;
    interface BlockColorsExtended {
        getColorProvider(arg0: Internal.BlockState): Internal.IBlockColor;
    }
    type BlockColorsExtended_ = BlockColorsExtended;
    interface IForgeRegistry <V> extends Internal.Iterable<V> {
        getKey(arg0: V): ResourceLocation;
        getValues(): Internal.Collection<V>;
        containsKey(arg0: ResourceLocation_): boolean;
        registerAll(arg0: V[]): void;
        getDefaultKey(): ResourceLocation;
        isEmpty(): boolean;
        getRegistryName(): ResourceLocation;
        getKeys(): Internal.Set<ResourceLocation>;
        getRegistrySuperType(): Internal.Class<V>;
        getSlaveMap<T_>(arg0: ResourceLocation_, arg1: Internal.Class_<T_>): T_;
        containsValue(arg0: V): boolean;
        getValue(arg0: ResourceLocation_): V;
        getEntries(): Internal.Set<Internal.Map$Entry<Internal.RegistryKey<V>, V>>;
        register(arg0: V): void;
    }
    type IForgeRegistry_<V> = IForgeRegistry<V>;
    interface IChargeableMob {
        func_225509_J__(): boolean;
    }
    type IChargeableMob_ = IChargeableMob;
    class SSpawnExperienceOrbPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148985_c(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186884_d(): number;
        func_148986_g(): number;
        func_186885_b(): number;
        func_186886_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SSpawnExperienceOrbPacket_ = SSpawnExperienceOrbPacket;
    class ResourcePackInfo extends Document.Object implements Internal.AutoCloseable {
        func_195795_c(): Internal.ITextComponent;
        static func_195793_a(arg0: string, arg1: boolean, arg2: (() => Internal.IResourcePack), arg3: ((arg0: string, arg1: boolean, arg2: (() => Internal.IResourcePack), arg3: Internal.IResourcePack, arg4: Internal.PackMetadataSection, arg5: Internal.ResourcePackInfo$Priority, arg6: Internal.IPackNameDecorator) => Internal.ResourcePackInfo), arg4: Internal.ResourcePackInfo$Priority_, arg5: Internal.IPackNameDecorator): Internal.ResourcePackInfo;
        func_195790_f(): string;
        func_195794_a(arg0: boolean): Internal.ITextComponent;
        func_195791_d(): Internal.PackCompatibility;
        func_195798_h(): boolean;
        func_195796_e(): Internal.IResourcePack;
        func_195792_i(): Internal.ResourcePackInfo$Priority;
        func_195789_b(): Internal.ITextComponent;
        func_195797_g(): boolean;
        isHidden(): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        func_232614_i_(): Internal.IPackNameDecorator;
        close(): void;
        get hidden(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ResourcePackInfo_ = ResourcePackInfo;
    class Criterion extends Document.Object {
        func_200287_b(): Internal.JsonElement;
        static func_232633_a_(arg0: Internal.JsonObject, arg1: Internal.ConditionArrayParser): Internal.Criterion;
        static func_192146_b(arg0: Internal.PacketBuffer): Internal.Criterion;
        static func_192142_c(arg0: Internal.PacketBuffer): Internal.Map<string, Internal.Criterion>;
        func_192143_a(): Internal.ICriterionInstance;
        static func_232634_b_(arg0: Internal.JsonObject, arg1: Internal.ConditionArrayParser): Internal.Map<string, Internal.Criterion>;
        static func_192141_a(arg0: Internal.Map_<string, Internal.Criterion_>, arg1: Internal.PacketBuffer): void;
        func_192140_a(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Criterion_ = Criterion;
    class FluidAttributes$Builder extends Document.Object {
        viscosity(arg0: number): Internal.FluidAttributes$Builder;
        overlay(arg0: ResourceLocation_): Internal.FluidAttributes$Builder;
        color(arg0: number): Internal.FluidAttributes$Builder;
        translationKey(arg0: string): Internal.FluidAttributes$Builder;
        density(arg0: number): Internal.FluidAttributes$Builder;
        build(arg0: Internal.Fluid): Internal.FluidAttributes;
        sound(arg0: Internal.SoundEvent, arg1: Internal.SoundEvent): Internal.FluidAttributes$Builder;
        sound(arg0: Internal.SoundEvent): Internal.FluidAttributes$Builder;
        temperature(arg0: number): Internal.FluidAttributes$Builder;
        luminosity(arg0: number): Internal.FluidAttributes$Builder;
        gaseous(): Internal.FluidAttributes$Builder;
        rarity(arg0: Internal.Rarity_): Internal.FluidAttributes$Builder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FluidAttributes$Builder_ = FluidAttributes$Builder;
    class RecordCodecBuilder <O, F> extends Document.Object implements Internal.App<Internal.RecordCodecBuilder$Mu<O>, F> {
        static instance<O_>(): Internal.RecordCodecBuilder$Instance<O_>;
        static build<O_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O_>, O_>): Internal.MapCodec<O_>;
        static mapCodec<O_>(arg0: ((arg0: Internal.RecordCodecBuilder$Instance<O_>) => Internal.App<Internal.RecordCodecBuilder$Mu<O_>, O_>)): Internal.MapCodec<O_>;
        static unbox<O_, F_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O_>, F_>): Internal.RecordCodecBuilder<O_, F_>;
        static stable<O_, F_>(arg0: F_): Internal.RecordCodecBuilder<O_, F_>;
        static of<O_, F_>(arg0: ((arg0: O_) => F_), arg1: string, arg2: Internal.Codec<F_>): Internal.RecordCodecBuilder<O_, F_>;
        static of<O_, F_>(arg0: ((arg0: O_) => F_), arg1: Internal.MapCodec<F_>): Internal.RecordCodecBuilder<O_, F_>;
        static deprecated<O_, F_>(arg0: F_, arg1: number): Internal.RecordCodecBuilder<O_, F_>;
        static create<O_>(arg0: ((arg0: Internal.RecordCodecBuilder$Instance<O_>) => Internal.App<Internal.RecordCodecBuilder$Mu<O_>, O_>)): Internal.Codec<O_>;
        dependent<E_>(arg0: ((arg0: O) => E_), arg1: Internal.MapEncoder<E_>, arg2: ((arg0: Internal.RecordCodecBuilder$Mu<O>) => Internal.MapDecoder<E_>)): Internal.RecordCodecBuilder<O, E_>;
        static point<O_, F_>(arg0: F_): Internal.RecordCodecBuilder<O_, F_>;
        static point<O_, F_>(arg0: F_, arg1: Internal.Lifecycle): Internal.RecordCodecBuilder<O_, F_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecordCodecBuilder_<O, F> = RecordCodecBuilder<O, F>;
    class Products$P7 <F, T1, T2, T3, T4, T5, T6, T7> extends Document.Object {
        t4(): Internal.App<F, T4>;
        t5(): Internal.App<F, T5>;
        t6(): Internal.App<F, T6>;
        t7(): Internal.App<F, T7>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function7<T1, T2, T3, T4, T5, T6, T7, R_>>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function7<T1, T2, T3, T4, T5, T6, T7, R_>): Internal.App<F, R_>;
        and<T8_>(arg0: Internal.App<F, T8_>): Internal.Products$P8<F, T1, T2, T3, T4, T5, T6, T7, T8_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        t3(): Internal.App<F, T3>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P7_<F, T1, T2, T3, T4, T5, T6, T7> = Products$P7<F, T1, T2, T3, T4, T5, T6, T7>;
    class Products$P13 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P13_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> = Products$P13<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>;
    class BiomeAmbience extends Document.Object {
        func_235218_c_(): number;
        func_235226_g_(): Internal.Optional<Internal.SoundAdditionsAmbience>;
        func_242527_d(): number;
        func_235216_b_(): number;
        func_242528_e(): Internal.Optional<number>;
        func_235222_e_(): Internal.Optional<Internal.SoundEvent>;
        func_235220_d_(): Internal.Optional<Internal.ParticleEffectAmbience>;
        func_242529_f(): Internal.Optional<number>;
        func_235224_f_(): Internal.Optional<Internal.MoodSoundAmbience>;
        func_235213_a_(): number;
        func_235228_h_(): Internal.Optional<Internal.BackgroundMusicSelector>;
        func_242531_g(): Internal.BiomeAmbience$GrassColorModifier;
        field_235206_c_ : number;
        field_242526_h : Internal.BiomeAmbience$GrassColorModifier;
        field_235207_d_ : number;
        field_242525_g : Internal.Optional<number>;
        field_242524_f : Internal.Optional<number>;
        field_235205_b_ : number;
        static readonly field_235204_a_ : Internal.Codec<Internal.BiomeAmbience>;
        field_242523_e : number;
        field_235210_g_ : Internal.Optional<Internal.MoodSoundAmbience>;
        field_235211_h_ : Internal.Optional<Internal.SoundAdditionsAmbience>;
        field_235212_i_ : Internal.Optional<Internal.BackgroundMusicSelector>;
        field_235209_f_ : Internal.Optional<Internal.SoundEvent>;
        field_235208_e_ : Internal.Optional<Internal.ParticleEffectAmbience>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BiomeAmbience_ = BiomeAmbience;
    class LivingEvent extends Internal.EntityEvent {
        getListenerList(): Internal.ListenerList;
        getEntityLiving(): Internal.LivingEntity;
        get entityLiving(): Internal.LivingEntity;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingEvent_ = LivingEvent;
    interface VertexSink {
        flush(): void;
        ensureCapacity(arg0: number): void;
    }
    type VertexSink_ = VertexSink;
    interface IStructurePieceType {
        load(arg0: Internal.TemplateManager, arg1: Internal.CompoundNBT): Internal.StructurePiece;
    }
    type IStructurePieceType_ = IStructurePieceType;
    interface ToIntFunction <T> {
        applyAsInt(arg0: T): number;
    }
    type ToIntFunction_<T> = ((arg0: T) => number) | ToIntFunction<T>;
    abstract class Buffer extends Document.Object {
        hasArray(): boolean;
        hasRemaining(): boolean;
        clear(): Internal.Buffer;
        duplicate(): Internal.Buffer;
        remaining(): number;
        capacity(): number;
        isReadOnly(): boolean;
        rewind(): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.Buffer;
        slice(): Internal.Buffer;
        array(): any;
        limit(): number;
        limit(arg0: number): Internal.Buffer;
        arrayOffset(): number;
        reset(): Internal.Buffer;
        position(arg0: number): Internal.Buffer;
        position(): number;
        flip(): Internal.Buffer;
        isDirect(): boolean;
        mark(): Internal.Buffer;
        get direct(): boolean;
        get readOnly(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Buffer_ = Buffer;
    class ZonedDateTime extends Document.Object implements Internal.Temporal, Internal.ChronoZonedDateTime<Internal.LocalDate>, Internal.Serializable {
        plusHours(arg0: number): Internal.ZonedDateTime;
        toLocalTime(): Internal.LocalTime;
        static ofLocal(arg0: Internal.LocalDateTime, arg1: Internal.ZoneId, arg2: Internal.ZoneOffset): Internal.ZonedDateTime;
        getDayOfWeek(): Internal.DayOfWeek;
        plusSeconds(arg0: number): Internal.ZonedDateTime;
        getMinute(): number;
        static ofStrict(arg0: Internal.LocalDateTime, arg1: Internal.ZoneOffset, arg2: Internal.ZoneId): Internal.ZonedDateTime;
        static from(arg0: Internal.TemporalAccessor): Internal.ZonedDateTime;
        getMonth(): Internal.Month;
        plusNanos(arg0: number): Internal.ZonedDateTime;
        withHour(arg0: number): Internal.ZonedDateTime;
        plusMonths(arg0: number): Internal.ZonedDateTime;
        plusYears(arg0: number): Internal.ZonedDateTime;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.ZonedDateTime;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        minusNanos(arg0: number): Internal.ZonedDateTime;
        getNano(): number;
        format(arg0: Internal.DateTimeFormatter): string;
        getZone(): Internal.ZoneId;
        isSupported(arg0: Internal.TemporalField): boolean;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.ZonedDateTime;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoZonedDateTime<any>;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoZonedDateTime<any>;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ZonedDateTime;
        getYear(): number;
        toLocalDateTime(): Internal.LocalDateTime;
        toLocalDateTime(): Internal.ChronoLocalDateTime<any>;
        withDayOfMonth(arg0: number): Internal.ZonedDateTime;
        withMonth(arg0: number): Internal.ZonedDateTime;
        toOffsetDateTime(): Internal.OffsetDateTime;
        static ofInstant(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.ZonedDateTime;
        static ofInstant(arg0: Internal.LocalDateTime, arg1: Internal.ZoneOffset, arg2: Internal.ZoneId): Internal.ZonedDateTime;
        minus(arg0: Internal.TemporalAmount): Internal.ZonedDateTime;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.ChronoZonedDateTime<any>;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoZonedDateTime<any>;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ZonedDateTime;
        minusHours(arg0: number): Internal.ZonedDateTime;
        withFixedOffsetZone(): Internal.ZonedDateTime;
        getOffset(): Internal.ZoneOffset;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        withYear(arg0: number): Internal.ZonedDateTime;
        plusMinutes(arg0: number): Internal.ZonedDateTime;
        minusMinutes(arg0: number): Internal.ZonedDateTime;
        plusDays(arg0: number): Internal.ZonedDateTime;
        withLaterOffsetAtOverlap(): Internal.ChronoZonedDateTime<any>;
        withLaterOffsetAtOverlap(): Internal.ZonedDateTime;
        hashCode(): number;
        static now(): Internal.ZonedDateTime;
        static now(arg0: Internal.Clock): Internal.ZonedDateTime;
        static now(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.ZoneId): Internal.ZonedDateTime;
        static of(arg0: Internal.LocalDateTime, arg1: Internal.ZoneId): Internal.ZonedDateTime;
        static of(arg0: Internal.LocalDate, arg1: Internal.LocalTime, arg2: Internal.ZoneId): Internal.ZonedDateTime;
        get(arg0: Internal.TemporalField): number;
        withEarlierOffsetAtOverlap(): Internal.ZonedDateTime;
        withEarlierOffsetAtOverlap(): Internal.ChronoZonedDateTime<any>;
        withZoneSameLocal(arg0: Internal.ZoneId): Internal.ChronoZonedDateTime<any>;
        withZoneSameLocal(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        getDayOfYear(): number;
        plusWeeks(arg0: number): Internal.ZonedDateTime;
        getHour(): number;
        withMinute(arg0: number): Internal.ZonedDateTime;
        getMonthValue(): number;
        minusYears(arg0: number): Internal.ZonedDateTime;
        withZoneSameInstant(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        withZoneSameInstant(arg0: Internal.ZoneId): Internal.ChronoZonedDateTime<any>;
        minusWeeks(arg0: number): Internal.ZonedDateTime;
        withDayOfYear(arg0: number): Internal.ZonedDateTime;
        static parse(arg0: Internal.CharSequence, arg1: Internal.DateTimeFormatter): Internal.ZonedDateTime;
        static parse(arg0: Internal.CharSequence): Internal.ZonedDateTime;
        minusDays(arg0: number): Internal.ZonedDateTime;
        withNano(arg0: number): Internal.ZonedDateTime;
        getLong(arg0: Internal.TemporalField): number;
        minusMonths(arg0: number): Internal.ZonedDateTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ZonedDateTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ChronoZonedDateTime<any>;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.Temporal;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.ChronoZonedDateTime<any>;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.ZonedDateTime;
        toLocalDate(): Internal.ChronoLocalDate;
        toLocalDate(): Internal.LocalDate;
        equals(arg0: any): boolean;
        getSecond(): number;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        toString(): string;
        getDayOfMonth(): number;
        minusSeconds(arg0: number): Internal.ZonedDateTime;
        withSecond(arg0: number): Internal.ZonedDateTime;
        get dayOfWeek(): Internal.DayOfWeek;
        get month(): Internal.Month;
        get offset(): Internal.ZoneOffset;
        get hour(): number;
        get zone(): Internal.ZoneId;
        get year(): number;
        get dayOfYear(): number;
        get dayOfMonth(): number;
        get monthValue(): number;
        get nano(): number;
        get minute(): number;
        get second(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZonedDateTime_ = ZonedDateTime;
    class ConfiguredSurfaceBuilder <SC> extends Document.Object {
        func_215452_a(): SC;
        func_215450_a(arg0: Internal.Random, arg1: Internal.IChunk, arg2: Internal.Biome, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.BlockState, arg8: Internal.BlockState, arg9: number, arg10: number): void;
        func_215451_a(arg0: number): void;
        readonly field_215454_b : SC;
        static readonly field_237168_a_ : Internal.Codec<Internal.ConfiguredSurfaceBuilder<any>>;
        readonly field_215453_a : Internal.SurfaceBuilder<SC>;
        static readonly field_244393_b_ : Internal.Codec<(() => Internal.ConfiguredSurfaceBuilder<any>)>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ConfiguredSurfaceBuilder_<SC> = ConfiguredSurfaceBuilder<SC>;
    abstract class AbstractMinecartEntity extends Internal.Entity implements Internal.IForgeEntityMinecart {
        static registerCollisionHandler(arg0: Internal.IMinecartCollisionHandler): void;
        func_213297_N(): Internal.IPacket<any>;
        setCurrentCartSpeedCapOnRail(arg0: number): void;
        func_94100_s(): boolean;
        func_70492_c(arg0: number): void;
        func_70104_M(): boolean;
        func_94086_l(arg0: number): void;
        func_70495_a(arg0: number, arg1: number, arg2: number, arg3: number): Vec3;
        setDragAir(arg0: number): void;
        getMaxSpeedAirLateral(): number;
        func_70071_h_(): void;
        func_230268_c_(arg0: Internal.LivingEntity): Vec3;
        func_94085_r(): number;
        getDragAir(): number;
        getCollisionHandler(): Internal.IMinecartCollisionHandler;
        func_241849_j(arg0: Internal.Entity): boolean;
        func_70057_ab(): void;
        func_184177_bl(): Internal.AxisAlignedBB;
        moveMinecartOnRail(arg0: BlockPos): void;
        setMaxSpeedAirVertical(arg0: number): void;
        func_180457_u(): Internal.BlockState;
        func_94095_a(arg0: Internal.DamageSource): void;
        func_70489_a(arg0: number, arg1: number, arg2: number): Vec3;
        getCurrentCartSpeedCapOnRail(): number;
        func_94096_e(arg0: boolean): void;
        static func_184263_a(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: Internal.AbstractMinecartEntity$Type_): Internal.AbstractMinecartEntity;
        getMaxSpeedAirVertical(): number;
        func_180426_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        getMaxSpeedWithRail(): number;
        func_70108_f(arg0: Internal.Entity): void;
        setMaxSpeedAirLateral(arg0: number): void;
        func_174897_t(): Internal.BlockState;
        setCanUseRail(arg0: boolean): void;
        func_94099_q(): number;
        func_70042_X(): number;
        func_184172_bi(): Internal.Direction;
        func_70496_j(): number;
        canUseRail(): boolean;
        func_174899_a(arg0: Internal.BlockState): void;
        func_70067_L(): boolean;
        func_184264_v(): Internal.AbstractMinecartEntity$Type;
        func_70016_h(arg0: number, arg1: number, arg2: number): void;
        func_70491_i(): number;
        func_70494_i(arg0: number): void;
        func_96095_a(arg0: number, arg1: number, arg2: number, arg3: boolean): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_70497_h(arg0: number): void;
        func_70493_k(): number;
        get maxSpeedAirLateral(): number;
        get maxSpeedWithRail(): number;
        get collisionHandler(): Internal.IMinecartCollisionHandler;
        get dragAir(): number;
        get currentCartSpeedCapOnRail(): number;
        get maxSpeedAirVertical(): number;
        set maxSpeedAirLateral(arg0: number);
        set dragAir(arg0: number);
        set currentCartSpeedCapOnRail(arg0: number);
        set maxSpeedAirVertical(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractMinecartEntity_ = AbstractMinecartEntity;
    class ChickenEntity extends Internal.AnimalEntity {
        func_152116_bZ(): boolean;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        static func_234187_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70636_d(): void;
        func_184232_k(arg0: Internal.Entity): void;
        func_152117_i(arg0: boolean): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.ChickenEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_213397_c(arg0: number): boolean;
        field_70888_h : number;
        field_70889_i : number;
        field_70887_j : number;
        field_152118_bv : boolean;
        field_70883_f : number;
        field_70886_e : number;
        field_70884_g : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChickenEntity_ = ChickenEntity;
    class SServerDifficultyPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179831_b(): Internal.Difficulty;
        func_179830_a(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SServerDifficultyPacket_ = SServerDifficultyPacket;
    abstract class GuiScreenEvent$MouseInputEvent extends Internal.GuiScreenEvent {
        getMouseY(): number;
        getListenerList(): Internal.ListenerList;
        getMouseX(): number;
        get mouseX(): number;
        get listenerList(): Internal.ListenerList;
        get mouseY(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$MouseInputEvent_ = GuiScreenEvent$MouseInputEvent;
    class Color extends Document.Object implements dev.latvian.mods.rhino.mod.util.color.Color {
        static func_240744_a_(arg0: Internal.TextFormatting_): Internal.Color;
        getRgbKJS(): number;
        hashCode(): number;
        static func_240745_a_(arg0: string): Internal.Color;
        equals(arg0: any): boolean;
        func_240742_a_(): number;
        static func_240743_a_(arg0: number): Internal.Color;
        getArgbKJS(): number;
        toString(): string;
        func_240747_b_(): string;
        getSerializeKJS(): string;
        get rgbKJS(): number;
        get argbKJS(): number;
        get serializeKJS(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Color_ = Color;
    class BigDecimal extends Internal.Number implements Internal.Comparable<Internal.BigDecimal> {
        longValueExact(): number;
        movePointLeft(arg0: number): Internal.BigDecimal;
        precision(): number;
        byteValueExact(): number;
        toBigInteger(): Internal.BigInteger;
        scale(): number;
        toPlainString(): string;
        compareTo(arg0: Internal.BigDecimal): number;
        compareTo(arg0: any): number;
        shortValueExact(): number;
        longValue(): number;
        min(arg0: Internal.BigDecimal): Internal.BigDecimal;
        unscaledValue(): Internal.BigInteger;
        sqrt(arg0: Internal.MathContext): Internal.BigDecimal;
        scaleByPowerOfTen(arg0: number): Internal.BigDecimal;
        hashCode(): number;
        pow(arg0: number, arg1: Internal.MathContext): Internal.BigDecimal;
        pow(arg0: number): Internal.BigDecimal;
        divide(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal;
        divide(arg0: Internal.BigDecimal): Internal.BigDecimal;
        divide(arg0: Internal.BigDecimal, arg1: Internal.RoundingMode_): Internal.BigDecimal;
        divide(arg0: Internal.BigDecimal, arg1: number): Internal.BigDecimal;
        divide(arg0: Internal.BigDecimal, arg1: number, arg2: Internal.RoundingMode_): Internal.BigDecimal;
        divide(arg0: Internal.BigDecimal, arg1: number, arg2: number): Internal.BigDecimal;
        multiply(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal;
        multiply(arg0: Internal.BigDecimal): Internal.BigDecimal;
        add(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal;
        add(arg0: Internal.BigDecimal): Internal.BigDecimal;
        signum(): number;
        toBigIntegerExact(): Internal.BigInteger;
        toEngineeringString(): string;
        max(arg0: Internal.BigDecimal): Internal.BigDecimal;
        setScale(arg0: number, arg1: Internal.RoundingMode_): Internal.BigDecimal;
        setScale(arg0: number): Internal.BigDecimal;
        setScale(arg0: number, arg1: number): Internal.BigDecimal;
        static valueOf(arg0: number): Internal.BigDecimal;
        static valueOf(arg0: number): Internal.BigDecimal;
        static valueOf(arg0: number, arg1: number): Internal.BigDecimal;
        intValue(): number;
        subtract(arg0: Internal.BigDecimal): Internal.BigDecimal;
        subtract(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal;
        floatValue(): number;
        doubleValue(): number;
        divideToIntegralValue(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal;
        divideToIntegralValue(arg0: Internal.BigDecimal): Internal.BigDecimal;
        plus(): Internal.BigDecimal;
        plus(arg0: Internal.MathContext): Internal.BigDecimal;
        abs(arg0: Internal.MathContext): Internal.BigDecimal;
        abs(): Internal.BigDecimal;
        round(arg0: Internal.MathContext): Internal.BigDecimal;
        divideAndRemainder(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal[];
        divideAndRemainder(arg0: Internal.BigDecimal): Internal.BigDecimal[];
        negate(): Internal.BigDecimal;
        negate(arg0: Internal.MathContext): Internal.BigDecimal;
        movePointRight(arg0: number): Internal.BigDecimal;
        equals(arg0: any): boolean;
        ulp(): Internal.BigDecimal;
        toString(): string;
        stripTrailingZeros(): Internal.BigDecimal;
        remainder(arg0: Internal.BigDecimal): Internal.BigDecimal;
        remainder(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal;
        intValueExact(): number;
        static readonly ZERO : Internal.BigDecimal;
        static readonly ROUND_DOWN : 1;
        static readonly ROUND_UNNECESSARY : 7;
        static readonly ROUND_CEILING : 2;
        static readonly ROUND_HALF_DOWN : 5;
        static readonly ROUND_HALF_UP : 4;
        static readonly ONE : Internal.BigDecimal;
        static readonly ROUND_UP : 0;
        static readonly ROUND_FLOOR : 3;
        static readonly ROUND_HALF_EVEN : 6;
        static readonly TEN : Internal.BigDecimal;
        static readonly TWO : Internal.BigDecimal;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BigDecimal_ = BigDecimal;
    interface SymbolScriptable {
        get(arg0: Internal.Symbol, arg1: Internal.Scriptable): any;
        has(arg0: Internal.Symbol, arg1: Internal.Scriptable): boolean;
        delete(arg0: Internal.Symbol): void;
        put(arg0: Internal.Symbol, arg1: Internal.Scriptable, arg2: any): void;
    }
    type SymbolScriptable_ = SymbolScriptable;
    class FurnaceMinecartEntity extends Internal.AbstractMinecartEntity {
        func_180457_u(): Internal.BlockState;
        func_184264_v(): Internal.AbstractMinecartEntity$Type;
        func_70071_h_(): void;
        func_94095_a(arg0: Internal.DamageSource): void;
        func_184230_a(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        getMaxCartSpeedOnRail(): number;
        field_94109_b : number;
        field_94111_a : number;
        get maxCartSpeedOnRail(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FurnaceMinecartEntity_ = FurnaceMinecartEntity;
    class TridentEntity extends Internal.AbstractArrowEntity {
        func_225516_i_(): void;
        func_226572_w_(): boolean;
        func_184550_j(): Internal.ItemStack;
        func_70100_b_(arg0: Internal.PlayerEntity): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_145770_h(arg0: number, arg1: number, arg2: number): boolean;
        func_70071_h_(): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        field_203052_f : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TridentEntity_ = TridentEntity;
    class SmithingTableContainer extends Internal.AbstractRepairContainer {
        func_82848_d(): void;
        func_94530_a(arg0: Internal.ItemStack, arg1: Internal.Slot): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SmithingTableContainer_ = SmithingTableContainer;
    interface IWeatherRenderHandler {
        render(arg0: number, arg1: number, arg2: Internal.ClientWorld, arg3: Internal.Minecraft, arg4: Internal.LightTexture, arg5: number, arg6: number, arg7: number): void;
    }
    type IWeatherRenderHandler_ = ((arg0: number, arg1: number, arg2: Internal.ClientWorld, arg3: Internal.Minecraft, arg4: Internal.LightTexture, arg5: number, arg6: number, arg7: number) => void) | IWeatherRenderHandler;
    abstract class ImmutableCollection <E> extends Internal.AbstractCollection<E> implements Internal.Serializable {
        add(arg0: E): boolean;
        removeAll(arg0: Internal.Collection<any>): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.UnmodifiableIterator<E>;
        addAll(arg0: Internal.Collection<E>): boolean;
        spliterator(): Internal.Spliterator<E>;
        toArray<T_>(arg0: T_[]): T_[];
        toArray(): any[];
        clear(): void;
        asList(): Internal.ImmutableList<E>;
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.Collection<any>): boolean;
        removeIf(arg0: ((arg0: E) => boolean)): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableCollection_<E> = ImmutableCollection<E>;
    abstract class NodeProcessor extends Document.Object {
        func_186317_a(arg0: boolean): void;
        func_186319_a(arg0: Internal.IBlockReader, arg1: number, arg2: number, arg3: number, arg4: Internal.MobEntity, arg5: number, arg6: number, arg7: number, arg8: boolean, arg9: boolean): Internal.PathNodeType;
        func_224768_a(arg0: number, arg1: number, arg2: number): Internal.FlaggedPathPoint;
        func_186330_a(arg0: Internal.IBlockReader, arg1: number, arg2: number, arg3: number): Internal.PathNodeType;
        func_186321_b(arg0: boolean): void;
        func_176163_a(): void;
        func_186323_c(): boolean;
        func_225578_a_(arg0: Internal.Region, arg1: Internal.MobEntity): void;
        func_186322_e(): boolean;
        func_186324_d(): boolean;
        func_186318_b(): Internal.PathPoint;
        func_222859_a(arg0: Internal.PathPoint[], arg1: Internal.PathPoint): number;
        func_186316_c(arg0: boolean): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NodeProcessor_ = NodeProcessor;
    class CPlayerAbilitiesPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_149488_d(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CPlayerAbilitiesPacket_ = CPlayerAbilitiesPacket;
    interface Callable {
        call(arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Scriptable, arg3: any[]): any;
    }
    type Callable_ = Callable;
    interface Stream$Builder <T> extends Internal.Consumer<T> {
        add(arg0: T): Internal.Stream$Builder<T>;
        build(): Internal.Stream<T>;
        accept(arg0: T): void;
    }
    type Stream$Builder_<T> = Stream$Builder<T>;
    interface GroupLayout extends Internal.MemoryLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.GroupLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.GroupLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.GroupLayout;
        memberLayouts(): Internal.List<Internal.MemoryLayout>;
    }
    type GroupLayout_ = GroupLayout;
    class CUpdateStructureBlockPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_210380_a(): BlockPos;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_210383_e(): BlockPos;
        func_210384_b(): Internal.StructureBlockTileEntity$UpdateCommand;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_210386_g(): Internal.Mirror;
        func_210378_c(): Internal.StructureMode;
        func_210377_d(): string;
        func_210385_f(): BlockPos;
        func_210390_k(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_210388_i(): string;
        func_210382_m(): number;
        func_210381_n(): number;
        func_210387_l(): boolean;
        func_210389_j(): boolean;
        func_210379_h(): Internal.Rotation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CUpdateStructureBlockPacket_ = CUpdateStructureBlockPacket;
    interface AdvancementList$IListener {
        func_191931_a(arg0: Internal.Advancement): void;
        func_191930_a(): void;
        func_191932_c(arg0: Internal.Advancement): void;
        func_191929_d(arg0: Internal.Advancement): void;
        func_191928_b(arg0: Internal.Advancement): void;
    }
    type AdvancementList$IListener_ = AdvancementList$IListener;
    class PlayerInteractEvent$EntityInteractSpecific extends Internal.PlayerInteractEvent {
        getTarget(): Internal.Entity;
        getListenerList(): Internal.ListenerList;
        getLocalPos(): Vec3;
        isCancelable(): boolean;
        get localPos(): Vec3;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get target(): Internal.Entity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerInteractEvent$EntityInteractSpecific_ = PlayerInteractEvent$EntityInteractSpecific;
    class ScriptType extends Internal.Enum<Internal.ScriptType> {
        isServer(): boolean;
        static valueOf(name: string): Internal.ScriptType;
        static of(world: Internal.IWorldReader): Internal.ScriptType;
        static values(): Internal.ScriptType[];
        isClient(): boolean;
        getLogFile(): java_.nio.file.Path;
        readonly console : Internal.ConsoleJS;
        readonly manager : (() => Internal.ScriptManager);
        static readonly SERVER : Internal.ScriptType;
        readonly executor : Internal.ExecutorService;
        readonly warnings : Internal.List<string>;
        readonly name : string;
        static readonly STARTUP : Internal.ScriptType;
        static readonly CLIENT : Internal.ScriptType;
        readonly errors : Internal.List<string>;
        get server(): boolean;
        get logFile(): java_.nio.file.Path;
        get client(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScriptType_ = "startup" | "server" | "client" | ScriptType;
    class ContextFactory extends Document.Object {
        call<T_>(action: Internal.ContextAction<T_>): T_;
        enterContext(cx: Internal.Context): Internal.Context;
        enterContext(): Internal.Context;
        static initGlobal(factory: Internal.ContextFactory): void;
        isSealed(): boolean;
        static hasExplicitGlobal(): boolean;
        static getGlobalSetter(): Internal.ContextFactory$GlobalSetter;
        seal(): void;
        static getGlobal(): Internal.ContextFactory;
        getApplicationClassLoader(): Internal.ClassLoader;
        removeListener(listener: Internal.ContextFactory$Listener): void;
        initApplicationClassLoader(loader: Internal.ClassLoader): void;
        addListener(listener: Internal.ContextFactory$Listener): void;
        get sealed(): boolean;
        get applicationClassLoader(): Internal.ClassLoader;
        get globalSetter(): Internal.ContextFactory$GlobalSetter;
        get global(): Internal.ContextFactory;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ContextFactory_ = ContextFactory;
    class ChunkPrimer extends Document.Object implements Internal.IChunk, Internal.ExtendedChunk {
        func_201637_h(arg0: BlockPos): void;
        func_201594_d(arg0: BlockPos): void;
        func_201652_l(): Internal.List<Internal.CompoundNBT>;
        func_203066_o(): Internal.Set<BlockPos>;
        func_201612_a(arg0: Internal.Map_<Internal.Structure_<any>, Internal.StructureStart_<any>>): void;
        static func_201635_a(arg0: number, arg1: number, arg2: Internal.ChunkPos): BlockPos;
        func_217310_r(): boolean;
        setBlockEmptinessMap(arg0: boolean[]): void;
        func_205749_a(arg0: CarvingGenerationStep_): Internal.BitSet;
        func_177426_a(arg0: BlockPos, arg1: Internal.TileEntity): void;
        getSkyEmptinessMap(): boolean[];
        func_201589_g(): Internal.ChunkStatus;
        getBlockEmptinessMap(): boolean[];
        func_217306_a(arg0: Internal.WorldLightManager): void;
        func_212247_j(): Internal.ITickList<any>;
        func_212247_j(): Internal.ChunkPrimerTickList<Internal.Fluid>;
        func_201627_k(): Internal.Map<BlockPos, Internal.TileEntity>;
        func_201646_a(arg0: number, arg1: number): void;
        func_217304_m(): Internal.Stream<BlockPos>;
        func_225548_a_(arg0: Internal.BiomeContainer): void;
        func_201606_b(arg0: Internal.Map_<Internal.Structure_<any>, Internal.LongSet_>): void;
        func_201604_d(): Internal.Map<Internal.Structure<any>, Internal.LongSet>;
        func_177416_w(): number;
        func_217332_a(arg0: number): Internal.ChunkSection;
        func_230343_a_(arg0: Internal.Structure<any>, arg1: number): void;
        getSkyNibbles(): any[];
        func_217311_f(): Internal.Collection<Internal.Map$Entry<Internal.Heightmap$Type, Internal.Heightmap>>;
        setBlockNibbles(arg0: any[]): void;
        func_201593_f(): boolean;
        func_201574_a(arg0: Internal.ChunkStatus): void;
        func_201576_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_201632_q(): Internal.Map<BlockPos, Internal.CompoundNBT>;
        func_225549_i_(): Internal.BiomeContainer;
        func_201591_a(arg0: Internal.CompoundNBT): void;
        func_201636_b(arg0: number, arg1: number): void;
        static func_201651_i(arg0: BlockPos): number;
        func_177425_e(arg0: BlockPos): void;
        func_230345_b_(arg0: CarvingGenerationStep_): Internal.BitSet;
        func_230344_a_(arg0: Internal.Structure<any>, arg1: Internal.StructureStart<any>): void;
        func_76632_l(): Internal.ChunkPos;
        setSkyEmptinessMap(arg0: boolean[]): void;
        func_217303_b(arg0: Internal.Heightmap$Type_): Internal.Heightmap;
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
        func_177427_f(arg0: boolean): void;
        func_217305_b(arg0: boolean): void;
        func_205218_i_(): Internal.ITickList<any>;
        func_205218_i_(): Internal.ChunkPrimerTickList<Internal.Block>;
        func_76587_i(): Internal.ChunkSection[];
        func_201647_i(): Internal.ShortList[];
        func_217307_e(): Internal.WorldLightManager;
        func_201609_c(): Internal.Map<Internal.Structure<any>, Internal.StructureStart<any>>;
        func_230342_a_(arg0: Internal.Structure<any>): Internal.StructureStart<any>;
        getBlockNibbles(): any[];
        func_201626_b(arg0: Internal.CompoundNBT): void;
        handler$zji000$onConstruct(arg0: Internal.ChunkPos, arg1: Internal.UpgradeData, arg2: Internal.ChunkSection[], arg3: Internal.ChunkPrimerTickList<any>, arg4: Internal.ChunkPrimerTickList<any>, arg5: Internal.CallbackInfo): void;
        func_201607_a(arg0: Internal.Heightmap$Type_, arg1: number[]): void;
        func_201614_D(): Internal.ShortList[];
        func_76612_a(arg0: Internal.Entity): void;
        setSkyNibbles(arg0: any[]): void;
        func_230346_b_(arg0: Internal.Structure<any>): Internal.LongSet;
        func_177415_c(arg0: number): void;
        func_205767_a(arg0: CarvingGenerationStep_, arg1: Internal.BitSet): void;
        func_177432_b(arg0: number): void;
        func_196966_y(): Internal.UpgradeData;
        func_177436_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: boolean): Internal.BlockState;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_201579_g(arg0: BlockPos): Internal.CompoundNBT;
        func_223134_j(arg0: BlockPos): Internal.CompoundNBT;
        get skyNibbles(): any[];
        get skyEmptinessMap(): boolean[];
        get blockEmptinessMap(): boolean[];
        get blockNibbles(): any[];
        set skyNibbles(arg0: any[]);
        set skyEmptinessMap(arg0: boolean[]);
        set blockEmptinessMap(arg0: boolean[]);
        set blockNibbles(arg0: any[]);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkPrimer_ = ChunkPrimer;
    class EntityLootEventJS extends Internal.LootEventJS {
        addEntity(type: Internal.EntityType<any>, b: ((arg0: Internal.LootBuilder) => void)): void;
        getType(): string;
        modifyEntity(type: Internal.EntityType<any>, b: ((arg0: Internal.LootBuilder) => void)): void;
        getDirectory(): string;
        get type(): string;
        get directory(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityLootEventJS_ = EntityLootEventJS;
    class FluidIngredient extends Document.Object implements Internal.Predicate<net.minecraftforge.fluids.FluidStack> {
        getFluids(): net.minecraftforge.fluids.FluidStack[];
        toJson(): Internal.JsonElement;
        test(arg0: any): boolean;
        test(arg0: net.minecraftforge.fluids.FluidStack): boolean;
        static valueFromJson(arg0: Internal.JsonObject): Internal.FluidIngredient$IFluidList;
        static of(arg0: Internal.ITag<Internal.Fluid>, arg1: number): Internal.FluidIngredient;
        static of(arg0: Internal.Stream<net.minecraftforge.fluids.FluidStack>): Internal.FluidIngredient;
        static of(arg0: net.minecraftforge.fluids.FluidStack[]): Internal.FluidIngredient;
        isEmpty(): boolean;
        static fromJson(arg0: Internal.JsonElement): Internal.FluidIngredient;
        static fromValues(arg0: Internal.Stream<Internal.FluidIngredient$IFluidList>): Internal.FluidIngredient;
        toNetwork(arg0: Internal.PacketBuffer): void;
        static fromNetwork(arg0: Internal.PacketBuffer): Internal.FluidIngredient;
        static readonly EMPTY : Internal.FluidIngredient;
        get fluids(): net.minecraftforge.fluids.FluidStack[];
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FluidIngredient_ = FluidIngredient;
    class SoundHandler extends Internal.ReloadListener<any> {
        func_147689_b(): void;
        func_147687_e(): void;
        func_184399_a(arg0: Internal.SoundCategory_, arg1: number): void;
        func_184398_a(arg0: ResourceLocation_): Internal.SoundEventAccessor;
        func_215293_f(): string;
        func_229364_a_(arg0: Internal.ITickableSound): void;
        getResourceType(): Internal.IResourceType;
        func_215289_a(arg0: Internal.ActiveRenderInfo): void;
        func_215294_c(arg0: Internal.ISound): boolean;
        func_147682_a(arg0: Internal.ISound): void;
        func_147690_c(): void;
        func_147681_a(arg0: Internal.ISound, arg1: number): void;
        func_147683_b(arg0: Internal.ISound): void;
        func_184402_a(arg0: Internal.ISoundEventListener): void;
        func_215290_a(arg0: boolean): void;
        func_147685_d(): void;
        func_184400_b(arg0: Internal.ISoundEventListener): void;
        func_195477_a(): Internal.Collection<ResourceLocation>;
        func_195478_a(arg0: ResourceLocation_, arg1: Internal.SoundCategory_): void;
        static readonly field_147700_a : Internal.Sound;
        readonly field_147694_f : Internal.SoundEngine;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SoundHandler_ = SoundHandler;
    class ExtendedServerListData extends Document.Object {
        numberOfMods : number;
        extraReason : string;
        readonly truncated : boolean;
        readonly type : string;
        readonly isCompatible : boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ExtendedServerListData_ = ExtendedServerListData;
    class TippedArrowRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TippedArrowRecipe_ = TippedArrowRecipe;
    interface ExtendedWorld {
        getChunkAtImmediately(arg0: number, arg1: number): Internal.Chunk;
        getAnyChunkImmediately(arg0: number, arg1: number): Internal.IChunk;
        setCustomLightHandler(arg0: Internal.VariableBlockLightHandler): void;
        getCustomLightHandler(): Internal.VariableBlockLightHandler;
    }
    type ExtendedWorld_ = ExtendedWorld;
    class SafeBlockGetter extends Document.Object implements Internal.IBlockReader {
        func_217301_I(): number;
        func_201572_C(): number;
        shouldUse(): boolean;
        func_204610_c(pos: BlockPos): Internal.FluidState;
        func_175625_s(pos: BlockPos): Internal.TileEntity;
        func_180495_p(pos: BlockPos): Internal.BlockState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SafeBlockGetter_ = SafeBlockGetter;
    class PathPoint extends Document.Object {
        func_224757_c(arg0: Internal.PathPoint): number;
        func_224759_a(): BlockPos;
        func_224758_c(arg0: BlockPos): number;
        hashCode(): number;
        func_186283_a(arg0: number, arg1: number, arg2: number): Internal.PathPoint;
        func_75832_b(arg0: Internal.PathPoint): number;
        static func_186282_b(arg0: Internal.PacketBuffer): Internal.PathPoint;
        equals(arg0: any): boolean;
        func_75831_a(): boolean;
        static func_75830_a(arg0: number, arg1: number, arg2: number): number;
        toString(): string;
        func_75829_a(arg0: Internal.PathPoint): number;
        field_222861_j : number;
        readonly field_75838_c : number;
        field_75836_e : number;
        field_75834_g : number;
        field_186286_l : number;
        readonly field_75839_a : number;
        field_75842_i : boolean;
        readonly field_75837_b : number;
        field_75835_d : number;
        field_75833_f : number;
        field_75841_h : Internal.PathPoint;
        field_186287_m : Internal.PathNodeType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PathPoint_ = PathPoint;
    class CCustomPayloadPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler>, Internal.ICustomPacket<Internal.CCustomPayloadPacket> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        static readonly field_210344_a : ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CCustomPayloadPacket_ = CCustomPayloadPacket;
    class SAnimateBlockBreakPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148845_c(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179821_b(): BlockPos;
        func_148846_g(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SAnimateBlockBreakPacket_ = SAnimateBlockBreakPacket;
    class SCollectItemPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149353_d(): number;
        func_149354_c(): number;
        func_191208_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SCollectItemPacket_ = SCollectItemPacket;
    abstract class MapCodec <A> extends Internal.CompressorHolder implements Internal.MapDecoder<A>, Internal.MapEncoder<A> {
        setPartial(arg0: (() => A)): Internal.MapCodec<A>;
        keys<T_>(arg0: Internal.DynamicOps<T_>): Internal.Stream<T_>;
        deprecated(arg0: number): Internal.MapCodec<A>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.MapDecoder<any>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.MapEncoder<any>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.MapCodec<A>;
        orElse(arg0: ((arg0: string) => void), arg1: A): Internal.MapCodec<A>;
        orElse(arg0: Internal.UnaryOperator<string>, arg1: A): Internal.MapCodec<A>;
        orElse(arg0: A): Internal.MapCodec<A>;
        forGetter<O_>(arg0: ((arg0: O_) => A)): Internal.RecordCodecBuilder<O_, A>;
        codec(): Internal.Codec<A>;
        static unit<A_>(arg0: (() => A_)): Internal.MapCodec<A_>;
        static unit<A_>(arg0: A_): Internal.MapCodec<A_>;
        orElseGet(arg0: Internal.UnaryOperator<string>, arg1: (() => A)): Internal.MapCodec<A>;
        orElseGet(arg0: ((arg0: string) => void), arg1: (() => A)): Internal.MapCodec<A>;
        orElseGet(arg0: (() => A)): Internal.MapCodec<A>;
        flatXmap<S_>(arg0: ((arg0: A) => Internal.DataResult<S_>), arg1: ((arg0: S_) => Internal.DataResult<A>)): Internal.MapCodec<S_>;
        stable(): Internal.MapCodec<A>;
        static of<A_>(arg0: Internal.MapEncoder<A_>, arg1: Internal.MapDecoder<A_>, arg2: (() => string)): Internal.MapCodec<A_>;
        static of<A_>(arg0: Internal.MapEncoder<A_>, arg1: Internal.MapDecoder<A_>): Internal.MapCodec<A_>;
        mapResult(arg0: Internal.MapCodec$ResultFunction<A>): Internal.MapCodec<A>;
        fieldOf(arg0: string): Internal.MapCodec<A>;
        xmap<S_>(arg0: ((arg0: A) => S_), arg1: ((arg0: S_) => A)): Internal.MapCodec<S_>;
        dependent<E_>(arg0: Internal.MapCodec<E_>, arg1: ((arg0: A) => com.mojang.datafixers.util.Pair<E_, Internal.MapCodec<E_>>), arg2: ((arg0: A, arg1: E_) => A)): Internal.MapCodec<A>;
        set partial(arg0: (() => A));
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MapCodec_<A> = MapCodec<A>;
    interface LevelKJS extends Internal.AsKJS {
        asKJS(): any;
    }
    type LevelKJS_ = LevelKJS;
    class SChangeBlockPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_197685_a(): Internal.BlockState;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179827_b(): BlockPos;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SChangeBlockPacket_ = SChangeBlockPacket;
    class JungleFoliagePlacer extends Internal.FoliagePlacer {
        func_230374_a_(arg0: Internal.Random, arg1: number, arg2: Internal.BaseTreeFeatureConfig): number;
        static readonly field_236774_a_ : Internal.Codec<Internal.JungleFoliagePlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JungleFoliagePlacer_ = JungleFoliagePlacer;
    class TexturedGlyph$Effect extends Document.Object {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TexturedGlyph$Effect_ = TexturedGlyph$Effect;
    class UidContext extends Internal.Enum<Internal.UidContext> {
        static valueOf(arg0: string): Internal.UidContext;
        static values(): Internal.UidContext[];
        static readonly Ingredient : Internal.UidContext;
        static readonly Recipe : Internal.UidContext;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type UidContext_ = "ingredient" | "recipe" | UidContext;
    interface ILootCondition extends Internal.IParameterized, Internal.Predicate<Internal.LootContext> {
        func_230419_b_(): Internal.LootConditionType;
    }
    type ILootCondition_ = ILootCondition;
    interface FilenameFilter {
        accept(arg0: Internal.File, arg1: string): boolean;
    }
    type FilenameFilter_ = ((arg0: Internal.File, arg1: string) => boolean) | FilenameFilter;
    class ImmutableSet$Builder <E> extends Internal.ImmutableCollection$ArrayBasedBuilder<E> {
        add(arg0: any[]): Internal.ImmutableCollection$Builder<any>;
        add(arg0: E[]): Internal.ImmutableSet$Builder<E>;
        add(arg0: any): Internal.ImmutableCollection$Builder<any>;
        add(arg0: any): Internal.ImmutableCollection$ArrayBasedBuilder<any>;
        add(arg0: E): Internal.ImmutableSet$Builder<E>;
        build(): Internal.ImmutableSet<E>;
        build(): Internal.ImmutableCollection<any>;
        addAll(arg0: Internal.Iterable<any>): Internal.ImmutableCollection$Builder<any>;
        addAll(arg0: Internal.Iterable<E>): Internal.ImmutableSet$Builder<E>;
        addAll(arg0: Internal.Iterator<E>): Internal.ImmutableSet$Builder<E>;
        addAll(arg0: Internal.Iterator<any>): Internal.ImmutableCollection$Builder<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableSet$Builder_<E> = ImmutableSet$Builder<E>;
    class CrashReport extends Document.Object {
        func_71502_e(): string;
        func_85058_a(arg0: string): Internal.CrashReportCategory;
        func_71505_b(): Internal.Throwable;
        func_71506_a(arg0: Internal.StringBuilder): void;
        static func_230188_h_(): void;
        func_85057_a(arg0: string, arg1: number): Internal.CrashReportCategory;
        func_147149_a(arg0: Internal.File): boolean;
        static func_85055_a(arg0: Internal.Throwable, arg1: string): Internal.CrashReport;
        func_71497_f(): Internal.File;
        func_71501_a(): string;
        func_85056_g(): Internal.CrashReportCategory;
        func_71498_d(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CrashReport_ = CrashReport;
    class ClientPlayerNetworkEvent$LoggedInEvent extends Internal.ClientPlayerNetworkEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientPlayerNetworkEvent$LoggedInEvent_ = ClientPlayerNetworkEvent$LoggedInEvent;
    class PlayerEntity$SleepResult extends Internal.Enum<Internal.PlayerEntity$SleepResult> {
        static valueOf(arg0: string): Internal.PlayerEntity$SleepResult;
        static values(): Internal.PlayerEntity$SleepResult[];
        func_221259_a(): Internal.ITextComponent;
        static readonly OBSTRUCTED : Internal.PlayerEntity$SleepResult;
        static readonly NOT_POSSIBLE_HERE : Internal.PlayerEntity$SleepResult;
        static readonly NOT_POSSIBLE_NOW : Internal.PlayerEntity$SleepResult;
        static readonly NOT_SAFE : Internal.PlayerEntity$SleepResult;
        static readonly OTHER_PROBLEM : Internal.PlayerEntity$SleepResult;
        static readonly TOO_FAR_AWAY : Internal.PlayerEntity$SleepResult;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerEntity$SleepResult_ = "not_possible_here" | "not_possible_now" | "too_far_away" | "obstructed" | "other_problem" | "not_safe" | PlayerEntity$SleepResult;
    interface ShortListIterator extends Internal.ShortBidirectionalIterator, Internal.ListIterator<number> {
        next(): any;
        next(): number;
        add(arg0: number): void;
        add(arg0: any): void;
        add(arg0: number): void;
        set(arg0: any): void;
        set(arg0: number): void;
        set(arg0: number): void;
        previous(): any;
        previous(): number;
        remove(): void;
    }
    type ShortListIterator_ = ShortListIterator;
    class BufferSlice extends Document.Object {
        static pack(start: number, len: number): number;
        static unpackStart(slice: number): number;
        static unpackLength(slice: number): number;
        readonly len : number;
        readonly start : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BufferSlice_ = BufferSlice;
    class ChunkStatus extends Internal.ForgeRegistryEntry<Internal.ChunkStatus> {
        static func_222599_a(arg0: Internal.ChunkStatus): number;
        func_222596_d(): string;
        func_222584_c(): number;
        func_222595_h(): Internal.EnumSet<Internal.Heightmap$Type>;
        static func_222582_a(): Internal.List<Internal.ChunkStatus>;
        static func_222581_a(arg0: number): Internal.ChunkStatus;
        func_223198_a(arg0: Internal.ServerWorld, arg1: Internal.ChunkGenerator, arg2: Internal.TemplateManager, arg3: Internal.ServerWorldLightManager, arg4: ((arg0: Internal.IChunk) => Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>), arg5: Internal.List<Internal.IChunk>): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        static func_222600_b(): number;
        func_209003_a(arg0: Internal.ChunkStatus): boolean;
        static func_222591_a(arg0: string): Internal.ChunkStatus;
        toString(): string;
        func_202128_c(): number;
        func_223201_a(arg0: Internal.ServerWorld, arg1: Internal.TemplateManager, arg2: Internal.ServerWorldLightManager, arg3: ((arg0: Internal.IChunk) => Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>), arg4: Internal.IChunk): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_202129_d(): Internal.ChunkStatus$Type;
        func_222593_e(): Internal.ChunkStatus;
        static readonly field_222614_j : Internal.ChunkStatus;
        static readonly field_222608_d : Internal.ChunkStatus;
        static readonly field_222613_i : Internal.ChunkStatus;
        static readonly field_222607_c : Internal.ChunkStatus;
        static readonly field_222612_h : Internal.ChunkStatus;
        static readonly field_222606_b : Internal.ChunkStatus;
        static readonly field_222611_g : Internal.ChunkStatus;
        static field_222617_m : Internal.ChunkStatus;
        static readonly field_222616_l : Internal.ChunkStatus;
        static readonly field_222615_k : Internal.ChunkStatus;
        static readonly field_222609_e : Internal.ChunkStatus;
        static readonly field_223226_a_ : Internal.ChunkStatus;
        static readonly field_222610_f : Internal.ChunkStatus;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkStatus_ = ChunkStatus;
    interface NonNullPredicate <T> {
        test(arg0: T): boolean;
    }
    type NonNullPredicate_<T> = ((arg0: T) => boolean) | NonNullPredicate<T>;
    class Pose extends Internal.Enum<Internal.Pose> {
        static valueOf(arg0: string): Internal.Pose;
        static values(): Internal.Pose[];
        static readonly SLEEPING : Internal.Pose;
        static readonly FALL_FLYING : Internal.Pose;
        static readonly DYING : Internal.Pose;
        static readonly CROUCHING : Internal.Pose;
        static readonly STANDING : Internal.Pose;
        static readonly SWIMMING : Internal.Pose;
        static readonly SPIN_ATTACK : Internal.Pose;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Pose_ = "standing" | "fall_flying" | "sleeping" | "swimming" | "spin_attack" | "crouching" | "dying" | Pose;
    abstract class AbstractObject2ObjectFunction <K, V> extends Document.Object implements Internal.Object2ObjectFunction<K, V>, Internal.Serializable {
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractObject2ObjectFunction_<K, V> = AbstractObject2ObjectFunction<K, V>;
    class CreeperEntity extends Internal.MonsterEntity implements Internal.IChargeableMob {
        func_70831_j(arg0: number): number;
        func_70829_a(arg0: number): void;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_70071_h_(): void;
        static func_234278_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_225509_J__(): boolean;
        func_175493_co(): void;
        func_82143_as(): number;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_70832_p(): number;
        func_241841_a(arg0: Internal.ServerWorld, arg1: Internal.LightningBoltEntity): void;
        func_146078_ca(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_146079_cb(): void;
        func_70650_aV(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CreeperEntity_ = CreeperEntity;
    interface ObjectSortedSet <K> extends Internal.ObjectSet<K>, Internal.SortedSet<K>, Internal.ObjectBidirectionalIterable<K> {
        tailSet(arg0: any): Internal.SortedSet<any>;
        tailSet(arg0: K): Internal.ObjectSortedSet<K>;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.ObjectIterator<any>;
        iterator(): Internal.ObjectBidirectionalIterator<K>;
        iterator(arg0: K): Internal.ObjectBidirectionalIterator<K>;
        headSet(arg0: K): Internal.ObjectSortedSet<K>;
        headSet(arg0: any): Internal.SortedSet<any>;
        subSet(arg0: any, arg1: any): Internal.SortedSet<any>;
        subSet(arg0: K, arg1: K): Internal.ObjectSortedSet<K>;
    }
    type ObjectSortedSet_<K> = ObjectSortedSet<K>;
    class DamageSource extends Document.Object {
        func_76348_h(): Internal.DamageSource;
        func_180136_u(): boolean;
        func_94540_d(): Internal.DamageSource;
        func_76346_g(): Internal.Entity;
        func_82725_o(): boolean;
        func_94541_c(): boolean;
        func_76349_b(): Internal.DamageSource;
        func_82726_p(): Internal.DamageSource;
        static func_188405_b(arg0: Internal.LivingEntity): Internal.DamageSource;
        static func_226252_a_(arg0: Internal.LivingEntity): Internal.DamageSource;
        static func_188403_a(arg0: Internal.Entity, arg1: Internal.LivingEntity): Internal.DamageSource;
        func_76347_k(): boolean;
        func_188404_v(): Vec3;
        static func_203096_a(arg0: Internal.Entity, arg1: Internal.Entity): Internal.DamageSource;
        static func_76358_a(arg0: Internal.LivingEntity): Internal.DamageSource;
        static func_76356_a(arg0: Internal.Entity, arg1: Internal.Entity): Internal.DamageSource;
        static func_233547_a_(arg0: Internal.AbstractFireballEntity, arg1: Internal.Entity): Internal.DamageSource;
        static func_233549_a_(arg0: Internal.WitherSkullEntity, arg1: Internal.Entity): Internal.DamageSource;
        static func_76354_b(arg0: Internal.Entity, arg1: Internal.Entity): Internal.DamageSource;
        func_76352_a(): boolean;
        static func_76353_a(arg0: Internal.AbstractArrowEntity, arg1: Internal.Entity): Internal.DamageSource;
        func_76355_l(): string;
        func_76359_i(): Internal.DamageSource;
        func_151518_m(): Internal.DamageSource;
        static func_94539_a(arg0: Internal.Explosion): Internal.DamageSource;
        func_76351_m(): Internal.DamageSource;
        func_76350_n(): boolean;
        func_76357_e(): boolean;
        func_151517_h(): boolean;
        static func_92087_a(arg0: Internal.Entity): Internal.DamageSource;
        func_151519_b(arg0: Internal.LivingEntity): Internal.ITextComponent;
        func_76361_j(): Internal.DamageSource;
        func_76364_f(): Internal.Entity;
        func_76345_d(): number;
        toString(): string;
        static func_233546_a_(): Internal.DamageSource;
        static func_233548_a_(arg0: Internal.FireworkRocketEntity, arg1: Internal.Entity): Internal.DamageSource;
        func_76363_c(): boolean;
        static func_76365_a(arg0: Internal.PlayerEntity): Internal.DamageSource;
        static readonly field_76368_d : Internal.DamageSource;
        static readonly field_76366_f : Internal.DamageSource;
        static readonly field_220302_v : Internal.DamageSource;
        static readonly field_188406_j : Internal.DamageSource;
        static readonly field_76380_i : Internal.DamageSource;
        static readonly field_190095_e : Internal.DamageSource;
        static readonly field_76376_m : Internal.DamageSource;
        static readonly field_82727_n : Internal.DamageSource;
        static readonly field_76379_h : Internal.DamageSource;
        static readonly field_76377_j : Internal.DamageSource;
        readonly field_76373_n : string;
        static readonly field_82728_o : Internal.DamageSource;
        static readonly field_76369_e : Internal.DamageSource;
        static readonly field_76367_g : Internal.DamageSource;
        static readonly field_82729_p : Internal.DamageSource;
        static readonly field_205132_u : Internal.DamageSource;
        static readonly field_191291_g : Internal.DamageSource;
        static readonly field_180137_b : Internal.DamageSource;
        static readonly field_76371_c : Internal.DamageSource;
        static readonly field_76372_a : Internal.DamageSource;
        static readonly field_76370_b : Internal.DamageSource;
        static readonly field_188407_q : Internal.DamageSource;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DamageSource_ = DamageSource;
    interface IBucketPickupHandler {
        func_204508_a(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState): Internal.Fluid;
    }
    type IBucketPickupHandler_ = IBucketPickupHandler;
    class RenderGameOverlayEvent$Text extends Internal.RenderGameOverlayEvent$Pre {
        getListenerList(): Internal.ListenerList;
        getRight(): Internal.ArrayList<string>;
        getLeft(): Internal.ArrayList<string>;
        get listenerList(): Internal.ListenerList;
        get left(): Internal.ArrayList<string>;
        get right(): Internal.ArrayList<string>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderGameOverlayEvent$Text_ = RenderGameOverlayEvent$Text;
    interface IRenderTypeBuffer {
        getBuffer(arg0: Internal.RenderType): Internal.IVertexBuilder;
    }
    type IRenderTypeBuffer_ = IRenderTypeBuffer;
    class Material extends Document.Object {
        func_76217_h(): boolean;
        func_76222_j(): boolean;
        func_186274_m(): Internal.PushReaction;
        func_76224_d(): boolean;
        func_76218_k(): boolean;
        func_76230_c(): boolean;
        func_151565_r(): Internal.MaterialColor;
        func_76220_a(): boolean;
        static readonly field_215711_w : Internal.Material;
        static readonly field_204868_h : Internal.Material;
        static readonly field_151588_w : Internal.Material;
        static readonly field_151589_v : Internal.Material;
        static readonly field_189963_J : Internal.Material;
        static readonly field_151569_G : Internal.Material;
        static readonly field_151593_r : Internal.Material;
        static readonly field_151594_q : Internal.Material;
        static readonly field_151591_t : Internal.Material;
        static readonly field_151595_p : Internal.Material;
        static readonly field_151590_u : Internal.Material;
        static readonly field_151592_s : Internal.Material;
        static readonly field_76233_E : Internal.Material;
        static readonly field_175972_I : Internal.Material;
        static readonly field_151579_a : Internal.Material;
        static readonly field_151577_b : Internal.Material;
        static readonly field_151575_d : Internal.Material;
        static readonly field_151573_f : Internal.Material;
        static readonly field_151566_D : Internal.Material;
        static readonly field_151578_c : Internal.Material;
        static readonly field_151576_e : Internal.Material;
        static readonly field_151574_g : Internal.Material;
        static readonly field_151567_E : Internal.Material;
        static readonly field_151568_F : Internal.Material;
        static readonly field_151570_A : Internal.Material;
        static readonly field_203243_f : Internal.Material;
        static readonly field_151571_B : Internal.Material;
        static readonly field_203244_i : Internal.Material;
        static readonly field_151572_C : Internal.Material;
        static readonly field_151597_y : Internal.Material;
        static readonly field_151596_z : Internal.Material;
        static readonly field_237214_y_ : Internal.Material;
        static readonly field_151598_x : Internal.Material;
        static readonly field_242934_h : Internal.Material;
        static readonly field_151582_l : Internal.Material;
        static readonly field_151586_h : Internal.Material;
        static readonly field_215713_z : Internal.Material;
        static readonly field_151580_n : Internal.Material;
        static readonly field_151584_j : Internal.Material;
        static readonly field_151585_k : Internal.Material;
        static readonly field_151587_i : Internal.Material;
        static readonly field_151581_o : Internal.Material;
        static readonly field_151583_m : Internal.Material;
        static readonly field_215712_y : Internal.Material;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Material_ = Material;
    interface IIngredientManager {
        getIngredientRenderer<V>(arg0: Internal.IIngredientType<V>): Internal.IIngredientRenderer<V>;
        getIngredientRenderer<V>(arg0: V): Internal.IIngredientRenderer<V>;
        getIngredientHelper<V>(arg0: Internal.IIngredientType<V>): Internal.IIngredientHelper<V>;
        getIngredientHelper<V>(arg0: V): Internal.IIngredientHelper<V>;
        getIngredientType<V>(arg0: V): Internal.IIngredientType<V>;
        getIngredientType<V>(arg0: Internal.Class_<V>): Internal.IIngredientType<V>;
        removeIngredientsAtRuntime<V>(arg0: Internal.IIngredientType<V>, arg1: Internal.Collection<V>): void;
        getAllIngredients<V>(arg0: Internal.IIngredientType<V>): Internal.Collection<V>;
        addIngredientsAtRuntime<V>(arg0: Internal.IIngredientType<V>, arg1: Internal.Collection<V>): void;
        getRegisteredIngredientTypes(): Internal.Collection<Internal.IIngredientType<any>>;
    }
    type IIngredientManager_ = IIngredientManager;
    interface EventHandlerImplCommon$WorldEventAttachment {
        architectury$getAttachedLevel(): Internal.IWorld;
        architectury$attachLevel(arg0: Internal.IWorld): void;
    }
    type EventHandlerImplCommon$WorldEventAttachment_ = EventHandlerImplCommon$WorldEventAttachment;
    class WitherEntity extends Internal.MonsterEntity implements Internal.IChargeableMob, Internal.IRangedAttackMob {
        func_195064_c(arg0: Internal.EffectInstance): boolean;
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        func_184222_aU(): boolean;
        func_82212_n(): number;
        static func_181033_a(arg0: Internal.BlockState): boolean;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_82210_r(arg0: number): number;
        func_82211_c(arg0: number, arg1: number): void;
        func_82207_a(arg0: number): number;
        static func_234258_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_225509_J__(): boolean;
        func_70687_e(arg0: Internal.EffectInstance): boolean;
        func_213295_a(arg0: Internal.BlockState, arg1: Vec3): void;
        func_70668_bt(): Internal.CreatureAttribute;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184178_b(arg0: Internal.ServerPlayerEntity): void;
        func_82206_m(): void;
        func_184203_c(arg0: Internal.ServerPlayerEntity): void;
        func_70636_d(): void;
        func_200203_b(arg0: Internal.ITextComponent_): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70623_bb(): void;
        func_82203_t(arg0: number): number;
        func_82215_s(arg0: number): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WitherEntity_ = WitherEntity;
    class WitchEntity extends Internal.AbstractRaiderEntity implements Internal.IRangedAttackMob {
        func_213654_dW(): Internal.SoundEvent;
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        static func_234323_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_213660_a(arg0: number, arg1: boolean): void;
        func_184730_o(): boolean;
        func_213637_dY(): boolean;
        func_70636_d(): void;
        func_70103_a(arg0: number): void;
        func_82197_f(arg0: boolean): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WitchEntity_ = WitchEntity;
    interface ModuleFinder {
        find(arg0: string): Internal.Optional<Internal.ModuleReference>;
        findAll(): Internal.Set<Internal.ModuleReference>;
    }
    type ModuleFinder_ = ModuleFinder;
    class WailaRenderEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getPosition(): Internal.Rectangle;
        get listenerList(): Internal.ListenerList;
        get position(): Internal.Rectangle;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WailaRenderEvent_ = WailaRenderEvent;
    class PolarBearEntity extends Internal.AnimalEntity implements Internal.IAngerable {
        func_230256_F__(): number;
        static func_223320_c(arg0: Internal.EntityType<Internal.PolarBearEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70071_h_(): void;
        func_230258_H__(): void;
        func_213305_a(arg0: Internal.Pose_): Internal.EntitySize;
        func_230260_a__(arg0: number): void;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_189793_df(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_189795_r(arg0: number): number;
        static func_234219_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_230257_G__(): Internal.UUID;
        func_189794_p(arg0: boolean): void;
        func_230259_a_(arg0: Internal.UUID): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PolarBearEntity_ = PolarBearEntity;
    abstract class UserPrincipalLookupService extends Document.Object {
        lookupPrincipalByGroupName(arg0: string): Internal.GroupPrincipal;
        lookupPrincipalByName(arg0: string): Internal.UserPrincipal;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type UserPrincipalLookupService_ = UserPrincipalLookupService;
    interface UnaryOperator <T> extends Internal.Function<T, T> {
    }
    type UnaryOperator_<T> = UnaryOperator<T>;
    class BlockPlacerType <P> extends Internal.ForgeRegistryEntry<Internal.BlockPlacerType<any>> {
        func_236437_a_(): Internal.Codec<P>;
        static readonly field_227261_c_ : Internal.BlockPlacerType<Internal.ColumnBlockPlacer>;
        static readonly field_227259_a_ : Internal.BlockPlacerType<Internal.SimpleBlockPlacer>;
        static readonly field_227260_b_ : Internal.BlockPlacerType<Internal.DoublePlantBlockPlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockPlacerType_<P> = BlockPlacerType<P>;
    class BeeDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_228964_a_(arg0: Internal.BeeDebugRenderer$Bee): void;
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: number, arg4: number): void;
        func_228966_a_(arg0: Internal.BeeDebugRenderer$Hive): void;
        func_217675_a(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BeeDebugRenderer_ = BeeDebugRenderer;
    class BasicThermalRecipeJS extends Internal.ThermalRecipeJS {
        minTicks(arg0: number): Internal.BasicThermalRecipeJS;
        serialize(): void;
        create(arg0: Internal.ListJS): void;
        experience(arg0: number): Internal.BasicThermalRecipeJS;
        deserialize(): void;
        inKey : string;
        outKey : string;
        outputFluids : Internal.ArrayList<Internal.FluidStackJS>;
        inputFluids : Internal.ArrayList<Internal.FluidIngredient>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BasicThermalRecipeJS_ = BasicThermalRecipeJS;
    class BlockStateProvidingFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        readonly field_227268_a_ : Internal.BlockStateProvider;
        static readonly field_236453_a_ : Internal.Codec<Internal.BlockStateProvidingFeatureConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockStateProvidingFeatureConfig_ = BlockStateProvidingFeatureConfig;
    class DayOfWeek extends Internal.Enum<Internal.DayOfWeek> implements Internal.TemporalAccessor, Internal.TemporalAdjuster {
        minus(arg0: number): Internal.DayOfWeek;
        static valueOf(arg0: string): Internal.DayOfWeek;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        static values(): Internal.DayOfWeek[];
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        isSupported(arg0: Internal.TemporalField): boolean;
        plus(arg0: number): Internal.DayOfWeek;
        getLong(arg0: Internal.TemporalField): number;
        getValue(): number;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        static of(arg0: number): Internal.DayOfWeek;
        get(arg0: Internal.TemporalField): number;
        static from(arg0: Internal.TemporalAccessor): Internal.DayOfWeek;
        static readonly WEDNESDAY : Internal.DayOfWeek;
        static readonly MONDAY : Internal.DayOfWeek;
        static readonly THURSDAY : Internal.DayOfWeek;
        static readonly SUNDAY : Internal.DayOfWeek;
        static readonly TUESDAY : Internal.DayOfWeek;
        static readonly FRIDAY : Internal.DayOfWeek;
        static readonly SATURDAY : Internal.DayOfWeek;
        get value(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DayOfWeek_ = "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday" | DayOfWeek;
    class SCombatPacket$Event extends Internal.Enum<Internal.SCombatPacket$Event> {
        static valueOf(arg0: string): Internal.SCombatPacket$Event;
        static values(): Internal.SCombatPacket$Event[];
        static readonly ENTITY_DIED : Internal.SCombatPacket$Event;
        static readonly ENTER_COMBAT : Internal.SCombatPacket$Event;
        static readonly END_COMBAT : Internal.SCombatPacket$Event;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SCombatPacket$Event_ = "enter_combat" | "end_combat" | "entity_died" | SCombatPacket$Event;
    class RecordCodecBuilder$Mu <O> extends Document.Object implements Internal.K1 {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecordCodecBuilder$Mu_<O> = RecordCodecBuilder$Mu<O>;
    class PotionEvent extends Internal.LivingEvent {
        getPotionEffect(): Internal.EffectInstance;
        getListenerList(): Internal.ListenerList;
        get potionEffect(): Internal.EffectInstance;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PotionEvent_ = PotionEvent;
    interface Spliterator$OfPrimitive <T, T_CONS, T_SPLITR> extends Internal.Spliterator<T> {
        trySplit(): Internal.Spliterator<any>;
        trySplit(): T_SPLITR;
        tryAdvance(arg0: T_CONS): boolean;
        forEachRemaining(arg0: T_CONS): void;
    }
    type Spliterator$OfPrimitive_<T, T_CONS, T_SPLITR> = Spliterator$OfPrimitive<T, T_CONS, T_SPLITR>;
    interface VertexType <T> {
        createFallbackWriter(arg0: Internal.IVertexBuilder): T;
        asBlittable(): Internal.BlittableVertexType<T>;
    }
    type VertexType_<T> = VertexType<T>;
    class TickEvent$Type extends Internal.Enum<Internal.TickEvent$Type> {
        static valueOf(arg0: string): Internal.TickEvent$Type;
        static values(): Internal.TickEvent$Type[];
        static readonly PLAYER : Internal.TickEvent$Type;
        static readonly SERVER : Internal.TickEvent$Type;
        static readonly RENDER : Internal.TickEvent$Type;
        static readonly WORLD : Internal.TickEvent$Type;
        static readonly CLIENT : Internal.TickEvent$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TickEvent$Type_ = "world" | "player" | "client" | "server" | "render" | TickEvent$Type;
    interface IGuiHelper {
        createDrawable(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number): Internal.IDrawableStatic;
        createCraftingGridHelper(arg0: number): Internal.ICraftingGridHelper;
        drawableBuilder(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number): Internal.IDrawableBuilder;
        createTickTimer(arg0: number, arg1: number, arg2: boolean): Internal.ITickTimer;
        createAnimatedDrawable(arg0: Internal.IDrawableStatic, arg1: number, arg2: Internal.IDrawableAnimated$StartDirection_, arg3: boolean): Internal.IDrawableAnimated;
        createBlankDrawable(arg0: number, arg1: number): Internal.IDrawableStatic;
        createDrawableIngredient<V>(arg0: V): Internal.IDrawable;
        getSlotDrawable(): Internal.IDrawableStatic;
    }
    type IGuiHelper_ = IGuiHelper;
    class FireworkRocketEntity extends Internal.ProjectileEntity implements Internal.IRendersAsItem, Internal.FireworkRocketEntityKJS {
        func_213297_N(): Internal.IPacket<any>;
        func_213889_i(): boolean;
        func_184543_l(): Internal.ItemStack;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_145770_h(arg0: number, arg1: number, arg2: number): boolean;
        func_70075_an(): boolean;
        func_70071_h_(): void;
        func_70103_a(arg0: number): void;
        setLifetimeKJS(arg0: number): void;
        func_70112_a(arg0: number): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        set lifetimeKJS(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FireworkRocketEntity_ = FireworkRocketEntity;
    interface ITutorialStep {
        func_193251_c(): void;
        func_193252_a(arg0: Internal.ItemStack): void;
        func_195870_a(arg0: number, arg1: number): void;
        func_193246_a(arg0: Internal.ClientWorld, arg1: Internal.RayTraceResult): void;
        func_193247_a(arg0: Internal.MovementInput): void;
        func_193245_a(): void;
        func_193248_b(): void;
        func_193250_a(arg0: Internal.ClientWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: number): void;
    }
    type ITutorialStep_ = ITutorialStep;
    interface ArgumentType <T> {
        listSuggestions<S>(arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        getExamples(): Internal.Collection<string>;
        parse(arg0: Internal.StringReader): T;
    }
    type ArgumentType_<T> = ArgumentType<T>;
    class Products$P3 <F, T1, T2, T3> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function3<T1, T2, T3, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function3<T1, T2, T3, R_>>): Internal.App<F, R_>;
        and<T4_, T5_, T6_, T7_>(arg0: Internal.Products$P4<F, T4_, T5_, T6_, T7_>): Internal.Products$P7<F, T1, T2, T3, T4_, T5_, T6_, T7_>;
        and<T4_>(arg0: Internal.App<F, T4_>): Internal.Products$P4<F, T1, T2, T3, T4_>;
        and<T4_, T5_>(arg0: Internal.Products$P2<F, T4_, T5_>): Internal.Products$P5<F, T1, T2, T3, T4_, T5_>;
        and<T4_, T5_, T6_>(arg0: Internal.Products$P3<F, T4_, T5_, T6_>): Internal.Products$P6<F, T1, T2, T3, T4_, T5_, T6_>;
        and<T4_, T5_, T6_, T7_, T8_>(arg0: Internal.Products$P5<F, T4_, T5_, T6_, T7_, T8_>): Internal.Products$P8<F, T1, T2, T3, T4_, T5_, T6_, T7_, T8_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        t3(): Internal.App<F, T3>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P3_<F, T1, T2, T3> = Products$P3<F, T1, T2, T3>;
    interface IStructureProcessorType <P> {
        codec(): Internal.Codec<P>;
    }
    type IStructureProcessorType_<P> = IStructureProcessorType<P>;
    class DrawHighlightEvent extends net.minecraftforge.eventbus.api.Event {
        getTarget(): Internal.RayTraceResult;
        getListenerList(): Internal.ListenerList;
        getMatrix(): Internal.MatrixStack;
        getInfo(): Internal.ActiveRenderInfo;
        getPartialTicks(): number;
        getBuffers(): Internal.IRenderTypeBuffer;
        isCancelable(): boolean;
        getContext(): Internal.WorldRenderer;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get buffers(): Internal.IRenderTypeBuffer;
        get context(): Internal.WorldRenderer;
        get matrix(): Internal.MatrixStack;
        get target(): Internal.RayTraceResult;
        get info(): Internal.ActiveRenderInfo;
        get partialTicks(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DrawHighlightEvent_ = DrawHighlightEvent;
    class ConfiguredFeature <FC, F> extends Document.Object implements Internal.IDecoratable<Internal.ConfiguredFeature<any, any>> {
        func_242767_c(): FC;
        func_227227_a_(arg0: number): Internal.ConfiguredRandomFeatureList;
        func_242766_b(): F;
        func_242765_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos): boolean;
        func_227228_a_(arg0: Internal.ConfiguredPlacement<any>): Internal.ConfiguredFeature<any, any>;
        func_227228_a_(arg0: Internal.ConfiguredPlacement<any>): any;
        func_242768_d(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236264_b_ : Internal.Codec<(() => Internal.ConfiguredFeature<any, any>)>;
        static readonly field_227226_a_ : Internal.Logger;
        readonly field_222738_b : FC;
        readonly field_222737_a : F;
        static readonly field_242764_c : Internal.Codec<Internal.List<(() => Internal.ConfiguredFeature<any, any>)>>;
        static readonly field_242763_a : Internal.Codec<Internal.ConfiguredFeature<any, any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ConfiguredFeature_<FC, F> = ConfiguredFeature<FC, F>;
    interface BiPredicate <T, U> {
        or(arg0: ((arg0: T, arg1: U) => boolean)): Internal.BiPredicate<T, U>;
        test(arg0: T, arg1: U): boolean;
        and(arg0: ((arg0: T, arg1: U) => boolean)): Internal.BiPredicate<T, U>;
        negate(): Internal.BiPredicate<T, U>;
    }
    type BiPredicate_<T, U> = ((arg0: T, arg1: U) => boolean) | BiPredicate<T, U>;
    class HideJEIEventJS <T> extends Internal.EventJS {
        hide(o: any): void;
        getAllIngredients(): Internal.Collection<T>;
        hideAll(): void;
        get allIngredients(): Internal.Collection<T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HideJEIEventJS_<T> = HideJEIEventJS<T>;
    class ListJS extends Internal.ArrayList<any> implements Internal.StringBuilderAppendable, Internal.ChangeListener<any>, Internal.Copyable, Internal.JsonSerializable, Internal.NBTSerializable {
        add(value: any): boolean;
        add(index: number, value: any): void;
        static nbt(list: any): Internal.CollectionNBT<any>;
        appendString(builder: Internal.StringBuilder): void;
        onChanged(o: any): void;
        splice(pos: number, deleteCount: number, items: any[]): Internal.ListJS;
        shift(): any;
        clear(): void;
        static ofArray(array: any): Internal.ListJS;
        reverse(): Internal.ListJS;
        push(o: any[]): Internal.ListJS;
        remove(o: any): boolean;
        remove(index: number): any;
        pop(): any;
        filter(predicate: ((arg0: any) => boolean)): Internal.ListJS;
        toJson(): Internal.JsonElement;
        toJson(): Internal.JsonArray;
        toNBT(): Internal.CollectionNBT<any>;
        toNBT(): Internal.INBT;
        addAll(c: Internal.Collection<any>): boolean;
        addAll(index: number, c: Internal.Collection<any>): boolean;
        static of(array: number[]): Internal.ListJS;
        static of(array: string[]): Internal.ListJS;
        static of(array: number[]): Internal.ListJS;
        static of(array: number[]): Internal.ListJS;
        static of(o: any): Internal.ListJS;
        static of(array: number[]): Internal.ListJS;
        static of(array: number[]): Internal.ListJS;
        static of(array: number[]): Internal.ListJS;
        static orSelf(o: any): Internal.ListJS;
        static json(array: any): Internal.JsonArray;
        getLength(): number;
        toString(): string;
        unshift(o: any[]): Internal.ListJS;
        copy(): Internal.Copyable;
        copy(): Internal.ListJS;
        map(transformer: ((arg0: any) => any)): Internal.ListJS;
        changeListener : ((arg0: Internal.ListJS) => void);
        get length(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ListJS_ = ListJS;
    class EffectType extends Internal.Enum<Internal.EffectType> {
        func_220306_a(): Internal.TextFormatting;
        static valueOf(arg0: string): Internal.EffectType;
        static values(): Internal.EffectType[];
        static readonly HARMFUL : Internal.EffectType;
        static readonly BENEFICIAL : Internal.EffectType;
        static readonly NEUTRAL : Internal.EffectType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EffectType_ = "beneficial" | "harmful" | "neutral" | EffectType;
    interface Object2IntMap <K> extends Internal.Object2IntFunction<K>, Internal.Map<K, number> {
        object2IntEntrySet(): Internal.ObjectSet<Internal.Object2IntMap$Entry<K>>;
        getOrDefault(arg0: any, arg1: number): number;
        getOrDefault(arg0: any, arg1: number): number;
        getOrDefault(arg0: any, arg1: any): any;
        computeIntIfAbsentPartial(arg0: K, arg1: ((arg0: any) => number)): number;
        entrySet(): Internal.Set<any>;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<K, number>>;
        containsKey(arg0: any): boolean;
        values(): Internal.IntCollection;
        values(): Internal.Collection<any>;
        replace(arg0: K, arg1: number, arg2: number): boolean;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        replace(arg0: K, arg1: number): number;
        replace(arg0: K, arg1: number, arg2: number): boolean;
        replace(arg0: K, arg1: number): number;
        clear(): void;
        containsValue(arg0: number): boolean;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: number): number;
        put(arg0: any, arg1: any): any;
        remove(arg0: any): any;
        remove(arg0: any): number;
        remove(arg0: any, arg1: number): boolean;
        remove(arg0: any, arg1: any): boolean;
        mergeInt(arg0: K, arg1: number, arg2: ((arg0: number, arg1: number) => number)): number;
        defaultReturnValue(arg0: number): void;
        defaultReturnValue(): number;
        computeIntIfAbsent(arg0: K, arg1: ((arg0: K) => number)): number;
        size(): number;
        merge(arg0: any, arg1: any, arg2: ((arg0: any, arg1: any) => any)): any;
        merge(arg0: K, arg1: number, arg2: ((arg0: number, arg1: number) => number)): number;
        get(arg0: any): number;
        get(arg0: any): any;
        computeIntIfPresent(arg0: K, arg1: ((arg0: K, arg1: number) => number)): number;
        keySet(): Internal.ObjectSet<K>;
        keySet(): Internal.Set<any>;
        putIfAbsent(arg0: K, arg1: number): number;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: K, arg1: number): number;
        computeInt(arg0: K, arg1: ((arg0: K, arg1: number) => number)): number;
    }
    type Object2IntMap_<K> = Object2IntMap<K>;
    class BackgroundMusicSelector extends Document.Object {
        func_232668_d_(): boolean;
        func_232666_c_(): number;
        func_232661_a_(): Internal.SoundEvent;
        func_232664_b_(): number;
        static readonly field_232656_a_ : Internal.Codec<Internal.BackgroundMusicSelector>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BackgroundMusicSelector_ = BackgroundMusicSelector;
    interface ChannelOutboundInvoker {
        disconnect(): Internal.ChannelFuture;
        disconnect(arg0: Internal.ChannelPromise): Internal.ChannelFuture;
        read(): Internal.ChannelOutboundInvoker;
        newProgressivePromise(): Internal.ChannelProgressivePromise;
        deregister(): Internal.ChannelFuture;
        deregister(arg0: Internal.ChannelPromise): Internal.ChannelFuture;
        newFailedFuture(arg0: Internal.Throwable): Internal.ChannelFuture;
        writeAndFlush(arg0: any): Internal.ChannelFuture;
        writeAndFlush(arg0: any, arg1: Internal.ChannelPromise): Internal.ChannelFuture;
        bind(arg0: Internal.SocketAddress): Internal.ChannelFuture;
        bind(arg0: Internal.SocketAddress, arg1: Internal.ChannelPromise): Internal.ChannelFuture;
        flush(): Internal.ChannelOutboundInvoker;
        newSucceededFuture(): Internal.ChannelFuture;
        voidPromise(): Internal.ChannelPromise;
        close(arg0: Internal.ChannelPromise): Internal.ChannelFuture;
        close(): Internal.ChannelFuture;
        write(arg0: any, arg1: Internal.ChannelPromise): Internal.ChannelFuture;
        write(arg0: any): Internal.ChannelFuture;
        connect(arg0: Internal.SocketAddress, arg1: Internal.SocketAddress, arg2: Internal.ChannelPromise): Internal.ChannelFuture;
        connect(arg0: Internal.SocketAddress, arg1: Internal.SocketAddress): Internal.ChannelFuture;
        connect(arg0: Internal.SocketAddress): Internal.ChannelFuture;
        connect(arg0: Internal.SocketAddress, arg1: Internal.ChannelPromise): Internal.ChannelFuture;
        newPromise(): Internal.ChannelPromise;
    }
    type ChannelOutboundInvoker_ = ChannelOutboundInvoker;
    class RemoveOresProperties extends Document.Object {
        setWorldgenLayer(id: string): void;
        readonly biomes : Internal.WorldgenEntryList;
        blocks : Internal.BlockStatePredicate;
        _worldgenLayer : DecorationGenerationStep;
        set worldgenLayer(id: string);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RemoveOresProperties_ = RemoveOresProperties;
    class LeaveVineTreeDecorator extends Internal.TreeDecorator {
        func_225576_a_(arg0: Internal.ISeedReader, arg1: Internal.Random, arg2: Internal.List<BlockPos>, arg3: Internal.List<BlockPos>, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox): void;
        static readonly field_236870_a_ : Internal.Codec<Internal.LeaveVineTreeDecorator>;
        static readonly field_236871_b_ : Internal.LeaveVineTreeDecorator;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LeaveVineTreeDecorator_ = LeaveVineTreeDecorator;
    interface JEISubtypesEventJS$Interpreter extends Internal.Function<Internal.ItemStackJS, any> {
    }
    type JEISubtypesEventJS$Interpreter_ = JEISubtypesEventJS$Interpreter;
    class FunctionManager extends Document.Object {
        func_195446_d(): Internal.CommandDispatcher<Internal.CommandSource>;
        func_240949_f_(): Internal.Iterable<ResourceLocation>;
        func_193065_c(): number;
        func_195448_f(): Internal.CommandSource;
        func_240950_g_(): Internal.Iterable<ResourceLocation>;
        func_73660_a(): void;
        func_240947_b_(arg0: ResourceLocation_): Internal.ITag<Internal.FunctionObject>;
        func_240946_a_(arg0: Internal.FunctionReloader): void;
        func_195447_a(arg0: Internal.FunctionObject, arg1: Internal.CommandSource): number;
        func_215361_a(arg0: ResourceLocation_): Internal.Optional<Internal.FunctionObject>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FunctionManager_ = FunctionManager;
    interface IRenderable {
        func_230430_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
    }
    type IRenderable_ = IRenderable;
    abstract class FloatBuffer extends Internal.Buffer implements Internal.Comparable<Internal.FloatBuffer> {
        hasArray(): boolean;
        compact(): Internal.FloatBuffer;
        clear(): Internal.FloatBuffer;
        clear(): Internal.Buffer;
        duplicate(): Internal.FloatBuffer;
        duplicate(): Internal.Buffer;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.FloatBuffer): number;
        asReadOnlyBuffer(): Internal.FloatBuffer;
        put(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.FloatBuffer;
        put(arg0: number, arg1: number[]): Internal.FloatBuffer;
        put(arg0: number, arg1: Internal.FloatBuffer, arg2: number, arg3: number): Internal.FloatBuffer;
        put(arg0: number[]): Internal.FloatBuffer;
        put(arg0: Internal.FloatBuffer): Internal.FloatBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.FloatBuffer;
        put(arg0: number): Internal.FloatBuffer;
        put(arg0: number, arg1: number): Internal.FloatBuffer;
        static allocate(arg0: number): Internal.FloatBuffer;
        rewind(): Internal.FloatBuffer;
        rewind(): Internal.Buffer;
        slice(): Internal.FloatBuffer;
        slice(): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.FloatBuffer;
        array(): number[];
        array(): any;
        hashCode(): number;
        mismatch(arg0: Internal.FloatBuffer): number;
        equals(arg0: any): boolean;
        get(arg0: number, arg1: number[]): Internal.FloatBuffer;
        get(arg0: number): number;
        get(arg0: number[], arg1: number, arg2: number): Internal.FloatBuffer;
        get(arg0: number[]): Internal.FloatBuffer;
        get(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.FloatBuffer;
        get(): number;
        limit(arg0: number): Internal.Buffer;
        limit(arg0: number): Internal.FloatBuffer;
        arrayOffset(): number;
        reset(): Internal.Buffer;
        reset(): Internal.FloatBuffer;
        toString(): string;
        position(arg0: number): Internal.FloatBuffer;
        position(arg0: number): Internal.Buffer;
        flip(): Internal.Buffer;
        flip(): Internal.FloatBuffer;
        isDirect(): boolean;
        static wrap(arg0: number[], arg1: number, arg2: number): Internal.FloatBuffer;
        static wrap(arg0: number[]): Internal.FloatBuffer;
        mark(): Internal.FloatBuffer;
        mark(): Internal.Buffer;
        order(): Internal.ByteOrder;
        get direct(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FloatBuffer_ = FloatBuffer;
    class SRecipeBookPacket$State extends Internal.Enum<Internal.SRecipeBookPacket$State> {
        static valueOf(arg0: string): Internal.SRecipeBookPacket$State;
        static values(): Internal.SRecipeBookPacket$State[];
        static readonly ADD : Internal.SRecipeBookPacket$State;
        static readonly INIT : Internal.SRecipeBookPacket$State;
        static readonly REMOVE : Internal.SRecipeBookPacket$State;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SRecipeBookPacket$State_ = "init" | "add" | "remove" | SRecipeBookPacket$State;
    interface LongConsumer {
        andThen(arg0: ((arg0: number) => void)): Internal.LongConsumer;
        accept(arg0: number): void;
    }
    type LongConsumer_ = ((arg0: number) => void) | LongConsumer;
    class DimensionSavedDataManager extends Document.Object {
        func_215757_a(arg0: Internal.WorldSavedData): void;
        func_212775_b(): void;
        func_215752_a<T_>(arg0: (() => T_), arg1: string): T_;
        func_215755_a(arg0: string, arg1: number): Internal.CompoundNBT;
        func_215753_b<T_>(arg0: (() => T_), arg1: string): T_;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DimensionSavedDataManager_ = DimensionSavedDataManager;
    class JsonNull extends Internal.JsonElement {
        hashCode(): number;
        equals(arg0: any): boolean;
        static readonly INSTANCE : Internal.JsonNull;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JsonNull_ = JsonNull;
    interface Runnable {
        run(): void;
    }
    type Runnable_ = (() => void) | Runnable;
    class GrindstoneContainer extends Internal.Container {
        func_75130_a(arg0: Internal.IInventory): void;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GrindstoneContainer_ = GrindstoneContainer;
    class VertexData extends Document.Object {
        readonly format : Internal.GlVertexFormat<any>;
        readonly buffer : Internal.ByteBuffer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VertexData_ = VertexData;
    abstract class ShootableItem extends Internal.Item {
        func_77619_b(): number;
        func_230305_d_(): number;
        static func_220005_a(arg0: Internal.LivingEntity, arg1: ((arg0: Internal.ItemStack) => boolean)): Internal.ItemStack;
        func_220004_b(): Internal.Predicate<Internal.ItemStack>;
        func_220006_d(): Internal.Predicate<Internal.ItemStack>;
        static readonly field_220007_a : ((arg0: Internal.ItemStack) => boolean);
        static readonly field_220008_b : ((arg0: Internal.ItemStack) => boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShootableItem_ = ShootableItem;
    class Schedule extends Internal.ForgeRegistryEntry<Internal.Schedule> {
        func_221377_a(arg0: number): Internal.Activity;
        static readonly field_221386_d : Internal.Schedule;
        static readonly field_221385_c : Internal.Schedule;
        static readonly field_221384_b : Internal.Schedule;
        static readonly field_221383_a : Internal.Schedule;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Schedule_ = Schedule;
    class Products$P15 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P15_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> = Products$P15<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>;
    class ReuseableStream <T> extends Document.Object {
        func_212761_a(): Internal.Stream<T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ReuseableStream_<T> = ReuseableStream<T>;
    interface ChannelInboundHandler extends Internal.ChannelHandler {
        channelInactive(arg0: Internal.ChannelHandlerContext): void;
        channelUnregistered(arg0: Internal.ChannelHandlerContext): void;
        channelReadComplete(arg0: Internal.ChannelHandlerContext): void;
        channelActive(arg0: Internal.ChannelHandlerContext): void;
        exceptionCaught(arg0: Internal.ChannelHandlerContext, arg1: Internal.Throwable): void;
        userEventTriggered(arg0: Internal.ChannelHandlerContext, arg1: any): void;
        channelRegistered(arg0: Internal.ChannelHandlerContext): void;
        channelRead(arg0: Internal.ChannelHandlerContext, arg1: any): void;
        channelWritabilityChanged(arg0: Internal.ChannelHandlerContext): void;
    }
    type ChannelInboundHandler_ = ChannelInboundHandler;
    abstract class Feature <FC> extends Internal.ForgeRegistryEntry<Internal.Feature<any>> {
        static func_227250_b_(arg0: Internal.Block): boolean;
        func_236292_a_(): Internal.Codec<Internal.ConfiguredFeature<FC, Internal.Feature<FC>>>;
        static func_236293_a_(arg0: Internal.IWorldGenerationBaseReader, arg1: BlockPos): boolean;
        func_241855_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos, arg4: FC): boolean;
        static func_236297_b_(arg0: Internal.IWorldGenerationBaseReader, arg1: BlockPos): boolean;
        func_225566_b_(arg0: FC): Internal.ConfiguredFeature<FC, any>;
        static readonly field_202319_S : Internal.Feature<Internal.BigMushroomFeatureConfig>;
        static readonly field_236287_R_ : Internal.Feature<Internal.BlobReplacementConfig>;
        static readonly field_203234_at : Internal.SeaGrassFeature;
        static readonly field_236286_Q_ : Internal.Feature<Internal.BasaltDeltasFeature>;
        static readonly field_204621_ay : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_236285_P_ : Internal.Feature<Internal.ColumnConfig>;
        static readonly field_202283_ac : Internal.Feature<Internal.BlockStateFeatureConfig>;
        static readonly field_214482_aJ : Internal.Feature<Internal.ProbabilityConfig>;
        static readonly field_214486_aN : Internal.Feature<Internal.FillLayerConfig>;
        static readonly field_236281_L_ : Internal.Feature<Internal.HugeFungusConfig>;
        static readonly field_205171_af : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_236282_M_ : Internal.Feature<Internal.BlockStateProvidingFeatureConfig>;
        static readonly field_202293_am : Internal.Feature<Internal.TwoFeatureChoiceConfig>;
        static readonly field_202297_aq : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_202320_T : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_236284_O_ : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_242773_e : Internal.FlowersFeature<Internal.BlockClusterFeatureConfig>;
        static readonly field_236283_N_ : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_206922_aF : Internal.Feature<Internal.BlockWithContextConfig>;
        static readonly field_202325_Y : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_204622_az : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_227244_A_ : Internal.Feature<Internal.BlockStateProvidingFeatureConfig>;
        static readonly field_202288_ah : Internal.Feature<Internal.SphereReplaceConfig>;
        static readonly field_202298_ar : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_236291_c_ : Internal.Feature<Internal.BaseTreeFeatureConfig>;
        static readonly field_227247_y_ : Internal.FlowersFeature<Internal.BlockClusterFeatureConfig>;
        static readonly field_202294_an : Internal.Feature<Internal.ReplaceBlockConfig>;
        static readonly field_202290_aj : Internal.Feature<Internal.OreFeatureConfig>;
        static readonly field_227248_z_ : Internal.Feature<Internal.BlockClusterFeatureConfig>;
        static readonly field_202315_O : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_204914_aC : Internal.Feature<Internal.FeatureSpreadConfig>;
        static readonly field_202289_ai : Internal.Feature<Internal.BlockStateFeatureConfig>;
        static readonly field_236288_U_ : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_236289_V_ : Internal.Feature<Internal.OreFeatureConfig>;
        static readonly field_202285_ae : Internal.Feature<Internal.SphereReplaceConfig>;
        static readonly field_202299_as : Internal.Feature<Internal.EndGatewayConfig>;
        static readonly field_202295_ao : Internal.Feature<Internal.LiquidsConfig>;
        static readonly field_202321_U : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_204619_aA : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_202326_Z : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_203235_au : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_202282_ab : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_214483_aK : Internal.Feature<Internal.DecoratedFeatureConfig>;
        static readonly field_214487_aO : Internal.BonusChestFeature;
        static readonly field_205172_ag : Internal.Feature<Internal.BlockStateFeatureConfig>;
        static readonly field_202312_L : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_202296_ap : Internal.Feature<Internal.EndSpikeFeatureConfig>;
        static readonly field_202292_al : Internal.Feature<Internal.MultipleRandomFeatureConfig>;
        static readonly field_227245_q_ : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_202316_P : Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_202318_R : Internal.Feature<Internal.BigMushroomFeatureConfig>;
        static readonly field_204620_ao : Internal.Feature<Internal.SingleRandomFeature>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Feature_<FC> = Feature<FC>;
    abstract class ModuleReference extends Document.Object {
        location(): Internal.Optional<Internal.URI>;
        descriptor(): Internal.ModuleDescriptor;
        open(): Internal.ModuleReader;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleReference_ = ModuleReference;
    class EnderDragonPartEntity extends Internal.PartEntity<Internal.EnderDragonEntity> {
        func_70028_i(arg0: Internal.Entity): boolean;
        func_213297_N(): Internal.IPacket<any>;
        func_70067_L(): boolean;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_213305_a(arg0: Internal.Pose_): Internal.EntitySize;
        readonly field_213852_b : Internal.EnderDragonEntity;
        readonly field_213853_c : string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EnderDragonPartEntity_ = EnderDragonPartEntity;
    interface Kind1 <F, Mu> extends Internal.App<Mu, F> {
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>, arg10: Internal.App<Mu, T11_>): Internal.Products$P11<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>): Internal.Products$P10<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>): Internal.Products$P9<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>, arg10: Internal.App<Mu, T11_>, arg11: Internal.App<Mu, T12_>, arg12: Internal.App<Mu, T13_>, arg13: Internal.App<Mu, T14_>, arg14: Internal.App<Mu, T15_>, arg15: Internal.App<Mu, T16_>): Internal.Products$P16<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>, arg10: Internal.App<Mu, T11_>, arg11: Internal.App<Mu, T12_>, arg12: Internal.App<Mu, T13_>, arg13: Internal.App<Mu, T14_>, arg14: Internal.App<Mu, T15_>): Internal.Products$P15<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>, arg10: Internal.App<Mu, T11_>, arg11: Internal.App<Mu, T12_>, arg12: Internal.App<Mu, T13_>, arg13: Internal.App<Mu, T14_>): Internal.Products$P14<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>, arg10: Internal.App<Mu, T11_>, arg11: Internal.App<Mu, T12_>, arg12: Internal.App<Mu, T13_>): Internal.Products$P13<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>, arg10: Internal.App<Mu, T11_>, arg11: Internal.App<Mu, T12_>): Internal.Products$P12<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_>;
        group<T1_, T2_, T3_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>): Internal.Products$P3<Mu, T1_, T2_, T3_>;
        group<T1_, T2_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>): Internal.Products$P2<Mu, T1_, T2_>;
        group<T1_>(arg0: Internal.App<Mu, T1_>): Internal.Products$P1<Mu, T1_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>): Internal.Products$P8<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>): Internal.Products$P7<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>): Internal.Products$P6<Mu, T1_, T2_, T3_, T4_, T5_, T6_>;
        group<T1_, T2_, T3_, T4_, T5_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>): Internal.Products$P5<Mu, T1_, T2_, T3_, T4_, T5_>;
        group<T1_, T2_, T3_, T4_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>): Internal.Products$P4<Mu, T1_, T2_, T3_, T4_>;
    }
    type Kind1_<F, Mu> = Kind1<F, Mu>;
    interface ClonedPalette <K> {
        get(arg0: number): K;
    }
    type ClonedPalette_<K> = ClonedPalette<K>;
    class FluidRegistryEventJS extends Internal.StartupEventJS {
        create(name: string): Internal.FluidBuilder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FluidRegistryEventJS_ = FluidRegistryEventJS;
    interface IBlockDisplayReader extends Internal.IBlockReader {
        func_226659_b_(arg0: BlockPos, arg1: number): number;
        func_226658_a_(arg0: Internal.LightType_, arg1: BlockPos): number;
        func_226660_f_(arg0: BlockPos): boolean;
        func_225524_e_(): Internal.WorldLightManager;
        func_230487_a_(arg0: Internal.Direction_, arg1: boolean): number;
        func_225525_a_(arg0: BlockPos, arg1: Internal.ColorResolver): number;
    }
    type IBlockDisplayReader_ = IBlockDisplayReader;
    interface IDecoratable <R> {
        func_242733_d(arg0: number): R;
        func_242732_c(arg0: number): R;
        func_227228_a_(arg0: Internal.ConfiguredPlacement<any>): R;
        func_242731_b(arg0: number): R;
        func_242730_a(arg0: Internal.FeatureSpread): R;
        func_242729_a(arg0: number): R;
        func_242728_a(): R;
    }
    type IDecoratable_<R> = IDecoratable<R>;
    class Dimension extends Document.Object {
        static func_236062_a_(arg0: Internal.SimpleRegistry<Internal.Dimension>): Internal.SimpleRegistry<Internal.Dimension>;
        func_236063_b_(): Internal.DimensionType;
        func_236059_a_(): Internal.Supplier<Internal.DimensionType>;
        static func_236060_a_(arg0: number, arg1: Internal.SimpleRegistry<Internal.Dimension>): boolean;
        func_236064_c_(): Internal.ChunkGenerator;
        static readonly field_236052_a_ : Internal.Codec<Internal.Dimension>;
        static readonly field_236054_c_ : Internal.RegistryKey<Internal.Dimension>;
        static readonly field_236053_b_ : Internal.RegistryKey<Internal.Dimension>;
        static readonly field_236055_d_ : Internal.RegistryKey<Internal.Dimension>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Dimension_ = Dimension;
    class GlVertexAttributeFormat extends Document.Object {
        getSize(): number;
        getGlFormat(): number;
        static readonly FLOAT : Internal.GlVertexAttributeFormat;
        static readonly UNSIGNED_SHORT : Internal.GlVertexAttributeFormat;
        static readonly UNSIGNED_BYTE : Internal.GlVertexAttributeFormat;
        get glFormat(): number;
        get size(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GlVertexAttributeFormat_ = GlVertexAttributeFormat;
    class ZoneOffsetTransition extends Document.Object implements Internal.Comparable<Internal.ZoneOffsetTransition>, Internal.Serializable {
        getDateTimeAfter(): Internal.LocalDateTime;
        getDateTimeBefore(): Internal.LocalDateTime;
        getOffsetAfter(): Internal.ZoneOffset;
        getOffsetBefore(): Internal.ZoneOffset;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.ZoneOffsetTransition): number;
        getInstant(): Internal.Instant;
        isGap(): boolean;
        getDuration(): Internal.Duration;
        toEpochSecond(): number;
        hashCode(): number;
        static of(arg0: Internal.LocalDateTime, arg1: Internal.ZoneOffset, arg2: Internal.ZoneOffset): Internal.ZoneOffsetTransition;
        equals(arg0: any): boolean;
        isOverlap(): boolean;
        toString(): string;
        isValidOffset(arg0: Internal.ZoneOffset): boolean;
        get duration(): Internal.Duration;
        get overlap(): boolean;
        get gap(): boolean;
        get dateTimeBefore(): Internal.LocalDateTime;
        get offsetAfter(): Internal.ZoneOffset;
        get dateTimeAfter(): Internal.LocalDateTime;
        get offsetBefore(): Internal.ZoneOffset;
        get instant(): Internal.Instant;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZoneOffsetTransition_ = ZoneOffsetTransition;
    class SCommandListPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_197693_a(): Internal.RootCommandNode<Internal.ISuggestionProvider>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SCommandListPacket_ = SCommandListPacket;
    class BlackStoneReplacementProcessor extends Internal.StructureProcessor {
        func_230386_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings): Internal.Template$BlockInfo;
        static readonly field_237057_a_ : Internal.Codec<Internal.BlackStoneReplacementProcessor>;
        static readonly field_237058_b_ : Internal.BlackStoneReplacementProcessor;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlackStoneReplacementProcessor_ = BlackStoneReplacementProcessor;
    class MaterialJS extends Document.Object {
        getBreakSound(): Internal.SoundEvent;
        getStepSound(): Internal.SoundEvent;
        isFlammable(): boolean;
        isSolidBlocking(): boolean;
        getPlaceSound(): Internal.SoundEvent;
        getHitSound(): Internal.SoundEvent;
        getColor(): Internal.MaterialColor;
        getId(): string;
        getFallSound(): Internal.SoundEvent;
        isSolid(): boolean;
        blocksMotion(): boolean;
        getVolume(): number;
        getPitch(): number;
        isLiquid(): boolean;
        getMinecraftMaterial(): Internal.Material;
        getPushReaction(): Internal.PushReaction;
        isReplaceable(): boolean;
        getSound(): Internal.SoundType;
        get stepSound(): Internal.SoundEvent;
        get solid(): boolean;
        get color(): Internal.MaterialColor;
        get minecraftMaterial(): Internal.Material;
        get replaceable(): boolean;
        get sound(): Internal.SoundType;
        get pushReaction(): Internal.PushReaction;
        get volume(): number;
        get placeSound(): Internal.SoundEvent;
        get liquid(): boolean;
        get breakSound(): Internal.SoundEvent;
        get solidBlocking(): boolean;
        get flammable(): boolean;
        get id(): string;
        get pitch(): number;
        get hitSound(): Internal.SoundEvent;
        get fallSound(): Internal.SoundEvent;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MaterialJS_ = MaterialJS;
    interface IRecipeLayout {
        getIngredientsGroup<T>(arg0: Internal.IIngredientType<T>): Internal.IGuiIngredientGroup<T>;
        moveRecipeTransferButton(arg0: number, arg1: number): void;
        getItemStacks(): Internal.IGuiItemStackGroup;
        getRecipeCategory(): Internal.IRecipeCategory<any>;
        getFluidStacks(): Internal.IGuiFluidStackGroup;
        getFocus<V>(arg0: Internal.IIngredientType<V>): Internal.IFocus<V>;
        getFocus(): Internal.IFocus<any>;
        setShapeless(): void;
    }
    type IRecipeLayout_ = IRecipeLayout;
    class STagsListPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_199858_a(): Internal.ITagCollectionSupplier;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type STagsListPacket_ = STagsListPacket;
    class ZoneOffsetTransitionRule$TimeDefinition extends Internal.Enum<Internal.ZoneOffsetTransitionRule$TimeDefinition> {
        static valueOf(arg0: string): Internal.ZoneOffsetTransitionRule$TimeDefinition;
        static values(): Internal.ZoneOffsetTransitionRule$TimeDefinition[];
        createDateTime(arg0: Internal.LocalDateTime, arg1: Internal.ZoneOffset, arg2: Internal.ZoneOffset): Internal.LocalDateTime;
        static readonly WALL : Internal.ZoneOffsetTransitionRule$TimeDefinition;
        static readonly UTC : Internal.ZoneOffsetTransitionRule$TimeDefinition;
        static readonly STANDARD : Internal.ZoneOffsetTransitionRule$TimeDefinition;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZoneOffsetTransitionRule$TimeDefinition_ = "utc" | "wall" | "standard" | ZoneOffsetTransitionRule$TimeDefinition;
    class CompoundNBT extends Document.Object implements Internal.INBT, dev.latvian.mods.rhino.util.MapLike<any, any> {
        func_202168_c(arg0: string, arg1: Internal.List<number>): void;
        func_186855_b(arg0: string): boolean;
        func_186857_a(arg0: string): Internal.UUID;
        func_74773_a(arg0: string, arg1: number[]): void;
        func_74771_c(arg0: string): number;
        putML(key: string, v: any): void;
        putML(arg0: any, arg1: any): void;
        func_74762_e(arg0: string): number;
        func_74760_g(arg0: string): number;
        func_74764_b(arg0: string): boolean;
        func_74768_a(arg0: string, arg1: number): void;
        func_225647_b_(): Internal.INBTType<Internal.CompoundNBT>;
        func_74783_a(arg0: string, arg1: number[]): void;
        func_74781_a(arg0: string): Internal.INBT;
        getML(key: string): any;
        getML(arg0: any): any;
        func_74778_a(arg0: string, arg1: string): void;
        func_74732_a(): number;
        func_74770_j(arg0: string): number[];
        func_74757_a(arg0: string, arg1: boolean): void;
        func_74776_a(arg0: string, arg1: number): void;
        func_74734_a(arg0: Internal.DataOutput): void;
        func_150299_b(arg0: string): number;
        func_197646_b(arg0: string, arg1: Internal.List<number>): void;
        func_74759_k(arg0: string): number[];
        func_197644_a(arg0: string, arg1: number[]): void;
        func_150295_c(arg0: string, arg1: number): Internal.ListNBT;
        clearML(): void;
        func_218657_a(arg0: string, arg1: Internal.INBT): Internal.INBT;
        func_150297_b(arg0: string, arg1: number): boolean;
        func_186854_a(arg0: string, arg1: Internal.UUID): void;
        func_74774_a(arg0: string, arg1: number): void;
        func_186856_d(): number;
        func_74772_a(arg0: string, arg1: number): void;
        removeML(key: string): void;
        removeML(arg0: any): void;
        keysML(): Internal.Collection<any>;
        hashCode(): number;
        func_74765_d(arg0: string): number;
        func_74763_f(arg0: string): number;
        func_74767_n(arg0: string): boolean;
        func_199850_a(arg0: string, arg1: number): Internal.ITextComponent;
        containsKeyML(key: string): boolean;
        containsKeyML(arg0: any): boolean;
        func_74769_h(arg0: string): number;
        isEmpty(): boolean;
        func_197645_o(arg0: string): number[];
        func_74780_a(arg0: string, arg1: number): void;
        func_74737_b(): Internal.CompoundNBT;
        func_74737_b(): Internal.INBT;
        equals(arg0: any): boolean;
        func_74777_a(arg0: string, arg1: number): void;
        toString(): string;
        handler$zei000$copyEfficient(cir: Internal.CallbackInfoReturnable<any>): void;
        func_74775_l(arg0: string): Internal.CompoundNBT;
        func_197643_a(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_74779_i(arg0: string): string;
        func_82580_o(arg0: string): void;
        func_150296_c(): Internal.Set<string>;
        static readonly field_240597_a_ : Internal.Codec<Internal.CompoundNBT>;
        static readonly field_229675_a_ : Internal.INBTType<Internal.CompoundNBT>;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CompoundNBT_ = CompoundNBT;
    class VertexFormatElement$Type extends Internal.Enum<Internal.VertexFormatElement$Type> {
        func_177395_a(): number;
        func_177397_c(): number;
        static valueOf(arg0: string): Internal.VertexFormatElement$Type;
        static values(): Internal.VertexFormatElement$Type[];
        func_177396_b(): string;
        static readonly UBYTE : Internal.VertexFormatElement$Type;
        static readonly FLOAT : Internal.VertexFormatElement$Type;
        static readonly BYTE : Internal.VertexFormatElement$Type;
        static readonly USHORT : Internal.VertexFormatElement$Type;
        static readonly UINT : Internal.VertexFormatElement$Type;
        static readonly INT : Internal.VertexFormatElement$Type;
        static readonly SHORT : Internal.VertexFormatElement$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VertexFormatElement$Type_ = "float" | "ubyte" | "byte" | "ushort" | "short" | "uint" | "int" | VertexFormatElement$Type;
    interface IRecipeCategory <T> {
        getTooltipStrings(arg0: T, arg1: number, arg2: number): Internal.List<Internal.ITextComponent>;
        setRecipe(arg0: Internal.IRecipeLayout, arg1: T, arg2: Internal.IIngredients): void;
        getUid(): ResourceLocation;
        getTitle(): string;
        setIngredients(arg0: T, arg1: Internal.IIngredients): void;
        handleClick(arg0: T, arg1: number, arg2: number, arg3: number): boolean;
        getTitleAsTextComponent(): Internal.ITextComponent;
        getRecipeClass(): Internal.Class<T>;
        draw(arg0: T, arg1: Internal.MatrixStack, arg2: number, arg3: number): void;
        getBackground(): Internal.IDrawable;
        isHandled(arg0: T): boolean;
        getIcon(): Internal.IDrawable;
    }
    type IRecipeCategory_<T> = IRecipeCategory<T>;
    interface IShaderManager {
        func_147985_d(): void;
        func_147986_h(): number;
        func_147989_e(): Internal.ShaderLoader;
        func_147994_f(): Internal.ShaderLoader;
    }
    type IShaderManager_ = IShaderManager;
    interface InstantSource {
        withZone(arg0: Internal.ZoneId): Internal.Clock;
        millis(): number;
        instant(): Internal.Instant;
    }
    type InstantSource_ = InstantSource;
    abstract class FileSystem extends Document.Object implements Internal.Closeable {
        isReadOnly(): boolean;
        isOpen(): boolean;
        supportedFileAttributeViews(): Internal.Set<string>;
        provider(): Internal.FileSystemProvider;
        getFileStores(): Internal.Iterable<Internal.FileStore>;
        getRootDirectories(): Internal.Iterable<java_.nio.file.Path>;
        getPath(arg0: string, arg1: string[]): java_.nio.file.Path;
        getSeparator(): string;
        getPathMatcher(arg0: string): Internal.PathMatcher;
        newWatchService(): Internal.WatchService;
        close(): void;
        getUserPrincipalLookupService(): Internal.UserPrincipalLookupService;
        get rootDirectories(): Internal.Iterable<java_.nio.file.Path>;
        get readOnly(): boolean;
        get userPrincipalLookupService(): Internal.UserPrincipalLookupService;
        get separator(): string;
        get open(): boolean;
        get fileStores(): Internal.Iterable<Internal.FileStore>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FileSystem_ = FileSystem;
    class ClientWrapper extends Document.Object {
        getWorld(): Internal.ClientWorldJS;
        getPlayer(): Internal.ClientPlayerJS;
        isKeyDown(key: number): boolean;
        setCurrentGui(gui: Internal.Screen): void;
        getCurrentWorldName(): string;
        setTitle(t: string): void;
        getMinecraft(): Internal.Minecraft;
        getCurrentGui(): Internal.Screen;
        get minecraft(): Internal.Minecraft;
        get world(): Internal.ClientWorldJS;
        get currentGui(): Internal.Screen;
        get player(): Internal.ClientPlayerJS;
        get currentWorldName(): string;
        set currentGui(gui: Internal.Screen);
        set title(t: string);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientWrapper_ = ClientWrapper;
    abstract class AmbientEntity extends Internal.MobEntity {
        func_184652_a(arg0: Internal.PlayerEntity): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AmbientEntity_ = AmbientEntity;
    class GuiContainerEvent$DrawForeground extends Internal.GuiContainerEvent {
        getMouseY(): number;
        getListenerList(): Internal.ListenerList;
        getMouseX(): number;
        getMatrixStack(): Internal.MatrixStack;
        get mouseX(): number;
        get matrixStack(): Internal.MatrixStack;
        get listenerList(): Internal.ListenerList;
        get mouseY(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiContainerEvent$DrawForeground_ = GuiContainerEvent$DrawForeground;
    interface ExtendedAbstractBlockState {
        getOpacityIfCached(): number;
        isConditionallyFullOpaque(): boolean;
    }
    type ExtendedAbstractBlockState_ = ExtendedAbstractBlockState;
    class NibbleArray extends Document.Object {
        func_76581_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_76582_a(arg0: number, arg1: number, arg2: number): number;
        func_215654_b(): Internal.NibbleArray;
        toString(): string;
        func_215655_c(): boolean;
        func_177481_a(): number[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NibbleArray_ = NibbleArray;
    class WorldBorder$Serializer extends Document.Object {
        static func_235938_a_(arg0: Internal.DynamicLike<any>, arg1: Internal.WorldBorder$Serializer): Internal.WorldBorder$Serializer;
        func_235937_a_(): number;
        func_235946_h_(): number;
        func_235945_g_(): number;
        func_235940_b_(): number;
        func_235947_i_(): number;
        func_235942_d_(): number;
        func_235941_c_(): number;
        func_235944_f_(): number;
        func_235939_a_(arg0: Internal.CompoundNBT): void;
        func_235943_e_(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldBorder$Serializer_ = WorldBorder$Serializer;
    interface FireworkRocketEntityKJS {
        setLifetimeKJS(arg0: number): void;
    }
    type FireworkRocketEntityKJS_ = FireworkRocketEntityKJS;
    interface IHasContainer <T> {
        func_212873_a_(): T;
    }
    type IHasContainer_<T> = IHasContainer<T>;
    interface ShortIterable extends Internal.Iterable<number> {
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.ShortIterator;
        forEach(arg0: ((arg0: number) => void)): void;
        forEach(arg0: ((arg0: number) => void)): void;
    }
    type ShortIterable_ = ShortIterable;
    interface RecipeManagerKJS {
        customRecipesKJS(jsonMap: Internal.Map_<ResourceLocation_, Internal.JsonObject_>): void;
        setRecipesKJS(arg0: Internal.Map_<Internal.IRecipeType_<any>, Internal.Map_<ResourceLocation_, Internal.IRecipe_<any>>>): void;
        getRecipesKJS(): Internal.Map<Internal.IRecipeType<any>, Internal.Map<ResourceLocation, Internal.IRecipe<any>>>;
    }
    type RecipeManagerKJS_ = RecipeManagerKJS;
    class RoundingMode extends Internal.Enum<Internal.RoundingMode> {
        static valueOf(arg0: string): Internal.RoundingMode;
        static valueOf(arg0: number): Internal.RoundingMode;
        static values(): Internal.RoundingMode[];
        static readonly DOWN : Internal.RoundingMode;
        static readonly FLOOR : Internal.RoundingMode;
        static readonly UNNECESSARY : Internal.RoundingMode;
        static readonly CEILING : Internal.RoundingMode;
        static readonly HALF_EVEN : Internal.RoundingMode;
        static readonly UP : Internal.RoundingMode;
        static readonly HALF_UP : Internal.RoundingMode;
        static readonly HALF_DOWN : Internal.RoundingMode;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RoundingMode_ = "up" | "down" | "ceiling" | "floor" | "half_up" | "half_down" | "half_even" | "unnecessary" | RoundingMode;
    interface IBlockColor {
        getColor(arg0: Internal.BlockState, arg1: Internal.IBlockDisplayReader, arg2: BlockPos, arg3: number): number;
    }
    type IBlockColor_ = IBlockColor;
    interface ConstProperties {
        defineConst(arg0: string, arg1: Internal.Scriptable): void;
        isConst(arg0: string): boolean;
        putConst(arg0: string, arg1: Internal.Scriptable, arg2: any): void;
    }
    type ConstProperties_ = ConstProperties;
    class CPlayerPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186996_b(arg0: number): number;
        func_186997_a(arg0: number): number;
        func_186999_a(arg0: number): number;
        func_186998_b(arg0: number): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_187000_c(arg0: number): number;
        func_149465_i(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CPlayerPacket_ = CPlayerPacket;
    interface Long2ObjectSortedMap$FastSortedEntrySet <V> extends Internal.ObjectSortedSet<Internal.Long2ObjectMap$Entry<V>>, Internal.Long2ObjectMap$FastEntrySet<V> {
        fastIterator(): Internal.ObjectBidirectionalIterator<Internal.Long2ObjectMap$Entry<V>>;
        fastIterator(): Internal.ObjectIterator<any>;
        fastIterator(arg0: Internal.Long2ObjectMap$Entry<V>): Internal.ObjectBidirectionalIterator<Internal.Long2ObjectMap$Entry<V>>;
    }
    type Long2ObjectSortedMap$FastSortedEntrySet_<V> = Long2ObjectSortedMap$FastSortedEntrySet<V>;
    class Font extends Document.Object implements Internal.AutoCloseable {
        func_211188_a(arg0: Internal.IGlyph): Internal.TexturedGlyph;
        func_238557_a_(arg0: number): Internal.IGlyph;
        func_228157_b_(): Internal.TexturedGlyph;
        func_238559_b_(arg0: number): Internal.TexturedGlyph;
        close(): void;
        func_211570_a(arg0: Internal.List<Internal.IGlyphProvider>): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Font_ = Font;
    abstract class CompressorHolder extends Document.Object implements Internal.Compressable {
        compressor<T_>(arg0: Internal.DynamicOps<T_>): Internal.KeyCompressor<T_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CompressorHolder_ = CompressorHolder;
    class TickEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        readonly phase : Internal.TickEvent$Phase;
        readonly side : Internal.LogicalSide;
        readonly type : Internal.TickEvent$Type;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TickEvent_ = TickEvent;
    class MemoryModuleType <U> extends Internal.ForgeRegistryEntry<Internal.MemoryModuleType<any>> {
        toString(): string;
        func_234107_a_(): Internal.Optional<Internal.Codec<Internal.Memory<U>>>;
        static readonly field_220946_g : Internal.MemoryModuleType<Internal.List<Internal.LivingEntity>>;
        static readonly field_220948_i : Internal.MemoryModuleType<Internal.List<Internal.PlayerEntity>>;
        static readonly field_220942_c : Internal.MemoryModuleType<Internal.GlobalPos>;
        static readonly field_234094_ab_ : Internal.MemoryModuleType<number>;
        static readonly field_220944_e : Internal.MemoryModuleType<Internal.List<Internal.GlobalPos>>;
        static readonly field_242309_E : Internal.MemoryModuleType<boolean>;
        static readonly field_220940_a : Internal.MemoryModuleType<void>;
        static readonly field_234095_ac_ : Internal.MemoryModuleType<number>;
        static readonly field_220956_q : Internal.MemoryModuleType<BlockPos>;
        static readonly field_220958_s : Internal.MemoryModuleType<Internal.LivingEntity>;
        static readonly field_242311_P : Internal.MemoryModuleType<boolean>;
        static readonly field_220953_n : Internal.MemoryModuleType<Internal.AgeableEntity>;
        static readonly field_234083_Q_ : Internal.MemoryModuleType<BlockPos>;
        static readonly field_234082_P_ : Internal.MemoryModuleType<boolean>;
        static readonly field_220955_p : Internal.MemoryModuleType<Internal.List<Internal.GlobalPos>>;
        static readonly field_234081_O_ : Internal.MemoryModuleType<boolean>;
        static readonly field_234080_N_ : Internal.MemoryModuleType<boolean>;
        static readonly field_220951_l : Internal.MemoryModuleType<Internal.IPosWrapper>;
        static readonly field_225462_q : Internal.MemoryModuleType<Internal.Set<Internal.GlobalPos>>;
        static readonly field_234089_W_ : Internal.MemoryModuleType<Internal.List<Internal.AbstractPiglinEntity>>;
        static readonly field_234104_p_ : Internal.MemoryModuleType<boolean>;
        static readonly field_234088_V_ : Internal.MemoryModuleType<Internal.PlayerEntity>;
        static readonly field_234086_T_ : Internal.MemoryModuleType<Internal.HoglinEntity>;
        static readonly field_220961_v : Internal.MemoryModuleType<Internal.GlobalPos>;
        static readonly field_234084_R_ : Internal.MemoryModuleType<boolean>;
        static readonly field_234097_ae_ : Internal.MemoryModuleType<boolean>;
        static readonly field_234103_o_ : Internal.MemoryModuleType<Internal.LivingEntity>;
        static readonly field_223543_y : Internal.MemoryModuleType<number>;
        static readonly field_234085_S_ : Internal.MemoryModuleType<Internal.HoglinEntity>;
        static readonly field_223021_x : Internal.MemoryModuleType<number>;
        static readonly field_234101_d_ : Internal.MemoryModuleType<Internal.GlobalPos>;
        static readonly field_220947_h : Internal.MemoryModuleType<Internal.List<Internal.LivingEntity>>;
        static readonly field_220949_j : Internal.MemoryModuleType<Internal.PlayerEntity>;
        static readonly field_226332_A_ : Internal.MemoryModuleType<number>;
        static readonly field_220943_d : Internal.MemoryModuleType<Internal.GlobalPos>;
        static readonly field_234106_z_ : Internal.MemoryModuleType<Internal.LivingEntity>;
        static readonly field_220945_f : Internal.MemoryModuleType<Internal.List<Internal.LivingEntity>>;
        static readonly field_234098_af_ : Internal.MemoryModuleType<BlockPos>;
        static readonly field_220941_b : Internal.MemoryModuleType<Internal.GlobalPos>;
        static readonly field_220957_r : Internal.MemoryModuleType<Internal.DamageSource>;
        static readonly field_220959_t : Internal.MemoryModuleType<Internal.LivingEntity>;
        static readonly field_234099_ag_ : Internal.MemoryModuleType<boolean>;
        static readonly field_220952_m : Internal.MemoryModuleType<Internal.LivingEntity>;
        static readonly field_220954_o : Internal.MemoryModuleType<Internal.Path>;
        static readonly field_234078_L_ : Internal.MemoryModuleType<Internal.UUID>;
        static readonly field_234079_M_ : Internal.MemoryModuleType<boolean>;
        static readonly field_242310_O : Internal.MemoryModuleType<number>;
        static readonly field_220950_k : Internal.MemoryModuleType<Internal.WalkTarget>;
        static readonly field_234096_ad_ : Internal.MemoryModuleType<Internal.PlayerEntity>;
        static readonly field_234075_I_ : Internal.MemoryModuleType<Internal.AgeableEntity>;
        static readonly field_234090_X_ : Internal.MemoryModuleType<Internal.List<Internal.AbstractPiglinEntity>>;
        static readonly field_234105_s_ : Internal.MemoryModuleType<Internal.Entity>;
        static readonly field_234077_K_ : Internal.MemoryModuleType<Internal.MobEntity>;
        static readonly field_234091_Y_ : Internal.MemoryModuleType<Internal.List<Internal.HoglinEntity>>;
        static readonly field_234093_aa_ : Internal.MemoryModuleType<Internal.LivingEntity>;
        static readonly field_234076_J_ : Internal.MemoryModuleType<Internal.ItemEntity>;
        static readonly field_234092_Z_ : Internal.MemoryModuleType<Internal.AbstractPiglinEntity>;
        static readonly field_234102_l_ : Internal.MemoryModuleType<Internal.PlayerEntity>;
        static readonly field_220962_w : Internal.MemoryModuleType<number>;
        static readonly field_223544_z : Internal.MemoryModuleType<number>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MemoryModuleType_<U> = MemoryModuleType<U>;
    class Slot extends Document.Object {
        func_75215_d(arg0: Internal.ItemStack): void;
        func_75216_d(): boolean;
        func_75219_a(): number;
        func_75218_e(): void;
        func_75209_a(arg0: number): Internal.ItemStack;
        handler$zhd000$preventPickupOfPendingExplorationMap(player: Internal.PlayerEntity, cir: Internal.CallbackInfoReturnable<any>): void;
        func_82869_a(arg0: Internal.PlayerEntity): boolean;
        isSameInventory(arg0: Internal.Slot): boolean;
        setBackground(arg0: ResourceLocation_, arg1: ResourceLocation_): Internal.Slot;
        func_111238_b(): boolean;
        getSlotIndex(): number;
        func_178170_b(arg0: Internal.ItemStack): number;
        func_190901_a(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack): Internal.ItemStack;
        func_75220_a(arg0: Internal.ItemStack, arg1: Internal.ItemStack): void;
        func_75214_a(arg0: Internal.ItemStack): boolean;
        func_75211_c(): Internal.ItemStack;
        func_225517_c_(): com.mojang.datafixers.util.Pair<ResourceLocation, ResourceLocation>;
        field_75223_e : number;
        readonly field_75225_a : number;
        field_75222_d : number;
        readonly field_75224_c : Internal.IInventory;
        field_75221_f : number;
        get slotIndex(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Slot_ = Slot;
    abstract class ClassLoader extends Document.Object {
        static getSystemResources(arg0: string): Internal.Enumeration<Internal.URL>;
        getParent(): Internal.ClassLoader;
        getResource(arg0: string): Internal.URL;
        static getPlatformClassLoader(): Internal.ClassLoader;
        getName(): string;
        getResourceAsStream(arg0: string): Internal.InputStream;
        setDefaultAssertionStatus(arg0: boolean): void;
        resources(arg0: string): Internal.Stream<Internal.URL>;
        static getSystemClassLoader(): Internal.ClassLoader;
        static getSystemResource(arg0: string): Internal.URL;
        setPackageAssertionStatus(arg0: string, arg1: boolean): void;
        setClassAssertionStatus(arg0: string, arg1: boolean): void;
        getDefinedPackage(arg0: string): Internal.Package;
        static getSystemResourceAsStream(arg0: string): Internal.InputStream;
        clearAssertionStatus(): void;
        isRegisteredAsParallelCapable(): boolean;
        getResources(arg0: string): Internal.Enumeration<Internal.URL>;
        loadClass(arg0: string): Internal.Class<any>;
        getDefinedPackages(): Internal.Package[];
        getUnnamedModule(): Internal.Module;
        get parent(): Internal.ClassLoader;
        get systemClassLoader(): Internal.ClassLoader;
        get unnamedModule(): Internal.Module;
        get name(): string;
        get registeredAsParallelCapable(): boolean;
        get platformClassLoader(): Internal.ClassLoader;
        get definedPackages(): Internal.Package[];
        set defaultAssertionStatus(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClassLoader_ = ClassLoader;
    interface ResultConsumer <S> {
        onCommandComplete(arg0: Internal.CommandContext<S>, arg1: boolean, arg2: number): void;
    }
    type ResultConsumer_<S> = ((arg0: Internal.CommandContext<S>, arg1: boolean, arg2: number) => void) | ResultConsumer<S>;
    class ParsedArgument <S, T> extends Document.Object {
        hashCode(): number;
        getRange(): Internal.StringRange;
        getResult(): T;
        equals(arg0: any): boolean;
        get result(): T;
        get range(): Internal.StringRange;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ParsedArgument_<S, T> = ParsedArgument<S, T>;
    class SSetExperiencePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149396_d(): number;
        func_149395_e(): number;
        func_149397_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SSetExperiencePacket_ = SSetExperiencePacket;
    interface Functor <F, Mu> extends Internal.Kind1<F, Mu> {
        map<T_, R_>(arg0: ((arg0: T_) => R_), arg1: Internal.App<Mu, T_>): Internal.App<Mu, R_>;
    }
    type Functor_<F, Mu> = Functor<F, Mu>;
    interface Spliterator$OfInt extends Internal.Spliterator$OfPrimitive<number, Internal.IntConsumer, Internal.Spliterator$OfInt> {
        trySplit(): Internal.Spliterator$OfPrimitive<any, any, any>;
        trySplit(): Internal.Spliterator<any>;
        trySplit(): Internal.Spliterator$OfInt;
        tryAdvance(arg0: any): boolean;
        tryAdvance(arg0: ((arg0: number) => void)): boolean;
        tryAdvance(arg0: ((arg0: number) => void)): boolean;
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
    }
    type Spliterator$OfInt_ = Spliterator$OfInt;
    class SOpenHorseWindowPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_218702_c(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218703_d(): number;
        func_218704_b(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SOpenHorseWindowPacket_ = SOpenHorseWindowPacket;
    class Products$P6 <F, T1, T2, T3, T4, T5, T6> extends Document.Object {
        t4(): Internal.App<F, T4>;
        t5(): Internal.App<F, T5>;
        t6(): Internal.App<F, T6>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function6<T1, T2, T3, T4, T5, T6, R_>>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function6<T1, T2, T3, T4, T5, T6, R_>): Internal.App<F, R_>;
        and<T7_, T8_>(arg0: Internal.Products$P2<F, T7_, T8_>): Internal.Products$P8<F, T1, T2, T3, T4, T5, T6, T7_, T8_>;
        and<T7_>(arg0: Internal.App<F, T7_>): Internal.Products$P7<F, T1, T2, T3, T4, T5, T6, T7_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        t3(): Internal.App<F, T3>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P6_<F, T1, T2, T3, T4, T5, T6> = Products$P6<F, T1, T2, T3, T4, T5, T6>;
    class BarrelTileEntity extends Internal.LockableLootTileEntity {
        func_213962_h(): void;
        func_70302_i_(): number;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BarrelTileEntity_ = BarrelTileEntity;
    class SpectatorMenu extends Document.Object {
        func_178647_a(arg0: Internal.ISpectatorMenuView): void;
        func_178645_b(): Internal.ISpectatorMenuObject;
        func_178644_b(arg0: number): void;
        func_178641_d(): void;
        func_178643_a(arg0: number): Internal.ISpectatorMenuObject;
        func_178642_a(): Internal.List<Internal.ISpectatorMenuObject>;
        func_178650_c(): Internal.ISpectatorMenuView;
        func_178648_e(): number;
        func_178646_f(): Internal.SpectatorDetails;
        static readonly field_178657_a : Internal.ISpectatorMenuObject;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpectatorMenu_ = SpectatorMenu;
    class NoiseDependant extends Document.Object implements Internal.IPlacementConfig {
        readonly field_202473_a : number;
        readonly field_202474_b : number;
        static readonly field_236550_a_ : Internal.Codec<Internal.NoiseDependant>;
        readonly field_202475_c : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NoiseDependant_ = NoiseDependant;
    interface SkinManager$ISkinAvailableCallback {
        onSkinTextureAvailable(arg0: Internal.MinecraftProfileTexture$Type_, arg1: ResourceLocation_, arg2: Internal.MinecraftProfileTexture): void;
    }
    type SkinManager$ISkinAvailableCallback_ = SkinManager$ISkinAvailableCallback;
    interface Supplier <T> {
        get(): T;
    }
    type Supplier_<T> = (() => T) | Supplier<T>;
    class CaveSpiderEntity extends Internal.SpiderEntity {
        func_70652_k(arg0: Internal.Entity): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        static func_234277_m_(): Internal.AttributeModifierMap$MutableAttribute;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CaveSpiderEntity_ = CaveSpiderEntity;
    class BigInteger extends Internal.Number implements Internal.Comparable<Internal.BigInteger> {
        bitLength(): number;
        getLowestSetBit(): number;
        mod(arg0: Internal.BigInteger): Internal.BigInteger;
        byteValueExact(): number;
        gcd(arg0: Internal.BigInteger): Internal.BigInteger;
        compareTo(arg0: Internal.BigInteger): number;
        compareTo(arg0: any): number;
        sqrtAndRemainder(): Internal.BigInteger[];
        shiftLeft(arg0: number): Internal.BigInteger;
        sqrt(): Internal.BigInteger;
        clearBit(arg0: number): Internal.BigInteger;
        add(arg0: Internal.BigInteger): Internal.BigInteger;
        signum(): number;
        subtract(arg0: Internal.BigInteger): Internal.BigInteger;
        floatValue(): number;
        isProbablePrime(arg0: number): boolean;
        doubleValue(): number;
        nextProbablePrime(): Internal.BigInteger;
        testBit(arg0: number): boolean;
        shiftRight(arg0: number): Internal.BigInteger;
        divideAndRemainder(arg0: Internal.BigInteger): Internal.BigInteger[];
        parallelMultiply(arg0: Internal.BigInteger): Internal.BigInteger;
        modPow(arg0: Internal.BigInteger, arg1: Internal.BigInteger): Internal.BigInteger;
        intValueExact(): number;
        andNot(arg0: Internal.BigInteger): Internal.BigInteger;
        modInverse(arg0: Internal.BigInteger): Internal.BigInteger;
        longValueExact(): number;
        setBit(arg0: number): Internal.BigInteger;
        shortValueExact(): number;
        longValue(): number;
        not(): Internal.BigInteger;
        min(arg0: Internal.BigInteger): Internal.BigInteger;
        and(arg0: Internal.BigInteger): Internal.BigInteger;
        hashCode(): number;
        pow(arg0: number): Internal.BigInteger;
        xor(arg0: Internal.BigInteger): Internal.BigInteger;
        divide(arg0: Internal.BigInteger): Internal.BigInteger;
        multiply(arg0: Internal.BigInteger): Internal.BigInteger;
        flipBit(arg0: number): Internal.BigInteger;
        or(arg0: Internal.BigInteger): Internal.BigInteger;
        max(arg0: Internal.BigInteger): Internal.BigInteger;
        static valueOf(arg0: number): Internal.BigInteger;
        intValue(): number;
        abs(): Internal.BigInteger;
        negate(): Internal.BigInteger;
        toByteArray(): number[];
        equals(arg0: any): boolean;
        toString(arg0: number): string;
        toString(): string;
        bitCount(): number;
        static probablePrime(arg0: number, arg1: Internal.Random): Internal.BigInteger;
        remainder(arg0: Internal.BigInteger): Internal.BigInteger;
        static readonly ZERO : Internal.BigInteger;
        static readonly ONE : Internal.BigInteger;
        static readonly TEN : Internal.BigInteger;
        static readonly TWO : Internal.BigInteger;
        get lowestSetBit(): number;
        set bit(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BigInteger_ = BigInteger;
    class SCustomPayloadPlayPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler>, Internal.ICustomPacket<Internal.SCustomPayloadPlayPacket> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_180735_b(): Internal.PacketBuffer;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149169_c(): ResourceLocation;
        static readonly field_209911_b : ResourceLocation;
        static readonly field_229727_m_ : ResourceLocation;
        static readonly field_229728_n_ : ResourceLocation;
        static readonly field_209915_f : ResourceLocation;
        static readonly field_209914_e : ResourceLocation;
        static readonly field_209913_d : ResourceLocation;
        static readonly field_218701_l : ResourceLocation;
        static readonly field_218700_k : ResourceLocation;
        static readonly field_229730_p_ : ResourceLocation;
        static readonly field_209917_h : ResourceLocation;
        static readonly field_218696_g : ResourceLocation;
        static readonly field_229729_o_ : ResourceLocation;
        static readonly field_209916_g : ResourceLocation;
        static readonly field_222945_m : ResourceLocation;
        static readonly field_218698_i : ResourceLocation;
        static readonly field_218697_h : ResourceLocation;
        static readonly field_218699_j : ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SCustomPayloadPlayPacket_ = SCustomPayloadPlayPacket;
    abstract class AbstractClientPlayerEntity extends Internal.PlayerEntity {
        func_175155_b(): Internal.NetworkPlayerInfo;
        func_152123_o(): boolean;
        func_184834_t(): ResourceLocation;
        static func_110304_a(arg0: ResourceLocation_, arg1: string): Internal.DownloadingTexture;
        static func_110311_f(arg0: string): ResourceLocation;
        func_110306_p(): ResourceLocation;
        func_175154_l(): string;
        func_152122_n(): boolean;
        func_184812_l_(): boolean;
        func_175149_v(): boolean;
        func_175156_o(): number;
        func_110303_q(): ResourceLocation;
        func_184833_s(): boolean;
        readonly field_213837_d : Internal.ClientWorld;
        field_175157_a : Internal.NetworkPlayerInfo;
        field_184836_b : number;
        field_184835_a : number;
        field_184837_c : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractClientPlayerEntity_ = AbstractClientPlayerEntity;
    class SCameraPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_179780_a(arg0: Internal.World): Internal.Entity;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        field_179781_a : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SCameraPacket_ = SCameraPacket;
    class DownloadingPackFinder extends Document.Object implements Internal.IPackFinder {
        func_230230_a_(arg0: ((arg0: Internal.ResourcePackInfo) => void), arg1: ((arg0: string, arg1: boolean, arg2: (() => Internal.IResourcePack), arg3: Internal.IResourcePack, arg4: Internal.PackMetadataSection, arg5: Internal.ResourcePackInfo$Priority, arg6: Internal.IPackNameDecorator) => Internal.ResourcePackInfo)): void;
        func_217816_a(arg0: Internal.File, arg1: Internal.IPackNameDecorator): Internal.CompletableFuture<void>;
        func_195746_a(): Internal.VanillaPack;
        func_217818_a(arg0: string, arg1: string): Internal.CompletableFuture<any>;
        func_195749_c(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DownloadingPackFinder_ = DownloadingPackFinder;
    interface List <E> extends Internal.SequencedCollection<E> {
        removeLast(): E;
        getLast(): E;
        replaceAll(arg0: Internal.UnaryOperator<E>): void;
        remove(arg0: any): boolean;
        remove(arg0: number): E;
        addLast(arg0: E): void;
        removeAll(arg0: Internal.Collection<any>): boolean;
        iterator(): Internal.Iterator<E>;
        getFirst(): E;
        hashCode(): number;
        removeFirst(): E;
        get(arg0: number): E;
        toArray(): any[];
        toArray<T_>(arg0: T_[]): T_[];
        indexOf(arg0: any): number;
        add(arg0: E): boolean;
        add(arg0: number, arg1: E): void;
        subList(arg0: number, arg1: number): Internal.List<E>;
        set(arg0: number, arg1: E): E;
        spliterator(): Internal.Spliterator<E>;
        containsAll(arg0: Internal.Collection<any>): boolean;
        isEmpty(): boolean;
        clear(): void;
        sort(arg0: ((arg0: any) => boolean)): void;
        lastIndexOf(arg0: any): number;
        contains(arg0: any): boolean;
        size(): number;
        addAll(arg0: Internal.Collection<E>): boolean;
        addAll(arg0: number, arg1: Internal.Collection<E>): boolean;
        equals(arg0: any): boolean;
        listIterator(): Internal.ListIterator<E>;
        listIterator(arg0: number): Internal.ListIterator<E>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<E>;
        addFirst(arg0: E): void;
        retainAll(arg0: Internal.Collection<any>): boolean;
    }
    type List_<E> = List<E>;
    class EntitySpawnPlacementRegistry$PlacementType extends Internal.Enum<Internal.EntitySpawnPlacementRegistry$PlacementType> implements Internal.IExtensibleEnum {
        static valueOf(arg0: string): Internal.EntitySpawnPlacementRegistry$PlacementType;
        canSpawnAt(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.EntityType<any>): boolean;
        static values(): Internal.EntitySpawnPlacementRegistry$PlacementType[];
        static create(arg0: string, arg1: ((arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.EntityType<Internal.MobEntity>) => boolean)): Internal.EntitySpawnPlacementRegistry$PlacementType;
        static readonly IN_LAVA : Internal.EntitySpawnPlacementRegistry$PlacementType;
        static readonly IN_WATER : Internal.EntitySpawnPlacementRegistry$PlacementType;
        static readonly ON_GROUND : Internal.EntitySpawnPlacementRegistry$PlacementType;
        static readonly NO_RESTRICTIONS : Internal.EntitySpawnPlacementRegistry$PlacementType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntitySpawnPlacementRegistry$PlacementType_ = "on_ground" | "in_water" | "no_restrictions" | "in_lava" | EntitySpawnPlacementRegistry$PlacementType;
    class WeightedSpawnerEntity extends Internal.WeightedRandom$Item {
        func_185278_a(): Internal.CompoundNBT;
        func_185277_b(): Internal.CompoundNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WeightedSpawnerEntity_ = WeightedSpawnerEntity;
    interface IBlockState {
        isCacheInvalid(): boolean;
        clearCache(): void;
    }
    type IBlockState_ = IBlockState;
    class WorldgenAddEventJS extends Internal.StartupEventJS {
        addSpawn(category: Internal.EntityClassification_, spawn: string): void;
        addSpawn(p: ((arg0: Internal.AddSpawnProperties) => void)): void;
        isNotInBiomes(filter: string[]): boolean;
        addOre(p: ((arg0: Internal.AddOreProperties) => void)): void;
        addLake(p: ((arg0: Internal.AddLakeProperties) => void)): void;
        isInBiomes(filter: string[]): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldgenAddEventJS_ = WorldgenAddEventJS;
    class PotionSpriteUploader extends Internal.SpriteUploader {
        func_215288_a(arg0: Internal.Effect): Internal.TextureAtlasSprite;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PotionSpriteUploader_ = PotionSpriteUploader;
    interface ListBuilder <T> {
        add<E>(arg0: E, arg1: Internal.Encoder<E>): Internal.ListBuilder<T>;
        add(arg0: T): Internal.ListBuilder<T>;
        add(arg0: Internal.DataResult<T>): Internal.ListBuilder<T>;
        withErrorsFrom(arg0: Internal.DataResult<any>): Internal.ListBuilder<T>;
        mapError(arg0: Internal.UnaryOperator<string>): Internal.ListBuilder<T>;
        ops(): Internal.DynamicOps<T>;
        build(arg0: Internal.DataResult<T>): Internal.DataResult<T>;
        build(arg0: T): Internal.DataResult<T>;
        addAll<E>(arg0: Internal.Iterable<E>, arg1: Internal.Encoder<E>): Internal.ListBuilder<T>;
    }
    type ListBuilder_<T> = ListBuilder<T>;
    class ItemSmeltedEventJS extends Internal.PlayerEventJS {
        getItem(): Internal.ItemStackJS;
        getEntity(): Internal.EntityJS;
        get item(): Internal.ItemStackJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemSmeltedEventJS_ = ItemSmeltedEventJS;
    class ParticleStatus extends Internal.Enum<Internal.ParticleStatus> {
        static valueOf(arg0: string): Internal.ParticleStatus;
        static values(): Internal.ParticleStatus[];
        func_216831_a(): string;
        func_216832_b(): number;
        static func_216833_a(arg0: number): Internal.ParticleStatus;
        static readonly ALL : Internal.ParticleStatus;
        static readonly DECREASED : Internal.ParticleStatus;
        static readonly MINIMAL : Internal.ParticleStatus;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ParticleStatus_ = "all" | "decreased" | "minimal" | ParticleStatus;
    class AlgorithmParameters extends Document.Object {
        init(arg0: number[], arg1: string): void;
        init(arg0: Internal.AlgorithmParameterSpec): void;
        init(arg0: number[]): void;
        getEncoded(arg0: string): number[];
        getEncoded(): number[];
        getAlgorithm(): string;
        getProvider(): Internal.Provider;
        toString(): string;
        static getInstance(arg0: string): Internal.AlgorithmParameters;
        static getInstance(arg0: string, arg1: Internal.Provider): Internal.AlgorithmParameters;
        static getInstance(arg0: string, arg1: string): Internal.AlgorithmParameters;
        getParameterSpec<T_>(arg0: Internal.Class_<T_>): T_;
        get provider(): Internal.Provider;
        get encoded(): number[];
        get algorithm(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AlgorithmParameters_ = AlgorithmParameters;
    class StringRange extends Document.Object {
        static encompassing(arg0: Internal.StringRange, arg1: Internal.StringRange): Internal.StringRange;
        static at(arg0: number): Internal.StringRange;
        getStart(): number;
        hashCode(): number;
        equals(arg0: any): boolean;
        get(arg0: string): string;
        get(arg0: Internal.ImmutableStringReader): string;
        isEmpty(): boolean;
        getLength(): number;
        toString(): string;
        getEnd(): number;
        static between(arg0: number, arg1: number): Internal.StringRange;
        get start(): number;
        get length(): number;
        get end(): number;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StringRange_ = StringRange;
    class CatEntity extends Internal.TameableEntity {
        func_213414_ei(): Internal.DyeColor;
        func_70619_bc(): void;
        func_213416_eg(): boolean;
        func_213408_v(arg0: number): number;
        func_70071_h_(): void;
        func_213424_x(arg0: number): number;
        func_213397_c(arg0: number): boolean;
        func_213421_w(arg0: number): number;
        func_213422_r(arg0: number): void;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_213420_ej(): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.CatEntity;
        func_213413_ef(): number;
        func_213419_u(arg0: boolean): void;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_213409_eh(): boolean;
        static func_234184_eY_(): Internal.AttributeModifierMap$MutableAttribute;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_213415_v(arg0: boolean): void;
        func_213423_ee(): ResourceLocation;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70878_b(arg0: Internal.AnimalEntity): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70627_aG(): number;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        func_213417_a(arg0: Internal.DyeColor_): void;
        static readonly field_213425_bD : {0:ResourceLocation,1:ResourceLocation,2:ResourceLocation,3:ResourceLocation,4:ResourceLocation,5:ResourceLocation,6:ResourceLocation,7:ResourceLocation,8:ResourceLocation,9:ResourceLocation,10:ResourceLocation};
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CatEntity_ = CatEntity;
    interface BiomeManager$IBiomeReader {
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
    }
    type BiomeManager$IBiomeReader_ = BiomeManager$IBiomeReader;
    abstract class JsonElement extends Document.Object {
        getAsFloat(): number;
        getAsBigInteger(): Internal.BigInteger;
        getAsByte(): number;
        getAsJsonObject(): Internal.JsonObject;
        getAsJsonNull(): Internal.JsonNull;
        getAsBigDecimal(): Internal.BigDecimal;
        isJsonNull(): boolean;
        getAsNumber(): Internal.Number;
        getAsCharacter(): string;
        getAsString(): string;
        isJsonArray(): boolean;
        getAsDouble(): number;
        getAsInt(): number;
        isJsonPrimitive(): boolean;
        getAsLong(): number;
        getAsJsonArray(): Internal.JsonArray;
        getAsBoolean(): boolean;
        isJsonObject(): boolean;
        getAsJsonPrimitive(): Internal.JsonPrimitive;
        toString(): string;
        getAsShort(): number;
        get asByte(): number;
        get asBigInteger(): Internal.BigInteger;
        get asJsonObject(): Internal.JsonObject;
        get asCharacter(): string;
        get jsonPrimitive(): boolean;
        get asNumber(): Internal.Number;
        get asBigDecimal(): Internal.BigDecimal;
        get jsonNull(): boolean;
        get asFloat(): number;
        get asLong(): number;
        get asInt(): number;
        get asJsonPrimitive(): Internal.JsonPrimitive;
        get asJsonNull(): Internal.JsonNull;
        get asShort(): number;
        get asDouble(): number;
        get asJsonArray(): Internal.JsonArray;
        get asString(): string;
        get jsonObject(): boolean;
        get jsonArray(): boolean;
        get asBoolean(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JsonElement_ = JsonElement;
    class CommandDispatcher <S> extends Document.Object {
        getSmartUsage(arg0: Internal.CommandNode<S>, arg1: S): Internal.Map<Internal.CommandNode<S>, string>;
        findAmbiguities(arg0: ((arg0: Internal.CommandNode<S>, arg1: Internal.CommandNode<S>, arg2: Internal.CommandNode<S>, arg3: Internal.Collection<string>) => void)): void;
        setConsumer(arg0: ((arg0: Internal.CommandContext<S>, arg1: boolean, arg2: number) => void)): void;
        getCompletionSuggestions(arg0: Internal.ParseResults<S>): Internal.CompletableFuture<Internal.Suggestions>;
        getCompletionSuggestions(arg0: Internal.ParseResults<S>, arg1: number): Internal.CompletableFuture<Internal.Suggestions>;
        getPath(arg0: Internal.CommandNode<S>): Internal.Collection<string>;
        findNode(arg0: Internal.Collection<string>): Internal.CommandNode<S>;
        getAllUsage(arg0: Internal.CommandNode<S>, arg1: S, arg2: boolean): string[];
        parse(arg0: string, arg1: S): Internal.ParseResults<S>;
        parse(arg0: Internal.StringReader, arg1: S): Internal.ParseResults<S>;
        getRoot(): Internal.RootCommandNode<S>;
        execute(arg0: string, arg1: S): number;
        execute(arg0: Internal.StringReader, arg1: S): number;
        execute(arg0: Internal.ParseResults<S>): number;
        register(arg0: Internal.LiteralArgumentBuilder<S>): Internal.LiteralCommandNode<S>;
        static readonly ARGUMENT_SEPARATOR : " ";
        static readonly ARGUMENT_SEPARATOR_CHAR : " ";
        get root(): Internal.RootCommandNode<S>;
        set consumer(arg0: ((arg0: Internal.CommandContext<S>, arg1: boolean, arg2: number) => void));
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandDispatcher_<S> = CommandDispatcher<S>;
    interface SecureRandomParameters {
    }
    type SecureRandomParameters_ = SecureRandomParameters;
    class Rectangle2d extends Document.Object {
        func_199319_b(): number;
        func_199317_d(): number;
        func_199315_b(arg0: number, arg1: number): boolean;
        func_199318_a(): number;
        func_199316_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Rectangle2d_ = Rectangle2d;
    interface ChannelFuture extends io.netty.util.concurrent.Future<void> {
        removeListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>[]): Internal.ChannelFuture;
        isVoid(): boolean;
        syncUninterruptibly(): Internal.ChannelFuture;
        channel(): io.netty.channel.Channel;
        await(): Internal.ChannelFuture;
        awaitUninterruptibly(): Internal.ChannelFuture;
        removeListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>): Internal.ChannelFuture;
        sync(): Internal.ChannelFuture;
        addListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>[]): Internal.ChannelFuture;
        addListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>): Internal.ChannelFuture;
    }
    type ChannelFuture_ = ChannelFuture;
    interface IMinecartCollisionHandler {
        getCollisionBox(arg0: Internal.AbstractMinecartEntity, arg1: Internal.Entity): Internal.AxisAlignedBB;
        getMinecartCollisionBox(arg0: Internal.AbstractMinecartEntity): Internal.AxisAlignedBB;
        onEntityCollision(arg0: Internal.AbstractMinecartEntity, arg1: Internal.Entity): void;
        getBoundingBox(arg0: Internal.AbstractMinecartEntity): Internal.AxisAlignedBB;
    }
    type IMinecartCollisionHandler_ = IMinecartCollisionHandler;
    class CClientStatusPacket$State extends Internal.Enum<Internal.CClientStatusPacket$State> {
        static valueOf(arg0: string): Internal.CClientStatusPacket$State;
        static values(): Internal.CClientStatusPacket$State[];
        static readonly REQUEST_STATS : Internal.CClientStatusPacket$State;
        static readonly PERFORM_RESPAWN : Internal.CClientStatusPacket$State;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CClientStatusPacket$State_ = "perform_respawn" | "request_stats" | CClientStatusPacket$State;
    abstract class LockableTileEntity extends Internal.TileEntity implements Internal.IInventory, Internal.INamedContainerProvider, Internal.INameable {
        createMenu(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity): Internal.Container;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        static func_213905_a(arg0: Internal.PlayerEntity, arg1: Internal.LockCode, arg2: Internal.ITextComponent_): boolean;
        func_200200_C_(): Internal.ITextComponent;
        func_213903_a(arg0: Internal.ITextComponent_): void;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_200201_e(): Internal.ITextComponent;
        func_213904_e(arg0: Internal.PlayerEntity): boolean;
        func_145748_c_(): Internal.ITextComponent;
        field_174901_a : Internal.LockCode;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LockableTileEntity_ = LockableTileEntity;
    interface ChannelHandler {
        exceptionCaught(arg0: Internal.ChannelHandlerContext, arg1: Internal.Throwable): void;
        handlerAdded(arg0: Internal.ChannelHandlerContext): void;
        handlerRemoved(arg0: Internal.ChannelHandlerContext): void;
    }
    type ChannelHandler_ = ChannelHandler;
    class SimpleBlockPlacer extends Internal.BlockPlacer {
        func_225567_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.Random): void;
        static readonly field_236446_b_ : Internal.Codec<Internal.SimpleBlockPlacer>;
        static readonly field_236447_c_ : Internal.SimpleBlockPlacer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SimpleBlockPlacer_ = SimpleBlockPlacer;
    class ThreeLayerFeature extends Internal.AbstractFeatureSizeType {
        func_230369_a_(arg0: number, arg1: number): number;
        static readonly field_236716_c_ : Internal.Codec<Internal.ThreeLayerFeature>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ThreeLayerFeature_ = ThreeLayerFeature;
    class RecipesUpdatedEvent extends net.minecraftforge.eventbus.api.Event {
        getRecipeManager(): Internal.RecipeManager;
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        get recipeManager(): Internal.RecipeManager;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecipesUpdatedEvent_ = RecipesUpdatedEvent;
    class GameRulesJS extends Document.Object {
        getInt(rule: string): number;
        set(rule: string, value: any): void;
        getBoolean(rule: string): boolean;
        getString(rule: string): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameRulesJS_ = GameRulesJS;
    class CallbackInfoReturnable <R> extends Internal.CallbackInfo {
        setReturnValue(arg0: R): void;
        getReturnValueB(): number;
        getReturnValue(): R;
        getReturnValueI(): number;
        getReturnValueZ(): boolean;
        getReturnValueJ(): number;
        getReturnValueS(): number;
        getReturnValueC(): string;
        getReturnValueD(): number;
        getReturnValueF(): number;
        get returnValueS(): number;
        get returnValueC(): string;
        get returnValueD(): number;
        get returnValueB(): number;
        get returnValue(): R;
        get returnValueF(): number;
        get returnValueI(): number;
        get returnValueZ(): boolean;
        get returnValueJ(): number;
        set returnValue(arg0: R);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CallbackInfoReturnable_<R> = CallbackInfoReturnable<R>;
    abstract class Dimension2D extends Document.Object implements Internal.Cloneable {
        getHeight(): number;
        setSize(arg0: number, arg1: number): void;
        setSize(arg0: Internal.Dimension2D): void;
        clone(): any;
        getWidth(): number;
        get width(): number;
        get height(): number;
        set size(arg0: Internal.Dimension2D);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Dimension2D_ = Dimension2D;
    class Type$FieldNotFoundException extends Internal.Type$TypeError {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Type$FieldNotFoundException_ = Type$FieldNotFoundException;
    class LightTexture extends Document.Object implements Internal.AutoCloseable {
        static func_228450_a_(arg0: number): number;
        static func_228451_a_(arg0: number, arg1: number): number;
        func_205108_b(): void;
        func_205109_c(): void;
        func_205106_a(arg0: number): void;
        static func_228454_b_(arg0: number): number;
        func_205107_a(): void;
        close(): void;
        readonly field_205112_c : ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LightTexture_ = LightTexture;
    interface ICapabilitySerializable <T> extends Internal.ICapabilityProvider, Internal.INBTSerializable<T> {
    }
    type ICapabilitySerializable_<T> = ICapabilitySerializable<T>;
    class EquipmentSlotType$Group extends Internal.Enum<Internal.EquipmentSlotType$Group> {
        static valueOf(arg0: string): Internal.EquipmentSlotType$Group;
        static values(): Internal.EquipmentSlotType$Group[];
        static readonly ARMOR : Internal.EquipmentSlotType$Group;
        static readonly HAND : Internal.EquipmentSlotType$Group;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EquipmentSlotType$Group_ = "hand" | "armor" | EquipmentSlotType$Group;
    class GlobalPos extends Document.Object {
        func_218180_b(): BlockPos;
        static func_239648_a_(arg0: Internal.RegistryKey<Internal.World>, arg1: BlockPos): Internal.GlobalPos;
        func_239646_a_(): Internal.RegistryKey<Internal.World>;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        static readonly field_239645_a_ : Internal.Codec<Internal.GlobalPos>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GlobalPos_ = GlobalPos;
    interface BakedQuadAccess {
        setVertices(arg0: number[]): void;
    }
    type BakedQuadAccess_ = BakedQuadAccess;
    class IntegrityProcessor extends Internal.StructureProcessor {
        func_230386_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings): Internal.Template$BlockInfo;
        static readonly field_237077_a_ : Internal.Codec<Internal.IntegrityProcessor>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IntegrityProcessor_ = IntegrityProcessor;
    class TemplateManager extends Document.Object {
        func_209509_a(arg0: ResourceLocation_, arg1: string): java_.nio.file.Path;
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_200220_a(arg0: ResourceLocation_): Internal.Template;
        func_200219_b(arg0: ResourceLocation_): Internal.Template;
        func_227458_a_(arg0: Internal.CompoundNBT): Internal.Template;
        func_195429_b(arg0: ResourceLocation_): boolean;
        func_189941_a(arg0: ResourceLocation_): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TemplateManager_ = TemplateManager;
    class EntityAIDebugRenderer$Entry extends Document.Object {
        readonly field_217724_b : number;
        readonly field_217725_c : string;
        readonly field_217726_d : boolean;
        readonly field_217723_a : BlockPos;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityAIDebugRenderer$Entry_ = EntityAIDebugRenderer$Entry;
    interface ValueLayout extends Internal.MemoryLayout {
        carrier(): Internal.Class<any>;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.MemoryLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        arrayElementVarHandle(arg0: number[]): Internal.VarHandle;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        order(): Internal.ByteOrder;
    }
    type ValueLayout_ = ValueLayout;
    class MagmaCubeEntity extends Internal.SlimeEntity {
        func_70027_ad(): boolean;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_205019_a(arg0: Internal.IWorldReader): boolean;
        static func_223367_b(arg0: Internal.EntityType<Internal.MagmaCubeEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        static func_234294_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70013_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MagmaCubeEntity_ = MagmaCubeEntity;
    class ArrowEntity extends Internal.AbstractArrowEntity {
        static func_191508_b(arg0: Internal.ItemStack): number;
        func_184558_a(arg0: Internal.EffectInstance): void;
        func_184550_j(): Internal.ItemStack;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184557_n(): number;
        func_184555_a(arg0: Internal.ItemStack): void;
        func_70071_h_(): void;
        func_70103_a(arg0: number): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ArrowEntity_ = ArrowEntity;
    abstract class TileEntity extends Internal.CapabilityProvider<Internal.TileEntity> implements Internal.IForgeTileEntity {
        func_189668_a(arg0: Internal.Mirror_): void;
        func_226984_a_(arg0: Internal.World, arg1: BlockPos): void;
        func_189667_a(arg0: Internal.Rotation_): void;
        func_145833_n(): number;
        handler$zjp000$getUpdatePacket(cir: Internal.CallbackInfoReturnable<any>): void;
        func_145831_w(): Internal.World;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_183000_F(): boolean;
        func_200662_C(): Internal.TileEntityType<any>;
        func_145837_r(): boolean;
        func_145836_u(): void;
        static func_235657_b_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): Internal.TileEntity;
        func_222814_r(): void;
        func_195044_w(): Internal.BlockState;
        onChunkUnloaded(): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_70296_d(): void;
        func_145830_o(): boolean;
        func_145843_s(): void;
        getTileData(): Internal.CompoundNBT;
        handler$zjp000$getUpdateTag(cir: Internal.CallbackInfoReturnable<any>): void;
        func_145829_t(): void;
        func_174877_v(): BlockPos;
        func_145842_c(arg0: number, arg1: number): boolean;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_189517_E_(): Internal.CompoundNBT;
        func_145828_a(arg0: Internal.CrashReportCategory): void;
        func_174878_a(arg0: BlockPos): void;
        field_195045_e : Internal.BlockState;
        get tileData(): Internal.CompoundNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TileEntity_ = TileEntity;
    class PufferfishEntity extends Internal.AbstractFishEntity {
        func_203714_a(arg0: number): void;
        func_70100_b_(arg0: Internal.PlayerEntity): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_70071_h_(): void;
        func_70636_d(): void;
        func_203715_dA(): number;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_213305_a(arg0: Internal.Pose_): Internal.EntitySize;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PufferfishEntity_ = PufferfishEntity;
    class ServerStatusResponse$Players extends Document.Object {
        func_151333_b(): number;
        func_151330_a(arg0: Internal.GameProfile[]): void;
        func_151331_c(): Internal.GameProfile[];
        func_151332_a(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerStatusResponse$Players_ = ServerStatusResponse$Players;
    class ModelQuadFacing extends Internal.Enum<Internal.ModelQuadFacing> {
        static fromDirection(dir: Internal.Direction_): Internal.ModelQuadFacing;
        static valueOf(name: string): Internal.ModelQuadFacing;
        static values(): Internal.ModelQuadFacing[];
        getOpposite(): Internal.ModelQuadFacing;
        static readonly UNASSIGNED : Internal.ModelQuadFacing;
        static readonly DOWN : Internal.ModelQuadFacing;
        static readonly NORTH : Internal.ModelQuadFacing;
        static readonly WEST : Internal.ModelQuadFacing;
        static readonly VALUES : Internal.ModelQuadFacing[];
        static readonly COUNT : 7;
        static readonly UP : Internal.ModelQuadFacing;
        static readonly SOUTH : Internal.ModelQuadFacing;
        static readonly EAST : Internal.ModelQuadFacing;
        get opposite(): Internal.ModelQuadFacing;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModelQuadFacing_ = "up" | "down" | "east" | "west" | "south" | "north" | "unassigned" | ModelQuadFacing;
    class BonusChestFeature extends Internal.Feature<Internal.NoFeatureConfig> {
        func_241855_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos, arg4: Internal.NoFeatureConfig): boolean;
        func_241855_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos, arg4: Internal.IFeatureConfig): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BonusChestFeature_ = BonusChestFeature;
    abstract class StateHolder <O, S> extends Document.Object implements Internal.FastMapStateHolder<any> {
        getNeighborTable(): Internal.Table<any, any, any>;
        getStateIndex(): number;
        func_235904_r_(): Internal.Collection<Internal.Property<any>>;
        setNeighborTable(table: Internal.Table<any, any, any>): void;
        func_206870_a<T_, V_>(arg0: Internal.Property<T_>, arg1: V_): S;
        func_235899_a_(states: Internal.Map_<any, any>): void;
        func_206871_b(): Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>;
        setStateMap(newValue: Internal.FastMap<any>): void;
        getStateMap(): Internal.FastMap<any>;
        replacePropertyMap(newMap: Internal.ImmutableMap<any, any>): void;
        func_235901_b_<T_>(arg0: Internal.Property<T_>): boolean;
        redirect$zll000$getNeighborFromFastMap(ignore: Internal.Table<any, any, any>, rowKey: any, columnKey: any): any;
        func_235896_a_<T_>(arg0: Internal.Property<T_>): S;
        setStateIndex(newValue: number): void;
        toString(): string;
        func_235903_d_<T_>(arg0: Internal.Property<T_>): Internal.Optional<T_>;
        getVanillaPropertyMap(): Internal.ImmutableMap<any, any>;
        func_177229_b<T_>(arg0: Internal.Property<T_>): T_;
        readonly field_235892_c_ : O;
        get stateIndex(): number;
        get neighborTable(): Internal.Table<any, any, any>;
        get stateMap(): Internal.FastMap<any>;
        get vanillaPropertyMap(): Internal.ImmutableMap<any, any>;
        set stateIndex(newValue: number);
        set stateMap(newValue: Internal.FastMap<any>);
        set neighborTable(table: Internal.Table<any, any, any>);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StateHolder_<O, S> = StateHolder<O, S>;
    class ServerTickList <T> extends Document.Object implements Internal.ITickList<T> {
        func_205362_a(arg0: BlockPos, arg1: T, arg2: number, arg3: Internal.TickPriority_): void;
        func_205361_b(arg0: BlockPos, arg1: T): boolean;
        func_223188_a(arg0: Internal.ChunkPos, arg1: boolean, arg2: boolean): Internal.List<Internal.NextTickListEntry<T>>;
        func_225420_a(): number;
        func_205359_a(arg0: BlockPos, arg1: T): boolean;
        func_219503_a(arg0: Internal.ChunkPos): Internal.ListNBT;
        func_205365_a(): void;
        func_205366_a(arg0: Internal.MutableBoundingBox, arg1: boolean, arg2: boolean): Internal.List<Internal.NextTickListEntry<T>>;
        func_205368_a(arg0: Internal.MutableBoundingBox, arg1: BlockPos): void;
        readonly field_205374_d : Internal.Set<Internal.NextTickListEntry<T>>;
        readonly field_205375_e : Internal.TreeSet<Internal.NextTickListEntry<T>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerTickList_<T> = ServerTickList<T>;
    class ConfiguredPlacement <DC> extends Document.Object implements Internal.IDecoratable<Internal.ConfiguredPlacement<any>> {
        func_242877_b(): DC;
        func_242876_a(arg0: Internal.WorldDecoratingHelper, arg1: Internal.Random, arg2: BlockPos): Internal.Stream<BlockPos>;
        func_227228_a_(arg0: Internal.ConfiguredPlacement<any>): Internal.ConfiguredPlacement<any>;
        func_227228_a_(arg0: Internal.ConfiguredPlacement<any>): any;
        toString(): string;
        static readonly field_236952_a_ : Internal.Codec<Internal.ConfiguredPlacement<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ConfiguredPlacement_<DC> = ConfiguredPlacement<DC>;
    interface IColorHelper {
        getColors(arg0: Internal.TextureAtlasSprite, arg1: number, arg2: number): Internal.List<number>;
    }
    type IColorHelper_ = IColorHelper;
    class OutlineLayerBuffer extends Document.Object implements Internal.IRenderTypeBuffer {
        func_228472_a_(arg0: number, arg1: number, arg2: number, arg3: number): void;
        getBuffer(arg0: Internal.RenderType): Internal.IVertexBuilder;
        func_228471_a_(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OutlineLayerBuffer_ = OutlineLayerBuffer;
    class FirstPersonRenderer extends Document.Object {
        func_187460_a(arg0: Hand_): void;
        func_228397_a_(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: Internal.ItemCameraTransforms$TransformType_, arg3: boolean, arg4: Internal.MatrixStack, arg5: Internal.IRenderTypeBuffer, arg6: number): void;
        func_78441_a(): void;
        func_228396_a_(arg0: number, arg1: Internal.MatrixStack, arg2: Internal.IRenderTypeBuffer$Impl, arg3: Internal.ClientPlayerEntity, arg4: number): void;
        field_187467_d : Internal.ItemStack;
        field_187468_e : Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FirstPersonRenderer_ = FirstPersonRenderer;
    class BlockLeftClickEventJS extends Internal.PlayerEventJS {
        getBlock(): Internal.BlockContainerJS;
        getItem(): Internal.ItemStackJS;
        getFacing(): Internal.Direction;
        getEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get item(): Internal.ItemStackJS;
        get facing(): Internal.Direction;
        get block(): Internal.BlockContainerJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockLeftClickEventJS_ = BlockLeftClickEventJS;
    class LivingDeathEvent extends Internal.LivingEvent {
        getListenerList(): Internal.ListenerList;
        getSource(): Internal.DamageSource;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get source(): Internal.DamageSource;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingDeathEvent_ = LivingDeathEvent;
    interface GameRulesAccessor {
    }
    type GameRulesAccessor_ = GameRulesAccessor;
    class NetworkPlayerInfo extends Document.Object {
        func_178853_c(): number;
        func_178861_h(): ResourceLocation;
        func_178859_a(arg0: Internal.ITextComponent_): void;
        func_178857_c(arg0: number): void;
        func_178850_i(): Internal.ScorePlayerTeam;
        func_178836_b(arg0: number): void;
        func_178846_a(arg0: number): void;
        func_178844_b(arg0: number): void;
        func_178843_c(arg0: number): void;
        func_178851_f(): string;
        func_178845_a(): Internal.GameProfile;
        func_178856_e(): boolean;
        func_178848_b(): Internal.GameType;
        func_178860_m(): number;
        func_178854_k(): Internal.ITextComponent;
        func_178837_g(): ResourceLocation;
        func_178847_n(): number;
        func_178855_p(): number;
        func_178835_l(): number;
        func_178858_o(): number;
        func_187106_i(): ResourceLocation;
        readonly field_187107_a : Internal.Map<Internal.MinecraftProfileTexture$Type, ResourceLocation>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NetworkPlayerInfo_ = NetworkPlayerInfo;
    interface ICharacterConsumer {
        accept(arg0: number, arg1: Internal.Style, arg2: number): boolean;
    }
    type ICharacterConsumer_ = ((arg0: number, arg1: Internal.Style, arg2: number) => boolean) | ICharacterConsumer;
    class Potion extends Internal.ForgeRegistryEntry<Internal.Potion> {
        func_185170_a(): Internal.List<Internal.EffectInstance>;
        func_185172_c(): boolean;
        func_185174_b(arg0: string): string;
        getTags(): Internal.Set<ResourceLocation>;
        static func_185168_a(arg0: string): Internal.Potion;
        isIn(arg0: Internal.ITag<Internal.Potion>): boolean;
        get tags(): Internal.Set<ResourceLocation>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Potion_ = Potion;
    class ClientRecipeBook extends Internal.RecipeBook {
        func_243196_a(arg0: Internal.Iterable<Internal.IRecipe<any>>): void;
        func_202891_a(arg0: Internal.RecipeBookCategories_): Internal.List<Internal.RecipeList>;
        func_199642_d(): Internal.List<Internal.RecipeList>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientRecipeBook_ = ClientRecipeBook;
    class VexEntity extends Internal.MonsterEntity {
        func_190651_g(arg0: BlockPos): void;
        func_190648_a(arg0: boolean): void;
        func_190658_a(arg0: Internal.MobEntity): void;
        func_190653_a(arg0: number): void;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70071_h_(): void;
        func_213315_a(arg0: Internal.MoverType_, arg1: Vec3): void;
        func_190647_dj(): boolean;
        func_190646_di(): BlockPos;
        static func_234321_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_190645_o(): Internal.MobEntity;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70013_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VexEntity_ = VexEntity;
    class AttributeModifierMap$MutableAttribute extends Document.Object {
        func_233814_a_(arg0: Internal.Attribute): Internal.AttributeModifierMap$MutableAttribute;
        func_233815_a_(arg0: Internal.Attribute, arg1: number): Internal.AttributeModifierMap$MutableAttribute;
        func_233813_a_(): Internal.AttributeModifierMap;
        hasAttribute(arg0: Internal.Attribute): boolean;
        combine(arg0: Internal.AttributeModifierMap$MutableAttribute): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttributeModifierMap$MutableAttribute_ = AttributeModifierMap$MutableAttribute;
    abstract class CharsetEncoder extends Document.Object {
        encode(arg0: Internal.CharBuffer, arg1: Internal.ByteBuffer, arg2: boolean): Internal.CoderResult;
        encode(arg0: Internal.CharBuffer): Internal.ByteBuffer;
        charset(): Internal.Charset;
        onUnmappableCharacter(arg0: Internal.CodingErrorAction): Internal.CharsetEncoder;
        maxBytesPerChar(): number;
        isLegalReplacement(arg0: number[]): boolean;
        unmappableCharacterAction(): Internal.CodingErrorAction;
        malformedInputAction(): Internal.CodingErrorAction;
        flush(arg0: Internal.ByteBuffer): Internal.CoderResult;
        canEncode(arg0: Internal.CharSequence): boolean;
        canEncode(arg0: string): boolean;
        averageBytesPerChar(): number;
        onMalformedInput(arg0: Internal.CodingErrorAction): Internal.CharsetEncoder;
        reset(): Internal.CharsetEncoder;
        replacement(): number[];
        replaceWith(arg0: number[]): Internal.CharsetEncoder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CharsetEncoder_ = CharsetEncoder;
    class ConditionArrayParser extends Document.Object {
        func_234049_a_(): ResourceLocation;
        func_234050_a_(arg0: Internal.JsonArray, arg1: string, arg2: Internal.LootParameterSet): Internal.ILootCondition[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ConditionArrayParser_ = ConditionArrayParser;
    abstract class AbstractObject2ObjectSortedMap <K, V> extends Internal.AbstractObject2ObjectMap<K, V> implements Internal.Object2ObjectSortedMap<K, V> {
        values(): Internal.Collection<any>;
        values(): Internal.ObjectCollection<V>;
        keySet(): Internal.Set<any>;
        keySet(): Internal.ObjectSet<any>;
        keySet(): Internal.ObjectSortedSet<K>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractObject2ObjectSortedMap_<K, V> = AbstractObject2ObjectSortedMap<K, V>;
    class GuiScreenEvent$KeyboardCharTypedEvent$Post extends Internal.GuiScreenEvent$KeyboardCharTypedEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$KeyboardCharTypedEvent$Post_ = GuiScreenEvent$KeyboardCharTypedEvent$Post;
    interface FunctionContainer {
        lootingEnchant(count: Internal.IRandomRange, limit: number): Internal.FunctionContainer;
        enchantWithLevels(levels: Internal.IRandomRange, treasure: boolean): Internal.FunctionContainer;
        damage(damage: Internal.IRandomRange): Internal.FunctionContainer;
        nbt(tag: Internal.CompoundNBT): Internal.FunctionContainer;
        lootTable(table: ResourceLocation_, seed: number): Internal.FunctionContainer;
        copyName(source: Internal.CopyName$Source_): Internal.FunctionContainer;
        addFunction(arg0: Internal.JsonObject): Internal.FunctionContainer;
        count(count: Internal.IRandomRange): Internal.FunctionContainer;
        name(name: Internal.Text_, entity: Internal.LootContext$EntityTarget_): Internal.FunctionContainer;
        name(name: Internal.Text_): Internal.FunctionContainer;
        furnaceSmelt(): Internal.FunctionContainer;
        addConditionalFunction(func: ((arg0: Internal.ConditionalFunction) => void)): Internal.FunctionContainer;
        enchantRandomly(enchantments: ResourceLocation[]): Internal.FunctionContainer;
    }
    type FunctionContainer_ = FunctionContainer;
    abstract class UserListEntry <T> extends Document.Object {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type UserListEntry_<T> = UserListEntry<T>;
    class Long2ObjectLinkedOpenHashMap <V> extends Internal.AbstractLong2ObjectSortedMap<V> implements Internal.Serializable, Internal.Cloneable, Internal.Hash {
        long2ObjectEntrySet(): Internal.ObjectSet<any>;
        long2ObjectEntrySet(): Internal.ObjectSortedSet<any>;
        long2ObjectEntrySet(): Internal.Long2ObjectSortedMap$FastSortedEntrySet<V>;
        getOrDefault(arg0: number, arg1: V): V;
        computeIfAbsent(arg0: number, arg1: ((arg0: number) => V)): V;
        values(): Internal.Collection<any>;
        values(): Internal.ObjectCollection<V>;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        putAndMoveToLast(arg0: number, arg1: V): V;
        getAndMoveToLast(arg0: number): V;
        removeLast(): V;
        containsValue(arg0: any): boolean;
        put(arg0: number, arg1: V): V;
        remove(arg0: number): V;
        remove(arg0: number, arg1: any): boolean;
        compute(arg0: number, arg1: ((arg0: number, arg1: V) => V)): V;
        putAndMoveToFirst(arg0: number, arg1: V): V;
        trim(arg0: number): boolean;
        trim(): boolean;
        getAndMoveToFirst(arg0: number): V;
        hashCode(): number;
        removeFirst(): V;
        putAll(arg0: Internal.Map_<number, V>): void;
        merge(arg0: number, arg1: V, arg2: ((arg0: V, arg1: V) => V)): V;
        get(arg0: number): V;
        lastLongKey(): number;
        keySet(): Internal.Set<any>;
        keySet(): Internal.LongSet;
        keySet(): Internal.LongSortedSet;
        firstLongKey(): number;
        containsKey(arg0: number): boolean;
        subMap(arg0: number, arg1: number): Internal.Long2ObjectSortedMap<V>;
        isEmpty(): boolean;
        clear(): void;
        comparator(): Internal.LongComparator;
        comparator(): Internal.Comparator;
        computeIfPresent(arg0: number, arg1: ((arg0: number, arg1: V) => V)): V;
        size(): number;
        clone(): any;
        clone(): Internal.Long2ObjectLinkedOpenHashMap<V>;
        headMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        putIfAbsent(arg0: number, arg1: V): V;
        tailMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Long2ObjectLinkedOpenHashMap_<V> = Long2ObjectLinkedOpenHashMap<V>;
    class ItemTooltipEventJS extends Internal.EventJS {
        add(item: any, text: any): void;
        isAlt(): boolean;
        isCtrl(): boolean;
        isShift(): boolean;
        addAdvanced(item: any, handler: ((arg0: Internal.ItemStackJS, arg1: boolean, arg2: Internal.List<any>) => void)): void;
        addAdvancedToAll(handler: ((arg0: Internal.ItemStackJS, arg1: boolean, arg2: Internal.List<any>) => void)): void;
        addToAll(text: any): void;
        get ctrl(): boolean;
        get shift(): boolean;
        get alt(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemTooltipEventJS_ = ItemTooltipEventJS;
    class MinecraftProfileTexture extends Document.Object {
        getUrl(): string;
        getMetadata(arg0: string): string;
        getHash(): string;
        toString(): string;
        static readonly PROFILE_TEXTURE_COUNT : 3;
        get url(): string;
        get hash(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MinecraftProfileTexture_ = MinecraftProfileTexture;
    interface EventLoopGroup extends Internal.EventExecutorGroup {
        next(): Internal.EventLoop;
        register(arg0: io.netty.channel.Channel, arg1: Internal.ChannelPromise): Internal.ChannelFuture;
        register(arg0: Internal.ChannelPromise): Internal.ChannelFuture;
        register(arg0: io.netty.channel.Channel): Internal.ChannelFuture;
    }
    type EventLoopGroup_ = EventLoopGroup;
    class Future$State extends Internal.Enum<Internal.Future$State> {
        static valueOf(arg0: string): Internal.Future$State;
        static values(): Internal.Future$State[];
        static readonly CANCELLED : Internal.Future$State;
        static readonly SUCCESS : Internal.Future$State;
        static readonly FAILED : Internal.Future$State;
        static readonly RUNNING : Internal.Future$State;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Future$State_ = "running" | "success" | "failed" | "cancelled" | Future$State;
    interface LongStream extends Internal.BaseStream<number, Internal.LongStream> {
        average(): Internal.OptionalDouble;
        sequential(): Internal.BaseStream<any, any>;
        sequential(): Internal.LongStream;
        takeWhile(arg0: ((arg0: number) => boolean)): Internal.LongStream;
        distinct(): Internal.LongStream;
        findFirst(): Internal.OptionalLong;
        sum(): number;
        skip(arg0: number): Internal.LongStream;
        allMatch(arg0: ((arg0: number) => boolean)): boolean;
        mapToObj<U_>(arg0: ((arg0: number) => U_)): Internal.Stream<U_>;
        mapMulti(arg0: ((arg0: number, arg1: ((arg0: number) => void)) => void)): Internal.LongStream;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.PrimitiveIterator$OfLong;
        asDoubleStream(): Internal.DoubleStream;
        min(): Internal.OptionalLong;
        parallel(): Internal.LongStream;
        parallel(): Internal.BaseStream<any, any>;
        noneMatch(arg0: ((arg0: number) => boolean)): boolean;
        findAny(): Internal.OptionalLong;
        limit(arg0: number): Internal.LongStream;
        toArray(): number[];
        forEachOrdered(arg0: ((arg0: number) => void)): void;
        anyMatch(arg0: ((arg0: number) => boolean)): boolean;
        map(arg0: ((arg0: number) => number)): Internal.LongStream;
        mapToDouble(arg0: ((arg0: number) => number)): Internal.DoubleStream;
        reduce(arg0: ((arg0: number, arg1: number) => number)): Internal.OptionalLong;
        reduce(arg0: number, arg1: ((arg0: number, arg1: number) => number)): number;
        spliterator(): Internal.Spliterator$OfLong;
        spliterator(): Internal.Spliterator<any>;
        max(): Internal.OptionalLong;
        forEach(arg0: ((arg0: number) => void)): void;
        count(): number;
        dropWhile(arg0: ((arg0: number) => boolean)): Internal.LongStream;
        peek(arg0: ((arg0: number) => void)): Internal.LongStream;
        flatMap(arg0: ((arg0: number) => Internal.LongStream)): Internal.LongStream;
        filter(arg0: ((arg0: number) => boolean)): Internal.LongStream;
        sorted(): Internal.LongStream;
        boxed(): Internal.Stream<number>;
        summaryStatistics(): Internal.LongSummaryStatistics;
        mapToInt(arg0: ((arg0: number) => number)): Internal.IntStream;
        collect<R_>(arg0: (() => R_), arg1: ((arg0: R_, arg1: number) => void), arg2: ((arg0: R_, arg1: R_) => void)): R_;
    }
    type LongStream_ = LongStream;
    class BaseTreeFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_236685_a_(arg0: Internal.List<Internal.TreeDecorator>): Internal.BaseTreeFeatureConfig;
        func_227373_a_(): void;
        field_227372_q_ : boolean;
        readonly field_227369_n_ : Internal.BlockStateProvider;
        readonly field_227368_m_ : Internal.BlockStateProvider;
        static readonly field_236676_a_ : Internal.Codec<Internal.BaseTreeFeatureConfig>;
        readonly field_227370_o_ : Internal.List<Internal.TreeDecorator>;
        readonly field_236682_l_ : Internal.Heightmap$Type;
        readonly field_236677_f_ : Internal.FoliagePlacer;
        readonly field_236680_i_ : number;
        readonly field_236679_h_ : Internal.AbstractFeatureSizeType;
        readonly field_236678_g_ : Internal.AbstractTrunkPlacer;
        readonly field_236681_j_ : boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BaseTreeFeatureConfig_ = BaseTreeFeatureConfig;
    interface IEntityReader {
        func_175674_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: ((arg0: Internal.Entity) => boolean)): Internal.List<Internal.Entity>;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_175647_a<T>(arg0: Internal.Class_<T>, arg1: Internal.AxisAlignedBB, arg2: ((arg0: T) => boolean)): Internal.List<T>;
        func_217374_a<T>(arg0: Internal.Class_<T>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: Internal.AxisAlignedBB): Internal.List<T>;
        func_217362_a(arg0: Internal.Entity, arg1: number): Internal.PlayerEntity;
        func_190525_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: ((arg0: Internal.Entity) => boolean)): Internal.PlayerEntity;
        func_217373_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: Internal.AxisAlignedBB): Internal.List<Internal.PlayerEntity>;
        func_72839_b(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.List<Internal.Entity>;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: ((arg0: Internal.Entity) => boolean)): Internal.Stream<Internal.VoxelShape>;
        func_217370_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity): Internal.PlayerEntity;
        func_217371_b(arg0: Internal.UUID): Internal.PlayerEntity;
        func_217360_a<T>(arg0: Internal.Class_<T>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T;
        func_217372_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number): Internal.PlayerEntity;
        func_217361_a<T>(arg0: Internal.List<T>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number): T;
        func_217359_a(arg0: Internal.EntityPredicate, arg1: number, arg2: number, arg3: number): Internal.PlayerEntity;
        func_225317_b<T>(arg0: Internal.Class_<T>, arg1: Internal.AxisAlignedBB): Internal.List<T>;
        func_217366_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): Internal.PlayerEntity;
        func_225318_b<T>(arg0: Internal.Class_<T>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T;
        func_217357_a<T>(arg0: Internal.Class_<T>, arg1: Internal.AxisAlignedBB): Internal.List<T>;
        func_217358_a(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        func_217369_A(): Internal.List<Internal.PlayerEntity>;
        func_225316_b<T>(arg0: Internal.Class_<T>, arg1: Internal.AxisAlignedBB, arg2: ((arg0: T) => boolean)): Internal.List<T>;
    }
    type IEntityReader_ = IEntityReader;
    class DataResult$Mu extends Document.Object implements Internal.K1 {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DataResult$Mu_ = DataResult$Mu;
    interface Float2FloatFunction extends it.unimi.dsi.fastutil.Function<number, number>, Internal.DoubleUnaryOperator {
        defaultReturnValue(): number;
        defaultReturnValue(arg0: number): void;
        applyAsDouble(arg0: number): number;
        containsKey(arg0: any): boolean;
        containsKey(arg0: number): boolean;
        get(arg0: any): any;
        get(arg0: any): number;
        get(arg0: number): number;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: number): number;
        put(arg0: number, arg1: number): number;
        remove(arg0: number): number;
        remove(arg0: any): number;
        remove(arg0: any): any;
    }
    type Float2FloatFunction_ = ((arg0: number) => number) | Float2FloatFunction;
    abstract class RenderTooltipEvent extends net.minecraftforge.eventbus.api.Event {
        getX(): number;
        getListenerList(): Internal.ListenerList;
        getY(): number;
        getFontRenderer(): Internal.FontRenderer;
        getLines(): Internal.List<Internal.ITextProperties>;
        getStack(): Internal.ItemStack;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get stack(): Internal.ItemStack;
        get listenerList(): Internal.ListenerList;
        get x(): number;
        get y(): number;
        get lines(): Internal.List<Internal.ITextProperties>;
        get fontRenderer(): Internal.FontRenderer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderTooltipEvent_ = RenderTooltipEvent;
    class CoatTypes extends Internal.Enum<Internal.CoatTypes> {
        static func_234248_a_(arg0: number): Internal.CoatTypes;
        static valueOf(arg0: string): Internal.CoatTypes;
        static values(): Internal.CoatTypes[];
        func_234247_a_(): number;
        static readonly WHITE : Internal.CoatTypes;
        static readonly WHITE_FIELD : Internal.CoatTypes;
        static readonly NONE : Internal.CoatTypes;
        static readonly BLACK_DOTS : Internal.CoatTypes;
        static readonly WHITE_DOTS : Internal.CoatTypes;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CoatTypes_ = "none" | "white" | "white_field" | "white_dots" | "black_dots" | CoatTypes;
    class EndSpikeFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_214669_a(): boolean;
        func_214668_c(): BlockPos;
        func_214671_b(): Internal.List<Internal.EndSpikeFeature$EndSpike>;
        static readonly field_236644_a_ : Internal.Codec<Internal.EndSpikeFeatureConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EndSpikeFeatureConfig_ = EndSpikeFeatureConfig;
    class ListNBT extends Internal.CollectionNBT<Internal.INBT> {
        func_186858_c(arg0: number): number;
        remove(arg0: number): Internal.INBT;
        remove(arg0: number): any;
        hashCode(): number;
        func_218660_b(arg0: number, arg1: Internal.INBT): boolean;
        get(arg0: number): any;
        get(arg0: number): Internal.INBT;
        func_225647_b_(): Internal.INBTType<Internal.ListNBT>;
        func_199850_a(arg0: string, arg1: number): Internal.ITextComponent;
        add(arg0: number, arg1: any): void;
        add(arg0: number, arg1: Internal.INBT): void;
        func_202170_f(arg0: number): number;
        set(arg0: number, arg1: Internal.INBT): Internal.INBT;
        set(arg0: number, arg1: any): any;
        isEmpty(): boolean;
        clear(): void;
        func_150306_c(arg0: number): number[];
        func_150305_b(arg0: number): Internal.CompoundNBT;
        func_74737_b(): Internal.INBT;
        func_74737_b(): Internal.ListNBT;
        size(): number;
        func_230528_d__(): number;
        func_74732_a(): number;
        func_74734_a(arg0: Internal.DataOutput): void;
        equals(arg0: any): boolean;
        func_150307_f(arg0: number): string;
        func_150308_e(arg0: number): number;
        func_150309_d(arg0: number): number;
        toString(): string;
        func_202169_e(arg0: number): Internal.ListNBT;
        func_218659_a(arg0: number, arg1: Internal.INBT): boolean;
        static readonly field_229694_a_ : Internal.INBTType<Internal.ListNBT>;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ListNBT_ = ListNBT;
    abstract class SmartTileEntity extends Internal.SyncedTileEntity implements Internal.ITickableTileEntity, Internal.IPartialSafeNBT, Internal.IInteractionChecker {
        writeSafe(arg0: Internal.CompoundNBT, arg1: boolean): void;
        getWorld(): Internal.World;
        writeToClient(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        readClientUpdate(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_145843_s(): void;
        sendToContainer(arg0: Internal.PacketBuffer): void;
        addBehavioursDeferred(arg0: Internal.List<Internal.TileEntityBehaviour>): void;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_73660_a(): void;
        addBehaviours(arg0: Internal.List<Internal.TileEntityBehaviour>): void;
        lazyTick(): void;
        setLazyTickRate(arg0: number): void;
        canPlayerUse(arg0: Internal.PlayerEntity): boolean;
        markVirtual(): void;
        getBehaviour<T_>(arg0: Internal.BehaviourType<T_>): T_;
        getRequiredItems(): Internal.ItemRequirement;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        initialize(): void;
        isVirtual(): boolean;
        get virtual(): boolean;
        get world(): Internal.World;
        get requiredItems(): Internal.ItemRequirement;
        set lazyTickRate(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SmartTileEntity_ = SmartTileEntity;
    class TreeExtractorMappingRecipeJS extends Internal.ThermalRecipeJS {
        serialize(): void;
        create(arg0: Internal.ListJS): void;
        trunk(arg0: ResourceLocation_): Internal.TreeExtractorMappingRecipeJS;
        leaf(arg0: ResourceLocation_): Internal.TreeExtractorMappingRecipeJS;
        deserialize(): void;
        outputFluid : Internal.FluidStackJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TreeExtractorMappingRecipeJS_ = TreeExtractorMappingRecipeJS;
    interface CraftingInventoryDuck {
        setCheckMatrixChanges(arg0: boolean): void;
    }
    type CraftingInventoryDuck_ = CraftingInventoryDuck;
    class Stat <T> extends Internal.ScoreCriteria {
        func_197920_b(): T;
        func_197921_a(): Internal.StatType<T>;
        func_75968_a(arg0: number): string;
        hashCode(): number;
        equals(arg0: any): boolean;
        static func_197918_a<T_>(arg0: Internal.StatType<T_>, arg1: T_): string;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Stat_<T> = Stat<T>;
    class Session extends Document.Object {
        func_148254_d(): string;
        func_111285_a(): string;
        func_148256_e(): Internal.GameProfile;
        func_111286_b(): string;
        setProperties(arg0: Internal.PropertyMap): void;
        func_148255_b(): string;
        hasCachedProperties(): boolean;
        set properties(arg0: Internal.PropertyMap);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Session_ = Session;
    class StructureSpreadSettings extends Document.Object {
        func_236660_a_(): number;
        func_236663_c_(): number;
        func_236662_b_(): number;
        static readonly field_236656_a_ : Internal.Codec<Internal.StructureSpreadSettings>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureSpreadSettings_ = StructureSpreadSettings;
    class AttachPlayerDataEvent extends Internal.AttachDataEvent<Internal.PlayerDataJS> {
        getListenerList(): Internal.ListenerList;
        invoke(): void;
        static readonly EVENT : Internal.Event<((arg0: Internal.AttachPlayerDataEvent) => void)>;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttachPlayerDataEvent_ = AttachPlayerDataEvent;
    interface TypeDescriptor$OfMethod <F, M> extends Internal.TypeDescriptor {
        parameterType(arg0: number): F;
        parameterArray(): F[];
        dropParameterTypes(arg0: number, arg1: number): M;
        parameterCount(): number;
        changeReturnType(arg0: F): M;
        parameterList(): Internal.List<F>;
        insertParameterTypes(arg0: number, arg1: F[]): M;
        returnType(): F;
        changeParameterType(arg0: number, arg1: F): M;
    }
    type TypeDescriptor$OfMethod_<F, M> = TypeDescriptor$OfMethod<F, M>;
    abstract class Property <T> extends Document.Object {
        hashCode(): number;
        equals(p_equals_1_: any): boolean;
        func_177699_b(): Internal.Class<T>;
        func_185929_b(arg0: string): Internal.Optional<T>;
        func_241491_c_(): Internal.Stream<Internal.Property$ValuePair<T>>;
        func_177701_a(): string;
        toString(): string;
        func_177700_c(): Internal.Collection<T>;
        func_177702_a(arg0: T): string;
        func_241492_e_(): Internal.Codec<Internal.Property$ValuePair<T>>;
        func_241489_a_(arg0: Internal.StateHolder<any, any>): Internal.Property$ValuePair<T>;
        func_206906_c(): number;
        func_241490_b_(arg0: T): Internal.Property$ValuePair<T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Property_<T> = Property<T>;
    class LivingSpawnEvent$AllowDespawn extends Internal.LivingSpawnEvent {
        getListenerList(): Internal.ListenerList;
        hasResult(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingSpawnEvent$AllowDespawn_ = LivingSpawnEvent$AllowDespawn;
    class ISound$AttenuationType extends Internal.Enum<Internal.ISound$AttenuationType> {
        static valueOf(arg0: string): Internal.ISound$AttenuationType;
        static values(): Internal.ISound$AttenuationType[];
        static readonly NONE : Internal.ISound$AttenuationType;
        static readonly LINEAR : Internal.ISound$AttenuationType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ISound$AttenuationType_ = "none" | "linear" | ISound$AttenuationType;
    interface Channel extends Internal.Closeable {
        isOpen(): boolean;
        close(): void;
    }
    type Channel_ = Channel;
    abstract class Registry <T> extends Document.Object implements Internal.Codec<T>, Internal.Keyable, Internal.IObjectIntIterable<T> {
        encode<U_>(arg0: T, arg1: Internal.DynamicOps<U_>, arg2: U_): Internal.DataResult<U_>;
        func_148757_b(arg0: T): number;
        static func_218322_a<V_, T_>(arg0: Internal.Registry<V_>, arg1: ResourceLocation_, arg2: T_): T_;
        func_243575_c(arg0: Internal.RegistryKey<T>): Internal.Optional<T>;
        func_241873_b(arg0: ResourceLocation_): Internal.Optional<T>;
        func_243576_d(arg0: Internal.RegistryKey<T>): T;
        func_177774_c(arg0: T): ResourceLocation;
        func_241875_b(): Internal.Lifecycle;
        keys<U_>(arg0: Internal.DynamicOps<U_>): Internal.Stream<U_>;
        func_243578_f(): Internal.RegistryKey<Internal.Registry<T>>;
        func_212607_c(arg0: ResourceLocation_): boolean;
        func_82594_a(arg0: ResourceLocation_): T;
        decode<U_>(arg0: Internal.DynamicOps<U_>, arg1: U_): Internal.DataResult<com.mojang.datafixers.util.Pair<T, U_>>;
        static func_218325_a<T_>(arg0: Internal.Registry<T_>, arg1: string, arg2: T_): T_;
        func_239659_c_(): Internal.Set<Internal.Map$Entry<Internal.RegistryKey<T>, T>>;
        static func_218343_a<V_, T_>(arg0: Internal.Registry<V_>, arg1: number, arg2: string, arg3: T_): T_;
        static func_239738_a_<T_>(arg0: Internal.MutableRegistry<T_>): void;
        func_230519_c_(arg0: T): Internal.Optional<Internal.RegistryKey<T>>;
        toString(): string;
        func_148742_b(): Internal.Set<ResourceLocation>;
        func_230516_a_(arg0: Internal.RegistryKey<T>): T;
        func_201756_e(): Internal.Stream<T>;
        static readonly field_239696_ab_ : Internal.RegistryKey<Internal.Registry<Internal.LootFunctionType>>;
        static readonly field_218371_M : Internal.DefaultedRegistry<Internal.PointOfInterestType>;
        static readonly field_212618_g : Internal.DefaultedRegistry<Internal.Block>;
        static readonly field_243551_at : Internal.RegistryKey<Internal.Registry<Internal.ConfiguredCarver<any>>>;
        static readonly field_239671_I_ : Internal.RegistryKey<Internal.Registry<Internal.Structure<any>>>;
        static readonly field_218375_Q : Internal.Registry<Internal.Activity>;
        static readonly field_239692_aP_ : Internal.Registry<Internal.Attribute>;
        static readonly field_212633_v : Internal.Registry<Internal.SoundEvent>;
        static readonly field_239710_k_ : Internal.RegistryKey<Internal.Registry<Internal.Effect>>;
        static readonly field_239725_z_ : Internal.RegistryKey<Internal.Registry<Internal.TreeDecoratorType<any>>>;
        static readonly field_239704_ba_ : Internal.Registry<Internal.LootConditionType>;
        static readonly field_239698_ad_ : Internal.RegistryKey<Internal.Registry<Internal.DimensionType>>;
        static readonly field_243554_aw : Internal.RegistryKey<Internal.Registry<Internal.StructureProcessorList>>;
        static readonly field_218363_D : Internal.Registry<Internal.IRuleTestType<any>>;
        static readonly field_239721_v_ : Internal.RegistryKey<Internal.Registry<Internal.BlockStateProviderType<any>>>;
        static readonly field_239691_aJ_ : Internal.Registry<Internal.IPosRuleTests<any>>;
        static readonly field_239679_Q_ : Internal.RegistryKey<Internal.Registry<Internal.IRecipeSerializer<any>>>;
        static readonly field_239700_af_ : Internal.RegistryKey<Internal.Registry<Internal.Dimension>>;
        static readonly field_212626_o : Internal.Registry<Internal.TileEntityType<any>>;
        static readonly field_239677_O_ : Internal.RegistryKey<Internal.Registry<Internal.ContainerType<any>>>;
        static readonly field_218367_H : Internal.Registry<Internal.IRecipeType<any>>;
        static readonly field_239723_x_ : Internal.RegistryKey<Internal.Registry<Internal.FoliagePlacerType<any>>>;
        static readonly field_239675_M_ : Internal.RegistryKey<Internal.Registry<Internal.IStructureProcessorType<any>>>;
        static readonly field_212634_w : Internal.Registry<Internal.StatType<any>>;
        static readonly field_239673_K_ : Internal.RegistryKey<Internal.Registry<Internal.IRuleTestType<any>>>;
        static readonly field_218379_q : Internal.Registry<Internal.Feature<any>>;
        static readonly field_239702_ay_ : Internal.Registry<Internal.FeatureSizeType<any>>;
        static readonly field_212617_f : Internal.Registry<Internal.Registry<any>>;
        static readonly field_239666_D_ : Internal.RegistryKey<Internal.Registry<Internal.Codec<Internal.ChunkGenerator>>>;
        static readonly field_239668_F_ : Internal.RegistryKey<Internal.Registry<Internal.PaintingType>>;
        static readonly field_239664_B_ : Internal.RegistryKey<Internal.Registry<Internal.ParticleType<any>>>;
        static readonly field_218380_r : Internal.Registry<Internal.Placement<any>>;
        static readonly field_212632_u : Internal.Registry<Internal.ParticleType<any>>;
        static readonly field_218372_N : Internal.DefaultedRegistry<Internal.MemoryModuleType<any>>;
        static readonly field_212629_r : Internal.DefaultedRegistry<Internal.EntityType<any>>;
        static readonly field_239708_i_ : Internal.RegistryKey<Internal.Registry<Internal.SoundEvent>>;
        static readonly field_218360_A : Internal.DefaultedRegistry<Internal.ChunkStatus>;
        static readonly field_239681_S_ : Internal.RegistryKey<Internal.Registry<Internal.StatType<any>>>;
        static readonly field_239718_s_ : Internal.RegistryKey<Internal.Registry<Internal.Feature<any>>>;
        static readonly field_212621_j : Internal.DefaultedRegistry<Internal.Potion>;
        static readonly field_239683_U_ : Internal.RegistryKey<Internal.Registry<Internal.VillagerProfession>>;
        static readonly field_218364_E : Internal.Registry<Internal.IStructureProcessorType<any>>;
        static readonly field_239716_q_ : Internal.RegistryKey<Internal.Registry<Internal.WorldCarver<any>>>;
        static readonly field_239694_aZ_ : Internal.Registry<Internal.LootFunctionType>;
        static readonly field_243552_au : Internal.RegistryKey<Internal.Registry<Internal.ConfiguredFeature<any, any>>>;
        static readonly field_239685_W_ : Internal.RegistryKey<Internal.Registry<Internal.MemoryModuleType<any>>>;
        static readonly field_239714_o_ : Internal.RegistryKey<Internal.Registry<Internal.Item>>;
        static readonly field_239712_m_ : Internal.RegistryKey<Internal.Registry<Internal.Enchantment>>;
        static readonly field_218368_I : Internal.Registry<Internal.IRecipeSerializer<any>>;
        static readonly field_239701_aw_ : Internal.Registry<Internal.TrunkPlacerType<any>>;
        static readonly field_239687_Y_ : Internal.RegistryKey<Internal.Registry<Internal.Schedule>>;
        static readonly field_239699_ae_ : Internal.RegistryKey<Internal.Registry<Internal.World>>;
        static readonly field_229388_u_ : Internal.Registry<Internal.BlockPlacerType<any>>;
        static readonly field_239706_f_ : ResourceLocation;
        static readonly field_243549_ar : Internal.RegistryKey<Internal.Registry<Internal.DimensionSettings>>;
        static readonly field_243555_ax : Internal.RegistryKey<Internal.Registry<Internal.JigsawPattern>>;
        static readonly field_239670_H_ : Internal.RegistryKey<Internal.Registry<Internal.ChunkStatus>>;
        static readonly field_212631_t : Internal.Registry<Internal.Effect>;
        static readonly field_239672_J_ : Internal.RegistryKey<Internal.Registry<Internal.IStructurePieceType>>;
        static readonly field_218373_O : Internal.DefaultedRegistry<Internal.SensorType<any>>;
        static readonly field_239724_y_ : Internal.RegistryKey<Internal.Registry<Internal.TrunkPlacerType<any>>>;
        static readonly field_239689_aA_ : Internal.Registry<Internal.Codec<Internal.BiomeProvider>>;
        static readonly field_239711_l_ : Internal.RegistryKey<Internal.Registry<Internal.Block>>;
        static readonly field_212628_q : Internal.Registry<Internal.Enchantment>;
        static readonly field_239697_ac_ : Internal.RegistryKey<Internal.Registry<Internal.LootConditionType>>;
        static readonly field_218361_B : Internal.Registry<Internal.Structure<any>>;
        static readonly field_212620_i : Internal.DefaultedRegistry<Internal.PaintingType>;
        static readonly field_218365_F : Internal.Registry<Internal.IJigsawDeserializer<any>>;
        static readonly field_243550_as : Internal.RegistryKey<Internal.Registry<Internal.ConfiguredSurfaceBuilder<any>>>;
        static readonly field_239678_P_ : Internal.RegistryKey<Internal.Registry<Internal.IRecipeType<any>>>;
        static readonly field_218369_K : Internal.DefaultedRegistry<Internal.VillagerType>;
        static readonly field_218377_o : Internal.Registry<Internal.WorldCarver<any>>;
        static readonly field_239720_u_ : Internal.RegistryKey<Internal.Registry<Internal.Biome>>;
        static readonly field_229390_w_ : Internal.Registry<Internal.TreeDecoratorType<any>>;
        static readonly field_239722_w_ : Internal.RegistryKey<Internal.Registry<Internal.BlockPlacerType<any>>>;
        static readonly field_239695_aa_ : Internal.RegistryKey<Internal.Registry<Internal.LootPoolEntryType>>;
        static readonly field_239676_N_ : Internal.RegistryKey<Internal.Registry<Internal.IJigsawDeserializer<any>>>;
        static readonly field_239693_aY_ : Internal.Registry<Internal.LootPoolEntryType>;
        static readonly field_239674_L_ : Internal.RegistryKey<Internal.Registry<Internal.IPosRuleTests<any>>>;
        static readonly field_239690_aB_ : Internal.Registry<Internal.Codec<Internal.ChunkGenerator>>;
        static readonly field_239667_E_ : Internal.RegistryKey<Internal.Registry<Internal.TileEntityType<any>>>;
        static readonly field_218370_L : Internal.DefaultedRegistry<Internal.VillagerProfession>;
        static readonly field_239669_G_ : Internal.RegistryKey<Internal.Registry<ResourceLocation>>;
        static readonly field_243553_av : Internal.RegistryKey<Internal.Registry<Internal.StructureFeature<any, any>>>;
        static readonly field_212619_h : Internal.DefaultedRegistry<Internal.Fluid>;
        static readonly field_218374_P : Internal.Registry<Internal.Schedule>;
        static readonly field_239665_C_ : Internal.RegistryKey<Internal.Registry<Internal.Codec<Internal.BiomeProvider>>>;
        static readonly field_212630_s : Internal.DefaultedRegistry<Internal.Item>;
        static readonly field_239663_A_ : Internal.RegistryKey<Internal.Registry<Internal.FeatureSizeType<any>>>;
        static readonly field_239709_j_ : Internal.RegistryKey<Internal.Registry<Internal.Fluid>>;
        static readonly field_218362_C : Internal.Registry<Internal.IStructurePieceType>;
        static readonly field_239719_t_ : Internal.RegistryKey<Internal.Registry<Internal.Placement<any>>>;
        static readonly field_239682_T_ : Internal.RegistryKey<Internal.Registry<Internal.VillagerType>>;
        static readonly field_239717_r_ : Internal.RegistryKey<Internal.Registry<Internal.SurfaceBuilder<any>>>;
        static readonly field_218366_G : Internal.Registry<Internal.ContainerType<any>>;
        static readonly field_239715_p_ : Internal.RegistryKey<Internal.Registry<Internal.Potion>>;
        static readonly field_239684_V_ : Internal.RegistryKey<Internal.Registry<Internal.PointOfInterestType>>;
        static readonly field_212623_l : Internal.Registry<ResourceLocation>;
        static readonly field_239713_n_ : Internal.RegistryKey<Internal.Registry<Internal.EntityType<any>>>;
        static readonly field_239686_X_ : Internal.RegistryKey<Internal.Registry<Internal.SensorType<any>>>;
        static readonly field_239688_Z_ : Internal.RegistryKey<Internal.Registry<Internal.Activity>>;
        static readonly field_218378_p : Internal.Registry<Internal.SurfaceBuilder<any>>;
        static readonly field_229389_v_ : Internal.Registry<Internal.FoliagePlacerType<any>>;
        static readonly field_239680_R_ : Internal.RegistryKey<Internal.Registry<Internal.Attribute>>;
        static readonly field_229387_t_ : Internal.Registry<Internal.BlockStateProviderType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Registry_<T> = Registry<T>;
    class PlayerInteractEvent extends Internal.PlayerEvent {
        setCancellationResult(arg0: Internal.ActionResultType_): void;
        getCancellationResult(): Internal.ActionResultType;
        getWorld(): Internal.World;
        getListenerList(): Internal.ListenerList;
        getHand(): Hand;
        getPos(): BlockPos;
        getSide(): Internal.LogicalSide;
        getItemStack(): Internal.ItemStack;
        getFace(): Internal.Direction;
        get side(): Internal.LogicalSide;
        get itemStack(): Internal.ItemStack;
        get face(): Internal.Direction;
        get world(): Internal.World;
        get listenerList(): Internal.ListenerList;
        get pos(): BlockPos;
        get cancellationResult(): Internal.ActionResultType;
        get hand(): Hand;
        set cancellationResult(arg0: Internal.ActionResultType_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerInteractEvent_ = PlayerInteractEvent;
    class CoatColors extends Internal.Enum<Internal.CoatColors> {
        static valueOf(arg0: string): Internal.CoatColors;
        static values(): Internal.CoatColors[];
        func_234253_a_(): number;
        static func_234254_a_(arg0: number): Internal.CoatColors;
        static readonly WHITE : Internal.CoatColors;
        static readonly GRAY : Internal.CoatColors;
        static readonly CHESTNUT : Internal.CoatColors;
        static readonly BLACK : Internal.CoatColors;
        static readonly DARKBROWN : Internal.CoatColors;
        static readonly BROWN : Internal.CoatColors;
        static readonly CREAMY : Internal.CoatColors;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CoatColors_ = "white" | "creamy" | "chestnut" | "brown" | "black" | "gray" | "darkbrown" | CoatColors;
    class PlayerJoinedWorldEvent extends Internal.JeiEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerJoinedWorldEvent_ = PlayerJoinedWorldEvent;
    class PotionEntity extends Internal.ProjectileItemEntity implements Internal.IRendersAsItem {
        static readonly field_190546_d : ((arg0: Internal.LivingEntity) => boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PotionEntity_ = PotionEntity;
    interface IProfileResult {
        func_219917_a(arg0: string): Internal.List<Internal.DataPoint>;
        func_219924_f(): number;
        func_219918_a(): number;
        func_219919_a(arg0: Internal.File): boolean;
        func_219925_g(): number;
        func_219922_b(): number;
        func_219921_d(): number;
        func_219923_c(): number;
    }
    type IProfileResult_ = IProfileResult;
    class AudioFormat extends Document.Object {
        getEncoding(): Internal.AudioFormat$Encoding;
        getFrameSize(): number;
        getProperty(arg0: string): any;
        getSampleRate(): number;
        getChannels(): number;
        isBigEndian(): boolean;
        getSampleSizeInBits(): number;
        toString(): string;
        matches(arg0: Internal.AudioFormat): boolean;
        getFrameRate(): number;
        properties(): Internal.Map<string, any>;
        get bigEndian(): boolean;
        get frameRate(): number;
        get frameSize(): number;
        get channels(): number;
        get sampleSizeInBits(): number;
        get encoding(): Internal.AudioFormat$Encoding;
        get sampleRate(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AudioFormat_ = AudioFormat;
    interface ICustomPacket <T> {
        setName(arg0: ResourceLocation_): void;
        getThis(): T;
        getName(): ResourceLocation;
        getIndex(): number;
        getDirection(): Internal.NetworkDirection;
        setData(arg0: Internal.PacketBuffer): void;
        setIndex(arg0: number): void;
        getInternalData(): Internal.PacketBuffer;
    }
    type ICustomPacket_<T> = ICustomPacket<T>;
    class MatrixStack extends Document.Object {
        func_227861_a_(x: number, y: number, z: number): void;
        func_227860_a_(): void;
        func_227862_a_(arg0: number, arg1: number, arg2: number): void;
        func_227863_a_(q: Internal.Quaternion): void;
        func_227867_d_(): boolean;
        func_227866_c_(): Internal.MatrixStack$Entry;
        func_227865_b_(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MatrixStack_ = MatrixStack;
    abstract class AsynchronousFileChannel extends Document.Object implements Internal.AsynchronousChannel {
        read(arg0: Internal.ByteBuffer, arg1: number): Internal.Future<number>;
        read<A_>(arg0: Internal.ByteBuffer, arg1: number, arg2: A_, arg3: Internal.CompletionHandler<number, A_>): void;
        truncate(arg0: number): Internal.AsynchronousFileChannel;
        size(): number;
        lock(arg0: number, arg1: number, arg2: boolean): Internal.Future<Internal.FileLock>;
        lock<A_>(arg0: A_, arg1: Internal.CompletionHandler<Internal.FileLock, A_>): void;
        lock<A_>(arg0: number, arg1: number, arg2: boolean, arg3: A_, arg4: Internal.CompletionHandler<Internal.FileLock, A_>): void;
        lock(): Internal.Future<Internal.FileLock>;
        force(arg0: boolean): void;
        write(arg0: Internal.ByteBuffer, arg1: number): Internal.Future<number>;
        write<A_>(arg0: Internal.ByteBuffer, arg1: number, arg2: A_, arg3: Internal.CompletionHandler<number, A_>): void;
        tryLock(): Internal.FileLock;
        tryLock(arg0: number, arg1: number, arg2: boolean): Internal.FileLock;
        static open(arg0: java_.nio.file.Path, arg1: Internal.Set<Internal.OpenOption>, arg2: Internal.ExecutorService, arg3: any[]): Internal.AsynchronousFileChannel;
        static open(arg0: java_.nio.file.Path, arg1: Internal.OpenOption[]): Internal.AsynchronousFileChannel;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AsynchronousFileChannel_ = AsynchronousFileChannel;
    class CommandContextBuilder <S> extends Document.Object {
        withChild(arg0: Internal.CommandContextBuilder<S>): Internal.CommandContextBuilder<S>;
        withNode(arg0: Internal.CommandNode<S>, arg1: Internal.StringRange): Internal.CommandContextBuilder<S>;
        getNodes(): Internal.List<Internal.ParsedCommandNode<S>>;
        getCommand(): Internal.Command<S>;
        getChild(): Internal.CommandContextBuilder<S>;
        getDispatcher(): Internal.CommandDispatcher<S>;
        withCommand(arg0: ((arg0: Internal.CommandContext<S>) => number)): Internal.CommandContextBuilder<S>;
        withArgument(arg0: string, arg1: Internal.ParsedArgument<S, any>): Internal.CommandContextBuilder<S>;
        getLastChild(): Internal.CommandContextBuilder<S>;
        findSuggestionContext(arg0: number): Internal.SuggestionContext<S>;
        build(arg0: string): Internal.CommandContext<S>;
        getSource(): S;
        getRange(): Internal.StringRange;
        getArguments(): Internal.Map<string, Internal.ParsedArgument<S, any>>;
        copy(): Internal.CommandContextBuilder<S>;
        withSource(arg0: S): Internal.CommandContextBuilder<S>;
        getRootNode(): Internal.CommandNode<S>;
        get nodes(): Internal.List<Internal.ParsedCommandNode<S>>;
        get lastChild(): Internal.CommandContextBuilder<S>;
        get range(): Internal.StringRange;
        get arguments(): Internal.Map<string, Internal.ParsedArgument<S, any>>;
        get source(): S;
        get dispatcher(): Internal.CommandDispatcher<S>;
        get command(): Internal.Command<S>;
        get child(): Internal.CommandContextBuilder<S>;
        get rootNode(): Internal.CommandNode<S>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandContextBuilder_<S> = CommandContextBuilder<S>;
    class BlockClusterFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        static readonly field_236587_a_ : Internal.Codec<Internal.BlockClusterFeatureConfig>;
        readonly field_227296_i_ : number;
        readonly field_227293_f_ : number;
        readonly field_227295_h_ : number;
        readonly field_227294_g_ : number;
        readonly field_227291_c_ : Internal.Set<Internal.Block>;
        readonly field_227298_k_ : boolean;
        readonly field_227292_d_ : Internal.Set<Internal.BlockState>;
        readonly field_227297_j_ : boolean;
        readonly field_227289_a_ : Internal.BlockStateProvider;
        readonly field_227299_l_ : boolean;
        readonly field_227290_b_ : Internal.BlockPlacer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockClusterFeatureConfig_ = BlockClusterFeatureConfig;
    class RenderState$TextureState extends Internal.RenderState {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$TextureState_ = RenderState$TextureState;
    class ItemRenderer extends Document.Object implements Internal.IResourceManagerReloadListener {
        func_229111_a_(arg0: Internal.ItemStack, arg1: Internal.ItemCameraTransforms$TransformType_, arg2: boolean, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer, arg5: number, arg6: number, arg7: Internal.IBakedModel): void;
        func_229110_a_(arg0: Internal.ItemStack, arg1: Internal.ItemCameraTransforms$TransformType_, arg2: number, arg3: number, arg4: Internal.MatrixStack, arg5: Internal.IRenderTypeBuffer): void;
        func_229109_a_(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: Internal.ItemCameraTransforms$TransformType_, arg3: boolean, arg4: Internal.MatrixStack, arg5: Internal.IRenderTypeBuffer, arg6: Internal.World, arg7: number, arg8: number): void;
        handler$zog000$renderQuads(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.List<any>, arg3: Internal.ItemStack, arg4: number, arg5: number, arg6: Internal.CallbackInfo): void;
        func_229112_a_(matrices: Internal.MatrixStack, vertexConsumer: Internal.IVertexBuilder, quads: Internal.List<any>, stack: Internal.ItemStack, light: number, overlay: number): void;
        static func_229113_a_(arg0: Internal.IRenderTypeBuffer, arg1: Internal.RenderType, arg2: boolean, arg3: boolean): Internal.IVertexBuilder;
        func_175030_a(arg0: Internal.FontRenderer, arg1: Internal.ItemStack, arg2: number, arg3: number): void;
        static func_241731_a_(arg0: Internal.IRenderTypeBuffer, arg1: Internal.RenderType, arg2: Internal.MatrixStack$Entry): Internal.IVertexBuilder;
        func_184391_a(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: number, arg3: number): void;
        func_239390_c_(arg0: Internal.ItemStack, arg1: number, arg2: number): void;
        func_229114_a_(model: Internal.IBakedModel, stack: Internal.ItemStack, light: number, overlay: number, matrices: Internal.MatrixStack, vertices: Internal.IVertexBuilder): void;
        static func_239391_c_(arg0: Internal.IRenderTypeBuffer, arg1: Internal.RenderType, arg2: boolean, arg3: boolean): Internal.IVertexBuilder;
        func_180453_a(arg0: Internal.FontRenderer, arg1: Internal.ItemStack, arg2: number, arg3: number, arg4: string): void;
        func_184393_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.LivingEntity): Internal.IBakedModel;
        func_180450_b(arg0: Internal.ItemStack, arg1: number, arg2: number): void;
        static func_241732_b_(arg0: Internal.IRenderTypeBuffer, arg1: Internal.RenderType, arg2: Internal.MatrixStack$Entry): Internal.IVertexBuilder;
        func_175042_a(arg0: Internal.ItemStack, arg1: number, arg2: number): void;
        func_175037_a(): Internal.ItemModelMesher;
        static func_239386_a_(arg0: Internal.IRenderTypeBuffer, arg1: Internal.RenderType, arg2: boolean, arg3: boolean): Internal.IVertexBuilder;
        func_195410_a(arg0: Internal.IResourceManager): void;
        getResourceType(): Internal.IResourceType;
        getItemColors(): Internal.ItemColors;
        field_77023_b : number;
        readonly field_175057_n : Internal.TextureManager;
        static readonly field_110798_h : ResourceLocation;
        get itemColors(): Internal.ItemColors;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemRenderer_ = ItemRenderer;
    class DragonFightManager extends Document.Object {
        func_186106_e(): void;
        func_186087_f(): void;
        func_186090_a(arg0: Internal.EnderCrystalEntity, arg1: Internal.DamageSource): void;
        addPlayer(arg0: Internal.ServerPlayerEntity): void;
        func_186092_c(): number;
        func_186096_a(arg0: Internal.EnderDragonEntity): void;
        func_186099_b(arg0: Internal.EnderDragonEntity): void;
        removePlayer(arg0: Internal.ServerPlayerEntity): void;
        func_186088_a(): Internal.CompoundNBT;
        func_186105_b(): void;
        func_186102_d(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DragonFightManager_ = DragonFightManager;
    /**
    * Represents the base Java Class
    *
    * In JavaScript, `Class<T>`can be considered as `typeof T`
    */
    class Class <T> extends Document.Object implements Internal.Serializable, Internal.GenericDeclaration, java_.lang.reflect.Type, Internal.AnnotatedElement, Internal.TypeDescriptor$OfField<Internal.Class<any>>, Internal.Constable {
        getModule(): Internal.Module;
        isSealed(): boolean;
        getResource(arg0: string): Internal.URL;
        getName(): string;
        isLocalClass(): boolean;
        isSynthetic(): boolean;
        getCanonicalName(): string;
        getMethod(arg0: string, arg1: Internal.Class<any>[]): Internal.Method;
        describeConstable(): Internal.Optional<Internal.ClassDesc>;
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        getDeclaredFields(): Internal.Field[];
        isMemberClass(): boolean;
        cast(arg0: any): T;
        isInstance(arg0: any): boolean;
        getEnclosingMethod(): Internal.Method;
        getPermittedSubclasses(): Internal.Class<any>[];
        getSigners(): any[];
        getTypeParameters(): any[];
        isInterface(): boolean;
        getPackage(): Internal.Package;
        arrayType(): Internal.Class<any>;
        arrayType(): Internal.TypeDescriptor$OfField<any>;
        getNestHost(): Internal.Class<any>;
        asSubclass<U_>(arg0: Internal.Class_<U_>): Internal.Class<U_>;
        getField(arg0: string): Internal.Field;
        descriptorString(): string;
        getInterfaces(): Internal.Class<any>[];
        getAnnotatedInterfaces(): Internal.AnnotatedType[];
        newInstance(): T;
        isUnnamedClass(): boolean;
        getFields(): Internal.Field[];
        getAnnotation<A_>(arg0: Internal.Class_<A_>): A_;
        getRecordComponents(): any[];
        getComponentType(): Internal.Class<any>;
        getDeclaredAnnotation<A_>(arg0: Internal.Class_<A_>): A_;
        getSimpleName(): string;
        isArray(): boolean;
        getPackageName(): string;
        getMethods(): Internal.Method[];
        isPrimitive(): boolean;
        isAnnotation(): boolean;
        getProtectionDomain(): Internal.ProtectionDomain;
        getDeclaredConstructors(): Internal.Constructor<any>[];
        isAnnotationPresent(arg0: Internal.Class_<Internal.Annotation_>): boolean;
        desiredAssertionStatus(): boolean;
        getNestMembers(): Internal.Class<any>[];
        getGenericInterfaces(): java_.lang.reflect.Type[];
        getClassLoader(): Internal.ClassLoader;
        isAssignableFrom(arg0: Internal.Class_<any>): boolean;
        getDeclaredAnnotations(): Internal.Annotation[];
        getDeclaredMethods(): Internal.Method[];
        getDeclaringClass(): Internal.Class<any>;
        getAnnotationsByType<A_>(arg0: Internal.Class_<A_>): A_[];
        getConstructors(): Internal.Constructor<any>[];
        getAnnotatedSuperclass(): Internal.AnnotatedType;
        toGenericString(): string;
        getModifiers(): number;
        getTypeName(): string;
        getEnclosingConstructor(): Internal.Constructor<any>;
        isNestmateOf(arg0: Internal.Class_<any>): boolean;
        getClasses(): Internal.Class<any>[];
        getSuperclass(): Internal.Class<T>;
        getDeclaredField(arg0: string): Internal.Field;
        componentType(): Internal.TypeDescriptor$OfField<any>;
        componentType(): Internal.Class<any>;
        static forName(arg0: string, arg1: boolean, arg2: Internal.ClassLoader): Internal.Class<any>;
        static forName(arg0: Internal.Module, arg1: string): Internal.Class<any>;
        static forName(arg0: string): Internal.Class<any>;
        getResourceAsStream(arg0: string): Internal.InputStream;
        isRecord(): boolean;
        getDeclaredMethod(arg0: string, arg1: Internal.Class<any>[]): Internal.Method;
        isEnum(): boolean;
        getDeclaredConstructor(arg0: Internal.Class<any>[]): Internal.Constructor<T>;
        getAnnotations(): Internal.Annotation[];
        getConstructor(arg0: Internal.Class<any>[]): Internal.Constructor<T>;
        getEnumConstants(): T[];
        isHidden(): boolean;
        getDeclaredAnnotationsByType<A_>(arg0: Internal.Class_<A_>): A_[];
        getDeclaredClasses(): Internal.Class<any>[];
        isAnonymousClass(): boolean;
        getEnclosingClass(): Internal.Class<any>;
        toString(): string;
        getGenericSuperclass(): java_.lang.reflect.Type;
        get enclosingConstructor(): Internal.Constructor<any>;
        get annotations(): Internal.Annotation[];
        get memberClass(): boolean;
        get declaredConstructors(): Internal.Constructor<any>[];
        get declaredFields(): Internal.Field[];
        get superclass(): Internal.Class<T>;
        get record(): boolean;
        get canonicalName(): string;
        get package(): Internal.Package;
        get protectionDomain(): Internal.ProtectionDomain;
        get sealed(): boolean;
        get module(): Internal.Module;
        get enclosingMethod(): Internal.Method;
        get enum(): boolean;
        get declaringClass(): Internal.Class<any>;
        get synthetic(): boolean;
        get constructors(): Internal.Constructor<any>[];
        get declaredClasses(): Internal.Class<any>[];
        get unnamedClass(): boolean;
        get name(): string;
        get fields(): Internal.Field[];
        get classLoader(): Internal.ClassLoader;
        get primitive(): boolean;
        get hidden(): boolean;
        get methods(): Internal.Method[];
        get classes(): Internal.Class<any>[];
        get typeName(): string;
        get declaredMethods(): Internal.Method[];
        get interface(): boolean;
        get genericInterfaces(): java_.lang.reflect.Type[];
        get modifiers(): number;
        get typeParameters(): any[];
        get annotatedSuperclass(): Internal.AnnotatedType;
        get permittedSubclasses(): Internal.Class<any>[];
        get array(): boolean;
        get enumConstants(): T[];
        get annotatedInterfaces(): Internal.AnnotatedType[];
        get packageName(): string;
        get annotation(): boolean;
        get declaredAnnotations(): Internal.Annotation[];
        get interfaces(): Internal.Class<any>[];
        get genericSuperclass(): java_.lang.reflect.Type;
        get localClass(): boolean;
        get enclosingClass(): Internal.Class<any>;
        get nestMembers(): Internal.Class<any>[];
        get signers(): any[];
        get recordComponents(): any[];
        get simpleName(): string;
        get nestHost(): Internal.Class<any>;
        get anonymousClass(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Class_<T> = Class<T>;
    class ScoreCriteria extends Document.Object {
        static func_216390_a(arg0: string): Internal.Optional<Internal.ScoreCriteria>;
        func_96637_b(): boolean;
        func_178790_c(): Internal.ScoreCriteria$RenderType;
        func_96636_a(): string;
        static readonly field_186702_l : Internal.ScoreCriteria;
        static readonly field_178791_c : Internal.ScoreCriteria;
        static readonly field_186700_j : Internal.ScoreCriteria;
        static readonly field_186699_i : Internal.ScoreCriteria;
        static readonly field_186701_k : Internal.ScoreCriteria;
        static readonly field_186698_h : Internal.ScoreCriteria;
        static readonly field_197913_m : Internal.ScoreCriteria[];
        static readonly field_96638_f : Internal.ScoreCriteria;
        static readonly field_96639_d : Internal.ScoreCriteria;
        static readonly field_197914_n : Internal.ScoreCriteria[];
        static readonly field_96641_b : Internal.ScoreCriteria;
        static readonly field_96643_a : {"minecraft.custom:minecraft.pig_one_cm":Internal.Stat<any>,"killedByTeam.blue":Internal.ScoreCriteria,"minecraft.custom:minecraft.eat_cake_slice":Internal.Stat<any>,"minecraft.custom:minecraft.time_since_rest":Internal.Stat<any>,"killedByTeam.gold":Internal.ScoreCriteria,"killedByTeam.dark_purple":Internal.ScoreCriteria,"minecraft.picked_up:minecraft.sugar_cane":Internal.Stat<any>,"minecraft.custom:minecraft.boat_one_cm":Internal.Stat<any>,"minecraft.custom:minecraft.time_since_death":Internal.Stat<any>,"minecraft.picked_up:minecraft.redstone_lamp":Internal.Stat<any>,"minecraft.custom:minecraft.aviate_one_cm":Internal.Stat<any>,"minecraft.used:create.cuckoo_clock":Internal.Stat<any>,"dummy":Internal.ScoreCriteria,"minecraft.used:minecraft.sticky_piston":Internal.Stat<any>,"minecraft.custom:minecraft.clean_banner":Internal.Stat<any>,"minecraft.custom:minecraft.climb_one_cm":Internal.Stat<any>,"minecraft.custom:minecraft.deaths":Internal.Stat<any>,"killedByTeam.green":Internal.ScoreCriteria,"minecraft.picked_up:minecraft.salmon":Internal.Stat<any>,"minecraft.custom:minecraft.inspect_dropper":Internal.Stat<any>,"minecraft.custom:minecraft.horse_one_cm":Internal.Stat<any>,"minecraft.picked_up:minecraft.trapped_chest":Internal.Stat<any>,"killedByTeam.white":Internal.ScoreCriteria,"minecraft.custom:minecraft.target_hit":Internal.Stat<any>,"minecraft.killed:minecraft.horse":Internal.Stat<any>,"minecraft.custom:minecraft.fill_cauldron":Internal.Stat<any>,"minecraft.custom:minecraft.play_one_minute":Internal.Stat<any>,"minecraft.picked_up:minecraft.dirt":Internal.Stat<any>,"totalKillCount":Internal.ScoreCriteria,"deathCount":Internal.ScoreCriteria,"minecraft.custom:minecraft.mob_kills":Internal.Stat<any>,"air":Internal.ScoreCriteria,"teamkill.gray":Internal.ScoreCriteria,"killedByTeam.yellow":Internal.ScoreCriteria,"minecraft.dropped:minecraft.dirt":Internal.Stat<any>,"teamkill.gold":Internal.ScoreCriteria,"minecraft.custom:minecraft.open_enderchest":Internal.Stat<any>,"minecraft.used:create.sweet_roll":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_smithing_table":Internal.Stat<any>,"minecraft.picked_up:minecraft.acacia_boat":Internal.Stat<any>,"minecraft.custom:minecraft.clean_armor":Internal.Stat<any>,"teamkill.black":Internal.ScoreCriteria,"teamkill.blue":Internal.ScoreCriteria,"minecraft.used:minecraft.anvil":Internal.Stat<any>,"killedByTeam.dark_red":Internal.ScoreCriteria,"minecraft.custom:minecraft.clean_shulker_box":Internal.Stat<any>,"minecraft.custom:minecraft.player_kills":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_campfire":Internal.Stat<any>,"minecraft.mined:minecraft.tall_grass":Internal.Stat<any>,"minecraft.used:minecraft.sand":Internal.Stat<any>,"minecraft.dropped:minecraft.apple":Internal.Stat<any>,"minecraft.custom:minecraft.play_noteblock":Internal.Stat<any>,"health":Internal.ScoreCriteria,"trigger":Internal.ScoreCriteria,"food":Internal.ScoreCriteria,"minecraft.custom:minecraft.use_cauldron":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_cartography_table":Internal.Stat<any>,"minecraft.custom:minecraft.bell_ring":Internal.Stat<any>,"teamkill.light_purple":Internal.ScoreCriteria,"minecraft.used:create.creative_motor":Internal.Stat<any>,"minecraft.used:minecraft.bucket":Internal.Stat<any>,"minecraft.custom:minecraft.fall_one_cm":Internal.Stat<any>,"minecraft.custom:minecraft.tune_noteblock":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_anvil":Internal.Stat<any>,"minecraft.custom:minecraft.sneak_time":Internal.Stat<any>,"minecraft.custom:minecraft.raid_trigger":Internal.Stat<any>,"minecraft.used:minecraft.sugar_cane":Internal.Stat<any>,"teamkill.dark_aqua":Internal.ScoreCriteria,"killedByTeam.red":Internal.ScoreCriteria,"minecraft.custom:minecraft.trigger_trapped_chest":Internal.Stat<any>,"killedByTeam.dark_green":Internal.ScoreCriteria,"minecraft.used:minecraft.netherite_sword":Internal.Stat<any>,"killedByTeam.dark_aqua":Internal.ScoreCriteria,"minecraft.killed:minecraft.pig":Internal.Stat<any>,"minecraft.custom:minecraft.leave_game":Internal.Stat<any>,"minecraft.picked_up:minecraft.leather":Internal.Stat<any>,"minecraft.custom:minecraft.damage_absorbed":Internal.Stat<any>,"minecraft.used:minecraft.bamboo":Internal.Stat<any>,"minecraft.used:minecraft.tnt":Internal.Stat<any>,"minecraft.custom:minecraft.strider_one_cm":Internal.Stat<any>,"minecraft.dropped:minecraft.sugar_cane":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_furnace":Internal.Stat<any>,"minecraft.mined:minecraft.grass":Internal.Stat<any>,"minecraft.used:minecraft.bookshelf":Internal.Stat<any>,"minecraft.killed:minecraft.cow":Internal.Stat<any>,"minecraft.custom:minecraft.crouch_one_cm":Internal.Stat<any>,"minecraft.used:minecraft.command_block":Internal.Stat<any>,"minecraft.custom:minecraft.raid_win":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_stonecutter":Internal.Stat<any>,"minecraft.custom:minecraft.fish_caught":Internal.Stat<any>,"minecraft.custom:minecraft.damage_dealt_resisted":Internal.Stat<any>,"minecraft.custom:minecraft.animals_bred":Internal.Stat<any>,"minecraft.custom:minecraft.minecart_one_cm":Internal.Stat<any>,"minecraft.custom:minecraft.traded_with_villager":Internal.Stat<any>,"minecraft.picked_up:minecraft.porkchop":Internal.Stat<any>,"minecraft.custom:minecraft.damage_blocked_by_shield":Internal.Stat<any>,"minecraft.custom:minecraft.damage_resisted":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_crafting_table":Internal.Stat<any>,"minecraft.used:minecraft.piston":Internal.Stat<any>,"playerKillCount":Internal.ScoreCriteria,"level":Internal.ScoreCriteria,"teamkill.dark_purple":Internal.ScoreCriteria,"minecraft.custom:minecraft.walk_one_cm":Internal.Stat<any>,"minecraft.used:minecraft.diorite":Internal.Stat<any>,"minecraft.used:minecraft.oak_slab":Internal.Stat<any>,"minecraft.custom:minecraft.walk_under_water_one_cm":Internal.Stat<any>,"minecraft.custom:minecraft.damage_dealt":Internal.Stat<any>,"minecraft.custom:minecraft.jump":Internal.Stat<any>,"minecraft.custom:minecraft.play_record":Internal.Stat<any>,"killedByTeam.aqua":Internal.ScoreCriteria,"minecraft.custom:minecraft.sprint_one_cm":Internal.Stat<any>,"minecraft.used:custommachinery.custom_machine_item":Internal.Stat<any>,"armor":Internal.ScoreCriteria,"teamkill.green":Internal.ScoreCriteria,"minecraft.custom:minecraft.inspect_hopper":Internal.Stat<any>,"minecraft.used:minecraft.note_block":Internal.Stat<any>,"teamkill.white":Internal.ScoreCriteria,"minecraft.used:minecraft.oak_pressure_plate":Internal.Stat<any>,"minecraft.custom:minecraft.fly_one_cm":Internal.Stat<any>,"minecraft.custom:minecraft.walk_on_water_one_cm":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_blast_furnace":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_grindstone":Internal.Stat<any>,"minecraft.custom:minecraft.talked_to_villager":Internal.Stat<any>,"minecraft.dropped:minecraft.trader_llama_spawn_egg":Internal.Stat<any>,"minecraft.used:minecraft.apple":Internal.Stat<any>,"minecraft.used:minecraft.horse_spawn_egg":Internal.Stat<any>,"minecraft.used:minecraft.pig_spawn_egg":Internal.Stat<any>,"minecraft.custom:minecraft.damage_taken":Internal.Stat<any>,"minecraft.custom:minecraft.open_shulker_box":Internal.Stat<any>,"minecraft.picked_up:minecraft.trader_llama_spawn_egg":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_beacon":Internal.Stat<any>,"teamkill.red":Internal.ScoreCriteria,"minecraft.custom:minecraft.damage_dealt_absorbed":Internal.Stat<any>,"minecraft.dropped:minecraft.leather":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_brewingstand":Internal.Stat<any>,"minecraft.killed:minecraft.salmon":Internal.Stat<any>,"minecraft.used:minecraft.trapped_chest":Internal.Stat<any>,"minecraft.used:minecraft.water_bucket":Internal.Stat<any>,"minecraft.custom:minecraft.sleep_in_bed":Internal.Stat<any>,"minecraft.custom:minecraft.inspect_dispenser":Internal.Stat<any>,"teamkill.dark_green":Internal.ScoreCriteria,"minecraft.custom:minecraft.swim_one_cm":Internal.Stat<any>,"minecraft.custom:minecraft.pot_flower":Internal.Stat<any>,"minecraft.used:minecraft.barrel":Internal.Stat<any>,"teamkill.dark_red":Internal.ScoreCriteria,"killedByTeam.black":Internal.ScoreCriteria,"minecraft.custom:minecraft.enchant_item":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_loom":Internal.Stat<any>,"teamkill.yellow":Internal.ScoreCriteria,"minecraft.used:minecraft.lever":Internal.Stat<any>,"teamkill.dark_blue":Internal.ScoreCriteria,"minecraft.picked_up:create.adjustable_crate":Internal.Stat<any>,"killedByTeam.dark_blue":Internal.ScoreCriteria,"minecraft.custom:minecraft.interact_with_lectern":Internal.Stat<any>,"teamkill.dark_gray":Internal.ScoreCriteria,"minecraft.custom:minecraft.drop":Internal.Stat<any>,"minecraft.custom:minecraft.open_barrel":Internal.Stat<any>,"minecraft.used:minecraft.redstone_lamp":Internal.Stat<any>,"minecraft.picked_up:minecraft.apple":Internal.Stat<any>,"minecraft.custom:minecraft.open_chest":Internal.Stat<any>,"minecraft.used:minecraft.redstone_torch":Internal.Stat<any>,"minecraft.used:minecraft.flint_and_steel":Internal.Stat<any>,"teamkill.aqua":Internal.ScoreCriteria,"minecraft.custom:minecraft.interact_with_smoker":Internal.Stat<any>,"minecraft.used:minecraft.chest":Internal.Stat<any>,"xp":Internal.ScoreCriteria,"killedByTeam.gray":Internal.ScoreCriteria,"minecraft.used:minecraft.enchanting_table":Internal.Stat<any>,"minecraft.used:minecraft.piglin_spawn_egg":Internal.Stat<any>,"killedByTeam.light_purple":Internal.ScoreCriteria,"killedByTeam.dark_gray":Internal.ScoreCriteria};
        static readonly field_96642_c : Internal.ScoreCriteria;
        static readonly field_96640_e : Internal.ScoreCriteria;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScoreCriteria_ = ScoreCriteria;
    class WailaRenderEvent$Pre extends Internal.WailaRenderEvent {
        getListenerList(): Internal.ListenerList;
        getAccessor(): Internal.ICommonAccessor;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get accessor(): Internal.ICommonAccessor;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WailaRenderEvent$Pre_ = WailaRenderEvent$Pre;
    interface BlockPredicate {
        check(arg0: Internal.BlockContainerJS): boolean;
    }
    type BlockPredicate_ = BlockPredicate;
    interface AutoCloseable {
        close(): void;
    }
    type AutoCloseable_ = AutoCloseable;
    class PortalInfo extends Document.Object {
        readonly field_222505_a : Vec3;
        readonly field_222506_b : Vec3;
        readonly field_242960_c : number;
        readonly field_242961_d : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PortalInfo_ = PortalInfo;
    interface ILightListener {
        func_215567_a(arg0: BlockPos, arg1: boolean): void;
        func_215566_a(arg0: Internal.SectionPos, arg1: boolean): void;
    }
    type ILightListener_ = ILightListener;
    class StructureMode extends Internal.Enum<Internal.StructureMode> implements Internal.IStringSerializable {
        static valueOf(arg0: string): Internal.StructureMode;
        func_176610_l(): string;
        static values(): Internal.StructureMode[];
        func_242703_b(): Internal.ITextComponent;
        static readonly CORNER : Internal.StructureMode;
        static readonly LOAD : Internal.StructureMode;
        static readonly DATA : Internal.StructureMode;
        static readonly SAVE : Internal.StructureMode;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureMode_ = "save" | "load" | "corner" | "data" | StructureMode;
    class RegionRenderCacheBuilder extends Document.Object {
        func_228366_a_(arg0: Internal.RenderType): Internal.BufferBuilder;
        func_228367_b_(): void;
        func_228365_a_(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegionRenderCacheBuilder_ = RegionRenderCacheBuilder;
    class SJoinGamePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_179744_h(): boolean;
        func_240819_i_(): Internal.RegistryKey<Internal.World>;
        func_240817_g_(): Internal.DynamicRegistries;
        func_240816_f_(): Internal.Set<Internal.RegistryKey<Internal.World>>;
        func_229743_k_(): boolean;
        func_241786_f_(): Internal.GameType;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_244297_i(): Internal.DimensionType;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149195_d(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_229742_c_(): number;
        func_218728_h(): number;
        func_240820_n_(): boolean;
        func_149197_c(): number;
        func_149198_e(): Internal.GameType;
        func_240821_o_(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SJoinGamePacket_ = SJoinGamePacket;
    interface DoubleConsumer {
        andThen(arg0: ((arg0: number) => void)): Internal.DoubleConsumer;
        accept(arg0: number): void;
    }
    type DoubleConsumer_ = ((arg0: number) => void) | DoubleConsumer;
    class DateFormatSymbols extends Document.Object implements Internal.Serializable, Internal.Cloneable {
        setShortWeekdays(arg0: string[]): void;
        setShortMonths(arg0: string[]): void;
        getWeekdays(): string[];
        setEras(arg0: string[]): void;
        setMonths(arg0: string[]): void;
        setZoneStrings(arg0: string[][]): void;
        getEras(): string[];
        getLocalPatternChars(): string;
        setAmPmStrings(arg0: string[]): void;
        setWeekdays(arg0: string[]): void;
        getMonths(): string[];
        setLocalPatternChars(arg0: string): void;
        getAmPmStrings(): string[];
        hashCode(): number;
        equals(arg0: any): boolean;
        clone(): any;
        getZoneStrings(): string[][];
        getShortMonths(): string[];
        static getInstance(): Internal.DateFormatSymbols;
        static getInstance(arg0: Internal.Locale): Internal.DateFormatSymbols;
        static getAvailableLocales(): Internal.Locale[];
        getShortWeekdays(): string[];
        get eras(): string[];
        get localPatternChars(): string;
        get months(): string[];
        get shortMonths(): string[];
        get instance(): Internal.DateFormatSymbols;
        get zoneStrings(): string[][];
        get weekdays(): string[];
        get amPmStrings(): string[];
        get shortWeekdays(): string[];
        get availableLocales(): Internal.Locale[];
        set eras(arg0: string[]);
        set localPatternChars(arg0: string);
        set months(arg0: string[]);
        set shortMonths(arg0: string[]);
        set zoneStrings(arg0: string[][]);
        set weekdays(arg0: string[]);
        set amPmStrings(arg0: string[]);
        set shortWeekdays(arg0: string[]);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DateFormatSymbols_ = DateFormatSymbols;
    interface ExtendedChunk {
        setSkyNibbles(arg0: any[]): void;
        getSkyEmptinessMap(): boolean[];
        getSkyNibbles(): any[];
        getBlockNibbles(): any[];
        setSkyEmptinessMap(arg0: boolean[]): void;
        setBlockEmptinessMap(arg0: boolean[]): void;
        getBlockEmptinessMap(): boolean[];
        setBlockNibbles(arg0: any[]): void;
    }
    type ExtendedChunk_ = ExtendedChunk;
    class LightType extends Internal.Enum<Internal.LightType> {
        static valueOf(arg0: string): Internal.LightType;
        static values(): Internal.LightType[];
        static readonly SKY : Internal.LightType;
        static readonly BLOCK : Internal.LightType;
        readonly field_77198_c : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LightType_ = "sky" | "block" | LightType;
    class StructureTemplateWrapper extends Document.Object {
        getZeroPositionWithTransform(blockPos: BlockPos, mirror: Internal.Mirror_, rotation: Internal.Rotation_): BlockPos;
        getAuthor(): string;
        save(compoundTag: Internal.CompoundNBT): Internal.CompoundNBT;
        placeInWorldChunk(serverLevelAccessor: Internal.IServerWorld, blockPos: BlockPos, structurePlaceSettings: Internal.PlacementSettings, random: Internal.Random): void;
        filterBlocks(blockPos: BlockPos, structurePlaceSettings: Internal.PlacementSettings, block: Internal.Block): Internal.List<Internal.Template$BlockInfo>;
        filterBlocks(blockPos: BlockPos, structurePlaceSettings: Internal.PlacementSettings, block: Internal.Block, bl: boolean): Internal.List<Internal.Template$BlockInfo>;
        placeInWorld(serverLevelAccessor: Internal.IServerWorld, blockPos: BlockPos, blockPos2: BlockPos, structurePlaceSettings: Internal.PlacementSettings, random: Internal.Random, i: number): boolean;
        placeInWorld(serverLevelAccessor: Internal.IServerWorld, blockPos: BlockPos, structurePlaceSettings: Internal.PlacementSettings, random: Internal.Random): void;
        getBoundingBox(blockPos: BlockPos, rotation: Internal.Rotation_, blockPos2: BlockPos, mirror: Internal.Mirror_): Internal.MutableBoundingBox;
        getBoundingBox(structurePlaceSettings: Internal.PlacementSettings, blockPos: BlockPos): Internal.MutableBoundingBox;
        getSize(): BlockPos;
        getSize(rotation: Internal.Rotation_): BlockPos;
        fillFromWorld(level: Internal.World, blockPos: BlockPos, blockPos2: BlockPos, bl: boolean, block: Internal.Block): void;
        load(compoundTag: Internal.CompoundNBT): void;
        setAuthor(string: string): void;
        calculateConnectedPosition(structurePlaceSettings: Internal.PlacementSettings, blockPos: BlockPos, structurePlaceSettings2: Internal.PlacementSettings, blockPos2: BlockPos): BlockPos;
        static of(data: Internal.Template): Internal.StructureTemplateWrapper;
        static of(data: Internal.Iterable<Internal.Template>): Internal.Iterable<Internal.StructureTemplateWrapper>;
        static of(data: Internal.Stream<Internal.Template>): Internal.Stream<Internal.StructureTemplateWrapper>;
        static of(data: Internal.Optional<Internal.Template>): Internal.Optional<Internal.StructureTemplateWrapper>;
        getData(): Internal.Template;
        get size(): BlockPos;
        get data(): Internal.Template;
        get author(): string;
        set author(string: string);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureTemplateWrapper_ = StructureTemplateWrapper;
    class FireworksJS$Explosion extends Document.Object {
        trail : boolean;
        readonly fadeColors : Internal.IntOpenHashSet;
        shape : Internal.FireworksJS$Shape;
        flicker : boolean;
        readonly colors : Internal.IntOpenHashSet;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FireworksJS$Explosion_ = FireworksJS$Explosion;
    interface RandomAccess {
    }
    type RandomAccess_ = RandomAccess;
    class Explosion$Mode extends Internal.Enum<Internal.Explosion$Mode> {
        static valueOf(arg0: string): Internal.Explosion$Mode;
        static values(): Internal.Explosion$Mode[];
        static readonly DESTROY : Internal.Explosion$Mode;
        static readonly BREAK : Internal.Explosion$Mode;
        static readonly NONE : Internal.Explosion$Mode;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Explosion$Mode_ = "none" | "break" | "destroy" | Explosion$Mode;
    class EndSpikeFeature$EndSpike extends Document.Object {
        func_186152_b(): number;
        func_186150_e(): boolean;
        func_186154_a(arg0: BlockPos): boolean;
        func_186151_a(): number;
        func_186148_c(): number;
        func_186149_d(): number;
        func_186153_f(): Internal.AxisAlignedBB;
        static readonly field_236357_a_ : Internal.Codec<Internal.EndSpikeFeature$EndSpike>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EndSpikeFeature$EndSpike_ = EndSpikeFeature$EndSpike;
    class Splashes extends Internal.ReloadListener<Internal.List<string>> {
        func_215276_a(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Splashes_ = Splashes;
    class DimensionGeneratorSettings extends Document.Object {
        static func_241520_a_(arg0: Internal.SimpleRegistry<Internal.Dimension>, arg1: (() => Internal.DimensionType), arg2: Internal.ChunkGenerator): Internal.SimpleRegistry<Internal.Dimension>;
        func_236224_e_(): Internal.SimpleRegistry<Internal.Dimension>;
        func_236225_f_(): Internal.ChunkGenerator;
        static func_242753_a(arg0: Internal.DynamicRegistries, arg1: Internal.Properties): Internal.DimensionGeneratorSettings;
        func_236226_g_(): Internal.ImmutableSet<Internal.RegistryKey<Internal.World>>;
        static func_242751_a(arg0: Internal.Registry<Internal.DimensionType>, arg1: Internal.Registry<Internal.Biome>, arg2: Internal.Registry<Internal.DimensionSettings>): Internal.DimensionGeneratorSettings;
        static func_242752_a(arg0: Internal.DynamicRegistries): Internal.DimensionGeneratorSettings;
        func_236227_h_(): boolean;
        func_236228_i_(): boolean;
        func_236229_j_(): boolean;
        static func_242749_a(arg0: Internal.Registry<Internal.DimensionType>, arg1: Internal.SimpleRegistry<Internal.Dimension>, arg2: Internal.ChunkGenerator): Internal.SimpleRegistry<Internal.Dimension>;
        func_236232_m_(): Internal.DimensionGeneratorSettings;
        func_236231_l_(): Internal.DimensionGeneratorSettings;
        func_236230_k_(): Internal.DimensionGeneratorSettings;
        static func_242750_a(arg0: Internal.Registry<Internal.Biome>, arg1: Internal.Registry<Internal.DimensionSettings>, arg2: number): Internal.NoiseChunkGenerator;
        func_236221_b_(): number;
        func_236220_a_(arg0: boolean, arg1: Internal.OptionalLong): Internal.DimensionGeneratorSettings;
        func_236223_d_(): boolean;
        func_236222_c_(): boolean;
        static readonly field_236201_a_ : Internal.Codec<Internal.DimensionGeneratorSettings>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DimensionGeneratorSettings_ = DimensionGeneratorSettings;
    interface TypeRewriteRule {
        rewrite<A>(arg0: Internal.Type<A>): Internal.Optional<Internal.RewriteResult<A, any>>;
    }
    type TypeRewriteRule_ = TypeRewriteRule;
    class ItemTransformVec3f extends Document.Object {
        hashCode(): number;
        equals(arg0: any): boolean;
        func_228830_a_(arg0: boolean, arg1: Internal.MatrixStack): void;
        static readonly field_178366_a : Internal.ItemTransformVec3f;
        readonly field_178363_d : Internal.Vector3f;
        readonly field_178365_c : Internal.Vector3f;
        readonly field_178364_b : Internal.Vector3f;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemTransformVec3f_ = ItemTransformVec3f;
    interface Iterable <T> {
        iterator(): Internal.Iterator<T>;
        spliterator(): Internal.Spliterator<T>;
        forEach(arg0: ((arg0: T) => void)): void;
    }
    type Iterable_<T> = Iterable<T>;
    class LivingDestroyBlockEvent extends Internal.LivingEvent {
        getListenerList(): Internal.ListenerList;
        getState(): Internal.BlockState;
        getPos(): BlockPos;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get pos(): BlockPos;
        get state(): Internal.BlockState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingDestroyBlockEvent_ = LivingDestroyBlockEvent;
    abstract class SpriteUploader extends Internal.ReloadListener<Internal.AtlasTexture$SheetData> implements Internal.AutoCloseable {
        close(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpriteUploader_ = SpriteUploader;
    interface Arena extends Internal.SegmentAllocator, Internal.AutoCloseable {
        allocate(arg0: number, arg1: number): Internal.MemorySegment;
        scope(): Internal.MemorySegment$Scope;
        close(): void;
    }
    type Arena_ = Arena;
    interface IParticleData$IDeserializer <T> {
        func_197543_b(arg0: Internal.ParticleType<T>, arg1: Internal.PacketBuffer): T;
        func_197544_b(arg0: Internal.ParticleType<T>, arg1: Internal.StringReader): T;
    }
    type IParticleData$IDeserializer_<T> = IParticleData$IDeserializer<T>;
    class KeyboardListener extends Document.Object {
        func_197968_a(arg0: number): void;
        func_197967_a(arg0: boolean): void;
        func_197960_a(arg0: string): void;
        func_197961_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_204870_b(): void;
        func_197965_a(): string;
        field_197975_d : boolean;
        field_197973_b : boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type KeyboardListener_ = KeyboardListener;
    abstract class TameableEntity extends Internal.AnimalEntity {
        func_70909_n(): boolean;
        func_233685_eM_(): boolean;
        func_70902_q(): Internal.LivingEntity;
        func_142018_a(arg0: Internal.LivingEntity, arg1: Internal.LivingEntity): boolean;
        func_193101_c(arg0: Internal.PlayerEntity): void;
        func_70103_a(arg0: number): void;
        func_213336_c(arg0: Internal.LivingEntity): boolean;
        func_184753_b(): Internal.UUID;
        func_184754_b(arg0: Internal.UUID): void;
        func_96124_cp(): Internal.Team;
        func_152114_e(arg0: Internal.LivingEntity): boolean;
        func_233684_eK_(): boolean;
        func_70903_f(arg0: boolean): void;
        func_70645_a(arg0: Internal.DamageSource): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_233686_v_(arg0: boolean): void;
        func_184652_a(arg0: Internal.PlayerEntity): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_233687_w_(arg0: boolean): void;
        func_184191_r(arg0: Internal.Entity): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TameableEntity_ = TameableEntity;
    interface Thread$Builder {
        factory(): Internal.ThreadFactory;
        inheritInheritableThreadLocals(arg0: boolean): Internal.Thread$Builder;
        start(arg0: (() => void)): Internal.Thread;
        name(arg0: string): Internal.Thread$Builder;
        name(arg0: string, arg1: number): Internal.Thread$Builder;
        unstarted(arg0: (() => void)): Internal.Thread;
        uncaughtExceptionHandler(arg0: ((arg0: Internal.Thread, arg1: Internal.Throwable) => void)): Internal.Thread$Builder;
    }
    type Thread$Builder_ = Thread$Builder;
    class MethodHandles$Lookup extends Document.Object {
        findStaticVarHandle(arg0: Internal.Class_<any>, arg1: string, arg2: Internal.Class_<any>): Internal.VarHandle;
        hasFullPrivilegeAccess(): boolean;
        findStaticGetter(arg0: Internal.Class_<any>, arg1: string, arg2: Internal.Class_<any>): Internal.MethodHandle;
        lookupClass(): Internal.Class<any>;
        defineHiddenClass(arg0: number[], arg1: boolean, arg2: any[]): Internal.MethodHandles$Lookup;
        unreflectSetter(arg0: Internal.Field): Internal.MethodHandle;
        findVirtual(arg0: Internal.Class_<any>, arg1: string, arg2: Internal.MethodType): Internal.MethodHandle;
        findConstructor(arg0: Internal.Class_<any>, arg1: Internal.MethodType): Internal.MethodHandle;
        dropLookupMode(arg0: number): Internal.MethodHandles$Lookup;
        findStaticSetter(arg0: Internal.Class_<any>, arg1: string, arg2: Internal.Class_<any>): Internal.MethodHandle;
        bind(arg0: any, arg1: string, arg2: Internal.MethodType): Internal.MethodHandle;
        findGetter(arg0: Internal.Class_<any>, arg1: string, arg2: Internal.Class_<any>): Internal.MethodHandle;
        hasPrivateAccess(): boolean;
        unreflectGetter(arg0: Internal.Field): Internal.MethodHandle;
        accessClass<T_>(arg0: Internal.Class_<T_>): Internal.Class<T_>;
        findSpecial(arg0: Internal.Class_<any>, arg1: string, arg2: Internal.MethodType, arg3: Internal.Class_<any>): Internal.MethodHandle;
        in(arg0: Internal.Class_<any>): Internal.MethodHandles$Lookup;
        defineClass(arg0: number[]): Internal.Class<any>;
        unreflectConstructor(arg0: Internal.Constructor<any>): Internal.MethodHandle;
        unreflectVarHandle(arg0: Internal.Field): Internal.VarHandle;
        findClass(arg0: string): Internal.Class<any>;
        defineHiddenClassWithClassData(arg0: number[], arg1: any, arg2: boolean, arg3: any[]): Internal.MethodHandles$Lookup;
        unreflectSpecial(arg0: Internal.Method, arg1: Internal.Class_<any>): Internal.MethodHandle;
        lookupModes(): number;
        findStatic(arg0: Internal.Class_<any>, arg1: string, arg2: Internal.MethodType): Internal.MethodHandle;
        ensureInitialized<T_>(arg0: Internal.Class_<T_>): Internal.Class<T_>;
        unreflect(arg0: Internal.Method): Internal.MethodHandle;
        findVarHandle(arg0: Internal.Class_<any>, arg1: string, arg2: Internal.Class_<any>): Internal.VarHandle;
        findSetter(arg0: Internal.Class_<any>, arg1: string, arg2: Internal.Class_<any>): Internal.MethodHandle;
        toString(): string;
        previousLookupClass(): Internal.Class<any>;
        revealDirect(arg0: Internal.MethodHandle): Internal.MethodHandleInfo;
        static readonly MODULE : 16;
        static readonly PACKAGE : 8;
        static readonly PUBLIC : 1;
        static readonly ORIGINAL : 64;
        static readonly UNCONDITIONAL : 32;
        static readonly PROTECTED : 4;
        static readonly PRIVATE : 2;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MethodHandles$Lookup_ = MethodHandles$Lookup;
    interface ReadWriteLock {
        writeLock(): Internal.Lock;
        readLock(): Internal.Lock;
    }
    type ReadWriteLock_ = ReadWriteLock;
    class Heightmap extends Document.Object {
        func_202268_a(arg0: number[]): void;
        func_202269_a(): number[];
        static func_222690_a(arg0: Internal.IChunk, arg1: Internal.Set<Internal.Heightmap$Type>): void;
        func_202270_a(arg0: number, arg1: number, arg2: number, arg3: Internal.BlockState): boolean;
        func_202273_a(arg0: number, arg1: number): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Heightmap_ = Heightmap;
    class MapExtendingRecipe extends Internal.ShapedRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_192399_d(): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MapExtendingRecipe_ = MapExtendingRecipe;
    class Products$P2 <F, T1, T2> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: ((arg0: T1, arg1: T2) => R_)): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, ((arg0: T1, arg1: T2) => R_)>): Internal.App<F, R_>;
        and<T3_, T4_, T5_, T6_, T7_, T8_>(arg0: Internal.Products$P6<F, T3_, T4_, T5_, T6_, T7_, T8_>): Internal.Products$P8<F, T1, T2, T3_, T4_, T5_, T6_, T7_, T8_>;
        and<T3_, T4_, T5_, T6_>(arg0: Internal.Products$P4<F, T3_, T4_, T5_, T6_>): Internal.Products$P6<F, T1, T2, T3_, T4_, T5_, T6_>;
        and<T3_>(arg0: Internal.App<F, T3_>): Internal.Products$P3<F, T1, T2, T3_>;
        and<T3_, T4_>(arg0: Internal.Products$P2<F, T3_, T4_>): Internal.Products$P4<F, T1, T2, T3_, T4_>;
        and<T3_, T4_, T5_>(arg0: Internal.Products$P3<F, T3_, T4_, T5_>): Internal.Products$P5<F, T1, T2, T3_, T4_, T5_>;
        and<T3_, T4_, T5_, T6_, T7_>(arg0: Internal.Products$P5<F, T3_, T4_, T5_, T6_, T7_>): Internal.Products$P7<F, T1, T2, T3_, T4_, T5_, T6_, T7_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P2_<F, T1, T2> = Products$P2<F, T1, T2>;
    abstract class CollectionNBT <T> extends Internal.AbstractList<T> implements Internal.INBT, Internal.ListLike<any> {
        add(arg0: number, arg1: any): void;
        add(arg0: number, arg1: T): void;
        set(arg0: number, arg1: T): T;
        set(arg0: number, arg1: any): any;
        func_230528_d__(): number;
        func_218660_b(arg0: number, arg1: Internal.INBT): boolean;
        setLL(index: number, value: any): void;
        removeLL(index: number): void;
        clearLL(): void;
        sizeLL(): number;
        func_218659_a(arg0: number, arg1: Internal.INBT): boolean;
        getLL(index: number): any;
        remove(arg0: number): any;
        remove(arg0: number): T;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CollectionNBT_<T> = CollectionNBT<T>;
    class IsoEra extends Internal.Enum<Internal.IsoEra> implements Internal.Era {
        getValue(): number;
        static valueOf(arg0: string): Internal.IsoEra;
        static of(arg0: number): Internal.IsoEra;
        static values(): Internal.IsoEra[];
        static readonly CE : Internal.IsoEra;
        static readonly BCE : Internal.IsoEra;
        get value(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IsoEra_ = "bce" | "ce" | IsoEra;
    class BrewingStandContainer extends Internal.Container {
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_216981_f(): number;
        func_216982_e(): number;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BrewingStandContainer_ = BrewingStandContainer;
    class PlayerProfileCache$ProfileEntry extends Document.Object {
        func_152670_b(): Internal.Date;
        func_242126_a(arg0: number): void;
        func_242128_c(): number;
        func_152668_a(): Internal.GameProfile;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerProfileCache$ProfileEntry_ = PlayerProfileCache$ProfileEntry;
    interface WrappedJS {
    }
    type WrappedJS_ = WrappedJS;
    interface GameRulesAccessor$BooleanValue {
    }
    type GameRulesAccessor$BooleanValue_ = GameRulesAccessor$BooleanValue;
    class RenderState$ShadeModelState extends Internal.RenderState {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$ShadeModelState_ = RenderState$ShadeModelState;
    class AdvancementManager extends Internal.JsonReloadListener {
        func_195438_b(): Internal.Collection<Internal.Advancement>;
        func_192778_a(arg0: ResourceLocation_): Internal.Advancement;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AdvancementManager_ = AdvancementManager;
    class PiglinEntity extends Internal.AbstractPiglinEntity implements Internal.ICrossbowUser {
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        func_213671_a(arg0: boolean): void;
        func_82227_f(arg0: boolean): void;
        func_230293_i_(arg0: Internal.ItemStack): boolean;
        func_234424_eM_(): Internal.PiglinAction;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_213375_cj(): Internal.Brain<Internal.PiglinEntity>;
        func_70042_X(): number;
        func_230280_a_(arg0: Internal.ShootableItem): boolean;
        func_213397_c(arg0: number): boolean;
        func_230284_a_(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: Internal.ProjectileEntity, arg3: number): void;
        static func_234420_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_230283_U__(): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        static func_234418_b_(arg0: Internal.EntityType<Internal.PiglinEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_184205_a(arg0: Internal.Entity, arg1: boolean): boolean;
        func_234442_u_(arg0: boolean): void;
        func_234425_eN_(): boolean;
        func_70631_g_(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PiglinEntity_ = PiglinEntity;
    class BeginFrameEvent extends net.minecraftforge.eventbus.api.Event {
        getWorld(): Internal.ClientWorld;
        getListenerList(): Internal.ListenerList;
        getCameraPos(): Vec3;
        getInfo(): Internal.ActiveRenderInfo;
        getClippingHelper(): Internal.ClippingHelper;
        get cameraPos(): Vec3;
        get world(): Internal.ClientWorld;
        get listenerList(): Internal.ListenerList;
        get clippingHelper(): Internal.ClippingHelper;
        get info(): Internal.ActiveRenderInfo;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BeginFrameEvent_ = BeginFrameEvent;
    class RenderState$LightmapState extends Internal.RenderState$BooleanState {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$LightmapState_ = RenderState$LightmapState;
    interface MemorySegment {
        asReadOnly(): Internal.MemorySegment;
        heapBase(): Internal.Optional<any>;
        byteSize(): number;
        isMapped(): boolean;
        asByteBuffer(): Internal.ByteBuffer;
        isLoaded(): boolean;
        segmentOffset(arg0: Internal.MemorySegment): number;
        isNative(): boolean;
        isReadOnly(): boolean;
        load(): void;
        hashCode(): number;
        get(arg0: Internal.ValueLayout$OfInt, arg1: number): number;
        get(arg0: Internal.ValueLayout$OfShort, arg1: number): number;
        get(arg0: Internal.ValueLayout$OfDouble, arg1: number): number;
        get(arg0: Internal.ValueLayout$OfBoolean, arg1: number): boolean;
        get(arg0: Internal.ValueLayout$OfFloat, arg1: number): number;
        get(arg0: Internal.AddressLayout, arg1: number): Internal.MemorySegment;
        get(arg0: Internal.ValueLayout$OfLong, arg1: number): number;
        get(arg0: Internal.ValueLayout$OfByte, arg1: number): number;
        get(arg0: Internal.ValueLayout$OfChar, arg1: number): string;
        scope(): Internal.MemorySegment$Scope;
        unload(): void;
        toArray(arg0: Internal.ValueLayout$OfByte): number[];
        toArray(arg0: Internal.ValueLayout$OfShort): number[];
        toArray(arg0: Internal.ValueLayout$OfChar): string[];
        toArray(arg0: Internal.ValueLayout$OfInt): number[];
        toArray(arg0: Internal.ValueLayout$OfLong): number[];
        toArray(arg0: Internal.ValueLayout$OfDouble): number[];
        toArray(arg0: Internal.ValueLayout$OfFloat): number[];
        getAtIndex(arg0: Internal.ValueLayout$OfByte, arg1: number): number;
        getAtIndex(arg0: Internal.ValueLayout$OfBoolean, arg1: number): boolean;
        getAtIndex(arg0: Internal.ValueLayout$OfChar, arg1: number): string;
        getAtIndex(arg0: Internal.ValueLayout$OfDouble, arg1: number): number;
        getAtIndex(arg0: Internal.ValueLayout$OfFloat, arg1: number): number;
        getAtIndex(arg0: Internal.ValueLayout$OfLong, arg1: number): number;
        getAtIndex(arg0: Internal.ValueLayout$OfShort, arg1: number): number;
        getAtIndex(arg0: Internal.ValueLayout$OfInt, arg1: number): number;
        getAtIndex(arg0: Internal.AddressLayout, arg1: number): Internal.MemorySegment;
        address(): number;
        set(arg0: Internal.ValueLayout$OfLong, arg1: number, arg2: number): void;
        set(arg0: Internal.ValueLayout$OfByte, arg1: number, arg2: number): void;
        set(arg0: Internal.ValueLayout$OfInt, arg1: number, arg2: number): void;
        set(arg0: Internal.ValueLayout$OfDouble, arg1: number, arg2: number): void;
        set(arg0: Internal.ValueLayout$OfChar, arg1: number, arg2: string): void;
        set(arg0: Internal.ValueLayout$OfShort, arg1: number, arg2: number): void;
        set(arg0: Internal.AddressLayout, arg1: number, arg2: Internal.MemorySegment): void;
        set(arg0: Internal.ValueLayout$OfBoolean, arg1: number, arg2: boolean): void;
        set(arg0: Internal.ValueLayout$OfFloat, arg1: number, arg2: number): void;
        setUtf8String(arg0: number, arg1: string): void;
        spliterator(arg0: Internal.MemoryLayout): Internal.Spliterator<Internal.MemorySegment>;
        isAccessibleBy(arg0: Internal.Thread): boolean;
        fill(arg0: number): Internal.MemorySegment;
        copyFrom(arg0: Internal.MemorySegment): Internal.MemorySegment;
        reinterpret(arg0: Internal.Arena, arg1: ((arg0: Internal.MemorySegment) => void)): Internal.MemorySegment;
        reinterpret(arg0: number, arg1: Internal.Arena, arg2: ((arg0: Internal.MemorySegment) => void)): Internal.MemorySegment;
        reinterpret(arg0: number): Internal.MemorySegment;
        elements(arg0: Internal.MemoryLayout): Internal.Stream<Internal.MemorySegment>;
        mismatch(arg0: Internal.MemorySegment): number;
        equals(arg0: any): boolean;
        setAtIndex(arg0: Internal.ValueLayout$OfInt, arg1: number, arg2: number): void;
        setAtIndex(arg0: Internal.ValueLayout$OfLong, arg1: number, arg2: number): void;
        setAtIndex(arg0: Internal.AddressLayout, arg1: number, arg2: Internal.MemorySegment): void;
        setAtIndex(arg0: Internal.ValueLayout$OfDouble, arg1: number, arg2: number): void;
        setAtIndex(arg0: Internal.ValueLayout$OfBoolean, arg1: number, arg2: boolean): void;
        setAtIndex(arg0: Internal.ValueLayout$OfByte, arg1: number, arg2: number): void;
        setAtIndex(arg0: Internal.ValueLayout$OfChar, arg1: number, arg2: string): void;
        setAtIndex(arg0: Internal.ValueLayout$OfShort, arg1: number, arg2: number): void;
        setAtIndex(arg0: Internal.ValueLayout$OfFloat, arg1: number, arg2: number): void;
        force(): void;
        getUtf8String(arg0: number): string;
        asOverlappingSlice(arg0: Internal.MemorySegment): Internal.Optional<Internal.MemorySegment>;
        asSlice(arg0: number, arg1: number, arg2: number): Internal.MemorySegment;
        asSlice(arg0: number, arg1: Internal.MemoryLayout): Internal.MemorySegment;
        asSlice(arg0: number, arg1: number): Internal.MemorySegment;
        asSlice(arg0: number): Internal.MemorySegment;
    }
    type MemorySegment_ = MemorySegment;
    interface GroupPrincipal extends Internal.UserPrincipal {
    }
    type GroupPrincipal_ = GroupPrincipal;
    class LocalDate extends Document.Object implements Internal.Temporal, Internal.TemporalAdjuster, Internal.ChronoLocalDate, Internal.Serializable {
        atStartOfDay(): Internal.LocalDateTime;
        atStartOfDay(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        toEpochDay(): number;
        isEqual(arg0: Internal.ChronoLocalDate): boolean;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.ChronoLocalDate): number;
        getDayOfWeek(): Internal.DayOfWeek;
        lengthOfMonth(): number;
        getEra(): Internal.Era;
        getEra(): Internal.IsoEra;
        static from(arg0: Internal.TemporalAccessor): Internal.LocalDate;
        static ofYearDay(arg0: number, arg1: number): Internal.LocalDate;
        getMonth(): Internal.Month;
        plusMonths(arg0: number): Internal.LocalDate;
        plusYears(arg0: number): Internal.LocalDate;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        format(arg0: Internal.DateTimeFormatter): string;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isSupported(arg0: Internal.TemporalField): boolean;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDate;
        plus(arg0: Internal.TemporalAmount): Internal.LocalDate;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDate;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.LocalDate;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        atTime(arg0: Internal.LocalTime): Internal.ChronoLocalDateTime<any>;
        atTime(arg0: Internal.LocalTime): Internal.LocalDateTime;
        atTime(arg0: number, arg1: number, arg2: number, arg3: number): Internal.LocalDateTime;
        atTime(arg0: Internal.OffsetTime): Internal.OffsetDateTime;
        atTime(arg0: number, arg1: number, arg2: number): Internal.LocalDateTime;
        atTime(arg0: number, arg1: number): Internal.LocalDateTime;
        getYear(): number;
        toEpochSecond(arg0: Internal.LocalTime, arg1: Internal.ZoneOffset): number;
        withDayOfMonth(arg0: number): Internal.LocalDate;
        withMonth(arg0: number): Internal.LocalDate;
        isAfter(arg0: Internal.ChronoLocalDate): boolean;
        static ofInstant(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.LocalDate;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.LocalDate;
        minus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDate;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.LocalDate;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDate;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        datesUntil(arg0: Internal.LocalDate, arg1: Internal.Period): Internal.Stream<Internal.LocalDate>;
        datesUntil(arg0: Internal.LocalDate): Internal.Stream<Internal.LocalDate>;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        withYear(arg0: number): Internal.LocalDate;
        lengthOfYear(): number;
        plusDays(arg0: number): Internal.LocalDate;
        hashCode(): number;
        static now(): Internal.LocalDate;
        static now(arg0: Internal.Clock): Internal.LocalDate;
        static now(arg0: Internal.ZoneId): Internal.LocalDate;
        static of(arg0: number, arg1: number, arg2: number): Internal.LocalDate;
        static of(arg0: number, arg1: Internal.Month_, arg2: number): Internal.LocalDate;
        get(arg0: Internal.TemporalField): number;
        getDayOfYear(): number;
        plusWeeks(arg0: number): Internal.LocalDate;
        getChronology(): Internal.Chronology;
        getChronology(): Internal.IsoChronology;
        static ofEpochDay(arg0: number): Internal.LocalDate;
        getMonthValue(): number;
        minusYears(arg0: number): Internal.LocalDate;
        minusWeeks(arg0: number): Internal.LocalDate;
        withDayOfYear(arg0: number): Internal.LocalDate;
        isLeapYear(): boolean;
        static parse(arg0: Internal.CharSequence): Internal.LocalDate;
        static parse(arg0: Internal.CharSequence, arg1: Internal.DateTimeFormatter): Internal.LocalDate;
        isBefore(arg0: Internal.ChronoLocalDate): boolean;
        minusDays(arg0: number): Internal.LocalDate;
        getLong(arg0: Internal.TemporalField): number;
        minusMonths(arg0: number): Internal.LocalDate;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.LocalDate;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.Temporal;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.ChronoLocalDate;
        with(arg0: Internal.TemporalField, arg1: number): Internal.LocalDate;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ChronoLocalDate;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        equals(arg0: any): boolean;
        until(arg0: Internal.ChronoLocalDate): Internal.Period;
        until(arg0: Internal.ChronoLocalDate): Internal.ChronoPeriod;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        toString(): string;
        getDayOfMonth(): number;
        static readonly MIN : Internal.LocalDate;
        static readonly MAX : Internal.LocalDate;
        static readonly EPOCH : Internal.LocalDate;
        get dayOfWeek(): Internal.DayOfWeek;
        get month(): Internal.Month;
        get era(): Internal.IsoEra;
        get year(): number;
        get dayOfYear(): number;
        get dayOfMonth(): number;
        get monthValue(): number;
        get chronology(): Internal.IsoChronology;
        get leapYear(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LocalDate_ = LocalDate;
    class PlayerAbilities extends Document.Object {
        func_82877_b(arg0: number): void;
        func_75091_a(arg0: Internal.CompoundNBT): void;
        func_195931_a(arg0: number): void;
        func_75093_a(): number;
        func_75094_b(): number;
        func_75095_b(arg0: Internal.CompoundNBT): void;
        field_75101_c : boolean;
        field_75102_a : boolean;
        field_75100_b : boolean;
        field_75098_d : boolean;
        field_75099_e : boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerAbilities_ = PlayerAbilities;
    abstract class ByteBuf extends Document.Object implements Internal.ReferenceCounted, Internal.Comparable<Internal.ByteBuf> {
        asReadOnly(): Internal.ByteBuf;
        markReaderIndex(): Internal.ByteBuf;
        getByte(arg0: number): number;
        readDoubleLE(): number;
        writeZero(arg0: number): Internal.ByteBuf;
        writeFloat(arg0: number): Internal.ByteBuf;
        resetReaderIndex(): Internal.ByteBuf;
        setLongLE(arg0: number, arg1: number): Internal.ByteBuf;
        readRetainedSlice(arg0: number): Internal.ByteBuf;
        slice(arg0: number, arg1: number): Internal.ByteBuf;
        slice(): Internal.ByteBuf;
        setDoubleLE(arg0: number, arg1: number): Internal.ByteBuf;
        getMediumLE(arg0: number): number;
        readUnsignedIntLE(): number;
        writeFloatLE(arg0: number): Internal.ByteBuf;
        readInt(): number;
        order(arg0: Internal.ByteOrder): Internal.ByteBuf;
        order(): Internal.ByteOrder;
        writeMedium(arg0: number): Internal.ByteBuf;
        resetWriterIndex(): Internal.ByteBuf;
        writableBytes(): number;
        getUnsignedShort(arg0: number): number;
        maxCapacity(): number;
        nioBufferCount(): number;
        bytesBefore(arg0: number, arg1: number): number;
        bytesBefore(arg0: number, arg1: number, arg2: number): number;
        bytesBefore(arg0: number): number;
        setInt(arg0: number, arg1: number): Internal.ByteBuf;
        getInt(arg0: number): number;
        markWriterIndex(): Internal.ByteBuf;
        isReadable(): boolean;
        isReadable(arg0: number): boolean;
        writeBoolean(arg0: boolean): Internal.ByteBuf;
        setIntLE(arg0: number, arg1: number): Internal.ByteBuf;
        writeLongLE(arg0: number): Internal.ByteBuf;
        setShortLE(arg0: number, arg1: number): Internal.ByteBuf;
        retain(arg0: number): Internal.ReferenceCounted;
        retain(arg0: number): Internal.ByteBuf;
        retain(): Internal.ByteBuf;
        retain(): Internal.ReferenceCounted;
        isWritable(arg0: number): boolean;
        isWritable(): boolean;
        readChar(): string;
        capacity(): number;
        capacity(arg0: number): Internal.ByteBuf;
        hasMemoryAddress(): boolean;
        readCharSequence(arg0: number, arg1: Internal.Charset): Internal.CharSequence;
        isReadOnly(): boolean;
        readDouble(): number;
        readUnsignedShortLE(): number;
        readFloat(): number;
        getLongLE(arg0: number): number;
        getBoolean(arg0: number): boolean;
        copy(): Internal.ByteBuf;
        copy(arg0: number, arg1: number): Internal.ByteBuf;
        readShortLE(): number;
        readUnsignedMedium(): number;
        writeInt(arg0: number): Internal.ByteBuf;
        ensureWritable(arg0: number): Internal.ByteBuf;
        ensureWritable(arg0: number, arg1: boolean): number;
        readFloatLE(): number;
        hasArray(): boolean;
        getDoubleLE(arg0: number): number;
        memoryAddress(): number;
        readableBytes(): number;
        readSlice(arg0: number): Internal.ByteBuf;
        getIntLE(arg0: number): number;
        nioBuffers(): Internal.ByteBuffer[];
        nioBuffers(arg0: number, arg1: number): Internal.ByteBuffer[];
        forEachByteDesc(arg0: Internal.ByteProcessor): number;
        forEachByteDesc(arg0: number, arg1: number, arg2: Internal.ByteProcessor): number;
        skipBytes(arg0: number): Internal.ByteBuf;
        getLong(arg0: number): number;
        readLong(): number;
        readShort(): number;
        equals(arg0: any): boolean;
        readBytes(arg0: Internal.GatheringByteChannel, arg1: number): number;
        readBytes(arg0: number): Internal.ByteBuf;
        readBytes(arg0: Internal.OutputStream, arg1: number): Internal.ByteBuf;
        readBytes(arg0: Internal.FileChannel, arg1: number, arg2: number): number;
        readBytes(arg0: number[], arg1: number, arg2: number): Internal.ByteBuf;
        readBytes(arg0: number[]): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuffer): Internal.ByteBuf;
        setZero(arg0: number, arg1: number): Internal.ByteBuf;
        getUnsignedMedium(arg0: number): number;
        readBoolean(): boolean;
        toString(arg0: number, arg1: number, arg2: Internal.Charset): string;
        toString(arg0: Internal.Charset): string;
        toString(): string;
        retainedSlice(arg0: number, arg1: number): Internal.ByteBuf;
        retainedSlice(): Internal.ByteBuf;
        readMediumLE(): number;
        isDirect(): boolean;
        setMedium(arg0: number, arg1: number): Internal.ByteBuf;
        setBoolean(arg0: number, arg1: boolean): Internal.ByteBuf;
        getFloatLE(arg0: number): number;
        readerIndex(arg0: number): Internal.ByteBuf;
        readerIndex(): number;
        setShort(arg0: number, arg1: number): Internal.ByteBuf;
        compareTo(arg0: Internal.ByteBuf): number;
        compareTo(arg0: any): number;
        getCharSequence(arg0: number, arg1: number, arg2: Internal.Charset): Internal.CharSequence;
        getBytes(arg0: number, arg1: Internal.OutputStream, arg2: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.GatheringByteChannel, arg2: number): number;
        getBytes(arg0: number, arg1: Internal.FileChannel, arg2: number, arg3: number): number;
        getBytes(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuffer): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number, arg3: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf): Internal.ByteBuf;
        getBytes(arg0: number, arg1: number[]): Internal.ByteBuf;
        unwrap(): Internal.ByteBuf;
        setDouble(arg0: number, arg1: number): Internal.ByteBuf;
        setChar(arg0: number, arg1: number): Internal.ByteBuf;
        getUnsignedIntLE(arg0: number): number;
        setFloatLE(arg0: number, arg1: number): Internal.ByteBuf;
        getUnsignedInt(arg0: number): number;
        indexOf(arg0: number, arg1: number, arg2: number): number;
        writeByte(arg0: number): Internal.ByteBuf;
        nioBuffer(): Internal.ByteBuffer;
        nioBuffer(arg0: number, arg1: number): Internal.ByteBuffer;
        touch(arg0: any): Internal.ByteBuf;
        touch(arg0: any): Internal.ReferenceCounted;
        touch(): Internal.ByteBuf;
        touch(): Internal.ReferenceCounted;
        discardSomeReadBytes(): Internal.ByteBuf;
        duplicate(): Internal.ByteBuf;
        writerIndex(arg0: number): Internal.ByteBuf;
        writerIndex(): number;
        writeCharSequence(arg0: Internal.CharSequence, arg1: Internal.Charset): number;
        readUnsignedInt(): number;
        getUnsignedShortLE(arg0: number): number;
        getChar(arg0: number): string;
        retainedDuplicate(): Internal.ByteBuf;
        setLong(arg0: number, arg1: number): Internal.ByteBuf;
        writeBytes(arg0: number[], arg1: number, arg2: number): Internal.ByteBuf;
        writeBytes(arg0: number[]): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf, arg1: number): Internal.ByteBuf;
        writeBytes(arg0: Internal.InputStream, arg1: number): number;
        writeBytes(arg0: Internal.FileChannel, arg1: number, arg2: number): number;
        writeBytes(arg0: Internal.ScatteringByteChannel, arg1: number): number;
        writeBytes(arg0: Internal.ByteBuffer): Internal.ByteBuf;
        readMedium(): number;
        forEachByte(arg0: Internal.ByteProcessor): number;
        forEachByte(arg0: number, arg1: number, arg2: Internal.ByteProcessor): number;
        setIndex(arg0: number, arg1: number): Internal.ByteBuf;
        writeShort(arg0: number): Internal.ByteBuf;
        getShortLE(arg0: number): number;
        alloc(): Internal.ByteBufAllocator;
        readUnsignedShort(): number;
        getMedium(arg0: number): number;
        setByte(arg0: number, arg1: number): Internal.ByteBuf;
        writeShortLE(arg0: number): Internal.ByteBuf;
        maxWritableBytes(): number;
        getDouble(arg0: number): number;
        getFloat(arg0: number): number;
        writeLong(arg0: number): Internal.ByteBuf;
        writeIntLE(arg0: number): Internal.ByteBuf;
        array(): number[];
        hashCode(): number;
        setCharSequence(arg0: number, arg1: Internal.CharSequence, arg2: Internal.Charset): number;
        internalNioBuffer(arg0: number, arg1: number): Internal.ByteBuffer;
        arrayOffset(): number;
        readIntLE(): number;
        setMediumLE(arg0: number, arg1: number): Internal.ByteBuf;
        readUnsignedByte(): number;
        readLongLE(): number;
        readUnsignedMediumLE(): number;
        writeDouble(arg0: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.InputStream, arg2: number): number;
        setBytes(arg0: number, arg1: Internal.ScatteringByteChannel, arg2: number): number;
        setBytes(arg0: number, arg1: Internal.FileChannel, arg2: number, arg3: number): number;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number, arg3: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: number[]): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuffer): Internal.ByteBuf;
        setBytes(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ByteBuf;
        setFloat(arg0: number, arg1: number): Internal.ByteBuf;
        getShort(arg0: number): number;
        writeMediumLE(arg0: number): Internal.ByteBuf;
        clear(): Internal.ByteBuf;
        getUnsignedByte(arg0: number): number;
        discardReadBytes(): Internal.ByteBuf;
        writeChar(arg0: number): Internal.ByteBuf;
        writeDoubleLE(arg0: number): Internal.ByteBuf;
        getUnsignedMediumLE(arg0: number): number;
        readByte(): number;
        get readable(): boolean;
        get direct(): boolean;
        get readOnly(): boolean;
        get writable(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ByteBuf_ = ByteBuf;
    class DimensionSettings extends Document.Object {
        func_236108_a_(): Internal.DimensionStructuresSettings;
        func_242744_a(arg0: Internal.RegistryKey<Internal.DimensionSettings>): boolean;
        func_236119_g_(): number;
        func_236116_d_(): Internal.BlockState;
        func_236118_f_(): number;
        func_236120_h_(): boolean;
        func_236117_e_(): number;
        static func_242746_i(): Internal.DimensionSettings;
        func_236113_b_(): Internal.NoiseSettings;
        func_236115_c_(): Internal.BlockState;
        static readonly field_242735_d : Internal.RegistryKey<Internal.DimensionSettings>;
        static readonly field_236097_a_ : Internal.Codec<Internal.DimensionSettings>;
        static readonly field_236098_b_ : Internal.Codec<(() => Internal.DimensionSettings)>;
        static readonly field_242734_c : Internal.RegistryKey<Internal.DimensionSettings>;
        static readonly field_242737_f : Internal.RegistryKey<Internal.DimensionSettings>;
        static readonly field_242736_e : Internal.RegistryKey<Internal.DimensionSettings>;
        static readonly field_242739_h : Internal.RegistryKey<Internal.DimensionSettings>;
        static readonly field_242738_g : Internal.RegistryKey<Internal.DimensionSettings>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DimensionSettings_ = DimensionSettings;
    class StonecuttingRecipeJS extends Internal.RecipeJS {
        serialize(): void;
        create(args: Internal.ListJS): void;
        deserialize(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StonecuttingRecipeJS_ = StonecuttingRecipeJS;
    class RabbitEntity extends Internal.AnimalEntity {
        func_175529_r(arg0: number): void;
        func_70619_bc(): void;
        static func_234224_eJ_(): Internal.AttributeModifierMap$MutableAttribute;
        func_184770_cZ(): void;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70103_a(arg0: number): void;
        func_175521_o(arg0: number): number;
        static func_223321_c(arg0: Internal.EntityType<Internal.RabbitEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_175531_cl(): number;
        func_230269_aK_(): boolean;
        func_175515_b(arg0: number): void;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_241205_ce_(): Vec3;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_70637_d(arg0: boolean): void;
        func_70636_d(): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.RabbitEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_184176_by(): Internal.SoundCategory;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RabbitEntity_ = RabbitEntity;
    class AcaciaFoliagePlacer extends Internal.FoliagePlacer {
        func_230374_a_(arg0: Internal.Random, arg1: number, arg2: Internal.BaseTreeFeatureConfig): number;
        static readonly field_236736_a_ : Internal.Codec<Internal.AcaciaFoliagePlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AcaciaFoliagePlacer_ = AcaciaFoliagePlacer;
    abstract class Entity extends Internal.CapabilityProvider<Internal.Entity> implements Internal.INameable, Internal.ICommandSource, Internal.IForgeEntity, Internal.EntityKJS {
        func_213297_N(): Internal.IPacket<any>;
        func_174828_a(arg0: BlockPos, arg1: number, arg2: number): void;
        func_213286_i(arg0: number): Vec3;
        func_174820_d(arg0: number, arg1: Internal.ItemStack): boolean;
        func_230245_c_(arg0: boolean): void;
        func_230268_c_(arg0: Internal.LivingEntity): Vec3;
        func_70057_ab(): void;
        func_233577_ch_(): boolean;
        func_70086_ai(): number;
        func_189511_e(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_184218_aH(): boolean;
        func_226282_d_(arg0: number): number;
        func_213319_R(): void;
        func_213453_ef(): boolean;
        func_174805_g(arg0: boolean): void;
        func_145773_az(): boolean;
        func_184215_y(arg0: Internal.Entity): boolean;
        func_82150_aj(): boolean;
        func_189654_d(arg0: boolean): void;
        func_94059_bO(): boolean;
        func_195039_a(): boolean;
        func_96092_aw(): boolean;
        func_70107_b(arg0: number, arg1: number, arg2: number): void;
        func_70040_Z(): Vec3;
        func_85029_a(arg0: Internal.CrashReportCategory): void;
        func_184172_bi(): Internal.Direction;
        func_226274_bn_(): boolean;
        func_204231_K(): boolean;
        func_223314_ad(): number;
        func_174811_aO(): Internal.Direction;
        func_70075_an(): boolean;
        func_226279_cv_(): number;
        canTrample(arg0: Internal.BlockState, arg1: BlockPos, arg2: number): boolean;
        func_70051_ag(): boolean;
        func_226273_bm_(): boolean;
        func_184194_a(arg0: Internal.Team): boolean;
        func_241849_j(arg0: Internal.Entity): boolean;
        func_213309_a(arg0: number, arg1: Vec3): void;
        func_213312_b(arg0: number, arg1: number, arg2: number): void;
        func_226287_g_(arg0: number): number;
        func_174829_m(): void;
        func_208000_a(arg0: number, arg1: number): void;
        func_184205_a(arg0: Internal.Entity, arg1: boolean): boolean;
        func_174833_aM(): boolean;
        func_241841_a(arg0: Internal.ServerWorld, arg1: Internal.LightningBoltEntity): void;
        func_174810_b(arg0: boolean): void;
        func_70030_z(): void;
        func_145769_d(arg0: number): void;
        func_180427_aV(): boolean;
        func_213301_b(arg0: Internal.Pose_): void;
        func_213324_a(arg0: number, arg1: number, arg2: boolean): Internal.RayTraceResult;
        func_190530_aW(): boolean;
        func_70106_y(): void;
        func_70026_G(): boolean;
        func_184195_f(arg0: boolean): void;
        func_70015_d(arg0: number): void;
        toString(): string;
        func_70038_c(arg0: number, arg1: number, arg2: number): boolean;
        func_230279_az_(): boolean;
        func_208600_a(arg0: Internal.ITag<Internal.Fluid>): boolean;
        func_195049_a(arg0: number, arg1: number): void;
        func_226275_c_(arg0: number): number;
        func_184217_a(arg0: Internal.Mirror_): number;
        func_184179_bs(): Internal.Entity;
        func_242280_ah(): boolean;
        func_98034_c(arg0: Internal.PlayerEntity): boolean;
        func_184232_k(arg0: Internal.Entity): void;
        changeDimension(arg0: Internal.ServerWorld, arg1: Internal.ITeleporter): Internal.Entity;
        func_241842_k(arg0: number): Vec3;
        func_213295_a(arg0: Internal.BlockState, arg1: Vec3): void;
        func_241209_g_(arg0: number): void;
        func_233579_cu_(): number;
        func_233562_a_(arg0: Internal.Entity, arg1: number): boolean;
        func_70027_ad(): boolean;
        func_233575_bb_(): void;
        func_184192_z(): Internal.PushReaction;
        func_226276_cg_(): Internal.Stream<Internal.Entity>;
        func_145747_a(arg0: Internal.ITextComponent_, arg1: Internal.UUID): void;
        static func_223310_a(arg0: Vec3, arg1: Internal.AxisAlignedBB, arg2: Internal.ReuseableStream<Internal.VoxelShape>): Vec3;
        func_226288_n_(arg0: number, arg1: number, arg2: number): void;
        func_204711_a(arg0: boolean): void;
        func_184220_m(arg0: Internal.Entity): boolean;
        func_70094_T(): boolean;
        func_70042_X(): number;
        static func_223307_a(arg0: Internal.Entity, arg1: Vec3, arg2: Internal.AxisAlignedBB, arg3: Internal.World, arg4: Internal.ISelectionContext, arg5: Internal.ReuseableStream<Internal.VoxelShape>): Vec3;
        func_199703_a(arg0: Internal.IItemProvider): Internal.ItemEntity;
        func_184216_O(): Internal.Set<string>;
        func_226285_f_(arg0: number): number;
        func_184207_aI(): boolean;
        func_70016_h(arg0: number, arg1: number, arg2: number): void;
        onAddedToWorld(): void;
        func_70039_c(arg0: Internal.CompoundNBT): boolean;
        func_241206_a_(arg0: Internal.ServerWorld): Internal.Entity;
        func_195040_b(): boolean;
        func_90999_ad(): boolean;
        func_200601_bK(): boolean;
        func_70031_b(arg0: boolean): void;
        func_70104_M(): boolean;
        func_195048_a(arg0: Vec3): number;
        func_213311_cf(): number;
        func_213307_e(arg0: Internal.Pose_): number;
        func_189651_aD(): Vec3;
        func_205010_bg(): number;
        getPersistentData(): Internal.CompoundNBT;
        func_241843_o(arg0: number): Vec3;
        func_145748_c_(): Internal.ITextComponent;
        func_85031_j(arg0: Internal.Entity): boolean;
        remove(arg0: boolean): void;
        func_96124_cp(): Internal.Team;
        func_180799_ab(): boolean;
        func_70028_i(arg0: Internal.Entity): boolean;
        func_226286_f_(arg0: number, arg1: number, arg2: number): void;
        func_203005_aq(): boolean;
        hashCode(): number;
        func_184203_c(arg0: Internal.ServerPlayerEntity): void;
        func_195047_I_(): string;
        isAddedToWorld(): boolean;
        static func_213296_b(arg0: Vec3): number;
        func_70020_e(arg0: Internal.CompoundNBT): void;
        func_70676_i(arg0: number): Vec3;
        func_189512_bd(): string;
        func_180426_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        onRemovedFromWorld(): void;
        func_82145_z(): number;
        func_242279_ag(): void;
        static func_184227_b(arg0: number): void;
        func_211513_k(arg0: number): boolean;
        func_210500_b(arg0: Internal.ITag<Internal.Fluid>, arg1: number): boolean;
        func_181015_d(arg0: BlockPos): void;
        func_242274_V(): Vec3;
        func_213300_bk(): boolean;
        func_199702_a(arg0: Internal.IItemProvider, arg1: number): Internal.ItemEntity;
        func_213322_ci(): Vec3;
        func_184178_b(arg0: Internal.ServerPlayerEntity): void;
        func_203004_j(arg0: boolean): void;
        func_70032_d(arg0: Internal.Entity): number;
        func_184230_a(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        func_70066_B(): void;
        func_184226_ay(): void;
        func_174812_G(): void;
        func_184211_a(arg0: string): boolean;
        func_82142_c(arg0: boolean): void;
        func_191956_a(arg0: Internal.Entity, arg1: number, arg2: Internal.DamageSource): void;
        func_174824_e(arg0: number): Vec3;
        func_184209_aF(): Internal.Iterable<Internal.ItemStack>;
        func_195051_bN(): Internal.CommandSource;
        func_110124_au(): Internal.UUID;
        func_226263_P_(): number;
        func_180431_b(arg0: Internal.DamageSource): boolean;
        func_70089_S(): boolean;
        func_184208_bv(): Internal.Entity;
        func_184193_aE(): Internal.Iterable<Internal.ItemStack>;
        func_213323_x_(): void;
        func_213293_j(arg0: number, arg1: number, arg2: number): void;
        revive(): void;
        func_184102_h(): Internal.MinecraftServer;
        func_70029_a(arg0: Internal.World): void;
        func_223102_j(arg0: number, arg1: number, arg2: number): void;
        func_195050_f(arg0: number): number;
        func_200600_R(): Internal.EntityType<any>;
        func_82147_ab(): number;
        func_130014_f_(): Internal.World;
        func_184186_bw(): boolean;
        func_70100_b_(arg0: Internal.PlayerEntity): void;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_226271_bk_(): boolean;
        func_70103_a(arg0: number): void;
        func_70067_L(): boolean;
        func_184190_l(arg0: Internal.Entity): void;
        func_226284_e_(arg0: boolean): void;
        func_184198_c(arg0: Internal.CompoundNBT): boolean;
        func_70092_e(arg0: number, arg1: number, arg2: number): number;
        func_184187_bx(): Internal.Entity;
        func_195046_g(arg0: number): number;
        func_189652_ae(): boolean;
        func_70033_W(): number;
        func_205708_a(arg0: Internal.Class_<Internal.Entity_>): boolean;
        func_213305_a(arg0: Internal.Pose_): Internal.EntitySize;
        func_145818_k_(): boolean;
        func_184210_p(): void;
        func_70080_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_200203_b(arg0: Internal.ITextComponent_): void;
        func_70068_e(arg0: Internal.Entity): number;
        func_184201_a(arg0: EquipmentSlot_, arg1: Internal.ItemStack): void;
        func_180432_n(arg0: Internal.Entity): void;
        func_184221_a(arg0: Internal.UUID): void;
        func_184222_aU(): boolean;
        func_226277_ct_(): number;
        func_180428_a(arg0: Internal.Explosion, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.FluidState, arg5: number): number;
        func_205710_ba(): boolean;
        func_184229_a(arg0: Internal.Rotation_): number;
        func_225608_bj_(): boolean;
        func_233571_b_(arg0: Internal.ITag<Internal.Fluid>): number;
        func_213317_d(arg0: Vec3): void;
        func_213283_Z(): Internal.Pose;
        func_241845_aY(): boolean;
        func_181013_g(arg0: number): void;
        func_70022_Q(): string;
        func_230269_aK_(): boolean;
        func_184199_a(arg0: Internal.PlayerEntity, arg1: Vec3, arg2: Hand_): Internal.ActionResultType;
        equals(arg0: any): boolean;
        func_174813_aQ(): Internal.AxisAlignedBB;
        func_225510_bt_(): boolean;
        func_70034_d(arg0: number): void;
        func_184191_r(arg0: Internal.Entity): boolean;
        func_70099_a(arg0: Internal.ItemStack, arg1: number): Internal.ItemEntity;
        func_203002_i(arg0: boolean): void;
        func_174826_a(arg0: Internal.AxisAlignedBB): void;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        captureDrops(arg0: Internal.Collection<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        func_199701_a_(arg0: Internal.ItemStack): Internal.ItemEntity;
        func_213303_ch(): Vec3;
        func_184213_bq(): boolean;
        func_70071_h_(): void;
        func_189653_aC(): Internal.Vector2f;
        func_233576_c_(arg0: Vec3): void;
        static func_213313_a(arg0: Vec3, arg1: Internal.AxisAlignedBB, arg2: Internal.IWorldReader, arg3: Internal.ISelectionContext, arg4: Internal.ReuseableStream<Internal.VoxelShape>): Vec3;
        func_174814_R(): boolean;
        func_226283_e_(arg0: number): number;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_195041_r_(): boolean;
        func_184214_aD(): Internal.Iterable<Internal.ItemStack>;
        func_233578_ci_(): boolean;
        func_70090_H(): boolean;
        getPersistentDataKJS(): Internal.CompoundNBT;
        func_70079_am(): number;
        func_184196_w(arg0: Internal.Entity): boolean;
        canUpdate(arg0: boolean): void;
        canUpdate(): boolean;
        func_174815_a(arg0: Internal.LivingEntity, arg1: Internal.Entity): void;
        func_184182_bu(): Internal.Collection<Internal.Entity>;
        func_184224_h(arg0: boolean): void;
        getEyeHeightAccess(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_70098_U(): void;
        func_203003_aK(): boolean;
        func_184212_Q(): Internal.EntityDataManager;
        func_203008_ap(): boolean;
        func_82143_as(): number;
        func_200200_C_(): Internal.ITextComponent;
        func_70623_bb(): void;
        func_233570_aj_(): boolean;
        func_70012_b(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_184176_by(): Internal.SoundCategory;
        func_242277_a(arg0: Vec3): void;
        func_70050_g(arg0: number): void;
        func_242278_a(arg0: BlockPos, arg1: Internal.BlockState): boolean;
        func_174827_a(arg0: Internal.ServerPlayerEntity): boolean;
        func_213314_bj(): boolean;
        func_145770_h(arg0: number, arg1: number, arg2: number): boolean;
        func_70112_a(arg0: number): boolean;
        func_184177_bl(): Internal.AxisAlignedBB;
        func_226280_cw_(): number;
        func_200602_a(arg0: Internal.EntityAnchorArgument$Type_, arg1: Vec3): void;
        func_226272_bl_(): boolean;
        func_70634_a(arg0: number, arg1: number, arg2: number): void;
        func_226278_cu_(): number;
        func_241847_a(arg0: Internal.ServerWorld, arg1: Internal.LivingEntity): void;
        static func_184183_bd(): number;
        func_70024_g(arg0: number, arg1: number, arg2: number): void;
        func_226281_cx_(): number;
        func_200201_e(): Internal.ITextComponent;
        func_70047_e(): number;
        func_205343_av(): void;
        func_175149_v(): boolean;
        func_242281_f(arg0: number, arg1: number, arg2: number): void;
        func_174816_a(arg0: Internal.Explosion, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: number): boolean;
        func_203007_ba(): boolean;
        func_242282_l(arg0: number): Vec3;
        func_184188_bt(): Internal.List<Internal.Entity>;
        func_213302_cg(): number;
        func_70108_f(arg0: Internal.Entity): void;
        func_233580_cy_(): BlockPos;
        func_184185_a(arg0: Internal.SoundEvent, arg1: number, arg2: number): void;
        func_213315_a(arg0: Internal.MoverType_, arg1: Vec3): void;
        func_145782_y(): number;
        func_82149_j(arg0: Internal.Entity): void;
        func_225653_b_(arg0: number, arg1: number, arg2: number): void;
        func_184197_b(arg0: string): boolean;
        func_241205_ce_(): Vec3;
        func_184223_x(arg0: Internal.Entity): boolean;
        func_70111_Y(): number;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_70013_c(): number;
        field_70127_C : number;
        field_70124_G : boolean;
        field_70158_ak : boolean;
        field_70160_al : boolean;
        field_70170_p : Internal.World;
        field_70125_A : number;
        field_70122_E : boolean;
        field_70162_ai : number;
        field_70126_B : number;
        field_70123_F : boolean;
        field_70164_aj : number;
        field_70138_W : number;
        field_70137_T : number;
        field_70136_U : number;
        field_70169_q : number;
        field_70175_ag : boolean;
        field_70167_r : number;
        field_70166_s : number;
        field_70173_aa : number;
        field_70133_I : boolean;
        field_98038_p : boolean;
        field_82151_R : number;
        field_70177_z : number;
        field_70145_X : boolean;
        field_70144_Y : number;
        field_70143_R : number;
        field_70142_S : number;
        field_70176_ah : number;
        field_70128_L : boolean;
        field_70141_P : number;
        field_70140_Q : number;
        field_70156_m : boolean;
        field_70172_ad : number;
        get persistentDataKJS(): Internal.CompoundNBT;
        get persistentData(): Internal.CompoundNBT;
        get addedToWorld(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Entity_ = Entity;
    abstract class AbstractConstant <T> extends Document.Object implements Internal.Constant<T> {
        hashCode(): number;
        equals(arg0: any): boolean;
        name(): string;
        toString(): string;
        id(): number;
        compareTo(arg0: T): number;
        compareTo(arg0: any): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractConstant_<T> = AbstractConstant<T>;
    class ConfiguredRandomFeatureList extends Document.Object {
        func_242787_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos): boolean;
        readonly field_214842_a : (() => Internal.ConfiguredFeature<any, any>);
        readonly field_214844_c : number;
        static readonly field_236430_a_ : Internal.Codec<Internal.ConfiguredRandomFeatureList>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ConfiguredRandomFeatureList_ = ConfiguredRandomFeatureList;
    interface INamedContainerProvider extends Internal.IContainerProvider {
        func_145748_c_(): Internal.ITextComponent;
    }
    type INamedContainerProvider_ = INamedContainerProvider;
    class SimpleRegistry <T> extends Internal.MutableRegistry<T> {
        func_148757_b(arg0: T): number;
        static func_243541_a<T_>(arg0: Internal.RegistryKey<Internal.Registry<T_>>, arg1: Internal.MapCodec<T_>): Internal.MapCodec<Internal.SimpleRegistry$Entry<T_>>;
        func_241874_a<V_>(arg0: Internal.OptionalInt, arg1: Internal.RegistryKey<T>, arg2: V_, arg3: Internal.Lifecycle): V_;
        func_148745_a(arg0: number): T;
        func_177774_c(arg0: T): ResourceLocation;
        func_241875_b(): Internal.Lifecycle;
        func_241876_d(arg0: T): Internal.Lifecycle;
        func_212607_c(arg0: ResourceLocation_): boolean;
        func_82594_a(arg0: ResourceLocation_): T;
        func_218381_a<V_>(arg0: Internal.RegistryKey<T>, arg1: V_, arg2: Internal.Lifecycle): V_;
        func_218382_a<V_>(arg0: number, arg1: Internal.RegistryKey<T>, arg2: V_, arg3: Internal.Lifecycle): V_;
        func_239659_c_(): Internal.Set<Internal.Map$Entry<Internal.RegistryKey<T>, T>>;
        iterator(): Internal.Iterator<T>;
        static func_241745_c_<T_>(arg0: Internal.RegistryKey<Internal.Registry<T_>>, arg1: Internal.Lifecycle, arg2: Internal.Codec<T_>): Internal.Codec<Internal.SimpleRegistry<T_>>;
        func_230519_c_(arg0: T): Internal.Optional<Internal.RegistryKey<T>>;
        static func_243539_a<T_>(arg0: Internal.RegistryKey<Internal.Registry<T_>>, arg1: Internal.Lifecycle, arg2: Internal.Codec<T_>): Internal.Codec<Internal.SimpleRegistry<T_>>;
        func_186801_a(arg0: Internal.Random): T;
        static func_241744_b_<T_>(arg0: Internal.RegistryKey<Internal.Registry<T_>>, arg1: Internal.Lifecycle, arg2: Internal.Codec<T_>): Internal.Codec<Internal.SimpleRegistry<T_>>;
        func_148742_b(): Internal.Set<ResourceLocation>;
        func_230516_a_(arg0: Internal.RegistryKey<T>): T;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SimpleRegistry_<T> = SimpleRegistry<T>;
    class InputEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InputEvent_ = InputEvent;
    abstract class ContentHandler extends Document.Object {
        getContent(arg0: Internal.URLConnection): any;
        getContent(arg0: Internal.URLConnection, arg1: Internal.Class[]): any;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ContentHandler_ = ContentHandler;
    class TickEvent$WorldTickEvent extends Internal.TickEvent {
        getListenerList(): Internal.ListenerList;
        readonly world : Internal.World;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TickEvent$WorldTickEvent_ = TickEvent$WorldTickEvent;
    interface ExtendedChunkSection {
        getKnownTransparency(arg0: number): number;
        hasOpaqueBlocks(): boolean;
        getBitsetForColumn(arg0: number, arg1: number): number;
    }
    type ExtendedChunkSection_ = ExtendedChunkSection;
    interface Shape {
        contains(arg0: Internal.Rectangle2D): boolean;
        contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        contains(arg0: number, arg1: number): boolean;
        contains(arg0: Internal.Point2D): boolean;
        getPathIterator(arg0: Internal.AffineTransform): Internal.PathIterator;
        getPathIterator(arg0: Internal.AffineTransform, arg1: number): Internal.PathIterator;
        intersects(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        intersects(arg0: Internal.Rectangle2D): boolean;
        getBounds2D(): Internal.Rectangle2D;
        getBounds(): Internal.Rectangle;
    }
    type Shape_ = Shape;
    class IRecipeTransferError$Type extends Internal.Enum<Internal.IRecipeTransferError$Type> {
        static valueOf(arg0: string): Internal.IRecipeTransferError$Type;
        static values(): Internal.IRecipeTransferError$Type[];
        static readonly COSMETIC : Internal.IRecipeTransferError$Type;
        static readonly USER_FACING : Internal.IRecipeTransferError$Type;
        static readonly INTERNAL : Internal.IRecipeTransferError$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IRecipeTransferError$Type_ = "internal" | "user_facing" | "cosmetic" | IRecipeTransferError$Type;
    interface IInventoryChangedListener {
        func_76316_a(arg0: Internal.IInventory): void;
    }
    type IInventoryChangedListener_ = IInventoryChangedListener;
    interface WorldSettingsImport$IResourceAccess {
        func_241879_a<E>(arg0: Internal.DynamicOps<Internal.JsonElement>, arg1: Internal.RegistryKey<Internal.Registry<E>>, arg2: Internal.RegistryKey<E>, arg3: Internal.Decoder<E>): Internal.DataResult<com.mojang.datafixers.util.Pair<E, Internal.OptionalInt>>;
        func_241880_a(arg0: Internal.RegistryKey<Internal.Registry<any>>): Internal.Collection<ResourceLocation>;
    }
    type WorldSettingsImport$IResourceAccess_ = WorldSettingsImport$IResourceAccess;
    class Goal$Flag extends Internal.Enum<Internal.Goal$Flag> {
        static valueOf(arg0: string): Internal.Goal$Flag;
        static values(): Internal.Goal$Flag[];
        static readonly TARGET : Internal.Goal$Flag;
        static readonly MOVE : Internal.Goal$Flag;
        static readonly LOOK : Internal.Goal$Flag;
        static readonly JUMP : Internal.Goal$Flag;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Goal$Flag_ = "move" | "look" | "jump" | "target" | Goal$Flag;
    abstract class LivingEntity extends Internal.Entity implements Internal.LivingEntityKJS {
        func_174812_G(): void;
        func_213297_N(): Internal.IPacket<any>;
        func_233626_a_(arg0: number, arg1: boolean, arg2: Vec3): Vec3;
        func_110142_aN(): Internal.CombatTracker;
        func_230245_c_(arg0: boolean): void;
        func_213339_cH(): Internal.BlockState;
        func_184587_cr(): boolean;
        func_204803_n(arg0: number): void;
        func_213353_d(arg0: Internal.ItemStack): Internal.SoundEvent;
        func_70057_ab(): void;
        func_184599_cB(): number;
        func_213357_a(arg0: Internal.World, arg1: Internal.ItemStack): Internal.ItemStack;
        func_71001_a(arg0: Internal.Entity, arg1: number): void;
        func_70089_S(): boolean;
        func_230297_ef_(): Internal.ImmutableList<Internal.Pose>;
        func_193076_bZ(): Internal.Map<Internal.Effect, Internal.EffectInstance>;
        func_213369_d(arg0: BlockPos): void;
        func_184193_aE(): Internal.Iterable<Internal.ItemStack>;
        func_233629_a_(arg0: Internal.LivingEntity, arg1: boolean): void;
        func_184612_cw(): number;
        func_189748_bU(): Internal.DamageSource;
        func_70631_g_(): boolean;
        func_190631_cK(): boolean;
        func_184613_cA(): boolean;
        func_191987_a(arg0: BlockPos, arg1: boolean): void;
        func_94059_bO(): boolean;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_213361_c(arg0: EquipmentSlot_): void;
        func_70103_a(arg0: number): void;
        func_213365_e(arg0: Internal.ItemStack): boolean;
        func_213342_e(arg0: BlockPos): void;
        func_70688_c(arg0: Internal.EffectInstance): void;
        func_205015_b(arg0: number): number;
        func_233637_b_(arg0: Internal.Attribute): number;
        func_70067_L(): boolean;
        func_213374_dv(): Internal.Optional<BlockPos>;
        func_70604_c(arg0: Internal.LivingEntity): void;
        func_230490_cK_(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_184611_a(arg0: Hand_, arg1: Internal.ItemStack): void;
        func_184591_cq(): Internal.HandSide;
        func_233644_dn_(): Internal.Optional<BlockPos>;
        func_70608_bn(): boolean;
        func_195046_g(arg0: number): number;
        func_213373_a(arg0: number, arg1: number, arg2: number, arg3: boolean): boolean;
        func_70662_br(): boolean;
        func_184600_cs(): Hand;
        func_142013_aG(): number;
        func_213343_cS(): number;
        func_213358_a(arg0: Internal.EntityType<any>): boolean;
        func_213305_a(arg0: Internal.Pose_): Internal.EntitySize;
        func_184210_p(): void;
        func_184585_cz(): boolean;
        func_208000_a(arg0: number, arg1: number): void;
        func_70659_e(arg0: number): void;
        func_70636_d(): void;
        static func_233639_cI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_184201_a(arg0: EquipmentSlot_, arg1: Internal.ItemStack): void;
        func_70678_g(arg0: number): number;
        static func_242288_h(arg0: Vec3): Vec3;
        func_213332_m(arg0: number): void;
        func_205710_ba(): boolean;
        func_233631_a_(arg0: Internal.Item): boolean;
        func_184596_c(arg0: Internal.Effect): Internal.EffectInstance;
        curePotionEffects(arg0: Internal.ItemStack): boolean;
        func_70030_z(): void;
        func_230246_e_(arg0: Internal.PlayerEntity): void;
        func_213336_c(arg0: Internal.LivingEntity): boolean;
        func_181013_g(arg0: number): void;
        func_233634_a_(arg0: ((arg0: Internal.Item) => boolean)): boolean;
        func_70648_aU(): boolean;
        func_226292_a_(arg0: Hand_, arg1: boolean): void;
        shouldRiderFaceForward(arg0: Internal.PlayerEntity): boolean;
        func_110148_a(arg0: Internal.Attribute): Internal.ModifiableAttributeInstance;
        func_213376_dz(): Internal.Direction;
        func_70685_l(arg0: Internal.Entity): boolean;
        func_213346_cF(): ResourceLocation;
        func_70034_d(arg0: number): void;
        func_85035_bI(): number;
        func_85034_r(arg0: number): void;
        func_195064_c(arg0: Internal.EffectInstance): boolean;
        func_204801_a(arg0: Internal.AxisAlignedBB, arg1: Internal.AxisAlignedBB): void;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        func_190630_a(arg0: EquipmentSlot_): boolean;
        func_184597_cx(): void;
        func_184602_cy(): void;
        func_213355_cm(): number;
        func_70071_h_(): void;
        func_142015_aE(): number;
        func_213366_dy(): void;
        func_70668_bt(): Internal.CreatureAttribute;
        func_184609_a(arg0: Hand_): void;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_70637_d(arg0: boolean): void;
        func_226297_df_(): number;
        func_233643_dh_(): boolean;
        func_70079_am(): number;
        func_184614_ca(): Internal.ItemStack;
        func_70606_j(arg0: number): void;
        func_70689_ay(): number;
        func_184605_cv(): number;
        func_233646_e_(arg0: Internal.EffectInstance): void;
        func_110139_bj(): number;
        func_70670_a(arg0: Internal.EffectInstance): void;
        func_213344_a(arg0: Internal.LivingEntity, arg1: Internal.EntityPredicate): boolean;
        func_70681_au(): Internal.Random;
        func_152112_bu(): void;
        func_233645_dx_(): Internal.AttributeModifierManager;
        func_70094_T(): boolean;
        func_70643_av(): Internal.LivingEntity;
        func_184592_cb(): Internal.ItemStack;
        func_70098_U(): void;
        func_184603_cC(): boolean;
        func_213356_f(arg0: Internal.ItemStack): Internal.ItemStack;
        func_110143_aJ(): number;
        func_70644_a(arg0: Internal.Effect): boolean;
        func_233638_c_(arg0: Internal.Attribute): number;
        func_70651_bq(): Internal.Collection<Internal.EffectInstance>;
        func_110149_m(arg0: number): void;
        func_70654_ax(): number;
        func_94060_bK(): Internal.LivingEntity;
        func_195063_d(arg0: Internal.Effect): boolean;
        func_110138_aP(): number;
        func_70031_b(arg0: boolean): void;
        func_70617_f_(): boolean;
        func_70104_M(): boolean;
        func_70658_aO(): number;
        func_213314_bj(): boolean;
        func_213340_A(arg0: Internal.Entity): number;
        func_184586_b(arg0: Hand_): Internal.ItemStack;
        func_233648_f_(arg0: Internal.Pose_): Internal.AxisAlignedBB;
        func_233630_a_(arg0: Internal.ItemEntity): void;
        func_70660_b(arg0: Internal.Effect): Internal.EffectInstance;
        func_213352_e(arg0: Vec3): void;
        func_152111_bt(): void;
        func_184177_bl(): Internal.AxisAlignedBB;
        func_130011_c(arg0: Internal.Entity): void;
        func_200602_a(arg0: Internal.EntityAnchorArgument$Type_, arg1: Vec3): void;
        static func_184593_a(arg0: Internal.Collection<Internal.EffectInstance>): boolean;
        func_70691_i(arg0: number): void;
        func_70695_b(arg0: Internal.EffectInstance, arg1: boolean): void;
        func_233633_a_(arg0: Vec3, arg1: number): Vec3;
        func_110144_aD(): Internal.LivingEntity;
        func_195061_cb(): boolean;
        func_70613_aW(): boolean;
        func_180426_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        func_226300_q_(arg0: number): void;
        func_204805_cN(): boolean;
        func_233627_a_(arg0: number, arg1: number, arg2: number): void;
        func_70108_f(arg0: Internal.Entity): void;
        func_184598_c(arg0: Hand_): void;
        func_213375_cj(): Internal.Brain<any>;
        func_230270_dK_(): boolean;
        func_184607_cu(): Internal.ItemStack;
        func_230285_a_(arg0: Internal.Fluid): boolean;
        func_213334_d(arg0: Hand_): void;
        func_70687_e(arg0: Internal.EffectInstance): boolean;
        func_184582_a(arg0: EquipmentSlot_): Internal.ItemStack;
        func_70645_a(arg0: Internal.DamageSource): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_230491_ea_(): boolean;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_213372_dw(): void;
        field_184617_aD : number;
        field_70721_aZ : number;
        field_70760_ar : number;
        field_204807_bs : number;
        field_70720_be : number;
        field_70747_aH : number;
        field_226290_au_ : number;
        field_70703_bu : boolean;
        readonly field_70771_an : number;
        field_70701_bs : number;
        field_110158_av : number;
        field_70758_at : number;
        field_70738_aO : number;
        field_70732_aI : number;
        field_184619_aG : number;
        field_70761_aq : number;
        field_82175_bq : boolean;
        readonly field_70769_ao : number;
        field_191988_bg : number;
        field_70725_aQ : number;
        field_70702_br : number;
        readonly field_70770_ap : number;
        field_70759_as : number;
        field_70739_aP : number;
        field_70737_aN : number;
        field_184622_au : Hand;
        field_184618_aE : number;
        field_70733_aJ : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingEntity_ = LivingEntity;
    class HoverEvent$ItemHover extends Document.Object {
        hashCode(): number;
        equals(arg0: any): boolean;
        func_240689_a_(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HoverEvent$ItemHover_ = HoverEvent$ItemHover;
    class ServerStatisticsManager extends Internal.StatisticsManager {
        func_150873_a(arg0: Internal.PlayerEntity, arg1: Internal.Stat<any>, arg2: number): void;
        func_150883_b(): void;
        func_150876_a(arg0: Internal.ServerPlayerEntity): void;
        func_199062_a(arg0: Internal.DataFixer, arg1: string): void;
        func_150877_d(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerStatisticsManager_ = ServerStatisticsManager;
    interface SpriteExtended {
        markActive(): void;
    }
    type SpriteExtended_ = SpriteExtended;
    class SWorldBorderPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179788_a(arg0: Internal.WorldBorder): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SWorldBorderPacket_ = SWorldBorderPacket;
    interface ContainerAccessor {
        insert(arg0: Internal.ItemStack, arg1: number, arg2: number, arg3: boolean): boolean;
    }
    type ContainerAccessor_ = ContainerAccessor;
    interface Member {
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        getDeclaringClass(): Internal.Class<any>;
        getName(): string;
        isSynthetic(): boolean;
        getModifiers(): number;
    }
    type Member_ = Member;
    class ModuleLayer$Controller extends Document.Object {
        enableNativeAccess(arg0: Internal.Module): Internal.ModuleLayer$Controller;
        addReads(arg0: Internal.Module, arg1: Internal.Module): Internal.ModuleLayer$Controller;
        addExports(arg0: Internal.Module, arg1: string, arg2: Internal.Module): Internal.ModuleLayer$Controller;
        addOpens(arg0: Internal.Module, arg1: string, arg2: Internal.Module): Internal.ModuleLayer$Controller;
        layer(): Internal.ModuleLayer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleLayer$Controller_ = ModuleLayer$Controller;
    class ResourcePackList extends Document.Object implements Internal.AutoCloseable {
        func_232623_f_(): Internal.List<Internal.IResourcePack>;
        func_198981_a(arg0: string): Internal.ResourcePackInfo;
        func_198978_b(): Internal.Collection<Internal.ResourcePackInfo>;
        func_198985_a(arg0: Internal.Collection<string>): void;
        close(): void;
        func_232616_b_(): Internal.Collection<string>;
        func_232621_d_(): Internal.Collection<string>;
        func_232617_b_(arg0: string): boolean;
        addPackFinder(arg0: Internal.IPackFinder): void;
        func_198980_d(): Internal.Collection<Internal.ResourcePackInfo>;
        func_198983_a(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ResourcePackList_ = ResourcePackList;
    interface ISkyRenderHandler {
        render(arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft): void;
    }
    type ISkyRenderHandler_ = ((arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft) => void) | ISkyRenderHandler;
    interface IntIterable extends Internal.Iterable<number> {
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.IntIterator;
        forEach(arg0: ((arg0: number) => void)): void;
        forEach(arg0: ((arg0: number) => void)): void;
    }
    type IntIterable_ = IntIterable;
    class Type$Mu extends Document.Object implements Internal.K1 {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Type$Mu_ = Type$Mu;
    class IntegratedServer extends Internal.MinecraftServer {
        func_70000_a(arg0: Internal.Snooper): void;
        func_82356_Z(): boolean;
        func_195565_a(arg0: Internal.GameType_, arg1: boolean, arg2: number): boolean;
        func_71215_F(): number;
        func_211527_b(arg0: Internal.UUID): void;
        func_181035_ah(): boolean;
        func_71228_a(arg0: Internal.CrashReport): void;
        func_241871_k(): number;
        func_213199_b(arg0: Internal.GameProfile): boolean;
        func_71235_a(arg0: Internal.GameType_): void;
        func_71230_b(arg0: Internal.CrashReport): Internal.CrashReport;
        func_71260_j(): void;
        func_195569_l(): boolean;
        func_110455_j(): number;
        func_71263_m(arg0: boolean): void;
        func_71197_b(): boolean;
        func_195041_r_(): boolean;
        func_230540_aS_(): boolean;
        func_71217_p(arg0: (() => boolean)): void;
        func_230045_q_(): Internal.Optional<string>;
        func_71344_c(): boolean;
        func_71262_S(): boolean;
        func_230512_b_(arg0: number): number;
        func_71238_n(): Internal.File;
        func_223707_k(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IntegratedServer_ = IntegratedServer;
    interface Ingredient$IItemList {
        func_200303_b(): Internal.JsonObject;
        func_199799_a(): Internal.Collection<Internal.ItemStack>;
    }
    type Ingredient$IItemList_ = Ingredient$IItemList;
    interface ValueLayout$OfByte extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfByte;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfByte;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.ValueLayout$OfByte;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfByte;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfByte_ = ValueLayout$OfByte;
    class Dynamic <T> extends Internal.DynamicLike<T> {
        updateGeneric(arg0: T, arg1: ((arg0: T) => T)): Internal.Dynamic<T>;
        updateMapValues(arg0: ((arg0: com.mojang.datafixers.util.Pair<Internal.Dynamic<any>, Internal.Dynamic<any>>) => com.mojang.datafixers.util.Pair<Internal.Dynamic<any>, Internal.Dynamic<any>>)): Internal.Dynamic<T>;
        asLongStreamOpt(): Internal.DataResult<Internal.LongStream>;
        getElementGeneric(arg0: T): Internal.DataResult<T>;
        asStreamOpt(): Internal.DataResult<Internal.Stream<Internal.Dynamic<T>>>;
        update(arg0: string, arg1: ((arg0: Internal.Dynamic<any>) => Internal.Dynamic<any>)): Internal.Dynamic<T>;
        convert<R_>(arg0: Internal.DynamicOps<R_>): Internal.Dynamic<R_>;
        static convert<S_, T_>(arg0: Internal.DynamicOps<S_>, arg1: Internal.DynamicOps<T_>, arg2: S_): T_;
        decode<A_>(arg0: Internal.Decoder<A_>): Internal.DataResult<com.mojang.datafixers.util.Pair<A_, T>>;
        asIntStreamOpt(): Internal.DataResult<Internal.IntStream>;
        remove(arg0: string): Internal.Dynamic<T>;
        getMapValues(): Internal.DataResult<Internal.Map<Internal.Dynamic<T>, Internal.Dynamic<T>>>;
        cast<U_>(arg0: Internal.DynamicOps<U_>): U_;
        into<V_>(arg0: ((arg0: Internal.Dynamic<T>) => V_)): V_;
        hashCode(): number;
        merge(arg0: Internal.Dynamic<any>): Internal.OptionalDynamic<T>;
        merge(arg0: Internal.Dynamic<any>, arg1: Internal.Dynamic<any>): Internal.OptionalDynamic<T>;
        get(arg0: string): Internal.OptionalDynamic<T>;
        asString(): Internal.DataResult<string>;
        map(arg0: ((arg0: T) => T)): Internal.Dynamic<T>;
        set(arg0: string, arg1: Internal.Dynamic<any>): Internal.Dynamic<T>;
        asByteBufferOpt(): Internal.DataResult<Internal.ByteBuffer>;
        asNumber(): Internal.DataResult<Internal.Number>;
        asMapOpt(): Internal.DataResult<Internal.Stream<com.mojang.datafixers.util.Pair<Internal.Dynamic<T>, Internal.Dynamic<T>>>>;
        getGeneric(arg0: T): Internal.DataResult<T>;
        castTyped<U_>(arg0: Internal.DynamicOps<U_>): Internal.Dynamic<U_>;
        getValue(): T;
        getElement(arg0: string): Internal.DataResult<T>;
        equals(arg0: any): boolean;
        toString(): string;
        get mapValues(): Internal.DataResult<Internal.Map<Internal.Dynamic<T>, Internal.Dynamic<T>>>;
        get value(): T;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Dynamic_<T> = Dynamic<T>;
    class AreaEffectCloudEntity extends Internal.Entity {
        func_184483_a(arg0: number): void;
        func_184482_a(arg0: number): void;
        func_184481_a(arg0: Internal.LivingEntity): void;
        func_213297_N(): Internal.IPacket<any>;
        func_195059_a(arg0: Internal.IParticleData): void;
        func_184192_z(): Internal.PushReaction;
        func_70071_h_(): void;
        func_184494_w(): Internal.LivingEntity;
        func_184489_o(): number;
        func_195058_l(): Internal.IParticleData;
        func_184497_n(): boolean;
        func_213305_a(arg0: Internal.Pose_): Internal.EntitySize;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_213323_x_(): void;
        func_184492_k(): number;
        func_184487_c(arg0: number): void;
        func_184490_j(): number;
        func_184485_d(arg0: number): void;
        func_184486_b(arg0: number): void;
        func_184496_a(arg0: Internal.EffectInstance): void;
        func_184495_b(arg0: number): void;
        func_184484_a(arg0: Internal.Potion): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AreaEffectCloudEntity_ = AreaEffectCloudEntity;
    interface ISpectatorMenuView {
        func_178670_b(): Internal.ITextComponent;
        func_178669_a(): Internal.List<Internal.ISpectatorMenuObject>;
    }
    type ISpectatorMenuView_ = ISpectatorMenuView;
    class SEntityPropertiesPacket$Snapshot extends Document.Object {
        func_240834_a_(): Internal.Attribute;
        func_151408_c(): Internal.Collection<Internal.AttributeModifier>;
        func_151410_b(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SEntityPropertiesPacket$Snapshot_ = SEntityPropertiesPacket$Snapshot;
    interface RecvByteBufAllocator {
        newHandle(): Internal.RecvByteBufAllocator$Handle;
    }
    type RecvByteBufAllocator_ = RecvByteBufAllocator;
    class ChatVisibility extends Internal.Enum<Internal.ChatVisibility> {
        func_221254_a(): number;
        func_221251_b(): string;
        static func_221252_a(arg0: number): Internal.ChatVisibility;
        static valueOf(arg0: string): Internal.ChatVisibility;
        static values(): Internal.ChatVisibility[];
        static readonly SYSTEM : Internal.ChatVisibility;
        static readonly HIDDEN : Internal.ChatVisibility;
        static readonly FULL : Internal.ChatVisibility;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChatVisibility_ = "full" | "system" | "hidden" | ChatVisibility;
    abstract class ParticleType <T> extends Internal.ForgeRegistryEntry<Internal.ParticleType<any>> {
        func_197571_g(): Internal.IParticleData$IDeserializer<T>;
        func_197575_f(): boolean;
        func_230522_e_(): Internal.Codec<T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ParticleType_<T> = ParticleType<T>;
    interface ImmutableStringReader {
        getCursor(): number;
        getRemainingLength(): number;
        getTotalLength(): number;
        canRead(): boolean;
        canRead(arg0: number): boolean;
        getRemaining(): string;
        getRead(): string;
        getString(): string;
        peek(arg0: number): string;
        peek(): string;
    }
    type ImmutableStringReader_ = ImmutableStringReader;
    class InventoryChangedEventJS extends Internal.PlayerEventJS {
        getSlot(): number;
        getItem(): Internal.ItemStackJS;
        getEntity(): Internal.EntityJS;
        get item(): Internal.ItemStackJS;
        get slot(): number;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InventoryChangedEventJS_ = InventoryChangedEventJS;
    interface GatheringByteChannel extends Internal.WritableByteChannel {
        write(arg0: Internal.ByteBuffer[], arg1: number, arg2: number): number;
        write(arg0: Internal.ByteBuffer[]): number;
    }
    type GatheringByteChannel_ = GatheringByteChannel;
    interface Table <R, C, V> {
        cellSet(): Internal.Set<Internal.Table$Cell<R, C, V>>;
        values(): Internal.Collection<V>;
        isEmpty(): boolean;
        clear(): void;
        column(arg0: C): Internal.Map<R, V>;
        containsValue(arg0: any): boolean;
        put(arg0: R, arg1: C, arg2: V): V;
        remove(arg0: any, arg1: any): V;
        contains(arg0: any, arg1: any): boolean;
        columnMap(): Internal.Map<C, Internal.Map<R, V>>;
        size(): number;
        containsColumn(arg0: any): boolean;
        hashCode(): number;
        columnKeySet(): Internal.Set<C>;
        putAll(arg0: Internal.Table<R, C, V>): void;
        equals(arg0: any): boolean;
        get(arg0: any, arg1: any): V;
        rowMap(): Internal.Map<R, Internal.Map<C, V>>;
        rowKeySet(): Internal.Set<R>;
        row(arg0: R): Internal.Map<C, V>;
        containsRow(arg0: any): boolean;
    }
    type Table_<R, C, V> = Table<R, C, V>;
    interface IWorldGenerationBaseReader {
        func_217375_a(arg0: BlockPos, arg1: ((arg0: Internal.BlockState) => boolean)): boolean;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
    }
    type IWorldGenerationBaseReader_ = IWorldGenerationBaseReader;
    abstract class BanEntry <T> extends Internal.UserListEntry<T> {
        func_73686_f(): string;
        func_199040_b(): string;
        func_199041_e(): Internal.ITextComponent;
        func_73680_d(): Internal.Date;
        static readonly field_73698_a : Internal.SimpleDateFormat;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BanEntry_<T> = BanEntry<T>;
    class HoverEvent$EntityHover extends Document.Object {
        static func_240682_a_(arg0: Internal.JsonElement): Internal.HoverEvent$EntityHover;
        hashCode(): number;
        equals(arg0: any): boolean;
        func_240684_b_(): Internal.List<Internal.ITextComponent>;
        func_240681_a_(): Internal.JsonElement;
        static func_240683_a_(arg0: Internal.ITextComponent_): Internal.HoverEvent$EntityHover;
        readonly field_240679_c_ : Internal.ITextComponent;
        readonly field_240678_b_ : Internal.UUID;
        readonly field_240677_a_ : Internal.EntityType<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HoverEvent$EntityHover_ = HoverEvent$EntityHover;
    interface Function15 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.Function6<T10, T11, T12, T13, T14, T15, R>>;
        curry12(): Internal.Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Internal.Function3<T13, T14, T15, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13, arg13: T14, arg14: T15): R;
        curry13(): Internal.Function13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Internal.BiFunction<T14, T15, R>>;
        curry14(): Internal.Function14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Internal.Function<T15, R>>;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function8<T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function7<T9, T10, T11, T12, T13, T14, T15, R>>;
        curry10(): Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Internal.Function5<T11, T12, T13, T14, T15, R>>;
        curry11(): Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Internal.Function4<T12, T13, T14, T15, R>>;
        curry(): Internal.Function<T1, Internal.Function14<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function10<T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function9<T7, T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function12<T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function11<T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function13<T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>>;
    }
    type Function15_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R> = Function15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>;
    class RandomBlockStateMatchRuleTest extends Internal.RuleTest {
        func_215181_a(arg0: Internal.BlockState, arg1: Internal.Random): boolean;
        static readonly field_237121_a_ : Internal.Codec<Internal.RandomBlockStateMatchRuleTest>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RandomBlockStateMatchRuleTest_ = RandomBlockStateMatchRuleTest;
    class JigsawPattern extends Document.Object {
        func_214943_b(arg0: Internal.Random): Internal.List<Internal.JigsawPiece>;
        func_214944_a(arg0: Internal.Random): Internal.JigsawPiece;
        func_214945_a(arg0: Internal.TemplateManager): number;
        func_214946_c(): number;
        func_214948_a(): ResourceLocation;
        func_214947_b(): ResourceLocation;
        static readonly field_236852_a_ : Internal.Codec<Internal.JigsawPattern>;
        static readonly field_244392_b_ : Internal.Codec<(() => Internal.JigsawPattern)>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JigsawPattern_ = JigsawPattern;
    abstract class IntBuffer extends Internal.Buffer implements Internal.Comparable<Internal.IntBuffer> {
        hasArray(): boolean;
        compact(): Internal.IntBuffer;
        clear(): Internal.IntBuffer;
        clear(): Internal.Buffer;
        duplicate(): Internal.IntBuffer;
        duplicate(): Internal.Buffer;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.IntBuffer): number;
        asReadOnlyBuffer(): Internal.IntBuffer;
        put(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.IntBuffer;
        put(arg0: number, arg1: number[]): Internal.IntBuffer;
        put(arg0: number, arg1: Internal.IntBuffer, arg2: number, arg3: number): Internal.IntBuffer;
        put(arg0: number[]): Internal.IntBuffer;
        put(arg0: Internal.IntBuffer): Internal.IntBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.IntBuffer;
        put(arg0: number): Internal.IntBuffer;
        put(arg0: number, arg1: number): Internal.IntBuffer;
        static allocate(arg0: number): Internal.IntBuffer;
        rewind(): Internal.IntBuffer;
        rewind(): Internal.Buffer;
        slice(): Internal.IntBuffer;
        slice(): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.IntBuffer;
        array(): number[];
        array(): any;
        hashCode(): number;
        mismatch(arg0: Internal.IntBuffer): number;
        equals(arg0: any): boolean;
        get(arg0: number, arg1: number[]): Internal.IntBuffer;
        get(arg0: number): number;
        get(arg0: number[], arg1: number, arg2: number): Internal.IntBuffer;
        get(arg0: number[]): Internal.IntBuffer;
        get(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.IntBuffer;
        get(): number;
        limit(arg0: number): Internal.Buffer;
        limit(arg0: number): Internal.IntBuffer;
        arrayOffset(): number;
        reset(): Internal.Buffer;
        reset(): Internal.IntBuffer;
        toString(): string;
        position(arg0: number): Internal.IntBuffer;
        position(arg0: number): Internal.Buffer;
        flip(): Internal.Buffer;
        flip(): Internal.IntBuffer;
        isDirect(): boolean;
        static wrap(arg0: number[], arg1: number, arg2: number): Internal.IntBuffer;
        static wrap(arg0: number[]): Internal.IntBuffer;
        mark(): Internal.IntBuffer;
        mark(): Internal.Buffer;
        order(): Internal.ByteOrder;
        get direct(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IntBuffer_ = IntBuffer;
    class BiomeGenerationSettings$Builder extends Document.Object implements Internal.BiomeGenerationSettingsBuilderAccessor {
        func_242517_a(arg0: Internal.ConfiguredSurfaceBuilder<any>): Internal.BiomeGenerationSettings$Builder;
        func_242508_a(): Internal.BiomeGenerationSettings;
        func_242519_a(arg0: (() => Internal.ConfiguredSurfaceBuilder<any>)): Internal.BiomeGenerationSettings$Builder;
        getFeatures(): Internal.List<any>;
        func_242510_a(arg0: number, arg1: (() => Internal.ConfiguredFeature<any, any>)): Internal.BiomeGenerationSettings$Builder;
        func_242512_a<C_>(arg0: CarvingGenerationStep_, arg1: Internal.ConfiguredCarver<C_>): Internal.BiomeGenerationSettings$Builder;
        func_242513_a(arg0: DecorationGenerationStep_, arg1: Internal.ConfiguredFeature<any, any>): Internal.BiomeGenerationSettings$Builder;
        func_242516_a(arg0: Internal.StructureFeature<any, any>): Internal.BiomeGenerationSettings$Builder;
        get features(): Internal.List<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BiomeGenerationSettings$Builder_ = BiomeGenerationSettings$Builder;
    class GameType extends Internal.Enum<Internal.GameType> {
        func_196220_c(): Internal.ITextComponent;
        func_77149_b(): string;
        func_77144_e(): boolean;
        func_82752_c(): boolean;
        func_77145_d(): boolean;
        func_77148_a(): number;
        func_77147_a(arg0: Internal.PlayerAbilities): void;
        static func_77146_a(arg0: number): Internal.GameType;
        static valueOf(arg0: string): Internal.GameType;
        static values(): Internal.GameType[];
        static func_77142_a(arg0: string): Internal.GameType;
        static func_185329_a(arg0: number, arg1: Internal.GameType_): Internal.GameType;
        static func_185328_a(arg0: string, arg1: Internal.GameType_): Internal.GameType;
        static readonly SURVIVAL : Internal.GameType;
        static readonly SPECTATOR : Internal.GameType;
        static readonly NOT_SET : Internal.GameType;
        static readonly CREATIVE : Internal.GameType;
        static readonly ADVENTURE : Internal.GameType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameType_ = "not_set" | "survival" | "creative" | "adventure" | "spectator" | GameType;
    interface IForgeItemStack extends Internal.ICapabilitySerializable<Internal.CompoundNBT> {
        getToolTypes(): Internal.Set<Internal.ToolType>;
        canElytraFly(arg0: Internal.LivingEntity): boolean;
        canEquip(arg0: EquipmentSlot_, arg1: Internal.Entity): boolean;
        getHarvestLevel(arg0: Internal.ToolType, arg1: Internal.PlayerEntity, arg2: Internal.BlockState): number;
        onBlockStartBreak(arg0: BlockPos, arg1: Internal.PlayerEntity): boolean;
        onHorseArmorTick(arg0: Internal.World, arg1: Internal.MobEntity): void;
        getItemEnchantability(): number;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack): boolean;
        getEntityLifespan(arg0: Internal.World): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getXpRepairRatio(): number;
        getHighlightTip(arg0: Internal.ITextComponent_): Internal.ITextComponent;
        readShareTag(arg0: Internal.CompoundNBT): void;
        onEntityItemUpdate(arg0: Internal.ItemEntity): boolean;
        onArmorTick(arg0: Internal.World, arg1: Internal.PlayerEntity): void;
        hasContainerItem(): boolean;
        isBookEnchantable(arg0: Internal.ItemStack): boolean;
        isShield(arg0: Internal.LivingEntity): boolean;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: Internal.LivingEntity): boolean;
        doesSneakBypassUse(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        onItemUseFirst(arg0: Internal.ItemUseContext): Internal.ActionResultType;
        getContainerItem(): Internal.ItemStack;
        onUsingTick(arg0: Internal.LivingEntity, arg1: number): void;
        isPiglinCurrency(): boolean;
        isRepairable(): boolean;
        getEquipmentSlot(): EquipmentSlot;
        getShareTag(): Internal.CompoundNBT;
        getBurnTime(): number;
        getBurnTime(arg0: Internal.IRecipeType<any>): number;
        onDroppedByPlayer(arg0: Internal.PlayerEntity): boolean;
        equals(arg0: Internal.ItemStack, arg1: boolean): boolean;
        onEntitySwing(arg0: Internal.LivingEntity): boolean;
        makesPiglinsNeutral(arg0: Internal.LivingEntity): boolean;
        elytraFlightTick(arg0: Internal.LivingEntity, arg1: number): boolean;
        getStack(): Internal.ItemStack;
        isEnderMask(arg0: Internal.PlayerEntity, arg1: Internal.EndermanEntity): boolean;
        areShareTagsEqual(arg0: Internal.ItemStack): boolean;
        canApplyAtEnchantingTable(arg0: Internal.Enchantment): boolean;
    }
    type IForgeItemStack_ = IForgeItemStack;
    class ComparatorTileEntity extends Internal.TileEntity {
        func_145995_a(arg0: number): void;
        func_145996_a(): number;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ComparatorTileEntity_ = ComparatorTileEntity;
    interface ChronoLocalDate extends Internal.Temporal, Internal.TemporalAdjuster, Internal.Comparable<Internal.ChronoLocalDate> {
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDate;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDate;
        toEpochDay(): number;
        isEqual(arg0: Internal.ChronoLocalDate): boolean;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        format(arg0: Internal.DateTimeFormatter): string;
        isLeapYear(): boolean;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isSupported(arg0: Internal.TemporalField): boolean;
        compareTo(arg0: Internal.ChronoLocalDate): number;
        compareTo(arg0: any): number;
        isBefore(arg0: Internal.ChronoLocalDate): boolean;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDate;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDate;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        atTime(arg0: Internal.LocalTime): Internal.ChronoLocalDateTime<any>;
        lengthOfYear(): number;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.Temporal;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.ChronoLocalDate;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ChronoLocalDate;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        lengthOfMonth(): number;
        getEra(): Internal.Era;
        hashCode(): number;
        equals(arg0: any): boolean;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        until(arg0: Internal.ChronoLocalDate): Internal.ChronoPeriod;
        toString(): string;
        getChronology(): Internal.Chronology;
        isAfter(arg0: Internal.ChronoLocalDate): boolean;
    }
    type ChronoLocalDate_ = ChronoLocalDate;
    class BossInfo$Color extends Internal.Enum<Internal.BossInfo$Color> {
        static valueOf(arg0: string): Internal.BossInfo$Color;
        static values(): Internal.BossInfo$Color[];
        func_201480_b(): string;
        static func_201481_a(arg0: string): Internal.BossInfo$Color;
        func_201482_a(): Internal.TextFormatting;
        static readonly RED : Internal.BossInfo$Color;
        static readonly WHITE : Internal.BossInfo$Color;
        static readonly PINK : Internal.BossInfo$Color;
        static readonly BLUE : Internal.BossInfo$Color;
        static readonly YELLOW : Internal.BossInfo$Color;
        static readonly PURPLE : Internal.BossInfo$Color;
        static readonly GREEN : Internal.BossInfo$Color;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BossInfo$Color_ = "pink" | "blue" | "red" | "green" | "yellow" | "purple" | "white" | BossInfo$Color;
    class HoglinEntity extends Internal.AnimalEntity implements Internal.IMob, Internal.IFlinging {
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_230290_eL_(): number;
        func_70103_a(arg0: number): void;
        func_213375_cj(): Internal.Brain<Internal.HoglinEntity>;
        func_234365_eM_(): boolean;
        func_70042_X(): number;
        func_234363_eJ_(): boolean;
        func_213397_c(arg0: number): boolean;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_234364_eK_(): boolean;
        func_204701_dC(): boolean;
        static func_234361_c_(arg0: Internal.EntityType<Internal.HoglinEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_70636_d(): void;
        func_184652_a(arg0: Internal.PlayerEntity): boolean;
        func_234370_t_(arg0: boolean): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        static func_234362_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        func_184176_by(): Internal.SoundCategory;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HoglinEntity_ = HoglinEntity;
    class NamedPackage extends Document.Object {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NamedPackage_ = NamedPackage;
    class TypedOptic <S, T, A, B> extends Document.Object {
        static adapter<S_, T_>(arg0: Internal.Type<S_>, arg1: Internal.Type<T_>): Internal.TypedOptic<S_, T_, S_, T_>;
        tType(): Internal.Type<T>;
        aType(): Internal.Type<A>;
        apply<P_, Proof2_>(arg0: Internal.TypeToken<Proof2_>, arg1: Internal.App<Proof2_, P_>, arg2: Internal.App2<P_, A, B>): Internal.App2<P_, S, T>;
        static proj2<F_, G_, G2_>(arg0: Internal.Type<F_>, arg1: Internal.Type<G_>, arg2: Internal.Type<G2_>): Internal.TypedOptic<com.mojang.datafixers.util.Pair<F_, G_>, com.mojang.datafixers.util.Pair<F_, G2_>, G_, G2_>;
        static proj1<F_, G_, F2_>(arg0: Internal.Type<F_>, arg1: Internal.Type<G_>, arg2: Internal.Type<F2_>): Internal.TypedOptic<com.mojang.datafixers.util.Pair<F_, G_>, com.mojang.datafixers.util.Pair<F2_, G_>, F_, F2_>;
        upCast<Proof2_>(arg0: Internal.TypeToken<Proof2_>): Internal.Optional<Internal.Optic<Proof2_, S, T, A, B>>;
        static list<A_, B_>(arg0: Internal.Type<A_>, arg1: Internal.Type<B_>): Internal.TypedOptic<Internal.List<A_>, Internal.List<B_>, A_, B_>;
        static compoundListElements<K_, V_, V2_>(arg0: Internal.Type<K_>, arg1: Internal.Type<V_>, arg2: Internal.Type<V2_>): Internal.TypedOptic<Internal.List<com.mojang.datafixers.util.Pair<K_, V_>>, Internal.List<com.mojang.datafixers.util.Pair<K_, V2_>>, V_, V2_>;
        static instanceOf<Proof2_>(arg0: Internal.Collection<Internal.TypeToken<Internal.K1>>, arg1: Internal.TypeToken<Proof2_>): boolean;
        sType(): Internal.Type<S>;
        bType(): Internal.Type<B>;
        static compoundListKeys<K_, V_, K2_>(arg0: Internal.Type<K_>, arg1: Internal.Type<K2_>, arg2: Internal.Type<V_>): Internal.TypedOptic<Internal.List<com.mojang.datafixers.util.Pair<K_, V_>>, Internal.List<com.mojang.datafixers.util.Pair<K2_, V_>>, K_, K2_>;
        static tagged<K_, A_, B_>(arg0: Internal.TaggedChoice$TaggedChoiceType<K_>, arg1: K_, arg2: Internal.Type<A_>, arg3: Internal.Type<B_>): Internal.TypedOptic<com.mojang.datafixers.util.Pair<K_, any>, com.mojang.datafixers.util.Pair<K_, any>, A_, B_>;
        compose<A1_, B1_>(arg0: Internal.TypedOptic<A, B, A1_, B1_>): Internal.TypedOptic<S, T, A1_, B1_>;
        bounds(): Internal.Set<Internal.TypeToken<Internal.K1>>;
        static inj2<F_, G_, G2_>(arg0: Internal.Type<F_>, arg1: Internal.Type<G_>, arg2: Internal.Type<G2_>): Internal.TypedOptic<Internal.Either<F_, G_>, Internal.Either<F_, G2_>, G_, G2_>;
        static inj1<F_, G_, F2_>(arg0: Internal.Type<F_>, arg1: Internal.Type<G_>, arg2: Internal.Type<F2_>): Internal.TypedOptic<Internal.Either<F_, G_>, Internal.Either<F2_, G_>, F_, F2_>;
        optic(): Internal.Optic<any, S, T, A, B>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TypedOptic_<S, T, A, B> = TypedOptic<S, T, A, B>;
    class BlockSnapshot extends Document.Object {
        getWorld(): Internal.IWorld;
        getNbt(): Internal.CompoundNBT;
        restore(arg0: boolean): boolean;
        restore(): boolean;
        restore(arg0: boolean, arg1: boolean): boolean;
        restoreToLocation(arg0: Internal.IWorld, arg1: BlockPos, arg2: boolean, arg3: boolean): boolean;
        getReplacedBlock(): Internal.BlockState;
        getCurrentBlock(): Internal.BlockState;
        hashCode(): number;
        getPos(): BlockPos;
        equals(arg0: any): boolean;
        getTileEntity(): Internal.TileEntity;
        static create(arg0: Internal.RegistryKey<Internal.World>, arg1: Internal.IWorld, arg2: BlockPos): Internal.BlockSnapshot;
        static create(arg0: Internal.RegistryKey<Internal.World>, arg1: Internal.IWorld, arg2: BlockPos, arg3: number): Internal.BlockSnapshot;
        toString(): string;
        getFlag(): number;
        get nbt(): Internal.CompoundNBT;
        get world(): Internal.IWorld;
        get flag(): number;
        get currentBlock(): Internal.BlockState;
        get pos(): BlockPos;
        get replacedBlock(): Internal.BlockState;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockSnapshot_ = BlockSnapshot;
    class DataPoint extends Document.Object implements Internal.Comparable<Internal.DataPoint> {
        compareTo(arg0: Internal.DataPoint): number;
        compareTo(arg0: any): number;
        func_219942_a(): number;
        readonly field_223511_c : number;
        readonly field_219945_c : string;
        readonly field_219944_b : number;
        readonly field_219943_a : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DataPoint_ = DataPoint;
    interface Function7 <T1, T2, T3, T4, T5, T6, T7, R> {
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7): R;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.BiFunction<T6, T7, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function<T7, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function4<T4, T5, T6, T7, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function3<T5, T6, T7, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function5<T3, T4, T5, T6, T7, R>>;
        curry(): Internal.Function<T1, Internal.Function6<T2, T3, T4, T5, T6, T7, R>>;
    }
    type Function7_<T1, T2, T3, T4, T5, T6, T7, R> = Function7<T1, T2, T3, T4, T5, T6, T7, R>;
    interface LongToIntFunction {
        applyAsInt(arg0: number): number;
    }
    type LongToIntFunction_ = ((arg0: number) => number) | LongToIntFunction;
    interface ClientWorldExtended {
        getBiomeSeed(): number;
    }
    type ClientWorldExtended_ = ClientWorldExtended;
    class OverlayTexture extends Document.Object implements Internal.AutoCloseable {
        static func_229199_a_(arg0: number): number;
        func_229198_a_(): void;
        static func_229202_a_(arg0: boolean): number;
        func_229203_b_(): void;
        static func_229200_a_(arg0: number, arg1: boolean): number;
        static func_229201_a_(arg0: number, arg1: number): number;
        close(): void;
        static readonly field_229196_a_ : 655360;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OverlayTexture_ = OverlayTexture;
    interface Iterator <E> {
        next(): E;
        hasNext(): boolean;
        forEachRemaining(arg0: ((arg0: E) => void)): void;
        remove(): void;
    }
    type Iterator_<E> = Iterator<E>;
    interface EntityLightSampler <T> {
        bridge$getBlockLight(arg0: T, arg1: BlockPos): number;
        bridge$getSkyLight(arg0: T, arg1: BlockPos): number;
    }
    type EntityLightSampler_<T> = EntityLightSampler<T>;
    class SRespawnPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_149083_e(): Internal.GameType;
        func_240829_g_(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_244303_b(): Internal.DimensionType;
        func_240828_f_(): boolean;
        func_240830_h_(): boolean;
        func_240827_c_(): Internal.RegistryKey<Internal.World>;
        func_241788_f_(): Internal.GameType;
        func_229747_c_(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SRespawnPacket_ = SRespawnPacket;
    abstract class ForwardingList <E> extends Internal.ForwardingCollection<E> implements Internal.List<E> {
        add(arg0: number, arg1: E): void;
        lastIndexOf(arg0: any): number;
        subList(arg0: number, arg1: number): Internal.List<E>;
        set(arg0: number, arg1: E): E;
        addAll(arg0: number, arg1: Internal.Collection<E>): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        get(arg0: number): E;
        listIterator(): Internal.ListIterator<E>;
        listIterator(arg0: number): Internal.ListIterator<E>;
        indexOf(arg0: any): number;
        remove(arg0: number): E;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ForwardingList_<E> = ForwardingList<E>;
    class RenderTypeBuffers extends Document.Object {
        static func_228486_a_(arg0: Internal.Object2ObjectLinkedOpenHashMap<Internal.RenderType, Internal.BufferBuilder>, arg1: Internal.RenderType): void;
        func_228489_c_(): Internal.IRenderTypeBuffer$Impl;
        func_228484_a_(): Internal.RegionRenderCacheBuilder;
        func_228487_b_(): Internal.IRenderTypeBuffer$Impl;
        func_228490_d_(): Internal.OutlineLayerBuffer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderTypeBuffers_ = RenderTypeBuffers;
    class Explosion extends Document.Object {
        getPosition(): Vec3;
        func_180342_d(): void;
        func_77277_b(): Internal.Map<Internal.PlayerEntity, Vec3>;
        func_77278_a(): void;
        static func_222259_a(arg0: Vec3, arg1: Internal.Entity): number;
        func_77279_a(arg0: boolean): void;
        func_180343_e(): Internal.List<BlockPos>;
        func_199591_b(): Internal.DamageSource;
        getExploder(): Internal.Entity;
        func_94613_c(): Internal.LivingEntity;
        field_77280_f : number;
        get exploder(): Internal.Entity;
        get position(): Vec3;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Explosion_ = Explosion;
    class DynamicCommandExceptionType extends Document.Object implements Internal.CommandExceptionType {
        createWithContext(arg0: Internal.ImmutableStringReader, arg1: any): Internal.CommandSyntaxException;
        create(arg0: any): Internal.CommandSyntaxException;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DynamicCommandExceptionType_ = DynamicCommandExceptionType;
    class ParsePosition extends Document.Object {
        getIndex(): number;
        setIndex(arg0: number): void;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        setErrorIndex(arg0: number): void;
        getErrorIndex(): number;
        get errorIndex(): number;
        get index(): number;
        set errorIndex(arg0: number);
        set index(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ParsePosition_ = ParsePosition;
    class DyeColor extends Internal.Enum<Internal.DyeColor> implements Internal.IStringSerializable, dev.latvian.mods.rhino.mod.util.color.Color {
        static func_204271_a(arg0: string, arg1: Internal.DyeColor_): Internal.DyeColor;
        getRgbKJS(): number;
        static valueOf(arg0: string): Internal.DyeColor;
        static values(): Internal.DyeColor[];
        func_218388_g(): number;
        func_196060_f(): number;
        static getColor(arg0: Internal.ItemStack): Internal.DyeColor;
        getTag(): Internal.Tags$IOptionalNamedTag<Internal.Item>;
        func_193349_f(): number[];
        func_176762_d(): string;
        static func_196056_a(arg0: number): Internal.DyeColor;
        func_196055_e(): Internal.MaterialColor;
        func_176610_l(): string;
        static func_196058_b(arg0: number): Internal.DyeColor;
        func_196059_a(): number;
        getArgbKJS(): number;
        toString(): string;
        getFireworkColorKJS(): number;
        getColorValue(): number;
        static readonly WHITE : Internal.DyeColor;
        static readonly GRAY : Internal.DyeColor;
        static readonly BLUE : Internal.DyeColor;
        static readonly PURPLE : Internal.DyeColor;
        static readonly GREEN : Internal.DyeColor;
        static readonly RED : Internal.DyeColor;
        static readonly PINK : Internal.DyeColor;
        static readonly LIGHT_GRAY : Internal.DyeColor;
        static readonly LIGHT_BLUE : Internal.DyeColor;
        static readonly LIME : Internal.DyeColor;
        static readonly MAGENTA : Internal.DyeColor;
        static readonly BLACK : Internal.DyeColor;
        static readonly YELLOW : Internal.DyeColor;
        static readonly CYAN : Internal.DyeColor;
        static readonly BROWN : Internal.DyeColor;
        static readonly ORANGE : Internal.DyeColor;
        get fireworkColorKJS(): number;
        get rgbKJS(): number;
        get argbKJS(): number;
        get colorValue(): number;
        get tag(): Internal.Tags$IOptionalNamedTag<Internal.Item>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DyeColor_ = "white" | "orange" | "magenta" | "light_blue" | "yellow" | "lime" | "pink" | "gray" | "light_gray" | "cyan" | "purple" | "blue" | "brown" | "green" | "red" | "black" | DyeColor;
    interface IRecipeTransferHandler <C> {
        getContainerClass(): Internal.Class<C>;
        transferRecipe(arg0: C, arg1: any, arg2: Internal.IRecipeLayout, arg3: Internal.PlayerEntity, arg4: boolean, arg5: boolean): Internal.IRecipeTransferError;
        transferRecipe(arg0: C, arg1: Internal.IRecipeLayout, arg2: Internal.PlayerEntity, arg3: boolean, arg4: boolean): Internal.IRecipeTransferError;
    }
    type IRecipeTransferHandler_<C> = IRecipeTransferHandler<C>;
    abstract class PermissionCollection extends Document.Object implements Internal.Serializable {
        add(arg0: Internal.Permission): void;
        elementsAsStream(): Internal.Stream<Internal.Permission>;
        isReadOnly(): boolean;
        elements(): Internal.Enumeration<Internal.Permission>;
        toString(): string;
        implies(arg0: Internal.Permission): boolean;
        setReadOnly(): void;
        get readOnly(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PermissionCollection_ = PermissionCollection;
    interface Object2ObjectSortedMap <K, V> extends Internal.Object2ObjectMap<K, V>, Internal.SortedMap<K, V> {
        comparator(): Internal.Comparator<K>;
        object2ObjectEntrySet(): Internal.ObjectSortedSet<Internal.Object2ObjectMap$Entry<K, V>>;
        object2ObjectEntrySet(): Internal.ObjectSet<any>;
        entrySet(): Internal.ObjectSet<any>;
        entrySet(): Internal.Set<any>;
        entrySet(): Internal.ObjectSortedSet<Internal.Map$Entry<K, V>>;
        subMap(arg0: any, arg1: any): Internal.SortedMap<any, any>;
        subMap(arg0: K, arg1: K): Internal.Object2ObjectSortedMap<K, V>;
        values(): Internal.Collection<any>;
        values(): Internal.ObjectCollection<V>;
        headMap(arg0: any): Internal.SortedMap<any, any>;
        headMap(arg0: K): Internal.Object2ObjectSortedMap<K, V>;
        keySet(): Internal.Set<any>;
        keySet(): Internal.ObjectSet<any>;
        keySet(): Internal.ObjectSortedSet<K>;
        tailMap(arg0: K): Internal.Object2ObjectSortedMap<K, V>;
        tailMap(arg0: any): Internal.SortedMap<any, any>;
    }
    type Object2ObjectSortedMap_<K, V> = Object2ObjectSortedMap<K, V>;
    interface IPackResources extends Internal.ICache {
        getExistenceByResource(): Internal.Map<string, boolean>;
        setExistenceByResource(arg0: Internal.Map_<string, boolean>): void;
    }
    type IPackResources_ = IPackResources;
    class NetworkDirection extends Internal.Enum<Internal.NetworkDirection> {
        getEvent(arg0: Internal.ICustomPacket<any>, arg1: (() => Internal.NetworkEvent$Context)): Internal.NetworkEvent;
        getReceptionSide(): Internal.LogicalSide;
        static directionFor<T_>(arg0: Internal.Class_<T_>): Internal.NetworkDirection;
        buildPacket<T_>(arg0: Internal.Pair<Internal.PacketBuffer, number>, arg1: ResourceLocation_): Internal.ICustomPacket<T_>;
        static valueOf(arg0: string): Internal.NetworkDirection;
        static values(): Internal.NetworkDirection[];
        reply(): Internal.NetworkDirection;
        getOriginationSide(): Internal.LogicalSide;
        static readonly LOGIN_TO_CLIENT : Internal.NetworkDirection;
        static readonly PLAY_TO_SERVER : Internal.NetworkDirection;
        static readonly LOGIN_TO_SERVER : Internal.NetworkDirection;
        static readonly PLAY_TO_CLIENT : Internal.NetworkDirection;
        get receptionSide(): Internal.LogicalSide;
        get originationSide(): Internal.LogicalSide;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NetworkDirection_ = "play_to_server" | "play_to_client" | "login_to_server" | "login_to_client" | NetworkDirection;
    interface IArmorMaterial {
        func_200899_b(): Internal.SoundEvent;
        func_200897_d(): string;
        func_200898_c(): Internal.Ingredient;
        func_200896_a(arg0: EquipmentSlot_): number;
        func_230304_f_(): number;
        func_200901_e(): number;
        func_200902_b(arg0: EquipmentSlot_): number;
        func_200900_a(): number;
    }
    type IArmorMaterial_ = IArmorMaterial;
    interface ExistingFileHelper$IResourceType {
        getSuffix(): string;
        getPrefix(): string;
        getPackType(): Internal.ResourcePackType;
    }
    type ExistingFileHelper$IResourceType_ = ExistingFileHelper$IResourceType;
    class LootTableManager extends Internal.JsonReloadListener implements Internal.LootTablesKJS {
        static func_215301_a(arg0: Internal.LootTable): Internal.JsonElement;
        func_186521_a(arg0: ResourceLocation_): Internal.LootTable;
        func_215304_a(): Internal.Set<ResourceLocation>;
        static func_227508_a_(arg0: Internal.ValidationTracker, arg1: ResourceLocation_, arg2: Internal.LootTable): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootTableManager_ = LootTableManager;
    class HoverEvent extends Document.Object {
        hashCode(): number;
        equals(arg0: any): boolean;
        func_240663_b_(): Internal.JsonObject;
        func_150701_a(): Internal.HoverEvent$Action<any>;
        toString(): string;
        func_240662_a_<T_>(arg0: Internal.HoverEvent$Action<T_>): T_;
        static func_240661_a_(arg0: Internal.JsonObject): Internal.HoverEvent;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HoverEvent_ = HoverEvent;
    interface BiomeAmbience$GrassColorModifier$ColorModifier {
        modifyGrassColor(arg0: number, arg1: number, arg2: number): number;
    }
    type BiomeAmbience$GrassColorModifier$ColorModifier_ = ((arg0: number, arg1: number, arg2: number) => number) | BiomeAmbience$GrassColorModifier$ColorModifier;
    class ItemExpireEvent extends Internal.ItemEvent {
        getListenerList(): Internal.ListenerList;
        getExtraLife(): number;
        isCancelable(): boolean;
        setExtraLife(arg0: number): void;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get extraLife(): number;
        set extraLife(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemExpireEvent_ = ItemExpireEvent;
    class ItemStack extends Internal.CapabilityProvider<Internal.ItemStack> implements Internal.IForgeItemStack, Internal.ItemStackKJS {
        func_77953_t(): Internal.Rarity;
        func_77978_p(): Internal.CompoundNBT;
        func_222117_E(): boolean;
        func_190916_E(): number;
        func_185136_b(arg0: Internal.ItemStack): boolean;
        static func_185132_d(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_190926_b(): boolean;
        func_190920_e(arg0: number): void;
        func_77983_a(arg0: string, arg1: Internal.INBT): void;
        func_179548_a(arg0: Internal.World, arg1: Internal.BlockState, arg2: BlockPos, arg3: Internal.PlayerEntity): void;
        func_77955_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_77957_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: Hand_): Internal.ActionResult<Internal.ItemStack>;
        func_77951_h(): boolean;
        func_77976_d(): number;
        func_82841_c(arg0: number): void;
        func_82836_z(): Internal.ItemFrameEntity;
        func_185129_a(arg0: Internal.Attribute, arg1: Internal.AttributeModifier, arg2: EquipmentSlot_): void;
        func_190915_d(arg0: number): void;
        func_77946_l(): Internal.ItemStack;
        func_96631_a(arg0: number, arg1: Internal.Random, arg2: Internal.ServerPlayerEntity): boolean;
        func_234694_A_(): Internal.Entity;
        func_77942_o(): boolean;
        func_226629_F_(): Internal.SoundEvent;
        func_150997_a(arg0: Internal.BlockState): number;
        static func_77970_a(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_196083_e(arg0: string): void;
        func_200302_a(arg0: Internal.ITextComponent_): Internal.ItemStack;
        func_196085_b(arg0: number): void;
        func_111282_a_(arg0: Internal.PlayerEntity, arg1: Internal.LivingEntity, arg2: Hand_): Internal.ActionResultType;
        func_190917_f(arg0: number): void;
        func_206847_b(arg0: Internal.ITagCollectionSupplier, arg1: Internal.CachedBlockInfo): boolean;
        func_77974_b(arg0: Internal.World, arg1: Internal.LivingEntity, arg2: number): void;
        func_77984_f(): boolean;
        func_179543_a(arg0: string): Internal.CompoundNBT;
        func_77969_a(arg0: Internal.ItemStack): boolean;
        func_77948_v(): boolean;
        func_151000_E(): Internal.ITextComponent;
        func_77988_m(): number;
        static func_222120_a(arg0: Internal.List<Internal.ITextComponent>, arg1: Internal.ListNBT): void;
        func_77986_q(): Internal.ListNBT;
        func_111283_C(arg0: EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        func_190925_c(arg0: string): Internal.CompoundNBT;
        func_77956_u(): boolean;
        func_77980_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: number): void;
        func_77961_a(arg0: Internal.LivingEntity, arg1: Internal.PlayerEntity): void;
        func_222122_m(): boolean;
        func_77982_d(arg0: Internal.CompoundNBT): void;
        static func_179545_c(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_196082_o(): Internal.CompoundNBT;
        func_77977_a(): string;
        func_77979_a(arg0: number): Internal.ItemStack;
        func_77952_i(): number;
        func_82838_A(): number;
        func_77975_n(): Internal.UseAction;
        removeTagKJS(): void;
        func_82839_y(): boolean;
        func_77958_k(): number;
        func_82840_a(arg0: Internal.PlayerEntity, arg1: Internal.ITooltipFlag): Internal.List<Internal.ITextComponent>;
        func_226630_G_(): Internal.SoundEvent;
        func_82837_s(): boolean;
        func_234695_a_(arg0: Internal.Entity): void;
        func_190921_D(): number;
        func_200301_q(): Internal.ITextComponent;
        func_222118_a<T_>(arg0: number, arg1: T_, arg2: ((arg0: T_) => void)): void;
        onItemUseFirst(arg0: Internal.ItemUseContext): Internal.ActionResultType;
        deserializeNBT(arg0: Internal.CompoundNBT): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_150998_b(arg0: Internal.BlockState): boolean;
        func_77973_b(): Internal.Item;
        func_242395_a(arg0: Internal.ItemStack$TooltipDisplayFlags_): void;
        func_196084_a(arg0: Internal.ItemUseContext): Internal.ActionResultType;
        func_77950_b(arg0: Internal.World, arg1: Internal.LivingEntity): Internal.ItemStack;
        func_77945_a(arg0: Internal.World, arg1: Internal.Entity, arg2: number, arg3: boolean): void;
        func_190918_g(arg0: number): void;
        func_206848_a(arg0: Internal.ITagCollectionSupplier, arg1: Internal.CachedBlockInfo): boolean;
        func_77966_a(arg0: Internal.Enchantment, arg1: number): void;
        func_77985_e(): boolean;
        static func_77989_b(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_135074_t(): void;
        func_222121_b(arg0: Internal.World, arg1: Internal.LivingEntity, arg2: number): void;
        static func_199557_a(arg0: Internal.CompoundNBT): Internal.ItemStack;
        toString(): string;
        func_77962_s(): boolean;
        static readonly field_234691_a_ : Internal.Codec<Internal.ItemStack>;
        static readonly field_111284_a : Internal.DecimalFormat;
        static readonly field_190927_a : Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemStack_ = ItemStack;
    abstract class RenderPlayerEvent extends Internal.PlayerEvent {
        getLight(): number;
        getRenderer(): Internal.PlayerRenderer;
        getListenerList(): Internal.ListenerList;
        getPartialRenderTick(): number;
        getBuffers(): Internal.IRenderTypeBuffer;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get renderer(): Internal.PlayerRenderer;
        get light(): number;
        get listenerList(): Internal.ListenerList;
        get partialRenderTick(): number;
        get buffers(): Internal.IRenderTypeBuffer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderPlayerEvent_ = RenderPlayerEvent;
    interface DoubleStream$DoubleMapMultiConsumer {
        accept(arg0: number, arg1: ((arg0: number) => void)): void;
    }
    type DoubleStream$DoubleMapMultiConsumer_ = ((arg0: number, arg1: ((arg0: number) => void)) => void) | DoubleStream$DoubleMapMultiConsumer;
    class RegisterRecipeHandlersEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        registerShaped(id: ResourceLocation_): void;
        registerShapeless(id: ResourceLocation_): void;
        ignore(id: ResourceLocation_): void;
        ignore(id: string): void;
        register(id: string, f: (() => Internal.RecipeJS)): void;
        register(type: Internal.RecipeTypeJS): void;
        register(id: ResourceLocation_, f: (() => Internal.RecipeJS)): void;
        static readonly EVENT : Internal.Event<((arg0: Internal.RegisterRecipeHandlersEvent) => void)>;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegisterRecipeHandlersEvent_ = RegisterRecipeHandlersEvent;
    class PlayerEvent$SaveToFile extends Internal.PlayerEvent {
        getListenerList(): Internal.ListenerList;
        getPlayerFile(arg0: string): Internal.File;
        getPlayerDirectory(): Internal.File;
        getPlayerUUID(): string;
        get playerUUID(): string;
        get playerDirectory(): Internal.File;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerEvent$SaveToFile_ = PlayerEvent$SaveToFile;
    class ReloadRenderersEvent extends net.minecraftforge.eventbus.api.Event {
        getWorld(): Internal.ClientWorld;
        getListenerList(): Internal.ListenerList;
        get world(): Internal.ClientWorld;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ReloadRenderersEvent_ = ReloadRenderersEvent;
    class GameRenderer extends Document.Object implements Internal.IResourceManagerReloadListener, Internal.AutoCloseable {
        func_181022_b(): void;
        func_147706_e(): Internal.ShaderGroup;
        func_147701_i(): Internal.MapItemRenderer;
        func_228378_a_(arg0: number, arg1: number, arg2: Internal.MatrixStack): void;
        static func_180438_a(arg0: Internal.LivingEntity, arg1: number): number;
        func_78464_a(): void;
        func_175066_a(arg0: Internal.Entity): void;
        func_228385_m_(): Internal.OverlayTexture;
        func_190564_k(): void;
        func_147704_a(arg0: number, arg1: number): void;
        handler$zpb000$captureProjectionMatrix(matrix: Internal.Matrix4f, ci: Internal.CallbackInfo): void;
        func_215316_n(): Internal.ActiveRenderInfo;
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_190565_a(arg0: Internal.ItemStack): void;
        getResourceType(): Internal.IResourceType;
        func_228383_b_(arg0: Internal.MatrixStack, arg1: number): void;
        func_228382_a_(arg0: Internal.ActiveRenderInfo, arg1: number, arg2: boolean): Internal.Matrix4f;
        func_205002_d(arg0: number): number;
        close(): void;
        func_195458_a(arg0: number, arg1: number, arg2: boolean): void;
        func_228380_a_(arg0: Internal.MatrixStack, arg1: number): void;
        func_215311_a(arg0: Internal.ActiveRenderInfo, arg1: number, arg2: boolean): number;
        func_228379_a_(arg0: Internal.Matrix4f): void;
        func_205001_m(): number;
        func_78473_a(arg0: number): void;
        func_175071_c(): void;
        func_228384_l_(): Internal.LightTexture;
        func_175069_a(arg0: ResourceLocation_): void;
        field_78529_t : number;
        readonly field_78516_c : Internal.FirstPersonRenderer;
        field_175074_C : boolean;
        static readonly field_147708_e : 24;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameRenderer_ = GameRenderer;
    class MethodType extends Document.Object implements Internal.Constable, Internal.TypeDescriptor$OfMethod<Internal.Class<any>, Internal.MethodType>, Internal.Serializable {
        toMethodDescriptorString(): string;
        dropParameterTypes(arg0: number, arg1: number): Internal.TypeDescriptor$OfMethod<any, any>;
        dropParameterTypes(arg0: number, arg1: number): Internal.MethodType;
        changeReturnType(arg0: Internal.TypeDescriptor$OfField<any>): Internal.TypeDescriptor$OfMethod<any, any>;
        changeReturnType(arg0: Internal.Class_<any>): Internal.MethodType;
        static fromMethodDescriptorString(arg0: string, arg1: Internal.ClassLoader): Internal.MethodType;
        lastParameterType(): Internal.Class<any>;
        describeConstable(): Internal.Optional<Internal.MethodTypeDesc>;
        changeParameterType(arg0: number, arg1: Internal.Class_<any>): Internal.MethodType;
        changeParameterType(arg0: number, arg1: Internal.TypeDescriptor$OfField<any>): Internal.TypeDescriptor$OfMethod<any, any>;
        unwrap(): Internal.MethodType;
        hasWrappers(): boolean;
        static methodType(arg0: Internal.Class_<any>, arg1: Internal.Class_<any>, arg2: Internal.Class<any>[]): Internal.MethodType;
        static methodType(arg0: Internal.Class_<any>, arg1: Internal.Class_<any>): Internal.MethodType;
        static methodType(arg0: Internal.Class_<any>): Internal.MethodType;
        static methodType(arg0: Internal.Class_<any>, arg1: Internal.Class<any>[]): Internal.MethodType;
        static methodType(arg0: Internal.Class_<any>, arg1: Internal.List<Internal.Class<any>>): Internal.MethodType;
        static methodType(arg0: Internal.Class_<any>, arg1: Internal.MethodType): Internal.MethodType;
        parameterArray(): Internal.Class<any>[];
        parameterArray(): Internal.TypeDescriptor$OfField[];
        hashCode(): number;
        appendParameterTypes(arg0: Internal.List<Internal.Class<any>>): Internal.MethodType;
        appendParameterTypes(arg0: Internal.Class<any>[]): Internal.MethodType;
        parameterType(arg0: number): Internal.Class<any>;
        parameterType(arg0: number): Internal.TypeDescriptor$OfField<any>;
        erase(): Internal.MethodType;
        parameterCount(): number;
        descriptorString(): string;
        insertParameterTypes(arg0: number, arg1: Internal.List<Internal.Class<any>>): Internal.MethodType;
        insertParameterTypes(arg0: number, arg1: Internal.TypeDescriptor$OfField[]): Internal.TypeDescriptor$OfMethod<any, any>;
        insertParameterTypes(arg0: number, arg1: Internal.Class<any>[]): Internal.MethodType;
        generic(): Internal.MethodType;
        hasPrimitives(): boolean;
        equals(arg0: any): boolean;
        parameterList(): Internal.List<Internal.Class<any>>;
        toString(): string;
        static genericMethodType(arg0: number): Internal.MethodType;
        static genericMethodType(arg0: number, arg1: boolean): Internal.MethodType;
        wrap(): Internal.MethodType;
        returnType(): Internal.Class<any>;
        returnType(): Internal.TypeDescriptor$OfField<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MethodType_ = MethodType;
    interface IWindowEventListener {
        func_213228_a(arg0: boolean): void;
        func_241216_b_(): void;
        func_213226_a(): void;
    }
    type IWindowEventListener_ = IWindowEventListener;
    interface LongStream$LongMapMultiConsumer {
        accept(arg0: number, arg1: ((arg0: number) => void)): void;
    }
    type LongStream$LongMapMultiConsumer_ = ((arg0: number, arg1: ((arg0: number) => void)) => void) | LongStream$LongMapMultiConsumer;
    class EggEntity extends Internal.ProjectileItemEntity {
        func_70103_a(arg0: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EggEntity_ = EggEntity;
    class CClickWindowPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149543_e(): number;
        func_149544_d(): number;
        func_186993_f(): Internal.ClickType;
        func_149548_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149547_f(): number;
        func_149546_g(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CClickWindowPacket_ = CClickWindowPacket;
    interface Applicative <F, Mu> extends Internal.Functor<F, Mu> {
        point<A_>(arg0: A_): Internal.App<Mu, A_>;
        apply2<A_, B_, R_>(arg0: ((arg0: A_, arg1: B_) => R_), arg1: Internal.App<Mu, A_>, arg2: Internal.App<Mu, B_>): Internal.App<Mu, R_>;
        apply3<T1_, T2_, T3_, R_>(arg0: Internal.Function3<T1_, T2_, T3_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>): Internal.App<Mu, R_>;
        ap11<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, R_>(arg0: Internal.App<Mu, Internal.Function11<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>, arg11: Internal.App<Mu, T11_>): Internal.App<Mu, R_>;
        apply4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.Function4<T1_, T2_, T3_, T4_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>): Internal.App<Mu, R_>;
        ap2<A_, B_, R_>(arg0: Internal.App<Mu, ((arg0: A_, arg1: B_) => R_)>, arg1: Internal.App<Mu, A_>, arg2: Internal.App<Mu, B_>): Internal.App<Mu, R_>;
        ap10<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, R_>(arg0: Internal.App<Mu, Internal.Function10<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>): Internal.App<Mu, R_>;
        apply5<T1_, T2_, T3_, T4_, T5_, R_>(arg0: Internal.Function5<T1_, T2_, T3_, T4_, T5_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>): Internal.App<Mu, R_>;
        lift2<A_, B_, R_>(arg0: Internal.App<Mu, ((arg0: A_, arg1: B_) => R_)>): Internal.BiFunction<Internal.App<Mu, A_>, Internal.App<Mu, B_>, Internal.App<Mu, R_>>;
        ap4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.App<Mu, Internal.Function4<T1_, T2_, T3_, T4_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>): Internal.App<Mu, R_>;
        ap3<T1_, T2_, T3_, R_>(arg0: Internal.App<Mu, Internal.Function3<T1_, T2_, T3_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>): Internal.App<Mu, R_>;
        lift1<A_, R_>(arg0: Internal.App<Mu, ((arg0: A_) => R_)>): Internal.Function<Internal.App<Mu, A_>, Internal.App<Mu, R_>>;
        ap6<T1_, T2_, T3_, T4_, T5_, T6_, R_>(arg0: Internal.App<Mu, Internal.Function6<T1_, T2_, T3_, T4_, T5_, T6_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>): Internal.App<Mu, R_>;
        ap5<T1_, T2_, T3_, T4_, T5_, R_>(arg0: Internal.App<Mu, Internal.Function5<T1_, T2_, T3_, T4_, T5_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>): Internal.App<Mu, R_>;
        ap8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>(arg0: Internal.App<Mu, Internal.Function8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>): Internal.App<Mu, R_>;
        lift6<T1_, T2_, T3_, T4_, T5_, T6_, R_>(arg0: Internal.App<Mu, Internal.Function6<T1_, T2_, T3_, T4_, T5_, T6_, R_>>): Internal.Function6<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, T4_>, Internal.App<Mu, T5_>, Internal.App<Mu, T6_>, Internal.App<Mu, R_>>;
        ap7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>(arg0: Internal.App<Mu, Internal.Function7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>): Internal.App<Mu, R_>;
        lift5<T1_, T2_, T3_, T4_, T5_, R_>(arg0: Internal.App<Mu, Internal.Function5<T1_, T2_, T3_, T4_, T5_, R_>>): Internal.Function5<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, T4_>, Internal.App<Mu, T5_>, Internal.App<Mu, R_>>;
        lift4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.App<Mu, Internal.Function4<T1_, T2_, T3_, T4_, R_>>): Internal.Function4<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, T4_>, Internal.App<Mu, R_>>;
        ap9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>(arg0: Internal.App<Mu, Internal.Function9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>): Internal.App<Mu, R_>;
        lift3<T1_, T2_, T3_, R_>(arg0: Internal.App<Mu, Internal.Function3<T1_, T2_, T3_, R_>>): Internal.Function3<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, R_>>;
        apply6<T1_, T2_, T3_, T4_, T5_, T6_, R_>(arg0: Internal.Function6<T1_, T2_, T3_, T4_, T5_, T6_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>): Internal.App<Mu, R_>;
        apply7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>(arg0: Internal.Function7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>): Internal.App<Mu, R_>;
        lift9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>(arg0: Internal.App<Mu, Internal.Function9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>>): Internal.Function9<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, T4_>, Internal.App<Mu, T5_>, Internal.App<Mu, T6_>, Internal.App<Mu, T7_>, Internal.App<Mu, T8_>, Internal.App<Mu, T9_>, Internal.App<Mu, R_>>;
        apply8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>(arg0: Internal.Function8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>): Internal.App<Mu, R_>;
        lift8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>(arg0: Internal.App<Mu, Internal.Function8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>>): Internal.Function8<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, T4_>, Internal.App<Mu, T5_>, Internal.App<Mu, T6_>, Internal.App<Mu, T7_>, Internal.App<Mu, T8_>, Internal.App<Mu, R_>>;
        ap<A_, R_>(arg0: Internal.App<Mu, ((arg0: A_) => R_)>, arg1: Internal.App<Mu, A_>): Internal.App<Mu, R_>;
        ap<A_, R_>(arg0: ((arg0: A_) => R_), arg1: Internal.App<Mu, A_>): Internal.App<Mu, R_>;
        apply9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>(arg0: Internal.Function9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>): Internal.App<Mu, R_>;
        lift7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>(arg0: Internal.App<Mu, Internal.Function7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>>): Internal.Function7<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, T4_>, Internal.App<Mu, T5_>, Internal.App<Mu, T6_>, Internal.App<Mu, T7_>, Internal.App<Mu, R_>>;
        ap16<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_, R_>(arg0: Internal.App<Mu, Internal.Function16<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>, arg11: Internal.App<Mu, T11_>, arg12: Internal.App<Mu, T12_>, arg13: Internal.App<Mu, T13_>, arg14: Internal.App<Mu, T14_>, arg15: Internal.App<Mu, T15_>, arg16: Internal.App<Mu, T16_>): Internal.App<Mu, R_>;
        ap13<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, R_>(arg0: Internal.App<Mu, Internal.Function13<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>, arg11: Internal.App<Mu, T11_>, arg12: Internal.App<Mu, T12_>, arg13: Internal.App<Mu, T13_>): Internal.App<Mu, R_>;
        ap12<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, R_>(arg0: Internal.App<Mu, Internal.Function12<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>, arg11: Internal.App<Mu, T11_>, arg12: Internal.App<Mu, T12_>): Internal.App<Mu, R_>;
        ap15<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, R_>(arg0: Internal.App<Mu, Internal.Function15<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>, arg11: Internal.App<Mu, T11_>, arg12: Internal.App<Mu, T12_>, arg13: Internal.App<Mu, T13_>, arg14: Internal.App<Mu, T14_>, arg15: Internal.App<Mu, T15_>): Internal.App<Mu, R_>;
        ap14<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, R_>(arg0: Internal.App<Mu, Internal.Function14<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>, arg11: Internal.App<Mu, T11_>, arg12: Internal.App<Mu, T12_>, arg13: Internal.App<Mu, T13_>, arg14: Internal.App<Mu, T14_>): Internal.App<Mu, R_>;
    }
    type Applicative_<F, Mu> = Applicative<F, Mu>;
    class RecursivePoint$RecursivePointType <A> extends Internal.Type<A> {
        all(arg0: Internal.TypeRewriteRule, arg1: boolean, arg2: boolean): Internal.RewriteResult<A, any>;
        findTypeInChildren<FT_, FR_>(arg0: Internal.Type<FT_>, arg1: Internal.Type<FR_>, arg2: Internal.Type$TypeMatcher<FT_, FR_>, arg3: boolean): Internal.Either<Internal.TypedOptic<A, any, FT_, FR_>, Internal.Type$FieldNotFoundException>;
        updateMu(arg0: Internal.RecursiveTypeFamily): Internal.Type<any>;
        in(): Internal.View<A, A>;
        one(arg0: Internal.TypeRewriteRule): Internal.Optional<Internal.RewriteResult<A, any>>;
        index(): number;
        point(arg0: Internal.DynamicOps<any>): Internal.Optional<A>;
        out(): Internal.View<A, A>;
        findChoiceType(arg0: string, arg1: number): Internal.Optional<Internal.TaggedChoice$TaggedChoiceType<any>>;
        hashCode(): number;
        everywhere(arg0: Internal.TypeRewriteRule, arg1: Internal.PointFreeRule, arg2: boolean, arg3: boolean): Internal.Optional<Internal.RewriteResult<A, any>>;
        equals(arg0: any, arg1: boolean, arg2: boolean): boolean;
        toString(): string;
        buildTemplate(): Internal.TypeTemplate;
        family(): Internal.RecursiveTypeFamily;
        findFieldTypeOpt(arg0: string): Internal.Optional<Internal.Type<any>>;
        findCheckedType(arg0: number): Internal.Optional<Internal.Type<any>>;
        unfold(): Internal.Type<A>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecursivePoint$RecursivePointType_<A> = RecursivePoint$RecursivePointType<A>;
    interface ModelQuadView {
        getLight(arg0: number): number;
        getNormal(arg0: number): number;
        getTexV(arg0: number): number;
        getTexU(arg0: number): number;
        getX(arg0: number): number;
        getY(arg0: number): number;
        getColorIndex(): number;
        getZ(arg0: number): number;
        copyInto(buf: Internal.ByteBuffer, position: number): void;
        getColor(arg0: number): number;
        rubidium$getSprite(): Internal.TextureAtlasSprite;
        getFlags(): number;
    }
    type ModelQuadView_ = ModelQuadView;
    interface MapDecoder <A> extends Internal.Keyable {
        flatMap<B_>(arg0: ((arg0: A) => Internal.DataResult<B_>)): Internal.MapDecoder<B_>;
        compressedDecode<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<A>;
        decoder(): Internal.Decoder<A>;
        decode<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.MapLike<T_>): Internal.DataResult<A>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.MapDecoder<A>;
        map<B_>(arg0: ((arg0: A) => B_)): Internal.MapDecoder<B_>;
        ap<E_>(arg0: Internal.MapDecoder<((arg0: A) => E_)>): Internal.MapDecoder<E_>;
        compressor<T_>(arg0: Internal.DynamicOps<T_>): Internal.KeyCompressor<T_>;
    }
    type MapDecoder_<A> = MapDecoder<A>;
    class CSteerBoatPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_187014_b(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_187012_a(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CSteerBoatPacket_ = CSteerBoatPacket;
    interface INBTSerializable <T> {
        serializeNBT(): T;
        deserializeNBT(arg0: T): void;
    }
    type INBTSerializable_<T> = INBTSerializable<T>;
    class FMLModIdMappingEvent$ModRemapping extends Document.Object {
        readonly registry : ResourceLocation;
        readonly newId : number;
        readonly oldId : number;
        readonly key : ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FMLModIdMappingEvent$ModRemapping_ = FMLModIdMappingEvent$ModRemapping;
    class ZoglinEntity extends Internal.MonsterEntity implements Internal.IMob, Internal.IFlinging {
        func_82227_f(arg0: boolean): void;
        static func_234339_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_230290_eL_(): number;
        func_70103_a(arg0: number): void;
        func_213375_cj(): Internal.Brain<Internal.ZoglinEntity>;
        func_70042_X(): number;
        func_234331_eI_(): boolean;
        func_70668_bt(): Internal.CreatureAttribute;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_70636_d(): void;
        func_184652_a(arg0: Internal.PlayerEntity): boolean;
        func_70631_g_(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZoglinEntity_ = ZoglinEntity;
    abstract class AbstractVillagerEntity extends Internal.AgeableEntity implements Internal.INPC, Internal.IMerchant {
        func_213704_a(arg0: Internal.MerchantOffer): void;
        func_213703_a(arg0: Internal.MerchantOffers): void;
        func_174820_d(arg0: number, arg1: Internal.ItemStack): boolean;
        func_213705_dZ(): boolean;
        func_213720_r(arg0: number): void;
        func_241843_o(arg0: number): Vec3;
        changeDimension(arg0: Internal.ServerWorld, arg1: Internal.ITeleporter): Internal.Entity;
        architectury$handleOffer(offer: Internal.MerchantOffer): Internal.MerchantOffer;
        func_213719_ec(): number;
        func_213716_dX(): boolean;
        func_213702_q(arg0: number): void;
        func_190670_t_(): Internal.World;
        func_213711_eb(): void;
        func_213715_ed(): Internal.Inventory;
        func_70931_l_(): Internal.PlayerEntity;
        func_213706_dY(): Internal.MerchantOffers;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        architectury$getMaxOfferOverride(): number;
        redirect$zkf000$overrideIterator(set: Internal.Set<any>, offers: Internal.MerchantOffers, itemListings: Internal.VillagerTrades$ITrade[], maxOffers: number): Internal.Iterator<any>;
        localvar$zkf000$handleOffer(offer: Internal.MerchantOffer): Internal.MerchantOffer;
        func_70932_a_(arg0: Internal.PlayerEntity): void;
        func_70645_a(arg0: Internal.DamageSource): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_110297_a_(arg0: Internal.ItemStack): void;
        func_213714_ea(): Internal.SoundEvent;
        func_184652_a(arg0: Internal.PlayerEntity): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_213708_dV(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractVillagerEntity_ = AbstractVillagerEntity;
    interface Era extends Internal.TemporalAccessor, Internal.TemporalAdjuster {
        getLong(arg0: Internal.TemporalField): number;
        getValue(): number;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        get(arg0: Internal.TemporalField): number;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        isSupported(arg0: Internal.TemporalField): boolean;
    }
    type Era_ = Era;
    class LootParameter <T> extends Document.Object {
        toString(): string;
        func_216247_a(): ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootParameter_<T> = LootParameter<T>;
    interface ChunkStatusListenerManager {
        setListener(arg0: Internal.ChunkStatusListener): void;
    }
    type ChunkStatusListenerManager_ = ChunkStatusListenerManager;
    class StructureManager extends Document.Object {
        func_235005_a_(): boolean;
        func_235011_a_(arg0: Internal.SectionPos, arg1: Internal.Structure<any>): Internal.Stream<Internal.StructureStart<any>>;
        func_235010_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Structure<any>): Internal.StructureStart<any>;
        func_235012_a_(arg0: Internal.SectionPos, arg1: Internal.Structure<any>, arg2: number, arg3: Internal.IStructureReader): void;
        func_235013_a_(arg0: Internal.SectionPos, arg1: Internal.Structure<any>, arg2: Internal.IStructureReader): Internal.StructureStart<any>;
        func_235014_a_(arg0: Internal.SectionPos, arg1: Internal.Structure<any>, arg2: Internal.StructureStart<any>, arg3: Internal.IStructureReader): void;
        func_241464_a_(arg0: Internal.WorldGenRegion): Internal.StructureManager;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureManager_ = StructureManager;
    class AtlasTexture extends Internal.Texture implements Internal.ITickable {
        func_195424_a(arg0: ResourceLocation_): Internal.TextureAtlasSprite;
        func_195413_a(arg0: Internal.IResourceManager): void;
        func_229221_b_(arg0: Internal.AtlasTexture$SheetData): void;
        func_195419_g(): void;
        func_229220_a_(arg0: Internal.IResourceManager, arg1: Internal.Stream<ResourceLocation>, arg2: Internal.IProfiler, arg3: number): Internal.AtlasTexture$SheetData;
        handler$zbp000$stealAtlasData(arg0: Internal.IResourceManager, arg1: Internal.Stream<any>, arg2: Internal.IProfiler, arg3: number, arg4: Internal.CallbackInfoReturnable<any>): void;
        func_229223_g_(): ResourceLocation;
        func_110550_d(): void;
        func_94248_c(): void;
        func_215260_a(arg0: Internal.AtlasTexture$SheetData): void;
        static readonly field_110575_b : ResourceLocation;
        static readonly field_215262_g : ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AtlasTexture_ = AtlasTexture;
    class RenderGameOverlayEvent$Pre extends Internal.RenderGameOverlayEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderGameOverlayEvent$Pre_ = RenderGameOverlayEvent$Pre;
    class ServerScoreboard extends Internal.Scoreboard {
        func_178820_a(arg0: string, arg1: Internal.ScoreObjective): void;
        func_186684_a(arg0: (() => void)): void;
        func_96549_e(arg0: Internal.ScoreObjective): void;
        func_96548_f(arg0: Internal.ScoreObjective): Internal.List<Internal.IPacket<any>>;
        func_96546_g(arg0: Internal.ScoreObjective): void;
        func_96516_a(arg0: string): void;
        func_96538_b(arg0: Internal.ScorePlayerTeam): void;
        func_96552_h(arg0: Internal.ScoreObjective): number;
        func_96536_a(arg0: Internal.Score): void;
        func_96512_b(arg0: string, arg1: Internal.ScorePlayerTeam): void;
        func_199869_b(arg0: Internal.ScoreObjective): void;
        func_96513_c(arg0: Internal.ScorePlayerTeam): void;
        func_96523_a(arg0: Internal.ScorePlayerTeam): void;
        func_197901_a(arg0: string, arg1: Internal.ScorePlayerTeam): boolean;
        func_96533_c(arg0: Internal.ScoreObjective): void;
        func_96522_a(arg0: Internal.ScoreObjective): void;
        func_96550_d(arg0: Internal.ScoreObjective): Internal.List<Internal.IPacket<any>>;
        func_96530_a(arg0: number, arg1: Internal.ScoreObjective): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerScoreboard_ = ServerScoreboard;
    class ModuleDescriptor extends Document.Object implements Internal.Comparable<Internal.ModuleDescriptor> {
        static read(arg0: Internal.InputStream, arg1: (() => Internal.Set<string>)): Internal.ModuleDescriptor;
        static read(arg0: Internal.InputStream): Internal.ModuleDescriptor;
        static read(arg0: Internal.ByteBuffer, arg1: (() => Internal.Set<string>)): Internal.ModuleDescriptor;
        static read(arg0: Internal.ByteBuffer): Internal.ModuleDescriptor;
        toNameAndVersion(): string;
        mainClass(): Internal.Optional<string>;
        exports(): Internal.Set<Internal.ModuleDescriptor$Exports>;
        rawVersion(): Internal.Optional<string>;
        compareTo(arg0: Internal.ModuleDescriptor): number;
        compareTo(arg0: any): number;
        packages(): Internal.Set<string>;
        modifiers(): Internal.Set<Internal.ModuleDescriptor$Modifier>;
        version(): Internal.Optional<Internal.ModuleDescriptor$Version>;
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        static newAutomaticModule(arg0: string): Internal.ModuleDescriptor$Builder;
        isOpen(): boolean;
        provides(): Internal.Set<Internal.ModuleDescriptor$Provides>;
        hashCode(): number;
        static newOpenModule(arg0: string): Internal.ModuleDescriptor$Builder;
        equals(arg0: any): boolean;
        static newModule(arg0: string, arg1: Internal.Set<Internal.ModuleDescriptor$Modifier>): Internal.ModuleDescriptor$Builder;
        static newModule(arg0: string): Internal.ModuleDescriptor$Builder;
        name(): string;
        opens(): Internal.Set<Internal.ModuleDescriptor$Opens>;
        uses(): Internal.Set<string>;
        toString(): string;
        isAutomatic(): boolean;
        requires(): Internal.Set<Internal.ModuleDescriptor$Requires>;
        get automatic(): boolean;
        get open(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleDescriptor_ = ModuleDescriptor;
    interface BooleanSupplier {
        getAsBoolean(): boolean;
    }
    type BooleanSupplier_ = (() => boolean) | BooleanSupplier;
    abstract class Invokable <T, R> extends Internal.Element implements Internal.GenericDeclaration {
        getExceptionTypes(): Internal.ImmutableList<Internal.TypeToken<Internal.Throwable>>;
        getDeclaringClass(): Internal.Class<T>;
        getReturnType(): Internal.TypeToken<R>;
        isVarArgs(): boolean;
        hashCode(): number;
        returning<R1_>(arg0: Internal.Class_<R1_>): Internal.Invokable<T, R1_>;
        returning<R1_>(arg0: Internal.TypeToken<R1_>): Internal.Invokable<T, R1_>;
        equals(arg0: any): boolean;
        getParameters(): Internal.ImmutableList<Internal.Parameter>;
        isOverridable(): boolean;
        static from(arg0: Internal.Method): Internal.Invokable<any, any>;
        static from<T_>(arg0: Internal.Constructor<T_>): Internal.Invokable<T_, T_>;
        toString(): string;
        invoke(arg0: T, arg1: any[]): R;
        getOwnerType(): Internal.TypeToken<T>;
        get ownerType(): Internal.TypeToken<T>;
        get exceptionTypes(): Internal.ImmutableList<Internal.TypeToken<Internal.Throwable>>;
        get overridable(): boolean;
        get parameters(): Internal.ImmutableList<Internal.Parameter>;
        get returnType(): Internal.TypeToken<R>;
        get declaringClass(): Internal.Class<T>;
        get varArgs(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Invokable_<T, R> = Invokable<T, R>;
    class BorderStatus extends Internal.Enum<Internal.BorderStatus> {
        func_177766_a(): number;
        static valueOf(arg0: string): Internal.BorderStatus;
        static values(): Internal.BorderStatus[];
        static readonly GROWING : Internal.BorderStatus;
        static readonly SHRINKING : Internal.BorderStatus;
        static readonly STATIONARY : Internal.BorderStatus;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BorderStatus_ = "growing" | "shrinking" | "stationary" | BorderStatus;
    interface FileFilter {
        accept(arg0: Internal.File): boolean;
    }
    type FileFilter_ = ((arg0: Internal.File) => boolean) | FileFilter;
    interface IAngerable {
        func_70638_az(): Internal.LivingEntity;
        func_230256_F__(): number;
        func_233678_J__(): boolean;
        func_230246_e_(arg0: Internal.PlayerEntity): void;
        func_230258_H__(): void;
        func_241355_J__(): void;
        func_230260_a__(arg0: number): void;
        func_233682_c_(arg0: Internal.CompoundNBT): void;
        func_70624_b(arg0: Internal.LivingEntity): void;
        func_233681_b_(arg0: Internal.PlayerEntity): void;
        func_233680_b_(arg0: Internal.LivingEntity): boolean;
        func_241359_a_(arg0: Internal.ServerWorld, arg1: boolean): void;
        func_70604_c(arg0: Internal.LivingEntity): void;
        func_241358_a_(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT): void;
        func_241357_a_(arg0: Internal.World): boolean;
        func_230257_G__(): Internal.UUID;
        func_241356_K__(): void;
        func_230259_a_(arg0: Internal.UUID): void;
    }
    type IAngerable_ = IAngerable;
    class RenderNameplateEvent extends Internal.EntityEvent {
        getEntityRenderer(): Internal.EntityRenderer<any>;
        setContent(arg0: Internal.ITextComponent_): void;
        getListenerList(): Internal.ListenerList;
        getRenderTypeBuffer(): Internal.IRenderTypeBuffer;
        getPartialTicks(): number;
        getContent(): Internal.ITextComponent;
        hasResult(): boolean;
        getOriginalContent(): Internal.ITextComponent;
        getPackedLight(): number;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get entityRenderer(): Internal.EntityRenderer<any>;
        get listenerList(): Internal.ListenerList;
        get renderTypeBuffer(): Internal.IRenderTypeBuffer;
        get content(): Internal.ITextComponent;
        get originalContent(): Internal.ITextComponent;
        get partialTicks(): number;
        get packedLight(): number;
        set content(arg0: Internal.ITextComponent_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderNameplateEvent_ = RenderNameplateEvent;
    interface Debugger {
        handleCompilationDone(arg0: Internal.Context, arg1: Internal.DebuggableScript, arg2: string): void;
        getFrame(arg0: Internal.Context, arg1: Internal.DebuggableScript): Internal.DebugFrame;
    }
    type Debugger_ = Debugger;
    class TrappedChestTileEntity extends Internal.ChestTileEntity {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TrappedChestTileEntity_ = TrappedChestTileEntity;
    abstract class SittingPhase extends Internal.Phase {
        func_221113_a(arg0: Internal.DamageSource, arg1: number): number;
        func_188654_a(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SittingPhase_ = SittingPhase;
    class MerchantOffers extends Internal.ArrayList<Internal.MerchantOffer> {
        func_222199_a(): Internal.CompoundNBT;
        static func_222198_b(arg0: Internal.PacketBuffer): Internal.MerchantOffers;
        func_222197_a(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: number): Internal.MerchantOffer;
        func_222196_a(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MerchantOffers_ = MerchantOffers;
    interface BucketItemKJS {
        getFluidKJS(): Internal.Fluid;
    }
    type BucketItemKJS_ = BucketItemKJS;
    interface IBlockReader {
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        func_217301_I(): number;
        func_201572_C(): number;
        func_242403_h(arg0: BlockPos): number;
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_242402_a(arg0: Internal.VoxelShape, arg1: (() => Internal.VoxelShape)): number;
        func_217298_h(arg0: BlockPos): number;
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
    }
    type IBlockReader_ = IBlockReader;
    class RuleStructureProcessor extends Internal.StructureProcessor {
        func_230386_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings): Internal.Template$BlockInfo;
        static readonly field_237125_a_ : Internal.Codec<Internal.RuleStructureProcessor>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RuleStructureProcessor_ = RuleStructureProcessor;
    interface AddressLayout extends Internal.ValueLayout {
        targetLayout(): Internal.Optional<Internal.MemoryLayout>;
        withoutTargetLayout(): Internal.AddressLayout;
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.AddressLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.AddressLayout;
        withTargetLayout(arg0: Internal.MemoryLayout): Internal.AddressLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.AddressLayout;
        withByteAlignment(arg0: number): Internal.AddressLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type AddressLayout_ = AddressLayout;
    class CookingRecipeJS extends Internal.RecipeJS {
        serialize(): void;
        xp(xp: number): Internal.CookingRecipeJS;
        create(args: Internal.ListJS): void;
        cookingTime(time: number): Internal.CookingRecipeJS;
        deserialize(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CookingRecipeJS_ = CookingRecipeJS;
    abstract class WaterMobEntity extends Internal.CreatureEntity {
        func_70648_aU(): boolean;
        func_70668_bt(): Internal.CreatureAttribute;
        func_205019_a(arg0: Internal.IWorldReader): boolean;
        func_96092_aw(): boolean;
        func_184652_a(arg0: Internal.PlayerEntity): boolean;
        func_70030_z(): void;
        func_70627_aG(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WaterMobEntity_ = WaterMobEntity;
    class PaintingEntity extends Internal.HangingEntity {
        func_82329_d(): number;
        func_213297_N(): Internal.IPacket<any>;
        func_180426_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        func_110128_b(arg0: Internal.Entity): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_82330_g(): number;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70012_b(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_184523_o(): void;
        field_70522_e : Internal.PaintingType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PaintingEntity_ = PaintingEntity;
    abstract class AnimalEntity extends Internal.AgeableEntity {
        func_234177_a_(arg0: Internal.ServerWorld, arg1: Internal.AnimalEntity): void;
        func_70880_s(): boolean;
        func_70875_t(): void;
        func_70103_a(arg0: number): void;
        func_70033_W(): number;
        func_146082_f(arg0: Internal.PlayerEntity): void;
        func_213397_c(arg0: number): boolean;
        func_191993_do(): Internal.ServerPlayerEntity;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        static func_223316_b(arg0: Internal.EntityType<Internal.AnimalEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_204700_e(arg0: number): void;
        func_70878_b(arg0: Internal.AnimalEntity): boolean;
        func_204701_dC(): boolean;
        func_70636_d(): void;
        func_234178_eO_(): number;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70627_aG(): number;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        field_70881_d : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AnimalEntity_ = AnimalEntity;
    class RenderTooltipEvent$Pre extends Internal.RenderTooltipEvent {
        setY(arg0: number): void;
        getListenerList(): Internal.ListenerList;
        setX(arg0: number): void;
        setScreenHeight(arg0: number): void;
        getScreenWidth(): number;
        setMaxWidth(arg0: number): void;
        setScreenWidth(arg0: number): void;
        isCancelable(): boolean;
        setFontRenderer(arg0: Internal.FontRenderer): void;
        getMaxWidth(): number;
        getScreenHeight(): number;
        get screenWidth(): number;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get screenHeight(): number;
        get maxWidth(): number;
        set screenWidth(arg0: number);
        set screenHeight(arg0: number);
        set x(arg0: number);
        set y(arg0: number);
        set fontRenderer(arg0: Internal.FontRenderer);
        set maxWidth(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderTooltipEvent$Pre_ = RenderTooltipEvent$Pre;
    class PushReaction extends Internal.Enum<Internal.PushReaction> {
        static valueOf(arg0: string): Internal.PushReaction;
        static values(): Internal.PushReaction[];
        static readonly DESTROY : Internal.PushReaction;
        static readonly BLOCK : Internal.PushReaction;
        static readonly PUSH_ONLY : Internal.PushReaction;
        static readonly IGNORE : Internal.PushReaction;
        static readonly NORMAL : Internal.PushReaction;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PushReaction_ = "normal" | "destroy" | "block" | "ignore" | "push_only" | PushReaction;
    class ArmorDyeRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ArmorDyeRecipe_ = ArmorDyeRecipe;
    class NearestPlayersSensor extends Internal.Sensor<Internal.LivingEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NearestPlayersSensor_ = NearestPlayersSensor;
    class GuiScreenEvent$KeyboardKeyPressedEvent$Post extends Internal.GuiScreenEvent$KeyboardKeyPressedEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$KeyboardKeyPressedEvent$Post_ = GuiScreenEvent$KeyboardKeyPressedEvent$Post;
    interface Script {
        exec(arg0: Internal.Context, arg1: Internal.Scriptable): any;
    }
    type Script_ = Script;
    class Products$P5 <F, T1, T2, T3, T4, T5> extends Document.Object {
        t4(): Internal.App<F, T4>;
        t5(): Internal.App<F, T5>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function5<T1, T2, T3, T4, T5, R_>>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function5<T1, T2, T3, T4, T5, R_>): Internal.App<F, R_>;
        and<T6_, T7_, T8_>(arg0: Internal.Products$P3<F, T6_, T7_, T8_>): Internal.Products$P8<F, T1, T2, T3, T4, T5, T6_, T7_, T8_>;
        and<T6_, T7_>(arg0: Internal.Products$P2<F, T6_, T7_>): Internal.Products$P7<F, T1, T2, T3, T4, T5, T6_, T7_>;
        and<T6_>(arg0: Internal.App<F, T6_>): Internal.Products$P6<F, T1, T2, T3, T4, T5, T6_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        t3(): Internal.App<F, T3>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P5_<F, T1, T2, T3, T4, T5> = Products$P5<F, T1, T2, T3, T4, T5>;
    class ConditionArraySerializer extends Document.Object {
        func_235681_a_(arg0: Internal.ILootCondition[]): Internal.JsonElement;
        static readonly field_235679_a_ : Internal.ConditionArraySerializer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ConditionArraySerializer_ = ConditionArraySerializer;
    class ImmutableList$Builder <E> extends Internal.ImmutableCollection$ArrayBasedBuilder<E> {
        add(arg0: any[]): Internal.ImmutableCollection$Builder<any>;
        add(arg0: E[]): Internal.ImmutableList$Builder<E>;
        add(arg0: any): Internal.ImmutableCollection$Builder<any>;
        add(arg0: any): Internal.ImmutableCollection$ArrayBasedBuilder<any>;
        add(arg0: E): Internal.ImmutableList$Builder<E>;
        build(): Internal.ImmutableList<E>;
        build(): Internal.ImmutableCollection<any>;
        addAll(arg0: Internal.Iterable<E>): Internal.ImmutableList$Builder<E>;
        addAll(arg0: Internal.Iterable<any>): Internal.ImmutableCollection$Builder<any>;
        addAll(arg0: Internal.Iterator<any>): Internal.ImmutableCollection$Builder<any>;
        addAll(arg0: Internal.Iterator<E>): Internal.ImmutableList$Builder<E>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableList$Builder_<E> = ImmutableList$Builder<E>;
    interface DataOutput {
        writeChar(arg0: number): void;
        writeInt(arg0: number): void;
        writeLong(arg0: number): void;
        writeByte(arg0: number): void;
        writeBytes(arg0: string): void;
        writeUTF(arg0: string): void;
        writeShort(arg0: number): void;
        writeChars(arg0: string): void;
        writeFloat(arg0: number): void;
        write(arg0: number[], arg1: number, arg2: number): void;
        write(arg0: number[]): void;
        write(arg0: number): void;
        writeBoolean(arg0: boolean): void;
        writeDouble(arg0: number): void;
    }
    type DataOutput_ = DataOutput;
    class HoglinMobsSensor extends Internal.Sensor<Internal.HoglinEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HoglinMobsSensor_ = HoglinMobsSensor;
    abstract class Enchantment extends Internal.ForgeRegistryEntry<Internal.Enchantment> {
        func_190936_d(): boolean;
        func_77320_a(): string;
        func_77321_a(arg0: number): number;
        func_77324_c(): Internal.Enchantment$Rarity;
        func_77325_b(): number;
        static func_185262_c(arg0: number): Internal.Enchantment;
        func_92089_a(arg0: Internal.ItemStack): boolean;
        func_230310_i_(): boolean;
        isAllowedOnBooks(): boolean;
        getTags(): Internal.Set<ResourceLocation>;
        func_223551_b(arg0: number): number;
        func_200305_d(arg0: number): Internal.ITextComponent;
        func_191560_c(arg0: Internal.Enchantment): boolean;
        func_222181_a(arg0: Internal.LivingEntity): Internal.Map<EquipmentSlot, Internal.ItemStack>;
        func_152376_a(arg0: number, arg1: Internal.CreatureAttribute): number;
        func_185261_e(): boolean;
        func_77318_a(arg0: number, arg1: Internal.DamageSource): number;
        func_151367_b(arg0: Internal.LivingEntity, arg1: Internal.Entity, arg2: number): void;
        func_151368_a(arg0: Internal.LivingEntity, arg1: Internal.Entity, arg2: number): void;
        func_77319_d(): number;
        func_230309_h_(): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack): boolean;
        isIn(arg0: Internal.ITag<Internal.Enchantment>): boolean;
        readonly field_77351_y : Internal.EnchantmentType;
        get allowedOnBooks(): boolean;
        get tags(): Internal.Set<ResourceLocation>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Enchantment_ = Enchantment;
    interface DoubleToLongFunction {
        applyAsLong(arg0: number): number;
    }
    type DoubleToLongFunction_ = ((arg0: number) => number) | DoubleToLongFunction;
    class SChatPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_240810_e_(): Internal.UUID;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148916_d(): boolean;
        func_148915_c(): Internal.ITextComponent;
        func_192590_c(): Internal.ChatType;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SChatPacket_ = SChatPacket;
    abstract class AgeableEntity extends Internal.CreatureEntity {
        func_70873_a(arg0: number): void;
        func_82227_f(arg0: boolean): void;
        func_70874_b(): number;
        func_213743_em(): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70636_d(): void;
        func_70631_g_(): boolean;
        func_175501_a(arg0: number, arg1: boolean): void;
        func_110195_a(arg0: number): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AgeableEntity_ = AgeableEntity;
    class FoodStats extends Document.Object {
        func_75115_e(): number;
        func_75117_b(arg0: Internal.CompoundNBT): void;
        func_75118_a(arg0: Internal.PlayerEntity): void;
        func_221410_a(arg0: Internal.Item, arg1: Internal.ItemStack): void;
        func_75119_b(arg0: number): void;
        func_75112_a(arg0: Internal.CompoundNBT): void;
        func_75116_a(): number;
        func_75122_a(arg0: number, arg1: number): void;
        func_75114_a(arg0: number): void;
        func_75113_a(arg0: number): void;
        func_75121_c(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FoodStats_ = FoodStats;
    interface ITextProperties$ITextAcceptor <T> {
        accept(arg0: string): Internal.Optional<T>;
    }
    type ITextProperties$ITextAcceptor_<T> = ITextProperties$ITextAcceptor<T>;
    class BlockStateProviderType <P> extends Internal.ForgeRegistryEntry<Internal.BlockStateProviderType<any>> {
        func_236799_a_(): Internal.Codec<P>;
        static readonly field_227394_a_ : Internal.BlockStateProviderType<Internal.SimpleBlockStateProvider>;
        static readonly field_236797_e_ : Internal.BlockStateProviderType<Internal.AxisRotatingBlockStateProvider>;
        static readonly field_227397_d_ : Internal.BlockStateProviderType<Internal.ForestFlowerBlockStateProvider>;
        static readonly field_227396_c_ : Internal.BlockStateProviderType<Internal.PlainFlowerBlockStateProvider>;
        static readonly field_227395_b_ : Internal.BlockStateProviderType<Internal.WeightedBlockStateProvider>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockStateProviderType_<P> = BlockStateProviderType<P>;
    interface IProgressUpdate {
        func_200210_a(arg0: Internal.ITextComponent_): void;
        func_200211_b(arg0: Internal.ITextComponent_): void;
        func_146586_a(): void;
        func_200209_c(arg0: Internal.ITextComponent_): void;
        func_73718_a(arg0: number): void;
    }
    type IProgressUpdate_ = IProgressUpdate;
    class BitSet extends Document.Object implements Internal.Cloneable, Internal.Serializable {
        nextClearBit(arg0: number): number;
        previousClearBit(arg0: number): number;
        or(arg0: Internal.BitSet): void;
        set(arg0: number, arg1: boolean): void;
        set(arg0: number): void;
        set(arg0: number, arg1: number): void;
        set(arg0: number, arg1: number, arg2: boolean): void;
        toLongArray(): number[];
        intersects(arg0: Internal.BitSet): boolean;
        static valueOf(arg0: number[]): Internal.BitSet;
        static valueOf(arg0: number[]): Internal.BitSet;
        static valueOf(arg0: Internal.LongBuffer): Internal.BitSet;
        static valueOf(arg0: Internal.ByteBuffer): Internal.BitSet;
        previousSetBit(arg0: number): number;
        isEmpty(): boolean;
        clear(arg0: number, arg1: number): void;
        clear(): void;
        clear(arg0: number): void;
        length(): number;
        nextSetBit(arg0: number): number;
        cardinality(): number;
        size(): number;
        stream(): Internal.IntStream;
        and(arg0: Internal.BitSet): void;
        hashCode(): number;
        toByteArray(): number[];
        equals(arg0: any): boolean;
        get(arg0: number): boolean;
        get(arg0: number, arg1: number): Internal.BitSet;
        clone(): any;
        xor(arg0: Internal.BitSet): void;
        toString(): string;
        flip(arg0: number, arg1: number): void;
        flip(arg0: number): void;
        andNot(arg0: Internal.BitSet): void;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BitSet_ = BitSet;
    class SEntityEquipmentPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_241790_c_(): Internal.List<com.mojang.datafixers.util.Pair<EquipmentSlot, Internal.ItemStack>>;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149389_d(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SEntityEquipmentPacket_ = SEntityEquipmentPacket;
    class LivingEntityDropsEventJS extends Internal.LivingEntityEventJS {
        addDrop(item: any): Internal.ItemEntityJS;
        addDrop(item: any, chance: number): Internal.ItemEntityJS;
        getLootingLevel(): number;
        getSource(): Internal.DamageSourceJS;
        getDrops(): Internal.List<Internal.ItemEntityJS>;
        getEntity(): Internal.EntityJS;
        isRecentlyHit(): boolean;
        canCancel(): boolean;
        eventDrops : Internal.List<Internal.ItemEntityJS>;
        get drops(): Internal.List<Internal.ItemEntityJS>;
        get recentlyHit(): boolean;
        get lootingLevel(): number;
        get source(): Internal.DamageSourceJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingEntityDropsEventJS_ = LivingEntityDropsEventJS;
    class StructureProcessorList extends Document.Object {
        toString(): string;
        func_242919_a(): Internal.List<Internal.StructureProcessor>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureProcessorList_ = StructureProcessorList;
    class CriterionProgress extends Document.Object {
        func_192151_a(): boolean;
        func_192153_b(): void;
        func_192154_c(): void;
        func_193140_d(): Internal.Date;
        static func_209541_a(arg0: string): Internal.CriterionProgress;
        static func_192149_a(arg0: Internal.PacketBuffer): Internal.CriterionProgress;
        toString(): string;
        func_192148_e(): Internal.JsonElement;
        func_192150_a(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CriterionProgress_ = CriterionProgress;
    interface StarLightLightingProvider {
        getLightEngine(): Internal.StarLightInterface;
        clientUpdateLight(arg0: Internal.LightType_, arg1: Internal.SectionPos, arg2: Internal.NibbleArray, arg3: boolean): void;
        clientRemoveLightData(arg0: Internal.ChunkPos): void;
        clientChunkLoad(arg0: Internal.ChunkPos, arg1: Internal.Chunk): void;
    }
    type StarLightLightingProvider_ = StarLightLightingProvider;
    interface Thread$Builder$OfPlatform extends Internal.Thread$Builder {
        inheritInheritableThreadLocals(arg0: boolean): Internal.Thread$Builder$OfPlatform;
        inheritInheritableThreadLocals(arg0: boolean): Internal.Thread$Builder;
        stackSize(arg0: number): Internal.Thread$Builder$OfPlatform;
        name(arg0: string, arg1: number): Internal.Thread$Builder;
        name(arg0: string, arg1: number): Internal.Thread$Builder$OfPlatform;
        name(arg0: string): Internal.Thread$Builder;
        name(arg0: string): Internal.Thread$Builder$OfPlatform;
        priority(arg0: number): Internal.Thread$Builder$OfPlatform;
        uncaughtExceptionHandler(arg0: ((arg0: Internal.Thread, arg1: Internal.Throwable) => void)): Internal.Thread$Builder$OfPlatform;
        uncaughtExceptionHandler(arg0: ((arg0: Internal.Thread, arg1: Internal.Throwable) => void)): Internal.Thread$Builder;
        daemon(): Internal.Thread$Builder$OfPlatform;
        daemon(arg0: boolean): Internal.Thread$Builder$OfPlatform;
        group(arg0: Internal.ThreadGroup): Internal.Thread$Builder$OfPlatform;
    }
    type Thread$Builder$OfPlatform_ = Thread$Builder$OfPlatform;
    class Suggestions extends Document.Object {
        hashCode(): number;
        getRange(): Internal.StringRange;
        getList(): Internal.List<Internal.Suggestion>;
        static merge(arg0: string, arg1: Internal.Collection<Internal.Suggestions>): Internal.Suggestions;
        equals(arg0: any): boolean;
        isEmpty(): boolean;
        static create(arg0: string, arg1: Internal.Collection<Internal.Suggestion>): Internal.Suggestions;
        toString(): string;
        static empty(): Internal.CompletableFuture<Internal.Suggestions>;
        get range(): Internal.StringRange;
        get list(): Internal.List<Internal.Suggestion>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Suggestions_ = Suggestions;
    class FMLStatusPing extends Document.Object {
        isTruncated(): boolean;
        getRemoteChannels(): Internal.Map<ResourceLocation, Internal.Pair<string, boolean>>;
        getRemoteModData(): Internal.Map<string, string>;
        getFMLNetworkVersion(): number;
        get remoteChannels(): Internal.Map<ResourceLocation, Internal.Pair<string, boolean>>;
        get truncated(): boolean;
        get remoteModData(): Internal.Map<string, string>;
        get fMLNetworkVersion(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FMLStatusPing_ = FMLStatusPing;
    interface Predicate <T> {
        or(arg0: ((arg0: T) => boolean)): Internal.Predicate<T>;
        test(arg0: T): boolean;
        and(arg0: ((arg0: T) => boolean)): Internal.Predicate<T>;
        negate(): Internal.Predicate<T>;
    }
    type Predicate_<T> = ((arg0: T) => boolean) | Predicate<T>;
    interface GameProfileRepository {
        findProfilesByNames(arg0: string[], arg1: Internal.Agent, arg2: Internal.ProfileLookupCallback): void;
    }
    type GameProfileRepository_ = GameProfileRepository;
    class ExplosionJS extends Document.Object {
        strength(f: number): Internal.ExplosionJS;
        explode(): void;
        damagesTerrain(b: boolean): Internal.ExplosionJS;
        exploder(entity: Internal.EntityJS_): Internal.ExplosionJS;
        causesFire(b: boolean): Internal.ExplosionJS;
        destroysTerrain(b: boolean): Internal.ExplosionJS;
        explosionMode : Internal.Explosion$Mode;
        readonly x : number;
        readonly y : number;
        readonly z : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ExplosionJS_ = ExplosionJS;
    interface IForgeTileEntity extends Internal.ICapabilitySerializable<Internal.CompoundNBT> {
        requestModelDataUpdate(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getTileData(): Internal.CompoundNBT;
        onChunkUnloaded(): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        deserializeNBT(arg0: Internal.CompoundNBT): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
    }
    type IForgeTileEntity_ = IForgeTileEntity;
    class DefaultedRegistry <T> extends Internal.SimpleRegistry<T> {
        func_148757_b(arg0: T): number;
        func_241873_b(arg0: ResourceLocation_): Internal.Optional<T>;
        func_148745_a(arg0: number): T;
        func_177774_c(arg0: T): ResourceLocation;
        func_212609_b(): ResourceLocation;
        func_186801_a(arg0: Internal.Random): T;
        func_82594_a(arg0: ResourceLocation_): T;
        func_218382_a<V_>(arg0: number, arg1: Internal.RegistryKey<T>, arg2: V_, arg3: Internal.Lifecycle): V_;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DefaultedRegistry_<T> = DefaultedRegistry<T>;
    interface ToDoubleFunction <T> {
        applyAsDouble(arg0: T): number;
    }
    type ToDoubleFunction_<T> = ((arg0: T) => number) | ToDoubleFunction<T>;
    class ItemLeftClickEventJS extends Internal.PlayerEventJS {
        getItem(): Internal.ItemStackJS;
        getEntity(): Internal.EntityJS;
        get item(): Internal.ItemStackJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemLeftClickEventJS_ = ItemLeftClickEventJS;
    class LootFunctionType extends Internal.LootType<Internal.ILootFunction> {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootFunctionType_ = LootFunctionType;
    interface Symbol {
    }
    type Symbol_ = Symbol;
    class LootingLevelEvent extends Internal.LivingEvent {
        getLootingLevel(): number;
        getListenerList(): Internal.ListenerList;
        getDamageSource(): Internal.DamageSource;
        setLootingLevel(arg0: number): void;
        get listenerList(): Internal.ListenerList;
        get damageSource(): Internal.DamageSource;
        get lootingLevel(): number;
        set lootingLevel(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootingLevelEvent_ = LootingLevelEvent;
    class LlamaEntity extends Internal.AbstractChestedHorseEntity implements Internal.IRangedAttackMob {
        func_190710_o(arg0: number): void;
        func_190719_dM(): number;
        func_82171_bF(): boolean;
        func_190715_a(arg0: Internal.LlamaEntity): void;
        func_230264_L__(): boolean;
        func_184232_k(arg0: Internal.Entity): void;
        func_190697_dk(): void;
        static func_234244_fu_(): Internal.AttributeModifierMap$MutableAttribute;
        func_190696_dl(): number;
        func_190709_dP(): void;
        func_190712_dQ(): boolean;
        func_190684_dE(): boolean;
        func_213800_eB(): boolean;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.LlamaEntity;
        func_190707_dL(): number;
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        func_190676_dC(): number;
        func_230276_fq_(): boolean;
        func_76316_a(arg0: Internal.IInventory): void;
        func_190682_f(arg0: Internal.ItemStack): boolean;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_190716_dS(): Internal.LlamaEntity;
        func_190718_dR(): boolean;
        func_70042_X(): number;
        func_230277_fr_(): boolean;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_241205_ce_(): Vec3;
        func_70878_b(arg0: Internal.AnimalEntity): boolean;
        func_190704_dO(): Internal.DyeColor;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_190687_dF(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LlamaEntity_ = LlamaEntity;
    interface LongIterable extends Internal.Iterable<number> {
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.LongIterator;
        forEach(arg0: ((arg0: number) => void)): void;
        forEach(arg0: ((arg0: number) => void)): void;
    }
    type LongIterable_ = LongIterable;
    class JEIEventJS extends Internal.EventJS {
        canCancel(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JEIEventJS_ = JEIEventJS;
    interface IResourceManager {
        func_199004_b(arg0: ResourceLocation_): Internal.List<Internal.IResource>;
        func_219533_b(arg0: ResourceLocation_): boolean;
        func_230232_b_(): Internal.Stream<Internal.IResourcePack>;
        func_199001_a(): Internal.Set<string>;
        func_199003_a(arg0: string, arg1: ((arg0: string) => boolean)): Internal.Collection<ResourceLocation>;
        func_199002_a(arg0: ResourceLocation_): Internal.IResource;
    }
    type IResourceManager_ = IResourceManager;
    interface MobSpawnSettingsBuilderAccessor {
        getSpawners(): Internal.Map<Internal.EntityClassification, Internal.List<Internal.MobSpawnInfo$Spawners>>;
        setPlayerCanSpawn(arg0: boolean): void;
        getMobSpawnCosts(): Internal.Map<Internal.EntityType<any>, Internal.MobSpawnInfo$SpawnCosts>;
        isPlayerCanSpawn(): boolean;
    }
    type MobSpawnSettingsBuilderAccessor_ = MobSpawnSettingsBuilderAccessor;
    class ExemptionMechanism extends Document.Object {
        init(arg0: Internal.Key): void;
        init(arg0: Internal.Key, arg1: Internal.AlgorithmParameters): void;
        init(arg0: Internal.Key, arg1: Internal.AlgorithmParameterSpec): void;
        getName(): string;
        genExemptionBlob(arg0: number[], arg1: number): number;
        genExemptionBlob(arg0: number[]): number;
        genExemptionBlob(): number[];
        isCryptoAllowed(arg0: Internal.Key): boolean;
        getProvider(): Internal.Provider;
        getOutputSize(arg0: number): number;
        static getInstance(arg0: string, arg1: string): Internal.ExemptionMechanism;
        static getInstance(arg0: string, arg1: Internal.Provider): Internal.ExemptionMechanism;
        static getInstance(arg0: string): Internal.ExemptionMechanism;
        get provider(): Internal.Provider;
        get name(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ExemptionMechanism_ = ExemptionMechanism;
    abstract class ZoneId extends Document.Object implements Internal.Serializable {
        static ofOffset(arg0: string, arg1: Internal.ZoneOffset): Internal.ZoneId;
        static systemDefault(): Internal.ZoneId;
        static getAvailableZoneIds(): Internal.Set<string>;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        normalized(): Internal.ZoneId;
        hashCode(): number;
        static of(arg0: string, arg1: Internal.Map_<string, string>): Internal.ZoneId;
        static of(arg0: string): Internal.ZoneId;
        equals(arg0: any): boolean;
        getId(): string;
        static from(arg0: Internal.TemporalAccessor): Internal.ZoneId;
        toString(): string;
        getRules(): Internal.ZoneRules;
        static readonly SHORT_IDS : {"AET":"Australia/Sydney","BST":"Asia/Dhaka","ACT":"Australia/Darwin","HST":"-10:00","NST":"Pacific/Auckland","AST":"America/Anchorage","MST":"-07:00","SST":"Pacific/Guadalcanal","CTT":"Asia/Shanghai","PRT":"America/Puerto_Rico","ECT":"Europe/Paris","EAT":"Africa/Addis_Ababa","EST":"-05:00","PNT":"America/Phoenix","PLT":"Asia/Karachi","CNT":"America/St_Johns","IET":"America/Indiana/Indianapolis","VST":"Asia/Ho_Chi_Minh","JST":"Asia/Tokyo","ART":"Africa/Cairo","PST":"America/Los_Angeles","BET":"America/Sao_Paulo","MIT":"Pacific/Apia","CAT":"Africa/Harare","AGT":"America/Argentina/Buenos_Aires","NET":"Asia/Yerevan","CST":"America/Chicago","IST":"Asia/Kolkata"};
        get availableZoneIds(): Internal.Set<string>;
        get rules(): Internal.ZoneRules;
        get id(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZoneId_ = ZoneId;
    abstract class Number extends Document.Object implements Internal.Serializable {
        intValue(): number;
        floatValue(): number;
        shortValue(): number;
        doubleValue(): number;
        longValue(): number;
        byteValue(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Number_ = Number;
    interface SetMultimap <K, V> extends Internal.Multimap<K, V> {
        removeAll(arg0: any): Internal.Collection<any>;
        removeAll(arg0: any): Internal.Set<V>;
        entries(): Internal.Collection<any>;
        entries(): Internal.Set<Internal.Map$Entry<K, V>>;
        asMap(): Internal.Map<K, Internal.Collection<V>>;
        equals(arg0: any): boolean;
        get(arg0: any): Internal.Collection<any>;
        get(arg0: K): Internal.Set<V>;
        replaceValues(arg0: K, arg1: Internal.Iterable<V>): Internal.Set<V>;
        replaceValues(arg0: any, arg1: Internal.Iterable<any>): Internal.Collection<any>;
    }
    type SetMultimap_<K, V> = SetMultimap<K, V>;
    abstract class ReloadListener <T> extends Document.Object implements Internal.IFutureReloadListener {
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor, arg5: Internal.Executor): Internal.CompletableFuture<void>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ReloadListener_<T> = ReloadListener<T>;
    class AttackingSittingPhase extends Internal.SittingPhase {
        func_188660_d(): void;
        func_188659_c(): void;
        func_188657_b(): void;
        func_188652_i(): Internal.PhaseType<Internal.AttackingSittingPhase>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttackingSittingPhase_ = AttackingSittingPhase;
    class DecoratedPlacementConfig extends Document.Object implements Internal.IPlacementConfig {
        func_242888_b(): Internal.ConfiguredPlacement<any>;
        func_242886_a(): Internal.ConfiguredPlacement<any>;
        static readonly field_242883_a : Internal.Codec<Internal.DecoratedPlacementConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DecoratedPlacementConfig_ = DecoratedPlacementConfig;
    class LivingEquipmentChangeEvent extends Internal.LivingEvent {
        getSlot(): EquipmentSlot;
        getListenerList(): Internal.ListenerList;
        getTo(): Internal.ItemStack;
        getFrom(): Internal.ItemStack;
        get listenerList(): Internal.ListenerList;
        get from(): Internal.ItemStack;
        get slot(): EquipmentSlot;
        get to(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingEquipmentChangeEvent_ = LivingEquipmentChangeEvent;
    class GuiScreenEvent$InitGuiEvent$Pre extends Internal.GuiScreenEvent$InitGuiEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$InitGuiEvent$Pre_ = GuiScreenEvent$InitGuiEvent$Pre;
    class SnowballEntity extends Internal.ProjectileItemEntity {
        func_70103_a(arg0: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SnowballEntity_ = SnowballEntity;
    class NopProcessor extends Internal.StructureProcessor {
        func_230386_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings): Internal.Template$BlockInfo;
        static readonly field_237097_a_ : Internal.Codec<Internal.NopProcessor>;
        static readonly field_215199_a : Internal.NopProcessor;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NopProcessor_ = NopProcessor;
    interface Algebra {
        apply(arg0: number): Internal.RewriteResult<any, any>;
        toString(arg0: number): string;
    }
    type Algebra_ = Algebra;
    abstract class BlockPlacer extends Document.Object {
        func_225567_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.Random): void;
        static readonly field_236435_a_ : Internal.Codec<Internal.BlockPlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockPlacer_ = BlockPlacer;
    class TagsUpdatedEvent$VanillaTagTypes extends Internal.TagsUpdatedEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TagsUpdatedEvent$VanillaTagTypes_ = TagsUpdatedEvent$VanillaTagTypes;
    class GenericEvent <T> extends net.minecraftforge.eventbus.api.Event implements Internal.IGenericEvent<T> {
        getGenericType(): java_.lang.reflect.Type;
        get genericType(): java_.lang.reflect.Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GenericEvent_<T> = GenericEvent<T>;
    interface Long2ObjectMap$Entry <V> extends Internal.Map$Entry<number, V> {
        getKey(): number;
        getKey(): any;
        getLongKey(): number;
    }
    type Long2ObjectMap$Entry_<V> = Long2ObjectMap$Entry<V>;
    class ChunkMeshData extends Document.Object {
        getSlices(): Internal.Iterable<Internal.Map$Entry<Internal.ModelQuadFacing, Internal.BufferSlice>>;
        hasVertexData(): boolean;
        setModelSlice(facing: Internal.ModelQuadFacing_, slice: Internal.BufferSlice): void;
        setVertexData(vertexData: Internal.VertexData): void;
        takeVertexData(): Internal.VertexData;
        getVertexDataSize(): number;
        static readonly EMPTY : Internal.ChunkMeshData;
        get slices(): Internal.Iterable<Internal.Map$Entry<Internal.ModelQuadFacing, Internal.BufferSlice>>;
        get vertexDataSize(): number;
        set vertexData(vertexData: Internal.VertexData);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkMeshData_ = ChunkMeshData;
    interface TypeWrapperFactory <T> {
        wrap(arg0: any): T;
    }
    type TypeWrapperFactory_<T> = ((arg0: any) => T) | TypeWrapperFactory<T>;
    class ItemEntityJS extends Internal.EntityJS {
        getAge(): number;
        makeFakeItem(): void;
        setNoDespawn(): void;
        getName(): Internal.ITextComponent;
        setExtendedLifetime(): void;
        getItem(): Internal.ItemStackJS;
        playerTouch(player: Internal.PlayerEntity): void;
        getOwner(): Internal.UUID;
        setOwner(uUID: Internal.UUID): void;
        changeDimension(serverLevel: Internal.ServerWorld): Internal.EntityJS;
        getThrower(): Internal.UUID;
        addAdditionalSaveData(compoundTag: Internal.CompoundNBT): void;
        setThrower(uUID: Internal.UUID): void;
        setNeverPickUp(): void;
        copy(): Internal.ItemEntityJS;
        setLifespan(lifespan: number): void;
        setItem(item: any): void;
        setItem(itemStack: Internal.ItemStack): void;
        setDefaultPickUpDelay(): void;
        setInfinitePickupDelay(): void;
        setNoPickupDelay(): void;
        setPickupDelay(ticks: number): void;
        onSyncedDataUpdated(entityDataAccessor: Internal.DataParameter<any>): void;
        getLifespan(): number;
        tick(): void;
        isAttackable(): boolean;
        fireImmune(): boolean;
        readAdditionalSaveData(compoundTag: Internal.CompoundNBT): void;
        getAddEntityPacket(): Internal.IPacket<any>;
        setDefaultPickupDelay(): void;
        setNoPickUpDelay(): void;
        setPickUpDelay(i: number): void;
        getInstance(): Internal.ItemEntityJS;
        hasPickUpDelay(): boolean;
        getSpin(f: number): number;
        hurt(damageSource: Internal.DamageSource, f: number): boolean;
        get owner(): Internal.UUID;
        get item(): Internal.ItemStackJS;
        get instance(): Internal.ItemEntityJS;
        get thrower(): Internal.UUID;
        get lifespan(): number;
        get name(): Internal.ITextComponent;
        get addEntityPacket(): Internal.IPacket<any>;
        get age(): number;
        get attackable(): boolean;
        set pickupDelay(ticks: number);
        set owner(uUID: Internal.UUID);
        set lifespan(lifespan: number);
        set thrower(uUID: Internal.UUID);
        set pickUpDelay(i: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemEntityJS_ = ItemEntityJS;
    class FunctionReloader extends Document.Object implements Internal.IFutureReloadListener {
        func_240943_b_(arg0: ResourceLocation_): Internal.ITag<Internal.FunctionObject>;
        func_240931_a_(): Internal.Map<ResourceLocation, Internal.FunctionObject>;
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor, arg5: Internal.Executor): Internal.CompletableFuture<void>;
        func_240940_a_(arg0: ResourceLocation_): Internal.Optional<Internal.FunctionObject>;
        func_240942_b_(): Internal.ITagCollection<Internal.FunctionObject>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FunctionReloader_ = FunctionReloader;
    interface DynamicOps <T> {
        createLong(arg0: number): T;
        createIntList(arg0: Internal.IntStream): T;
        updateGeneric(arg0: T, arg1: T, arg2: ((arg0: T) => T)): T;
        listBuilder(): Internal.ListBuilder<T>;
        createDouble(arg0: number): T;
        createLongList(arg0: Internal.LongStream): T;
        createShort(arg0: number): T;
        mergeToList(arg0: T, arg1: T): Internal.DataResult<T>;
        mergeToList(arg0: T, arg1: Internal.List<T>): Internal.DataResult<T>;
        update(arg0: T, arg1: string, arg2: ((arg0: T) => T)): T;
        getByteBuffer(arg0: T): Internal.DataResult<Internal.ByteBuffer>;
        createByteList(arg0: Internal.ByteBuffer): T;
        withDecoder<E>(arg0: Internal.Decoder<E>): Internal.Function<T, Internal.DataResult<com.mojang.datafixers.util.Pair<E, T>>>;
        remove(arg0: T, arg1: string): T;
        createBoolean(arg0: boolean): T;
        empty(): T;
        getMapValues(arg0: T): Internal.DataResult<Internal.Stream<com.mojang.datafixers.util.Pair<T, T>>>;
        withParser<E>(arg0: Internal.Decoder<E>): Internal.Function<T, Internal.DataResult<E>>;
        mergeToMap(arg0: T, arg1: Internal.MapLike<T>): Internal.DataResult<T>;
        mergeToMap(arg0: T, arg1: Internal.Map_<T, T>): Internal.DataResult<T>;
        mergeToMap(arg0: T, arg1: T, arg2: T): Internal.DataResult<T>;
        convertList<U>(arg0: Internal.DynamicOps<U>, arg1: T): U;
        emptyList(): T;
        getIntStream(arg0: T): Internal.DataResult<Internal.IntStream>;
        getList(arg0: T): Internal.DataResult<Internal.Consumer<Internal.Consumer<T>>>;
        get(arg0: T, arg1: string): Internal.DataResult<T>;
        getLongStream(arg0: T): Internal.DataResult<Internal.LongStream>;
        emptyMap(): T;
        getMapEntries(arg0: T): Internal.DataResult<Internal.Consumer<Internal.BiConsumer<T, T>>>;
        getBooleanValue(arg0: T): Internal.DataResult<boolean>;
        getStream(arg0: T): Internal.DataResult<Internal.Stream<T>>;
        createNumeric(arg0: Internal.Number): T;
        convertMap<U>(arg0: Internal.DynamicOps<U>, arg1: T): U;
        mergeToPrimitive(arg0: T, arg1: T): Internal.DataResult<T>;
        getStringValue(arg0: T): Internal.DataResult<string>;
        createList(arg0: Internal.Stream<T>): T;
        set(arg0: T, arg1: string, arg2: T): T;
        withEncoder<E>(arg0: Internal.Encoder<E>): Internal.Function<E, Internal.DataResult<T>>;
        createString(arg0: string): T;
        getGeneric(arg0: T, arg1: T): Internal.DataResult<T>;
        convertTo<U>(arg0: Internal.DynamicOps<U>, arg1: T): U;
        createMap(arg0: Internal.Map_<T, T>): T;
        createMap(arg0: Internal.Stream<com.mojang.datafixers.util.Pair<T, T>>): T;
        mapBuilder(): Internal.RecordBuilder<T>;
        getMap(arg0: T): Internal.DataResult<Internal.MapLike<T>>;
        createByte(arg0: number): T;
        createFloat(arg0: number): T;
        createInt(arg0: number): T;
        compressMaps(): boolean;
        getNumberValue(arg0: T): Internal.DataResult<Internal.Number>;
        getNumberValue(arg0: T, arg1: Internal.Number): Internal.Number;
    }
    type DynamicOps_<T> = DynamicOps<T>;
    class SecondaryPositionSensor extends Internal.Sensor<Internal.VillagerEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SecondaryPositionSensor_ = SecondaryPositionSensor;
    class SignTileEntity extends Internal.TileEntity {
        func_212365_a(arg0: number, arg1: Internal.ITextComponent_): void;
        func_214068_a(arg0: Internal.DyeColor_): boolean;
        func_212366_a(arg0: number): Internal.ITextComponent;
        func_214066_f(): Internal.DyeColor;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_183000_F(): boolean;
        func_195539_a(arg0: Internal.ServerPlayerEntity): Internal.CommandSource;
        func_174882_b(arg0: Internal.PlayerEntity): boolean;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_189517_E_(): Internal.CompoundNBT;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_145913_a(arg0: boolean): void;
        func_145914_a(): boolean;
        func_145912_a(arg0: Internal.PlayerEntity): void;
        func_242686_a(arg0: number, arg1: ((arg0: Internal.ITextComponent) => ((arg0: ((arg0: number, arg1: Internal.Style, arg2: number) => boolean)) => boolean))): Internal.IReorderingProcessor;
        func_145911_b(): Internal.PlayerEntity;
        field_145916_j : boolean;
        readonly field_145915_a : Internal.ITextComponent[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SignTileEntity_ = SignTileEntity;
    class SSpawnPaintingPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_179837_b(): BlockPos;
        func_179836_c(): Internal.Direction;
        func_186895_b(): Internal.UUID;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_201063_e(): Internal.PaintingType;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_148965_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SSpawnPaintingPacket_ = SSpawnPaintingPacket;
    class NetworkEvent$Context extends Document.Object {
        getNetworkManager(): Internal.NetworkManager;
        getDirection(): Internal.NetworkDirection;
        enqueueWork(arg0: (() => void)): Internal.CompletableFuture<void>;
        setPacketHandled(arg0: boolean): void;
        attr<T_>(arg0: Internal.AttributeKey<T_>): io.netty.util.Attribute<T_>;
        getSender(): Internal.ServerPlayerEntity;
        getPacketDispatcher(): Internal.PacketDispatcher;
        getPacketHandled(): boolean;
        get networkManager(): Internal.NetworkManager;
        get sender(): Internal.ServerPlayerEntity;
        get packetHandled(): boolean;
        get direction(): Internal.NetworkDirection;
        get packetDispatcher(): Internal.PacketDispatcher;
        set packetHandled(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NetworkEvent$Context_ = NetworkEvent$Context;
    class DispenserContainer extends Internal.Container {
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DispenserContainer_ = DispenserContainer;
    interface Cloneable {
    }
    type Cloneable_ = Cloneable;
    class ExistingFileHelper extends Document.Object {
        getResource(arg0: ResourceLocation_, arg1: Internal.ResourcePackType_): Internal.IResource;
        getResource(arg0: ResourceLocation_, arg1: Internal.ResourcePackType_, arg2: string, arg3: string): Internal.IResource;
        isEnabled(): boolean;
        exists(arg0: ResourceLocation_, arg1: Internal.ExistingFileHelper$IResourceType): boolean;
        exists(arg0: ResourceLocation_, arg1: Internal.ResourcePackType_, arg2: string, arg3: string): boolean;
        exists(arg0: ResourceLocation_, arg1: Internal.ResourcePackType_): boolean;
        trackGenerated(arg0: ResourceLocation_, arg1: Internal.ResourcePackType_, arg2: string, arg3: string): void;
        trackGenerated(arg0: ResourceLocation_, arg1: Internal.ExistingFileHelper$IResourceType): void;
        get enabled(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ExistingFileHelper_ = ExistingFileHelper;
    class VertexFormatElement$Usage extends Internal.Enum<Internal.VertexFormatElement$Usage> {
        func_177384_a(): string;
        static valueOf(arg0: string): Internal.VertexFormatElement$Usage;
        static values(): Internal.VertexFormatElement$Usage[];
        func_227901_a_(arg0: number): void;
        static readonly POSITION : Internal.VertexFormatElement$Usage;
        static readonly UV : Internal.VertexFormatElement$Usage;
        static readonly GENERIC : Internal.VertexFormatElement$Usage;
        static readonly COLOR : Internal.VertexFormatElement$Usage;
        static readonly PADDING : Internal.VertexFormatElement$Usage;
        static readonly NORMAL : Internal.VertexFormatElement$Usage;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VertexFormatElement$Usage_ = "position" | "normal" | "color" | "uv" | "padding" | "generic" | VertexFormatElement$Usage;
    class LavaSubmergingProcessor extends Internal.StructureProcessor {
        func_230386_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings): Internal.Template$BlockInfo;
        static readonly field_241532_b_ : Internal.LavaSubmergingProcessor;
        static readonly field_241531_a_ : Internal.Codec<Internal.LavaSubmergingProcessor>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LavaSubmergingProcessor_ = LavaSubmergingProcessor;
    class LootTableEntry extends Document.Object implements Internal.FunctionContainer, Internal.ConditionContainer {
        addFunction(o: Internal.JsonObject): Internal.LootTableEntry;
        addFunction(arg0: Internal.JsonObject): Internal.FunctionContainer;
        weight(weight: number): Internal.LootTableEntry;
        addCondition(arg0: Internal.JsonObject): Internal.ConditionContainer;
        addCondition(o: Internal.JsonObject): Internal.LootTableEntry;
        quality(quality: number): Internal.LootTableEntry;
        readonly json : Internal.JsonObject;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootTableEntry_ = LootTableEntry;
    interface IGhostIngredientHandler$Target <I> extends Internal.Consumer<I> {
        getArea(): Internal.Rectangle2d;
        accept(arg0: I): void;
    }
    type IGhostIngredientHandler$Target_<I> = IGhostIngredientHandler$Target<I>;
    class FurnaceRecipe extends Internal.AbstractCookingRecipe {
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_222128_h(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FurnaceRecipe_ = FurnaceRecipe;
    class Date extends Document.Object implements Internal.Serializable, Internal.Cloneable, Internal.Comparable<Internal.Date> {
        static UTC(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        before(arg0: Internal.Date): boolean;
        getTime(): number;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.Date): number;
        getHours(): number;
        setHours(arg0: number): void;
        setSeconds(arg0: number): void;
        hashCode(): number;
        getDate(): number;
        static from(arg0: Internal.Instant): Internal.Date;
        getMonth(): number;
        after(arg0: Internal.Date): boolean;
        setTime(arg0: number): void;
        setMonth(arg0: number): void;
        setMinutes(arg0: number): void;
        static parse(arg0: string): number;
        setYear(arg0: number): void;
        toInstant(): Internal.Instant;
        getDay(): number;
        getMinutes(): number;
        toGMTString(): string;
        getTimezoneOffset(): number;
        getSeconds(): number;
        getYear(): number;
        equals(arg0: any): boolean;
        clone(): any;
        setDate(arg0: number): void;
        toString(): string;
        toLocaleString(): string;
        get date(): number;
        get hours(): number;
        get seconds(): number;
        get month(): number;
        get timezoneOffset(): number;
        get year(): number;
        get minutes(): number;
        get time(): number;
        get day(): number;
        set date(arg0: number);
        set seconds(arg0: number);
        set hours(arg0: number);
        set month(arg0: number);
        set year(arg0: number);
        set minutes(arg0: number);
        set time(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Date_ = Date;
    class GossipManager$GossipEntry extends Document.Object {
        func_220904_a(): number;
        func_234061_a_<T_>(arg0: Internal.DynamicOps<T_>): Internal.Dynamic<T_>;
        static func_234060_a_(arg0: Internal.Dynamic<any>): Internal.DataResult<Internal.GossipManager$GossipEntry>;
        toString(): string;
        readonly field_220907_a : Internal.UUID;
        readonly field_220909_c : number;
        readonly field_220908_b : Internal.GossipType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GossipManager$GossipEntry_ = GossipManager$GossipEntry;
    class PotionEvent$PotionRemoveEvent extends Internal.PotionEvent {
        getPotion(): Internal.Effect;
        getPotionEffect(): Internal.EffectInstance;
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get potion(): Internal.Effect;
        get potionEffect(): Internal.EffectInstance;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PotionEvent$PotionRemoveEvent_ = PotionEvent$PotionRemoveEvent;
    class CompletableFuture <T> extends Document.Object implements Internal.Future<T>, Internal.CompletionStage<T> {
        cancel(arg0: boolean): boolean;
        exceptionallyAsync(arg0: ((arg0: any) => any), arg1: Internal.Executor): Internal.CompletionStage<any>;
        exceptionallyAsync(arg0: ((arg0: Internal.Throwable) => T), arg1: Internal.Executor): Internal.CompletableFuture<T>;
        exceptionallyAsync(arg0: ((arg0: Internal.Throwable) => T)): Internal.CompletableFuture<T>;
        exceptionallyAsync(arg0: ((arg0: any) => any)): Internal.CompletionStage<any>;
        obtrudeValue(arg0: T): void;
        exceptionNow(): Internal.Throwable;
        static failedStage<U_>(arg0: Internal.Throwable): Internal.CompletionStage<U_>;
        runAfterBothAsync(arg0: Internal.CompletionStage<any>, arg1: (() => void)): Internal.CompletableFuture<void>;
        runAfterBothAsync(arg0: Internal.CompletionStage<any>, arg1: (() => void)): Internal.CompletionStage<any>;
        runAfterBothAsync(arg0: Internal.CompletionStage<any>, arg1: (() => void), arg2: Internal.Executor): Internal.CompletableFuture<void>;
        runAfterBothAsync(arg0: Internal.CompletionStage<any>, arg1: (() => void), arg2: Internal.Executor): Internal.CompletionStage<any>;
        obtrudeException(arg0: Internal.Throwable): void;
        thenAcceptBoth(arg0: Internal.CompletionStage<any>, arg1: ((arg0: any, arg1: any) => void)): Internal.CompletionStage<any>;
        thenAcceptBoth<U_>(arg0: Internal.CompletionStage<U_>, arg1: ((arg0: T, arg1: U_) => void)): Internal.CompletableFuture<void>;
        exceptionallyCompose(arg0: ((arg0: any) => any)): Internal.CompletionStage<any>;
        exceptionallyCompose(arg0: ((arg0: Internal.Throwable) => Internal.CompletionStage<T>)): Internal.CompletableFuture<T>;
        state(): Internal.Future$State;
        join(): T;
        applyToEither<U_>(arg0: Internal.CompletionStage<T>, arg1: ((arg0: T) => U_)): Internal.CompletableFuture<U_>;
        applyToEither(arg0: Internal.CompletionStage<any>, arg1: ((arg0: any) => any)): Internal.CompletionStage<any>;
        completeAsync(arg0: (() => T), arg1: Internal.Executor): Internal.CompletableFuture<T>;
        completeAsync(arg0: (() => T)): Internal.CompletableFuture<T>;
        isCompletedExceptionally(): boolean;
        thenApply<U_>(arg0: ((arg0: T) => U_)): Internal.CompletableFuture<U_>;
        thenApply(arg0: ((arg0: any) => any)): Internal.CompletionStage<any>;
        thenRun(arg0: (() => void)): Internal.CompletionStage<any>;
        thenRun(arg0: (() => void)): Internal.CompletableFuture<void>;
        orTimeout(arg0: number, arg1: Internal.TimeUnit_): Internal.CompletableFuture<T>;
        getNow(arg0: T): T;
        exceptionally(arg0: ((arg0: Internal.Throwable) => T)): Internal.CompletableFuture<T>;
        exceptionally(arg0: ((arg0: any) => any)): Internal.CompletionStage<any>;
        handle(arg0: ((arg0: any, arg1: any) => any)): Internal.CompletionStage<any>;
        handle<U_>(arg0: ((arg0: T, arg1: Internal.Throwable) => U_)): Internal.CompletableFuture<U_>;
        thenCompose(arg0: ((arg0: any) => any)): Internal.CompletionStage<any>;
        thenCompose<U_>(arg0: ((arg0: T) => Internal.CompletionStage<U_>)): Internal.CompletableFuture<U_>;
        thenCombineAsync(arg0: Internal.CompletionStage<any>, arg1: ((arg0: any, arg1: any) => any), arg2: Internal.Executor): Internal.CompletionStage<any>;
        thenCombineAsync<U_, V_>(arg0: Internal.CompletionStage<U_>, arg1: ((arg0: T, arg1: U_) => V_), arg2: Internal.Executor): Internal.CompletableFuture<V_>;
        thenCombineAsync(arg0: Internal.CompletionStage<any>, arg1: ((arg0: any, arg1: any) => any)): Internal.CompletionStage<any>;
        thenCombineAsync<U_, V_>(arg0: Internal.CompletionStage<U_>, arg1: ((arg0: T, arg1: U_) => V_)): Internal.CompletableFuture<V_>;
        static failedFuture<U_>(arg0: Internal.Throwable): Internal.CompletableFuture<U_>;
        static completedFuture<U_>(arg0: U_): Internal.CompletableFuture<U_>;
        getNumberOfDependents(): number;
        whenCompleteAsync(arg0: ((arg0: any, arg1: any) => void)): Internal.CompletionStage<any>;
        whenCompleteAsync(arg0: ((arg0: T, arg1: Internal.Throwable) => void)): Internal.CompletableFuture<T>;
        whenCompleteAsync(arg0: ((arg0: any, arg1: any) => void), arg1: Internal.Executor): Internal.CompletionStage<any>;
        whenCompleteAsync(arg0: ((arg0: T, arg1: Internal.Throwable) => void), arg1: Internal.Executor): Internal.CompletableFuture<T>;
        thenApplyAsync<U_>(arg0: ((arg0: T) => U_), arg1: Internal.Executor): Internal.CompletableFuture<U_>;
        thenApplyAsync(arg0: ((arg0: any) => any), arg1: Internal.Executor): Internal.CompletionStage<any>;
        thenApplyAsync(arg0: ((arg0: any) => any)): Internal.CompletionStage<any>;
        thenApplyAsync<U_>(arg0: ((arg0: T) => U_)): Internal.CompletableFuture<U_>;
        thenAcceptAsync(arg0: ((arg0: T) => void), arg1: Internal.Executor): Internal.CompletableFuture<void>;
        thenAcceptAsync(arg0: ((arg0: any) => void), arg1: Internal.Executor): Internal.CompletionStage<any>;
        thenAcceptAsync(arg0: ((arg0: any) => void)): Internal.CompletionStage<any>;
        thenAcceptAsync(arg0: ((arg0: T) => void)): Internal.CompletableFuture<void>;
        toCompletableFuture(): Internal.CompletableFuture<T>;
        thenRunAsync(arg0: (() => void), arg1: Internal.Executor): Internal.CompletionStage<any>;
        thenRunAsync(arg0: (() => void), arg1: Internal.Executor): Internal.CompletableFuture<void>;
        thenRunAsync(arg0: (() => void)): Internal.CompletableFuture<void>;
        thenRunAsync(arg0: (() => void)): Internal.CompletionStage<any>;
        static runAsync(arg0: (() => void), arg1: Internal.Executor): Internal.CompletableFuture<void>;
        static runAsync(arg0: (() => void)): Internal.CompletableFuture<void>;
        static allOf(arg0: Internal.CompletableFuture<any>[]): Internal.CompletableFuture<void>;
        applyToEitherAsync(arg0: Internal.CompletionStage<any>, arg1: ((arg0: any) => any), arg2: Internal.Executor): Internal.CompletionStage<any>;
        applyToEitherAsync<U_>(arg0: Internal.CompletionStage<T>, arg1: ((arg0: T) => U_), arg2: Internal.Executor): Internal.CompletableFuture<U_>;
        applyToEitherAsync(arg0: Internal.CompletionStage<any>, arg1: ((arg0: any) => any)): Internal.CompletionStage<any>;
        applyToEitherAsync<U_>(arg0: Internal.CompletionStage<T>, arg1: ((arg0: T) => U_)): Internal.CompletableFuture<U_>;
        acceptEitherAsync(arg0: Internal.CompletionStage<T>, arg1: ((arg0: T) => void), arg2: Internal.Executor): Internal.CompletableFuture<void>;
        acceptEitherAsync(arg0: Internal.CompletionStage<any>, arg1: ((arg0: any) => void), arg2: Internal.Executor): Internal.CompletionStage<any>;
        acceptEitherAsync(arg0: Internal.CompletionStage<T>, arg1: ((arg0: T) => void)): Internal.CompletableFuture<void>;
        acceptEitherAsync(arg0: Internal.CompletionStage<any>, arg1: ((arg0: any) => void)): Internal.CompletionStage<any>;
        runAfterEitherAsync(arg0: Internal.CompletionStage<any>, arg1: (() => void)): Internal.CompletableFuture<void>;
        runAfterEitherAsync(arg0: Internal.CompletionStage<any>, arg1: (() => void)): Internal.CompletionStage<any>;
        runAfterEitherAsync(arg0: Internal.CompletionStage<any>, arg1: (() => void), arg2: Internal.Executor): Internal.CompletableFuture<void>;
        runAfterEitherAsync(arg0: Internal.CompletionStage<any>, arg1: (() => void), arg2: Internal.Executor): Internal.CompletionStage<any>;
        newIncompleteFuture<U_>(): Internal.CompletableFuture<U_>;
        acceptEither(arg0: Internal.CompletionStage<T>, arg1: ((arg0: T) => void)): Internal.CompletableFuture<void>;
        acceptEither(arg0: Internal.CompletionStage<any>, arg1: ((arg0: any) => void)): Internal.CompletionStage<any>;
        get(): T;
        get(arg0: number, arg1: Internal.TimeUnit_): T;
        copy(): Internal.CompletableFuture<T>;
        runAfterEither(arg0: Internal.CompletionStage<any>, arg1: (() => void)): Internal.CompletableFuture<void>;
        runAfterEither(arg0: Internal.CompletionStage<any>, arg1: (() => void)): Internal.CompletionStage<any>;
        thenComposeAsync(arg0: ((arg0: any) => any)): Internal.CompletionStage<any>;
        thenComposeAsync<U_>(arg0: ((arg0: T) => Internal.CompletionStage<U_>)): Internal.CompletableFuture<U_>;
        thenComposeAsync(arg0: ((arg0: any) => any), arg1: Internal.Executor): Internal.CompletionStage<any>;
        thenComposeAsync<U_>(arg0: ((arg0: T) => Internal.CompletionStage<U_>), arg1: Internal.Executor): Internal.CompletableFuture<U_>;
        thenAccept(arg0: ((arg0: any) => void)): Internal.CompletionStage<any>;
        thenAccept(arg0: ((arg0: T) => void)): Internal.CompletableFuture<void>;
        isCancelled(): boolean;
        runAfterBoth(arg0: Internal.CompletionStage<any>, arg1: (() => void)): Internal.CompletableFuture<void>;
        runAfterBoth(arg0: Internal.CompletionStage<any>, arg1: (() => void)): Internal.CompletionStage<any>;
        static anyOf(arg0: Internal.CompletableFuture<any>[]): Internal.CompletableFuture<any>;
        handleAsync<U_>(arg0: ((arg0: T, arg1: Internal.Throwable) => U_)): Internal.CompletableFuture<U_>;
        handleAsync(arg0: ((arg0: any, arg1: any) => any)): Internal.CompletionStage<any>;
        handleAsync(arg0: ((arg0: any, arg1: any) => any), arg1: Internal.Executor): Internal.CompletionStage<any>;
        handleAsync<U_>(arg0: ((arg0: T, arg1: Internal.Throwable) => U_), arg1: Internal.Executor): Internal.CompletableFuture<U_>;
        defaultExecutor(): Internal.Executor;
        completeOnTimeout(arg0: T, arg1: number, arg2: Internal.TimeUnit_): Internal.CompletableFuture<T>;
        static supplyAsync<U_>(arg0: (() => U_)): Internal.CompletableFuture<U_>;
        static supplyAsync<U_>(arg0: (() => U_), arg1: Internal.Executor): Internal.CompletableFuture<U_>;
        completeExceptionally(arg0: Internal.Throwable): boolean;
        isDone(): boolean;
        thenAcceptBothAsync(arg0: Internal.CompletionStage<any>, arg1: ((arg0: any, arg1: any) => void)): Internal.CompletionStage<any>;
        thenAcceptBothAsync<U_>(arg0: Internal.CompletionStage<U_>, arg1: ((arg0: T, arg1: U_) => void)): Internal.CompletableFuture<void>;
        thenAcceptBothAsync(arg0: Internal.CompletionStage<any>, arg1: ((arg0: any, arg1: any) => void), arg2: Internal.Executor): Internal.CompletionStage<any>;
        thenAcceptBothAsync<U_>(arg0: Internal.CompletionStage<U_>, arg1: ((arg0: T, arg1: U_) => void), arg2: Internal.Executor): Internal.CompletableFuture<void>;
        whenComplete(arg0: ((arg0: any, arg1: any) => void)): Internal.CompletionStage<any>;
        whenComplete(arg0: ((arg0: T, arg1: Internal.Throwable) => void)): Internal.CompletableFuture<T>;
        static delayedExecutor(arg0: number, arg1: Internal.TimeUnit_, arg2: Internal.Executor): Internal.Executor;
        static delayedExecutor(arg0: number, arg1: Internal.TimeUnit_): Internal.Executor;
        exceptionallyComposeAsync(arg0: ((arg0: Internal.Throwable) => Internal.CompletionStage<T>), arg1: Internal.Executor): Internal.CompletableFuture<T>;
        exceptionallyComposeAsync(arg0: ((arg0: any) => any), arg1: Internal.Executor): Internal.CompletionStage<any>;
        exceptionallyComposeAsync(arg0: ((arg0: Internal.Throwable) => Internal.CompletionStage<T>)): Internal.CompletableFuture<T>;
        exceptionallyComposeAsync(arg0: ((arg0: any) => any)): Internal.CompletionStage<any>;
        resultNow(): T;
        thenCombine(arg0: Internal.CompletionStage<any>, arg1: ((arg0: any, arg1: any) => any)): Internal.CompletionStage<any>;
        thenCombine<U_, V_>(arg0: Internal.CompletionStage<U_>, arg1: ((arg0: T, arg1: U_) => V_)): Internal.CompletableFuture<V_>;
        toString(): string;
        minimalCompletionStage(): Internal.CompletionStage<T>;
        complete(arg0: T): boolean;
        static completedStage<U_>(arg0: U_): Internal.CompletionStage<U_>;
        get numberOfDependents(): number;
        get cancelled(): boolean;
        get completedExceptionally(): boolean;
        get done(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CompletableFuture_<T> = CompletableFuture<T>;
    interface FrustumExtended {
        fastAabbTest(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
    }
    type FrustumExtended_ = FrustumExtended;
    class ShapelessRecipe extends Document.Object implements Internal.ICraftingRecipe {
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_199560_c(): ResourceLocation;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_193358_e(): string;
        func_77571_b(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShapelessRecipe_ = ShapelessRecipe;
    interface FuncSupplier$Func2 extends Internal.FuncSupplier {
        create2(arg0: Internal.Unit, arg1: Internal.Unit): Internal.Unit;
        create(args: Internal.List<Internal.Unit>): Internal.Unit;
    }
    type FuncSupplier$Func2_ = ((arg0: Internal.Unit, arg1: Internal.Unit) => Internal.Unit) | FuncSupplier$Func2;
    interface Spliterator <T> {
        trySplit(): Internal.Spliterator<T>;
        tryAdvance(arg0: ((arg0: T) => void)): boolean;
        characteristics(): number;
        getComparator(): Internal.Comparator<T>;
        getExactSizeIfKnown(): number;
        estimateSize(): number;
        hasCharacteristics(arg0: number): boolean;
        forEachRemaining(arg0: ((arg0: T) => void)): void;
    }
    type Spliterator_<T> = Spliterator<T>;
    class Framebuffer extends Document.Object {
        func_147610_a(arg0: boolean): void;
        enableStencil(): void;
        isStencilEnabled(): boolean;
        func_216493_b(arg0: boolean): void;
        func_216492_b(arg0: number, arg1: number, arg2: boolean): void;
        func_216491_a(arg0: number, arg1: number, arg2: boolean): void;
        func_242996_f(): number;
        func_242997_g(): number;
        func_147609_e(): void;
        func_178038_a(arg0: number, arg1: number, arg2: boolean): void;
        func_147606_d(): void;
        func_147608_a(): void;
        func_237506_a_(arg0: Internal.Framebuffer): void;
        func_147607_a(arg0: number): void;
        func_147615_c(arg0: number, arg1: number): void;
        func_147612_c(): void;
        func_147611_b(): void;
        func_147604_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        field_147621_c : number;
        field_147622_a : number;
        field_147620_b : number;
        field_147618_d : number;
        field_147616_f : number;
        field_147623_j : number;
        readonly field_147619_e : boolean;
        readonly field_147625_i : number[];
        get stencilEnabled(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Framebuffer_ = Framebuffer;
    abstract class EnumSet <E> extends Internal.AbstractSet<E> implements Internal.Cloneable, Internal.Serializable {
        static allOf<E_>(arg0: Internal.Class_<E_>): Internal.EnumSet<E_>;
        static complementOf<E_>(arg0: Internal.EnumSet<E_>): Internal.EnumSet<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_): Internal.EnumSet<E_>;
        static of<E_>(arg0: E_, arg1: E_): Internal.EnumSet<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_): Internal.EnumSet<E_>;
        static of<E_>(arg0: E_, arg1: E_[]): Internal.EnumSet<E_>;
        static of<E_>(arg0: E_): Internal.EnumSet<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_): Internal.EnumSet<E_>;
        clone(): Internal.EnumSet<E>;
        clone(): any;
        static range<E_>(arg0: E_, arg1: E_): Internal.EnumSet<E_>;
        static noneOf<E_>(arg0: Internal.Class_<E_>): Internal.EnumSet<E_>;
        static copyOf<E_>(arg0: Internal.Collection<E_>): Internal.EnumSet<E_>;
        static copyOf<E_>(arg0: Internal.EnumSet<E_>): Internal.EnumSet<E_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EnumSet_<E> = EnumSet<E>;
    class PointOfInterestDebugRenderer$BrainInfo extends Document.Object {
        func_217746_a(): Internal.UUID;
        readonly field_217747_a : Internal.UUID;
        readonly field_217752_f : Internal.List<string>;
        readonly field_239360_q_ : Internal.Set<BlockPos>;
        readonly field_217748_b : number;
        readonly field_223456_i : boolean;
        readonly field_217753_g : Internal.List<string>;
        readonly field_217749_c : string;
        readonly field_223457_m : Internal.List<string>;
        readonly field_217754_h : Internal.Set<BlockPos>;
        readonly field_239349_f_ : number;
        readonly field_217750_d : Internal.IPosition;
        readonly field_217751_e : Internal.List<string>;
        readonly field_222930_g : Internal.Path;
        readonly field_222928_d : string;
        readonly field_239350_g_ : number;
        readonly field_222929_e : number;
        readonly field_223455_g : string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PointOfInterestDebugRenderer$BrainInfo_ = PointOfInterestDebugRenderer$BrainInfo;
    interface ScatteringByteChannel extends Internal.ReadableByteChannel {
        read(arg0: Internal.ByteBuffer[], arg1: number, arg2: number): number;
        read(arg0: Internal.ByteBuffer[]): number;
    }
    type ScatteringByteChannel_ = ScatteringByteChannel;
    class UpgradeData extends Document.Object {
        func_196992_b(): Internal.CompoundNBT;
        func_196990_a(arg0: Internal.Chunk): void;
        func_196988_a(): boolean;
        static readonly field_196994_a : Internal.UpgradeData;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type UpgradeData_ = UpgradeData;
    class LlamaSpitEntity extends Internal.ProjectileEntity {
        func_213297_N(): Internal.IPacket<any>;
        func_70071_h_(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LlamaSpitEntity_ = LlamaSpitEntity;
    interface ICraftingRecipe extends Internal.IRecipe<Internal.CraftingInventory> {
        func_222127_g(): Internal.IRecipeType<any>;
    }
    type ICraftingRecipe_ = ICraftingRecipe;
    interface ScheduledFuture <V> extends io.netty.util.concurrent.Future<V>, java_.util.concurrent.ScheduledFuture<V> {
    }
    type ScheduledFuture_<V> = ScheduledFuture<V>;
    class CTabCompletePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_197709_a(): number;
        func_197707_b(): string;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CTabCompletePacket_ = CTabCompletePacket;
    abstract class WorldCarver <C> extends Internal.ForgeRegistryEntry<Internal.WorldCarver<any>> {
        func_222704_c(): number;
        func_212868_a_(arg0: Internal.Random, arg1: number, arg2: number, arg3: C): boolean;
        func_242761_a(arg0: C): Internal.ConfiguredCarver<C>;
        func_236244_c_(): Internal.Codec<Internal.ConfiguredCarver<C>>;
        func_225555_a_(arg0: Internal.IChunk, arg1: ((arg0: BlockPos) => Internal.Biome), arg2: Internal.Random, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: Internal.BitSet, arg9: C): boolean;
        static readonly field_222709_a : Internal.WorldCarver<Internal.ProbabilityConfig>;
        static readonly field_236240_b_ : Internal.WorldCarver<Internal.ProbabilityConfig>;
        static readonly field_222712_d : Internal.WorldCarver<Internal.ProbabilityConfig>;
        static readonly field_222713_e : Internal.WorldCarver<Internal.ProbabilityConfig>;
        static readonly field_222711_c : Internal.WorldCarver<Internal.ProbabilityConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldCarver_<C> = WorldCarver<C>;
    class RuinedPortalStructure$Location extends Internal.Enum<Internal.RuinedPortalStructure$Location> implements Internal.IStringSerializable {
        static valueOf(arg0: string): Internal.RuinedPortalStructure$Location;
        func_176610_l(): string;
        static values(): Internal.RuinedPortalStructure$Location[];
        static func_236346_a_(arg0: string): Internal.RuinedPortalStructure$Location;
        func_236347_b_(): string;
        static readonly field_236342_h_ : Internal.Codec<Internal.RuinedPortalStructure$Location>;
        static readonly JUNGLE : Internal.RuinedPortalStructure$Location;
        static readonly NETHER : Internal.RuinedPortalStructure$Location;
        static readonly OCEAN : Internal.RuinedPortalStructure$Location;
        static readonly MOUNTAIN : Internal.RuinedPortalStructure$Location;
        static readonly DESERT : Internal.RuinedPortalStructure$Location;
        static readonly SWAMP : Internal.RuinedPortalStructure$Location;
        static readonly STANDARD : Internal.RuinedPortalStructure$Location;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RuinedPortalStructure$Location_ = "standard" | "desert" | "jungle" | "swamp" | "mountain" | "ocean" | "nether" | RuinedPortalStructure$Location;
    interface SingleRedirectModifier <S> {
        apply(arg0: Internal.CommandContext<S>): S;
    }
    type SingleRedirectModifier_<S> = ((arg0: Internal.CommandContext<S>) => S) | SingleRedirectModifier<S>;
    abstract class FileLock extends Document.Object implements Internal.AutoCloseable {
        size(): number;
        release(): void;
        isValid(): boolean;
        channel(): Internal.FileChannel;
        overlaps(arg0: number, arg1: number): boolean;
        toString(): string;
        position(): number;
        close(): void;
        isShared(): boolean;
        acquiredBy(): Internal.Channel;
        get valid(): boolean;
        get shared(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FileLock_ = FileLock;
    abstract class MutableRegistry <T> extends Internal.Registry<T> {
        func_241874_a<V_>(arg0: Internal.OptionalInt, arg1: Internal.RegistryKey<T>, arg2: V_, arg3: Internal.Lifecycle): V_;
        func_218381_a<V_>(arg0: Internal.RegistryKey<T>, arg1: V_, arg2: Internal.Lifecycle): V_;
        func_218382_a<V_>(arg0: number, arg1: Internal.RegistryKey<T>, arg2: V_, arg3: Internal.Lifecycle): V_;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MutableRegistry_<T> = MutableRegistry<T>;
    interface ObjectIterable <K> extends Internal.Iterable<K> {
        iterator(): Internal.ObjectIterator<K>;
        iterator(): Internal.Iterator<any>;
    }
    type ObjectIterable_<K> = ObjectIterable<K>;
    class LootContext$Builder extends Document.Object {
        func_216023_a(arg0: Internal.Random): Internal.LootContext$Builder;
        func_216022_a(arg0: Internal.LootParameterSet): Internal.LootContext;
        func_216021_b<T_>(arg0: Internal.LootParameter<T_>, arg1: T_): Internal.LootContext$Builder;
        func_216020_a(arg0: number, arg1: Internal.Random): Internal.LootContext$Builder;
        func_216016_a(arg0: number): Internal.LootContext$Builder;
        func_216015_a<T_>(arg0: Internal.LootParameter<T_>, arg1: T_): Internal.LootContext$Builder;
        func_216024_a<T_>(arg0: Internal.LootParameter<T_>): T_;
        func_216019_b<T_>(arg0: Internal.LootParameter<T_>): T_;
        func_186469_a(arg0: number): Internal.LootContext$Builder;
        func_216018_a(): Internal.ServerWorld;
        func_216017_a(arg0: ResourceLocation_, arg1: ((arg0: Internal.LootContext, arg1: ((arg0: Internal.ItemStack) => void)) => void)): Internal.LootContext$Builder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootContext$Builder_ = LootContext$Builder;
    class ScriptPackInfo extends Document.Object {
        readonly displayName : Internal.ITextComponent;
        readonly namespace : string;
        readonly pathStart : string;
        readonly scripts : Internal.List<Internal.ScriptFileInfo>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScriptPackInfo_ = ScriptPackInfo;
    class ClientChatEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getMessage(): string;
        setMessage(arg0: string): void;
        isCancelable(): boolean;
        getOriginalMessage(): string;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get message(): string;
        get originalMessage(): string;
        set message(arg0: string);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientChatEvent_ = ClientChatEvent;
    class Runtime$Version extends Document.Object implements Internal.Comparable<Internal.Runtime$Version> {
        compareToIgnoreOptional(arg0: Internal.Runtime$Version): number;
        pre(): Internal.Optional<string>;
        minor(): number;
        update(): number;
        optional(): Internal.Optional<string>;
        static parse(arg0: string): Internal.Runtime$Version;
        compareTo(arg0: Internal.Runtime$Version): number;
        compareTo(arg0: any): number;
        version(): Internal.List<number>;
        patch(): number;
        equalsIgnoreOptional(arg0: any): boolean;
        security(): number;
        major(): number;
        feature(): number;
        interim(): number;
        build(): Internal.Optional<number>;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Runtime$Version_ = Runtime$Version;
    interface Channel$Unsafe {
        disconnect(arg0: Internal.ChannelPromise): void;
        deregister(arg0: Internal.ChannelPromise): void;
        recvBufAllocHandle(): Internal.RecvByteBufAllocator$Handle;
        closeForcibly(): void;
        beginRead(): void;
        bind(arg0: Internal.SocketAddress, arg1: Internal.ChannelPromise): void;
        flush(): void;
        voidPromise(): Internal.ChannelPromise;
        localAddress(): Internal.SocketAddress;
        outboundBuffer(): Internal.ChannelOutboundBuffer;
        close(arg0: Internal.ChannelPromise): void;
        write(arg0: any, arg1: Internal.ChannelPromise): void;
        connect(arg0: Internal.SocketAddress, arg1: Internal.SocketAddress, arg2: Internal.ChannelPromise): void;
        remoteAddress(): Internal.SocketAddress;
        register(arg0: Internal.EventLoop, arg1: Internal.ChannelPromise): void;
    }
    type Channel$Unsafe_ = Channel$Unsafe;
    class CSetDifficultyPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218773_b(): Internal.Difficulty;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CSetDifficultyPacket_ = CSetDifficultyPacket;
    class SpectatorDetails extends Document.Object {
        func_178680_a(arg0: number): Internal.ISpectatorMenuObject;
        func_178681_b(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpectatorDetails_ = SpectatorDetails;
    class NewChatGui extends Internal.AbstractGui {
        func_194815_g(): number;
        func_146240_d(): void;
        static func_194816_c(arg0: number): number;
        func_146231_a(arg0: boolean): void;
        func_146234_a(arg0: Internal.ITextComponent_, arg1: number): void;
        func_146245_b(): void;
        func_146242_c(arg0: number): void;
        func_146241_e(): boolean;
        func_146227_a(arg0: Internal.ITextComponent_): void;
        func_194813_a(arg0: number): void;
        func_146238_c(): Internal.List<string>;
        func_146232_i(): number;
        func_146239_a(arg0: string): void;
        func_146246_g(): number;
        func_146228_f(): number;
        static func_194814_b(arg0: number): number;
        func_238491_a_(arg0: number, arg1: number): boolean;
        func_238492_a_(arg0: Internal.MatrixStack, arg1: number): void;
        func_238495_b_(arg0: Internal.ITextComponent_): void;
        func_238493_a_(arg0: Internal.ITextComponent_, arg1: number, arg2: number, arg3: boolean): void;
        func_238494_b_(arg0: number, arg1: number): Internal.Style;
        readonly field_146253_i : Internal.List<Internal.ChatLine<((arg0: ((arg0: number, arg1: Internal.Style, arg2: number) => boolean)) => boolean)>>;
        field_146250_j : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NewChatGui_ = NewChatGui;
    class FakeServerPlayerDataJS extends Internal.ServerPlayerDataJS {
        getMinecraftPlayer(): Internal.PlayerEntity;
        getMinecraftPlayer(): Internal.ServerPlayerEntity;
        getOverworld(): Internal.WorldJS;
        player : Internal.ServerPlayerEntity;
        get minecraftPlayer(): Internal.ServerPlayerEntity;
        get overworld(): Internal.WorldJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FakeServerPlayerDataJS_ = FakeServerPlayerDataJS;
    abstract class WorldSavedData extends Document.Object implements Internal.INBTSerializable<Internal.CompoundNBT> {
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_215158_a(arg0: Internal.File): void;
        func_76188_b(): boolean;
        func_189551_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        deserializeNBT(arg0: Internal.CompoundNBT): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_76186_a(arg0: boolean): void;
        func_76185_a(): void;
        func_76184_a(arg0: Internal.CompoundNBT): void;
        func_195925_e(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldSavedData_ = WorldSavedData;
    class OptionalInt extends Document.Object {
        isEmpty(): boolean;
        isPresent(): boolean;
        orElse(arg0: number): number;
        getAsInt(): number;
        orElseThrow<X_>(arg0: (() => X_)): number;
        orElseThrow(): number;
        static empty(): Internal.OptionalInt;
        orElseGet(arg0: (() => number)): number;
        stream(): Internal.IntStream;
        hashCode(): number;
        ifPresentOrElse(arg0: ((arg0: number) => void), arg1: (() => void)): void;
        ifPresent(arg0: ((arg0: number) => void)): void;
        static of(arg0: number): Internal.OptionalInt;
        equals(arg0: any): boolean;
        toString(): string;
        get asInt(): number;
        get present(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OptionalInt_ = OptionalInt;
    class ForkyTrunkPlacer extends Internal.AbstractTrunkPlacer {
        func_230382_a_(arg0: Internal.IWorldGenerationReader, arg1: Internal.Random, arg2: number, arg3: BlockPos, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox, arg6: Internal.BaseTreeFeatureConfig): Internal.List<Internal.FoliagePlacer$Foliage>;
        static readonly field_236896_a_ : Internal.Codec<Internal.ForkyTrunkPlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ForkyTrunkPlacer_ = ForkyTrunkPlacer;
    class DownloadingTexture extends Internal.SimpleTexture {
        func_195413_a(arg0: Internal.IResourceManager): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DownloadingTexture_ = DownloadingTexture;
    class TNTEntity extends Internal.Entity {
        func_213297_N(): Internal.IPacket<any>;
        func_70067_L(): boolean;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_184536_l(): number;
        func_70071_h_(): void;
        func_94083_c(): Internal.LivingEntity;
        func_184535_k(): number;
        func_184534_a(arg0: number): void;
        field_70516_a : number;
        field_94084_b : Internal.LivingEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TNTEntity_ = TNTEntity;
    class Language extends Document.Object implements com.mojang.bridge.game.Language, Internal.Comparable<Internal.Language> {
        getName(): string;
        getRegion(): string;
        hashCode(): number;
        equals(arg0: any): boolean;
        func_135035_b(): boolean;
        toString(): string;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.Language): number;
        getJavaLocale(): Internal.Locale;
        getCode(): string;
        get code(): string;
        get javaLocale(): Internal.Locale;
        get name(): string;
        get region(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Language_ = Language;
    class ModuleDescriptor$Requires$Modifier extends Internal.Enum<Internal.ModuleDescriptor$Requires$Modifier> {
        static valueOf(arg0: string): Internal.ModuleDescriptor$Requires$Modifier;
        static values(): Internal.ModuleDescriptor$Requires$Modifier[];
        static readonly TRANSITIVE : Internal.ModuleDescriptor$Requires$Modifier;
        static readonly SYNTHETIC : Internal.ModuleDescriptor$Requires$Modifier;
        static readonly MANDATED : Internal.ModuleDescriptor$Requires$Modifier;
        static readonly STATIC : Internal.ModuleDescriptor$Requires$Modifier;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleDescriptor$Requires$Modifier_ = "transitive" | "static" | "synthetic" | "mandated" | ModuleDescriptor$Requires$Modifier;
    class Package extends Internal.NamedPackage implements Internal.AnnotatedElement {
        isSealed(arg0: Internal.URL): boolean;
        isSealed(): boolean;
        static getPackage(arg0: string): Internal.Package;
        getName(): string;
        isAnnotationPresent(arg0: Internal.Class_<Internal.Annotation_>): boolean;
        getSpecificationTitle(): string;
        getImplementationTitle(): string;
        isCompatibleWith(arg0: string): boolean;
        getAnnotations(): Internal.Annotation[];
        getSpecificationVendor(): string;
        getDeclaredAnnotations(): Internal.Annotation[];
        getAnnotationsByType<A_>(arg0: Internal.Class_<A_>): A_[];
        getDeclaredAnnotationsByType<A_>(arg0: Internal.Class_<A_>): A_[];
        getAnnotation<A_>(arg0: Internal.Class_<A_>): A_;
        hashCode(): number;
        static getPackages(): Internal.Package[];
        getDeclaredAnnotation<A_>(arg0: Internal.Class_<A_>): A_;
        toString(): string;
        getSpecificationVersion(): string;
        getImplementationVendor(): string;
        getImplementationVersion(): string;
        get specificationVendor(): string;
        get declaredAnnotations(): Internal.Annotation[];
        get specificationTitle(): string;
        get implementationVersion(): string;
        get sealed(): boolean;
        get name(): string;
        get implementationVendor(): string;
        get annotations(): Internal.Annotation[];
        get implementationTitle(): string;
        get packages(): Internal.Package[];
        get specificationVersion(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Package_ = Package;
    class BlockIDPredicate$PropertyObject extends Document.Object {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockIDPredicate$PropertyObject_ = BlockIDPredicate$PropertyObject;
    class PotionDiffuserBoostRecipeJS extends Internal.ThermalRecipeJS {
        serialize(): void;
        create(arg0: Internal.ListJS): void;
        amplifier(arg0: number): Internal.PotionDiffuserBoostRecipeJS;
        cycles(arg0: number): Internal.PotionDiffuserBoostRecipeJS;
        deserialize(): void;
        durationMod(arg0: number): Internal.PotionDiffuserBoostRecipeJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PotionDiffuserBoostRecipeJS_ = PotionDiffuserBoostRecipeJS;
    class DestroyBlockProgress extends Document.Object implements Internal.Comparable<Internal.DestroyBlockProgress> {
        func_82744_b(arg0: number): void;
        hashCode(): number;
        equals(arg0: any): boolean;
        func_180246_b(): BlockPos;
        func_82743_f(): number;
        func_73107_a(arg0: number): void;
        compareTo(arg0: Internal.DestroyBlockProgress): number;
        compareTo(arg0: any): number;
        func_73106_e(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DestroyBlockProgress_ = DestroyBlockProgress;
    class GiantTrunkPlacer extends Internal.AbstractTrunkPlacer {
        func_230382_a_(arg0: Internal.IWorldGenerationReader, arg1: Internal.Random, arg2: number, arg3: BlockPos, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox, arg6: Internal.BaseTreeFeatureConfig): Internal.List<Internal.FoliagePlacer$Foliage>;
        static readonly field_236898_a_ : Internal.Codec<Internal.GiantTrunkPlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GiantTrunkPlacer_ = GiantTrunkPlacer;
    abstract class UnmodifiableListIterator <E> extends Internal.UnmodifiableIterator<E> implements Internal.ListIterator<E> {
        add(arg0: E): void;
        set(arg0: E): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type UnmodifiableListIterator_<E> = UnmodifiableListIterator<E>;
    class ImmutableMultimap$Builder <K, V> extends Document.Object {
        orderKeysBy(arg0: ((arg0: any) => boolean)): Internal.ImmutableMultimap$Builder<K, V>;
        build(): Internal.ImmutableMultimap<K, V>;
        orderValuesBy(arg0: ((arg0: any) => boolean)): Internal.ImmutableMultimap$Builder<K, V>;
        putAll(arg0: Internal.Multimap<K, V>): Internal.ImmutableMultimap$Builder<K, V>;
        putAll(arg0: Internal.Iterable<Internal.Map$Entry<K, V>>): Internal.ImmutableMultimap$Builder<K, V>;
        putAll(arg0: K, arg1: Internal.Iterable<V>): Internal.ImmutableMultimap$Builder<K, V>;
        putAll(arg0: K, arg1: V[]): Internal.ImmutableMultimap$Builder<K, V>;
        put(arg0: Internal.Map$Entry<K, V>): Internal.ImmutableMultimap$Builder<K, V>;
        put(arg0: K, arg1: V): Internal.ImmutableMultimap$Builder<K, V>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableMultimap$Builder_<K, V> = ImmutableMultimap$Builder<K, V>;
    class SwampHutStructure extends Internal.Structure<Internal.NoFeatureConfig> {
        getDefaultSpawnList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        func_214557_a(): Internal.Structure$IStartFactory<Internal.NoFeatureConfig>;
        getDefaultCreatureSpawnList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        get defaultCreatureSpawnList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        get defaultSpawnList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SwampHutStructure_ = SwampHutStructure;
    class GuiScreenEvent$DrawScreenEvent$Post extends Internal.GuiScreenEvent$DrawScreenEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$DrawScreenEvent$Post_ = GuiScreenEvent$DrawScreenEvent$Post;
    class SEntityPropertiesPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149442_c(): number;
        func_149441_d(): Internal.List<Internal.SEntityPropertiesPacket$Snapshot>;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SEntityPropertiesPacket_ = SEntityPropertiesPacket;
    class EvaluatorException extends Internal.RhinoException {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EvaluatorException_ = EvaluatorException;
    class VillagerType extends Document.Object {
        static func_242371_a(arg0: Internal.Optional<Internal.RegistryKey<Internal.Biome>>): Internal.VillagerType;
        toString(): string;
        static readonly field_221179_g : Internal.VillagerType;
        static readonly field_221178_f : Internal.VillagerType;
        static readonly field_221177_e : Internal.VillagerType;
        static readonly field_221176_d : Internal.VillagerType;
        static readonly field_221175_c : Internal.VillagerType;
        static readonly field_221174_b : Internal.VillagerType;
        static readonly field_221173_a : Internal.VillagerType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VillagerType_ = VillagerType;
    class ChunkEvent$Load extends Internal.ChunkEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkEvent$Load_ = ChunkEvent$Load;
    interface IGuiClickableArea {
        getTooltipStrings(): Internal.List<Internal.ITextComponent>;
        onClick(arg0: Internal.IFocusFactory, arg1: Internal.IRecipesGui): void;
        getArea(): Internal.Rectangle2d;
    }
    type IGuiClickableArea_ = IGuiClickableArea;
    class FoxEntity$Type extends Internal.Enum<Internal.FoxEntity$Type> {
        static func_221080_a(arg0: number): Internal.FoxEntity$Type;
        func_221082_a(): string;
        static valueOf(arg0: string): Internal.FoxEntity$Type;
        static values(): Internal.FoxEntity$Type[];
        func_221083_c(): number;
        static func_242325_a(arg0: Internal.Optional<Internal.RegistryKey<Internal.Biome>>): Internal.FoxEntity$Type;
        static func_221087_a(arg0: string): Internal.FoxEntity$Type;
        static readonly RED : Internal.FoxEntity$Type;
        static readonly SNOW : Internal.FoxEntity$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FoxEntity$Type_ = "red" | "snow" | FoxEntity$Type;
    class WorldEvent$Load extends Internal.WorldEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldEvent$Load_ = WorldEvent$Load;
    class SuspiciousStewRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SuspiciousStewRecipe_ = SuspiciousStewRecipe;
    class WailaTooltipEvent extends net.minecraftforge.eventbus.api.Event {
        getCurrentTip(): Internal.List<Internal.ITextComponent>;
        getListenerList(): Internal.ListenerList;
        getAccessor(): Internal.ICommonAccessor;
        get currentTip(): Internal.List<Internal.ITextComponent>;
        get listenerList(): Internal.ListenerList;
        get accessor(): Internal.ICommonAccessor;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WailaTooltipEvent_ = WailaTooltipEvent;
    interface IntConsumer {
        andThen(arg0: ((arg0: number) => void)): Internal.IntConsumer;
        accept(arg0: number): void;
    }
    type IntConsumer_ = ((arg0: number) => void) | IntConsumer;
    abstract class Pair <L, R> extends Document.Object implements Internal.Map$Entry<L, R>, Internal.Comparable<Internal.Pair<L, R>>, Internal.Serializable {
        getKey(): L;
        getValue(): R;
        getRight(): R;
        hashCode(): number;
        static of<L_, R_>(arg0: L_, arg1: R_): Internal.Pair<L_, R_>;
        equals(arg0: any): boolean;
        toString(): string;
        toString(arg0: string): string;
        compareTo(arg0: Internal.Pair<L, R>): number;
        compareTo(arg0: any): number;
        getLeft(): L;
        get left(): L;
        get right(): R;
        get value(): R;
        get key(): L;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Pair_<L, R> = Pair<L, R>;
    abstract class AbstractSpawner extends Document.Object {
        func_184994_d(): Internal.Entity;
        func_200876_a(arg0: Internal.EntityType<any>): void;
        func_98268_b(arg0: number): boolean;
        getSpawnerEntity(): Internal.Entity;
        func_98267_a(arg0: number): void;
        func_184993_a(arg0: Internal.WeightedSpawnerEntity): void;
        func_177221_b(): BlockPos;
        func_177222_d(): number;
        func_177223_e(): number;
        func_98271_a(): Internal.World;
        func_98270_a(arg0: Internal.CompoundNBT): void;
        func_189530_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_98278_g(): void;
        get spawnerEntity(): Internal.Entity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractSpawner_ = AbstractSpawner;
    class RenderState$OverlayState extends Internal.RenderState$BooleanState {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$OverlayState_ = RenderState$OverlayState;
    interface Function4 <T1, T2, T3, T4, R> {
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4): R;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function<T4, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.BiFunction<T3, T4, R>>;
        curry(): Internal.Function<T1, Internal.Function3<T2, T3, T4, R>>;
    }
    type Function4_<T1, T2, T3, T4, R> = Function4<T1, T2, T3, T4, R>;
    class SilverfishEntity extends Internal.MonsterEntity {
        func_70668_bt(): Internal.CreatureAttribute;
        func_70071_h_(): void;
        func_70033_W(): number;
        static func_223331_b(arg0: Internal.EntityType<Internal.SilverfishEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        static func_234301_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_181013_g(arg0: number): void;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SilverfishEntity_ = SilverfishEntity;
    abstract class PointFree <T> extends Document.Object {
        eval(): Internal.Function<Internal.DynamicOps<any>, T>;
        static indent(arg0: number): string;
        toString(arg0: number): string;
        toString(): string;
        evalCached(): Internal.Function<Internal.DynamicOps<any>, T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PointFree_<T> = PointFree<T>;
    abstract class RayTraceResult extends Document.Object {
        func_216346_c(): Internal.RayTraceResult$Type;
        func_237486_a_(arg0: Internal.Entity): number;
        func_216347_e(): Vec3;
        field_72307_f : Vec3;
        subHit : number;
        hitInfo : any;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RayTraceResult_ = RayTraceResult;
    class OcelotEntity extends Internal.AnimalEntity {
        func_70619_bc(): void;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        static func_234201_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70103_a(arg0: number): void;
        func_213397_c(arg0: number): boolean;
        static func_223319_c(arg0: Internal.EntityType<Internal.OcelotEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_241205_ce_(): Vec3;
        func_205019_a(arg0: Internal.IWorldReader): boolean;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70627_aG(): number;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.OcelotEntity;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OcelotEntity_ = OcelotEntity;
    class EmptyCarverConfig extends Document.Object implements Internal.ICarverConfig {
        static readonly field_236238_c_ : Internal.EmptyCarverConfig;
        static readonly field_236237_b_ : Internal.Codec<Internal.EmptyCarverConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EmptyCarverConfig_ = EmptyCarverConfig;
    class EyeOfEnderEntity extends Internal.Entity implements Internal.IRendersAsItem, Internal.EyeOfEnderAccess, Internal.EyeOfEnderData {
        func_213297_N(): Internal.IPacket<any>;
        func_184543_l(): Internal.ItemStack;
        setLocateTaskOngoing(locateTaskOngoing: boolean): void;
        func_213863_b(arg0: Internal.ItemStack): void;
        func_70071_h_(): void;
        func_70112_a(arg0: number): boolean;
        func_180465_a(arg0: BlockPos): void;
        setLife(arg0: number): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70016_h(arg0: number, arg1: number, arg2: number): void;
        func_70075_an(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        handler$zhg000$skipTick(ci: Internal.CallbackInfo): void;
        func_70013_c(): number;
        set locateTaskOngoing(locateTaskOngoing: boolean);
        set life(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EyeOfEnderEntity_ = EyeOfEnderEntity;
    interface Spliterator$OfDouble extends Internal.Spliterator$OfPrimitive<number, Internal.DoubleConsumer, Internal.Spliterator$OfDouble> {
        trySplit(): Internal.Spliterator$OfPrimitive<any, any, any>;
        trySplit(): Internal.Spliterator<any>;
        trySplit(): Internal.Spliterator$OfDouble;
        tryAdvance(arg0: any): boolean;
        tryAdvance(arg0: ((arg0: number) => void)): boolean;
        tryAdvance(arg0: ((arg0: number) => void)): boolean;
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
    }
    type Spliterator$OfDouble_ = Spliterator$OfDouble;
    class ChronoUnit extends Internal.Enum<Internal.ChronoUnit> implements Internal.TemporalUnit {
        isDurationEstimated(): boolean;
        getDuration(): Internal.Duration;
        static valueOf(arg0: string): Internal.ChronoUnit;
        isTimeBased(): boolean;
        static values(): Internal.ChronoUnit[];
        addTo<R_>(arg0: R_, arg1: number): R_;
        toString(): string;
        isDateBased(): boolean;
        between(arg0: Internal.Temporal, arg1: Internal.Temporal): number;
        isSupportedBy(arg0: Internal.Temporal): boolean;
        static readonly FOREVER : Internal.ChronoUnit;
        static readonly MICROS : Internal.ChronoUnit;
        static readonly SECONDS : Internal.ChronoUnit;
        static readonly DECADES : Internal.ChronoUnit;
        static readonly MILLENNIA : Internal.ChronoUnit;
        static readonly DAYS : Internal.ChronoUnit;
        static readonly MILLIS : Internal.ChronoUnit;
        static readonly HALF_DAYS : Internal.ChronoUnit;
        static readonly MONTHS : Internal.ChronoUnit;
        static readonly YEARS : Internal.ChronoUnit;
        static readonly HOURS : Internal.ChronoUnit;
        static readonly WEEKS : Internal.ChronoUnit;
        static readonly NANOS : Internal.ChronoUnit;
        static readonly CENTURIES : Internal.ChronoUnit;
        static readonly MINUTES : Internal.ChronoUnit;
        static readonly ERAS : Internal.ChronoUnit;
        get duration(): Internal.Duration;
        get durationEstimated(): boolean;
        get timeBased(): boolean;
        get dateBased(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChronoUnit_ = "nanos" | "micros" | "millis" | "seconds" | "minutes" | "hours" | "half_days" | "days" | "weeks" | "months" | "years" | "decades" | "centuries" | "millennia" | "eras" | "forever" | ChronoUnit;
    interface Function3 <T1, T2, T3, R> {
        apply(arg0: T1, arg1: T2, arg2: T3): R;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function<T3, R>>;
        curry(): Internal.Function<T1, Internal.BiFunction<T2, T3, R>>;
    }
    type Function3_<T1, T2, T3, R> = Function3<T1, T2, T3, R>;
    class ParsedCommandNode <S> extends Document.Object {
        hashCode(): number;
        getRange(): Internal.StringRange;
        equals(arg0: any): boolean;
        toString(): string;
        getNode(): Internal.CommandNode<S>;
        get node(): Internal.CommandNode<S>;
        get range(): Internal.StringRange;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ParsedCommandNode_<S> = ParsedCommandNode<S>;
    class TagEventJS$TagWrapper <T> extends Document.Object {
        add(ids: any): Internal.TagEventJS$TagWrapper<T>;
        removeAll(): Internal.TagEventJS$TagWrapper<T>;
        toString(): string;
        sort(): boolean;
        remove(ids: any): Internal.TagEventJS$TagWrapper<T>;
        setPriorityList(o: any): void;
        set priorityList(o: any);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TagEventJS$TagWrapper_<T> = TagEventJS$TagWrapper<T>;
    class CHeldItemChangePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149614_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CHeldItemChangePacket_ = CHeldItemChangePacket;
    class JigsawTileEntity$OrientationType extends Internal.Enum<Internal.JigsawTileEntity$OrientationType> implements Internal.IStringSerializable {
        static func_235673_a_(arg0: string): Internal.Optional<Internal.JigsawTileEntity$OrientationType>;
        static valueOf(arg0: string): Internal.JigsawTileEntity$OrientationType;
        func_176610_l(): string;
        static values(): Internal.JigsawTileEntity$OrientationType[];
        static readonly ROLLABLE : Internal.JigsawTileEntity$OrientationType;
        static readonly ALIGNED : Internal.JigsawTileEntity$OrientationType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JigsawTileEntity$OrientationType_ = "rollable" | "aligned" | JigsawTileEntity$OrientationType;
    interface AnnotatedElement {
        getAnnotationsByType<T>(arg0: Internal.Class_<T>): T[];
        getDeclaredAnnotationsByType<T>(arg0: Internal.Class_<T>): T[];
        getAnnotation<T>(arg0: Internal.Class_<T>): T;
        isAnnotationPresent(arg0: Internal.Class_<Internal.Annotation_>): boolean;
        getDeclaredAnnotation<T>(arg0: Internal.Class_<T>): T;
        getAnnotations(): Internal.Annotation[];
        getDeclaredAnnotations(): Internal.Annotation[];
    }
    type AnnotatedElement_ = AnnotatedElement;
    interface Table$Cell <R, C, V> {
        getValue(): V;
        getColumnKey(): C;
        hashCode(): number;
        equals(arg0: any): boolean;
        getRowKey(): R;
    }
    type Table$Cell_<R, C, V> = Table$Cell<R, C, V>;
    interface VillagerTrades$ITrade {
        func_221182_a(arg0: Internal.Entity, arg1: Internal.Random): Internal.MerchantOffer;
    }
    type VillagerTrades$ITrade_ = VillagerTrades$ITrade;
    class CClientSettingsPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        getLanguage(): string;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149521_d(): number;
        func_186991_f(): Internal.HandSide;
        func_149520_f(): boolean;
        func_149524_c(): string;
        func_149523_e(): Internal.ChatVisibility;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        get language(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CClientSettingsPacket_ = CClientSettingsPacket;
    class BasaltDeltasFeature extends Document.Object implements Internal.IFeatureConfig {
        func_242808_e(): Internal.FeatureSpread;
        func_242804_b(): Internal.BlockState;
        func_242807_d(): Internal.FeatureSpread;
        func_242806_c(): Internal.BlockState;
        static readonly field_236495_a_ : Internal.Codec<Internal.BasaltDeltasFeature>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BasaltDeltasFeature_ = BasaltDeltasFeature;
    class WorldBorder extends Document.Object {
        func_177743_a(arg0: Internal.AxisAlignedBB): boolean;
        func_222521_a(): Internal.VoxelShape;
        func_177745_a(arg0: Internal.Entity): number;
        func_177744_c(arg0: number): void;
        func_177746_a(arg0: BlockPos): boolean;
        func_230316_a_(): number;
        func_177741_h(): number;
        func_177747_c(arg0: number): void;
        func_212673_r(): void;
        func_177742_m(): number;
        func_177740_p(): number;
        func_177739_c(arg0: number, arg1: number): void;
        func_177732_i(): number;
        func_177749_o(): number;
        func_177748_q(): number;
        func_177738_a(arg0: number, arg1: number, arg2: number): void;
        func_177736_c(): number;
        func_177737_a(arg0: Internal.IBorderListener): void;
        func_177733_e(): number;
        func_177734_a(): Internal.BorderStatus;
        func_177750_a(arg0: number): void;
        func_177730_a(arg0: Internal.ChunkPos): boolean;
        func_177751_j(): number;
        func_177727_n(): number;
        removeListener(arg0: Internal.IBorderListener): void;
        func_235927_t_(): Internal.WorldBorder$Serializer;
        func_177722_l(): number;
        func_235926_a_(arg0: Internal.WorldBorder$Serializer): void;
        func_177728_d(): number;
        func_177729_b(arg0: number, arg1: number): number;
        func_177726_b(): number;
        func_230317_b_(): number;
        func_177724_b(arg0: number): void;
        func_177725_a(arg0: number): void;
        func_177723_b(arg0: number): void;
        static readonly field_235925_b_ : Internal.WorldBorder$Serializer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldBorder_ = WorldBorder;
    interface App <F, A> {
    }
    type App_<F, A> = App<F, A>;
    interface OpticFinder <FT> {
        findType<A>(arg0: Internal.Type<A>, arg1: boolean): Internal.Either<Internal.TypedOptic<A, any, FT, FT>, Internal.Type$FieldNotFoundException>;
        findType<A, FR>(arg0: Internal.Type<A>, arg1: Internal.Type<FR>, arg2: boolean): Internal.Either<Internal.TypedOptic<A, any, FT, FR>, Internal.Type$FieldNotFoundException>;
        inField<GT>(arg0: string, arg1: Internal.Type<GT>): Internal.OpticFinder<FT>;
        type(): Internal.Type<FT>;
    }
    type OpticFinder_<FT> = OpticFinder<FT>;
    class FluidBuilder extends Internal.BuilderBase {
        textureThick(color: number): Internal.FluidBuilder;
        setBlockstateJson(o: Internal.JsonObject): void;
        color(c: number): Internal.FluidBuilder;
        bucketColor(c: number): Internal.FluidBuilder;
        density(density: number): Internal.FluidBuilder;
        getBuilderType(): string;
        gaseous(): Internal.FluidBuilder;
        textureFlowing(id: ResourceLocation_): Internal.FluidBuilder;
        viscosity(viscosity: number): Internal.FluidBuilder;
        getBlockstateJson(): Internal.JsonObject;
        textureStill(id: ResourceLocation_): Internal.FluidBuilder;
        temperature(temperature: number): Internal.FluidBuilder;
        luminosity(luminosity: number): Internal.FluidBuilder;
        textureThin(color: number): Internal.FluidBuilder;
        setBlockModelJson(o: Internal.JsonObject): void;
        rarity(rarity: Rarity): Internal.FluidBuilder;
        getBlockModelJson(): Internal.JsonObject;
        isGaseous : boolean;
        bucketItem : Internal.BucketItem;
        stillTexture : string;
        flowingFluid : Internal.FlowingFluid;
        flowingTexture : string;
        extraPlatformInfo : any;
        stillFluid : Internal.FlowingFluid;
        block : Internal.FlowingFluidBlock;
        get builderType(): string;
        get blockstateJson(): Internal.JsonObject;
        get blockModelJson(): Internal.JsonObject;
        set blockstateJson(o: Internal.JsonObject);
        set blockModelJson(o: Internal.JsonObject);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FluidBuilder_ = FluidBuilder;
    class WorldgenRemoveEventJS extends Internal.StartupEventJS {
        removeAllSpawns(): void;
        removeSpawnsByCategory(p: ((arg0: Internal.RemoveSpawnsByCategoryProperties) => void)): void;
        isNotInBiomes(filter: string[]): boolean;
        printSpawns(category: Internal.EntityClassification_): void;
        printSpawns(): void;
        removeFeatureById(type: DecorationGenerationStep_, id: ResourceLocation[]): void;
        printFeatures(type: DecorationGenerationStep_): void;
        printFeatures(): void;
        removeSpawnsByID(p: ((arg0: Internal.RemoveSpawnsByIDProperties) => void)): void;
        removeAllFeatures(): void;
        removeAllFeatures(type: DecorationGenerationStep_): void;
        removeOres(p: ((arg0: Internal.RemoveOresProperties) => void)): void;
        getConfiguredFeatureKey(feature: Internal.ConfiguredFeature<any, any>): ResourceLocation;
        isInBiomes(filter: string[]): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldgenRemoveEventJS_ = WorldgenRemoveEventJS;
    interface IBakedModel extends Internal.IForgeBakedModel {
        func_177556_c(): boolean;
        func_177554_e(): Internal.TextureAtlasSprite;
        func_188618_c(): boolean;
        func_230044_c_(): boolean;
        func_177555_b(): boolean;
        func_188617_f(): Internal.ItemOverrideList;
        func_177552_f(): Internal.ItemCameraTransforms;
        func_200117_a(arg0: Internal.BlockState, arg1: Internal.Direction_, arg2: Internal.Random): Internal.List<Internal.BakedQuad>;
    }
    type IBakedModel_ = IBakedModel;
    abstract class RenderType extends Internal.RenderState {
        static func_230168_b_(arg0: ResourceLocation_, arg1: boolean): Internal.RenderType;
        static func_230167_a_(arg0: ResourceLocation_, arg1: boolean): Internal.RenderType;
        static func_239264_a_(arg0: ResourceLocation_, arg1: number): Internal.RenderType;
        static func_228634_a_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228630_a_(arg0: number): Internal.RenderType;
        static func_228639_c_(): Internal.RenderType;
        static func_228638_b_(arg0: ResourceLocation_): Internal.RenderType;
        static func_239269_g_(): Internal.RenderType;
        static func_228644_e_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228652_i_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228653_j_(): Internal.RenderType;
        static func_241715_r_(): Internal.RenderType;
        static func_228648_g_(arg0: ResourceLocation_): Internal.RenderType;
        static func_239265_a_(arg0: ResourceLocation_, arg1: Internal.RenderState$CullState): Internal.RenderType;
        static func_228649_h_(): Internal.RenderType;
        func_228665_s_(): boolean;
        static func_228637_a_(arg0: ResourceLocation_, arg1: boolean): Internal.RenderType;
        static func_228633_a_(arg0: string, arg1: Internal.VertexFormat, arg2: number, arg3: number, arg4: boolean, arg5: boolean, arg6: Internal.RenderType$State): Internal.RenderType$Type;
        static func_239266_b_(arg0: ResourceLocation_, arg1: boolean): Internal.RenderType;
        static func_228642_d_(arg0: ResourceLocation_): Internal.RenderType;
        func_225612_r_(): Internal.Optional<Internal.RenderType>;
        static func_228643_e_(): Internal.RenderType;
        static func_228654_j_(arg0: ResourceLocation_): Internal.RenderType;
        func_230041_s_(): boolean;
        static func_228655_k_(): Internal.RenderType;
        func_228664_q_(): number;
        static func_228647_g_(): Internal.RenderType;
        static func_228646_f_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228651_i_(): Internal.RenderType;
        static func_228650_h_(arg0: ResourceLocation_): Internal.RenderType;
        func_228662_o_(): number;
        static func_228636_a_(arg0: ResourceLocation_, arg1: number, arg2: number): Internal.RenderType;
        static func_239274_p_(): Internal.RenderType;
        func_228663_p_(): Internal.VertexFormat;
        static func_228632_a_(arg0: string, arg1: Internal.VertexFormat, arg2: number, arg3: number, arg4: Internal.RenderType$State): Internal.RenderType$Type;
        static func_228660_m_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228661_n_(): Internal.List<any>;
        static func_228640_c_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228657_l_(): Internal.RenderType;
        static func_239270_k_(): Internal.RenderType;
        static func_228641_d_(): Internal.RenderType;
        static func_243501_m(): Internal.RenderType;
        func_230169_u_(): Internal.Optional<Internal.RenderType>;
        static func_239271_l_(): Internal.RenderType;
        static func_228656_k_(arg0: ResourceLocation_): Internal.RenderType;
        static func_239263_a_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228645_f_(): Internal.RenderType;
        static func_239273_n_(): Internal.RenderType;
        static func_239267_e_(arg0: ResourceLocation_): Internal.RenderType;
        static func_239268_f_(arg0: ResourceLocation_): Internal.RenderType;
        func_228631_a_(arg0: Internal.BufferBuilder, arg1: number, arg2: number, arg3: number): void;
        static func_239272_l_(arg0: ResourceLocation_): Internal.RenderType;
        toString(): string;
        static func_228659_m_(): Internal.RenderType;
        static func_228658_l_(arg0: ResourceLocation_): Internal.RenderType;
        static readonly field_228614_Q_ : Internal.RenderType$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderType_ = RenderType;
    interface IPosWrapper {
        func_220610_a(arg0: Internal.LivingEntity): boolean;
        func_220608_a(): BlockPos;
        func_220609_b(): Vec3;
    }
    type IPosWrapper_ = IPosWrapper;
    abstract class CustomBuffer <SELF> extends Internal.Pointer$Default {
        address(): number;
        address(arg0: number): number;
        compact(): SELF;
        sizeof(): number;
        address0(): number;
        hasRemaining(): boolean;
        clear(): SELF;
        duplicate(): SELF;
        remaining(): number;
        put(arg0: SELF): SELF;
        capacity(): number;
        rewind(): SELF;
        slice(): SELF;
        slice(arg0: number, arg1: number): SELF;
        limit(): number;
        limit(arg0: number): SELF;
        reset(): SELF;
        toString(): string;
        position(): number;
        position(arg0: number): SELF;
        free(): void;
        flip(): SELF;
        mark(): SELF;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CustomBuffer_<SELF> = CustomBuffer<SELF>;
    interface PrimitiveIterator$OfLong extends Internal.PrimitiveIterator<number, Internal.LongConsumer> {
        next(): any;
        next(): number;
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
        nextLong(): number;
    }
    type PrimitiveIterator$OfLong_ = PrimitiveIterator$OfLong;
    class Enum$EnumDesc <E> extends Internal.DynamicConstantDesc<E> {
        static of<E_>(arg0: Internal.ClassDesc, arg1: string): Internal.Enum$EnumDesc<E_>;
        toString(): string;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): any;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): E;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Enum$EnumDesc_<E> = Enum$EnumDesc<E>;
    class StructureBlockTileEntity extends Internal.TileEntity {
        func_189724_l(): void;
        func_189726_i(): Internal.Rotation;
        func_145833_n(): number;
        func_189700_k(): Internal.StructureMode;
        func_184419_m(): boolean;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_189703_e(arg0: boolean): void;
        func_184417_l(): boolean;
        func_189723_d(arg0: boolean): void;
        func_189725_a(arg0: number): void;
        func_210163_a(arg0: ResourceLocation_): void;
        func_189701_a(arg0: Internal.PlayerEntity): boolean;
        func_189720_a(arg0: Internal.LivingEntity): void;
        func_184414_b(arg0: BlockPos): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_184411_a(arg0: Internal.Mirror_): void;
        func_242687_a(arg0: Internal.ServerWorld): boolean;
        func_184410_b(arg0: string): void;
        func_242688_a(arg0: Internal.ServerWorld, arg1: boolean): boolean;
        func_189708_j(): string;
        func_242689_a(arg0: Internal.ServerWorld, arg1: boolean, arg2: Internal.Template): boolean;
        func_189702_n(): number;
        func_189716_h(): Internal.Mirror;
        func_208404_d(): boolean;
        func_189717_g(): BlockPos;
        func_189706_E(): void;
        func_189721_I(): boolean;
        func_189715_d(): string;
        func_189718_a(arg0: number): void;
        func_189722_G(): boolean;
        func_189710_f(arg0: boolean): void;
        func_189711_e(): BlockPos;
        func_189712_b(arg0: boolean): boolean;
        func_227014_f_(): string;
        func_184406_a(arg0: boolean): void;
        func_184405_a(arg0: Internal.StructureMode_): void;
        func_184404_a(arg0: string): void;
        func_184409_c(arg0: BlockPos): void;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_189719_o(): number;
        func_189517_E_(): Internal.CompoundNBT;
        func_184408_a(arg0: Internal.Rotation_): void;
        func_189709_F(): boolean;
        func_189707_H(): boolean;
        func_189713_m(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureBlockTileEntity_ = StructureBlockTileEntity;
    interface DomainCombiner {
        combine(arg0: Internal.ProtectionDomain[], arg1: Internal.ProtectionDomain[]): Internal.ProtectionDomain[];
    }
    type DomainCombiner_ = DomainCombiner;
    class SimpleDateFormat extends Internal.DateFormat {
        toPattern(): string;
        formatToCharacterIterator(arg0: any): Internal.AttributedCharacterIterator;
        setDateFormatSymbols(arg0: Internal.DateFormatSymbols): void;
        applyLocalizedPattern(arg0: string): void;
        format(arg0: Internal.Date, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        set2DigitYearStart(arg0: Internal.Date): void;
        parse(arg0: string, arg1: Internal.ParsePosition): Internal.Date;
        toLocalizedPattern(): string;
        hashCode(): number;
        equals(arg0: any): boolean;
        clone(): any;
        get2DigitYearStart(): Internal.Date;
        getDateFormatSymbols(): Internal.DateFormatSymbols;
        applyPattern(arg0: string): void;
        get dateFormatSymbols(): Internal.DateFormatSymbols;
        set dateFormatSymbols(arg0: Internal.DateFormatSymbols);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SimpleDateFormat_ = SimpleDateFormat;
    class RecipeManager extends Internal.JsonReloadListener implements Internal.RecipeManagerKJS {
        func_215366_a<C_, T_>(arg0: Internal.IRecipeType<T_>): Internal.Map<ResourceLocation, Internal.IRecipe<C_>>;
        func_215367_a(arg0: ResourceLocation_): Internal.Optional<Internal.IRecipe<any>>;
        static func_215377_a(arg0: ResourceLocation_, arg1: Internal.JsonObject): Internal.IRecipe<any>;
        func_215369_c<C_, T_>(arg0: Internal.IRecipeType<T_>, arg1: C_, arg2: Internal.World): Internal.NonNullList<Internal.ItemStack>;
        func_223389_a(arg0: Internal.Iterable<Internal.IRecipe<any>>): void;
        func_215378_c(): Internal.Stream<ResourceLocation>;
        func_199510_b(): Internal.Collection<Internal.IRecipe<any>>;
        func_241447_a_<C_, T_>(arg0: Internal.IRecipeType<T_>): Internal.List<T_>;
        setRecipesKJS(arg0: Internal.Map_<any, any>): void;
        getRecipesKJS(): Internal.Map<any, any>;
        func_215370_b<C_, T_>(arg0: Internal.IRecipeType<T_>, arg1: C_, arg2: Internal.World): Internal.List<T_>;
        func_215371_a<C_, T_>(arg0: Internal.IRecipeType<T_>, arg1: C_, arg2: Internal.World): Internal.Optional<T_>;
        get recipesKJS(): Internal.Map<any, any>;
        set recipesKJS(arg0: Internal.Map_<any, any>);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecipeManager_ = RecipeManager;
    class AttributeModifierManager extends Document.Object {
        func_233791_b_(arg0: Internal.Attribute, arg1: Internal.UUID): number;
        func_233779_a_(arg0: Internal.Attribute): Internal.ModifiableAttributeInstance;
        func_233789_b_(): Internal.Collection<Internal.ModifiableAttributeInstance>;
        func_233788_a_(arg0: Internal.ListNBT): void;
        func_233782_a_(arg0: Internal.Attribute, arg1: Internal.UUID): boolean;
        func_233794_c_(): Internal.ListNBT;
        func_233790_b_(arg0: Internal.Attribute): boolean;
        func_233784_a_(arg0: Internal.AttributeModifierManager): void;
        func_233778_a_(): Internal.Set<Internal.ModifiableAttributeInstance>;
        func_233793_b_(arg0: Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>): void;
        func_233785_a_(arg0: Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>): void;
        func_233795_c_(arg0: Internal.Attribute): number;
        func_233797_d_(arg0: Internal.Attribute): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttributeModifierManager_ = AttributeModifierManager;
    interface IRideable {
        func_230265_N__(): number;
        func_233622_a_(arg0: Internal.MobEntity, arg1: Internal.BoostHelper, arg2: Vec3): boolean;
        func_184762_da(): boolean;
        func_230267_a__(arg0: Vec3): void;
    }
    type IRideable_ = IRideable;
    class DaylightDetectorTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity {
        func_73660_a(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DaylightDetectorTileEntity_ = DaylightDetectorTileEntity;
    class RemoveSpawnsByCategoryProperties extends Document.Object {
        readonly biomes : Internal.WorldgenEntryList;
        readonly categories : Internal.WorldgenEntryList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RemoveSpawnsByCategoryProperties_ = RemoveSpawnsByCategoryProperties;
    class ItemCraftedEventJS extends Internal.PlayerEventJS {
        getItem(): Internal.ItemStackJS;
        getInventory(): Internal.InventoryJS;
        getEntity(): Internal.EntityJS;
        get item(): Internal.ItemStackJS;
        get inventory(): Internal.InventoryJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemCraftedEventJS_ = ItemCraftedEventJS;
    interface Duck {
        setRecipe(arg0: Internal.AbstractCookingRecipe): void;
        setFailedMatch(arg0: Internal.ItemStack): void;
        getRecipe(): Internal.AbstractCookingRecipe;
        getFailedMatch(): Internal.ItemStack;
    }
    type Duck_ = Duck;
    class OpList extends Internal.UserList<Internal.GameProfile, any> {
        func_183026_b(arg0: Internal.GameProfile): boolean;
        func_152685_a(): string[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OpList_ = OpList;
    abstract class DateFormat extends Internal.Format {
        getTimeZone(): Internal.TimeZone;
        isLenient(): boolean;
        format(arg0: any, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        format(arg0: Internal.Date): string;
        format(arg0: Internal.Date, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        parse(arg0: string): Internal.Date;
        parse(arg0: string, arg1: Internal.ParsePosition): Internal.Date;
        static getTimeInstance(arg0: number, arg1: Internal.Locale): Internal.DateFormat;
        static getTimeInstance(arg0: number): Internal.DateFormat;
        static getTimeInstance(): Internal.DateFormat;
        setNumberFormat(arg0: Internal.NumberFormat): void;
        getCalendar(): Internal.Calendar;
        setLenient(arg0: boolean): void;
        parseObject(arg0: string, arg1: Internal.ParsePosition): any;
        static getDateInstance(arg0: number): Internal.DateFormat;
        static getDateInstance(arg0: number, arg1: Internal.Locale): Internal.DateFormat;
        static getDateInstance(): Internal.DateFormat;
        getNumberFormat(): Internal.NumberFormat;
        setCalendar(arg0: Internal.Calendar): void;
        static getDateTimeInstance(arg0: number, arg1: number): Internal.DateFormat;
        static getDateTimeInstance(arg0: number, arg1: number, arg2: Internal.Locale): Internal.DateFormat;
        static getDateTimeInstance(): Internal.DateFormat;
        hashCode(): number;
        equals(arg0: any): boolean;
        setTimeZone(arg0: Internal.TimeZone): void;
        clone(): any;
        static getInstance(): Internal.DateFormat;
        static getAvailableLocales(): Internal.Locale[];
        static readonly DAY_OF_YEAR_FIELD : 10;
        static readonly DATE_FIELD : 3;
        static readonly MILLISECOND_FIELD : 8;
        static readonly MEDIUM : 2;
        static readonly YEAR_FIELD : 1;
        static readonly DAY_OF_WEEK_IN_MONTH_FIELD : 11;
        static readonly MINUTE_FIELD : 6;
        static readonly FULL : 0;
        static readonly ERA_FIELD : 0;
        static readonly AM_PM_FIELD : 14;
        static readonly SHORT : 3;
        static readonly HOUR_OF_DAY1_FIELD : 4;
        static readonly MONTH_FIELD : 2;
        static readonly DAY_OF_WEEK_FIELD : 9;
        static readonly WEEK_OF_YEAR_FIELD : 12;
        static readonly HOUR1_FIELD : 15;
        static readonly HOUR_OF_DAY0_FIELD : 5;
        static readonly WEEK_OF_MONTH_FIELD : 13;
        static readonly TIMEZONE_FIELD : 17;
        static readonly HOUR0_FIELD : 16;
        static readonly DEFAULT : 2;
        static readonly SECOND_FIELD : 7;
        static readonly LONG : 1;
        get timeInstance(): Internal.DateFormat;
        get calendar(): Internal.Calendar;
        get instance(): Internal.DateFormat;
        get numberFormat(): Internal.NumberFormat;
        get dateInstance(): Internal.DateFormat;
        get timeZone(): Internal.TimeZone;
        get dateTimeInstance(): Internal.DateFormat;
        get lenient(): boolean;
        get availableLocales(): Internal.Locale[];
        set calendar(arg0: Internal.Calendar);
        set numberFormat(arg0: Internal.NumberFormat);
        set timeZone(arg0: Internal.TimeZone);
        set lenient(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DateFormat_ = DateFormat;
    class Activity extends Internal.ForgeRegistryEntry<Internal.Activity> {
        func_221364_a(): string;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        static readonly field_221369_e : Internal.Activity;
        static readonly field_221366_b : Internal.Activity;
        static readonly field_221372_h : Internal.Activity;
        static readonly field_234622_l_ : Internal.Activity;
        static readonly field_221365_a : Internal.Activity;
        static readonly field_221371_g : Internal.Activity;
        static readonly field_234623_m_ : Internal.Activity;
        static readonly field_221368_d : Internal.Activity;
        static readonly field_221374_j : Internal.Activity;
        static readonly field_234621_k_ : Internal.Activity;
        static readonly field_221367_c : Internal.Activity;
        static readonly field_221373_i : Internal.Activity;
        static readonly field_221370_f : Internal.Activity;
        static readonly field_234624_n_ : Internal.Activity;
        static readonly field_234625_o_ : Internal.Activity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Activity_ = Activity;
    interface Multiset$Entry <E> {
        getElement(): E;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        getCount(): number;
    }
    type Multiset$Entry_<E> = Multiset$Entry<E>;
    class ActiveRenderInfo extends Document.Object {
        func_227996_l_(): Internal.Vector3f;
        func_227995_f_(): Internal.Quaternion;
        func_216771_k(): Internal.FluidState;
        func_216777_e(): number;
        func_216786_h(): boolean;
        func_216778_f(): number;
        func_216781_o(): void;
        getBlockAtCamera(): Internal.BlockState;
        func_227997_m_(): Internal.Vector3f;
        func_216772_a(arg0: Internal.IBlockReader, arg1: Internal.Entity, arg2: boolean, arg3: boolean, arg4: number): void;
        func_216780_d(): BlockPos;
        func_216783_a(): void;
        setAnglesInternal(arg0: number, arg1: number): void;
        func_216785_c(): Vec3;
        func_216770_i(): boolean;
        func_216773_g(): Internal.Entity;
        get blockAtCamera(): Internal.BlockState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ActiveRenderInfo_ = ActiveRenderInfo;
    class ReplaceBlockConfig extends Document.Object implements Internal.IFeatureConfig {
        static readonly field_236604_a_ : Internal.Codec<Internal.ReplaceBlockConfig>;
        readonly field_202457_a : Internal.BlockState;
        readonly field_202458_b : Internal.BlockState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ReplaceBlockConfig_ = ReplaceBlockConfig;
    class DataPackRegistries extends Document.Object implements Internal.AutoCloseable {
        func_240965_c_(): Internal.LootTableManager;
        func_240971_i_(): void;
        func_240968_f_(): Internal.Commands;
        func_240967_e_(): Internal.RecipeManager;
        func_240970_h_(): Internal.IResourceManager;
        func_240964_b_(): Internal.LootPredicateManager;
        func_240969_g_(): Internal.AdvancementManager;
        func_244358_d(): Internal.ITagCollectionSupplier;
        func_240960_a_(): Internal.FunctionReloader;
        close(): void;
        static func_240961_a_(arg0: Internal.List<Internal.IResourcePack>, arg1: Internal.Commands$EnvironmentType_, arg2: number, arg3: Internal.Executor, arg4: Internal.Executor): Internal.CompletableFuture<Internal.DataPackRegistries>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DataPackRegistries_ = DataPackRegistries;
    interface IntSupplier {
        getAsInt(): number;
    }
    type IntSupplier_ = (() => number) | IntSupplier;
    class AxisAlignedBB extends Document.Object {
        func_186662_g(arg0: number): Internal.AxisAlignedBB;
        func_186668_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        func_197744_e(arg0: number, arg1: number, arg2: number): boolean;
        static func_197743_a(arg0: Internal.Iterable<Internal.AxisAlignedBB>, arg1: Vec3, arg2: Vec3, arg3: BlockPos): Internal.BlockRayTraceResult;
        func_197742_b(arg0: Internal.Direction$Axis_): number;
        func_197745_a(arg0: Internal.Direction$Axis_): number;
        func_189972_c(): Vec3;
        func_186664_h(arg0: number): Internal.AxisAlignedBB;
        func_189973_a(arg0: Vec3, arg1: Vec3): boolean;
        func_111270_a(arg0: Internal.AxisAlignedBB): Internal.AxisAlignedBB;
        func_72320_b(): number;
        func_72321_a(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        func_72314_b(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        hashCode(): number;
        func_72318_a(arg0: Vec3): boolean;
        func_186670_a(arg0: BlockPos): Internal.AxisAlignedBB;
        func_72317_d(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        func_191195_a(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        func_191194_a(arg0: Vec3): Internal.AxisAlignedBB;
        static func_241549_a_(arg0: Vec3): Internal.AxisAlignedBB;
        func_181656_b(): boolean;
        func_72326_a(arg0: Internal.AxisAlignedBB): boolean;
        func_216365_b(arg0: Vec3, arg1: Vec3): Internal.Optional<Vec3>;
        equals(arg0: any): boolean;
        func_216362_d(): number;
        func_216364_b(): number;
        func_191500_a(arg0: Internal.AxisAlignedBB): Internal.AxisAlignedBB;
        static func_216363_a(arg0: Internal.MutableBoundingBox): Internal.AxisAlignedBB;
        toString(): string;
        func_216360_c(): number;
        func_216361_a(arg0: Vec3): Internal.AxisAlignedBB;
        static func_241550_g_(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        readonly field_72340_a : number;
        readonly field_72338_b : number;
        readonly field_72336_d : number;
        readonly field_72334_f : number;
        readonly field_72339_c : number;
        readonly field_72337_e : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AxisAlignedBB_ = AxisAlignedBB;
    class NarratorStatus extends Internal.Enum<Internal.NarratorStatus> {
        func_238233_b_(): Internal.ITextComponent;
        static func_216825_a(arg0: number): Internal.NarratorStatus;
        static valueOf(arg0: string): Internal.NarratorStatus;
        static values(): Internal.NarratorStatus[];
        func_216827_a(): number;
        static readonly SYSTEM : Internal.NarratorStatus;
        static readonly ALL : Internal.NarratorStatus;
        static readonly CHAT : Internal.NarratorStatus;
        static readonly OFF : Internal.NarratorStatus;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NarratorStatus_ = "off" | "all" | "chat" | "system" | NarratorStatus;
    interface EventExecutor extends Internal.EventExecutorGroup {
        next(): Internal.EventExecutor;
        inEventLoop(): boolean;
        inEventLoop(arg0: Internal.Thread): boolean;
        parent(): Internal.EventExecutorGroup;
        newProgressivePromise<V_>(): Internal.ProgressivePromise<V_>;
        newSucceededFuture<V_>(arg0: V_): io.netty.util.concurrent.Future<V_>;
        newFailedFuture<V_>(arg0: Internal.Throwable): io.netty.util.concurrent.Future<V_>;
        newPromise<V_>(): Internal.Promise<V_>;
    }
    type EventExecutor_ = EventExecutor;
    class ModelGenerator$Element extends Document.Object {
        toJson(): Internal.JsonObject;
        face(direction: Internal.Direction_, consumer: ((arg0: Internal.ModelGenerator$Face) => void)): void;
        box(b: Internal.AxisAlignedBB): Internal.ModelGenerator$Element;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModelGenerator$Element_ = ModelGenerator$Element;
    class BiomeGenerationSettings extends Document.Object {
        func_242502_e(): Internal.ISurfaceBuilderConfig;
        func_242496_b(): Internal.List<Internal.ConfiguredFeature<any, any>>;
        func_242493_a(arg0: Internal.Structure<any>): boolean;
        func_242491_a(arg0: Internal.StructureFeature<any, any>): Internal.StructureFeature<any, any>;
        func_242489_a(arg0: CarvingGenerationStep_): Internal.List<Internal.Supplier<Internal.ConfiguredCarver<any>>>;
        getCarvingStages(): Internal.Set<CarvingGenerationStep>;
        func_242498_c(): Internal.List<Internal.List<Internal.Supplier<Internal.ConfiguredFeature<any, any>>>>;
        func_242500_d(): Internal.Supplier<Internal.ConfiguredSurfaceBuilder<any>>;
        func_242487_a(): Internal.Collection<Internal.Supplier<Internal.StructureFeature<any, any>>>;
        static readonly field_242479_a : Internal.Logger;
        static readonly field_242481_c : Internal.MapCodec<Internal.BiomeGenerationSettings>;
        static readonly field_242480_b : Internal.BiomeGenerationSettings;
        get carvingStages(): Internal.Set<CarvingGenerationStep>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BiomeGenerationSettings_ = BiomeGenerationSettings;
    class WorldDecoratingHelper extends Document.Object {
        func_242895_b(): number;
        func_242894_a(arg0: BlockPos): Internal.BlockState;
        func_242892_a(arg0: Internal.ChunkPos, arg1: CarvingGenerationStep_): Internal.BitSet;
        func_242893_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_242891_a(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldDecoratingHelper_ = WorldDecoratingHelper;
    abstract class EntityViewRenderEvent extends net.minecraftforge.eventbus.api.Event {
        getRenderer(): Internal.GameRenderer;
        getListenerList(): Internal.ListenerList;
        getInfo(): Internal.ActiveRenderInfo;
        getRenderPartialTicks(): number;
        get renderer(): Internal.GameRenderer;
        get listenerList(): Internal.ListenerList;
        get renderPartialTicks(): number;
        get info(): Internal.ActiveRenderInfo;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityViewRenderEvent_ = EntityViewRenderEvent;
    abstract class AbstractReferenceCountedByteBuf extends Internal.AbstractByteBuf {
        refCnt(): number;
        release(): boolean;
        release(arg0: number): boolean;
        retain(arg0: number): Internal.ReferenceCounted;
        retain(arg0: number): Internal.ByteBuf;
        retain(): Internal.ReferenceCounted;
        retain(): Internal.ByteBuf;
        touch(arg0: any): Internal.ByteBuf;
        touch(arg0: any): Internal.ReferenceCounted;
        touch(): Internal.ReferenceCounted;
        touch(): Internal.ByteBuf;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractReferenceCountedByteBuf_ = AbstractReferenceCountedByteBuf;
    class CChatMessagePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149439_c(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CChatMessagePacket_ = CChatMessagePacket;
    interface IRecipe <C> {
        func_77572_b(arg0: C): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: C): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_199560_c(): ResourceLocation;
        func_77569_a(arg0: C, arg1: Internal.World): boolean;
        func_192399_d(): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_193358_e(): string;
        func_222128_h(): Internal.ItemStack;
        func_77571_b(): Internal.ItemStack;
    }
    type IRecipe_<C> = IRecipe<C>;
    interface IClientPlayNetHandler extends Internal.INetHandler {
        func_200232_a(arg0: Internal.SPlayerLookPacket): void;
        func_225312_a(arg0: Internal.SPlayerDiggingPacket): void;
        func_230488_a_(arg0: Internal.SWorldSpawnChangedPacket): void;
        func_217273_a(arg0: Internal.SMerchantOffersPacket): void;
        func_147249_a(arg0: Internal.SUpdateHealthPacket): void;
        func_217271_a(arg0: Internal.SOpenHorseWindowPacket): void;
        func_184330_a(arg0: Internal.SPlayerPositionLookPacket): void;
        func_147275_a(arg0: Internal.SEntityTeleportPacket): void;
        func_147250_a(arg0: Internal.SUpdateScorePacket): void;
        func_147277_a(arg0: Internal.SPlaySoundEventPacket): void;
        func_147279_a(arg0: Internal.SAnimateHandPacket): void;
        func_147237_a(arg0: Internal.SSpawnPlayerPacket): void;
        func_147256_a(arg0: Internal.SPlayerListItemPacket): void;
        func_147235_a(arg0: Internal.SSpawnObjectPacket): void;
        func_147290_a(arg0: Internal.SEntityPropertiesPacket): void;
        func_147254_a(arg0: Internal.SDisplayObjectivePacket): void;
        func_194307_a(arg0: Internal.SPlaceGhostRecipePacket): void;
        func_147252_a(arg0: Internal.SChangeGameStatePacket): void;
        func_147294_a(arg0: Internal.SAnimateBlockBreakPacket): void;
        func_147273_a(arg0: Internal.SUpdateTileEntityPacket): void;
        func_195511_a(arg0: Internal.SCommandListPacket): void;
        func_217266_a(arg0: Internal.SSpawnMovingSoundEffectPacket): void;
        func_184328_a(arg0: Internal.SSetPassengersPacket): void;
        func_147239_a(arg0: Internal.SConfirmTransactionPacket): void;
        func_184326_a(arg0: Internal.SUnloadChunkPacket): void;
        func_191981_a(arg0: Internal.SAdvancementInfoPacket): void;
        func_194022_a(arg0: Internal.SSelectAdvancementsTabPacket): void;
        func_175098_a(arg0: Internal.SCombatPacket): void;
        func_184324_a(arg0: Internal.SCooldownPacket): void;
        func_175096_a(arg0: Internal.SPlayerListHeaderFooterPacket): void;
        func_175094_a(arg0: Internal.SCameraPacket): void;
        func_217268_a(arg0: Internal.SOpenBookWindowPacket): void;
        func_147263_a(arg0: Internal.SChunkDataPacket): void;
        func_147240_a(arg0: Internal.SCustomPayloadPlayPacket): void;
        func_147261_a(arg0: Internal.SBlockActionPacket): void;
        func_147286_a(arg0: Internal.SSpawnExperienceOrbPacket): void;
        func_147288_a(arg0: Internal.SSpawnPaintingPacket): void;
        func_147267_a(arg0: Internal.SEntityHeadLookPacket): void;
        func_147246_a(arg0: Internal.SCollectItemPacket): void;
        func_147280_a(arg0: Internal.SRespawnPacket): void;
        func_147244_a(arg0: Internal.SEntityVelocityPacket): void;
        func_147282_a(arg0: Internal.SJoinGamePacket): void;
        func_147242_a(arg0: Internal.SEntityEquipmentPacket): void;
        func_147284_a(arg0: Internal.SEntityMetadataPacket): void;
        func_175101_a(arg0: Internal.SServerDifficultyPacket): void;
        func_211522_a(arg0: Internal.SQueryNBTResponsePacket): void;
        func_217272_a(arg0: Internal.SOpenWindowPacket): void;
        func_217270_a(arg0: Internal.SUpdateViewDistancePacket): void;
        func_147251_a(arg0: Internal.SChatPacket): void;
        func_147276_a(arg0: Internal.SCloseWindowPacket): void;
        func_147236_a(arg0: Internal.SEntityStatusPacket): void;
        func_147259_a(arg0: Internal.SEntityPacket): void;
        func_147234_a(arg0: Internal.SChangeBlockPacket): void;
        func_147291_a(arg0: Internal.SScoreboardObjectivePacket): void;
        func_147257_a(arg0: Internal.SHeldItemChangePacket): void;
        func_147270_a(arg0: Internal.SPlayerAbilitiesPacket): void;
        func_147293_a(arg0: Internal.SStatisticsPacket): void;
        func_199525_a(arg0: Internal.SUpdateRecipesPacket): void;
        func_147295_a(arg0: Internal.SSetExperiencePacket): void;
        func_147272_a(arg0: Internal.SKeepAlivePacket): void;
        func_147253_a(arg0: Internal.SDisconnectPacket): void;
        func_195510_a(arg0: Internal.STabCompletePacket): void;
        func_195512_a(arg0: Internal.SStopSoundPacket): void;
        func_184329_a(arg0: Internal.SPlaySoundPacket): void;
        func_184327_a(arg0: Internal.SPlaySoundEffectPacket): void;
        func_147238_a(arg0: Internal.SDestroyEntitiesPacket): void;
        func_184325_a(arg0: Internal.SUpdateBossInfoPacket): void;
        func_175099_a(arg0: Internal.STitlePacket): void;
        func_191980_a(arg0: Internal.SRecipeBookPacket): void;
        func_184323_a(arg0: Internal.SMoveVehiclePacket): void;
        func_175095_a(arg0: Internal.SSendResourcePackPacket): void;
        func_217269_a(arg0: Internal.SUpdateLightPacket): void;
        func_217267_a(arg0: Internal.SUpdateChunkPositionPacket): void;
        func_175093_a(arg0: Internal.SWorldBorderPacket): void;
        func_147285_a(arg0: Internal.SUpdateTimePacket): void;
        func_147262_a(arg0: Internal.SRemoveEntityEffectPacket): void;
        func_199723_a(arg0: Internal.STagsListPacket): void;
        func_147264_a(arg0: Internal.SMapDataPacket): void;
        func_147260_a(arg0: Internal.SPlayEntityEffectPacket): void;
        func_147287_a(arg0: Internal.SMultiBlockChangePacket): void;
        func_147266_a(arg0: Internal.SSetSlotPacket): void;
        func_147268_a(arg0: Internal.SOpenSignMenuPacket): void;
        func_147289_a(arg0: Internal.SSpawnParticlePacket): void;
        func_147247_a(arg0: Internal.STeamsPacket): void;
        func_147245_a(arg0: Internal.SWindowPropertyPacket): void;
        func_147281_a(arg0: Internal.SSpawnMobPacket): void;
        func_147243_a(arg0: Internal.SMountEntityPacket): void;
        func_147283_a(arg0: Internal.SExplosionPacket): void;
        func_147241_a(arg0: Internal.SWindowItemsPacket): void;
    }
    type IClientPlayNetHandler_ = IClientPlayNetHandler;
    class EvokerEntity extends Internal.SpellcastingIllagerEntity {
        func_213654_dW(): Internal.SoundEvent;
        static func_234289_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_213660_a(arg0: number, arg1: boolean): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_184191_r(arg0: Internal.Entity): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EvokerEntity_ = EvokerEntity;
    interface ChannelPromise extends Internal.ChannelFuture, Internal.Promise<void> {
        unvoid(): Internal.ChannelPromise;
        setSuccess(arg0: void): Internal.ChannelPromise;
        setSuccess(): Internal.ChannelPromise;
        setFailure(arg0: Internal.Throwable): Internal.ChannelPromise;
        removeListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>[]): Internal.ChannelPromise;
        trySuccess(): boolean;
        syncUninterruptibly(): Internal.ChannelPromise;
        channel(): io.netty.channel.Channel;
        await(): Internal.ChannelPromise;
        awaitUninterruptibly(): Internal.ChannelPromise;
        removeListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>): Internal.ChannelPromise;
        sync(): Internal.ChannelPromise;
        addListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>[]): Internal.ChannelPromise;
        addListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>): Internal.ChannelPromise;
    }
    type ChannelPromise_ = ChannelPromise;
    interface DoubleBinaryOperator {
        applyAsDouble(arg0: number, arg1: number): number;
    }
    type DoubleBinaryOperator_ = ((arg0: number, arg1: number) => number) | DoubleBinaryOperator;
    class StructureStartWrapper <T> extends Document.Object {
        generatePieces(registryAccess: Internal.DynamicRegistries, chunkGenerator: Internal.ChunkGenerator, structureManager: Internal.TemplateManager, i: number, j: number, biome: Internal.Biome, featureConfiguration: T): void;
        getLocatePos(): BlockPos;
        isValid(): boolean;
        addReference(): void;
        getBoundingBox(): Internal.MutableBoundingBox;
        getFeature(): Internal.Structure<any>;
        getReferences(): number;
        placeInChunk(worldGenLevel: Internal.ISeedReader, structureFeatureManager: Internal.StructureManager, chunkGenerator: Internal.ChunkGenerator, random: Internal.Random, boundingBox: Internal.MutableBoundingBox, chunkPos: Internal.ChunkPos): void;
        createTag(i: number, j: number): Internal.CompoundNBT;
        getChunkZ(): number;
        getChunkX(): number;
        static of<T_>(data: Internal.Optional<Internal.StructureStart<T_>>): Internal.Optional<Internal.StructureStartWrapper<T_>>;
        static of(startsForFeature: Internal.Stream<Internal.StructureStart<any>>): Internal.Stream<Internal.StructureStartWrapper<any>>;
        static of<T_>(data: Internal.StructureStart<T_>): Internal.StructureStartWrapper<T_>;
        static of<T_>(data: Internal.Iterable<Internal.StructureStart<T_>>): Internal.Iterable<Internal.StructureStartWrapper<T_>>;
        getPieces(): Internal.List<Internal.StructurePiece>;
        canBeReferenced(): boolean;
        getData(): Internal.StructureStart<T>;
        get locatePos(): BlockPos;
        get valid(): boolean;
        get pieces(): Internal.List<Internal.StructurePiece>;
        get boundingBox(): Internal.MutableBoundingBox;
        get feature(): Internal.Structure<any>;
        get references(): number;
        get data(): Internal.StructureStart<T>;
        get chunkX(): number;
        get chunkZ(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureStartWrapper_<T> = StructureStartWrapper<T>;
    class UUID extends Document.Object implements Internal.Serializable, Internal.Comparable<Internal.UUID> {
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.UUID): number;
        static nameUUIDFromBytes(arg0: number[]): Internal.UUID;
        getLeastSignificantBits(): number;
        version(): number;
        node(): number;
        getMostSignificantBits(): number;
        hashCode(): number;
        equals(arg0: any): boolean;
        variant(): number;
        toString(): string;
        static randomUUID(): Internal.UUID;
        static fromString(arg0: string): Internal.UUID;
        clockSequence(): number;
        timestamp(): number;
        get mostSignificantBits(): number;
        get leastSignificantBits(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type UUID_ = UUID;
    abstract class GuiScreenEvent$MouseClickedEvent extends Internal.GuiScreenEvent$MouseInputEvent {
        getButton(): number;
        getListenerList(): Internal.ListenerList;
        get button(): number;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$MouseClickedEvent_ = GuiScreenEvent$MouseClickedEvent;
    class BlockMosinessProcessor extends Internal.StructureProcessor {
        func_230386_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings): Internal.Template$BlockInfo;
        static readonly field_237062_a_ : Internal.Codec<Internal.BlockMosinessProcessor>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockMosinessProcessor_ = BlockMosinessProcessor;
    abstract class GuiScreenEvent$MouseScrollEvent extends Internal.GuiScreenEvent$MouseInputEvent {
        getListenerList(): Internal.ListenerList;
        getScrollDelta(): number;
        get scrollDelta(): number;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$MouseScrollEvent_ = GuiScreenEvent$MouseScrollEvent;
    abstract class CommandNode <S> extends Document.Object implements Internal.Comparable<Internal.CommandNode<S>> {
        getRelevantNodes(arg0: Internal.StringReader): Internal.Collection<Internal.CommandNode<S>>;
        getRedirectModifier(): Internal.RedirectModifier<S>;
        getName(): string;
        getRedirect(): Internal.CommandNode<S>;
        getCommand(): Internal.Command<S>;
        getChild(arg0: string): Internal.CommandNode<S>;
        getExamples(): Internal.Collection<string>;
        getUsageText(): string;
        parse(arg0: Internal.StringReader, arg1: Internal.CommandContextBuilder<S>): void;
        compareTo(arg0: Internal.CommandNode<S>): number;
        compareTo(arg0: any): number;
        canUse(arg0: S): boolean;
        isFork(): boolean;
        getChildren(): Internal.Collection<Internal.CommandNode<S>>;
        findAmbiguities(arg0: ((arg0: Internal.CommandNode<S>, arg1: Internal.CommandNode<S>, arg2: Internal.CommandNode<S>, arg3: Internal.Collection<string>) => void)): void;
        getRequirement(): Internal.Predicate<S>;
        listSuggestions(arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        createBuilder(): Internal.ArgumentBuilder<S, any>;
        hashCode(): number;
        equals(arg0: any): boolean;
        addChild(arg0: Internal.CommandNode<S>): void;
        get redirect(): Internal.CommandNode<S>;
        get fork(): boolean;
        get examples(): Internal.Collection<string>;
        get children(): Internal.Collection<Internal.CommandNode<S>>;
        get name(): string;
        get usageText(): string;
        get requirement(): Internal.Predicate<S>;
        get redirectModifier(): Internal.RedirectModifier<S>;
        get command(): Internal.Command<S>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandNode_<S> = CommandNode<S>;
    class ClientPlayerNetworkEvent$LoggedOutEvent extends Internal.ClientPlayerNetworkEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientPlayerNetworkEvent$LoggedOutEvent_ = ClientPlayerNetworkEvent$LoggedOutEvent;
    interface AlgorithmParameterSpec {
    }
    type AlgorithmParameterSpec_ = AlgorithmParameterSpec;
    class SpruceFoliagePlacer extends Internal.FoliagePlacer {
        func_230374_a_(arg0: Internal.Random, arg1: number, arg2: Internal.BaseTreeFeatureConfig): number;
        static readonly field_236790_a_ : Internal.Codec<Internal.SpruceFoliagePlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpruceFoliagePlacer_ = SpruceFoliagePlacer;
    class MultipleRandomFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_202452_d : (() => Internal.ConfiguredFeature<any, any>);
        static readonly field_236583_a_ : Internal.Codec<Internal.MultipleRandomFeatureConfig>;
        readonly field_202449_a : Internal.List<Internal.ConfiguredRandomFeatureList>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MultipleRandomFeatureConfig_ = MultipleRandomFeatureConfig;
    interface Codec$ResultFunction <A> {
        apply<T>(arg0: Internal.DynamicOps<T>, arg1: T, arg2: Internal.DataResult<com.mojang.datafixers.util.Pair<A, T>>): Internal.DataResult<com.mojang.datafixers.util.Pair<A, T>>;
        coApply<T>(arg0: Internal.DynamicOps<T>, arg1: A, arg2: Internal.DataResult<T>): Internal.DataResult<T>;
    }
    type Codec$ResultFunction_<A> = Codec$ResultFunction<A>;
    class EntityViewRenderEvent$FogDensity extends Internal.EntityViewRenderEvent$FogEvent {
        getListenerList(): Internal.ListenerList;
        getType(): Internal.FogRenderer$FogType;
        getDensity(): number;
        isCancelable(): boolean;
        setDensity(arg0: number): void;
        get cancelable(): boolean;
        get density(): number;
        get listenerList(): Internal.ListenerList;
        get type(): Internal.FogRenderer$FogType;
        set density(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityViewRenderEvent$FogDensity_ = EntityViewRenderEvent$FogDensity;
    interface MessageSizeEstimator {
        newHandle(): Internal.MessageSizeEstimator$Handle;
    }
    type MessageSizeEstimator_ = MessageSizeEstimator;
    class CustomServerBossInfoManager extends Document.Object {
        func_201381_a(arg0: Internal.CompoundNBT): void;
        func_201380_c(): Internal.CompoundNBT;
        func_201385_a(arg0: Internal.CustomServerBossInfo): void;
        func_201383_a(arg0: Internal.ServerPlayerEntity): void;
        func_201382_b(arg0: Internal.ServerPlayerEntity): void;
        func_201384_a(arg0: ResourceLocation_): Internal.CustomServerBossInfo;
        func_201377_a(): Internal.Collection<ResourceLocation>;
        func_201379_a(arg0: ResourceLocation_, arg1: Internal.ITextComponent_): Internal.CustomServerBossInfo;
        func_201378_b(): Internal.Collection<Internal.CustomServerBossInfo>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CustomServerBossInfoManager_ = CustomServerBossInfoManager;
    class PainterObjectStorage extends Document.Object {
        createScreenObjects(): any[];
        getObject(key: string): Internal.PainterObject;
        createWorldObjects(): any[];
        clear(): void;
        handle(root: Internal.CompoundNBT): void;
        remove(id: string): void;
        getObjects(): Internal.Collection<Internal.PainterObject>;
        get objects(): Internal.Collection<Internal.PainterObject>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PainterObjectStorage_ = PainterObjectStorage;
    class ModuleDescriptor$Version extends Document.Object implements Internal.Comparable<Internal.ModuleDescriptor$Version> {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        static parse(arg0: string): Internal.ModuleDescriptor$Version;
        compareTo(arg0: Internal.ModuleDescriptor$Version): number;
        compareTo(arg0: any): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleDescriptor$Version_ = ModuleDescriptor$Version;
    class NextTickListEntry <T> extends Document.Object {
        func_151351_a(): T;
        hashCode(): number;
        equals(arg0: any): boolean;
        static func_223192_a<T_>(): Internal.Comparator<Internal.NextTickListEntry<T_>>;
        toString(): string;
        readonly field_235017_b_ : number;
        readonly field_180282_a : BlockPos;
        readonly field_82754_f : Internal.TickPriority;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NextTickListEntry_<T> = NextTickListEntry<T>;
    class SEntityStatusPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149161_a(arg0: Internal.World): Internal.Entity;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149160_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SEntityStatusPacket_ = SEntityStatusPacket;
    class SkeletonEntity extends Internal.AbstractSkeletonEntity {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SkeletonEntity_ = SkeletonEntity;
    interface IForgeFluid {
        getAttributes(): Internal.FluidAttributes;
        getExplosionResistance(arg0: Internal.FluidState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): number;
        getFluid(): Internal.Fluid;
        getTags(): Internal.Set<ResourceLocation>;
        isEntityInside(arg0: Internal.FluidState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity, arg4: number, arg5: Internal.Tag<Internal.Fluid>, arg6: boolean): boolean;
        isAABBInsideMaterial(arg0: Internal.FluidState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.AxisAlignedBB, arg4: Internal.Material): boolean;
        isAABBInsideLiquid(arg0: Internal.FluidState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.AxisAlignedBB): boolean;
    }
    type IForgeFluid_ = IForgeFluid;
    class LivingEvent$LivingJumpEvent extends Internal.LivingEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingEvent$LivingJumpEvent_ = LivingEvent$LivingJumpEvent;
    interface IBorderListener {
        func_177695_c(arg0: Internal.WorldBorder, arg1: number): void;
        func_177696_b(arg0: Internal.WorldBorder, arg1: number): void;
        func_177693_a(arg0: Internal.WorldBorder, arg1: number, arg2: number): void;
        func_177694_a(arg0: Internal.WorldBorder, arg1: number): void;
        func_177690_b(arg0: Internal.WorldBorder, arg1: number): void;
        func_177691_a(arg0: Internal.WorldBorder, arg1: number): void;
        func_177692_a(arg0: Internal.WorldBorder, arg1: number, arg2: number, arg3: number): void;
    }
    type IBorderListener_ = IBorderListener;
    class ChunkManager extends Internal.ChunkLoader implements Internal.ChunkHolder$IPlayerProvider {
        func_219219_b(arg0: number): Internal.ChunkHolder;
        func_219174_c(): number;
        func_219194_d(): number;
        func_219179_a(arg0: Internal.ChunkHolder): Internal.CompletableFuture<Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_219188_b(arg0: Internal.ChunkPos): Internal.CompletableFuture<Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_219244_a(arg0: Internal.ChunkHolder, arg1: Internal.ChunkStatus): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_219212_a(arg0: number, arg1: Internal.ChunkHolder): void;
        func_219220_a(arg0: number): Internal.ChunkHolder;
        func_219097_a(arg0: Internal.ChunkPos, arg1: boolean): Internal.Stream<Internal.ServerPlayerEntity>;
        func_222973_a(arg0: Internal.Chunk): Internal.CompletableFuture<void>;
        func_222961_b(arg0: Internal.ChunkHolder): Internal.CompletableFuture<Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_219183_a(arg0: Internal.ServerPlayerEntity): void;
        close(): void;
        func_219209_c(arg0: Internal.ChunkPos): void;
        func_219191_c(arg0: number): Internal.IntSupplier;
        func_219170_a(arg0: Internal.ChunkPos): string;
        readonly field_219251_e : Internal.Long2ObjectLinkedOpenHashMap<Internal.ChunkHolder>;
        readonly field_219257_k : Internal.ThreadTaskExecutor<(() => void)>;
        field_219262_p : boolean;
        static readonly field_219249_a : 44;
        readonly field_219255_i : Internal.ServerWorld;
        field_219252_f : Internal.Long2ObjectLinkedOpenHashMap<Internal.ChunkHolder>;
        readonly field_219253_g : Internal.Long2ObjectLinkedOpenHashMap<Internal.ChunkHolder>;
        readonly field_219266_t : Internal.IChunkStatusListener;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkManager_ = ChunkManager;
    interface TemporalUnit {
        isDurationEstimated(): boolean;
        getDuration(): Internal.Duration;
        isTimeBased(): boolean;
        addTo<R>(arg0: R, arg1: number): R;
        toString(): string;
        isDateBased(): boolean;
        between(arg0: Internal.Temporal, arg1: Internal.Temporal): number;
        isSupportedBy(arg0: Internal.Temporal): boolean;
    }
    type TemporalUnit_ = TemporalUnit;
    class ModuleLayer extends Document.Object {
        findModule(arg0: string): Internal.Optional<Internal.Module>;
        static defineModulesWithManyLoaders(arg0: Internal.Configuration, arg1: Internal.List<Internal.ModuleLayer>, arg2: Internal.ClassLoader): Internal.ModuleLayer$Controller;
        defineModulesWithManyLoaders(arg0: Internal.Configuration, arg1: Internal.ClassLoader): Internal.ModuleLayer;
        findLoader(arg0: string): Internal.ClassLoader;
        configuration(): Internal.Configuration;
        toString(): string;
        static defineModulesWithOneLoader(arg0: Internal.Configuration, arg1: Internal.List<Internal.ModuleLayer>, arg2: Internal.ClassLoader): Internal.ModuleLayer$Controller;
        defineModulesWithOneLoader(arg0: Internal.Configuration, arg1: Internal.ClassLoader): Internal.ModuleLayer;
        static boot(): Internal.ModuleLayer;
        modules(): Internal.Set<Internal.Module>;
        defineModules(arg0: Internal.Configuration, arg1: ((arg0: string) => Internal.ClassLoader)): Internal.ModuleLayer;
        static defineModules(arg0: Internal.Configuration, arg1: Internal.List<Internal.ModuleLayer>, arg2: ((arg0: string) => Internal.ClassLoader)): Internal.ModuleLayer$Controller;
        parents(): Internal.List<Internal.ModuleLayer>;
        static empty(): Internal.ModuleLayer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleLayer_ = ModuleLayer;
    class BiomeManager extends Document.Object {
        func_235198_a_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_235199_a_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_226836_a_(arg0: BlockPos): Internal.Biome;
        func_226835_a_(arg0: Internal.BiomeProvider): Internal.BiomeManager;
        func_235201_b_(arg0: BlockPos): Internal.Biome;
        static func_235200_a_(arg0: number): number;
        readonly field_226833_b_ : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BiomeManager_ = BiomeManager;
    class EntityLeaveWorldEvent extends Internal.EntityEvent {
        getWorld(): Internal.World;
        getListenerList(): Internal.ListenerList;
        get world(): Internal.World;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityLeaveWorldEvent_ = EntityLeaveWorldEvent;
    abstract class AbstractChestedHorseEntity extends Internal.AbstractHorseEntity {
        func_190696_dl(): number;
        static func_234234_eJ_(): Internal.AttributeModifierMap$MutableAttribute;
        func_110207_m(arg0: boolean): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_174820_d(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_190697_dk(): void;
        func_70042_X(): number;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        func_190695_dh(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractChestedHorseEntity_ = AbstractChestedHorseEntity;
    interface CompletionStage <T> {
        exceptionallyAsync(arg0: ((arg0: Internal.Throwable) => T)): Internal.CompletionStage<T>;
        exceptionallyAsync(arg0: ((arg0: Internal.Throwable) => T), arg1: Internal.Executor): Internal.CompletionStage<T>;
        thenRunAsync(arg0: (() => void)): Internal.CompletionStage<void>;
        thenRunAsync(arg0: (() => void), arg1: Internal.Executor): Internal.CompletionStage<void>;
        runAfterBothAsync(arg0: Internal.CompletionStage<any>, arg1: (() => void), arg2: Internal.Executor): Internal.CompletionStage<void>;
        runAfterBothAsync(arg0: Internal.CompletionStage<any>, arg1: (() => void)): Internal.CompletionStage<void>;
        applyToEitherAsync<U>(arg0: Internal.CompletionStage<T>, arg1: ((arg0: T) => U), arg2: Internal.Executor): Internal.CompletionStage<U>;
        applyToEitherAsync<U>(arg0: Internal.CompletionStage<T>, arg1: ((arg0: T) => U)): Internal.CompletionStage<U>;
        acceptEitherAsync(arg0: Internal.CompletionStage<T>, arg1: ((arg0: T) => void)): Internal.CompletionStage<void>;
        acceptEitherAsync(arg0: Internal.CompletionStage<T>, arg1: ((arg0: T) => void), arg2: Internal.Executor): Internal.CompletionStage<void>;
        runAfterEitherAsync(arg0: Internal.CompletionStage<any>, arg1: (() => void), arg2: Internal.Executor): Internal.CompletionStage<void>;
        runAfterEitherAsync(arg0: Internal.CompletionStage<any>, arg1: (() => void)): Internal.CompletionStage<void>;
        acceptEither(arg0: Internal.CompletionStage<T>, arg1: ((arg0: T) => void)): Internal.CompletionStage<void>;
        thenAcceptBoth<U>(arg0: Internal.CompletionStage<U>, arg1: ((arg0: T, arg1: U) => void)): Internal.CompletionStage<void>;
        exceptionallyCompose(arg0: ((arg0: Internal.Throwable) => Internal.CompletionStage<T>)): Internal.CompletionStage<T>;
        applyToEither<U>(arg0: Internal.CompletionStage<T>, arg1: ((arg0: T) => U)): Internal.CompletionStage<U>;
        runAfterEither(arg0: Internal.CompletionStage<any>, arg1: (() => void)): Internal.CompletionStage<void>;
        thenApply<U>(arg0: ((arg0: T) => U)): Internal.CompletionStage<U>;
        thenComposeAsync<U>(arg0: ((arg0: T) => Internal.CompletionStage<U>)): Internal.CompletionStage<U>;
        thenComposeAsync<U>(arg0: ((arg0: T) => Internal.CompletionStage<U>), arg1: Internal.Executor): Internal.CompletionStage<U>;
        thenAccept(arg0: ((arg0: T) => void)): Internal.CompletionStage<void>;
        thenRun(arg0: (() => void)): Internal.CompletionStage<void>;
        runAfterBoth(arg0: Internal.CompletionStage<any>, arg1: (() => void)): Internal.CompletionStage<void>;
        exceptionally(arg0: ((arg0: Internal.Throwable) => T)): Internal.CompletionStage<T>;
        handleAsync<U>(arg0: ((arg0: T, arg1: Internal.Throwable) => U)): Internal.CompletionStage<U>;
        handleAsync<U>(arg0: ((arg0: T, arg1: Internal.Throwable) => U), arg1: Internal.Executor): Internal.CompletionStage<U>;
        handle<U>(arg0: ((arg0: T, arg1: Internal.Throwable) => U)): Internal.CompletionStage<U>;
        thenCompose<U>(arg0: ((arg0: T) => Internal.CompletionStage<U>)): Internal.CompletionStage<U>;
        thenCombineAsync<U, V>(arg0: Internal.CompletionStage<U>, arg1: ((arg0: T, arg1: U) => V), arg2: Internal.Executor): Internal.CompletionStage<V>;
        thenCombineAsync<U, V>(arg0: Internal.CompletionStage<U>, arg1: ((arg0: T, arg1: U) => V)): Internal.CompletionStage<V>;
        thenAcceptBothAsync<U>(arg0: Internal.CompletionStage<U>, arg1: ((arg0: T, arg1: U) => void)): Internal.CompletionStage<void>;
        thenAcceptBothAsync<U>(arg0: Internal.CompletionStage<U>, arg1: ((arg0: T, arg1: U) => void), arg2: Internal.Executor): Internal.CompletionStage<void>;
        whenComplete(arg0: ((arg0: T, arg1: Internal.Throwable) => void)): Internal.CompletionStage<T>;
        exceptionallyComposeAsync(arg0: ((arg0: Internal.Throwable) => Internal.CompletionStage<T>), arg1: Internal.Executor): Internal.CompletionStage<T>;
        exceptionallyComposeAsync(arg0: ((arg0: Internal.Throwable) => Internal.CompletionStage<T>)): Internal.CompletionStage<T>;
        thenCombine<U, V>(arg0: Internal.CompletionStage<U>, arg1: ((arg0: T, arg1: U) => V)): Internal.CompletionStage<V>;
        whenCompleteAsync(arg0: ((arg0: T, arg1: Internal.Throwable) => void)): Internal.CompletionStage<T>;
        whenCompleteAsync(arg0: ((arg0: T, arg1: Internal.Throwable) => void), arg1: Internal.Executor): Internal.CompletionStage<T>;
        thenApplyAsync<U>(arg0: ((arg0: T) => U)): Internal.CompletionStage<U>;
        thenApplyAsync<U>(arg0: ((arg0: T) => U), arg1: Internal.Executor): Internal.CompletionStage<U>;
        thenAcceptAsync(arg0: ((arg0: T) => void)): Internal.CompletionStage<void>;
        thenAcceptAsync(arg0: ((arg0: T) => void), arg1: Internal.Executor): Internal.CompletionStage<void>;
        toCompletableFuture(): Internal.CompletableFuture<T>;
    }
    type CompletionStage_<T> = CompletionStage<T>;
    abstract class Reader extends Document.Object implements Internal.Readable, Internal.Closeable {
        read(arg0: string[], arg1: number, arg2: number): number;
        read(arg0: Internal.CharBuffer): number;
        read(): number;
        read(arg0: string[]): number;
        static nullReader(): Internal.Reader;
        markSupported(): boolean;
        ready(): boolean;
        reset(): void;
        skip(arg0: number): number;
        transferTo(arg0: Internal.Writer): number;
        close(): void;
        mark(arg0: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Reader_ = Reader;
    interface BiMap <K, V> extends Internal.Map<K, V> {
        inverse(): Internal.BiMap<V, K>;
        forcePut(arg0: K, arg1: V): V;
        putAll(arg0: Internal.Map_<K, V>): void;
        values(): Internal.Collection<any>;
        values(): Internal.Set<V>;
        put(arg0: K, arg1: V): V;
    }
    type BiMap_<K, V> = BiMap<K, V>;
    class Tutorial extends Document.Object {
        func_244698_a(arg0: Internal.TutorialToast, arg1: number): void;
        func_193292_a(arg0: Internal.TutorialSteps_): void;
        static func_193291_a(arg0: string): Internal.ITextComponent;
        func_193294_a(arg0: Internal.ClientWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: number): void;
        func_193293_a(arg0: Internal.MovementInput): void;
        func_194072_f(): Internal.GameType;
        func_193295_e(): Internal.Minecraft;
        func_195872_a(arg0: number, arg1: number): void;
        func_193296_a(): void;
        func_193303_d(): void;
        func_193302_c(): void;
        func_193297_a(arg0: Internal.ClientWorld, arg1: Internal.RayTraceResult): void;
        func_193301_a(arg0: Internal.ItemStack): void;
        func_193300_b(): void;
        func_244697_a(arg0: Internal.TutorialToast): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Tutorial_ = Tutorial;
    class SmokerTileEntity extends Internal.AbstractFurnaceTileEntity {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SmokerTileEntity_ = SmokerTileEntity;
    class ItemStack$TooltipDisplayFlags extends Internal.Enum<Internal.ItemStack$TooltipDisplayFlags> {
        static valueOf(arg0: string): Internal.ItemStack$TooltipDisplayFlags;
        static values(): Internal.ItemStack$TooltipDisplayFlags[];
        func_242397_a(): number;
        static readonly DYE : Internal.ItemStack$TooltipDisplayFlags;
        static readonly CAN_DESTROY : Internal.ItemStack$TooltipDisplayFlags;
        static readonly ENCHANTMENTS : Internal.ItemStack$TooltipDisplayFlags;
        static readonly MODIFIERS : Internal.ItemStack$TooltipDisplayFlags;
        static readonly CAN_PLACE : Internal.ItemStack$TooltipDisplayFlags;
        static readonly UNBREAKABLE : Internal.ItemStack$TooltipDisplayFlags;
        static readonly ADDITIONAL : Internal.ItemStack$TooltipDisplayFlags;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemStack$TooltipDisplayFlags_ = "enchantments" | "modifiers" | "unbreakable" | "can_destroy" | "can_place" | "additional" | "dye" | ItemStack$TooltipDisplayFlags;
    interface ShortList extends Internal.List<number>, Internal.Comparable<Internal.List<number>>, Internal.ShortCollection {
        add(arg0: number, arg1: any): void;
        add(arg0: any): boolean;
        add(arg0: number, arg1: number): void;
        add(arg0: number): boolean;
        add(arg0: number): boolean;
        add(arg0: number, arg1: number): void;
        subList(arg0: number, arg1: number): Internal.ShortList;
        subList(arg0: number, arg1: number): Internal.List<any>;
        set(arg0: number, arg1: number): number;
        set(arg0: number, arg1: any): any;
        set(arg0: number, arg1: number): number;
        getShort(arg0: number): number;
        removeShort(arg0: number): number;
        removeElements(arg0: number, arg1: number): void;
        remove(arg0: any): boolean;
        remove(arg0: number): any;
        remove(arg0: number): number;
        lastIndexOf(arg0: any): number;
        lastIndexOf(arg0: number): number;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.ShortIterator;
        iterator(): Internal.ShortListIterator;
        size(arg0: number): void;
        addAll(arg0: Internal.ShortList): boolean;
        addAll(arg0: number, arg1: Internal.ShortList): boolean;
        addAll(arg0: number, arg1: Internal.ShortCollection): boolean;
        addElements(arg0: number, arg1: number[]): void;
        addElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
        getElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
        get(arg0: number): any;
        get(arg0: number): number;
        listIterator(arg0: number): Internal.ListIterator<any>;
        listIterator(arg0: number): Internal.ShortListIterator;
        listIterator(): Internal.ShortListIterator;
        listIterator(): Internal.ListIterator<any>;
        indexOf(arg0: number): number;
        indexOf(arg0: any): number;
    }
    type ShortList_ = ShortList;
    class CUpdateMinecartCommandBlockPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_210372_a(): string;
        func_210371_a(arg0: Internal.World): Internal.CommandBlockLogic;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_210373_b(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CUpdateMinecartCommandBlockPacket_ = CUpdateMinecartCommandBlockPacket;
    class URL extends Document.Object implements Internal.Serializable {
        static setURLStreamHandlerFactory(arg0: Internal.URLStreamHandlerFactory): void;
        getDefaultPort(): number;
        openConnection(): Internal.URLConnection;
        openConnection(arg0: Internal.Proxy): Internal.URLConnection;
        toURI(): Internal.URI;
        getContent(): any;
        getContent(arg0: Internal.Class<any>[]): any;
        getProtocol(): string;
        getAuthority(): string;
        getFile(): string;
        openStream(): Internal.InputStream;
        toExternalForm(): string;
        getPort(): number;
        getRef(): string;
        sameFile(arg0: Internal.URL): boolean;
        hashCode(): number;
        static of(arg0: Internal.URI, arg1: Internal.URLStreamHandler): Internal.URL;
        equals(arg0: any): boolean;
        getPath(): string;
        toString(): string;
        getUserInfo(): string;
        getQuery(): string;
        getHost(): string;
        get defaultPort(): number;
        get path(): string;
        get userInfo(): string;
        get protocol(): string;
        get ref(): string;
        get file(): string;
        get port(): number;
        get authority(): string;
        get query(): string;
        get host(): string;
        get content(): any;
        set uRLStreamHandlerFactory(arg0: Internal.URLStreamHandlerFactory);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type URL_ = URL;
    class FlaggedPathPoint extends Internal.PathPoint {
        func_224763_d(): Internal.PathPoint;
        func_224764_e(): void;
        static func_224760_c(arg0: Internal.PacketBuffer): Internal.FlaggedPathPoint;
        func_224761_a(arg0: number, arg1: Internal.PathPoint): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FlaggedPathPoint_ = FlaggedPathPoint;
    class HorseEntity extends Internal.AbstractHorseEntity {
        func_230276_fq_(): boolean;
        func_76316_a(arg0: Internal.IInventory): void;
        func_190682_f(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_234239_eK_(): Internal.CoatColors;
        func_213803_dV(): Internal.ItemStack;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70878_b(arg0: Internal.AnimalEntity): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_234240_eM_(): Internal.CoatTypes;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HorseEntity_ = HorseEntity;
    class ShulkerBoxTileEntity$AnimationStatus extends Internal.Enum<Internal.ShulkerBoxTileEntity$AnimationStatus> {
        static valueOf(arg0: string): Internal.ShulkerBoxTileEntity$AnimationStatus;
        static values(): Internal.ShulkerBoxTileEntity$AnimationStatus[];
        static readonly CLOSED : Internal.ShulkerBoxTileEntity$AnimationStatus;
        static readonly CLOSING : Internal.ShulkerBoxTileEntity$AnimationStatus;
        static readonly OPENING : Internal.ShulkerBoxTileEntity$AnimationStatus;
        static readonly OPENED : Internal.ShulkerBoxTileEntity$AnimationStatus;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShulkerBoxTileEntity$AnimationStatus_ = "closed" | "opening" | "opened" | "closing" | ShulkerBoxTileEntity$AnimationStatus;
    class ShapedRecipe extends Document.Object implements Internal.ICraftingRecipe, Internal.IShapedRecipe<Internal.CraftingInventory> {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_199560_c(): ResourceLocation;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_192404_g(): number;
        getRecipeWidth(): number;
        func_193358_e(): string;
        func_77571_b(): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_192403_f(): number;
        static setCraftingSize(arg0: number, arg1: number): void;
        static func_199798_a(arg0: Internal.JsonObject): Internal.ItemStack;
        func_194133_a(arg0: number, arg1: number): boolean;
        getRecipeHeight(): number;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        get recipeHeight(): number;
        get recipeWidth(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShapedRecipe_ = ShapedRecipe;
    class IntNBT extends Internal.NumberNBT {
        func_150291_c(): number;
        func_150290_f(): number;
        static func_229692_a_(arg0: number): Internal.IntNBT;
        func_74737_b(): Internal.IntNBT;
        func_74737_b(): Internal.INBT;
        func_74732_a(): number;
        func_150289_e(): number;
        func_209908_j(): Internal.Number;
        hashCode(): number;
        func_74734_a(arg0: Internal.DataOutput): void;
        equals(arg0: any): boolean;
        func_150288_h(): number;
        func_150287_d(): number;
        toString(): string;
        func_150286_g(): number;
        func_225647_b_(): Internal.INBTType<Internal.IntNBT>;
        func_199850_a(arg0: string, arg1: number): Internal.ITextComponent;
        static readonly field_229691_a_ : Internal.INBTType<Internal.IntNBT>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IntNBT_ = IntNBT;
    class SDisconnectPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149165_c(): Internal.ITextComponent;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SDisconnectPacket_ = SDisconnectPacket;
    abstract class ThrowableEntity extends Internal.ProjectileEntity {
        func_213297_N(): Internal.IPacket<any>;
        func_70071_h_(): void;
        func_70112_a(arg0: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ThrowableEntity_ = ThrowableEntity;
    abstract class Stages extends Document.Object {
        add(stage: string): boolean;
        getAll(): Internal.Collection<string>;
        set(stage: string, enabled: boolean): boolean;
        static added(event: ((arg0: Internal.StageChangeEvent) => void)): void;
        replace(stages: Internal.Collection<string>): void;
        clear(): boolean;
        static invokeAdded(stages: Internal.Stages, stage: string): void;
        toggle(stage: string): boolean;
        addNoUpdate(arg0: string): boolean;
        sync(): void;
        remove(stage: string): boolean;
        static removed(event: ((arg0: Internal.StageChangeEvent) => void)): void;
        getList(): Internal.Collection<string>;
        static get(player: Internal.PlayerEntity): Internal.Stages;
        static invokeRemoved(stages: Internal.Stages, stage: string): void;
        has(stage: string): boolean;
        static overrideCreation(event: ((arg0: Internal.StageCreationEvent) => void)): void;
        removeNoUpdate(arg0: string): boolean;
        readonly player : Internal.PlayerEntity;
        get all(): Internal.Collection<string>;
        get list(): Internal.Collection<string>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Stages_ = Stages;
    interface IReputationTracking {
        func_213739_a(arg0: Internal.IReputationType, arg1: Internal.Entity): void;
    }
    type IReputationTracking_ = IReputationTracking;
    class RenderWorldLastEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getPartialTicks(): number;
        getProjectionMatrix(): Internal.Matrix4f;
        getFinishTimeNano(): number;
        getContext(): Internal.WorldRenderer;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get projectionMatrix(): Internal.Matrix4f;
        get listenerList(): Internal.ListenerList;
        get context(): Internal.WorldRenderer;
        get finishTimeNano(): number;
        get partialTicks(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderWorldLastEvent_ = RenderWorldLastEvent;
    class BeaconTileEntity extends Internal.TileEntity implements Internal.INamedContainerProvider, Internal.ITickableTileEntity {
        func_174907_n(): Internal.List<Internal.BeaconTileEntity$BeamSegment>;
        func_145833_n(): number;
        createMenu(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity): Internal.Container;
        func_145843_s(): void;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_73660_a(): void;
        func_205736_a(arg0: Internal.SoundEvent): void;
        func_191979_s(): number;
        func_145748_c_(): Internal.ITextComponent;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_189517_E_(): Internal.CompoundNBT;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        constant$zmk000$tick(arg0: number): number;
        func_200227_a(arg0: Internal.ITextComponent_): void;
        field_213934_g : Internal.List<Internal.BeaconTileEntity$BeamSegment>;
        field_213935_i : number;
        field_174909_f : Internal.List<Internal.BeaconTileEntity$BeamSegment>;
        static readonly field_146009_a : Internal.Effect[][];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BeaconTileEntity_ = BeaconTileEntity;
    class OnRuntimeAvailableEventJSJS extends Internal.JEIEventJS {
        readonly data : Internal.IJeiRuntime;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OnRuntimeAvailableEventJSJS_ = OnRuntimeAvailableEventJSJS;
    class DamageSourceJS extends Document.Object {
        getActual(): Internal.EntityJS;
        getWorld(): Internal.WorldJS;
        getPlayer(): Internal.PlayerJS<any>;
        getType(): string;
        getImmediate(): Internal.EntityJS;
        readonly source : Internal.DamageSource;
        get actual(): Internal.EntityJS;
        get world(): Internal.WorldJS;
        get immediate(): Internal.EntityJS;
        get type(): string;
        get player(): Internal.PlayerJS<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DamageSourceJS_ = DamageSourceJS;
    class ZombieEvent$SummonAidEvent extends Internal.ZombieEvent {
        setCustomSummonedAid(arg0: Internal.ZombieEntity): void;
        getX(): number;
        getSummonChance(): number;
        getWorld(): Internal.World;
        getListenerList(): Internal.ListenerList;
        getY(): number;
        getZ(): number;
        getCustomSummonedAid(): Internal.ZombieEntity;
        hasResult(): boolean;
        getAttacker(): Internal.LivingEntity;
        get summonChance(): number;
        get world(): Internal.World;
        get customSummonedAid(): Internal.ZombieEntity;
        get listenerList(): Internal.ListenerList;
        get x(): number;
        get y(): number;
        get attacker(): Internal.LivingEntity;
        get z(): number;
        set customSummonedAid(arg0: Internal.ZombieEntity);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZombieEvent$SummonAidEvent_ = ZombieEvent$SummonAidEvent;
    class PlayerContainerEvent$Open extends Internal.PlayerContainerEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerContainerEvent$Open_ = PlayerContainerEvent$Open;
    class SOpenWindowPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_218748_d(): Internal.ITextComponent;
        func_218749_c(): Internal.ContainerType<any>;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218750_b(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SOpenWindowPacket_ = SOpenWindowPacket;
    class ConduitTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity {
        func_205036_a(arg0: number): number;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_189517_E_(): Internal.CompoundNBT;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_205039_c(): boolean;
        func_207737_d(): boolean;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_205738_a(arg0: Internal.SoundEvent): void;
        func_73660_a(): void;
        field_205041_a : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ConduitTileEntity_ = ConduitTileEntity;
    class Object2ObjectLinkedOpenHashMap <K, V> extends Internal.AbstractObject2ObjectSortedMap<K, V> implements Internal.Serializable, Internal.Cloneable, Internal.Hash {
        object2ObjectEntrySet(): Internal.ObjectSortedSet<any>;
        object2ObjectEntrySet(): Internal.ObjectSet<any>;
        object2ObjectEntrySet(): Internal.Object2ObjectSortedMap$FastSortedEntrySet<K, V>;
        values(): Internal.ObjectCollection<V>;
        values(): Internal.Collection<any>;
        putAndMoveToLast(arg0: K, arg1: V): V;
        getAndMoveToLast(arg0: K): V;
        removeLast(): V;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        putAndMoveToFirst(arg0: K, arg1: V): V;
        trim(): boolean;
        trim(arg0: number): boolean;
        getAndMoveToFirst(arg0: K): V;
        hashCode(): number;
        removeFirst(): V;
        putAll(arg0: Internal.Map_<K, V>): void;
        get(arg0: any): V;
        lastKey(): K;
        keySet(): Internal.ObjectSet<any>;
        keySet(): Internal.ObjectSortedSet<K>;
        keySet(): Internal.Set<any>;
        containsKey(arg0: any): boolean;
        subMap(arg0: any, arg1: any): Internal.SortedMap<any, any>;
        subMap(arg0: K, arg1: K): Internal.Object2ObjectSortedMap<K, V>;
        isEmpty(): boolean;
        clear(): void;
        comparator(): Internal.Comparator<K>;
        size(): number;
        firstKey(): K;
        clone(): Internal.Object2ObjectLinkedOpenHashMap<K, V>;
        clone(): any;
        headMap(arg0: K): Internal.Object2ObjectSortedMap<K, V>;
        headMap(arg0: any): Internal.SortedMap<any, any>;
        tailMap(arg0: K): Internal.Object2ObjectSortedMap<K, V>;
        tailMap(arg0: any): Internal.SortedMap<any, any>;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Object2ObjectLinkedOpenHashMap_<K, V> = Object2ObjectLinkedOpenHashMap<K, V>;
    class DisplayInfo extends Document.Object {
        static func_192294_a(arg0: Internal.JsonObject): Internal.DisplayInfo;
        func_192291_d(): Internal.FrameType;
        func_192293_c(): ResourceLocation;
        func_200290_k(): Internal.JsonElement;
        static func_192295_b(arg0: Internal.PacketBuffer): Internal.DisplayInfo;
        func_192297_a(): Internal.ITextComponent;
        func_192298_b(): Internal.ItemStack;
        func_192296_f(): number;
        func_192299_e(): number;
        func_193222_b(): Internal.ITextComponent;
        func_193220_i(): boolean;
        func_192290_a(arg0: Internal.PacketBuffer): void;
        func_193223_h(): boolean;
        func_192292_a(arg0: number, arg1: number): void;
        func_193224_j(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DisplayInfo_ = DisplayInfo;
    abstract class InputStream extends Document.Object implements Internal.Closeable {
        read(arg0: number[]): number;
        read(arg0: number[], arg1: number, arg2: number): number;
        read(): number;
        markSupported(): boolean;
        available(): number;
        readAllBytes(): number[];
        static nullInputStream(): Internal.InputStream;
        readNBytes(arg0: number[], arg1: number, arg2: number): number;
        readNBytes(arg0: number): number[];
        reset(): void;
        skip(arg0: number): number;
        transferTo(arg0: Internal.OutputStream): number;
        close(): void;
        skipNBytes(arg0: number): void;
        mark(arg0: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InputStream_ = InputStream;
    interface Int2IntMap$FastEntrySet extends Internal.ObjectSet<Internal.Int2IntMap$Entry> {
        fastForEach(arg0: ((arg0: Internal.Int2IntMap$Entry) => void)): void;
        fastIterator(): Internal.ObjectIterator<Internal.Int2IntMap$Entry>;
    }
    type Int2IntMap$FastEntrySet_ = Int2IntMap$FastEntrySet;
    abstract class Charset extends Document.Object implements Internal.Comparable<Internal.Charset> {
        encode(arg0: Internal.CharBuffer): Internal.ByteBuffer;
        encode(arg0: string): Internal.ByteBuffer;
        aliases(): Internal.Set<string>;
        static forName(arg0: string, arg1: Internal.Charset): Internal.Charset;
        static forName(arg0: string): Internal.Charset;
        displayName(arg0: Internal.Locale): string;
        displayName(): string;
        newDecoder(): Internal.CharsetDecoder;
        static defaultCharset(): Internal.Charset;
        static isSupported(arg0: string): boolean;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.Charset): number;
        decode(arg0: Internal.ByteBuffer): Internal.CharBuffer;
        contains(arg0: Internal.Charset): boolean;
        hashCode(): number;
        canEncode(): boolean;
        equals(arg0: any): boolean;
        newEncoder(): Internal.CharsetEncoder;
        name(): string;
        isRegistered(): boolean;
        toString(): string;
        static availableCharsets(): Internal.SortedMap<string, Internal.Charset>;
        get registered(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Charset_ = Charset;
    abstract class ImmutableCollection$ArrayBasedBuilder <E> extends Internal.ImmutableCollection$Builder<E> {
        add(arg0: any): Internal.ImmutableCollection$Builder<any>;
        add(arg0: E): Internal.ImmutableCollection$ArrayBasedBuilder<E>;
        add(arg0: E[]): Internal.ImmutableCollection$Builder<E>;
        addAll(arg0: Internal.Iterable<E>): Internal.ImmutableCollection$Builder<E>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableCollection$ArrayBasedBuilder_<E> = ImmutableCollection$ArrayBasedBuilder<E>;
    class ConstantUnit extends Internal.FixedUnit {
        append(sb: Internal.StringBuilder): void;
        readonly name : string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ConstantUnit_ = ConstantUnit;
    interface IParticleData {
        func_197553_a(arg0: Internal.PacketBuffer): void;
        func_197554_b(): Internal.ParticleType<any>;
        func_197555_a(): string;
    }
    type IParticleData_ = IParticleData;
    class NoPlacementConfig extends Document.Object implements Internal.IPlacementConfig {
        static readonly field_236555_a_ : Internal.Codec<Internal.NoPlacementConfig>;
        static readonly field_236556_b_ : Internal.NoPlacementConfig;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NoPlacementConfig_ = NoPlacementConfig;
    abstract class ForwardingCollection <E> extends Internal.ForwardingObject implements Internal.Collection<E> {
        add(arg0: E): boolean;
        removeAll(arg0: Internal.Collection<any>): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<E>;
        size(): number;
        addAll(arg0: Internal.Collection<E>): boolean;
        containsAll(arg0: Internal.Collection<any>): boolean;
        toArray<T_>(arg0: T_[]): T_[];
        toArray(): any[];
        isEmpty(): boolean;
        clear(): void;
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.Collection<any>): boolean;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ForwardingCollection_<E> = ForwardingCollection<E>;
    class BeehiveTileEntity$State extends Internal.Enum<Internal.BeehiveTileEntity$State> {
        static valueOf(arg0: string): Internal.BeehiveTileEntity$State;
        static values(): Internal.BeehiveTileEntity$State[];
        static readonly BEE_RELEASED : Internal.BeehiveTileEntity$State;
        static readonly EMERGENCY : Internal.BeehiveTileEntity$State;
        static readonly HONEY_DELIVERED : Internal.BeehiveTileEntity$State;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BeehiveTileEntity$State_ = "honey_delivered" | "bee_released" | "emergency" | BeehiveTileEntity$State;
    interface IExtendableRecipeCategory <T, W> extends Internal.IRecipeCategory<T> {
        addCategoryExtension<R_>(arg0: Internal.Class_<R_>, arg1: ((arg0: R_) => W)): void;
        addCategoryExtension<R_>(arg0: Internal.Class_<R_>, arg1: ((arg0: R_) => boolean), arg2: ((arg0: R_) => W)): void;
    }
    type IExtendableRecipeCategory_<T, W> = IExtendableRecipeCategory<T, W>;
    class FlowingFluidBlock extends Internal.Block implements Internal.IBucketPickupHandler {
        func_149653_t(arg0: Internal.BlockState): boolean;
        func_196271_a(arg0: Internal.BlockState, arg1: Internal.Direction_, arg2: Internal.BlockState, arg3: Internal.IWorld, arg4: BlockPos, arg5: BlockPos): Internal.BlockState;
        func_200123_i(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        func_225542_b_(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.Random): void;
        func_220069_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Block, arg4: BlockPos, arg5: boolean): void;
        func_204507_t(arg0: Internal.BlockState): Internal.FluidState;
        func_200122_a(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.Direction_): boolean;
        func_220076_a(arg0: Internal.BlockState, arg1: Internal.LootContext$Builder): Internal.List<Internal.ItemStack>;
        func_196266_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.PathType_): boolean;
        func_220053_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.ISelectionContext): Internal.VoxelShape;
        func_149645_b(arg0: Internal.BlockState): Internal.BlockRenderType;
        func_220071_b(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.ISelectionContext): Internal.VoxelShape;
        func_220082_b(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.BlockState, arg4: boolean): void;
        getFluid(): Internal.FlowingFluid;
        func_204508_a(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState): Internal.Fluid;
        static readonly field_235510_c_ : Internal.VoxelShape;
        static readonly field_176367_b : Internal.IntegerProperty;
        get fluid(): Internal.FlowingFluid;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FlowingFluidBlock_ = FlowingFluidBlock;
    class RenderState$TargetState extends Internal.RenderState {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$TargetState_ = RenderState$TargetState;
    class TagsUpdatedEvent$CustomTagTypes extends Internal.TagsUpdatedEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TagsUpdatedEvent$CustomTagTypes_ = TagsUpdatedEvent$CustomTagTypes;
    class FolderName extends Document.Object {
        func_237255_a_(): string;
        toString(): string;
        static readonly field_237253_i_ : Internal.FolderName;
        static readonly field_237251_g_ : Internal.FolderName;
        static readonly field_237249_e_ : Internal.FolderName;
        static readonly field_237252_h_ : Internal.FolderName;
        static readonly field_237245_a_ : Internal.FolderName;
        static readonly field_237248_d_ : Internal.FolderName;
        static readonly field_237246_b_ : Internal.FolderName;
        static readonly field_237250_f_ : Internal.FolderName;
        static readonly field_237247_c_ : Internal.FolderName;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FolderName_ = FolderName;
    class VillagerData extends Document.Object {
        static func_221128_d(arg0: number): boolean;
        static func_221127_c(arg0: number): number;
        func_221129_a(): Internal.VillagerType;
        func_221130_b(): Internal.VillagerProfession;
        static func_221133_b(arg0: number): number;
        func_221132_c(): number;
        func_221134_a(arg0: Internal.VillagerType): Internal.VillagerData;
        func_221126_a(arg0: Internal.VillagerProfession): Internal.VillagerData;
        func_221135_a(arg0: number): Internal.VillagerData;
        static readonly field_234554_a_ : Internal.Codec<Internal.VillagerData>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VillagerData_ = VillagerData;
    abstract class ThreadTaskExecutor <R> extends Document.Object implements Internal.ITaskExecutor<R>, Internal.Executor {
        func_213161_c(arg0: (() => boolean)): void;
        func_213167_f(arg0: (() => void)): void;
        func_213142_bd(): string;
        func_212871_a_(arg0: any): void;
        func_212871_a_(arg0: R): void;
        func_213162_bc(): boolean;
        func_213169_a<V_>(arg0: (() => V_)): Internal.CompletableFuture<V_>;
        func_223704_be(): number;
        func_222817_e(arg0: (() => void)): Internal.CompletableFuture<void>;
        func_213165_a(arg0: (() => void)): Internal.CompletableFuture<void>;
        execute(arg0: (() => void)): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ThreadTaskExecutor_<R> = ThreadTaskExecutor<R>;
    abstract class Provider extends Internal.Properties {
        isConfigured(): boolean;
        getOrDefault(arg0: any, arg1: any): any;
        getName(): string;
        keys(): Internal.Enumeration<any>;
        computeIfAbsent(arg0: any, arg1: ((arg0: any) => any)): any;
        values(): Internal.Collection<any>;
        replace(arg0: any, arg1: any): any;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replaceAll(arg0: ((arg0: any, arg1: any) => any)): void;
        put(arg0: any, arg1: any): any;
        remove(arg0: any): any;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: any, arg1: ((arg0: any, arg1: any) => any)): any;
        load(arg0: Internal.InputStream): void;
        putAll(arg0: Internal.Map_<any, any>): void;
        merge(arg0: any, arg1: any, arg2: ((arg0: any, arg1: any) => any)): any;
        get(arg0: any): any;
        getServices(): Internal.Set<Internal.Provider$Service>;
        keySet(): Internal.Set<any>;
        getVersion(): number;
        getProperty(arg0: string): string;
        getInfo(): string;
        entrySet(): Internal.Set<Internal.Map$Entry<any, any>>;
        getVersionStr(): string;
        forEach(arg0: ((arg0: any, arg1: any) => void)): void;
        clear(): void;
        configure(arg0: string): Internal.Provider;
        getService(arg0: string, arg1: string): Internal.Provider$Service;
        computeIfPresent(arg0: any, arg1: ((arg0: any, arg1: any) => any)): any;
        elements(): Internal.Enumeration<any>;
        toString(): string;
        putIfAbsent(arg0: any, arg1: any): any;
        get configured(): boolean;
        get versionStr(): string;
        get name(): string;
        get services(): Internal.Set<Internal.Provider$Service>;
        get version(): number;
        get info(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Provider_ = Provider;
    class FMLModIdMappingEvent extends Internal.ModLifecycleEvent {
        getRegistries(): Internal.ImmutableSet<ResourceLocation>;
        getRemaps(arg0: ResourceLocation_): Internal.ImmutableList<Internal.FMLModIdMappingEvent$ModRemapping>;
        getListenerList(): Internal.ListenerList;
        readonly isFrozen : boolean;
        get listenerList(): Internal.ListenerList;
        get registries(): Internal.ImmutableSet<ResourceLocation>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FMLModIdMappingEvent_ = FMLModIdMappingEvent;
    abstract class ImmutableMultimap <K, V> extends Internal.AbstractMultimap<K, V> implements Internal.Serializable {
        inverse(): Internal.ImmutableMultimap<V, K>;
        containsEntry(arg0: any, arg1: any): boolean;
        asMap(): Internal.ImmutableMap<K, Internal.Collection<V>>;
        asMap(): Internal.Map<any, any>;
        keys(): Internal.ImmutableMultiset<K>;
        keys(): Internal.Multiset<any>;
        containsKey(arg0: any): boolean;
        forEach(arg0: ((arg0: K, arg1: V) => void)): void;
        values(): Internal.ImmutableCollection<V>;
        values(): Internal.Collection<any>;
        isEmpty(): boolean;
        clear(): void;
        static copyOf<K_, V_>(arg0: Internal.Multimap<K_, V_>): Internal.ImmutableMultimap<K_, V_>;
        static copyOf<K_, V_>(arg0: Internal.Iterable<Internal.Map$Entry<K_, V_>>): Internal.ImmutableMultimap<K_, V_>;
        replaceValues(arg0: K, arg1: Internal.Iterable<V>): Internal.ImmutableCollection<V>;
        replaceValues(arg0: any, arg1: Internal.Iterable<any>): Internal.Collection<any>;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): boolean;
        remove(arg0: any, arg1: any): boolean;
        removeAll(arg0: any): Internal.ImmutableCollection<V>;
        removeAll(arg0: any): Internal.Collection<any>;
        entries(): Internal.ImmutableCollection<Internal.Map$Entry<K, V>>;
        entries(): Internal.Collection<any>;
        size(): number;
        hashCode(): number;
        putAll(arg0: K, arg1: Internal.Iterable<V>): boolean;
        putAll(arg0: Internal.Multimap<K, V>): boolean;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_, arg6: K_, arg7: V_): Internal.ImmutableMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_): Internal.ImmutableMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_): Internal.ImmutableMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_): Internal.ImmutableMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_, arg6: K_, arg7: V_, arg8: K_, arg9: V_): Internal.ImmutableMultimap<K_, V_>;
        static of<K_, V_>(): Internal.ImmutableMultimap<K_, V_>;
        equals(arg0: any): boolean;
        get(arg0: any): Internal.Collection<any>;
        get(arg0: K): Internal.ImmutableCollection<V>;
        static builder<K_, V_>(): Internal.ImmutableMultimap$Builder<K_, V_>;
        toString(): string;
        keySet(): Internal.ImmutableSet<K>;
        keySet(): Internal.Set<any>;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableMultimap_<K, V> = ImmutableMultimap<K, V>;
    interface StateContainer$IFactory <O, S> {
        create(arg0: O, arg1: Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>, arg2: Internal.MapCodec<S>): S;
    }
    type StateContainer$IFactory_<O, S> = StateContainer$IFactory<O, S>;
    class MerchantContainer extends Internal.Container {
        func_223432_h(): boolean;
        func_217043_f(arg0: number): void;
        func_217051_h(): Internal.MerchantOffers;
        func_217042_i(): boolean;
        func_75130_a(arg0: Internal.IInventory): void;
        func_217048_e(): number;
        func_217046_g(arg0: number): void;
        func_217047_f(): number;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_217044_a(arg0: Internal.MerchantOffers): void;
        func_75175_c(arg0: number): void;
        func_217045_a(arg0: boolean): void;
        func_217052_e(arg0: number): void;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_223431_b(arg0: boolean): void;
        func_217049_g(): number;
        func_94530_a(arg0: Internal.ItemStack, arg1: Internal.Slot): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MerchantContainer_ = MerchantContainer;
    class WalkTarget extends Document.Object {
        func_220966_a(): Internal.IPosWrapper;
        func_220964_c(): number;
        func_220965_b(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WalkTarget_ = WalkTarget;
    class NearestLivingEntitiesSensor extends Internal.Sensor<Internal.LivingEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NearestLivingEntitiesSensor_ = NearestLivingEntitiesSensor;
    class VillagerProfession extends Internal.ForgeRegistryEntry<Internal.VillagerProfession> {
        func_221146_c(): Internal.ImmutableSet<Internal.Item>;
        func_221149_b(): Internal.PointOfInterestType;
        toString(): string;
        func_221150_d(): Internal.ImmutableSet<Internal.Block>;
        func_226558_e_(): Internal.SoundEvent;
        static readonly field_221165_o : Internal.VillagerProfession;
        static readonly field_221164_n : Internal.VillagerProfession;
        static readonly field_221159_i : Internal.VillagerProfession;
        static readonly field_221163_m : Internal.VillagerProfession;
        static readonly field_221158_h : Internal.VillagerProfession;
        static readonly field_221162_l : Internal.VillagerProfession;
        static readonly field_221157_g : Internal.VillagerProfession;
        static readonly field_221161_k : Internal.VillagerProfession;
        static readonly field_221156_f : Internal.VillagerProfession;
        static readonly field_221160_j : Internal.VillagerProfession;
        static readonly field_221155_e : Internal.VillagerProfession;
        static readonly field_221154_d : Internal.VillagerProfession;
        static readonly field_221153_c : Internal.VillagerProfession;
        static readonly field_221152_b : Internal.VillagerProfession;
        static readonly field_221151_a : Internal.VillagerProfession;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VillagerProfession_ = VillagerProfession;
    class ScoreCriteria$RenderType extends Internal.Enum<Internal.ScoreCriteria$RenderType> {
        func_211838_a(): string;
        static func_211839_a(arg0: string): Internal.ScoreCriteria$RenderType;
        static valueOf(arg0: string): Internal.ScoreCriteria$RenderType;
        static values(): Internal.ScoreCriteria$RenderType[];
        static readonly HEARTS : Internal.ScoreCriteria$RenderType;
        static readonly INTEGER : Internal.ScoreCriteria$RenderType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScoreCriteria$RenderType_ = "integer" | "hearts" | ScoreCriteria$RenderType;
    class PlayerFlyableFallEvent extends Internal.PlayerEvent {
        getDistance(): number;
        getListenerList(): Internal.ListenerList;
        setDistance(arg0: number): void;
        setMultiplier(arg0: number): void;
        getMultiplier(): number;
        get distance(): number;
        get listenerList(): Internal.ListenerList;
        get multiplier(): number;
        set distance(arg0: number);
        set multiplier(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerFlyableFallEvent_ = PlayerFlyableFallEvent;
    class ChunkDataEvent extends Internal.ChunkEvent {
        getListenerList(): Internal.ListenerList;
        getData(): Internal.CompoundNBT;
        get data(): Internal.CompoundNBT;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkDataEvent_ = ChunkDataEvent;
    class PointOfView extends Internal.Enum<Internal.PointOfView> {
        func_243193_b(): boolean;
        func_243194_c(): Internal.PointOfView;
        static valueOf(arg0: string): Internal.PointOfView;
        static values(): Internal.PointOfView[];
        func_243192_a(): boolean;
        static readonly THIRD_PERSON_BACK : Internal.PointOfView;
        static readonly THIRD_PERSON_FRONT : Internal.PointOfView;
        static readonly FIRST_PERSON : Internal.PointOfView;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PointOfView_ = "first_person" | "third_person_back" | "third_person_front" | PointOfView;
    interface IRandomRange {
        func_215830_a(): ResourceLocation;
        func_186511_a(arg0: Internal.Random): number;
    }
    type IRandomRange_ = IRandomRange;
    abstract class BossInfo extends Document.Object {
        func_186747_j(): boolean;
        func_186748_k(): boolean;
        func_186741_a(arg0: boolean): Internal.BossInfo;
        func_186742_b(arg0: boolean): Internal.BossInfo;
        func_186746_a(arg0: Internal.BossInfo$Overlay_): void;
        func_186735_a(arg0: number): void;
        func_186745_a(arg0: Internal.BossInfo$Color_): void;
        func_186743_c(arg0: boolean): Internal.BossInfo;
        func_186744_e(): Internal.ITextComponent;
        func_186740_h(): Internal.BossInfo$Overlay;
        func_186739_a(arg0: Internal.ITextComponent_): void;
        func_186737_d(): Internal.UUID;
        func_186738_f(): number;
        func_186736_g(): Internal.BossInfo$Color;
        func_186734_i(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BossInfo_ = BossInfo;
    class AlwaysTrueTest extends Internal.PosRuleTest {
        func_230385_a_(arg0: BlockPos, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Random): boolean;
        static readonly field_237099_a_ : Internal.Codec<Internal.AlwaysTrueTest>;
        static readonly field_237100_b_ : Internal.AlwaysTrueTest;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AlwaysTrueTest_ = AlwaysTrueTest;
    class MobSpawnInfo$SpawnCosts extends Document.Object {
        func_242582_a(): number;
        func_242585_b(): number;
        static readonly field_242579_a : Internal.Codec<Internal.MobSpawnInfo$SpawnCosts>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MobSpawnInfo$SpawnCosts_ = MobSpawnInfo$SpawnCosts;
    interface GameRulesAccessor$BooleanValueSimple {
    }
    type GameRulesAccessor$BooleanValueSimple_ = GameRulesAccessor$BooleanValueSimple;
    class ShaderLoader$ShaderType extends Internal.Enum<Internal.ShaderLoader$ShaderType> {
        func_148062_a(): string;
        static valueOf(arg0: string): Internal.ShaderLoader$ShaderType;
        func_148063_b(): string;
        static values(): Internal.ShaderLoader$ShaderType[];
        func_148064_d(): Internal.Map<string, Internal.ShaderLoader>;
        static readonly VERTEX : Internal.ShaderLoader$ShaderType;
        static readonly FRAGMENT : Internal.ShaderLoader$ShaderType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShaderLoader$ShaderType_ = "vertex" | "fragment" | ShaderLoader$ShaderType;
    abstract class NumberFormat extends Internal.Format {
        setGroupingUsed(arg0: boolean): void;
        static getCurrencyInstance(arg0: Internal.Locale): Internal.NumberFormat;
        static getCurrencyInstance(): Internal.NumberFormat;
        getMinimumFractionDigits(): number;
        setCurrency(arg0: Internal.Currency): void;
        setMinimumIntegerDigits(arg0: number): void;
        static getCompactNumberInstance(): Internal.NumberFormat;
        static getCompactNumberInstance(arg0: Internal.Locale, arg1: Internal.NumberFormat$Style_): Internal.NumberFormat;
        getRoundingMode(): Internal.RoundingMode;
        hashCode(): number;
        setParseIntegerOnly(arg0: boolean): void;
        static getAvailableLocales(): Internal.Locale[];
        getCurrency(): Internal.Currency;
        isGroupingUsed(): boolean;
        format(arg0: number, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        format(arg0: number, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        format(arg0: any, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        format(arg0: number): string;
        format(arg0: number): string;
        setMinimumFractionDigits(arg0: number): void;
        parse(arg0: string, arg1: Internal.ParsePosition): Internal.Number;
        parse(arg0: string): Internal.Number;
        setMaximumIntegerDigits(arg0: number): void;
        getMaximumIntegerDigits(): number;
        static getPercentInstance(): Internal.NumberFormat;
        static getPercentInstance(arg0: Internal.Locale): Internal.NumberFormat;
        static getNumberInstance(): Internal.NumberFormat;
        static getNumberInstance(arg0: Internal.Locale): Internal.NumberFormat;
        parseObject(arg0: string, arg1: Internal.ParsePosition): any;
        static getIntegerInstance(arg0: Internal.Locale): Internal.NumberFormat;
        static getIntegerInstance(): Internal.NumberFormat;
        getMaximumFractionDigits(): number;
        equals(arg0: any): boolean;
        clone(): any;
        isParseIntegerOnly(): boolean;
        setRoundingMode(arg0: Internal.RoundingMode_): void;
        getMinimumIntegerDigits(): number;
        static getInstance(): Internal.NumberFormat;
        static getInstance(arg0: Internal.Locale): Internal.NumberFormat;
        setMaximumFractionDigits(arg0: number): void;
        static readonly FRACTION_FIELD : 1;
        static readonly INTEGER_FIELD : 0;
        get instance(): Internal.NumberFormat;
        get parseIntegerOnly(): boolean;
        get groupingUsed(): boolean;
        get compactNumberInstance(): Internal.NumberFormat;
        get availableLocales(): Internal.Locale[];
        get maximumIntegerDigits(): number;
        get roundingMode(): Internal.RoundingMode;
        get maximumFractionDigits(): number;
        get minimumFractionDigits(): number;
        get currency(): Internal.Currency;
        get integerInstance(): Internal.NumberFormat;
        get numberInstance(): Internal.NumberFormat;
        get percentInstance(): Internal.NumberFormat;
        get minimumIntegerDigits(): number;
        get currencyInstance(): Internal.NumberFormat;
        set maximumFractionDigits(arg0: number);
        set roundingMode(arg0: Internal.RoundingMode_);
        set minimumFractionDigits(arg0: number);
        set parseIntegerOnly(arg0: boolean);
        set currency(arg0: Internal.Currency);
        set groupingUsed(arg0: boolean);
        set minimumIntegerDigits(arg0: number);
        set maximumIntegerDigits(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NumberFormat_ = NumberFormat;
    class FurnaceFuelBurnTimeEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        setBurnTime(arg0: number): void;
        getRecipeType(): Internal.IRecipeType<any>;
        getBurnTime(): number;
        getItemStack(): Internal.ItemStack;
        isCancelable(): boolean;
        get itemStack(): Internal.ItemStack;
        get cancelable(): boolean;
        get recipeType(): Internal.IRecipeType<any>;
        get listenerList(): Internal.ListenerList;
        get burnTime(): number;
        set burnTime(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FurnaceFuelBurnTimeEvent_ = FurnaceFuelBurnTimeEvent;
    class BannerDuplicateRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<any>;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BannerDuplicateRecipe_ = BannerDuplicateRecipe;
    interface IForgeTextureAtlasSprite {
        load(arg0: Internal.IResourceManager, arg1: ResourceLocation_, arg2: ((arg0: ResourceLocation) => Internal.TextureAtlasSprite)): boolean;
        getDependencies(): Internal.Collection<ResourceLocation>;
        hasCustomLoader(arg0: Internal.IResourceManager, arg1: ResourceLocation_): boolean;
    }
    type IForgeTextureAtlasSprite_ = IForgeTextureAtlasSprite;
    class Products$P8 <F, T1, T2, T3, T4, T5, T6, T7, T8> extends Document.Object {
        t4(): Internal.App<F, T4>;
        t5(): Internal.App<F, T5>;
        t6(): Internal.App<F, T6>;
        t7(): Internal.App<F, T7>;
        t8(): Internal.App<F, T8>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, R_>>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, R_>): Internal.App<F, R_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        t3(): Internal.App<F, T3>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P8_<F, T1, T2, T3, T4, T5, T6, T7, T8> = Products$P8<F, T1, T2, T3, T4, T5, T6, T7, T8>;
    abstract class AbstractObject2ObjectMap <K, V> extends Internal.AbstractObject2ObjectFunction<K, V> implements Internal.Object2ObjectMap<K, V>, Internal.Serializable {
        containsKey(arg0: any): boolean;
        hashCode(): number;
        putAll(arg0: Internal.Map_<K, V>): void;
        values(): Internal.ObjectCollection<V>;
        values(): Internal.Collection<any>;
        equals(arg0: any): boolean;
        isEmpty(): boolean;
        toString(): string;
        keySet(): Internal.ObjectSet<K>;
        keySet(): Internal.Set<any>;
        containsValue(arg0: any): boolean;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractObject2ObjectMap_<K, V> = AbstractObject2ObjectMap<K, V>;
    class SStatisticsPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_148974_c(): Internal.Map<Internal.Stat<any>, number>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SStatisticsPacket_ = SStatisticsPacket;
    class LivingDamageEvent extends Internal.LivingEvent {
        getListenerList(): Internal.ListenerList;
        getSource(): Internal.DamageSource;
        setAmount(arg0: number): void;
        isCancelable(): boolean;
        getAmount(): number;
        get amount(): number;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get source(): Internal.DamageSource;
        set amount(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingDamageEvent_ = LivingDamageEvent;
    class StonecutterContainer extends Internal.Container {
        func_216957_a(): Internal.ContainerType<any>;
        func_217076_f(): Internal.List<Internal.StonecuttingRecipe>;
        func_217075_g(): number;
        func_75140_a(arg0: Internal.PlayerEntity, arg1: number): boolean;
        func_75130_a(arg0: Internal.IInventory): void;
        func_217071_a(arg0: (() => void)): void;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_94530_a(arg0: Internal.ItemStack, arg1: Internal.Slot): boolean;
        func_217083_h(): boolean;
        func_217073_e(): number;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        readonly field_217087_f : Internal.IInventory;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StonecutterContainer_ = StonecutterContainer;
    class RenderState$FogState extends Internal.RenderState {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$FogState_ = RenderState$FogState;
    interface NavigableSet <E> extends Internal.SortedSet<E> {
        tailSet(arg0: E, arg1: boolean): Internal.NavigableSet<E>;
        tailSet(arg0: E): Internal.SortedSet<E>;
        ceiling(arg0: E): E;
        headSet(arg0: E, arg1: boolean): Internal.NavigableSet<E>;
        headSet(arg0: E): Internal.SortedSet<E>;
        lower(arg0: E): E;
        descendingIterator(): Internal.Iterator<E>;
        descendingSet(): Internal.NavigableSet<E>;
        pollLast(): E;
        removeLast(): E;
        iterator(): Internal.Iterator<E>;
        removeFirst(): E;
        subSet(arg0: E, arg1: boolean, arg2: E, arg3: boolean): Internal.NavigableSet<E>;
        subSet(arg0: E, arg1: E): Internal.SortedSet<E>;
        pollFirst(): E;
        floor(arg0: E): E;
        reversed(): Internal.NavigableSet<E>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.SequencedSet<any>;
        reversed(): Internal.SortedSet<any>;
        higher(arg0: E): E;
    }
    type NavigableSet_<E> = NavigableSet<E>;
    class ItemAttributeModifierEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        addModifier(arg0: Internal.Attribute, arg1: Internal.AttributeModifier): boolean;
        getOriginalModifiers(): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getSlotType(): EquipmentSlot;
        getModifiers(): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getItemStack(): Internal.ItemStack;
        removeAttribute(arg0: Internal.Attribute): Internal.Collection<Internal.AttributeModifier>;
        removeModifier(arg0: Internal.Attribute, arg1: Internal.AttributeModifier): boolean;
        clearModifiers(): void;
        get itemStack(): Internal.ItemStack;
        get originalModifiers(): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        get slotType(): EquipmentSlot;
        get listenerList(): Internal.ListenerList;
        get modifiers(): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemAttributeModifierEvent_ = ItemAttributeModifierEvent;
    class DarkOakTrunkPlacer extends Internal.AbstractTrunkPlacer {
        func_230382_a_(arg0: Internal.IWorldGenerationReader, arg1: Internal.Random, arg2: number, arg3: BlockPos, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox, arg6: Internal.BaseTreeFeatureConfig): Internal.List<Internal.FoliagePlacer$Foliage>;
        static readonly field_236882_a_ : Internal.Codec<Internal.DarkOakTrunkPlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DarkOakTrunkPlacer_ = DarkOakTrunkPlacer;
    class Products$P1 <F, T1> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: ((arg0: T1) => R_)): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, ((arg0: T1) => R_)>): Internal.App<F, R_>;
        and<T2_, T3_, T4_, T5_, T6_, T7_>(arg0: Internal.Products$P6<F, T2_, T3_, T4_, T5_, T6_, T7_>): Internal.Products$P7<F, T1, T2_, T3_, T4_, T5_, T6_, T7_>;
        and<T2_, T3_, T4_, T5_, T6_, T7_, T8_>(arg0: Internal.Products$P7<F, T2_, T3_, T4_, T5_, T6_, T7_, T8_>): Internal.Products$P8<F, T1, T2_, T3_, T4_, T5_, T6_, T7_, T8_>;
        and<T2_, T3_, T4_, T5_>(arg0: Internal.Products$P4<F, T2_, T3_, T4_, T5_>): Internal.Products$P5<F, T1, T2_, T3_, T4_, T5_>;
        and<T2_, T3_>(arg0: Internal.Products$P2<F, T2_, T3_>): Internal.Products$P3<F, T1, T2_, T3_>;
        and<T2_, T3_, T4_>(arg0: Internal.Products$P3<F, T2_, T3_, T4_>): Internal.Products$P4<F, T1, T2_, T3_, T4_>;
        and<T2_>(arg0: Internal.App<F, T2_>): Internal.Products$P2<F, T1, T2_>;
        and<T2_, T3_, T4_, T5_, T6_>(arg0: Internal.Products$P5<F, T2_, T3_, T4_, T5_, T6_>): Internal.Products$P6<F, T1, T2_, T3_, T4_, T5_, T6_>;
        t1(): Internal.App<F, T1>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P1_<F, T1> = Products$P1<F, T1>;
    class RemoveJEIRecipesEvent extends Internal.EventJS {
        yeet(category: ResourceLocation_, recipesToYeet: ResourceLocation[]): void;
        getCategories(): Internal.Collection<Internal.IRecipeCategory<any>>;
        getCategoryIds(): Internal.Collection<ResourceLocation>;
        remove(category: ResourceLocation_, recipesToRemove: ResourceLocation[]): void;
        get categoryIds(): Internal.Collection<ResourceLocation>;
        get categories(): Internal.Collection<Internal.IRecipeCategory<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RemoveJEIRecipesEvent_ = RemoveJEIRecipesEvent;
    interface WatchKey {
        cancel(): void;
        pollEvents(): Internal.List<Internal.WatchEvent<any>>;
        watchable(): Internal.Watchable;
        isValid(): boolean;
        reset(): boolean;
    }
    type WatchKey_ = WatchKey;
    class ServerScriptManager extends Document.Object {
        init(serverResources: Internal.DataPackRegistries): void;
        reloadScriptManager(resourceManager: Internal.IResourceManager): void;
        resourcePackList(list0: Internal.List<Internal.IResourcePack>): Internal.List<Internal.IResourcePack>;
        readonly scriptManager : Internal.ScriptManager;
        static instance : Internal.ServerScriptManager;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerScriptManager_ = ServerScriptManager;
    interface Spliterator$OfLong extends Internal.Spliterator$OfPrimitive<number, Internal.LongConsumer, Internal.Spliterator$OfLong> {
        trySplit(): Internal.Spliterator$OfPrimitive<any, any, any>;
        trySplit(): Internal.Spliterator<any>;
        trySplit(): Internal.Spliterator$OfLong;
        tryAdvance(arg0: any): boolean;
        tryAdvance(arg0: ((arg0: number) => void)): boolean;
        tryAdvance(arg0: ((arg0: number) => void)): boolean;
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
    }
    type Spliterator$OfLong_ = Spliterator$OfLong;
    abstract class AbstractLong2ObjectFunction <V> extends Document.Object implements Internal.Long2ObjectFunction<V>, Internal.Serializable {
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractLong2ObjectFunction_<V> = AbstractLong2ObjectFunction<V>;
    abstract class GolemEntity extends Internal.CreatureEntity {
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_70627_aG(): number;
        func_213397_c(arg0: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GolemEntity_ = GolemEntity;
    interface ITickList <T> {
        func_205362_a(arg0: BlockPos, arg1: T, arg2: number, arg3: Internal.TickPriority_): void;
        func_205361_b(arg0: BlockPos, arg1: T): boolean;
        func_205360_a(arg0: BlockPos, arg1: T, arg2: number): void;
        func_205359_a(arg0: BlockPos, arg1: T): boolean;
    }
    type ITickList_<T> = ITickList<T>;
    class SimpleMapCodec <K, V> extends Internal.MapCodec<Internal.Map<K, V>> implements Internal.BaseMapCodec<K, V> {
        encode(arg0: any, arg1: Internal.DynamicOps<any>, arg2: Internal.RecordBuilder<any>): Internal.RecordBuilder<any>;
        encode<T_>(arg0: Internal.Map_<K, V>, arg1: Internal.DynamicOps<T_>, arg2: Internal.RecordBuilder<T_>): Internal.RecordBuilder<T_>;
        elementCodec(): Internal.Codec<V>;
        keys<T_>(arg0: Internal.DynamicOps<T_>): Internal.Stream<T_>;
        hashCode(): number;
        keyCodec(): Internal.Codec<K>;
        equals(arg0: any): boolean;
        toString(): string;
        decode<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.MapLike<T_>): Internal.DataResult<Internal.Map<K, V>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SimpleMapCodec_<K, V> = SimpleMapCodec<K, V>;
    class MooshroomEntity extends Internal.CowEntity implements Internal.IShearable, Internal.IForgeShearable {
        func_230262_K__(): boolean;
        func_230263_a_(arg0: Internal.SoundCategory_): void;
        static func_223318_c(arg0: Internal.EntityType<Internal.MooshroomEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        isShearable(arg0: Internal.ItemStack, arg1: Internal.World, arg2: BlockPos): boolean;
        onSheared(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack, arg2: Internal.World, arg3: BlockPos, arg4: number): Internal.List<Internal.ItemStack>;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_213444_dV(): Internal.MooshroomEntity$Type;
        func_241841_a(arg0: Internal.ServerWorld, arg1: Internal.LightningBoltEntity): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.MooshroomEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.CowEntity;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MooshroomEntity_ = MooshroomEntity;
    interface CraftingContainerAccessor {
        getCraftResult(): Internal.CraftResultInventory;
        getCraftMatrix(): Internal.CraftingInventory;
    }
    type CraftingContainerAccessor_ = CraftingContainerAccessor;
    class CKeepAlivePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149460_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CKeepAlivePacket_ = CKeepAlivePacket;
    interface IForgeEntityMinecart {
        canBeRidden(): boolean;
        setCurrentCartSpeedCapOnRail(arg0: number): void;
        getMaxSpeedAirVertical(): number;
        getMaxSpeedWithRail(): number;
        setDragAir(arg0: number): void;
        setMaxSpeedAirLateral(arg0: number): void;
        getMaxSpeedAirLateral(): number;
        getDragAir(): number;
        getCollisionHandler(): Internal.IMinecartCollisionHandler;
        setCanUseRail(arg0: boolean): void;
        getComparatorLevel(): number;
        getCurrentRailPosition(): BlockPos;
        shouldDoRailFunctions(): boolean;
        moveMinecartOnRail(arg0: BlockPos): void;
        getCartItem(): Internal.ItemStack;
        canUseRail(): boolean;
        getMinecart(): Internal.AbstractMinecartEntity;
        getSlopeAdjustment(): number;
        setMaxSpeedAirVertical(arg0: number): void;
        isPoweredCart(): boolean;
        getCurrentCartSpeedCapOnRail(): number;
        getMaxCartSpeedOnRail(): number;
    }
    type IForgeEntityMinecart_ = IForgeEntityMinecart;
    class BufferBuilder$State extends Document.Object {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BufferBuilder$State_ = BufferBuilder$State;
    abstract class Placement <DC> extends Internal.ForgeRegistryEntry<Internal.Placement<any>> {
        func_236962_a_(): Internal.Codec<Internal.ConfiguredPlacement<DC>>;
        func_241857_a(arg0: Internal.WorldDecoratingHelper, arg1: Internal.Random, arg2: DC, arg3: BlockPos): Internal.Stream<BlockPos>;
        toString(): string;
        func_227446_a_(arg0: DC): Internal.ConfiguredPlacement<DC>;
        static readonly field_242912_w : Internal.Placement<Internal.FeatureSpreadConfig>;
        static readonly field_242896_B : Internal.Placement<Internal.DecoratedPlacementConfig>;
        static readonly field_242897_C : Internal.Placement<Internal.FeatureSpreadConfig>;
        static readonly field_215011_J : Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_215022_h : Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_242905_i : Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_242903_g : Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_242904_h : Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_215013_L : Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_242901_e : Internal.Placement<Internal.TopSolidWithNoiseConfig>;
        static readonly field_242902_f : Internal.Placement<Internal.AtSurfaceWithExtraConfig>;
        static readonly field_242900_d : Internal.Placement<Internal.NoiseDependant>;
        static readonly field_215039_y : Internal.Placement<Internal.CaveEdgeConfig>;
        static readonly field_215036_v : Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_236960_A_ : Internal.Placement<Internal.FeatureSpreadConfig>;
        static readonly field_242909_n : Internal.Placement<Internal.TopSolidRangeConfig>;
        static readonly field_242908_m : Internal.Placement<Internal.TopSolidRangeConfig>;
        static readonly field_215009_H : Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_242898_b : Internal.Placement<Internal.ChanceConfig>;
        static readonly field_242907_l : Internal.Placement<Internal.TopSolidRangeConfig>;
        static readonly field_242906_k : Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_215006_E : Internal.Placement<Internal.ChanceConfig>;
        static readonly field_242911_p : Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_215005_D : Internal.Placement<Internal.ChanceConfig>;
        static readonly field_242910_o : Internal.Placement<Internal.DepthAverageConfig>;
        static readonly field_215008_G : Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_242899_c : Internal.Placement<Internal.FeatureSpreadConfig>;
        static readonly field_215004_C : Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_215003_B : Internal.Placement<Internal.NoPlacementConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Placement_<DC> = Placement<DC>;
    class FireballEntity extends Internal.AbstractFireballEntity {
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        field_92057_e : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FireballEntity_ = FireballEntity;
    interface Object2ObjectMap$Entry <K, V> extends Internal.Map$Entry<K, V> {
    }
    type Object2ObjectMap$Entry_<K, V> = Object2ObjectMap$Entry<K, V>;
    class BannerPattern extends Internal.Enum<Internal.BannerPattern> implements Internal.IExtensibleEnum {
        func_190993_b(): string;
        static func_190994_a(arg0: string): Internal.BannerPattern;
        func_226957_a_(arg0: boolean): ResourceLocation;
        func_190997_a(): string;
        static valueOf(arg0: string): Internal.BannerPattern;
        static values(): Internal.BannerPattern[];
        static create(arg0: string, arg1: string, arg2: string, arg3: boolean): Internal.BannerPattern;
        static create(arg0: string, arg1: string, arg2: string): Internal.BannerPattern;
        static readonly STRIPE_BOTTOM : Internal.BannerPattern;
        static readonly GLOBE : Internal.BannerPattern;
        static readonly SQUARE_TOP_RIGHT : Internal.BannerPattern;
        static readonly STRIPE_MIDDLE : Internal.BannerPattern;
        static readonly TRIANGLE_TOP : Internal.BannerPattern;
        static readonly HALF_HORIZONTAL_MIRROR : Internal.BannerPattern;
        static readonly STRIPE_TOP : Internal.BannerPattern;
        static readonly DIAGONAL_RIGHT_MIRROR : Internal.BannerPattern;
        static readonly STRIPE_CENTER : Internal.BannerPattern;
        static readonly STRAIGHT_CROSS : Internal.BannerPattern;
        static readonly SQUARE_BOTTOM_LEFT : Internal.BannerPattern;
        static readonly SKULL : Internal.BannerPattern;
        static readonly RHOMBUS_MIDDLE : Internal.BannerPattern;
        static readonly CIRCLE_MIDDLE : Internal.BannerPattern;
        static readonly HALF_HORIZONTAL : Internal.BannerPattern;
        static readonly GRADIENT : Internal.BannerPattern;
        static readonly BASE : Internal.BannerPattern;
        static readonly HALF_VERTICAL_MIRROR : Internal.BannerPattern;
        static readonly field_222481_P : 34;
        static readonly STRIPE_RIGHT : Internal.BannerPattern;
        static readonly field_222480_O : 41;
        static readonly CREEPER : Internal.BannerPattern;
        static readonly STRIPE_LEFT : Internal.BannerPattern;
        static readonly BRICKS : Internal.BannerPattern;
        static readonly TRIANGLES_BOTTOM : Internal.BannerPattern;
        static readonly SQUARE_TOP_LEFT : Internal.BannerPattern;
        static readonly FLOWER : Internal.BannerPattern;
        static readonly STRIPE_SMALL : Internal.BannerPattern;
        static readonly TRIANGLE_BOTTOM : Internal.BannerPattern;
        static readonly CURLY_BORDER : Internal.BannerPattern;
        static readonly TRIANGLES_TOP : Internal.BannerPattern;
        static readonly DIAGONAL_RIGHT : Internal.BannerPattern;
        static readonly STRIPE_DOWNLEFT : Internal.BannerPattern;
        static readonly DIAGONAL_LEFT_MIRROR : Internal.BannerPattern;
        static readonly STRIPE_DOWNRIGHT : Internal.BannerPattern;
        static readonly PIGLIN : Internal.BannerPattern;
        static readonly GRADIENT_UP : Internal.BannerPattern;
        static readonly DIAGONAL_LEFT : Internal.BannerPattern;
        static readonly BORDER : Internal.BannerPattern;
        static readonly MOJANG : Internal.BannerPattern;
        static readonly HALF_VERTICAL : Internal.BannerPattern;
        static readonly CROSS : Internal.BannerPattern;
        static readonly field_235646_Q_ : 6;
        static readonly SQUARE_BOTTOM_RIGHT : Internal.BannerPattern;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BannerPattern_ = "base" | "square_bottom_left" | "square_bottom_right" | "square_top_left" | "square_top_right" | "stripe_bottom" | "stripe_top" | "stripe_left" | "stripe_right" | "stripe_center" | "stripe_middle" | "stripe_downright" | "stripe_downleft" | "stripe_small" | "cross" | "straight_cross" | "triangle_bottom" | "triangle_top" | "triangles_bottom" | "triangles_top" | "diagonal_left" | "diagonal_right" | "diagonal_left_mirror" | "diagonal_right_mirror" | "circle_middle" | "rhombus_middle" | "half_vertical" | "half_horizontal" | "half_vertical_mirror" | "half_horizontal_mirror" | "border" | "curly_border" | "gradient" | "gradient_up" | "bricks" | "globe" | "creeper" | "skull" | "flower" | "mojang" | "piglin" | BannerPattern;
    class Chunk extends Internal.CapabilityProvider<Internal.Chunk> implements Internal.IChunk, Internal.IForgeChunk, Internal.ILevelChunk, Internal.ExtendedChunk {
        func_150813_a(arg0: Internal.TileEntity): void;
        func_203066_o(): Internal.Set<BlockPos>;
        func_201612_a(arg0: Internal.Map_<Internal.Structure_<any>, Internal.StructureStart_<any>>): void;
        func_217310_r(): boolean;
        setBlockEmptinessMap(arg0: boolean[]): void;
        func_177426_a(arg0: BlockPos, arg1: Internal.TileEntity): void;
        func_222880_a(arg0: Internal.ServerWorld): void;
        getSkyEmptinessMap(): boolean[];
        func_217318_w(): void;
        func_177424_a(arg0: BlockPos, arg1: Internal.Chunk$CreateEntityType_): Internal.TileEntity;
        func_201589_g(): Internal.ChunkStatus;
        func_177409_g(arg0: boolean): void;
        getBlockEmptinessMap(): boolean[];
        handler$zjk000$onTransitionToFull(arg0: Internal.World, arg1: Internal.ChunkPrimer, arg2: Internal.CallbackInfo): void;
        func_177412_p(): Internal.World;
        func_212247_j(): Internal.ITickList<Internal.Fluid>;
        func_76608_a(arg0: Internal.Entity, arg1: number): void;
        func_217304_m(): Internal.Stream<BlockPos>;
        func_217321_u(): Internal.ChunkHolder$LocationType;
        writeCapsToNBT(): Internal.CompoundNBT;
        func_76621_g(): boolean;
        func_201606_b(arg0: Internal.Map_<Internal.Structure_<any>, Internal.LongSet_>): void;
        func_201604_d(): Internal.Map<Internal.Structure<any>, Internal.LongSet>;
        func_222879_B(): void;
        func_177416_w(): number;
        func_76630_e(): void;
        setEntityLoadHook(loadHook: (() => void)): void;
        func_227073_a_(arg0: Internal.BiomeContainer, arg1: Internal.PacketBuffer, arg2: Internal.CompoundNBT, arg3: number): void;
        func_230343_a_(arg0: Internal.Structure<any>, arg1: number): void;
        func_177414_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.List<Internal.Entity>, arg3: ((arg0: Internal.Entity) => boolean)): void;
        func_217313_a<T_>(arg0: Internal.EntityType<any>, arg1: Internal.AxisAlignedBB, arg2: Internal.List<T_>, arg3: ((arg0: T_) => boolean)): void;
        getSkyNibbles(): any[];
        func_217311_f(): Internal.Collection<Internal.Map$Entry<Internal.Heightmap$Type, Internal.Heightmap>>;
        setBlockNibbles(arg0: any[]): void;
        func_201593_f(): boolean;
        getWorldForge(): Internal.IWorld;
        getWorldForge(): Internal.World;
        func_201576_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_225549_i_(): Internal.BiomeContainer;
        func_177430_a<T_>(arg0: Internal.Class_<T_>, arg1: Internal.AxisAlignedBB, arg2: Internal.List<T_>, arg3: ((arg0: T_) => boolean)): void;
        func_201591_a(arg0: Internal.CompoundNBT): void;
        func_177429_s(): any[];
        handler$zjk000$onConstruct(arg0: Internal.World, arg1: Internal.ChunkPos, arg2: Internal.BiomeContainer, arg3: Internal.UpgradeData, arg4: Internal.ITickList<any>, arg5: Internal.ITickList<any>, arg6: number, arg7: Internal.ChunkSection[], arg8: ((arg0: any) => void), arg9: Internal.CallbackInfo): void;
        readCapsFromNBT(arg0: Internal.CompoundNBT): void;
        func_76622_b(arg0: Internal.Entity): void;
        func_177425_e(arg0: BlockPos): void;
        func_205751_b(arg0: number, arg1: number, arg2: number): Internal.FluidState;
        func_230344_a_(arg0: Internal.Structure<any>, arg1: Internal.StructureStart<any>): void;
        func_76632_l(): Internal.ChunkPos;
        setSkyEmptinessMap(arg0: boolean[]): void;
        func_217303_b(arg0: Internal.Heightmap$Type_): Internal.Heightmap;
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
        func_177427_f(arg0: boolean): void;
        func_217305_b(arg0: boolean): void;
        func_205218_i_(): Internal.ITickList<Internal.Block>;
        func_76587_i(): Internal.ChunkSection[];
        func_217307_e(): Internal.WorldLightManager;
        func_201609_c(): Internal.Map<Internal.Structure<any>, Internal.StructureStart<any>>;
        getEntitiesWereLoaded(): boolean;
        func_201595_A(): void;
        func_177434_r(): Internal.Map<BlockPos, Internal.TileEntity>;
        func_230342_a_(arg0: Internal.Structure<any>): Internal.StructureStart<any>;
        getBlockNibbles(): any[];
        func_201607_a(arg0: Internal.Heightmap$Type_, arg1: number[]): void;
        func_201614_D(): Internal.ShortList[];
        func_76612_a(arg0: Internal.Entity): void;
        setSkyNibbles(arg0: any[]): void;
        func_230346_b_(arg0: Internal.Structure<any>): Internal.LongSet;
        func_177415_c(arg0: number): void;
        func_177432_b(arg0: number): void;
        func_196966_y(): Internal.UpgradeData;
        func_177436_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: boolean): Internal.BlockState;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_201579_g(arg0: BlockPos): Internal.CompoundNBT;
        func_217314_a(arg0: (() => Internal.ChunkHolder$LocationType)): void;
        runEntityLoadHook(): void;
        func_223134_j(arg0: BlockPos): Internal.CompoundNBT;
        func_177417_c(arg0: boolean): void;
        static readonly field_186036_a : Internal.ChunkSection;
        get skyNibbles(): any[];
        get skyEmptinessMap(): boolean[];
        get blockEmptinessMap(): boolean[];
        get entitiesWereLoaded(): boolean;
        get worldForge(): Internal.World;
        get blockNibbles(): any[];
        set skyNibbles(arg0: any[]);
        set skyEmptinessMap(arg0: boolean[]);
        set blockEmptinessMap(arg0: boolean[]);
        set entityLoadHook(loadHook: (() => void));
        set blockNibbles(arg0: any[]);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Chunk_ = Chunk;
    class Biome extends Internal.ForgeRegistryEntry$UncheckedRegistryEntry<Internal.Biome> {
        func_201848_a(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        func_225528_a_(arg0: number, arg1: number): number;
        func_225486_c(pos: BlockPos): number;
        func_185360_m(): number;
        func_185361_o(): number;
        func_204274_p(): number;
        func_201851_b(): Internal.Biome$RainType;
        func_76736_e(): boolean;
        func_201850_b(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        func_242433_b(): Internal.MobSpawnInfo;
        func_235094_x_(): Internal.Optional<Internal.BackgroundMusicSelector>;
        func_235080_i_(): number;
        func_201854_a(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: boolean): boolean;
        func_225527_a_(): number;
        func_185355_j(): number;
        func_225529_c_(): number;
        func_242445_k(): number;
        func_235089_q_(): Internal.BiomeAmbience;
        func_76727_i(): number;
        func_235090_t_(): Internal.Optional<Internal.ParticleEffectAmbience>;
        func_201856_r(): Internal.Biome$Category;
        func_206854_a(arg0: Internal.Random, arg1: Internal.IChunk, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.BlockState, arg7: Internal.BlockState, arg8: number, arg9: number): void;
        func_235091_u_(): Internal.Optional<Internal.SoundEvent>;
        func_235092_v_(): Internal.Optional<Internal.MoodSoundAmbience>;
        func_235093_w_(): Internal.Optional<Internal.SoundAdditionsAmbience>;
        toString(): string;
        func_242440_e(): Internal.BiomeGenerationSettings;
        func_242427_a(arg0: Internal.StructureManager, arg1: Internal.ChunkGenerator, arg2: Internal.WorldGenRegion, arg3: number, arg4: Internal.SharedSeedRandom, arg5: BlockPos): void;
        static readonly field_235051_b_ : Internal.Codec<(() => Internal.Biome)>;
        static readonly field_150586_aC : Internal.Logger;
        static readonly field_242420_e : Internal.Codec<Internal.List<(() => Internal.Biome)>>;
        static readonly field_242418_b : Internal.Codec<Internal.Biome>;
        static readonly field_242419_c : Internal.Codec<Internal.Biome>;
        static readonly field_180281_af : Internal.PerlinNoiseGenerator;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Biome_ = Biome;
    class MultipartBlockStateGenerator extends Document.Object {
        toJson(): Internal.JsonObject;
        part(when: string, consumer: ((arg0: Internal.MultipartBlockStateGenerator$Part) => void)): void;
        part(when: string, model: string): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MultipartBlockStateGenerator_ = MultipartBlockStateGenerator;
    interface ItemTooltipEventJS$StaticTooltipHandlerFromJS {
        accept(arg0: Internal.ItemStackJS_, arg1: boolean, arg2: Internal.List<any>): void;
    }
    type ItemTooltipEventJS$StaticTooltipHandlerFromJS_ = ((arg0: Internal.ItemStackJS, arg1: boolean, arg2: Internal.List<any>) => void) | ItemTooltipEventJS$StaticTooltipHandlerFromJS;
    interface ISoundEventListener {
        func_184067_a(arg0: Internal.ISound, arg1: Internal.SoundEventAccessor): void;
    }
    type ISoundEventListener_ = ISoundEventListener;
    interface ICache {
        persistAndClearCache(): void;
    }
    type ICache_ = ICache;
    class RenderState$DiffuseLightingState extends Internal.RenderState$BooleanState {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$DiffuseLightingState_ = RenderState$DiffuseLightingState;
    class CConfirmTeleportPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186987_a(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CConfirmTeleportPacket_ = CConfirmTeleportPacket;
    interface IDrawableBuilder {
        setTextureSize(arg0: number, arg1: number): Internal.IDrawableBuilder;
        buildAnimated(arg0: number, arg1: Internal.IDrawableAnimated$StartDirection_, arg2: boolean): Internal.IDrawableAnimated;
        buildAnimated(arg0: Internal.ITickTimer, arg1: Internal.IDrawableAnimated$StartDirection_): Internal.IDrawableAnimated;
        trim(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IDrawableBuilder;
        build(): Internal.IDrawableStatic;
        addPadding(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IDrawableBuilder;
    }
    type IDrawableBuilder_ = IDrawableBuilder;
    class OceanRuinConfig extends Document.Object implements Internal.IFeatureConfig {
        readonly field_204032_b : number;
        readonly field_204033_c : number;
        static readonly field_236561_a_ : Internal.Codec<Internal.OceanRuinConfig>;
        readonly field_204031_a : Internal.OceanRuinStructure$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OceanRuinConfig_ = OceanRuinConfig;
    abstract class AbstractStringBuilder extends Document.Object implements Internal.Appendable, Internal.CharSequence {
        deleteCharAt(arg0: number): Internal.AbstractStringBuilder;
        codePointAt(arg0: number): number;
        setCharAt(arg0: number, arg1: string): void;
        replace(arg0: number, arg1: number, arg2: string): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string[], arg2: number, arg3: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: Internal.CharSequence, arg2: number, arg3: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: boolean): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: Internal.CharSequence): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string[]): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: any): Internal.AbstractStringBuilder;
        delete(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        substring(arg0: number, arg1: number): string;
        substring(arg0: number): string;
        capacity(): number;
        appendCodePoint(arg0: number): Internal.AbstractStringBuilder;
        repeat(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        repeat(arg0: Internal.CharSequence, arg1: number): Internal.AbstractStringBuilder;
        codePointBefore(arg0: number): number;
        indexOf(arg0: string, arg1: number): number;
        indexOf(arg0: string): number;
        codePointCount(arg0: number, arg1: number): number;
        codePoints(): Internal.IntStream;
        trimToSize(): void;
        getChars(arg0: number, arg1: number, arg2: string[], arg3: number): void;
        length(): number;
        subSequence(arg0: number, arg1: number): Internal.CharSequence;
        reverse(): Internal.AbstractStringBuilder;
        lastIndexOf(arg0: string, arg1: number): number;
        lastIndexOf(arg0: string): number;
        setLength(arg0: number): void;
        toString(): string;
        ensureCapacity(arg0: number): void;
        chars(): Internal.IntStream;
        offsetByCodePoints(arg0: number, arg1: number): number;
        charAt(arg0: number): string;
        append(arg0: Internal.CharSequence): Internal.AbstractStringBuilder;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.AbstractStringBuilder;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: string[]): Internal.AbstractStringBuilder;
        append(arg0: any): Internal.AbstractStringBuilder;
        append(arg0: string): Internal.AbstractStringBuilder;
        append(arg0: Internal.StringBuffer): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: string): Internal.AbstractStringBuilder;
        append(arg0: string): Internal.Appendable;
        append(arg0: boolean): Internal.AbstractStringBuilder;
        append(arg0: string[], arg1: number, arg2: number): Internal.AbstractStringBuilder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractStringBuilder_ = AbstractStringBuilder;
    abstract class GuiScreenEvent$KeyboardKeyEvent extends Internal.GuiScreenEvent {
        getListenerList(): Internal.ListenerList;
        getModifiers(): number;
        getKeyCode(): number;
        getScanCode(): number;
        get keyCode(): number;
        get listenerList(): Internal.ListenerList;
        get modifiers(): number;
        get scanCode(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$KeyboardKeyEvent_ = GuiScreenEvent$KeyboardKeyEvent;
    interface IServerWorldInfo extends Internal.ISpawnWorldInfo {
        func_76071_n(): number;
        func_76068_b(arg0: number): void;
        func_76069_a(arg0: boolean): void;
        func_215763_z(): Internal.TimerCallbackManager<Internal.MinecraftServer>;
        func_230397_h_(arg0: number): void;
        func_230391_a_(arg0: number): void;
        func_82572_b(arg0: number): void;
        func_76090_f(arg0: number): void;
        func_230396_g_(arg0: number): void;
        func_230400_v_(): number;
        func_76080_g(arg0: number): void;
        func_230392_a_(arg0: Internal.GameType_): void;
        func_230393_a_(arg0: Internal.WorldBorder$Serializer): void;
        func_230394_a_(arg0: Internal.UUID): void;
        func_230395_g_(): number;
        func_76091_d(arg0: boolean): void;
        func_76077_q(): Internal.GameType;
        func_76086_u(): boolean;
        func_85118_a(arg0: Internal.CrashReportCategory): void;
        func_230399_u_(): number;
        func_76070_v(): boolean;
        func_76065_j(): string;
        func_230398_q_(): Internal.WorldBorder$Serializer;
        func_76083_p(): number;
    }
    type IServerWorldInfo_ = IServerWorldInfo;
    interface PaddingLayout extends Internal.MemoryLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.PaddingLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.PaddingLayout;
        withByteAlignment(arg0: number): Internal.PaddingLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
    }
    type PaddingLayout_ = PaddingLayout;
    class AttachCapabilitiesEvent <T> extends Internal.GenericEvent<T> {
        getListeners(): Internal.List<Internal.Runnable>;
        getObject(): T;
        addCapability(arg0: ResourceLocation_, arg1: Internal.ICapabilityProvider): void;
        getListenerList(): Internal.ListenerList;
        getCapabilities(): Internal.Map<ResourceLocation, Internal.ICapabilityProvider>;
        addListener(arg0: (() => void)): void;
        get capabilities(): Internal.Map<ResourceLocation, Internal.ICapabilityProvider>;
        get listeners(): Internal.List<Internal.Runnable>;
        get listenerList(): Internal.ListenerList;
        get object(): T;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttachCapabilitiesEvent_<T> = AttachCapabilitiesEvent<T>;
    class ServerSettings extends Document.Object {
        static exportData(): void;
        logInvalidRecipeHandlers : boolean;
        useOriginalRecipeForFilters : boolean;
        dataPackOutput : boolean;
        logSkippedRecipes : boolean;
        static instance : Internal.ServerSettings;
        logOverrides : boolean;
        logErroringRecipes : boolean;
        static source : Internal.CommandSource;
        logAddedRecipes : boolean;
        logRemovedRecipes : boolean;
        static dataExport : Internal.JsonObject;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerSettings_ = ServerSettings;
    interface TemporalAdjuster {
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
    }
    type TemporalAdjuster_ = ((arg0: Internal.Temporal) => Internal.Temporal) | TemporalAdjuster;
    class LazyValue <T> extends Document.Object {
        func_179281_c(): T;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LazyValue_<T> = LazyValue<T>;
    interface EyeOfEnderAccess {
        setLife(arg0: number): void;
    }
    type EyeOfEnderAccess_ = EyeOfEnderAccess;
    class SMapDataPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179734_a(arg0: Internal.MapData): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149188_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SMapDataPacket_ = SMapDataPacket;
    interface WritableByteChannel extends Internal.Channel {
        write(arg0: Internal.ByteBuffer): number;
    }
    type WritableByteChannel_ = WritableByteChannel;
    class Locale extends Document.Object implements Internal.Cloneable, Internal.Serializable {
        stripExtensions(): Internal.Locale;
        static forLanguageTag(arg0: string): Internal.Locale;
        getUnicodeLocaleAttributes(): Internal.Set<string>;
        getCountry(): string;
        getUnicodeLocaleKeys(): Internal.Set<string>;
        getISO3Country(): string;
        static lookupTag(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Collection<string>): string;
        getDisplayCountry(arg0: Internal.Locale): string;
        getDisplayCountry(): string;
        getISO3Language(): string;
        static getISOCountries(arg0: Internal.Locale$IsoCountryCode_): Internal.Set<string>;
        static getISOCountries(): string[];
        hashCode(): number;
        getExtensionKeys(): Internal.Set<string>;
        static of(arg0: string, arg1: string): Internal.Locale;
        static of(arg0: string, arg1: string, arg2: string): Internal.Locale;
        static of(arg0: string): Internal.Locale;
        getDisplayVariant(arg0: Internal.Locale): string;
        getDisplayVariant(): string;
        static filterTags(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Collection<string>): Internal.List<string>;
        static filterTags(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Collection<string>, arg2: Internal.Locale$FilteringMode_): Internal.List<string>;
        static getISOLanguages(): string[];
        toLanguageTag(): string;
        static getAvailableLocales(): Internal.Locale[];
        getDisplayScript(arg0: Internal.Locale): string;
        getDisplayScript(): string;
        static lookup(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Collection<Internal.Locale>): Internal.Locale;
        getLanguage(): string;
        getExtension(arg0: string): string;
        getVariant(): string;
        static getDefault(): Internal.Locale;
        static getDefault(arg0: Internal.Locale$Category_): Internal.Locale;
        static setDefault(arg0: Internal.Locale): void;
        static setDefault(arg0: Internal.Locale$Category_, arg1: Internal.Locale): void;
        static availableLocales(): Internal.Stream<Internal.Locale>;
        hasExtensions(): boolean;
        static filter(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Collection<Internal.Locale>): Internal.List<Internal.Locale>;
        static filter(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Collection<Internal.Locale>, arg2: Internal.Locale$FilteringMode_): Internal.List<Internal.Locale>;
        getDisplayName(): string;
        getDisplayName(arg0: Internal.Locale): string;
        equals(arg0: any): boolean;
        clone(): any;
        toString(): string;
        getDisplayLanguage(): string;
        getDisplayLanguage(arg0: Internal.Locale): string;
        getScript(): string;
        static caseFoldLanguageTag(arg0: string): string;
        getUnicodeLocaleType(arg0: string): string;
        static readonly PRC : Internal.Locale;
        static readonly CANADA : Internal.Locale;
        static readonly ENGLISH : Internal.Locale;
        static readonly ROOT : Internal.Locale;
        static readonly TAIWAN : Internal.Locale;
        static readonly CHINA : Internal.Locale;
        static readonly ITALY : Internal.Locale;
        static readonly CHINESE : Internal.Locale;
        static readonly KOREA : Internal.Locale;
        static readonly FRENCH : Internal.Locale;
        static readonly FRANCE : Internal.Locale;
        static readonly TRADITIONAL_CHINESE : Internal.Locale;
        static readonly CANADA_FRENCH : Internal.Locale;
        static readonly GERMANY : Internal.Locale;
        static readonly ITALIAN : Internal.Locale;
        static readonly PRIVATE_USE_EXTENSION : "x";
        static readonly UK : Internal.Locale;
        static readonly JAPAN : Internal.Locale;
        static readonly JAPANESE : Internal.Locale;
        static readonly UNICODE_LOCALE_EXTENSION : "u";
        static readonly SIMPLIFIED_CHINESE : Internal.Locale;
        static readonly GERMAN : Internal.Locale;
        static readonly US : Internal.Locale;
        static readonly KOREAN : Internal.Locale;
        get unicodeLocaleKeys(): Internal.Set<string>;
        get country(): string;
        get displayName(): string;
        get iSOLanguages(): string[];
        get displayVariant(): string;
        get language(): string;
        get displayLanguage(): string;
        get script(): string;
        get iSO3Country(): string;
        get iSOCountries(): string[];
        get unicodeLocaleAttributes(): Internal.Set<string>;
        get default(): Internal.Locale;
        get displayCountry(): string;
        get variant(): string;
        get extensionKeys(): Internal.Set<string>;
        get displayScript(): string;
        get iSO3Language(): string;
        set default(arg0: Internal.Locale);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Locale_ = Locale;
    class MineshaftConfig extends Document.Object implements Internal.IFeatureConfig {
        readonly field_202440_b : Internal.MineshaftStructure$Type;
        static readonly field_236541_a_ : Internal.Codec<Internal.MineshaftConfig>;
        readonly field_202439_a : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MineshaftConfig_ = MineshaftConfig;
    abstract class VoxelShapePart extends Document.Object implements Internal.VSPartAccess {
        func_199625_a(arg0: number, arg1: number, arg2: number, arg3: boolean, arg4: boolean): void;
        func_199624_b(arg0: Internal.Direction$Axis_): number;
        func_199623_a(arg0: Internal.Direction$Axis_): number;
        getYSize(): number;
        func_197836_b(arg0: Internal.Direction$Axis_, arg1: number, arg2: number): number;
        func_197821_d(): number;
        func_197823_b(): number;
        func_197824_a(arg0: Internal.AxisRotation_, arg1: number, arg2: number, arg3: number): boolean;
        func_197835_b(arg0: number, arg1: number, arg2: number): boolean;
        func_197828_a(arg0: Internal.VoxelShapePart$ILineConsumer, arg1: boolean): void;
        func_197818_c(arg0: number, arg1: number, arg2: number): boolean;
        func_197829_b(arg0: Internal.AxisRotation_, arg1: number, arg2: number, arg3: number): boolean;
        func_197819_a(arg0: Internal.Direction$Axis_): number;
        getZSize(): number;
        func_197830_a(): boolean;
        getXSize(): number;
        func_211540_a(arg0: Internal.VoxelShapePart$IFaceConsumer): void;
        func_197820_c(): number;
        func_197831_b(arg0: Internal.VoxelShapePart$ILineConsumer, arg1: boolean): void;
        get zSize(): number;
        get ySize(): number;
        get xSize(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VoxelShapePart_ = VoxelShapePart;
    class ClientEventJS extends Internal.EventJS {
        getWorld(): Internal.ClientWorldJS;
        getPlayer(): Internal.ClientPlayerJS;
        post(id: string): boolean;
        post(id: string, sub: string): boolean;
        getEntity(): Internal.EntityJS;
        get world(): Internal.ClientWorldJS;
        get entity(): Internal.EntityJS;
        get player(): Internal.ClientPlayerJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientEventJS_ = ClientEventJS;
    interface ICrashReportDetail <V> extends java_.util.concurrent.Callable<V> {
    }
    type ICrashReportDetail_<V> = ICrashReportDetail<V>;
    class Subject extends Document.Object implements Internal.Serializable {
        static getSubject(arg0: Internal.AccessControlContext): Internal.Subject;
        static current(): Internal.Subject;
        static doAs<T_>(arg0: Internal.Subject, arg1: (() => T_)): T_;
        static doAs<T_>(arg0: Internal.Subject, arg1: (() => T_)): T_;
        isReadOnly(): boolean;
        getPrivateCredentials<T_>(arg0: Internal.Class_<T_>): Internal.Set<T_>;
        getPrivateCredentials(): Internal.Set<any>;
        hashCode(): number;
        equals(arg0: any): boolean;
        static callAs<T_>(arg0: Internal.Subject, arg1: (() => T_)): T_;
        toString(): string;
        getPrincipals(): Internal.Set<Internal.Principal>;
        getPrincipals<T_>(arg0: Internal.Class_<T_>): Internal.Set<T_>;
        setReadOnly(): void;
        getPublicCredentials<T_>(arg0: Internal.Class_<T_>): Internal.Set<T_>;
        getPublicCredentials(): Internal.Set<any>;
        static doAsPrivileged<T_>(arg0: Internal.Subject, arg1: (() => T_), arg2: Internal.AccessControlContext): T_;
        static doAsPrivileged<T_>(arg0: Internal.Subject, arg1: (() => T_), arg2: Internal.AccessControlContext): T_;
        get privateCredentials(): Internal.Set<any>;
        get readOnly(): boolean;
        get principals(): Internal.Set<Internal.Principal>;
        get publicCredentials(): Internal.Set<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Subject_ = Subject;
    interface BuiltInExceptionProvider {
        readerExpectedBool(): Internal.SimpleCommandExceptionType;
        readerExpectedInt(): Internal.SimpleCommandExceptionType;
        readerExpectedStartOfQuote(): Internal.SimpleCommandExceptionType;
        integerTooLow(): Internal.Dynamic2CommandExceptionType;
        doubleTooHigh(): Internal.Dynamic2CommandExceptionType;
        dispatcherUnknownArgument(): Internal.SimpleCommandExceptionType;
        readerInvalidLong(): Internal.DynamicCommandExceptionType;
        dispatcherUnknownCommand(): Internal.SimpleCommandExceptionType;
        dispatcherParseException(): Internal.DynamicCommandExceptionType;
        longTooLow(): Internal.Dynamic2CommandExceptionType;
        floatTooLow(): Internal.Dynamic2CommandExceptionType;
        readerExpectedDouble(): Internal.SimpleCommandExceptionType;
        readerInvalidInt(): Internal.DynamicCommandExceptionType;
        readerExpectedLong(): Internal.SimpleCommandExceptionType;
        doubleTooLow(): Internal.Dynamic2CommandExceptionType;
        literalIncorrect(): Internal.DynamicCommandExceptionType;
        floatTooHigh(): Internal.Dynamic2CommandExceptionType;
        readerInvalidEscape(): Internal.DynamicCommandExceptionType;
        readerInvalidBool(): Internal.DynamicCommandExceptionType;
        readerInvalidFloat(): Internal.DynamicCommandExceptionType;
        readerExpectedSymbol(): Internal.DynamicCommandExceptionType;
        dispatcherExpectedArgumentSeparator(): Internal.SimpleCommandExceptionType;
        longTooHigh(): Internal.Dynamic2CommandExceptionType;
        readerInvalidDouble(): Internal.DynamicCommandExceptionType;
        integerTooHigh(): Internal.Dynamic2CommandExceptionType;
        readerExpectedEndOfQuote(): Internal.SimpleCommandExceptionType;
        readerExpectedFloat(): Internal.SimpleCommandExceptionType;
    }
    type BuiltInExceptionProvider_ = BuiltInExceptionProvider;
    class ModuleDescriptor$Opens$Modifier extends Internal.Enum<Internal.ModuleDescriptor$Opens$Modifier> {
        static valueOf(arg0: string): Internal.ModuleDescriptor$Opens$Modifier;
        static values(): Internal.ModuleDescriptor$Opens$Modifier[];
        static readonly SYNTHETIC : Internal.ModuleDescriptor$Opens$Modifier;
        static readonly MANDATED : Internal.ModuleDescriptor$Opens$Modifier;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleDescriptor$Opens$Modifier_ = "synthetic" | "mandated" | ModuleDescriptor$Opens$Modifier;
    interface DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
    }
    type DebugRenderer$IDebugRenderer_ = DebugRenderer$IDebugRenderer;
    class RayTraceResultJS extends Document.Object {
        readonly fromEntity : Internal.EntityJS;
        readonly distance : number;
        hitX : number;
        hitY : number;
        hitZ : number;
        facing : Internal.Direction;
        block : Internal.BlockContainerJS;
        readonly type : string;
        entity : Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RayTraceResultJS_ = RayTraceResultJS;
    interface ItemStackKJS extends Internal.AsKJS {
        removeTagKJS(): void;
        asKJS(): any;
    }
    type ItemStackKJS_ = ItemStackKJS;
    class CopyName$Source extends Internal.Enum<Internal.CopyName$Source> {
        static valueOf(arg0: string): Internal.CopyName$Source;
        static values(): Internal.CopyName$Source[];
        static func_216235_a(arg0: string): Internal.CopyName$Source;
        static readonly KILLER_PLAYER : Internal.CopyName$Source;
        readonly field_216236_e : string;
        readonly field_216237_f : Internal.LootParameter<any>;
        static readonly KILLER : Internal.CopyName$Source;
        static readonly BLOCK_ENTITY : Internal.CopyName$Source;
        static readonly THIS : Internal.CopyName$Source;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CopyName$Source_ = "this" | "killer" | "killer_player" | "block_entity" | CopyName$Source;
    class SimplexNoiseGenerator extends Document.Object {
        func_227464_a_(arg0: number, arg1: number, arg2: number): number;
        func_151605_a(arg0: number, arg1: number): number;
        readonly field_151613_c : number;
        readonly field_151612_b : number;
        readonly field_151610_d : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SimplexNoiseGenerator_ = SimplexNoiseGenerator;
    class Property$ValuePair <T> extends Document.Object {
        func_240181_a_(): Internal.Property<T>;
        hashCode(): number;
        equals(arg0: any): boolean;
        func_241493_b_(): T;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Property$ValuePair_<T> = Property$ValuePair<T>;
    class IngredientStackJS extends Document.Object implements Internal.IngredientJS {
        test(stack: Internal.ItemStackJS_): boolean;
        testVanillaItem(item: Internal.Item): boolean;
        getStacks(): Internal.Set<Internal.ItemStackJS>;
        getVanillaItems(): Internal.Set<Internal.Item>;
        isEmpty(): boolean;
        isInvalidRecipeIngredient(): boolean;
        asIngredientStack(): Internal.IngredientStackJS;
        filter(filter: Internal.IngredientJS_): Internal.IngredientJS;
        toJson(): Internal.JsonElement;
        not(): Internal.IngredientJS;
        withCount(count: number): Internal.IngredientJS;
        getIngredient(): Internal.IngredientJS;
        unwrapStackIngredient(): Internal.List<Internal.IngredientJS>;
        getFirst(): Internal.ItemStackJS;
        testVanilla(stack: Internal.ItemStack): boolean;
        toString(): string;
        copy(): Internal.IngredientJS;
        copy(): Internal.Copyable;
        static stackOf(in_: Internal.IngredientJS_): Internal.IngredientStackJS;
        getCount(): number;
        ingredientKey : string;
        ingredient : Internal.IngredientJS;
        countKey : string;
        get invalidRecipeIngredient(): boolean;
        get stacks(): Internal.Set<Internal.ItemStackJS>;
        get count(): number;
        get vanillaItems(): Internal.Set<Internal.Item>;
        get first(): Internal.ItemStackJS;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IngredientStackJS_ = IngredientStackJS;
    class SPlayerPositionLookPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186965_f(): number;
        func_148928_d(): number;
        func_148930_g(): number;
        func_148931_f(): number;
        func_148933_e(): number;
        func_148932_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179834_f(): Internal.Set<Internal.SPlayerPositionLookPacket$Flags>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlayerPositionLookPacket_ = SPlayerPositionLookPacket;
    class DyingPhase extends Internal.Phase {
        func_188660_d(): void;
        func_188659_c(): void;
        func_188657_b(): void;
        func_188652_i(): Internal.PhaseType<Internal.DyingPhase>;
        func_188651_f(): number;
        func_188650_g(): Vec3;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DyingPhase_ = DyingPhase;
    class Constructor <T> extends Internal.Executable {
        getName(): string;
        getParameterCount(): number;
        setAccessible(arg0: boolean): void;
        isVarArgs(): boolean;
        isSynthetic(): boolean;
        getParameterTypes(): Internal.Class<any>[];
        newInstance(arg0: any[]): T;
        getGenericExceptionTypes(): java_.lang.reflect.Type[];
        getAnnotatedReceiverType(): Internal.AnnotatedType;
        getDeclaredAnnotations(): Internal.Annotation[];
        getExceptionTypes(): Internal.Class<any>[];
        getDeclaringClass(): Internal.Class<T>;
        getGenericParameterTypes(): java_.lang.reflect.Type[];
        getAnnotation<T_>(arg0: Internal.Class_<T_>): T_;
        hashCode(): number;
        toGenericString(): string;
        equals(arg0: any): boolean;
        toString(): string;
        getTypeParameters(): any[];
        getModifiers(): number;
        getAnnotatedReturnType(): Internal.AnnotatedType;
        getParameterAnnotations(): Internal.Annotation[][];
        get declaredAnnotations(): Internal.Annotation[];
        get annotatedReturnType(): Internal.AnnotatedType;
        get parameterTypes(): Internal.Class<any>[];
        get parameterCount(): number;
        get modifiers(): number;
        get typeParameters(): any[];
        get varArgs(): boolean;
        get declaringClass(): Internal.Class<T>;
        get synthetic(): boolean;
        get genericParameterTypes(): java_.lang.reflect.Type[];
        get exceptionTypes(): Internal.Class<any>[];
        get name(): string;
        get annotatedReceiverType(): Internal.AnnotatedType;
        get genericExceptionTypes(): java_.lang.reflect.Type[];
        get parameterAnnotations(): Internal.Annotation[][];
        set accessible(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Constructor_<T> = Constructor<T>;
    interface Collector <T, A, R> {
        characteristics(): Internal.Set<Internal.Collector$Characteristics>;
        supplier(): Internal.Supplier<A>;
        finisher(): Internal.Function<A, R>;
        accumulator(): Internal.BiConsumer<A, T>;
        combiner(): Internal.BinaryOperator<A>;
    }
    type Collector_<T, A, R> = Collector<T, A, R>;
    class ShapelessRecipeJS extends Internal.RecipeJS {
        serialize(): void;
        create(args: Internal.ListJS): void;
        deserialize(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShapelessRecipeJS_ = ShapelessRecipeJS;
    interface IDataSerializer <T> {
        func_187159_a(arg0: Internal.PacketBuffer): T;
        func_192717_a(arg0: T): T;
        func_187160_a(arg0: Internal.PacketBuffer, arg1: T): void;
        func_187161_a(arg0: number): Internal.DataParameter<T>;
    }
    type IDataSerializer_<T> = IDataSerializer<T>;
    abstract class Certificate extends Document.Object implements Internal.Serializable {
        getType(): string;
        getEncoded(): number[];
        hashCode(): number;
        equals(arg0: any): boolean;
        verify(arg0: Internal.PublicKey): void;
        verify(arg0: Internal.PublicKey, arg1: string): void;
        verify(arg0: Internal.PublicKey, arg1: Internal.Provider): void;
        toString(): string;
        getPublicKey(): Internal.PublicKey;
        get publicKey(): Internal.PublicKey;
        get type(): string;
        get encoded(): number[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Certificate_ = Certificate;
    interface ValueLayout$OfChar extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfChar;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfChar;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.ValueLayout$OfChar;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfChar;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfChar_ = ValueLayout$OfChar;
    abstract class GuiScreenEvent$MouseReleasedEvent extends Internal.GuiScreenEvent$MouseInputEvent {
        getButton(): number;
        getListenerList(): Internal.ListenerList;
        get button(): number;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$MouseReleasedEvent_ = GuiScreenEvent$MouseReleasedEvent;
    interface ShortIterator extends Internal.Iterator<number> {
        next(): number;
        next(): any;
        nextShort(): number;
        skip(arg0: number): number;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
    }
    type ShortIterator_ = ShortIterator;
    interface IScreen {
        func_231023_e_(): void;
    }
    type IScreen_ = (() => void) | IScreen;
    class WandererTradesEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getGenericTrades(): Internal.List<Internal.VillagerTrades$ITrade>;
        getRareTrades(): Internal.List<Internal.VillagerTrades$ITrade>;
        get genericTrades(): Internal.List<Internal.VillagerTrades$ITrade>;
        get listenerList(): Internal.ListenerList;
        get rareTrades(): Internal.List<Internal.VillagerTrades$ITrade>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WandererTradesEvent_ = WandererTradesEvent;
    abstract class RecipeBookContainer <C> extends Internal.Container {
        func_201771_a(arg0: Internal.RecipeItemHelper): void;
        func_203721_h(): number;
        func_201772_h(): number;
        func_201770_g(): number;
        getRecipeBookCategories(): Internal.List<Internal.RecipeBookCategories>;
        func_241850_m(): Internal.RecipeBookCategory;
        func_201769_a(arg0: Internal.IRecipe<C>): boolean;
        func_201767_f(): number;
        func_201768_e(): void;
        func_217056_a(arg0: boolean, arg1: Internal.IRecipe<any>, arg2: Internal.ServerPlayerEntity): void;
        get recipeBookCategories(): Internal.List<Internal.RecipeBookCategories>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecipeBookContainer_<C> = RecipeBookContainer<C>;
    class JsonObject extends Internal.JsonElement {
        add(arg0: string, arg1: Internal.JsonElement): void;
        getAsJsonObject(arg0: string): Internal.JsonObject;
        size(): number;
        getAsJsonArray(arg0: string): Internal.JsonArray;
        entrySet(): Internal.Set<Internal.Map$Entry<string, Internal.JsonElement>>;
        hashCode(): number;
        getAsJsonPrimitive(arg0: string): Internal.JsonPrimitive;
        equals(arg0: any): boolean;
        get(arg0: string): Internal.JsonElement;
        has(arg0: string): boolean;
        addProperty(arg0: string, arg1: string): void;
        addProperty(arg0: string, arg1: string): void;
        addProperty(arg0: string, arg1: Internal.Number): void;
        addProperty(arg0: string, arg1: boolean): void;
        remove(arg0: string): Internal.JsonElement;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JsonObject_ = JsonObject;
    interface IntToDoubleFunction {
        applyAsDouble(arg0: number): number;
    }
    type IntToDoubleFunction_ = ((arg0: number) => number) | IntToDoubleFunction;
    class SoundType extends Document.Object {
        func_185845_c(): Internal.SoundEvent;
        func_185844_d(): Internal.SoundEvent;
        func_185847_b(): number;
        func_185842_g(): Internal.SoundEvent;
        func_185841_e(): Internal.SoundEvent;
        func_185846_f(): Internal.SoundEvent;
        func_185843_a(): number;
        static readonly field_235593_O_ : Internal.SoundType;
        static readonly field_222475_v : Internal.SoundType;
        static readonly field_235594_P_ : Internal.SoundType;
        static readonly field_235595_Q_ : Internal.SoundType;
        static readonly field_222473_t : Internal.SoundType;
        static readonly field_222471_r : Internal.SoundType;
        static readonly field_185849_b : Internal.SoundType;
        readonly field_185860_m : number;
        static readonly field_235599_U_ : Internal.SoundType;
        static readonly field_235598_T_ : Internal.SoundType;
        static readonly field_235597_S_ : Internal.SoundType;
        static readonly field_185859_l : Internal.SoundType;
        static readonly field_235590_L_ : Internal.SoundType;
        static readonly field_235596_R_ : Internal.SoundType;
        static readonly field_235591_M_ : Internal.SoundType;
        static readonly field_235592_N_ : Internal.SoundType;
        static readonly field_235579_A_ : Internal.SoundType;
        static readonly field_185856_i : Internal.SoundType;
        static readonly field_222468_o : Internal.SoundType;
        static readonly field_211383_n : Internal.SoundType;
        static readonly field_185858_k : Internal.SoundType;
        static readonly field_185852_e : Internal.SoundType;
        static readonly field_185854_g : Internal.SoundType;
        static readonly field_185850_c : Internal.SoundType;
        static readonly field_235601_w_ : Internal.SoundType;
        readonly field_185861_n : number;
        static readonly field_222474_u : Internal.SoundType;
        static readonly field_222472_s : Internal.SoundType;
        static readonly field_222470_q : Internal.SoundType;
        static readonly field_235588_J_ : Internal.SoundType;
        static readonly field_185848_a : Internal.SoundType;
        static readonly field_235589_K_ : Internal.SoundType;
        static readonly field_235600_d_ : Internal.SoundType;
        static readonly field_235586_H_ : Internal.SoundType;
        static readonly field_235587_I_ : Internal.SoundType;
        static readonly field_235585_G_ : Internal.SoundType;
        static readonly field_235584_F_ : Internal.SoundType;
        static readonly field_235583_E_ : Internal.SoundType;
        static readonly field_235582_D_ : Internal.SoundType;
        static readonly field_185855_h : Internal.SoundType;
        static readonly field_235580_B_ : Internal.SoundType;
        static readonly field_235581_C_ : Internal.SoundType;
        static readonly field_185857_j : Internal.SoundType;
        static readonly field_226947_m_ : Internal.SoundType;
        static readonly field_222469_p : Internal.SoundType;
        static readonly field_185851_d : Internal.SoundType;
        static readonly field_185853_f : Internal.SoundType;
        static readonly field_211382_m : Internal.SoundType;
        static readonly field_235602_z_ : Internal.SoundType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SoundType_ = SoundType;
    interface GameVersion {
        getProtocolVersion(): number;
        getName(): string;
        getReleaseTarget(): string;
        getPackVersion(): number;
        getBuildTime(): Internal.Date;
        getId(): string;
        getWorldVersion(): number;
        isStable(): boolean;
    }
    type GameVersion_ = GameVersion;
    interface IGuiContainerHandler <T> {
        getGuiClickableAreas(arg0: T, arg1: number, arg2: number): Internal.Collection<Internal.IGuiClickableArea>;
        getGuiExtraAreas(arg0: T): Internal.List<Internal.Rectangle2d>;
        getIngredientUnderMouse(arg0: T, arg1: number, arg2: number): any;
    }
    type IGuiContainerHandler_<T> = IGuiContainerHandler<T>;
    interface Comparable <T> {
        compareTo(arg0: T): number;
    }
    type Comparable_<T> = Comparable<T>;
    interface IContainerFactory <T> extends Internal.ContainerType$IFactory<T> {
        create(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PacketBuffer): T;
        create(arg0: number, arg1: Internal.PlayerInventory): T;
    }
    type IContainerFactory_<T> = IContainerFactory<T>;
    class SurfaceBuilderConfig extends Document.Object implements Internal.ISurfaceBuilderConfig {
        func_204108_a(): Internal.BlockState;
        func_204109_b(): Internal.BlockState;
        func_204110_c(): Internal.BlockState;
        static readonly field_237203_a_ : Internal.Codec<Internal.SurfaceBuilderConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SurfaceBuilderConfig_ = SurfaceBuilderConfig;
    interface FluidIngredient$IFluidList {
        serialize(): Internal.JsonObject;
        getFluids(): Internal.Collection<net.minecraftforge.fluids.FluidStack>;
    }
    type FluidIngredient$IFluidList_ = FluidIngredient$IFluidList;
    class EntityJoinWorldEvent extends Internal.EntityEvent {
        getWorld(): Internal.World;
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get world(): Internal.World;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityJoinWorldEvent_ = EntityJoinWorldEvent;
    interface LongBinaryOperator {
        applyAsLong(arg0: number, arg1: number): number;
    }
    type LongBinaryOperator_ = ((arg0: number, arg1: number) => number) | LongBinaryOperator;
    class SkullTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity {
        static func_174884_b(arg0: Internal.GameProfile): Internal.GameProfile;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_189517_E_(): Internal.CompoundNBT;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_73660_a(): void;
        func_195485_a(arg0: Internal.GameProfile): void;
        func_184295_a(arg0: number): number;
        func_152108_a(): Internal.GameProfile;
        static func_184294_a(arg0: Internal.MinecraftSessionService): void;
        static func_184293_a(arg0: Internal.PlayerProfileCache): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SkullTileEntity_ = SkullTileEntity;
    class NonNullList <E> extends Internal.AbstractList<E> {
        add(arg0: number, arg1: E): void;
        static func_193580_a<E_>(arg0: E_, arg1: E_[]): Internal.NonNullList<E_>;
        set(arg0: number, arg1: E): E;
        size(): number;
        get(arg0: number): E;
        clear(): void;
        remove(arg0: number): E;
        static func_191197_a<E_>(arg0: number, arg1: E_): Internal.NonNullList<E_>;
        static func_191196_a<E_>(): Internal.NonNullList<E_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NonNullList_<E> = NonNullList<E>;
    class EntityRendererManager extends Document.Object {
        func_229099_b_(arg0: Internal.Entity): number;
        getSkinMap(): Internal.Map<string, Internal.PlayerRenderer>;
        func_229098_b_(): Internal.Quaternion;
        func_78717_a(arg0: Internal.World): void;
        func_78716_a(): Internal.FontRenderer;
        func_178634_b(): boolean;
        validateRendererExistence(): void;
        func_178633_a(arg0: boolean): void;
        func_78714_a(arg0: number, arg1: number, arg2: number): number;
        func_178629_b(arg0: boolean): void;
        func_229088_a_(arg0: Internal.World, arg1: Internal.ActiveRenderInfo, arg2: Internal.Entity): void;
        func_229085_a_<E_>(arg0: E_, arg1: number): number;
        func_229089_a_(arg0: Internal.Quaternion): void;
        func_229084_a_<E_>(arg0: E_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.MatrixStack, arg7: Internal.IRenderTypeBuffer, arg8: number): void;
        func_229086_a_<E_>(arg0: E_, arg1: Internal.ClippingHelper, arg2: number, arg3: number, arg4: number): boolean;
        func_229087_a_<T_>(arg0: Internal.EntityType<T_>, arg1: Internal.EntityRenderer<T_>): void;
        func_78713_a<T_>(arg0: T_): Internal.EntityRenderer<T_>;
        field_147941_i : Internal.Entity;
        readonly field_178637_m : Internal.PlayerRenderer;
        field_217783_c : Internal.ActiveRenderInfo;
        readonly field_78733_k : Internal.GameSettings;
        readonly field_78724_e : Internal.TextureManager;
        field_78729_o : Internal.Map<Internal.EntityType<any>, Internal.EntityRenderer<any>>;
        get skinMap(): Internal.Map<string, Internal.PlayerRenderer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityRendererManager_ = EntityRendererManager;
    interface JsonSerializable {
        toJson(): Internal.JsonElement;
    }
    type JsonSerializable_ = JsonSerializable;
    interface BlockColorSettings <T> {
        useSmoothColorBlending(arg0: Internal.IBlockDisplayReader, arg1: T, arg2: BlockPos): boolean;
    }
    type BlockColorSettings_<T> = BlockColorSettings<T>;
    interface GenericDeclaration extends Internal.AnnotatedElement {
        getTypeParameters(): any[];
    }
    type GenericDeclaration_ = GenericDeclaration;
    abstract class ShortBuffer extends Internal.Buffer implements Internal.Comparable<Internal.ShortBuffer> {
        hasArray(): boolean;
        compact(): Internal.ShortBuffer;
        clear(): Internal.ShortBuffer;
        clear(): Internal.Buffer;
        duplicate(): Internal.ShortBuffer;
        duplicate(): Internal.Buffer;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.ShortBuffer): number;
        asReadOnlyBuffer(): Internal.ShortBuffer;
        put(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ShortBuffer;
        put(arg0: number, arg1: number[]): Internal.ShortBuffer;
        put(arg0: number, arg1: Internal.ShortBuffer, arg2: number, arg3: number): Internal.ShortBuffer;
        put(arg0: number[]): Internal.ShortBuffer;
        put(arg0: Internal.ShortBuffer): Internal.ShortBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.ShortBuffer;
        put(arg0: number): Internal.ShortBuffer;
        put(arg0: number, arg1: number): Internal.ShortBuffer;
        static allocate(arg0: number): Internal.ShortBuffer;
        rewind(): Internal.ShortBuffer;
        rewind(): Internal.Buffer;
        slice(): Internal.ShortBuffer;
        slice(): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.ShortBuffer;
        array(): number[];
        array(): any;
        hashCode(): number;
        mismatch(arg0: Internal.ShortBuffer): number;
        equals(arg0: any): boolean;
        get(arg0: number, arg1: number[]): Internal.ShortBuffer;
        get(arg0: number): number;
        get(arg0: number[], arg1: number, arg2: number): Internal.ShortBuffer;
        get(arg0: number[]): Internal.ShortBuffer;
        get(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ShortBuffer;
        get(): number;
        limit(arg0: number): Internal.Buffer;
        limit(arg0: number): Internal.ShortBuffer;
        arrayOffset(): number;
        reset(): Internal.Buffer;
        reset(): Internal.ShortBuffer;
        toString(): string;
        position(arg0: number): Internal.ShortBuffer;
        position(arg0: number): Internal.Buffer;
        flip(): Internal.Buffer;
        flip(): Internal.ShortBuffer;
        isDirect(): boolean;
        static wrap(arg0: number[], arg1: number, arg2: number): Internal.ShortBuffer;
        static wrap(arg0: number[]): Internal.ShortBuffer;
        mark(): Internal.ShortBuffer;
        mark(): Internal.Buffer;
        order(): Internal.ByteOrder;
        get direct(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShortBuffer_ = ShortBuffer;
    class VariantBlockStateGenerator$Model extends Document.Object {
        toJson(): Internal.JsonObject;
        uvlock(): Internal.VariantBlockStateGenerator$Model;
        x(_x: number): Internal.VariantBlockStateGenerator$Model;
        y(_y: number): Internal.VariantBlockStateGenerator$Model;
        model(s: string): Internal.VariantBlockStateGenerator$Model;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VariantBlockStateGenerator$Model_ = VariantBlockStateGenerator$Model;
    class OnDatapackSyncEvent extends net.minecraftforge.eventbus.api.Event {
        getPlayer(): Internal.ServerPlayerEntity;
        getListenerList(): Internal.ListenerList;
        getPlayerList(): Internal.PlayerList;
        get listenerList(): Internal.ListenerList;
        get playerList(): Internal.PlayerList;
        get player(): Internal.ServerPlayerEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OnDatapackSyncEvent_ = OnDatapackSyncEvent;
    class HopperMinecartEntity extends Internal.ContainerMinecartEntity implements Internal.IHopper {
        func_213968_a(arg0: number, arg1: Internal.PlayerInventory): Internal.Container;
        func_145831_w(): Internal.World;
        func_96108_aC(): number;
        func_70071_h_(): void;
        func_96110_f(arg0: boolean): void;
        func_94085_r(): number;
        func_96111_ay(): boolean;
        func_98042_n(arg0: number): void;
        func_70302_i_(): number;
        func_180457_u(): Internal.BlockState;
        func_184264_v(): Internal.AbstractMinecartEntity$Type;
        func_96109_aB(): number;
        func_96112_aD(): boolean;
        func_94095_a(arg0: Internal.DamageSource): void;
        func_96107_aA(): number;
        func_96095_a(arg0: number, arg1: number, arg2: number, arg3: boolean): void;
        func_98043_aE(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HopperMinecartEntity_ = HopperMinecartEntity;
    class ShulkerBoxColoringRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShulkerBoxColoringRecipe_ = ShulkerBoxColoringRecipe;
    interface ICommonAccessor {
        getServerData(): Internal.CompoundNBT;
        getRenderingPosition(): Vec3;
        getBlock(): Internal.Block;
        getWorld(): Internal.World;
        getPlayer(): Internal.PlayerEntity;
        getPosition(): BlockPos;
        getBlockId(): ResourceLocation;
        getTileEntity(): Internal.TileEntity;
        getSide(): Internal.Direction;
        getStack(): Internal.ItemStack;
        getEntity(): Internal.Entity;
        getPartialFrame(): number;
    }
    type ICommonAccessor_ = ICommonAccessor;
    class RenderGameOverlayEvent$Chat extends Internal.RenderGameOverlayEvent$Pre {
        getListenerList(): Internal.ListenerList;
        setPosX(arg0: number): void;
        setPosY(arg0: number): void;
        getPosX(): number;
        getPosY(): number;
        get posX(): number;
        get posY(): number;
        get listenerList(): Internal.ListenerList;
        set posX(arg0: number);
        set posY(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderGameOverlayEvent$Chat_ = RenderGameOverlayEvent$Chat;
    class WorldEvent extends net.minecraftforge.eventbus.api.Event implements Internal.EventHandlerImplCommon$WorldEventAttachment {
        getWorld(): Internal.IWorld;
        getListenerList(): Internal.ListenerList;
        architectury$getAttachedLevel(): Internal.IWorld;
        architectury$attachLevel(level: Internal.IWorld): void;
        get world(): Internal.IWorld;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldEvent_ = WorldEvent;
    class EntityViewRenderEvent$FogEvent extends Internal.EntityViewRenderEvent {
        getListenerList(): Internal.ListenerList;
        getType(): Internal.FogRenderer$FogType;
        get listenerList(): Internal.ListenerList;
        get type(): Internal.FogRenderer$FogType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityViewRenderEvent$FogEvent_ = EntityViewRenderEvent$FogEvent;
    class HotbarSnapshot extends Internal.ForwardingList<Internal.ItemStack> {
        isEmpty(): boolean;
        func_192833_a(arg0: Internal.ListNBT): void;
        func_192834_a(): Internal.ListNBT;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HotbarSnapshot_ = HotbarSnapshot;
    class CMoveVehiclePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_187003_c(): number;
        func_187002_b(): number;
        func_187004_a(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_187005_e(): number;
        func_187006_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CMoveVehiclePacket_ = CMoveVehiclePacket;
    class ClickEvent extends Document.Object {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        func_150668_b(): string;
        func_150669_a(): Internal.ClickEvent$Action;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClickEvent_ = ClickEvent;
    class AmbientOcclusionStatus extends Internal.Enum<Internal.AmbientOcclusionStatus> {
        func_216569_b(): string;
        static valueOf(arg0: string): Internal.AmbientOcclusionStatus;
        static values(): Internal.AmbientOcclusionStatus[];
        static func_216570_a(arg0: number): Internal.AmbientOcclusionStatus;
        func_216572_a(): number;
        static readonly MIN : Internal.AmbientOcclusionStatus;
        static readonly MAX : Internal.AmbientOcclusionStatus;
        static readonly OFF : Internal.AmbientOcclusionStatus;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AmbientOcclusionStatus_ = "off" | "min" | "max" | AmbientOcclusionStatus;
    class DataResult <R> extends Document.Object implements Internal.App<Internal.DataResult$Mu, R> {
        apply2<R2_, S_>(arg0: ((arg0: R, arg1: R2_) => S_), arg1: Internal.DataResult<R2_>): Internal.DataResult<S_>;
        apply3<R2_, R3_, S_>(arg0: Internal.Function3<R, R2_, R3_, S_>, arg1: Internal.DataResult<R2_>, arg2: Internal.DataResult<R3_>): Internal.DataResult<S_>;
        static instance(): Internal.DataResult$Instance;
        setPartial(arg0: (() => R)): Internal.DataResult<R>;
        setPartial(arg0: R): Internal.DataResult<R>;
        addLifecycle(arg0: Internal.Lifecycle): Internal.DataResult<R>;
        static partialGet<K_, V_>(arg0: ((arg0: K_) => V_), arg1: (() => string)): Internal.Function<K_, Internal.DataResult<V_>>;
        error(): Internal.Optional<Internal.DataResult$PartialResult<R>>;
        static error<R_>(arg0: string, arg1: R_): Internal.DataResult<R_>;
        static error<R_>(arg0: string): Internal.DataResult<R_>;
        static error<R_>(arg0: string, arg1: R_, arg2: Internal.Lifecycle): Internal.DataResult<R_>;
        static error<R_>(arg0: string, arg1: Internal.Lifecycle): Internal.DataResult<R_>;
        apply2stable<R2_, S_>(arg0: ((arg0: R, arg1: R2_) => S_), arg1: Internal.DataResult<R2_>): Internal.DataResult<S_>;
        ap<R2_>(arg0: Internal.DataResult<((arg0: R) => R2_)>): Internal.DataResult<R2_>;
        promotePartial(arg0: ((arg0: string) => void)): Internal.DataResult<R>;
        flatMap<R2_>(arg0: ((arg0: R) => Internal.DataResult<R2_>)): Internal.DataResult<R2_>;
        result(): Internal.Optional<R>;
        lifecycle(): Internal.Lifecycle;
        mapError(arg0: Internal.UnaryOperator<string>): Internal.DataResult<R>;
        setLifecycle(arg0: Internal.Lifecycle): Internal.DataResult<R>;
        static success<R_>(arg0: R_): Internal.DataResult<R_>;
        static success<R_>(arg0: R_, arg1: Internal.Lifecycle): Internal.DataResult<R_>;
        static unbox<R_>(arg0: Internal.App<Internal.DataResult$Mu, R_>): Internal.DataResult<R_>;
        hashCode(): number;
        equals(arg0: any): boolean;
        get(): Internal.Either<R, Internal.DataResult$PartialResult<R>>;
        getOrThrow(arg0: boolean, arg1: ((arg0: string) => void)): R;
        toString(): string;
        map<T_>(arg0: ((arg0: R) => T_)): Internal.DataResult<T_>;
        resultOrPartial(arg0: ((arg0: string) => void)): Internal.Optional<R>;
        set partial(arg0: (() => R));
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DataResult_<R> = DataResult<R>;
    class RenderType$State$Builder extends Document.Object {
        func_228714_a_(arg0: Internal.RenderState$CullState): Internal.RenderType$State$Builder;
        func_228713_a_(arg0: Internal.RenderState$AlphaState): Internal.RenderType$State$Builder;
        func_228720_a_(arg0: Internal.RenderState$LineState): Internal.RenderType$State$Builder;
        func_228721_a_(arg0: Internal.RenderState$TargetState): Internal.RenderType$State$Builder;
        func_228727_a_(arg0: Internal.RenderState$WriteMaskState): Internal.RenderType$State$Builder;
        func_230173_a_(arg0: Internal.RenderType$OutlineState_): Internal.RenderType$State;
        func_228726_a_(arg0: Internal.RenderState$TransparencyState): Internal.RenderType$State$Builder;
        func_228728_a_(arg0: boolean): Internal.RenderType$State;
        func_228724_a_(arg0: Internal.RenderState$TextureState): Internal.RenderType$State$Builder;
        func_228725_a_(arg0: Internal.RenderState$TexturingState): Internal.RenderType$State$Builder;
        func_228723_a_(arg0: Internal.RenderState$ShadeModelState): Internal.RenderType$State$Builder;
        func_228722_a_(arg0: Internal.RenderState$OverlayState): Internal.RenderType$State$Builder;
        func_228718_a_(arg0: Internal.RenderState$LayerState): Internal.RenderType$State$Builder;
        func_228717_a_(arg0: Internal.RenderState$FogState): Internal.RenderType$State$Builder;
        func_228715_a_(arg0: Internal.RenderState$DepthTestState): Internal.RenderType$State$Builder;
        func_228716_a_(arg0: Internal.RenderState$DiffuseLightingState): Internal.RenderType$State$Builder;
        func_228719_a_(arg0: Internal.RenderState$LightmapState): Internal.RenderType$State$Builder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderType$State$Builder_ = RenderType$State$Builder;
    class ChunkRenderData$Builder extends Document.Object {
        addSprite(sprite: Internal.TextureAtlasSprite): void;
        setMesh(pass: Internal.BlockRenderPass_, data: Internal.ChunkMeshData): void;
        addBlockEntity(entity: Internal.TileEntity, cull: boolean): void;
        build(): Internal.ChunkRenderData;
        removeBlockEntitiesIf(removePredicate: ((arg0: Internal.TileEntity) => boolean)): void;
        setBounds(bounds: Internal.ChunkRenderBounds): void;
        setOcclusionData(data: Internal.SetVisibility): void;
        set occlusionData(data: Internal.SetVisibility);
        set bounds(bounds: Internal.ChunkRenderBounds);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkRenderData$Builder_ = ChunkRenderData$Builder;
    class PacketBuffer extends Internal.ByteBuf implements Internal.IForgePacketBuffer {
        asReadOnly(): Internal.ByteBuf;
        markReaderIndex(): Internal.ByteBuf;
        getByte(arg0: number): number;
        writeItemStack(arg0: Internal.ItemStack, arg1: boolean): Internal.PacketBuffer;
        release(): boolean;
        release(arg0: number): boolean;
        func_179258_d(): Internal.ITextComponent;
        func_150793_b(): Internal.CompoundNBT;
        writeZero(arg0: number): Internal.ByteBuf;
        writeFloat(arg0: number): Internal.ByteBuf;
        resetReaderIndex(): Internal.ByteBuf;
        setLongLE(arg0: number, arg1: number): Internal.ByteBuf;
        readRetainedSlice(arg0: number): Internal.ByteBuf;
        slice(): Internal.ByteBuf;
        slice(arg0: number, arg1: number): Internal.ByteBuf;
        getMediumLE(arg0: number): number;
        readUnsignedIntLE(): number;
        readInt(): number;
        func_240629_a_<T_>(arg0: Internal.Codec<T_>, arg1: T_): void;
        order(): Internal.ByteOrder;
        order(arg0: Internal.ByteOrder): Internal.ByteBuf;
        func_218668_a(arg0: Internal.BlockRayTraceResult): void;
        writeMedium(arg0: number): Internal.ByteBuf;
        resetWriterIndex(): Internal.ByteBuf;
        writableBytes(): number;
        func_189425_b(arg0: number): number[];
        func_150789_c(arg0: number): string;
        getUnsignedShort(arg0: number): number;
        maxCapacity(): number;
        func_192572_a(arg0: ResourceLocation_): Internal.PacketBuffer;
        nioBufferCount(): number;
        bytesBefore(arg0: number, arg1: number): number;
        bytesBefore(arg0: number): number;
        bytesBefore(arg0: number, arg1: number, arg2: number): number;
        func_218669_q(): Internal.BlockRayTraceResult;
        setInt(arg0: number, arg1: number): Internal.ByteBuf;
        getInt(arg0: number): number;
        func_179250_a(arg0: number[]): Internal.PacketBuffer;
        markWriterIndex(): Internal.ByteBuf;
        isReadable(arg0: number): boolean;
        isReadable(): boolean;
        func_180714_a(arg0: string): Internal.PacketBuffer;
        writeBoolean(arg0: boolean): Internal.ByteBuf;
        func_179254_b(arg0: number): Internal.PacketBuffer;
        setIntLE(arg0: number, arg1: number): Internal.ByteBuf;
        func_179253_g(): Internal.UUID;
        func_186875_a(arg0: number[]): Internal.PacketBuffer;
        writeLongLE(arg0: number): Internal.ByteBuf;
        setShortLE(arg0: number, arg1: number): Internal.ByteBuf;
        retain(): Internal.ReferenceCounted;
        retain(): Internal.ByteBuf;
        retain(arg0: number): Internal.ReferenceCounted;
        retain(arg0: number): Internal.ByteBuf;
        isWritable(): boolean;
        isWritable(arg0: number): boolean;
        readChar(): string;
        capacity(arg0: number): Internal.ByteBuf;
        capacity(): number;
        hasMemoryAddress(): boolean;
        readCharSequence(arg0: number, arg1: Internal.Charset): Internal.CharSequence;
        isReadOnly(): boolean;
        readDouble(): number;
        readUnsignedShortLE(): number;
        readFloat(): number;
        getLongLE(arg0: number): number;
        getBoolean(arg0: number): boolean;
        copy(): Internal.ByteBuf;
        copy(arg0: number, arg1: number): Internal.ByteBuf;
        readShortLE(): number;
        readUnsignedMedium(): number;
        func_179260_f(): number;
        writeInt(arg0: number): Internal.ByteBuf;
        ensureWritable(arg0: number, arg1: boolean): number;
        ensureWritable(arg0: number): Internal.ByteBuf;
        hasArray(): boolean;
        memoryAddress(): number;
        func_186863_b(): number[];
        func_150786_a(arg0: Internal.CompoundNBT): Internal.PacketBuffer;
        func_189424_c(arg0: number): number[];
        readableBytes(): number;
        readSlice(arg0: number): Internal.ByteBuf;
        getIntLE(arg0: number): number;
        nioBuffers(): Internal.ByteBuffer[];
        nioBuffers(arg0: number, arg1: number): Internal.ByteBuffer[];
        forEachByteDesc(arg0: Internal.ByteProcessor): number;
        forEachByteDesc(arg0: number, arg1: number, arg2: Internal.ByteProcessor): number;
        skipBytes(arg0: number): Internal.ByteBuf;
        getLong(arg0: number): number;
        readLong(): number;
        readShort(): number;
        equals(arg0: any): boolean;
        func_192575_l(): ResourceLocation;
        readBytes(arg0: Internal.OutputStream, arg1: number): Internal.ByteBuf;
        readBytes(arg0: Internal.GatheringByteChannel, arg1: number): number;
        readBytes(arg0: Internal.FileChannel, arg1: number, arg2: number): number;
        readBytes(arg0: number[], arg1: number, arg2: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf): Internal.ByteBuf;
        readBytes(arg0: number): Internal.ByteBuf;
        readBytes(arg0: number[]): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuffer): Internal.ByteBuf;
        setZero(arg0: number, arg1: number): Internal.ByteBuf;
        getUnsignedMedium(arg0: number): number;
        readBoolean(): boolean;
        toString(arg0: number, arg1: number, arg2: Internal.Charset): string;
        toString(): string;
        toString(arg0: Internal.Charset): string;
        func_179257_a<T_>(arg0: Internal.Class_<T_>): T_;
        retainedSlice(arg0: number, arg1: number): Internal.ByteBuf;
        retainedSlice(): Internal.ByteBuf;
        readMediumLE(): number;
        isDirect(): boolean;
        setMedium(arg0: number, arg1: number): Internal.ByteBuf;
        setBoolean(arg0: number, arg1: boolean): Internal.ByteBuf;
        readerIndex(): number;
        readerIndex(arg0: number): Internal.ByteBuf;
        func_150791_c(): Internal.ItemStack;
        setShort(arg0: number, arg1: number): Internal.ByteBuf;
        compareTo(arg0: Internal.ByteBuf): number;
        compareTo(arg0: any): number;
        getCharSequence(arg0: number, arg1: number, arg2: Internal.Charset): Internal.CharSequence;
        func_211400_a(arg0: string, arg1: number): Internal.PacketBuffer;
        getBytes(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: number[]): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.GatheringByteChannel, arg2: number): number;
        getBytes(arg0: number, arg1: Internal.ByteBuffer): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.FileChannel, arg2: number, arg3: number): number;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number, arg3: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.OutputStream, arg2: number): Internal.ByteBuf;
        unwrap(): Internal.ByteBuf;
        setDouble(arg0: number, arg1: number): Internal.ByteBuf;
        setChar(arg0: number, arg1: number): Internal.ByteBuf;
        refCnt(): number;
        func_244272_a(arg0: Internal.NBTSizeTracker): Internal.CompoundNBT;
        getUnsignedIntLE(arg0: number): number;
        getUnsignedInt(arg0: number): number;
        indexOf(arg0: number, arg1: number, arg2: number): number;
        writeByte(arg0: number): Internal.ByteBuf;
        func_218667_g(): Internal.SectionPos;
        func_179249_a(arg0: Internal.Enum<any>): Internal.PacketBuffer;
        nioBuffer(arg0: number, arg1: number): Internal.ByteBuffer;
        nioBuffer(): Internal.ByteBuffer;
        func_189423_a(arg0: number[], arg1: number): number[];
        touch(): Internal.ByteBuf;
        touch(): Internal.ReferenceCounted;
        touch(arg0: any): Internal.ReferenceCounted;
        touch(arg0: any): Internal.ByteBuf;
        discardSomeReadBytes(): Internal.ByteBuf;
        duplicate(): Internal.ByteBuf;
        func_150787_b(arg0: number): Internal.PacketBuffer;
        writerIndex(arg0: number): Internal.ByteBuf;
        writerIndex(): number;
        func_192574_a(arg0: Internal.Date): Internal.PacketBuffer;
        writeCharSequence(arg0: Internal.CharSequence, arg1: Internal.Charset): number;
        readUnsignedInt(): number;
        getUnsignedShortLE(arg0: number): number;
        getChar(arg0: number): string;
        retainedDuplicate(): Internal.ByteBuf;
        setLong(arg0: number, arg1: number): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuffer): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf): Internal.ByteBuf;
        writeBytes(arg0: Internal.FileChannel, arg1: number, arg2: number): number;
        writeBytes(arg0: Internal.InputStream, arg1: number): number;
        writeBytes(arg0: Internal.ScatteringByteChannel, arg1: number): number;
        writeBytes(arg0: number[]): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf, arg1: number): Internal.ByteBuf;
        writeBytes(arg0: number[], arg1: number, arg2: number): Internal.ByteBuf;
        readMedium(): number;
        forEachByte(arg0: Internal.ByteProcessor): number;
        forEachByte(arg0: number, arg1: number, arg2: Internal.ByteProcessor): number;
        setIndex(arg0: number, arg1: number): Internal.ByteBuf;
        writeShort(arg0: number): Internal.ByteBuf;
        func_240628_a_<T_>(arg0: Internal.Codec<T_>): T_;
        func_179252_a(arg0: Internal.UUID): Internal.PacketBuffer;
        static func_150790_a(arg0: number): number;
        getShortLE(arg0: number): number;
        alloc(): Internal.ByteBufAllocator;
        readUnsignedShort(): number;
        getMedium(arg0: number): number;
        func_179256_a(arg0: Internal.ITextComponent_): Internal.PacketBuffer;
        setByte(arg0: number, arg1: number): Internal.ByteBuf;
        func_186873_b(arg0: number[]): number[];
        writeShortLE(arg0: number): Internal.ByteBuf;
        maxWritableBytes(): number;
        func_150792_a(): number;
        func_179259_c(): BlockPos;
        getDouble(arg0: number): number;
        getFloat(arg0: number): number;
        writeLong(arg0: number): Internal.ByteBuf;
        writeIntLE(arg0: number): Internal.ByteBuf;
        array(): number[];
        hashCode(): number;
        setCharSequence(arg0: number, arg1: Internal.CharSequence, arg2: Internal.Charset): number;
        internalNioBuffer(arg0: number, arg1: number): Internal.ByteBuffer;
        arrayOffset(): number;
        readIntLE(): number;
        setMediumLE(arg0: number, arg1: number): Internal.ByteBuf;
        readUnsignedByte(): number;
        readLongLE(): number;
        readUnsignedMediumLE(): number;
        writeDouble(arg0: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.InputStream, arg2: number): number;
        setBytes(arg0: number, arg1: Internal.ByteBuffer): Internal.ByteBuf;
        setBytes(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ScatteringByteChannel, arg2: number): number;
        setBytes(arg0: number, arg1: Internal.FileChannel, arg2: number, arg3: number): number;
        setBytes(arg0: number, arg1: Internal.ByteBuf): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number, arg3: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: number[]): Internal.ByteBuf;
        setFloat(arg0: number, arg1: number): Internal.ByteBuf;
        func_218666_n(): string;
        getShort(arg0: number): number;
        func_186865_a(arg0: number[]): Internal.PacketBuffer;
        writeMediumLE(arg0: number): Internal.ByteBuf;
        clear(): Internal.ByteBuf;
        getUnsignedByte(arg0: number): number;
        func_150788_a(arg0: Internal.ItemStack): Internal.PacketBuffer;
        discardReadBytes(): Internal.ByteBuf;
        func_244273_m(): Internal.CompoundNBT;
        writeChar(arg0: number): Internal.ByteBuf;
        getUnsignedMediumLE(arg0: number): number;
        func_192573_m(): Internal.Date;
        func_179251_a(): number[];
        readByte(): number;
        func_179255_a(arg0: BlockPos): Internal.PacketBuffer;
        get readable(): boolean;
        get direct(): boolean;
        get readOnly(): boolean;
        get writable(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PacketBuffer_ = PacketBuffer;
    class ShulkerBulletEntity extends Internal.ProjectileEntity {
        func_213297_N(): Internal.IPacket<any>;
        func_70027_ad(): boolean;
        func_70067_L(): boolean;
        func_70071_h_(): void;
        func_70112_a(arg0: number): boolean;
        func_70623_bb(): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_184176_by(): Internal.SoundCategory;
        func_70013_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShulkerBulletEntity_ = ShulkerBulletEntity;
    class TickEvent$RenderTickEvent extends Internal.TickEvent {
        getListenerList(): Internal.ListenerList;
        readonly renderTickTime : number;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TickEvent$RenderTickEvent_ = TickEvent$RenderTickEvent;
    class CharacterManager extends Document.Object {
        func_238353_a_(arg0: string, arg1: number, arg2: Internal.Style, arg3: boolean, arg4: ((arg0: Internal.Style, arg1: number, arg2: number) => void)): void;
        func_238352_a_(arg0: string, arg1: number, arg2: Internal.Style): number;
        func_243242_a(arg0: Internal.ITextProperties, arg1: number, arg2: Internal.Style, arg3: ((arg0: Internal.ITextProperties, arg1: boolean) => void)): void;
        func_238358_a_(arg0: Internal.ITextProperties, arg1: number, arg2: Internal.Style): Internal.ITextProperties;
        func_238350_a_(arg0: string): number;
        static func_238351_a_(arg0: string, arg1: number, arg2: number, arg3: boolean): number;
        func_238357_a_(arg0: Internal.ITextProperties, arg1: number): Internal.Style;
        func_238356_a_(arg0: Internal.ITextProperties): number;
        func_243239_a(arg0: ((arg0: ((arg0: number, arg1: Internal.Style, arg2: number) => boolean)) => boolean), arg1: number): Internal.Style;
        func_238364_c_(arg0: string, arg1: number, arg2: Internal.Style): string;
        func_238365_g_(arg0: string, arg1: number, arg2: Internal.Style): Internal.List<Internal.ITextProperties>;
        func_243238_a(arg0: ((arg0: ((arg0: number, arg1: Internal.Style, arg2: number) => boolean)) => boolean)): number;
        func_238362_b_(arg0: Internal.ITextProperties, arg1: number, arg2: Internal.Style): Internal.List<Internal.ITextProperties>;
        func_238361_b_(arg0: string, arg1: number, arg2: Internal.Style): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CharacterManager_ = CharacterManager;
    interface Marker extends Internal.Serializable {
        getParents(): Internal.Marker[];
        getName(): string;
        setParents(markers: Internal.Marker[]): Internal.Marker;
        hashCode(): number;
        hasParents(): boolean;
        equals(obj: any): boolean;
        isInstanceOf(m: Internal.Marker): boolean;
        isInstanceOf(name: string): boolean;
        addParents(markers: Internal.Marker[]): Internal.Marker;
        remove(marker: Internal.Marker): boolean;
    }
    type Marker_ = Marker;
    class StonecuttingRecipe extends Internal.SingleItemRecipe {
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StonecuttingRecipe_ = StonecuttingRecipe;
    class Proxy extends Document.Object {
        address(): Internal.SocketAddress;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        type(): Internal.Proxy$Type;
        static readonly NO_PROXY : Internal.Proxy;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Proxy_ = Proxy;
    class GlVertexAttribute extends Document.Object {
        getSize(): number;
        getStride(): number;
        getFormat(): number;
        getPointer(): number;
        isNormalized(): boolean;
        getCount(): number;
        get pointer(): number;
        get size(): number;
        get normalized(): boolean;
        get format(): number;
        get count(): number;
        get stride(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GlVertexAttribute_ = GlVertexAttribute;
    class CraftingInventory extends Document.Object implements Internal.IInventory, Internal.IRecipeHelperPopulator, Internal.CraftingInventoryAccessor, Internal.CraftingInventoryDuck {
        func_70304_b(arg0: number): Internal.ItemStack;
        setCheckMatrixChanges(arg0: boolean): void;
        func_194018_a(arg0: Internal.RecipeItemHelper): void;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_174888_l(): void;
        func_70301_a(arg0: number): Internal.ItemStack;
        getEventHandler(): Internal.Container;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_174922_i(): number;
        func_174923_h(): number;
        func_70302_i_(): number;
        func_191420_l(): boolean;
        getStackList(): Internal.NonNullList<any>;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_70296_d(): void;
        checkMatrixChanges : boolean;
        get stackList(): Internal.NonNullList<any>;
        get eventHandler(): Internal.Container;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CraftingInventory_ = CraftingInventory;
    class MerchantOffer extends Document.Object implements Internal.MerchantOfferAccess {
        setMaxUses(arg0: number): void;
        func_222216_p(): void;
        func_222217_o(): boolean;
        func_222208_r(): Internal.CompoundNBT;
        func_226654_r_(): boolean;
        func_222202_c(): Internal.ItemStack;
        func_222215_b(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_225482_k(): number;
        func_222204_a(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_222200_d(): Internal.ItemStack;
        func_222205_b(): Internal.ItemStack;
        func_222222_e(): void;
        func_222207_a(arg0: number): void;
        func_222203_h(): void;
        func_222218_a(): Internal.ItemStack;
        func_222209_b(arg0: number): void;
        func_222220_k(): void;
        func_222213_g(): number;
        func_222206_f(): Internal.ItemStack;
        func_222214_i(): number;
        func_222210_n(): number;
        func_222211_m(): number;
        func_222212_l(): number;
        func_222219_j(): void;
        func_222221_q(): boolean;
        field_222225_c : Internal.ItemStack;
        field_222224_b : Internal.ItemStack;
        field_222223_a : Internal.ItemStack;
        field_222231_i : number;
        field_222227_e : number;
        field_222232_j : number;
        set maxUses(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MerchantOffer_ = MerchantOffer;
    class SmokingRecipe extends Internal.AbstractCookingRecipe {
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_222128_h(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SmokingRecipe_ = SmokingRecipe;
    class FrameType extends Internal.Enum<Internal.FrameType> {
        func_242265_d(): Internal.ITextComponent;
        static func_192308_a(arg0: string): Internal.FrameType;
        static valueOf(arg0: string): Internal.FrameType;
        static values(): Internal.FrameType[];
        func_192307_a(): string;
        func_192309_b(): number;
        func_193229_c(): Internal.TextFormatting;
        static readonly CHALLENGE : Internal.FrameType;
        static readonly TASK : Internal.FrameType;
        static readonly GOAL : Internal.FrameType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FrameType_ = "task" | "challenge" | "goal" | FrameType;
    class LootTableLoadEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getName(): ResourceLocation;
        getTable(): Internal.LootTable;
        setTable(arg0: Internal.LootTable): void;
        getLootTableManager(): Internal.LootTableManager;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get name(): ResourceLocation;
        get lootTableManager(): Internal.LootTableManager;
        get table(): Internal.LootTable;
        set table(arg0: Internal.LootTable);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootTableLoadEvent_ = LootTableLoadEvent;
    class ChunkWatchEvent$Watch extends Internal.ChunkWatchEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkWatchEvent$Watch_ = ChunkWatchEvent$Watch;
    class RecursiveTypeFamily extends Document.Object implements Internal.TypeFamily {
        template(): Internal.TypeTemplate;
        static viewUnchecked<A_, B_>(arg0: Internal.Type<any>, arg1: Internal.Type<any>, arg2: Internal.PointFree<((arg0: A_) => B_)>): Internal.View<A_, B_>;
        fold(arg0: Internal.Algebra): Internal.IntFunction<Internal.RewriteResult<any, any>>;
        size(): number;
        apply(arg0: number): Internal.Type<any>;
        apply(arg0: number): Internal.RecursivePoint$RecursivePointType<any>;
        hashCode(): number;
        everywhere(arg0: number, arg1: Internal.TypeRewriteRule, arg2: Internal.PointFreeRule): Internal.Optional<Internal.RewriteResult<any, any>>;
        equals(arg0: any): boolean;
        findType<A_, B_>(arg0: number, arg1: Internal.Type<A_>, arg2: Internal.Type<B_>, arg3: Internal.Type$TypeMatcher<A_, B_>, arg4: boolean): Internal.Either<Internal.TypedOptic<any, any, A_, B_>, Internal.Type$FieldNotFoundException>;
        name(): string;
        buildMuType<A_>(arg0: Internal.Type<A_>, arg1: Internal.RecursiveTypeFamily): Internal.RecursivePoint$RecursivePointType<A_>;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecursiveTypeFamily_ = RecursiveTypeFamily;
    class WanderingTraderEntity extends Internal.AbstractVillagerEntity {
        localvar$zkg000$handleSecondListingOffer(offer: Internal.MerchantOffer): Internal.MerchantOffer;
        func_213705_dZ(): boolean;
        func_213726_g(arg0: BlockPos): void;
        architectury$getMaxOfferOverride(): number;
        func_213397_c(arg0: number): boolean;
        architectury$handleOffer(offer: Internal.MerchantOffer): Internal.MerchantOffer;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_213714_ea(): Internal.SoundEvent;
        func_70636_d(): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        localvar$zkg000$storeItemListing(itemListing: Internal.VillagerTrades$ITrade): Internal.VillagerTrades$ITrade;
        func_213735_eg(): number;
        func_213728_s(arg0: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WanderingTraderEntity_ = WanderingTraderEntity;
    interface IIngredientType <T> {
        getIngredientClass(): Internal.Class<T>;
    }
    type IIngredientType_<T> = IIngredientType<T>;
    interface IResourceType {
    }
    type IResourceType_ = IResourceType;
    class CPlayerTryUseItemPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_187028_a(): Hand;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CPlayerTryUseItemPacket_ = CPlayerTryUseItemPacket;
    class EntitySenses extends Document.Object {
        func_75522_a(arg0: Internal.Entity): boolean;
        func_75523_a(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntitySenses_ = EntitySenses;
    interface BaseMapCodec <K, V> {
        encode<T>(arg0: Internal.Map_<K, V>, arg1: Internal.DynamicOps<T>, arg2: Internal.RecordBuilder<T>): Internal.RecordBuilder<T>;
        elementCodec(): Internal.Codec<V>;
        keyCodec(): Internal.Codec<K>;
        decode<T>(arg0: Internal.DynamicOps<T>, arg1: Internal.MapLike<T>): Internal.DataResult<Internal.Map<K, V>>;
    }
    type BaseMapCodec_<K, V> = BaseMapCodec<K, V>;
    class NativeImage extends Document.Object implements Internal.AutoCloseable {
        func_227788_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: boolean): void;
        static func_227786_a_(arg0: number): number;
        static func_227791_b_(arg0: number): number;
        static func_195713_a(arg0: Internal.InputStream): Internal.NativeImage;
        func_195714_b(): number;
        func_195715_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_195710_e(): void;
        func_195717_a(arg0: number, arg1: boolean): void;
        func_195711_f(): void;
        static func_227795_d_(arg0: number): number;
        func_227796_e_(): number[];
        func_195716_c(): number[];
        func_209271_a(arg0: Internal.File): void;
        func_209270_a(arg0: java_.nio.file.Path): void;
        close(): void;
        func_227789_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: boolean, arg9: boolean, arg10: boolean): void;
        static func_227787_a_(arg0: number, arg1: number, arg2: number, arg3: number): number;
        func_195700_a(arg0: number, arg1: number, arg2: number): void;
        func_195702_a(): number;
        static func_195704_a(arg0: Internal.ByteBuffer): Internal.NativeImage;
        static func_227793_c_(arg0: number): number;
        func_195703_a(arg0: Internal.NativeImage): void;
        func_195708_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.NativeImage): void;
        func_211675_e(arg0: number, arg1: number): number;
        static func_211679_a(arg0: Internal.NativeImage$PixelFormat_, arg1: Internal.InputStream): Internal.NativeImage;
        func_195709_a(arg0: number, arg1: number): number;
        func_195699_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: boolean): void;
        func_211676_a(arg0: Internal.STBTTFontinfo, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        static func_211677_a(arg0: Internal.NativeImage$PixelFormat_, arg1: Internal.ByteBuffer): Internal.NativeImage;
        func_195697_a(arg0: number, arg1: number, arg2: number, arg3: boolean): void;
        static func_216511_b(arg0: string): Internal.NativeImage;
        func_211678_c(): Internal.NativeImage$PixelFormat;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NativeImage_ = NativeImage;
    class TextStyle extends Internal.Enum<Internal.TextStyle> {
        asNormal(): Internal.TextStyle;
        static valueOf(arg0: string): Internal.TextStyle;
        isStandalone(): boolean;
        static values(): Internal.TextStyle[];
        asStandalone(): Internal.TextStyle;
        static readonly SHORT_STANDALONE : Internal.TextStyle;
        static readonly NARROW_STANDALONE : Internal.TextStyle;
        static readonly FULL_STANDALONE : Internal.TextStyle;
        static readonly FULL : Internal.TextStyle;
        static readonly SHORT : Internal.TextStyle;
        static readonly NARROW : Internal.TextStyle;
        get standalone(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TextStyle_ = "full" | "full_standalone" | "short" | "short_standalone" | "narrow" | "narrow_standalone" | TextStyle;
    class Vector2f extends Document.Object {
        func_201069_c(arg0: Internal.Vector2f): boolean;
        static readonly field_189974_a : Internal.Vector2f;
        static readonly field_189976_c : Internal.Vector2f;
        static readonly field_189981_h : Internal.Vector2f;
        static readonly field_189975_b : Internal.Vector2f;
        static readonly field_189980_g : Internal.Vector2f;
        static readonly field_189978_e : Internal.Vector2f;
        readonly field_189983_j : number;
        static readonly field_189977_d : Internal.Vector2f;
        readonly field_189982_i : number;
        static readonly field_189979_f : Internal.Vector2f;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Vector2f_ = Vector2f;
    class BaseFunction extends Internal.IdScriptableObject implements dev.latvian.mods.rhino.Function {
        getFunctionName(): string;
        call(cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        getTypeOf(): string;
        setImmunePrototypeProperty(value: any): void;
        hasInstance(instance: Internal.Scriptable): boolean;
        getLength(): number;
        execIdCall(f: Internal.IdFunctionObject, cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        getClassName(): string;
        construct(cx: Internal.Context, scope: Internal.Scriptable, args: any[]): Internal.Scriptable;
        createObject(cx: Internal.Context, scope: Internal.Scriptable): Internal.Scriptable;
        getArity(): number;
        get arity(): number;
        get functionName(): string;
        get length(): number;
        get className(): string;
        get typeOf(): string;
        set immunePrototypeProperty(value: any);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BaseFunction_ = BaseFunction;
    class DynamicRegistries$Impl extends Internal.DynamicRegistries {
        func_230521_a_<E_>(arg0: Internal.RegistryKey<Internal.Registry<E_>>): Internal.Optional<Internal.MutableRegistry<E_>>;
        static readonly field_243626_a : Internal.Codec<Internal.DynamicRegistries$Impl>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DynamicRegistries$Impl_ = DynamicRegistries$Impl;
    class MouseHelper extends Document.Object {
        isMiddleDown(): boolean;
        func_198031_d(): boolean;
        func_241563_k_(): void;
        func_198030_b(): boolean;
        getXVelocity(): number;
        getYVelocity(): number;
        func_198035_h(): boolean;
        func_198026_f(): number;
        func_198034_i(): void;
        func_198029_a(arg0: number): void;
        func_198032_j(): void;
        func_198024_e(): number;
        func_198028_a(): void;
        func_198021_g(): void;
        get middleDown(): boolean;
        get xVelocity(): number;
        get yVelocity(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MouseHelper_ = MouseHelper;
    interface CommandSourceStackAccess {
        getSource(): Internal.ICommandSource;
    }
    type CommandSourceStackAccess_ = CommandSourceStackAccess;
    abstract class ExplosionEventJS extends Internal.WorldEventJS {
        getBlock(): Internal.BlockContainerJS;
        getX(): number;
        getWorld(): Internal.WorldJS;
        getY(): number;
        getPosition(): Vec3;
        getZ(): number;
        getExploder(): Internal.LivingEntityJS;
        get world(): Internal.WorldJS;
        get exploder(): Internal.LivingEntityJS;
        get x(): number;
        get y(): number;
        get block(): Internal.BlockContainerJS;
        get z(): number;
        get position(): Vec3;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ExplosionEventJS_ = ExplosionEventJS;
    abstract class CommandBlockLogic extends Document.Object implements Internal.ICommandSource {
        func_195043_d(): Internal.ServerWorld;
        func_145756_e(): void;
        func_145759_b(arg0: Internal.CompoundNBT): void;
        func_175573_a(arg0: boolean): void;
        func_195042_h(): Internal.CommandSource;
        func_145755_a(arg0: Internal.World): boolean;
        func_195039_a(): boolean;
        func_145747_a(arg0: Internal.ITextComponent_, arg1: Internal.UUID): void;
        func_145760_g(): number;
        func_145753_i(): string;
        func_145749_h(): Internal.ITextComponent;
        func_189510_a(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_207404_l(): Internal.ITextComponent;
        func_175571_m(): boolean;
        func_184167_a(arg0: number): void;
        func_207405_b(arg0: Internal.ITextComponent_): void;
        func_210165_f(): Vec3;
        func_145750_b(arg0: Internal.ITextComponent_): void;
        func_195041_r_(): boolean;
        func_175574_a(arg0: Internal.PlayerEntity): Internal.ActionResultType;
        func_145752_a(arg0: string): void;
        func_195040_b(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandBlockLogic_ = CommandBlockLogic;
    class GameTestDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_229022_a_(arg0: BlockPos, arg1: number, arg2: string, arg3: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameTestDebugRenderer_ = GameTestDebugRenderer;
    interface EventExecutorGroup extends Internal.ScheduledExecutorService, Internal.Iterable<Internal.EventExecutor> {
        scheduleAtFixedRate(arg0: (() => void), arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        next(): Internal.EventExecutor;
        terminationFuture(): io.netty.util.concurrent.Future<any>;
        isShuttingDown(): boolean;
        schedule(arg0: (() => void), arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        schedule<V_>(arg0: (() => V_), arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<V_>;
        iterator(): Internal.Iterator<Internal.EventExecutor>;
        shutdownGracefully(arg0: number, arg1: number, arg2: Internal.TimeUnit_): io.netty.util.concurrent.Future<any>;
        shutdownGracefully(): io.netty.util.concurrent.Future<any>;
        submit<T_>(arg0: (() => void), arg1: T_): io.netty.util.concurrent.Future<T_>;
        submit(arg0: (() => void)): io.netty.util.concurrent.Future<any>;
        submit<T_>(arg0: (() => T_)): io.netty.util.concurrent.Future<T_>;
        scheduleWithFixedDelay(arg0: (() => void), arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        shutdownNow(): Internal.List<Internal.Runnable>;
        shutdown(): void;
    }
    type EventExecutorGroup_ = EventExecutorGroup;
    class Effect extends Internal.ForgeRegistryEntry<Internal.Effect> implements Internal.IForgeEffect {
        static func_188409_a(arg0: Internal.Effect): number;
        func_111186_k(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>;
        static func_188412_a(arg0: number): Internal.Effect;
        func_199286_c(): Internal.ITextComponent;
        func_111185_a(arg0: Internal.LivingEntity, arg1: Internal.AttributeModifierManager, arg2: number): void;
        func_220303_e(): Internal.EffectType;
        func_76397_a(arg0: number, arg1: number): boolean;
        func_220304_a(arg0: Internal.Attribute, arg1: string, arg2: number, arg3: Internal.AttributeModifier$Operation_): Internal.Effect;
        func_76403_b(): boolean;
        func_111183_a(arg0: number, arg1: Internal.AttributeModifier): number;
        func_180793_a(arg0: Internal.Entity, arg1: Internal.Entity, arg2: Internal.LivingEntity, arg3: number, arg4: number): void;
        func_76401_j(): number;
        func_111187_a(arg0: Internal.LivingEntity, arg1: Internal.AttributeModifierManager, arg2: number): void;
        func_76393_a(): string;
        func_76394_a(arg0: Internal.LivingEntity, arg1: number): void;
        func_188408_i(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Effect_ = Effect;
    class LocalTime extends Document.Object implements Internal.Temporal, Internal.TemporalAdjuster, Internal.Comparable<Internal.LocalTime>, Internal.Serializable {
        static ofInstant(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.LocalTime;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.LocalTime;
        minus(arg0: Internal.TemporalAmount): Internal.LocalTime;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plusHours(arg0: number): Internal.LocalTime;
        minusHours(arg0: number): Internal.LocalTime;
        atDate(arg0: Internal.LocalDate): Internal.LocalDateTime;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.LocalTime): number;
        plusMinutes(arg0: number): Internal.LocalTime;
        toSecondOfDay(): number;
        minusMinutes(arg0: number): Internal.LocalTime;
        hashCode(): number;
        static now(): Internal.LocalTime;
        static now(arg0: Internal.Clock): Internal.LocalTime;
        static now(arg0: Internal.ZoneId): Internal.LocalTime;
        static of(arg0: number, arg1: number, arg2: number): Internal.LocalTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number): Internal.LocalTime;
        static of(arg0: number, arg1: number): Internal.LocalTime;
        get(arg0: Internal.TemporalField): number;
        plusSeconds(arg0: number): Internal.LocalTime;
        getMinute(): number;
        getHour(): number;
        static from(arg0: Internal.TemporalAccessor): Internal.LocalTime;
        plusNanos(arg0: number): Internal.LocalTime;
        withMinute(arg0: number): Internal.LocalTime;
        withHour(arg0: number): Internal.LocalTime;
        static ofNanoOfDay(arg0: number): Internal.LocalTime;
        atOffset(arg0: Internal.ZoneOffset): Internal.OffsetTime;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.LocalTime;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        minusNanos(arg0: number): Internal.LocalTime;
        getNano(): number;
        format(arg0: Internal.DateTimeFormatter): string;
        static parse(arg0: Internal.CharSequence): Internal.LocalTime;
        static parse(arg0: Internal.CharSequence, arg1: Internal.DateTimeFormatter): Internal.LocalTime;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isSupported(arg0: Internal.TemporalField): boolean;
        isBefore(arg0: Internal.LocalTime): boolean;
        plus(arg0: Internal.TemporalAmount): Internal.LocalTime;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.LocalTime;
        withNano(arg0: number): Internal.LocalTime;
        getLong(arg0: Internal.TemporalField): number;
        static ofSecondOfDay(arg0: number): Internal.LocalTime;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.LocalTime;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.Temporal;
        with(arg0: Internal.TemporalField, arg1: number): Internal.LocalTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        toNanoOfDay(): number;
        toEpochSecond(arg0: Internal.LocalDate, arg1: Internal.ZoneOffset): number;
        equals(arg0: any): boolean;
        getSecond(): number;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        toString(): string;
        minusSeconds(arg0: number): Internal.LocalTime;
        isAfter(arg0: Internal.LocalTime): boolean;
        withSecond(arg0: number): Internal.LocalTime;
        static readonly MIN : Internal.LocalTime;
        static readonly NOON : Internal.LocalTime;
        static readonly MAX : Internal.LocalTime;
        static readonly MIDNIGHT : Internal.LocalTime;
        get hour(): number;
        get nano(): number;
        get minute(): number;
        get second(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LocalTime_ = LocalTime;
    class CommandBlockTileEntity$Mode extends Internal.Enum<Internal.CommandBlockTileEntity$Mode> {
        static valueOf(arg0: string): Internal.CommandBlockTileEntity$Mode;
        static values(): Internal.CommandBlockTileEntity$Mode[];
        static readonly AUTO : Internal.CommandBlockTileEntity$Mode;
        static readonly REDSTONE : Internal.CommandBlockTileEntity$Mode;
        static readonly SEQUENCE : Internal.CommandBlockTileEntity$Mode;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandBlockTileEntity$Mode_ = "sequence" | "auto" | "redstone" | CommandBlockTileEntity$Mode;
    class RenderState$CullState extends Internal.RenderState$BooleanState {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$CullState_ = RenderState$CullState;
    class FunctionObject extends Document.Object {
        func_193528_a(): any[];
        static func_237140_a_(arg0: ResourceLocation_, arg1: Internal.CommandDispatcher<Internal.CommandSource>, arg2: Internal.CommandSource, arg3: Internal.List<string>): Internal.FunctionObject;
        func_197001_a(): ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FunctionObject_ = FunctionObject;
    class TeleportationRepositioner$Result extends Document.Object {
        readonly field_243679_a : BlockPos;
        readonly field_243680_b : number;
        readonly field_243681_c : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TeleportationRepositioner$Result_ = TeleportationRepositioner$Result;
    class JigsawReplacementStructureProcessor extends Internal.StructureProcessor {
        func_230386_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings): Internal.Template$BlockInfo;
        static readonly field_215196_a : Internal.JigsawReplacementStructureProcessor;
        static readonly field_237085_a_ : Internal.Codec<Internal.JigsawReplacementStructureProcessor>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JigsawReplacementStructureProcessor_ = JigsawReplacementStructureProcessor;
    interface IBiomeReader extends Internal.IEntityReader, Internal.IWorldReader, Internal.IWorldGenerationReader {
        func_241828_r(): Internal.DynamicRegistries;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: ((arg0: Internal.Entity) => boolean)): Internal.Stream<Internal.VoxelShape>;
        func_242406_i(arg0: BlockPos): Internal.Optional<Internal.RegistryKey<Internal.Biome>>;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
    }
    type IBiomeReader_ = IBiomeReader;
    interface IIngredientListOverlay {
        getVisibleIngredients(): Internal.ImmutableList<any>;
        hasKeyboardFocus(): boolean;
        getIngredientUnderMouse(): any;
        getIngredientUnderMouse<T>(arg0: Internal.IIngredientType<T>): T;
    }
    type IIngredientListOverlay_ = IIngredientListOverlay;
    class ArmorStandEntity extends Internal.LivingEntity {
        func_174812_G(): void;
        func_82142_c(arg0: boolean): void;
        func_175417_e(arg0: Internal.Rotations): void;
        func_174820_d(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70071_h_(): void;
        func_175415_a(arg0: Internal.Rotations): void;
        func_241842_k(arg0: number): Vec3;
        func_184193_aE(): Internal.Iterable<Internal.ItemStack>;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_213323_x_(): void;
        func_70631_g_(): boolean;
        func_190631_cK(): boolean;
        func_184214_aD(): Internal.Iterable<Internal.ItemStack>;
        func_181026_s(): boolean;
        func_175411_v(): Internal.Rotations;
        func_184192_z(): Internal.PushReaction;
        func_175427_f(arg0: Internal.Rotations): void;
        func_70103_a(arg0: number): void;
        func_213365_e(arg0: Internal.ItemStack): boolean;
        func_175404_u(): Internal.Rotations;
        func_184603_cC(): boolean;
        func_70067_L(): boolean;
        func_175408_t(): Internal.Rotations;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_175402_q(): boolean;
        func_184591_cq(): Internal.HandSide;
        func_175410_n(): boolean;
        func_70104_M(): boolean;
        func_175407_x(): Internal.Rotations;
        func_70033_W(): number;
        func_70112_a(arg0: number): boolean;
        func_213352_e(arg0: Vec3): void;
        func_85031_j(arg0: Internal.Entity): boolean;
        func_213305_a(arg0: Internal.Pose_): Internal.EntitySize;
        func_175418_s(): Internal.Rotations;
        func_175414_r(): boolean;
        func_241841_a(arg0: Internal.ServerWorld, arg1: Internal.LightningBoltEntity): void;
        func_184201_a(arg0: EquipmentSlot_, arg1: Internal.ItemStack): void;
        func_175428_d(arg0: Internal.Rotations): void;
        func_175405_c(arg0: Internal.Rotations): void;
        func_70613_aW(): boolean;
        func_180427_aV(): boolean;
        func_175424_b(arg0: Internal.Rotations): void;
        func_181013_g(arg0: number): void;
        func_175403_w(): Internal.Rotations;
        func_184582_a(arg0: EquipmentSlot_): Internal.ItemStack;
        func_184199_a(arg0: Internal.PlayerEntity, arg1: Vec3, arg2: Hand_): Internal.ActionResultType;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70034_d(arg0: number): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        field_175437_i : number;
        static readonly field_184801_a : Internal.DataParameter<number>;
        static readonly field_184802_b : Internal.DataParameter<Internal.Rotations>;
        static readonly field_184803_c : Internal.DataParameter<Internal.Rotations>;
        static readonly field_184804_d : Internal.DataParameter<Internal.Rotations>;
        static readonly field_184805_e : Internal.DataParameter<Internal.Rotations>;
        static readonly field_184806_f : Internal.DataParameter<Internal.Rotations>;
        static readonly field_184807_g : Internal.DataParameter<Internal.Rotations>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ArmorStandEntity_ = ArmorStandEntity;
    class EndermanEntity extends Internal.MonsterEntity implements Internal.IAngerable {
        func_230256_F__(): number;
        func_195405_dq(): Internal.BlockState;
        func_230270_dK_(): boolean;
        func_226537_et_(): boolean;
        func_230258_H__(): void;
        func_213392_I(): boolean;
        func_230260_a__(arg0: number): void;
        func_70624_b(arg0: Internal.LivingEntity): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70823_r(): boolean;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_70636_d(): void;
        func_226539_l_(): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_195406_b(arg0: Internal.BlockState): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_230257_G__(): Internal.UUID;
        static func_234287_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_226538_eu_(): void;
        func_230259_a_(arg0: Internal.UUID): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EndermanEntity_ = EndermanEntity;
    class Thread$State extends Internal.Enum<Internal.Thread$State> {
        static valueOf(arg0: string): Internal.Thread$State;
        static values(): Internal.Thread$State[];
        static readonly NEW : Internal.Thread$State;
        static readonly TERMINATED : Internal.Thread$State;
        static readonly RUNNABLE : Internal.Thread$State;
        static readonly BLOCKED : Internal.Thread$State;
        static readonly WAITING : Internal.Thread$State;
        static readonly TIMED_WAITING : Internal.Thread$State;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Thread$State_ = "new" | "runnable" | "blocked" | "waiting" | "timed_waiting" | "terminated" | Thread$State;
    abstract class ImmutableMultiset <E> extends Internal.ImmutableCollection<E> implements Internal.Multiset<E> {
        add(arg0: E, arg1: number): number;
        static toImmutableMultiset<E_>(): Internal.Collector<E_, any, Internal.ImmutableMultiset<E_>>;
        entrySet(): Internal.ImmutableSet<Internal.Multiset$Entry<E>>;
        entrySet(): Internal.Set<any>;
        static copyOf<E_>(arg0: Internal.Iterable<E_>): Internal.ImmutableMultiset<E_>;
        static copyOf<E_>(arg0: Internal.Iterator<E_>): Internal.ImmutableMultiset<E_>;
        static copyOf<E_>(arg0: E_[]): Internal.ImmutableMultiset<E_>;
        asList(): Internal.ImmutableList<E>;
        remove(arg0: any, arg1: number): number;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.UnmodifiableIterator<E>;
        elementSet(): Internal.ImmutableSet<E>;
        elementSet(): Internal.Set<any>;
        hashCode(): number;
        static of<E_>(arg0: E_, arg1: E_): Internal.ImmutableMultiset<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_): Internal.ImmutableMultiset<E_>;
        static of<E_>(arg0: E_): Internal.ImmutableMultiset<E_>;
        static of<E_>(): Internal.ImmutableMultiset<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_[]): Internal.ImmutableMultiset<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_): Internal.ImmutableMultiset<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_): Internal.ImmutableMultiset<E_>;
        equals(arg0: any): boolean;
        static builder<E_>(): Internal.ImmutableMultiset$Builder<E_>;
        toString(): string;
        setCount(arg0: E, arg1: number, arg2: number): boolean;
        setCount(arg0: E, arg1: number): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableMultiset_<E> = ImmutableMultiset<E>;
    class GPUWarning extends Internal.ReloadListener<any> {
        func_241699_f_(): void;
        func_241703_j_(): string;
        func_241692_a_(): boolean;
        func_241705_l_(): string;
        func_241704_k_(): string;
        func_241695_b_(): boolean;
        func_241701_h_(): boolean;
        func_241702_i_(): void;
        func_241697_d_(): void;
        func_241700_g_(): boolean;
        func_241698_e_(): void;
        func_243499_m(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GPUWarning_ = GPUWarning;
    class DimensionStructuresSettings extends Document.Object {
        func_236195_a_(): Internal.Map<Internal.Structure<any>, Internal.StructureSeparationSettings>;
        func_236197_a_(arg0: Internal.Structure<any>): Internal.StructureSeparationSettings;
        func_236199_b_(): Internal.StructureSpreadSettings;
        static readonly field_236192_c_ : Internal.StructureSpreadSettings;
        static readonly field_236191_b_ : {};
        static readonly field_236190_a_ : Internal.Codec<Internal.DimensionStructuresSettings>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DimensionStructuresSettings_ = DimensionStructuresSettings;
    class FuelRecipeJS extends Internal.ThermalRecipeJS {
        serialize(): void;
        create(arg0: Internal.ListJS): void;
        deserialize(): void;
        inKey : string;
        inputFluids : Internal.ArrayList<Internal.FluidStackJS>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FuelRecipeJS_ = FuelRecipeJS;
    class SquidEntity extends Internal.WaterMobEntity {
        static func_234227_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70636_d(): void;
        func_70103_a(arg0: number): void;
        func_175567_n(): boolean;
        static func_223365_b(arg0: Internal.EntityType<Internal.SquidEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_213352_e(arg0: Vec3): void;
        func_175568_b(arg0: number, arg1: number, arg2: number): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        field_70867_h : number;
        field_70859_f : number;
        field_70866_j : number;
        field_70868_i : number;
        field_70861_d : number;
        field_70862_e : number;
        field_70860_g : number;
        field_70865_by : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SquidEntity_ = SquidEntity;
    class BeehiveTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity {
        func_226961_a_(arg0: Internal.Entity, arg1: boolean): void;
        func_226974_m_(): Internal.ListNBT;
        func_226963_a_(arg0: Internal.PlayerEntity, arg1: Internal.BlockState, arg2: Internal.BeehiveTileEntity$State_): void;
        func_226962_a_(arg0: Internal.Entity, arg1: boolean, arg2: number): void;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        static func_226964_a_(arg0: Internal.BlockState): number;
        func_73660_a(): void;
        func_226972_k_(): boolean;
        func_226970_h_(): boolean;
        func_226971_j_(): number;
        func_226968_d_(): boolean;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_70296_d(): void;
        func_226969_f_(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BeehiveTileEntity_ = BeehiveTileEntity;
    class LazyOptional <T> extends Document.Object {
        resolve(): Internal.Optional<T>;
        isPresent(): boolean;
        invalidate(): void;
        orElse(arg0: T): T;
        orElseThrow<X_>(arg0: (() => X_)): T;
        static empty<T_>(): Internal.LazyOptional<T_>;
        filter(arg0: ((arg0: T) => boolean)): Internal.Optional<T>;
        cast<X_>(): Internal.LazyOptional<X_>;
        orElseGet(arg0: (() => T)): T;
        ifPresent(arg0: ((arg0: T) => void)): void;
        static of<T_>(arg0: (() => T_)): Internal.LazyOptional<T_>;
        map<U_>(arg0: ((arg0: T) => U_)): Internal.Optional<U_>;
        lazyMap<U_>(arg0: ((arg0: T) => U_)): Internal.LazyOptional<U_>;
        addListener(arg0: ((arg0: Internal.LazyOptional<T>) => void)): void;
        get present(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LazyOptional_<T> = LazyOptional<T>;
    interface ILootEntry {
        expand(arg0: Internal.LootContext, arg1: ((arg0: Internal.ILootGenerator) => void)): boolean;
        func_216133_a(arg0: ((arg0: Internal.LootContext, arg1: ((arg0: Internal.ILootGenerator) => void)) => boolean)): Internal.ILootEntry;
        func_216135_b(arg0: ((arg0: Internal.LootContext, arg1: ((arg0: Internal.ILootGenerator) => void)) => boolean)): Internal.ILootEntry;
    }
    type ILootEntry_ = ((arg0: Internal.LootContext, arg1: ((arg0: Internal.ILootGenerator) => void)) => boolean) | ILootEntry;
    interface IFlinging {
        func_230290_eL_(): number;
    }
    type IFlinging_ = IFlinging;
    class CraftResultInventory extends Document.Object implements Internal.IInventory, Internal.IRecipeHolder {
        func_70302_i_(): number;
        func_70304_b(arg0: number): Internal.ItemStack;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_174888_l(): void;
        func_193056_a(arg0: Internal.IRecipe<any>): void;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_191420_l(): boolean;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_193055_i(): Internal.IRecipe<any>;
        func_70296_d(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CraftResultInventory_ = CraftResultInventory;
    class Food extends Document.Object {
        func_221465_e(): boolean;
        func_221467_c(): boolean;
        func_221464_f(): Internal.List<com.mojang.datafixers.util.Pair<Internal.EffectInstance, number>>;
        func_221466_a(): number;
        func_221468_d(): boolean;
        func_221469_b(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Food_ = Food;
    class ScriptManager extends Document.Object {
        loadFromDirectory(): void;
        load(): void;
        isClassAllowed(name: string): boolean;
        loadJavaClass(scope: Internal.Scriptable, args: any[]): Internal.NativeJavaClass;
        unload(): void;
        readonly exampleScript : string;
        readonly type : Internal.ScriptType;
        firstLoad : boolean;
        readonly directory : java_.nio.file.Path;
        readonly packs : Internal.Map<string, Internal.ScriptPack>;
        readonly events : Internal.EventsJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScriptManager_ = ScriptManager;
    interface RandomGenerator {
        nextFloat(): number;
        nextFloat(arg0: number): number;
        nextFloat(arg0: number, arg1: number): number;
        isDeprecated(): boolean;
        nextInt(arg0: number): number;
        nextInt(arg0: number, arg1: number): number;
        nextInt(): number;
        nextLong(arg0: number, arg1: number): number;
        nextLong(): number;
        nextLong(arg0: number): number;
        nextGaussian(arg0: number, arg1: number): number;
        nextGaussian(): number;
        nextDouble(arg0: number): number;
        nextDouble(): number;
        nextDouble(arg0: number, arg1: number): number;
        nextBytes(arg0: number[]): void;
        longs(arg0: number, arg1: number, arg2: number): Internal.LongStream;
        longs(arg0: number, arg1: number): Internal.LongStream;
        longs(): Internal.LongStream;
        longs(arg0: number): Internal.LongStream;
        nextExponential(): number;
        doubles(): Internal.DoubleStream;
        doubles(arg0: number, arg1: number, arg2: number): Internal.DoubleStream;
        doubles(arg0: number, arg1: number): Internal.DoubleStream;
        doubles(arg0: number): Internal.DoubleStream;
        ints(arg0: number, arg1: number): Internal.IntStream;
        ints(): Internal.IntStream;
        ints(arg0: number): Internal.IntStream;
        ints(arg0: number, arg1: number, arg2: number): Internal.IntStream;
        nextBoolean(): boolean;
    }
    type RandomGenerator_ = RandomGenerator;
    class OptionalDouble extends Document.Object {
        isEmpty(): boolean;
        isPresent(): boolean;
        getAsDouble(): number;
        orElse(arg0: number): number;
        orElseThrow<X_>(arg0: (() => X_)): number;
        orElseThrow(): number;
        static empty(): Internal.OptionalDouble;
        orElseGet(arg0: (() => number)): number;
        stream(): Internal.DoubleStream;
        hashCode(): number;
        ifPresentOrElse(arg0: ((arg0: number) => void), arg1: (() => void)): void;
        ifPresent(arg0: ((arg0: number) => void)): void;
        static of(arg0: number): Internal.OptionalDouble;
        equals(arg0: any): boolean;
        toString(): string;
        get asDouble(): number;
        get present(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OptionalDouble_ = OptionalDouble;
    class Monitor extends Document.Object {
        func_197989_c(): number;
        func_197995_f(): number;
        func_197991_a(arg0: number): Internal.VideoMode;
        toString(): string;
        func_197990_d(): number;
        func_197992_a(arg0: Internal.Optional<Internal.VideoMode>): Internal.VideoMode;
        func_197988_a(): void;
        func_197987_b(): Internal.VideoMode;
        func_197994_e(): number;
        func_224794_a(arg0: Internal.VideoMode): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Monitor_ = Monitor;
    class ZombieVillagerEntity extends Internal.ZombieEntity implements Internal.IVillagerDataHolder {
        func_82230_o(): boolean;
        func_184601_bQ(arg0: Internal.DamageSource): Internal.SoundEvent;
        func_223727_a(arg0: Internal.INBT): void;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70071_h_(): void;
        func_70103_a(arg0: number): void;
        func_213789_a(arg0: number): void;
        func_184639_G(): Internal.SoundEvent;
        func_213397_c(arg0: number): boolean;
        func_213792_a(arg0: Internal.VillagerData): void;
        func_190731_di(): Internal.SoundEvent;
        func_213700_eh(): Internal.VillagerData;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_213790_g(arg0: Internal.CompoundNBT): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        func_184615_bR(): Internal.SoundEvent;
        field_223728_bB : Internal.INBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZombieVillagerEntity_ = ZombieVillagerEntity;
    class BlockModelShapes extends Document.Object {
        func_178122_a(arg0: Internal.BlockState): Internal.TextureAtlasSprite;
        static func_209553_a(arg0: ResourceLocation_, arg1: Internal.BlockState): Internal.ModelResourceLocation;
        static func_209552_a(arg0: Internal.Map_<Internal.Property_<any>, Internal.Comparable_<any>>): string;
        static func_209554_c(arg0: Internal.BlockState): Internal.ModelResourceLocation;
        func_178126_b(): Internal.ModelManager;
        getTexture(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos): Internal.TextureAtlasSprite;
        func_178124_c(): void;
        func_178125_b(arg0: Internal.BlockState): Internal.IBakedModel;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockModelShapes_ = BlockModelShapes;
    interface PackedIntegerArrayExtended {
        copyUsingPalette<T>(arg0: T[], arg1: Internal.ClonedPalette<T>): void;
    }
    type PackedIntegerArrayExtended_ = PackedIntegerArrayExtended;
    class EntityClassification extends Internal.Enum<Internal.EntityClassification> implements Internal.IStringSerializable, Internal.IExtensibleEnum {
        init(): void;
        func_75599_d(): boolean;
        func_82705_e(): boolean;
        func_220363_a(): string;
        static valueOf(arg0: string): Internal.EntityClassification;
        func_176610_l(): string;
        static values(): Internal.EntityClassification[];
        static func_233670_a_(arg0: string): Internal.EntityClassification;
        func_75601_b(): number;
        static create(arg0: string, arg1: string, arg2: number, arg3: boolean, arg4: boolean, arg5: number): Internal.EntityClassification;
        func_233671_f_(): number;
        func_233672_g_(): number;
        static readonly WATER_CREATURE : Internal.EntityClassification;
        static readonly WATER_AMBIENT : Internal.EntityClassification;
        static readonly field_233667_g_ : Internal.Codec<Internal.EntityClassification>;
        static readonly AMBIENT : Internal.EntityClassification;
        static readonly CREATURE : Internal.EntityClassification;
        static readonly MISC : Internal.EntityClassification;
        static readonly MONSTER : Internal.EntityClassification;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityClassification_ = "monster" | "creature" | "ambient" | "water_creature" | "water_ambient" | "misc" | EntityClassification;
    abstract class RecursiveEventLoop <R> extends Internal.ThreadTaskExecutor<R> {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecursiveEventLoop_<R> = RecursiveEventLoop<R>;
    interface AsKJS {
        asKJS(): any;
    }
    type AsKJS_ = AsKJS;
    interface LongStream$Builder extends Internal.LongConsumer {
        add(arg0: number): Internal.LongStream$Builder;
        build(): Internal.LongStream;
        accept(arg0: number): void;
    }
    type LongStream$Builder_ = LongStream$Builder;
    class NumberFormat$Style extends Internal.Enum<Internal.NumberFormat$Style> {
        static valueOf(arg0: string): Internal.NumberFormat$Style;
        static values(): Internal.NumberFormat$Style[];
        static readonly SHORT : Internal.NumberFormat$Style;
        static readonly LONG : Internal.NumberFormat$Style;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NumberFormat$Style_ = "short" | "long" | NumberFormat$Style;
    interface TemporalField {
        resolve(arg0: Internal.Map_<Internal.TemporalField_, number>, arg1: Internal.TemporalAccessor, arg2: Internal.ResolverStyle_): Internal.TemporalAccessor;
        getBaseUnit(): Internal.TemporalUnit;
        rangeRefinedBy(arg0: Internal.TemporalAccessor): Internal.ValueRange;
        getDisplayName(arg0: Internal.Locale): string;
        isTimeBased(): boolean;
        adjustInto<R>(arg0: R, arg1: number): R;
        range(): Internal.ValueRange;
        getRangeUnit(): Internal.TemporalUnit;
        toString(): string;
        isDateBased(): boolean;
        getFrom(arg0: Internal.TemporalAccessor): number;
        isSupportedBy(arg0: Internal.TemporalAccessor): boolean;
    }
    type TemporalField_ = TemporalField;
    interface ReferenceCounted {
        refCnt(): number;
        release(): boolean;
        release(arg0: number): boolean;
        retain(): Internal.ReferenceCounted;
        retain(arg0: number): Internal.ReferenceCounted;
        touch(arg0: any): Internal.ReferenceCounted;
        touch(): Internal.ReferenceCounted;
    }
    type ReferenceCounted_ = ReferenceCounted;
    class Period extends Document.Object implements Internal.ChronoPeriod, Internal.Serializable {
        minus(arg0: Internal.TemporalAmount): Internal.Period;
        minus(arg0: Internal.TemporalAmount): Internal.ChronoPeriod;
        negated(): Internal.Period;
        negated(): Internal.ChronoPeriod;
        normalized(): Internal.ChronoPeriod;
        normalized(): Internal.Period;
        static ofYears(arg0: number): Internal.Period;
        getMonths(): number;
        plusDays(arg0: number): Internal.Period;
        multipliedBy(arg0: number): Internal.ChronoPeriod;
        multipliedBy(arg0: number): Internal.Period;
        getYears(): number;
        hashCode(): number;
        static of(arg0: number, arg1: number, arg2: number): Internal.Period;
        get(arg0: Internal.TemporalUnit): number;
        isZero(): boolean;
        static from(arg0: Internal.TemporalAmount): Internal.Period;
        withDays(arg0: number): Internal.Period;
        getChronology(): Internal.Chronology;
        getChronology(): Internal.IsoChronology;
        static between(arg0: Internal.LocalDate, arg1: Internal.LocalDate): Internal.Period;
        isNegative(): boolean;
        withMonths(arg0: number): Internal.Period;
        minusYears(arg0: number): Internal.Period;
        plusMonths(arg0: number): Internal.Period;
        plusYears(arg0: number): Internal.Period;
        static ofDays(arg0: number): Internal.Period;
        static parse(arg0: Internal.CharSequence): Internal.Period;
        toTotalMonths(): number;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoPeriod;
        plus(arg0: Internal.TemporalAmount): Internal.Period;
        minusDays(arg0: number): Internal.Period;
        minusMonths(arg0: number): Internal.Period;
        static ofWeeks(arg0: number): Internal.Period;
        getDays(): number;
        subtractFrom(arg0: Internal.Temporal): Internal.Temporal;
        equals(arg0: any): boolean;
        getUnits(): Internal.List<Internal.TemporalUnit>;
        static ofMonths(arg0: number): Internal.Period;
        addTo(arg0: Internal.Temporal): Internal.Temporal;
        toString(): string;
        withYears(arg0: number): Internal.Period;
        static readonly ZERO : Internal.Period;
        get zero(): boolean;
        get negative(): boolean;
        get months(): number;
        get chronology(): Internal.IsoChronology;
        get days(): number;
        get units(): Internal.List<Internal.TemporalUnit>;
        get years(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Period_ = Period;
    interface CharSequence {
        isEmpty(): boolean;
        length(): number;
        toString(): string;
        subSequence(arg0: number, arg1: number): Internal.CharSequence;
        chars(): Internal.IntStream;
        charAt(arg0: number): string;
        codePoints(): Internal.IntStream;
    }
    type CharSequence_ = CharSequence;
    class ProtocolType extends Internal.Enum<Internal.ProtocolType> {
        static func_150760_a(arg0: number): Internal.ProtocolType;
        static valueOf(arg0: string): Internal.ProtocolType;
        static values(): Internal.ProtocolType[];
        static func_150752_a(arg0: Internal.IPacket<any>): Internal.ProtocolType;
        func_150759_c(): number;
        func_179246_a(arg0: Internal.PacketDirection_, arg1: Internal.IPacket<any>): number;
        func_179244_a(arg0: Internal.PacketDirection_, arg1: number): Internal.IPacket<any>;
        static readonly PLAY : Internal.ProtocolType;
        static readonly STATUS : Internal.ProtocolType;
        static readonly LOGIN : Internal.ProtocolType;
        static readonly HANDSHAKING : Internal.ProtocolType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ProtocolType_ = "handshaking" | "play" | "status" | "login" | ProtocolType;
    class SoundEngine extends Document.Object {
        func_188771_a(arg0: Internal.SoundCategory_, arg1: number): void;
        func_217933_b(arg0: Internal.ISound): boolean;
        func_217921_a(arg0: boolean): void;
        func_217920_a(arg0: Internal.ActiveRenderInfo): void;
        func_204259_a(arg0: Internal.Sound): void;
        func_229363_a_(arg0: Internal.ITickableSound): void;
        func_148614_c(): void;
        func_148596_a(): void;
        func_148611_c(arg0: Internal.ISound): void;
        func_148613_b(): void;
        func_148610_e(): void;
        func_148602_b(arg0: Internal.ISound): void;
        func_217932_f(): string;
        func_148604_f(): void;
        func_148599_a(arg0: Internal.ISound, arg1: number): void;
        func_195855_a(arg0: ResourceLocation_, arg1: Internal.SoundCategory_): void;
        func_188773_b(arg0: Internal.ISoundEventListener): void;
        func_188774_a(arg0: Internal.ISoundEventListener): void;
        readonly field_148622_c : Internal.SoundHandler;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SoundEngine_ = SoundEngine;
    class EditModeToggleEvent extends Internal.JeiEvent {
        getListenerList(): Internal.ListenerList;
        isEditModeEnabled(): boolean;
        get listenerList(): Internal.ListenerList;
        get editModeEnabled(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EditModeToggleEvent_ = EditModeToggleEvent;
    interface ISurfaceBuilderConfig {
        func_204108_a(): Internal.BlockState;
        func_204109_b(): Internal.BlockState;
    }
    type ISurfaceBuilderConfig_ = ISurfaceBuilderConfig;
    class FisherBoostRecipeJS extends Internal.ThermalRecipeJS {
        output(arg0: number): Internal.FisherBoostRecipeJS;
        serialize(): void;
        lootTable(arg0: string): Internal.FisherBoostRecipeJS;
        useChance(arg0: number): Internal.FisherBoostRecipeJS;
        create(arg0: Internal.ListJS): void;
        deserialize(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FisherBoostRecipeJS_ = FisherBoostRecipeJS;
    interface ConditionContainer {
        entityScores(entity: Internal.LootContext$EntityTarget_, scores: Internal.Map_<string, any>): Internal.ConditionContainer;
        killedByPlayer(): Internal.ConditionContainer;
        survivesExplosion(): Internal.ConditionContainer;
        randomChance(chance: number): Internal.ConditionContainer;
        randomChanceWithLooting(chance: number, multiplier: number): Internal.ConditionContainer;
        addCondition(arg0: Internal.JsonObject): Internal.ConditionContainer;
        entityProperties(entity: Internal.LootContext$EntityTarget_, properties: Internal.JsonObject): Internal.ConditionContainer;
    }
    type ConditionContainer_ = ConditionContainer;
    interface ErrorReporter {
        runtimeError(arg0: string, arg1: string, arg2: number, arg3: string, arg4: number): Internal.EvaluatorException;
        warning(arg0: string, arg1: string, arg2: number, arg3: string, arg4: number): void;
        error(arg0: string, arg1: string, arg2: number, arg3: string, arg4: number): void;
    }
    type ErrorReporter_ = ErrorReporter;
    interface EntityKJS extends Internal.AsKJS {
        getPersistentDataKJS(): Internal.CompoundNBT;
        asKJS(): any;
    }
    type EntityKJS_ = EntityKJS;
    class ScheduledEvent extends Document.Object {
        reschedule(): void;
        reschedule(timer: number): Internal.ScheduledEvent;
        getServer(): Internal.ServerJS;
        getEndTime(): number;
        isUsingTicks(): boolean;
        getData(): any;
        getTimerDuration(): number;
        getTimer(): number;
        get server(): Internal.ServerJS;
        get timer(): number;
        get data(): any;
        get timerDuration(): number;
        get usingTicks(): boolean;
        get endTime(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScheduledEvent_ = ScheduledEvent;
    class ServerBossInfo extends Internal.BossInfo {
        func_186761_b(arg0: Internal.ServerPlayerEntity): void;
        func_186741_a(arg0: boolean): Internal.BossInfo;
        func_186742_b(arg0: boolean): Internal.BossInfo;
        func_186746_a(arg0: Internal.BossInfo$Overlay_): void;
        func_186735_a(arg0: number): void;
        func_186745_a(arg0: Internal.BossInfo$Color_): void;
        func_186743_c(arg0: boolean): Internal.BossInfo;
        func_201359_g(): boolean;
        func_186758_d(arg0: boolean): void;
        func_201360_b(): void;
        func_186739_a(arg0: Internal.ITextComponent_): void;
        func_186757_c(): Internal.Collection<Internal.ServerPlayerEntity>;
        func_186760_a(arg0: Internal.ServerPlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerBossInfo_ = ServerBossInfo;
    interface IRecipeCategoryExtension {
        getTooltipStrings(arg0: number, arg1: number): Internal.List<Internal.ITextComponent>;
        drawInfo(arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: number, arg4: number): void;
        setIngredients(arg0: Internal.IIngredients): void;
        handleClick(arg0: number, arg1: number, arg2: number): boolean;
    }
    type IRecipeCategoryExtension_ = IRecipeCategoryExtension;
    interface Guard {
        checkGuard(arg0: any): void;
    }
    type Guard_ = Guard;
    class FoliagePlacer$Foliage extends Document.Object {
        func_236765_c_(): boolean;
        func_236763_a_(): BlockPos;
        func_236764_b_(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FoliagePlacer$Foliage_ = FoliagePlacer$Foliage;
    class EntityViewRenderEvent$FOVModifier extends Internal.EntityViewRenderEvent {
        getListenerList(): Internal.ListenerList;
        setFOV(arg0: number): void;
        getFOV(): number;
        get listenerList(): Internal.ListenerList;
        get fOV(): number;
        set fOV(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityViewRenderEvent$FOVModifier_ = EntityViewRenderEvent$FOVModifier;
    interface Map$Entry <K, V> {
        getKey(): K;
        getValue(): V;
        hashCode(): number;
        setValue(arg0: V): V;
        equals(arg0: any): boolean;
    }
    type Map$Entry_<K, V> = Map$Entry<K, V>;
    class FluidStack extends Document.Object {
        getRawFluidSupplier(): Internal.Supplier<Internal.Fluid>;
        getRawFluid(): Internal.Fluid;
        getName(): Internal.ITextComponent;
        getOrCreateChildTag(childName: string): Internal.CompoundNBT;
        static empty(): Internal.FluidStack;
        getChildTag(childName: string): Internal.CompoundNBT;
        hashCode(): number;
        static create(fluid: Internal.Fluid, amount: Internal.Fraction, tag: Internal.CompoundNBT): Internal.FluidStack;
        static create(stack: Internal.FluidStack, amount: Internal.Fraction): Internal.FluidStack;
        static create(fluid: (() => Internal.Fluid), amount: Internal.Fraction): Internal.FluidStack;
        static create(fluid: (() => Internal.Fluid), amount: Internal.Fraction, tag: Internal.CompoundNBT): Internal.FluidStack;
        static create(fluid: Internal.Fluid, amount: Internal.Fraction): Internal.FluidStack;
        setTag(tag: Internal.CompoundNBT): void;
        copy(): Internal.FluidStack;
        setAmount(amount: Internal.Fraction): void;
        write(buf: Internal.PacketBuffer): void;
        write(tag: Internal.CompoundNBT): Internal.CompoundNBT;
        getAmount(): Internal.Fraction;
        removeChildTag(childName: string): void;
        grow(amount: Internal.Fraction): void;
        static read(buf: Internal.PacketBuffer): Internal.FluidStack;
        static read(tag: Internal.CompoundNBT): Internal.FluidStack;
        hasTag(): boolean;
        shrink(amount: Internal.Fraction): void;
        getTranslationKey(): string;
        isEmpty(): boolean;
        getTag(): Internal.CompoundNBT;
        isFluidStackEqual(other: Internal.FluidStack): boolean;
        static bucketAmount(): Internal.Fraction;
        getOrCreateTag(): Internal.CompoundNBT;
        equals(o: any): boolean;
        getFluid(): Internal.Fluid;
        get orCreateTag(): Internal.CompoundNBT;
        get rawFluid(): Internal.Fluid;
        get amount(): Internal.Fraction;
        get rawFluidSupplier(): Internal.Supplier<Internal.Fluid>;
        get translationKey(): string;
        get name(): Internal.ITextComponent;
        get fluid(): Internal.Fluid;
        get tag(): Internal.CompoundNBT;
        set amount(amount: Internal.Fraction);
        set tag(tag: Internal.CompoundNBT);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FluidStack_ = FluidStack;
    class ModelResourceLocation extends ResourceLocation {
        hashCode(): number;
        equals(arg0: any): boolean;
        func_177518_c(): string;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModelResourceLocation_ = ModelResourceLocation;
    interface Function14 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.Function5<T10, T11, T12, T13, T14, R>>;
        curry12(): Internal.Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Internal.BiFunction<T13, T14, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13, arg13: T14): R;
        curry13(): Internal.Function13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Internal.Function<T14, R>>;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function7<T8, T9, T10, T11, T12, T13, T14, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function6<T9, T10, T11, T12, T13, T14, R>>;
        curry10(): Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Internal.Function4<T11, T12, T13, T14, R>>;
        curry11(): Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Internal.Function3<T12, T13, T14, R>>;
        curry(): Internal.Function<T1, Internal.Function13<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function9<T6, T7, T8, T9, T10, T11, T12, T13, T14, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function8<T7, T8, T9, T10, T11, T12, T13, T14, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function11<T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function10<T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function12<T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R>>;
    }
    type Function14_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R> = Function14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R>;
    class Advancement extends Document.Object {
        func_192075_a(): Internal.Advancement$Builder;
        func_192072_d(): Internal.AdvancementRewards;
        func_192074_h(): string[][];
        func_192068_c(): Internal.DisplayInfo;
        func_192073_f(): Internal.Map<string, Internal.Criterion>;
        func_192067_g(): ResourceLocation;
        func_193124_g(): number;
        func_192069_e(): Internal.Iterable<Internal.Advancement>;
        func_193123_j(): Internal.ITextComponent;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        func_192071_a(arg0: Internal.Advancement): void;
        func_192070_b(): Internal.Advancement;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Advancement_ = Advancement;
    class STabCompletePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_197687_b(): Internal.Suggestions;
        func_197689_a(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type STabCompletePacket_ = STabCompletePacket;
    class Commands$EnvironmentType extends Internal.Enum<Internal.Commands$EnvironmentType> {
        static valueOf(arg0: string): Internal.Commands$EnvironmentType;
        static values(): Internal.Commands$EnvironmentType[];
        static readonly ALL : Internal.Commands$EnvironmentType;
        static readonly INTEGRATED : Internal.Commands$EnvironmentType;
        static readonly DEDICATED : Internal.Commands$EnvironmentType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Commands$EnvironmentType_ = "all" | "dedicated" | "integrated" | Commands$EnvironmentType;
    interface FileNameMap {
        getContentTypeFor(arg0: string): string;
    }
    type FileNameMap_ = FileNameMap;
    class CampfireCookingRecipe extends Internal.AbstractCookingRecipe {
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_222128_h(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CampfireCookingRecipe_ = CampfireCookingRecipe;
    class InventoryJS extends Document.Object {
        getBlock(world: Internal.WorldJS): Internal.BlockContainerJS;
        set(slot: number, item: Internal.ItemStack): void;
        countNonEmpty(ingredient: Internal.IngredientJS_): number;
        countNonEmpty(): number;
        markDirty(): void;
        count(ingredient: Internal.IngredientJS_): number;
        count(): number;
        isEmpty(): boolean;
        clear(): void;
        clear(ingredient: Internal.IngredientJS_): void;
        insert(slot: number, item: Internal.ItemStack, simulate: boolean): Internal.ItemStackJS;
        isItemValid(slot: number, item: Internal.ItemStack): boolean;
        getWidth(): number;
        getHeight(): number;
        getSize(): number;
        extract(slot: number, amount: number, simulate: boolean): Internal.ItemStackJS;
        find(ingredient: Internal.IngredientJS_): number;
        find(): number;
        get(slot: number): Internal.ItemStackJS;
        getSlotLimit(slot: number): number;
        toString(): string;
        readonly minecraftInventory : Internal.ItemHandler;
        get size(): number;
        get width(): number;
        get empty(): boolean;
        get height(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InventoryJS_ = InventoryJS;
    abstract class KeyModifier extends Internal.Enum<Internal.KeyModifier> {
        static isKeyCodeModifier(arg0: Internal.InputMappings$Input): boolean;
        static valueOf(arg0: string): Internal.KeyModifier;
        static values(): Internal.KeyModifier[];
        getCombinedName(arg0: Internal.InputMappings$Input, arg1: (() => Internal.ITextComponent)): Internal.ITextComponent;
        isActive(arg0: Internal.IKeyConflictContext): boolean;
        static valueFromString(arg0: string): Internal.KeyModifier;
        matches(arg0: Internal.InputMappings$Input): boolean;
        static getActiveModifier(): Internal.KeyModifier;
        static readonly SHIFT : Internal.KeyModifier;
        static readonly MODIFIER_VALUES : Internal.KeyModifier[];
        static readonly ALT : Internal.KeyModifier;
        static readonly NONE : Internal.KeyModifier;
        static readonly CONTROL : Internal.KeyModifier;
        get activeModifier(): Internal.KeyModifier;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type KeyModifier_ = "control" | "shift" | "alt" | "none" | KeyModifier;
    class MatrixStack$Entry extends Document.Object {
        func_227872_b_(): Internal.Matrix3f;
        func_227870_a_(): Internal.Matrix4f;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MatrixStack$Entry_ = MatrixStack$Entry;
    class Score extends Document.Object {
        func_96652_c(): number;
        func_178815_a(arg0: boolean): void;
        func_96647_c(arg0: number): void;
        func_96649_a(arg0: number): void;
        func_96645_d(): Internal.ScoreObjective;
        func_96648_a(): void;
        func_197891_c(): void;
        func_96650_f(): Internal.Scoreboard;
        func_178816_g(): boolean;
        func_96653_e(): string;
        static readonly field_96658_a : ((arg0: any) => boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Score_ = Score;
    interface IKeyConflictContext {
        conflicts(arg0: Internal.IKeyConflictContext): boolean;
        isActive(): boolean;
    }
    type IKeyConflictContext_ = IKeyConflictContext;
    class Fraction extends Internal.Number implements Internal.Comparable<Internal.Fraction> {
        add(other: Internal.Fraction): Internal.Fraction;
        getNumerator(): number;
        inverse(): Internal.Fraction;
        isLessThan(fraction: Internal.Fraction): boolean;
        minus(other: Internal.Fraction): Internal.Fraction;
        intValue(): number;
        isGreaterThan(fraction: Internal.Fraction): boolean;
        floatValue(): number;
        doubleValue(): number;
        compareTo(fraction: Internal.Fraction): number;
        compareTo(arg0: any): number;
        longValue(): number;
        getDenominator(): number;
        static zero(): Internal.Fraction;
        hashCode(): number;
        static of(whole: number, numerator: number, denominator: number): Internal.Fraction;
        static of(numerator: number, denominator: number): Internal.Fraction;
        equals(o: any): boolean;
        divide(other: Internal.Fraction): Internal.Fraction;
        static from(value: number): Internal.Fraction;
        toString(): string;
        simplify(): Internal.Fraction;
        toDecimalString(): string;
        multiply(other: Internal.Fraction): Internal.Fraction;
        static ofWhole(whole: number): Internal.Fraction;
        get numerator(): number;
        get denominator(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Fraction_ = Fraction;
    class BlockRendererDispatcher extends Document.Object implements Internal.IResourceManagerReloadListener {
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_175019_b(): Internal.BlockModelRenderer;
        func_184389_a(arg0: Internal.BlockState): Internal.IBakedModel;
        renderBlock(arg0: Internal.BlockState, arg1: Internal.MatrixStack, arg2: Internal.IRenderTypeBuffer, arg3: number, arg4: number, arg5: Internal.IModelData): void;
        getResourceType(): Internal.IResourceType;
        func_228792_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.IBlockDisplayReader, arg3: Internal.MatrixStack, arg4: Internal.IVertexBuilder): void;
        func_228791_a_(arg0: Internal.BlockState, arg1: Internal.MatrixStack, arg2: Internal.IRenderTypeBuffer, arg3: number, arg4: number): void;
        func_228793_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.IBlockDisplayReader, arg3: Internal.MatrixStack, arg4: Internal.IVertexBuilder, arg5: boolean, arg6: Internal.Random): boolean;
        func_228794_a_(arg0: BlockPos, arg1: Internal.IBlockDisplayReader, arg2: Internal.IVertexBuilder, arg3: Internal.FluidState): boolean;
        func_175023_a(): Internal.BlockModelShapes;
        renderModel(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.IBlockDisplayReader, arg3: Internal.MatrixStack, arg4: Internal.IVertexBuilder, arg5: boolean, arg6: Internal.Random, arg7: Internal.IModelData): boolean;
        renderBlockDamage(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.IBlockDisplayReader, arg3: Internal.MatrixStack, arg4: Internal.IVertexBuilder, arg5: Internal.IModelData): void;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockRendererDispatcher_ = BlockRendererDispatcher;
    class PrintStream extends Internal.FilterOutputStream implements Internal.Appendable, Internal.Closeable {
        charset(): Internal.Charset;
        print(arg0: string): void;
        print(arg0: string[]): void;
        print(arg0: any): void;
        print(arg0: boolean): void;
        print(arg0: string): void;
        print(arg0: number): void;
        print(arg0: number): void;
        print(arg0: number): void;
        print(arg0: number): void;
        println(arg0: string): void;
        println(arg0: any): void;
        println(arg0: number): void;
        println(arg0: string[]): void;
        println(arg0: number): void;
        println(): void;
        println(arg0: boolean): void;
        println(arg0: string): void;
        println(arg0: number): void;
        println(arg0: number): void;
        writeBytes(arg0: number[]): void;
        flush(): void;
        format(arg0: Internal.Locale, arg1: string, arg2: any[]): Internal.PrintStream;
        format(arg0: string, arg1: any[]): Internal.PrintStream;
        checkError(): boolean;
        close(): void;
        write(arg0: number[]): void;
        write(arg0: number[], arg1: number, arg2: number): void;
        write(arg0: number): void;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.PrintStream;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.PrintStream;
        append(arg0: string): Internal.Appendable;
        append(arg0: string): Internal.PrintStream;
        printf(arg0: Internal.Locale, arg1: string, arg2: any[]): Internal.PrintStream;
        printf(arg0: string, arg1: any[]): Internal.PrintStream;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PrintStream_ = PrintStream;
    interface IChunk extends Internal.IBlockReader, Internal.IStructureReader, Internal.ChunkMixin, Internal.ExtendedChunk {
        func_201593_f(): boolean;
        getWorldForge(): Internal.IWorld;
        func_201594_d(arg0: BlockPos): void;
        func_201576_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_203066_o(): Internal.Set<BlockPos>;
        func_225549_i_(): Internal.BiomeContainer;
        func_201612_a(arg0: Internal.Map_<Internal.Structure_<any>, Internal.StructureStart_<any>>): void;
        func_201591_a(arg0: Internal.CompoundNBT): void;
        func_217310_r(): boolean;
        func_201636_b(arg0: number, arg1: number): void;
        func_177426_a(arg0: BlockPos, arg1: Internal.TileEntity): void;
        func_177425_e(arg0: BlockPos): void;
        func_76632_l(): Internal.ChunkPos;
        func_201589_g(): Internal.ChunkStatus;
        func_186031_y(): Internal.ChunkSection;
        func_217303_b(arg0: Internal.Heightmap$Type_): Internal.Heightmap;
        func_177427_f(arg0: boolean): void;
        func_217305_b(arg0: boolean): void;
        func_205218_i_(): Internal.ITickList<Internal.Block>;
        func_76587_i(): Internal.ChunkSection[];
        func_201609_c(): Internal.Map<Internal.Structure<any>, Internal.StructureStart<any>>;
        func_212247_j(): Internal.ITickList<Internal.Fluid>;
        func_76625_h(): number;
        func_76606_c(arg0: number, arg1: number): boolean;
        func_217304_m(): Internal.Stream<BlockPos>;
        func_201607_a(arg0: Internal.Heightmap$Type_, arg1: number[]): void;
        func_201614_D(): Internal.ShortList[];
        func_177416_w(): number;
        func_76612_a(arg0: Internal.Entity): void;
        func_177415_c(arg0: number): void;
        func_177432_b(arg0: number): void;
        func_196966_y(): Internal.UpgradeData;
        func_177436_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: boolean): Internal.BlockState;
        func_201579_g(arg0: BlockPos): Internal.CompoundNBT;
        func_223134_j(arg0: BlockPos): Internal.CompoundNBT;
        func_217311_f(): Internal.Collection<Internal.Map$Entry<Internal.Heightmap$Type, Internal.Heightmap>>;
    }
    type IChunk_ = IChunk;
    class CUpdateRecipeBookStatusPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_244318_c(): boolean;
        func_244317_b(): Internal.RecipeBookCategory;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_244319_d(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CUpdateRecipeBookStatusPacket_ = CUpdateRecipeBookStatusPacket;
    class AttachWorldDataEvent extends Internal.AttachDataEvent<Internal.WorldJS> {
        getListenerList(): Internal.ListenerList;
        invoke(): void;
        static readonly EVENT : Internal.Event<((arg0: Internal.AttachWorldDataEvent) => void)>;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttachWorldDataEvent_ = AttachWorldDataEvent;
    class GuiScreenEvent$KeyboardKeyReleasedEvent$Post extends Internal.GuiScreenEvent$KeyboardKeyReleasedEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$KeyboardKeyReleasedEvent$Post_ = GuiScreenEvent$KeyboardKeyReleasedEvent$Post;
    interface ObjectCollection <K> extends Internal.Collection<K>, Internal.ObjectIterable<K> {
        iterator(): Internal.ObjectIterator<K>;
        iterator(): Internal.Iterator<any>;
    }
    type ObjectCollection_<K> = ObjectCollection<K>;
    class SSetPassengersPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186972_b(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_186971_a(): number[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SSetPassengersPacket_ = SSetPassengersPacket;
    class AnvilUpdateEvent extends net.minecraftforge.eventbus.api.Event {
        getPlayer(): Internal.PlayerEntity;
        getListenerList(): Internal.ListenerList;
        getRight(): Internal.ItemStack;
        getName(): string;
        setCost(arg0: number): void;
        getMaterialCost(): number;
        setMaterialCost(arg0: number): void;
        isCancelable(): boolean;
        getCost(): number;
        setOutput(arg0: Internal.ItemStack): void;
        getOutput(): Internal.ItemStack;
        getLeft(): Internal.ItemStack;
        get output(): Internal.ItemStack;
        get cancelable(): boolean;
        get cost(): number;
        get listenerList(): Internal.ListenerList;
        get left(): Internal.ItemStack;
        get name(): string;
        get materialCost(): number;
        get right(): Internal.ItemStack;
        get player(): Internal.PlayerEntity;
        set output(arg0: Internal.ItemStack);
        set cost(arg0: number);
        set materialCost(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AnvilUpdateEvent_ = AnvilUpdateEvent;
    abstract class AbstractCollection <E> extends Document.Object implements Internal.Collection<E> {
        add(arg0: E): boolean;
        removeAll(arg0: Internal.Collection<any>): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<E>;
        size(): number;
        addAll(arg0: Internal.Collection<E>): boolean;
        containsAll(arg0: Internal.Collection<any>): boolean;
        toArray<T_>(arg0: T_[]): T_[];
        toArray(): any[];
        isEmpty(): boolean;
        clear(): void;
        toString(): string;
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.Collection<any>): boolean;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractCollection_<E> = AbstractCollection<E>;
    class EventsJS$ScriptEventHandler extends Document.Object {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EventsJS$ScriptEventHandler_ = EventsJS$ScriptEventHandler;
    class DoublePlantBlockPlacer extends Internal.BlockPlacer {
        func_225567_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.Random): void;
        static readonly field_236443_b_ : Internal.Codec<Internal.DoublePlantBlockPlacer>;
        static readonly field_236444_c_ : Internal.DoublePlantBlockPlacer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DoublePlantBlockPlacer_ = DoublePlantBlockPlacer;
    class PigEntity extends Internal.AnimalEntity implements Internal.IRideable, Internal.IEquipable {
        func_230265_N__(): number;
        func_82171_bF(): boolean;
        func_184762_da(): boolean;
        func_230264_L__(): boolean;
        func_230268_c_(arg0: Internal.LivingEntity): Vec3;
        func_184179_bs(): Internal.Entity;
        func_230267_a__(arg0: Vec3): void;
        func_213352_e(arg0: Vec3): void;
        func_230266_a_(arg0: Internal.SoundCategory_): void;
        static func_234215_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_110257_ck(): boolean;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_241205_ce_(): Vec3;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_241841_a(arg0: Internal.ServerWorld, arg1: Internal.LightningBoltEntity): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.PigEntity;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PigEntity_ = PigEntity;
    abstract class LongBuffer extends Internal.Buffer implements Internal.Comparable<Internal.LongBuffer> {
        hasArray(): boolean;
        compact(): Internal.LongBuffer;
        clear(): Internal.LongBuffer;
        clear(): Internal.Buffer;
        duplicate(): Internal.LongBuffer;
        duplicate(): Internal.Buffer;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.LongBuffer): number;
        asReadOnlyBuffer(): Internal.LongBuffer;
        put(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.LongBuffer;
        put(arg0: number, arg1: number[]): Internal.LongBuffer;
        put(arg0: number, arg1: Internal.LongBuffer, arg2: number, arg3: number): Internal.LongBuffer;
        put(arg0: number[]): Internal.LongBuffer;
        put(arg0: Internal.LongBuffer): Internal.LongBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.LongBuffer;
        put(arg0: number): Internal.LongBuffer;
        put(arg0: number, arg1: number): Internal.LongBuffer;
        static allocate(arg0: number): Internal.LongBuffer;
        rewind(): Internal.LongBuffer;
        rewind(): Internal.Buffer;
        slice(): Internal.LongBuffer;
        slice(): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.LongBuffer;
        array(): number[];
        array(): any;
        hashCode(): number;
        mismatch(arg0: Internal.LongBuffer): number;
        equals(arg0: any): boolean;
        get(arg0: number, arg1: number[]): Internal.LongBuffer;
        get(arg0: number): number;
        get(arg0: number[], arg1: number, arg2: number): Internal.LongBuffer;
        get(arg0: number[]): Internal.LongBuffer;
        get(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.LongBuffer;
        get(): number;
        limit(arg0: number): Internal.Buffer;
        limit(arg0: number): Internal.LongBuffer;
        arrayOffset(): number;
        reset(): Internal.Buffer;
        reset(): Internal.LongBuffer;
        toString(): string;
        position(arg0: number): Internal.LongBuffer;
        position(arg0: number): Internal.Buffer;
        flip(): Internal.Buffer;
        flip(): Internal.LongBuffer;
        isDirect(): boolean;
        static wrap(arg0: number[], arg1: number, arg2: number): Internal.LongBuffer;
        static wrap(arg0: number[]): Internal.LongBuffer;
        mark(): Internal.LongBuffer;
        mark(): Internal.Buffer;
        order(): Internal.ByteOrder;
        get direct(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LongBuffer_ = LongBuffer;
    abstract class PainterObject extends Document.Object implements Internal.SpecialEquality {
        hashCode(): number;
        equals(o: any): boolean;
        update(tag: Internal.CompoundNBT): void;
        toString(): string;
        id(i: string): Internal.PainterObject;
        specialEquals(o: any, shallow: boolean): boolean;
        parent : Internal.PainterObjectStorage;
        visible : boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PainterObject_ = PainterObject;
    class RootCommandNode <S> extends Internal.CommandNode<S> {
        getName(): string;
        listSuggestions(arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        createBuilder(): Internal.ArgumentBuilder<S, any>;
        isValidInput(arg0: string): boolean;
        equals(arg0: any): boolean;
        getExamples(): Internal.Collection<string>;
        getUsageText(): string;
        toString(): string;
        parse(arg0: Internal.StringReader, arg1: Internal.CommandContextBuilder<S>): void;
        get examples(): Internal.Collection<string>;
        get name(): string;
        get usageText(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RootCommandNode_<S> = RootCommandNode<S>;
    class SUpdateTileEntityPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148853_f(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179823_a(): BlockPos;
        func_148857_g(): Internal.CompoundNBT;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SUpdateTileEntityPacket_ = SUpdateTileEntityPacket;
    abstract class OutputStream extends Document.Object implements Internal.Closeable, Internal.Flushable {
        flush(): void;
        static nullOutputStream(): Internal.OutputStream;
        close(): void;
        write(arg0: number[]): void;
        write(arg0: number[], arg1: number, arg2: number): void;
        write(arg0: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OutputStream_ = OutputStream;
    class AddOreProperties extends Document.Object {
        setWorldgenLayer(id: string): void;
        setClusterCount(c: number): void;
        setBlock(id: string): void;
        noSurface : boolean;
        chance : number;
        readonly biomes : Internal.WorldgenEntryList;
        clusterMaxSize : number;
        clusterMinCount : number;
        clusterMaxCount : number;
        minHeight : number;
        maxHeight : number;
        retrogen : number;
        squared : boolean;
        _block : Internal.BlockState;
        readonly spawnsIn : Internal.WorldgenEntryList;
        clusterMinSize : number;
        _worldgenLayer : DecorationGenerationStep;
        set clusterCount(c: number);
        set block(id: string);
        set worldgenLayer(id: string);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AddOreProperties_ = AddOreProperties;
    class BrewingStandTileEntity extends Internal.LockableTileEntity implements Internal.ISidedInventory, Internal.ITickableTileEntity {
        func_70304_b(arg0: number): Internal.ItemStack;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_174888_l(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_73660_a(): void;
        func_174902_m(): boolean[];
        func_180463_a(arg0: Internal.Direction_): number[];
        func_180461_b(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        func_180462_a(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        func_70302_i_(): number;
        func_191420_l(): boolean;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        field_145946_k : number;
        field_184278_m : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BrewingStandTileEntity_ = BrewingStandTileEntity;
    abstract class MonsterEntity extends Internal.CreatureEntity implements Internal.IMob {
        func_213356_f(arg0: Internal.ItemStack): Internal.ItemStack;
        static func_223325_c(arg0: Internal.EntityType<Internal.MonsterEntity>, arg1: Internal.IServerWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        static func_223324_d(arg0: Internal.EntityType<Internal.MonsterEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_230292_f_(arg0: Internal.PlayerEntity): boolean;
        func_70636_d(): void;
        static func_234295_eP_(): Internal.AttributeModifierMap$MutableAttribute;
        static func_223323_a(arg0: Internal.IServerWorld, arg1: BlockPos, arg2: Internal.Random): boolean;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_184176_by(): Internal.SoundCategory;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MonsterEntity_ = MonsterEntity;
    class AddReloadListenerEvent extends net.minecraftforge.eventbus.api.Event {
        getListeners(): Internal.List<Internal.IFutureReloadListener>;
        getListenerList(): Internal.ListenerList;
        getDataPackRegistries(): Internal.DataPackRegistries;
        addListener(arg0: Internal.IFutureReloadListener): void;
        get listeners(): Internal.List<Internal.IFutureReloadListener>;
        get listenerList(): Internal.ListenerList;
        get dataPackRegistries(): Internal.DataPackRegistries;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AddReloadListenerEvent_ = AddReloadListenerEvent;
    class IngredientWithCustomPredicateJS extends Document.Object implements Internal.IngredientJS {
        toJson(): Internal.JsonElement;
        test(stack: Internal.ItemStackJS_): boolean;
        testVanillaItem(i: Internal.Item): boolean;
        getStacks(): Internal.Set<Internal.ItemStackJS>;
        getFirst(): Internal.ItemStackJS;
        getVanillaItems(): Internal.Set<Internal.Item>;
        testVanilla(stack: Internal.ItemStack): boolean;
        isEmpty(): boolean;
        isInvalidRecipeIngredient(): boolean;
        toString(): string;
        getCount(): number;
        getVanillaPredicate(): Internal.Predicate<Internal.ItemStack>;
        readonly predicate : ((arg0: Internal.ItemStack) => boolean);
        readonly ingredient : Internal.IngredientJS;
        readonly uuid : Internal.UUID;
        get invalidRecipeIngredient(): boolean;
        get stacks(): Internal.Set<Internal.ItemStackJS>;
        get count(): number;
        get first(): Internal.ItemStackJS;
        get vanillaItems(): Internal.Set<Internal.Item>;
        get empty(): boolean;
        get vanillaPredicate(): Internal.Predicate<Internal.ItemStack>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IngredientWithCustomPredicateJS_ = IngredientWithCustomPredicateJS;
    abstract class HangingEntity extends Internal.Entity {
        func_174857_n(): BlockPos;
        func_184217_a(arg0: Internal.Mirror_): number;
        func_70518_d(): boolean;
        func_70071_h_(): void;
        func_184229_a(arg0: Internal.Rotation_): number;
        func_70107_b(arg0: number, arg1: number, arg2: number): void;
        func_85031_j(arg0: Internal.Entity): boolean;
        func_213315_a(arg0: Internal.MoverType_, arg1: Vec3): void;
        func_82329_d(): number;
        func_70067_L(): boolean;
        func_174811_aO(): Internal.Direction;
        func_110128_b(arg0: Internal.Entity): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_213323_x_(): void;
        func_70024_g(arg0: number, arg1: number, arg2: number): void;
        func_82330_g(): number;
        func_241841_a(arg0: Internal.ServerWorld, arg1: Internal.LightningBoltEntity): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_184523_o(): void;
        func_70099_a(arg0: Internal.ItemStack, arg1: number): Internal.ItemEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HangingEntity_ = HangingEntity;
    interface IIngredientSerializer <T> {
        parse(arg0: Internal.JsonObject): T;
        parse(arg0: Internal.PacketBuffer): T;
        write(arg0: Internal.PacketBuffer, arg1: T): void;
    }
    type IIngredientSerializer_<T> = IIngredientSerializer<T>;
    class FireworksJS extends Document.Object {
        static of(o: any): Internal.FireworksJS;
        createFireworkRocket(w: Internal.World, x: number, y: number, z: number): Internal.FireworkRocketEntity;
        flight : number;
        lifetime : number;
        readonly explosions : Internal.List<Internal.FireworksJS$Explosion>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FireworksJS_ = FireworksJS;
    class LootPool$Builder extends Document.Object implements Internal.ILootFunctionConsumer<Internal.LootPool$Builder>, Internal.ILootConditionConsumer<Internal.LootPool$Builder> {
        func_216044_b(): Internal.LootPool;
        func_216045_a(arg0: Internal.LootEntry$Builder<any>): Internal.LootPool$Builder;
        func_212841_b_(arg0: Internal.ILootFunction$IBuilder): Internal.LootPool$Builder;
        func_212841_b_(arg0: Internal.ILootFunction$IBuilder): any;
        name(arg0: string): Internal.LootPool$Builder;
        func_212840_b_(arg0: (() => Internal.ILootCondition)): Internal.LootPool$Builder;
        func_212840_b_(arg0: (() => Internal.ILootCondition)): any;
        func_212862_c_(): Internal.LootPool$Builder;
        func_212862_c_(): any;
        func_216046_a(arg0: Internal.IRandomRange): Internal.LootPool$Builder;
        bonusRolls(arg0: number, arg1: number): Internal.LootPool$Builder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootPool$Builder_ = LootPool$Builder;
    class SMoveVehiclePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_186959_d(): number;
        func_186958_e(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186956_c(): number;
        func_186955_b(): number;
        func_186957_a(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SMoveVehiclePacket_ = SMoveVehiclePacket;
    class BlockState extends Internal.AbstractBlock$AbstractBlockState implements Internal.IForgeBlockState {
        static readonly field_235877_b_ : Internal.Codec<Internal.BlockState>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockState_ = BlockState;
    interface Key extends Internal.Serializable {
        getEncoded(): number[];
        getAlgorithm(): string;
        getFormat(): string;
    }
    type Key_ = Key;
    interface IntStream$Builder extends Internal.IntConsumer {
        add(arg0: number): Internal.IntStream$Builder;
        build(): Internal.IntStream;
        accept(arg0: number): void;
    }
    type IntStream$Builder_ = IntStream$Builder;
    class NetworkManager extends Internal.SimpleChannelInboundHandler<Internal.IPacket<any>> {
        getDirection(): Internal.PacketDirection;
        func_179293_l(): void;
        channel(): io.netty.channel.Channel;
        exceptionCaught(arg0: Internal.ChannelHandlerContext, arg1: Internal.Throwable): void;
        func_150731_c(): boolean;
        func_211390_n(): number;
        func_201058_a(arg0: Internal.IPacket<any>, arg1: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>): void;
        func_150730_f(): Internal.ITextComponent;
        func_211393_m(): number;
        func_150718_a(arg0: Internal.ITextComponent_): void;
        channelInactive(arg0: Internal.ChannelHandlerContext): void;
        func_150719_a(arg0: Internal.INetHandler): void;
        static func_181124_a(arg0: Internal.InetAddress, arg1: number, arg2: boolean): Internal.NetworkManager;
        func_179289_a(arg0: number): void;
        static func_150722_a(arg0: Internal.SocketAddress): Internal.NetworkManager;
        channelActive(arg0: Internal.ChannelHandlerContext): void;
        func_150723_a(arg0: Internal.ProtocolType_): void;
        func_74428_b(): void;
        func_150721_g(): void;
        func_150724_d(): boolean;
        func_150729_e(): Internal.INetHandler;
        func_244777_a(arg0: Internal.Cipher, arg1: Internal.Cipher): void;
        func_179290_a(arg0: Internal.IPacket<any>): void;
        func_74430_c(): Internal.SocketAddress;
        func_179291_h(): boolean;
        func_179292_f(): boolean;
        static readonly field_150740_a : Internal.Marker;
        static readonly field_150739_c : Internal.AttributeKey<Internal.ProtocolType>;
        static readonly field_181125_e : Internal.LazyValue<Internal.EpollEventLoopGroup>;
        static readonly field_179296_e : Internal.LazyValue<Internal.DefaultEventLoopGroup>;
        static readonly field_150738_b : Internal.Marker;
        static readonly field_179295_d : Internal.LazyValue<Internal.NioEventLoopGroup>;
        get direction(): Internal.PacketDirection;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NetworkManager_ = NetworkManager;
    interface IMob {
    }
    type IMob_ = IMob;
    class ChunkHolder extends Document.Object implements Internal.IPaperChunkHolder {
        func_219289_k(): boolean;
        mfix$canAdvanceStatus(): boolean;
        func_219303_l(): void;
        func_219292_a(arg0: number): void;
        func_219294_a(arg0: Internal.ChunkPrimerWrapper): void;
        func_219274_a(arg0: Internal.Chunk): void;
        func_219296_a(): Internal.CompletableFuture<Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_219276_a(arg0: Internal.ChunkStatus, arg1: Internal.ChunkManager): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_219297_b(): Internal.CompletableFuture<Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>>;
        static func_219278_b(arg0: number): Internal.ChunkStatus;
        func_219298_c(): Internal.Chunk;
        func_219299_i(): number;
        func_219277_h(): Internal.ChunkPos;
        func_223492_c(): Internal.CompletableFuture<Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_244386_a(arg0: BlockPos): void;
        mfix$getAvailableChunkNow(): Internal.IChunk;
        func_219280_a(arg0: Internal.LightType_, arg1: number): void;
        mfix$getChunkHolderStatus(): Internal.ChunkStatus;
        func_225410_b(arg0: Internal.ChunkStatus): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        static func_219286_c(arg0: number): Internal.ChunkHolder$LocationType;
        func_219285_d(): Internal.ChunkStatus;
        func_219281_j(): number;
        func_219302_f(): Internal.CompletableFuture<Internal.IChunk>;
        func_219300_g(): Internal.ChunkHolder$LocationType;
        func_219287_e(): Internal.IChunk;
        func_219301_a(arg0: Internal.ChunkStatus): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        static readonly field_219307_b : Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        static readonly field_219308_c : Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>;
        field_219315_j : Internal.CompletableFuture<Internal.IChunk>;
        static readonly field_219306_a : Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkHolder_ = ChunkHolder;
    class ChronoField extends Internal.Enum<Internal.ChronoField> implements Internal.TemporalField {
        static valueOf(arg0: string): Internal.ChronoField;
        static values(): Internal.ChronoField[];
        adjustInto<R_>(arg0: R_, arg1: number): R_;
        range(): Internal.ValueRange;
        getRangeUnit(): Internal.TemporalUnit;
        getBaseUnit(): Internal.TemporalUnit;
        rangeRefinedBy(arg0: Internal.TemporalAccessor): Internal.ValueRange;
        getDisplayName(arg0: Internal.Locale): string;
        isTimeBased(): boolean;
        checkValidValue(arg0: number): number;
        checkValidIntValue(arg0: number): number;
        toString(): string;
        isDateBased(): boolean;
        getFrom(arg0: Internal.TemporalAccessor): number;
        isSupportedBy(arg0: Internal.TemporalAccessor): boolean;
        static readonly CLOCK_HOUR_OF_AMPM : Internal.ChronoField;
        static readonly DAY_OF_YEAR : Internal.ChronoField;
        static readonly MICRO_OF_DAY : Internal.ChronoField;
        static readonly ALIGNED_DAY_OF_WEEK_IN_MONTH : Internal.ChronoField;
        static readonly DAY_OF_MONTH : Internal.ChronoField;
        static readonly SECOND_OF_MINUTE : Internal.ChronoField;
        static readonly PROLEPTIC_MONTH : Internal.ChronoField;
        static readonly MILLI_OF_SECOND : Internal.ChronoField;
        static readonly NANO_OF_DAY : Internal.ChronoField;
        static readonly CLOCK_HOUR_OF_DAY : Internal.ChronoField;
        static readonly MINUTE_OF_DAY : Internal.ChronoField;
        static readonly ALIGNED_WEEK_OF_MONTH : Internal.ChronoField;
        static readonly YEAR : Internal.ChronoField;
        static readonly HOUR_OF_DAY : Internal.ChronoField;
        static readonly MILLI_OF_DAY : Internal.ChronoField;
        static readonly ALIGNED_DAY_OF_WEEK_IN_YEAR : Internal.ChronoField;
        static readonly YEAR_OF_ERA : Internal.ChronoField;
        static readonly AMPM_OF_DAY : Internal.ChronoField;
        static readonly NANO_OF_SECOND : Internal.ChronoField;
        static readonly SECOND_OF_DAY : Internal.ChronoField;
        static readonly MICRO_OF_SECOND : Internal.ChronoField;
        static readonly MONTH_OF_YEAR : Internal.ChronoField;
        static readonly EPOCH_DAY : Internal.ChronoField;
        static readonly ERA : Internal.ChronoField;
        static readonly OFFSET_SECONDS : Internal.ChronoField;
        static readonly HOUR_OF_AMPM : Internal.ChronoField;
        static readonly MINUTE_OF_HOUR : Internal.ChronoField;
        static readonly INSTANT_SECONDS : Internal.ChronoField;
        static readonly ALIGNED_WEEK_OF_YEAR : Internal.ChronoField;
        static readonly DAY_OF_WEEK : Internal.ChronoField;
        get baseUnit(): Internal.TemporalUnit;
        get rangeUnit(): Internal.TemporalUnit;
        get timeBased(): boolean;
        get dateBased(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChronoField_ = "nano_of_second" | "nano_of_day" | "micro_of_second" | "micro_of_day" | "milli_of_second" | "milli_of_day" | "second_of_minute" | "second_of_day" | "minute_of_hour" | "minute_of_day" | "hour_of_ampm" | "clock_hour_of_ampm" | "hour_of_day" | "clock_hour_of_day" | "ampm_of_day" | "day_of_week" | "aligned_day_of_week_in_month" | "aligned_day_of_week_in_year" | "day_of_month" | "day_of_year" | "epoch_day" | "aligned_week_of_month" | "aligned_week_of_year" | "month_of_year" | "proleptic_month" | "year_of_era" | "year" | "era" | "instant_seconds" | "offset_seconds" | ChronoField;
    class ItemStackTileEntityRenderer extends Document.Object {
        func_239207_a_(arg0: Internal.ItemStack, arg1: Internal.ItemCameraTransforms$TransformType_, arg2: Internal.MatrixStack, arg3: Internal.IRenderTypeBuffer, arg4: number, arg5: number): void;
        static readonly field_147719_a : Internal.ItemStackTileEntityRenderer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemStackTileEntityRenderer_ = ItemStackTileEntityRenderer;
    class CQueryEntityNBTPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_211720_c(): number;
        func_211721_b(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CQueryEntityNBTPacket_ = CQueryEntityNBTPacket;
    abstract class ForgeRegistryEntry$UncheckedRegistryEntry <V> extends Internal.ForgeRegistryEntry<V> {
        setRegistryName(arg0: ResourceLocation_): any;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ForgeRegistryEntry$UncheckedRegistryEntry_<V> = ForgeRegistryEntry$UncheckedRegistryEntry<V>;
    class SingleJigsawPiece extends Internal.JigsawPiece {
        func_214852_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_): Internal.MutableBoundingBox;
        func_214853_a(): Internal.IJigsawDeserializer<any>;
        func_230378_a_(arg0: Internal.TemplateManager, arg1: Internal.ISeedReader, arg2: Internal.StructureManager, arg3: Internal.ChunkGenerator, arg4: BlockPos, arg5: BlockPos, arg6: Internal.Rotation_, arg7: Internal.MutableBoundingBox, arg8: Internal.Random, arg9: boolean): boolean;
        toString(): string;
        func_214857_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_, arg3: boolean): Internal.List<Internal.Template$BlockInfo>;
        func_214849_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_, arg3: Internal.Random): Internal.List<Internal.Template$BlockInfo>;
        static readonly field_236838_b_ : Internal.Codec<Internal.SingleJigsawPiece>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SingleJigsawPiece_ = SingleJigsawPiece;
    class HoldingPatternPhase extends Internal.Phase {
        func_188660_d(): void;
        func_188659_c(): void;
        func_188652_i(): Internal.PhaseType<Internal.HoldingPatternPhase>;
        func_188650_g(): Vec3;
        func_188655_a(arg0: Internal.EnderCrystalEntity, arg1: BlockPos, arg2: Internal.DamageSource, arg3: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HoldingPatternPhase_ = HoldingPatternPhase;
    class PineFoliagePlacer extends Internal.FoliagePlacer {
        func_230374_a_(arg0: Internal.Random, arg1: number, arg2: Internal.BaseTreeFeatureConfig): number;
        func_230376_a_(arg0: Internal.Random, arg1: number): number;
        static readonly field_236784_a_ : Internal.Codec<Internal.PineFoliagePlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PineFoliagePlacer_ = PineFoliagePlacer;
    class ItemEvent extends Internal.EntityEvent {
        getListenerList(): Internal.ListenerList;
        getEntityItem(): Internal.ItemEntity;
        get entityItem(): Internal.ItemEntity;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemEvent_ = ItemEvent;
    interface PointFreeRule {
        rewriteOrNop<A, B>(arg0: Internal.View<A, B>): Internal.View<A, B>;
        rewriteOrNop<A>(arg0: Internal.Type<A>, arg1: Internal.PointFree<A>): Internal.PointFree<A>;
        rewrite<A>(arg0: Internal.Type<A>, arg1: Internal.PointFree<A>): Internal.Optional<Internal.PointFree<A>>;
        rewrite<A, B>(arg0: Internal.View<A, B>): Internal.Optional<Internal.View<A, B>>;
    }
    type PointFreeRule_ = PointFreeRule;
    class CocoaTreeDecorator extends Internal.TreeDecorator {
        func_225576_a_(arg0: Internal.ISeedReader, arg1: Internal.Random, arg2: Internal.List<BlockPos>, arg3: Internal.List<BlockPos>, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox): void;
        static readonly field_236866_a_ : Internal.Codec<Internal.CocoaTreeDecorator>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CocoaTreeDecorator_ = CocoaTreeDecorator;
    class LinearPosTest extends Internal.PosRuleTest {
        func_230385_a_(arg0: BlockPos, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Random): boolean;
        static readonly field_237087_a_ : Internal.Codec<Internal.LinearPosTest>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LinearPosTest_ = LinearPosTest;
    class ModelManager extends Internal.ReloadListener<any> implements Internal.AutoCloseable {
        getModel(arg0: ResourceLocation_): Internal.IBakedModel;
        func_229355_a_(arg0: number): void;
        func_174954_c(): Internal.BlockModelShapes;
        getResourceType(): Internal.IResourceType;
        func_229356_a_(arg0: ResourceLocation_): Internal.AtlasTexture;
        func_174953_a(arg0: Internal.ModelResourceLocation): Internal.IBakedModel;
        func_174951_a(): Internal.IBakedModel;
        close(): void;
        func_224742_a(arg0: Internal.BlockState, arg1: Internal.BlockState): boolean;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModelManager_ = ModelManager;
    class LootTable$Builder extends Document.Object implements Internal.ILootFunctionConsumer<Internal.LootTable$Builder> {
        func_212841_b_(arg0: Internal.ILootFunction$IBuilder): any;
        func_212841_b_(arg0: Internal.ILootFunction$IBuilder): Internal.LootTable$Builder;
        func_216040_a(arg0: Internal.LootPool$Builder): Internal.LootTable$Builder;
        func_216038_b(): Internal.LootTable;
        func_216039_a(arg0: Internal.LootParameterSet): Internal.LootTable$Builder;
        func_212862_c_(): any;
        func_212862_c_(): Internal.LootTable$Builder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootTable$Builder_ = LootTable$Builder;
    interface IForgeVertexBuilder {
        getVertexBuilder(): Internal.IVertexBuilder;
        applyBakedLighting(arg0: number, arg1: Internal.ByteBuffer): number;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number[], arg3: number, arg4: number, arg5: number, arg6: number, arg7: number[], arg8: number, arg9: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        applyBakedNormals(arg0: Internal.Vector3f, arg1: Internal.ByteBuffer, arg2: Internal.Matrix3f): void;
    }
    type IForgeVertexBuilder_ = IForgeVertexBuilder;
    interface ChannelConfig {
        setWriteBufferLowWaterMark(arg0: number): Internal.ChannelConfig;
        setMessageSizeEstimator(arg0: Internal.MessageSizeEstimator): Internal.ChannelConfig;
        getWriteBufferLowWaterMark(): number;
        getMessageSizeEstimator(): Internal.MessageSizeEstimator;
        setRecvByteBufAllocator(arg0: Internal.RecvByteBufAllocator): Internal.ChannelConfig;
        getOption<T>(arg0: Internal.ChannelOption<T>): T;
        isAutoClose(): boolean;
        getRecvByteBufAllocator<T>(): T;
        getAllocator(): Internal.ByteBufAllocator;
        setAllocator(arg0: Internal.ByteBufAllocator): Internal.ChannelConfig;
        isAutoRead(): boolean;
        setOptions(arg0: Internal.Map_<Internal.ChannelOption_<any>, any>): boolean;
        setConnectTimeoutMillis(arg0: number): Internal.ChannelConfig;
        setWriteBufferWaterMark(arg0: Internal.WriteBufferWaterMark): Internal.ChannelConfig;
        setOption<T>(arg0: Internal.ChannelOption<T>, arg1: T): boolean;
        getConnectTimeoutMillis(): number;
        setWriteSpinCount(arg0: number): Internal.ChannelConfig;
        setWriteBufferHighWaterMark(arg0: number): Internal.ChannelConfig;
        getMaxMessagesPerRead(): number;
        getWriteBufferHighWaterMark(): number;
        setAutoRead(arg0: boolean): Internal.ChannelConfig;
        getWriteSpinCount(): number;
        setMaxMessagesPerRead(arg0: number): Internal.ChannelConfig;
        getOptions(): Internal.Map<Internal.ChannelOption<any>, any>;
        getWriteBufferWaterMark(): Internal.WriteBufferWaterMark;
        setAutoClose(arg0: boolean): Internal.ChannelConfig;
    }
    type ChannelConfig_ = ChannelConfig;
    class PlaySoundSourceEvent extends Internal.SoundEvent$SoundSourceEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlaySoundSourceEvent_ = PlaySoundSourceEvent;
    class GuiScreenEvent$KeyboardKeyPressedEvent$Pre extends Internal.GuiScreenEvent$KeyboardKeyPressedEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$KeyboardKeyPressedEvent$Pre_ = GuiScreenEvent$KeyboardKeyPressedEvent$Pre;
    class FluidState extends Internal.StateHolder<Internal.Fluid, Internal.FluidState> implements Internal.IForgeFluidState {
        func_206880_a(arg0: Internal.World, arg1: BlockPos): void;
        func_206881_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Random): void;
        func_204521_c(): Internal.IParticleData;
        func_206891_b(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Random): void;
        func_210200_l(): number;
        func_205586_a(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_206884_a(arg0: Internal.ITag<Internal.Fluid>): boolean;
        func_223408_f(): number;
        func_206890_h(): boolean;
        func_206886_c(): Internal.Fluid;
        func_206882_g(): number;
        func_206883_i(): Internal.BlockState;
        func_206888_e(): boolean;
        func_206889_d(): boolean;
        func_215677_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Fluid, arg3: Internal.Direction_): boolean;
        func_215679_a(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        func_215676_d(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        func_215673_c(arg0: Internal.IBlockReader, arg1: BlockPos): Vec3;
        static readonly field_237213_a_ : Internal.Codec<Internal.FluidState>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FluidState_ = FluidState;
    interface IDrawableStatic extends Internal.IDrawable {
        draw(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
    }
    type IDrawableStatic_ = IDrawableStatic;
    interface PrivilegedAction <T> {
        run(): T;
    }
    type PrivilegedAction_<T> = (() => T) | PrivilegedAction<T>;
    interface INestedGuiEventHandler extends Internal.IGuiEventListener {
        func_231039_at__(): Internal.List<Internal.IGuiEventListener>;
        func_231037_b__(arg0: boolean): void;
        func_231035_a_(arg0: Internal.IGuiEventListener): void;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        func_231041_ay__(): boolean;
        func_231048_c_(arg0: number, arg1: number, arg2: number): boolean;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_231046_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231044_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231049_c__(arg0: boolean): boolean;
        func_241217_q_(): Internal.IGuiEventListener;
    }
    type INestedGuiEventHandler_ = INestedGuiEventHandler;
    interface MessageSender {
        setStatusMessage(message: Internal.ITextComponent_): void;
        getName(): Internal.Text;
        getDisplayName(): Internal.Text;
        tell(arg0: Internal.ITextComponent_): void;
        runCommand(arg0: string): number;
        runCommandSilent(command: string): number;
    }
    type MessageSender_ = MessageSender;
    class CapabilityDispatcher extends Document.Object implements Internal.INBTSerializable<Internal.CompoundNBT>, Internal.ICapabilityProvider {
        serializeNBT(): Internal.CompoundNBT;
        serializeNBT(): Internal.INBT;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        deserializeNBT(arg0: Internal.CompoundNBT): void;
        deserializeNBT(arg0: Internal.INBT): void;
        invalidate(): void;
        areCompatible(arg0: Internal.CapabilityDispatcher): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CapabilityDispatcher_ = CapabilityDispatcher;
    interface LongBidirectionalIterator extends Internal.LongIterator, Internal.ObjectBidirectionalIterator<number> {
        previousLong(): number;
        previous(): any;
        previous(): number;
        back(arg0: number): number;
        skip(arg0: number): number;
    }
    type LongBidirectionalIterator_ = LongBidirectionalIterator;
    interface IExtensibleEnum {
        init(): void;
    }
    type IExtensibleEnum_ = IExtensibleEnum;
    class EntityAIDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_217682_a(arg0: number, arg1: Internal.List<Internal.EntityAIDebugRenderer$Entry>): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityAIDebugRenderer_ = EntityAIDebugRenderer;
    class IntegerProperty extends Internal.Property<number> {
        static func_177719_a(arg0: string, arg1: number, arg2: number): Internal.IntegerProperty;
        equals(arg0: any): boolean;
        func_185929_b(arg0: string): Internal.Optional<number>;
        func_177700_c(): Internal.Collection<number>;
        func_177702_a(arg0: number): string;
        func_177702_a(arg0: Internal.Comparable<any>): string;
        func_206906_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IntegerProperty_ = IntegerProperty;
    class Template$BlockInfo extends Document.Object {
        toString(): string;
        readonly field_186242_a : BlockPos;
        readonly field_186243_b : Internal.BlockState;
        readonly field_186244_c : Internal.CompoundNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Template$BlockInfo_ = Template$BlockInfo;
    class FogRenderer$FogType extends Internal.Enum<Internal.FogRenderer$FogType> {
        static valueOf(arg0: string): Internal.FogRenderer$FogType;
        static values(): Internal.FogRenderer$FogType[];
        static readonly FOG_TERRAIN : Internal.FogRenderer$FogType;
        static readonly FOG_SKY : Internal.FogRenderer$FogType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FogRenderer$FogType_ = "fog_sky" | "fog_terrain" | FogRenderer$FogType;
    class InputUpdateEvent extends Internal.PlayerEvent {
        getListenerList(): Internal.ListenerList;
        getMovementInput(): Internal.MovementInput;
        get listenerList(): Internal.ListenerList;
        get movementInput(): Internal.MovementInput;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InputUpdateEvent_ = InputUpdateEvent;
    class ImmutableMap$Builder <K, V> extends Document.Object {
        build(): Internal.ImmutableMap<K, V>;
        putAll(arg0: Internal.Iterable<Internal.Map$Entry<K, V>>): Internal.ImmutableMap$Builder<K, V>;
        putAll(arg0: Internal.Map_<K, V>): Internal.ImmutableMap$Builder<K, V>;
        orderEntriesByValue(arg0: ((arg0: any) => boolean)): Internal.ImmutableMap$Builder<K, V>;
        put(arg0: Internal.Map$Entry<K, V>): Internal.ImmutableMap$Builder<K, V>;
        put(arg0: K, arg1: V): Internal.ImmutableMap$Builder<K, V>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableMap$Builder_<K, V> = ImmutableMap$Builder<K, V>;
    interface IToast {
        func_230445_a_(): number;
        func_230444_a_(arg0: Internal.MatrixStack, arg1: Internal.ToastGui, arg2: number): Internal.IToast$Visibility;
        func_238540_d_(): number;
        func_193652_b(): any;
    }
    type IToast_ = IToast;
    class BlockRenderPass extends Internal.Enum<Internal.BlockRenderPass> {
        static valueOf(name: string): Internal.BlockRenderPass;
        endDrawing(): void;
        static values(): Internal.BlockRenderPass[];
        startDrawing(): void;
        isTranslucent(): boolean;
        static readonly CUTOUT : Internal.BlockRenderPass;
        static readonly TRANSLUCENT : Internal.BlockRenderPass;
        static readonly CUTOUT_MIPPED : Internal.BlockRenderPass;
        static readonly TRIPWIRE : Internal.BlockRenderPass;
        static readonly VALUES : Internal.BlockRenderPass[];
        static readonly COUNT : 5;
        static readonly SOLID : Internal.BlockRenderPass;
        get translucent(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockRenderPass_ = "solid" | "cutout" | "cutout_mipped" | "translucent" | "tripwire" | BlockRenderPass;
    class InformationJEIEventJS extends Internal.EventJS {
        add(o: any, s: any): void;
        addForType<T_>(type: Internal.IIngredientType<T_>, o: any, s: any): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InformationJEIEventJS_ = InformationJEIEventJS;
    class ClickType extends Internal.Enum<Internal.ClickType> {
        static valueOf(arg0: string): Internal.ClickType;
        static values(): Internal.ClickType[];
        static readonly QUICK_MOVE : Internal.ClickType;
        static readonly SWAP : Internal.ClickType;
        static readonly PICKUP_ALL : Internal.ClickType;
        static readonly THROW : Internal.ClickType;
        static readonly QUICK_CRAFT : Internal.ClickType;
        static readonly PICKUP : Internal.ClickType;
        static readonly CLONE : Internal.ClickType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClickType_ = "pickup" | "quick_move" | "swap" | "clone" | "throw" | "quick_craft" | "pickup_all" | ClickType;
    class IntArrayNBT extends Internal.CollectionNBT<Internal.IntNBT> {
        add(arg0: number, arg1: any): void;
        add(arg0: number, arg1: Internal.IntNBT): void;
        add(arg0: number, arg1: Internal.INBT): void;
        set(arg0: number, arg1: Internal.INBT): Internal.INBT;
        set(arg0: number, arg1: Internal.IntNBT): Internal.IntNBT;
        set(arg0: number, arg1: any): any;
        clear(): void;
        remove(arg0: number): Internal.IntNBT;
        remove(arg0: number): any;
        remove(arg0: number): Internal.INBT;
        func_150302_c(): number[];
        func_74737_b(): Internal.IntArrayNBT;
        func_74737_b(): Internal.INBT;
        size(): number;
        func_230528_d__(): number;
        func_74732_a(): number;
        hashCode(): number;
        func_218660_b(arg0: number, arg1: Internal.INBT): boolean;
        func_74734_a(arg0: Internal.DataOutput): void;
        equals(arg0: any): boolean;
        get(arg0: number): Internal.IntNBT;
        get(arg0: number): any;
        toString(): string;
        func_225647_b_(): Internal.INBTType<Internal.IntArrayNBT>;
        func_199850_a(arg0: string, arg1: number): Internal.ITextComponent;
        func_218659_a(arg0: number, arg1: Internal.INBT): boolean;
        static readonly field_229690_a_ : Internal.INBTType<Internal.IntArrayNBT>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IntArrayNBT_ = IntArrayNBT;
    class VillageSectionsDebugRender extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_239379_b_(arg0: Internal.SectionPos): void;
        func_239378_a_(arg0: Internal.SectionPos): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VillageSectionsDebugRender_ = VillageSectionsDebugRender;
    class BiomeLoadingEvent extends net.minecraftforge.eventbus.api.Event {
        getSpawns(): Internal.MobSpawnInfoBuilder;
        getDepth(): number;
        getName(): ResourceLocation;
        setScale(arg0: number): void;
        getCategory(): Internal.Biome$Category;
        setClimate(arg0: Internal.Biome$Climate): void;
        setEffects(arg0: Internal.BiomeAmbience): void;
        getEffects(): Internal.BiomeAmbience;
        getListenerList(): Internal.ListenerList;
        getClimate(): Internal.Biome$Climate;
        getScale(): number;
        setCategory(arg0: Internal.Biome$Category_): void;
        getGeneration(): Internal.BiomeGenerationSettingsBuilder;
        setDepth(arg0: number): void;
        get generation(): Internal.BiomeGenerationSettingsBuilder;
        get effects(): Internal.BiomeAmbience;
        get depth(): number;
        get listenerList(): Internal.ListenerList;
        get name(): ResourceLocation;
        get scale(): number;
        get climate(): Internal.Biome$Climate;
        get category(): Internal.Biome$Category;
        get spawns(): Internal.MobSpawnInfoBuilder;
        set effects(arg0: Internal.BiomeAmbience);
        set depth(arg0: number);
        set scale(arg0: number);
        set climate(arg0: Internal.Biome$Climate);
        set category(arg0: Internal.Biome$Category_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BiomeLoadingEvent_ = BiomeLoadingEvent;
    class SSpawnMobPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_186891_e(): number;
        func_186893_g(): number;
        func_186892_f(): number;
        func_149031_k(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149025_e(): number;
        func_149024_d(): number;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_149026_i(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149030_m(): number;
        func_149033_j(): number;
        func_149032_n(): number;
        func_149028_l(): number;
        func_186890_c(): Internal.UUID;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SSpawnMobPacket_ = SSpawnMobPacket;
    interface VariableBlockLightHandler {
        getCustomLightPositions(arg0: number, arg1: number): Internal.Collection<BlockPos>;
        getLightLevel(arg0: number, arg1: number, arg2: number): number;
    }
    type VariableBlockLightHandler_ = VariableBlockLightHandler;
    class EnderCrystalEntity extends Internal.Entity {
        func_174812_G(): void;
        func_184516_a(arg0: BlockPos): void;
        func_184517_a(arg0: boolean): void;
        func_213297_N(): Internal.IPacket<any>;
        func_70067_L(): boolean;
        func_184520_k(): boolean;
        func_70071_h_(): void;
        func_70112_a(arg0: number): boolean;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_184518_j(): BlockPos;
        field_70261_a : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EnderCrystalEntity_ = EnderCrystalEntity;
    class GuiScreenEvent$MouseScrollEvent$Pre extends Internal.GuiScreenEvent$MouseScrollEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$MouseScrollEvent$Pre_ = GuiScreenEvent$MouseScrollEvent$Pre;
    class FMLServerStartingEvent extends Internal.ServerLifecycleEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FMLServerStartingEvent_ = FMLServerStartingEvent;
    abstract class SpellcastingIllagerEntity extends Internal.AbstractIllagerEntity {
        func_193081_a(arg0: Internal.SpellcastingIllagerEntity$SpellType_): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70071_h_(): void;
        func_193077_p(): Internal.AbstractIllagerEntity$ArmPose;
        func_193082_dl(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpellcastingIllagerEntity_ = SpellcastingIllagerEntity;
    class SChunkDataPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_189554_f(): Internal.List<Internal.CompoundNBT>;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186946_a(): Internal.PacketBuffer;
        func_149271_f(): number;
        func_149273_e(): number;
        func_149274_i(): boolean;
        func_218708_a(arg0: Internal.PacketBuffer, arg1: Internal.Chunk, arg2: number): number;
        func_149276_g(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_244296_i(): number[];
        func_218710_g(): Internal.CompoundNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SChunkDataPacket_ = SChunkDataPacket;
    interface Constable {
        describeConstable(): Internal.Optional<Internal.ConstantDesc>;
    }
    type Constable_ = Constable;
    interface MatchResult {
        groupCount(): number;
        hasMatch(): boolean;
        start(): number;
        start(arg0: string): number;
        start(arg0: number): number;
        namedGroups(): Internal.Map<string, number>;
        end(arg0: string): number;
        end(arg0: number): number;
        end(): number;
        group(arg0: number): string;
        group(arg0: string): string;
        group(): string;
    }
    type MatchResult_ = MatchResult;
    class PillagerEntity extends Internal.AbstractIllagerEntity implements Internal.ICrossbowUser {
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        func_213671_a(arg0: boolean): void;
        func_213660_a(arg0: number, arg1: boolean): void;
        func_174820_d(arg0: number, arg1: Internal.ItemStack): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_193077_p(): Internal.AbstractIllagerEntity$ArmPose;
        func_230280_a_(arg0: Internal.ShootableItem): boolean;
        func_230284_a_(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: Internal.ProjectileEntity, arg3: number): void;
        func_213654_dW(): Internal.SoundEvent;
        func_70641_bl(): number;
        func_230283_U__(): void;
        static func_234296_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_213675_dX(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        func_184191_r(arg0: Internal.Entity): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PillagerEntity_ = PillagerEntity;
    interface IBiomeMagnifier {
        func_225532_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.BiomeManager$IBiomeReader): Internal.Biome;
    }
    type IBiomeMagnifier_ = IBiomeMagnifier;
    interface ContainerType$IFactory <T> {
        create(arg0: number, arg1: Internal.PlayerInventory): T;
    }
    type ContainerType$IFactory_<T> = ContainerType$IFactory<T>;
    class AttachedData extends Internal.HashMap<string, any> {
        getParent(): any;
        get parent(): any;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttachedData_ = AttachedData;
    class Direction$Plane extends Internal.Enum<Internal.Direction$Plane> implements Internal.Iterable<Internal.Direction>, Internal.Predicate<Internal.Direction> {
        iterator(): Internal.Iterator<Internal.Direction>;
        func_239636_a_(): Internal.Stream<Internal.Direction>;
        test(arg0: any): boolean;
        test(arg0: Internal.Direction_): boolean;
        static valueOf(arg0: string): Internal.Direction$Plane;
        static values(): Internal.Direction$Plane[];
        func_179518_a(arg0: Internal.Random): Internal.Direction;
        func_244803_b(arg0: Internal.Random): Internal.Direction$Axis;
        static readonly VERTICAL : Internal.Direction$Plane;
        static readonly HORIZONTAL : Internal.Direction$Plane;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Direction$Plane_ = "horizontal" | "vertical" | Direction$Plane;
    class ChunkSection extends Document.Object implements Internal.ExtendedChunkSection {
        func_222633_j(): number;
        getKnownTransparency(arg0: number): number;
        func_235962_a_(arg0: ((arg0: Internal.BlockState) => boolean)): boolean;
        func_222629_a(arg0: number, arg1: number, arg2: number, arg3: Internal.BlockState): Internal.BlockState;
        func_186049_g(): Internal.PalettedContainer<Internal.BlockState>;
        func_222635_a(): void;
        func_222634_a(arg0: Internal.PacketBuffer): void;
        func_76663_a(): boolean;
        func_177485_a(arg0: number, arg1: number, arg2: number): Internal.BlockState;
        func_177484_a(arg0: number, arg1: number, arg2: number, arg3: Internal.BlockState, arg4: boolean): Internal.BlockState;
        func_76672_e(): void;
        func_76675_b(): boolean;
        static func_222628_a(arg0: Internal.ChunkSection): boolean;
        func_222637_b(): void;
        func_222632_g(): number;
        func_222630_b(arg0: Internal.PacketBuffer): void;
        hasOpaqueBlocks(): boolean;
        func_206915_b(): boolean;
        func_206914_b(arg0: number, arg1: number, arg2: number): Internal.FluidState;
        func_206917_d(): boolean;
        getBitsetForColumn(arg0: number, arg1: number): number;
        readonly field_177488_d : Internal.PalettedContainer<Internal.BlockState>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkSection_ = ChunkSection;
    class SAnimateHandPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148977_d(): number;
        func_148978_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SAnimateHandPacket_ = SAnimateHandPacket;
    interface INoiseGenerator {
        func_215460_a(arg0: number, arg1: number, arg2: number, arg3: number): number;
    }
    type INoiseGenerator_ = INoiseGenerator;
    class RenderState$TexturingState extends Internal.RenderState {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$TexturingState_ = RenderState$TexturingState;
    interface App2 <F, A, B> {
    }
    type App2_<F, A, B> = App2<F, A, B>;
    class GuiScreenEvent$BackgroundDrawnEvent extends Internal.GuiScreenEvent {
        getListenerList(): Internal.ListenerList;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$BackgroundDrawnEvent_ = GuiScreenEvent$BackgroundDrawnEvent;
    interface IWorldReader extends Internal.IBlockDisplayReader, Internal.ICollisionReader, Internal.BiomeManager$IBiomeReader {
        func_175667_e(arg0: BlockPos): boolean;
        func_201696_r(arg0: BlockPos): number;
        func_212866_a_(arg0: number, arg1: number): Internal.IChunk;
        func_225523_d_(): Internal.BiomeManager;
        func_175627_a(arg0: BlockPos, arg1: Internal.Direction_): number;
        func_175623_d(arg0: BlockPos): boolean;
        func_225604_a_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_201671_F(arg0: BlockPos): boolean;
        func_205049_d(arg0: BlockPos, arg1: number): number;
        func_175707_a(arg0: BlockPos, arg1: BlockPos): boolean;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
        func_217344_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        func_217348_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus): Internal.IChunk;
        func_205052_D(arg0: BlockPos): number;
        func_72953_d(arg0: Internal.AxisAlignedBB): boolean;
        func_181545_F(): number;
        func_226691_t_(arg0: BlockPos): Internal.Biome;
        func_234939_c_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_175657_ab(): number;
        func_225525_a_(arg0: BlockPos, arg1: Internal.ColorResolver): number;
        func_230315_m_(): Internal.DimensionType;
        func_217353_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus, arg3: boolean): Internal.IChunk;
        func_201676_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_225522_c_(arg0: number, arg1: number): Internal.IBlockReader;
        func_201670_d(): boolean;
        func_217349_x(arg0: BlockPos): Internal.IChunk;
        func_175710_j(arg0: BlockPos): boolean;
        isAreaLoaded(arg0: BlockPos, arg1: number): boolean;
        func_217354_b(arg0: number, arg1: number): boolean;
    }
    type IWorldReader_ = IWorldReader;
    class StraightTrunkPlacer extends Internal.AbstractTrunkPlacer {
        func_230382_a_(arg0: Internal.IWorldGenerationReader, arg1: Internal.Random, arg2: number, arg3: BlockPos, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox, arg6: Internal.BaseTreeFeatureConfig): Internal.List<Internal.FoliagePlacer$Foliage>;
        static readonly field_236903_a_ : Internal.Codec<Internal.StraightTrunkPlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StraightTrunkPlacer_ = StraightTrunkPlacer;
    class CommandEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getException(): Internal.Throwable;
        getParseResults(): Internal.ParseResults<Internal.CommandSource>;
        isCancelable(): boolean;
        setException(arg0: Internal.Throwable): void;
        setParseResults(arg0: Internal.ParseResults<Internal.CommandSource>): void;
        get exception(): Internal.Throwable;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get parseResults(): Internal.ParseResults<Internal.CommandSource>;
        set exception(arg0: Internal.Throwable);
        set parseResults(arg0: Internal.ParseResults<Internal.CommandSource>);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandEvent_ = CommandEvent;
    class SimplePlayerEventJS extends Internal.PlayerEventJS {
        getEntity(): Internal.EntityJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SimplePlayerEventJS_ = SimplePlayerEventJS;
    class ChunkDataEvent$Load extends Internal.ChunkDataEvent {
        getListenerList(): Internal.ListenerList;
        getStatus(): Internal.ChunkStatus$Type;
        get listenerList(): Internal.ListenerList;
        get status(): Internal.ChunkStatus$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkDataEvent$Load_ = ChunkDataEvent$Load;
    interface IIngredientSubtypeInterpreter <T> {
        apply(arg0: T, arg1: Internal.UidContext_): string;
    }
    type IIngredientSubtypeInterpreter_<T> = ((arg0: T, arg1: Internal.UidContext) => string) | IIngredientSubtypeInterpreter<T>;
    class IllusionerEntity extends Internal.SpellcastingIllagerEntity implements Internal.IRangedAttackMob {
        func_213654_dW(): Internal.SoundEvent;
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        func_213660_a(arg0: number, arg1: boolean): void;
        static func_234293_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_193098_a(arg0: number): Vec3[];
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70636_d(): void;
        func_193077_p(): Internal.AbstractIllagerEntity$ArmPose;
        func_184191_r(arg0: Internal.Entity): boolean;
        func_184177_bl(): Internal.AxisAlignedBB;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IllusionerEntity_ = IllusionerEntity;
    abstract class AbstractGroupFishEntity extends Internal.AbstractFishEntity {
        func_212811_dD(): boolean;
        func_212810_a(arg0: Internal.Stream<Internal.AbstractGroupFishEntity>): void;
        func_70641_bl(): number;
        func_203704_dv(): number;
        func_212808_dC(): void;
        func_212803_a(arg0: Internal.AbstractGroupFishEntity): Internal.AbstractGroupFishEntity;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70071_h_(): void;
        func_212802_dB(): boolean;
        func_212809_dF(): boolean;
        func_212805_dG(): void;
        func_212812_dE(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractGroupFishEntity_ = AbstractGroupFishEntity;
    interface IFocusFactory {
        createFocus<V>(arg0: Internal.IFocus$Mode_, arg1: V): Internal.IFocus<V>;
    }
    type IFocusFactory_ = IFocusFactory;
    class PlayerChatEventJS extends Internal.PlayerEventJS {
        getMessage(): string;
        setMessage(text: Internal.ITextComponent_): void;
        getEntity(): Internal.EntityJS;
        getUsername(): string;
        canCancel(): boolean;
        component : Internal.ITextComponent;
        get message(): string;
        get entity(): Internal.EntityJS;
        get username(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerChatEventJS_ = PlayerChatEventJS;
    class RequiredArgumentBuilder <S, T> extends Internal.ArgumentBuilder<S, Internal.RequiredArgumentBuilder<S, T>> {
        suggests(arg0: ((arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder) => Internal.CompletableFuture<Internal.Suggestions>)): Internal.RequiredArgumentBuilder<S, Internal.RequiredArgumentBuilder<S, Internal.RequiredArgumentBuilder<S, T>>>;
        static argument<S_, T_>(arg0: string, arg1: Internal.ArgumentType<T_>): Internal.RequiredArgumentBuilder<S_, T_>;
        getName(): string;
        build(): Internal.ArgumentCommandNode<S, Internal.RequiredArgumentBuilder<S, Internal.RequiredArgumentBuilder<S, T>>>;
        build(): Internal.CommandNode<any>;
        getType(): Internal.ArgumentType<Internal.RequiredArgumentBuilder<S, Internal.RequiredArgumentBuilder<S, T>>>;
        getSuggestionsProvider(): Internal.SuggestionProvider<S>;
        get suggestionsProvider(): Internal.SuggestionProvider<S>;
        get name(): string;
        get type(): Internal.ArgumentType<Internal.RequiredArgumentBuilder<S, Internal.RequiredArgumentBuilder<S, T>>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RequiredArgumentBuilder_<S, T> = RequiredArgumentBuilder<S, T>;
    class SKeepAlivePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149134_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SKeepAlivePacket_ = SKeepAlivePacket;
    class VarHandle$AccessMode extends Internal.Enum<Internal.VarHandle$AccessMode> {
        static valueOf(arg0: string): Internal.VarHandle$AccessMode;
        static valueFromMethodName(arg0: string): Internal.VarHandle$AccessMode;
        static values(): Internal.VarHandle$AccessMode[];
        methodName(): string;
        static readonly WEAK_COMPARE_AND_SET : Internal.VarHandle$AccessMode;
        static readonly GET_VOLATILE : Internal.VarHandle$AccessMode;
        static readonly SET : Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_OR_ACQUIRE : Internal.VarHandle$AccessMode;
        static readonly GET_AND_ADD : Internal.VarHandle$AccessMode;
        static readonly GET_AND_SET : Internal.VarHandle$AccessMode;
        static readonly GET_ACQUIRE : Internal.VarHandle$AccessMode;
        static readonly GET_AND_ADD_RELEASE : Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_AND_ACQUIRE : Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_XOR_ACQUIRE : Internal.VarHandle$AccessMode;
        static readonly GET_AND_ADD_ACQUIRE : Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_OR_RELEASE : Internal.VarHandle$AccessMode;
        static readonly SET_OPAQUE : Internal.VarHandle$AccessMode;
        static readonly WEAK_COMPARE_AND_SET_ACQUIRE : Internal.VarHandle$AccessMode;
        static readonly COMPARE_AND_SET : Internal.VarHandle$AccessMode;
        static readonly COMPARE_AND_EXCHANGE_ACQUIRE : Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_AND : Internal.VarHandle$AccessMode;
        static readonly SET_VOLATILE : Internal.VarHandle$AccessMode;
        static readonly COMPARE_AND_EXCHANGE_RELEASE : Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_XOR : Internal.VarHandle$AccessMode;
        static readonly WEAK_COMPARE_AND_SET_PLAIN : Internal.VarHandle$AccessMode;
        static readonly SET_RELEASE : Internal.VarHandle$AccessMode;
        static readonly COMPARE_AND_EXCHANGE : Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_OR : Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_AND_RELEASE : Internal.VarHandle$AccessMode;
        static readonly WEAK_COMPARE_AND_SET_RELEASE : Internal.VarHandle$AccessMode;
        static readonly GET_AND_SET_RELEASE : Internal.VarHandle$AccessMode;
        static readonly GET : Internal.VarHandle$AccessMode;
        static readonly GET_AND_SET_ACQUIRE : Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_XOR_RELEASE : Internal.VarHandle$AccessMode;
        static readonly GET_OPAQUE : Internal.VarHandle$AccessMode;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VarHandle$AccessMode_ = "get" | "set" | "get_volatile" | "set_volatile" | "get_acquire" | "set_release" | "get_opaque" | "set_opaque" | "compare_and_set" | "compare_and_exchange" | "compare_and_exchange_acquire" | "compare_and_exchange_release" | "weak_compare_and_set_plain" | "weak_compare_and_set" | "weak_compare_and_set_acquire" | "weak_compare_and_set_release" | "get_and_set" | "get_and_set_acquire" | "get_and_set_release" | "get_and_add" | "get_and_add_acquire" | "get_and_add_release" | "get_and_bitwise_or" | "get_and_bitwise_or_release" | "get_and_bitwise_or_acquire" | "get_and_bitwise_and" | "get_and_bitwise_and_release" | "get_and_bitwise_and_acquire" | "get_and_bitwise_xor" | "get_and_bitwise_xor_release" | "get_and_bitwise_xor_acquire" | VarHandle$AccessMode;
    class ItemRightClickEmptyEventJS extends Internal.PlayerEventJS {
        getHand(): Hand;
        getItem(): Internal.ItemStackJS;
        getEntity(): Internal.EntityJS;
        get item(): Internal.ItemStackJS;
        get entity(): Internal.EntityJS;
        get hand(): Hand;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemRightClickEmptyEventJS_ = ItemRightClickEmptyEventJS;
    interface Multiset <E> extends Internal.Collection<E> {
        add(arg0: E, arg1: number): number;
        add(arg0: E): boolean;
        forEachEntry(arg0: ((arg0: E, arg1: number) => void)): void;
        entrySet(): Internal.Set<Internal.Multiset$Entry<E>>;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: ((arg0: E) => void)): void;
        containsAll(arg0: Internal.Collection<any>): boolean;
        count(arg0: any): number;
        remove(arg0: any, arg1: number): number;
        remove(arg0: any): boolean;
        removeAll(arg0: Internal.Collection<any>): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<E>;
        size(): number;
        elementSet(): Internal.Set<E>;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        setCount(arg0: E, arg1: number, arg2: number): boolean;
        setCount(arg0: E, arg1: number): number;
        retainAll(arg0: Internal.Collection<any>): boolean;
    }
    type Multiset_<E> = Multiset<E>;
    interface SequencedSet <E> extends Internal.SequencedCollection<E>, Internal.Set<E> {
        reversed(): Internal.SequencedSet<E>;
        reversed(): Internal.SequencedCollection<any>;
    }
    type SequencedSet_<E> = SequencedSet<E>;
    class VillageConfig extends Document.Object implements Internal.IFeatureConfig {
        func_242810_c(): Internal.Supplier<Internal.JigsawPattern>;
        func_236534_a_(): number;
        static readonly field_236533_a_ : Internal.Codec<Internal.VillageConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VillageConfig_ = VillageConfig;
    interface DoubleToIntFunction {
        applyAsInt(arg0: number): number;
    }
    type DoubleToIntFunction_ = ((arg0: number) => number) | DoubleToIntFunction;
    class MapDecoration extends Document.Object {
        func_176111_d(): number;
        func_204309_g(): Internal.ITextComponent;
        func_191179_b(): Internal.MapDecoration$Type;
        func_176112_b(): number;
        hashCode(): number;
        equals(arg0: any): boolean;
        func_176113_c(): number;
        func_176110_a(): number;
        render(arg0: number): boolean;
        func_191180_f(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MapDecoration_ = MapDecoration;
    abstract class Calendar extends Document.Object implements Internal.Serializable, Internal.Cloneable, Internal.Comparable<Internal.Calendar> {
        static getAvailableCalendarTypes(): Internal.Set<string>;
        getMinimalDaysInFirstWeek(): number;
        getGreatestMinimum(arg0: number): number;
        getWeekYear(): number;
        getTimeZone(): Internal.TimeZone;
        before(arg0: any): boolean;
        isLenient(): boolean;
        getTime(): Internal.Date;
        roll(arg0: number, arg1: number): void;
        roll(arg0: number, arg1: boolean): void;
        setMinimalDaysInFirstWeek(arg0: number): void;
        compareTo(arg0: Internal.Calendar): number;
        compareTo(arg0: any): number;
        getMaximum(arg0: number): number;
        setLenient(arg0: boolean): void;
        getActualMaximum(arg0: number): number;
        getWeeksInWeekYear(): number;
        hashCode(): number;
        get(arg0: number): number;
        getMinimum(arg0: number): number;
        setTimeZone(arg0: Internal.TimeZone): void;
        after(arg0: any): boolean;
        getDisplayNames(arg0: number, arg1: number, arg2: Internal.Locale): Internal.Map<string, number>;
        static getAvailableLocales(): Internal.Locale[];
        setTime(arg0: Internal.Date): void;
        add(arg0: number, arg1: number): void;
        getCalendarType(): string;
        set(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        set(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        set(arg0: number, arg1: number, arg2: number): void;
        set(arg0: number, arg1: number): void;
        isSet(arg0: number): boolean;
        getLeastMaximum(arg0: number): number;
        getActualMinimum(arg0: number): number;
        getTimeInMillis(): number;
        clear(arg0: number): void;
        clear(): void;
        setFirstDayOfWeek(arg0: number): void;
        toInstant(): Internal.Instant;
        isWeekDateSupported(): boolean;
        getFirstDayOfWeek(): number;
        setWeekDate(arg0: number, arg1: number, arg2: number): void;
        setTimeInMillis(arg0: number): void;
        getDisplayName(arg0: number, arg1: number, arg2: Internal.Locale): string;
        equals(arg0: any): boolean;
        clone(): any;
        toString(): string;
        static getInstance(): Internal.Calendar;
        static getInstance(arg0: Internal.TimeZone, arg1: Internal.Locale): Internal.Calendar;
        static getInstance(arg0: Internal.TimeZone): Internal.Calendar;
        static getInstance(arg0: Internal.Locale): Internal.Calendar;
        static readonly MONTH : 2;
        static readonly THURSDAY : 5;
        static readonly WEEK_OF_MONTH : 4;
        static readonly DECEMBER : 11;
        static readonly NARROW_STANDALONE : 32772;
        static readonly DAY_OF_WEEK_IN_MONTH : 8;
        static readonly NARROW_FORMAT : 4;
        static readonly WEDNESDAY : 4;
        static readonly LONG_STANDALONE : 32770;
        static readonly YEAR : 1;
        static readonly WEEK_OF_YEAR : 3;
        static readonly FIELD_COUNT : 17;
        static readonly SATURDAY : 7;
        static readonly MINUTE : 12;
        static readonly JANUARY : 0;
        static readonly DST_OFFSET : 16;
        static readonly SUNDAY : 1;
        static readonly LONG_FORMAT : 2;
        static readonly TUESDAY : 3;
        static readonly SEPTEMBER : 8;
        static readonly AM : 0;
        static readonly DATE : 5;
        static readonly ERA : 0;
        static readonly AUGUST : 7;
        static readonly JULY : 6;
        static readonly DAY_OF_WEEK : 7;
        static readonly DAY_OF_YEAR : 6;
        static readonly MAY : 4;
        static readonly DAY_OF_MONTH : 5;
        static readonly HOUR : 10;
        static readonly FRIDAY : 6;
        static readonly AM_PM : 9;
        static readonly FEBRUARY : 1;
        static readonly ALL_STYLES : 0;
        static readonly ZONE_OFFSET : 15;
        static readonly HOUR_OF_DAY : 11;
        static readonly UNDECIMBER : 12;
        static readonly APRIL : 3;
        static readonly LONG : 2;
        static readonly JUNE : 5;
        static readonly SHORT_STANDALONE : 32769;
        static readonly OCTOBER : 9;
        static readonly NOVEMBER : 10;
        static readonly SHORT : 1;
        static readonly MONDAY : 2;
        static readonly MARCH : 2;
        static readonly SECOND : 13;
        static readonly MILLISECOND : 14;
        static readonly PM : 1;
        static readonly SHORT_FORMAT : 1;
        get calendarType(): string;
        get instance(): Internal.Calendar;
        get availableCalendarTypes(): Internal.Set<string>;
        get timeZone(): Internal.TimeZone;
        get timeInMillis(): number;
        get lenient(): boolean;
        get weekDateSupported(): boolean;
        get availableLocales(): Internal.Locale[];
        get minimalDaysInFirstWeek(): number;
        get firstDayOfWeek(): number;
        get weekYear(): number;
        get time(): Internal.Date;
        get weeksInWeekYear(): number;
        set firstDayOfWeek(arg0: number);
        set minimalDaysInFirstWeek(arg0: number);
        set timeZone(arg0: Internal.TimeZone);
        set timeInMillis(arg0: number);
        set time(arg0: Internal.Date);
        set lenient(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Calendar_ = Calendar;
    abstract class ContainerScreen <T> extends Internal.Screen implements Internal.IHasContainer<T> {
        func_212873_a_(): T;
        func_231023_e_(): void;
        getYSize(): number;
        getGuiTop(): number;
        getGuiLeft(): number;
        func_231048_c_(arg0: number, arg1: number, arg2: number): boolean;
        func_230430_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
        func_231175_as__(): void;
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_231046_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231044_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231177_au__(): boolean;
        getSlotUnderMouse(): Internal.Slot;
        getSlotColor(arg0: number): number;
        getXSize(): number;
        func_231164_f_(): void;
        static readonly field_147001_a : ResourceLocation;
        field_147007_t : boolean;
        get slotUnderMouse(): Internal.Slot;
        get guiLeft(): number;
        get ySize(): number;
        get xSize(): number;
        get guiTop(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ContainerScreen_<T> = ContainerScreen<T>;
    interface Compressable extends Internal.Keyable {
        compressor<T_>(arg0: Internal.DynamicOps<T_>): Internal.KeyCompressor<T_>;
    }
    type Compressable_ = Compressable;
    class EntityPredicate extends Document.Object {
        func_221014_c(): Internal.EntityPredicate;
        func_221015_a(arg0: Internal.LivingEntity, arg1: Internal.LivingEntity): boolean;
        func_221008_a(): Internal.EntityPredicate;
        func_221009_d(): Internal.EntityPredicate;
        func_221011_b(): Internal.EntityPredicate;
        func_221012_a(arg0: ((arg0: Internal.LivingEntity) => boolean)): Internal.EntityPredicate;
        func_221010_e(): Internal.EntityPredicate;
        func_221013_a(arg0: number): Internal.EntityPredicate;
        static readonly field_221016_a : Internal.EntityPredicate;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityPredicate_ = EntityPredicate;
    class CrashReportCategory extends Document.Object {
        static func_184876_a(arg0: number, arg1: number, arg2: number): string;
        func_71507_a(arg0: string, arg1: any): Internal.CrashReportCategory;
        func_85069_a(arg0: Internal.StackTraceElement, arg1: Internal.StackTraceElement): boolean;
        func_189529_a(arg0: string, arg1: Internal.ICrashReportDetail<string>): Internal.CrashReportCategory;
        static func_175750_a(arg0: Internal.CrashReportCategory, arg1: BlockPos, arg2: Internal.BlockState): void;
        func_85073_a(arg0: number): number;
        static func_85074_a(arg0: number, arg1: number, arg2: number): string;
        applyStackTrace(arg0: Internal.Throwable): void;
        func_85070_b(arg0: number): void;
        func_85072_a(arg0: Internal.StringBuilder): void;
        func_147152_a(): Internal.StackTraceElement[];
        static func_180522_a(arg0: BlockPos): string;
        func_71499_a(arg0: string, arg1: Internal.Throwable): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CrashReportCategory_ = CrashReportCategory;
    class BeeDebugRenderer$Bee extends Document.Object {
        func_229008_a_(arg0: BlockPos): boolean;
        toString(): string;
        func_229009_b_(): string;
        func_229007_a_(): Internal.UUID;
        func_229010_c_(): boolean;
        readonly field_228999_b_ : number;
        readonly field_229000_c_ : Internal.IPosition;
        readonly field_229001_d_ : Internal.Path;
        readonly field_229006_i_ : Internal.Set<BlockPos>;
        readonly field_229002_e_ : BlockPos;
        readonly field_229005_h_ : Internal.List<string>;
        readonly field_229003_f_ : BlockPos;
        readonly field_229004_g_ : number;
        readonly field_228998_a_ : Internal.UUID;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BeeDebugRenderer$Bee_ = BeeDebugRenderer$Bee;
    class GameRules$RuleKey <T> extends Document.Object {
        hashCode(): number;
        equals(arg0: any): boolean;
        func_234911_b_(): string;
        toString(): string;
        func_223576_a(): string;
        func_234912_c_(): Internal.GameRules$Category;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameRules$RuleKey_<T> = GameRules$RuleKey<T>;
    interface AnnotatedType extends Internal.AnnotatedElement {
        getType(): java_.lang.reflect.Type;
        getAnnotation<T_>(arg0: Internal.Class_<T_>): T_;
        getAnnotatedOwnerType(): Internal.AnnotatedType;
        getAnnotations(): Internal.Annotation[];
        getDeclaredAnnotations(): Internal.Annotation[];
    }
    type AnnotatedType_ = AnnotatedType;
    class WorldSummary extends Document.Object implements Internal.Comparable<Internal.WorldSummary> {
        func_75783_h(): boolean;
        func_75788_b(): string;
        compareTo(arg0: Internal.WorldSummary): number;
        compareTo(arg0: any): number;
        func_237312_c_(): Internal.File;
        func_75785_d(): boolean;
        func_75784_e(): number;
        func_75789_g(): boolean;
        func_237313_j_(): Internal.IFormattableTextComponent;
        func_75790_f(): Internal.GameType;
        func_237314_k_(): Internal.VersionData;
        func_186355_l(): boolean;
        func_75786_a(): string;
        func_186356_m(): boolean;
        func_237315_o_(): boolean;
        func_237316_p_(): Internal.ITextComponent;
        func_197731_n(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldSummary_ = WorldSummary;
    class SSendResourcePackPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179784_b(): string;
        func_179783_a(): string;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SSendResourcePackPacket_ = SSendResourcePackPacket;
    class WorldRenderer extends Document.Object implements Internal.IResourceManagerReloadListener, Internal.AutoCloseable {
        func_215321_a(x: number, y: number, z: number): void;
        func_181023_a(arg0: Internal.Collection<Internal.TileEntity>, arg1: Internal.Collection<Internal.TileEntity>): void;
        func_224746_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.BlockState): void;
        func_72734_e(): void;
        func_195461_a(arg0: Internal.IParticleData, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        func_180439_a(arg0: Internal.PlayerEntity, arg1: number, arg2: BlockPos, arg3: number): void;
        func_72732_a(arg0: Internal.ClientWorld): void;
        func_147585_a(minX: number, minY: number, minZ: number, maxX: number, maxY: number, maxZ: number): void;
        func_228429_a_(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.Entity, arg3: number, arg4: number, arg5: number, arg6: BlockPos, arg7: Internal.BlockState): void;
        func_72735_c(): string;
        func_72712_a(): void;
        func_228426_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: boolean, arg4: Internal.ActiveRenderInfo, arg5: Internal.GameRenderer, arg6: Internal.LightTexture, arg7: Internal.Matrix4f): void;
        func_184376_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.BlockState, arg4: number): void;
        func_184377_a(arg0: Internal.SoundEvent, arg1: BlockPos): void;
        static func_228428_a_(matrices: Internal.MatrixStack, vertexConsumer: Internal.IVertexBuilder, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, red: number, green: number, blue: number, alpha: number, xAxisRed: number, yAxisGreen: number, zAxisBlue: number): void;
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_228424_a_(arg0: Internal.MatrixStack, arg1: number): void;
        getResourceType(): Internal.IResourceType;
        static func_228430_a_(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.AxisAlignedBB, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_174966_b(): void;
        static func_228420_a_(arg0: Internal.IBlockDisplayReader, arg1: Internal.BlockState, arg2: BlockPos): number;
        static func_189693_b(arg0: Internal.BufferBuilder, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number): void;
        close(): void;
        func_239228_q_(): Internal.Framebuffer;
        func_239229_r_(): Internal.Framebuffer;
        func_228436_a_(arg0: Internal.ActiveRenderInfo): void;
        func_228448_p_(): Internal.Framebuffer;
        func_72728_f(): void;
        func_195471_b(arg0: Internal.IParticleData, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.Particle;
        func_239230_s_(): Internal.Framebuffer;
        func_239232_u_(): Internal.Framebuffer;
        func_174979_m(): void;
        handler$zon000$playRecord(arg0: Internal.SoundEvent, arg1: BlockPos, arg2: Internal.MusicDiscItem, arg3: Internal.CallbackInfo): void;
        playRecord(arg0: Internal.SoundEvent, arg1: BlockPos, arg2: Internal.MusicDiscItem): void;
        func_239231_t_(): Internal.Framebuffer;
        func_72720_a(arg0: number, arg1: number): void;
        func_180441_b(arg0: number, arg1: BlockPos, arg2: number): void;
        func_72723_d(): string;
        func_180440_a(arg0: number, arg1: BlockPos, arg2: number): void;
        func_228425_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_195469_b(arg0: Internal.IParticleData, arg1: boolean, arg2: boolean, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.Particle;
        func_184382_g(): number;
        static func_228427_a_(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number): void;
        static func_228421_a_(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): number;
        static func_228431_a_(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.VoxelShape, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        func_174975_c(): void;
        func_215328_b(arg0: number, arg1: number, arg2: number): void;
        func_195462_a(arg0: Internal.IParticleData, arg1: boolean, arg2: boolean, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): void;
        func_184384_n(): boolean;
        readonly field_147593_P : Internal.Map<BlockPos, Internal.ISound>;
        field_175001_U : Internal.ClippingHelper;
        static readonly field_200006_a : Internal.Direction[];
        readonly field_228415_m_ : Internal.RenderTypeBuffers;
        readonly field_228407_B_ : Internal.Long2ObjectMap<Internal.SortedSet<Internal.DestroyBlockProgress>>;
        readonly field_175003_W : Internal.Tuple3d;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldRenderer_ = WorldRenderer;
    class Level extends Document.Object implements Internal.Comparable<Internal.Level>, Internal.Serializable {
        isLessSpecificThan(level: Internal.Level): boolean;
        isMoreSpecificThan(level: Internal.Level): boolean;
        static forName(name: string, intValue: number): Internal.Level;
        static valueOf<T_>(enumType: Internal.Class_<T_>, name: string): T_;
        static valueOf(name: string): Internal.Level;
        static values(): Internal.Level[];
        compareTo(other: Internal.Level): number;
        compareTo(other: any): number;
        isInRange(minLevel: Internal.Level, maxLevel: Internal.Level): boolean;
        intLevel(): number;
        static getLevel(name: string): Internal.Level;
        getDeclaringClass(): Internal.Class<Internal.Level>;
        static toLevel(sArg: string): Internal.Level;
        static toLevel(name: string, defaultLevel: Internal.Level): Internal.Level;
        hashCode(): number;
        getStandardLevel(): Internal.StandardLevel;
        equals(other: any): boolean;
        clone(): Internal.Level;
        clone(): any;
        name(): string;
        toString(): string;
        static readonly TRACE : Internal.Level;
        static readonly ALL : Internal.Level;
        static readonly CATEGORY : "Level";
        static readonly ERROR : Internal.Level;
        static readonly INFO : Internal.Level;
        static readonly FATAL : Internal.Level;
        static readonly DEBUG : Internal.Level;
        static readonly OFF : Internal.Level;
        static readonly WARN : Internal.Level;
        get declaringClass(): Internal.Class<Internal.Level>;
        get standardLevel(): Internal.StandardLevel;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Level_ = Level;
    class CreativeSettings extends Document.Object {
        func_192563_a(arg0: number): Internal.HotbarSnapshot;
        func_192564_b(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CreativeSettings_ = CreativeSettings;
    interface ProgressiveFuture <V> extends io.netty.util.concurrent.Future<V> {
        removeListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>[]): Internal.ProgressiveFuture<V>;
        syncUninterruptibly(): Internal.ProgressiveFuture<V>;
        await(): Internal.ProgressiveFuture<V>;
        awaitUninterruptibly(): Internal.ProgressiveFuture<V>;
        removeListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>): Internal.ProgressiveFuture<V>;
        sync(): Internal.ProgressiveFuture<V>;
        addListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>[]): Internal.ProgressiveFuture<V>;
        addListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>): Internal.ProgressiveFuture<V>;
    }
    type ProgressiveFuture_<V> = ProgressiveFuture<V>;
    interface IForgeWorld extends Internal.ICapabilityProvider {
        increaseMaxEntityRadius(arg0: number): number;
        getMaxEntityRadius(): number;
        getPartEntities(): Internal.Collection<Internal.PartEntity<any>>;
    }
    type IForgeWorld_ = IForgeWorld;
    class SAdvancementInfoPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_192603_a(): Internal.Map<ResourceLocation, Internal.Advancement$Builder>;
        func_192602_d(): boolean;
        func_192604_c(): Internal.Map<ResourceLocation, Internal.AdvancementProgress>;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_192600_b(): Internal.Set<ResourceLocation>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SAdvancementInfoPacket_ = SAdvancementInfoPacket;
    class Scoreboard extends Document.Object {
        static func_96537_j(arg0: string): number;
        func_199868_a(arg0: string, arg1: Internal.ScoreCriteria, arg2: Internal.ITextComponent_, arg3: Internal.ScoreCriteria$RenderType_): Internal.ScoreObjective;
        func_96534_i(arg0: Internal.ScoreObjective): Internal.Collection<Internal.Score>;
        func_96514_c(): Internal.Collection<Internal.ScoreObjective>;
        func_96516_a(arg0: string): void;
        func_96518_b(arg0: string): Internal.ScoreObjective;
        func_96538_b(arg0: Internal.ScorePlayerTeam): void;
        func_96539_a(arg0: number): Internal.ScoreObjective;
        static func_96517_b(arg0: number): string;
        func_96536_a(arg0: Internal.Score): void;
        func_96531_f(): Internal.Collection<string>;
        func_96510_d(arg0: string): Internal.Map<Internal.ScoreObjective, Internal.Score>;
        func_96512_b(arg0: string, arg1: Internal.ScorePlayerTeam): void;
        func_178819_b(arg0: string, arg1: Internal.ScoreObjective): boolean;
        func_199869_b(arg0: Internal.ScoreObjective): void;
        func_96513_c(arg0: Internal.ScorePlayerTeam): void;
        func_96511_d(arg0: Internal.ScorePlayerTeam): void;
        func_96533_c(arg0: Internal.ScoreObjective): void;
        func_96522_a(arg0: Internal.ScoreObjective): void;
        func_181140_a(arg0: Internal.Entity): void;
        func_96519_k(arg0: Internal.ScoreObjective): void;
        func_178820_a(arg0: string, arg1: Internal.ScoreObjective): void;
        func_178822_d(arg0: string, arg1: Internal.ScoreObjective): void;
        func_96508_e(arg0: string): Internal.ScorePlayerTeam;
        func_96525_g(): Internal.Collection<Internal.ScorePlayerTeam>;
        func_96527_f(arg0: string): Internal.ScorePlayerTeam;
        func_96526_d(): Internal.Collection<string>;
        func_96529_a(arg0: string, arg1: Internal.ScoreObjective): Internal.Score;
        func_96524_g(arg0: string): boolean;
        static func_178821_h(): string[];
        func_96523_a(arg0: Internal.ScorePlayerTeam): void;
        func_197901_a(arg0: string, arg1: Internal.ScorePlayerTeam): boolean;
        func_197900_b(arg0: string): boolean;
        func_96530_a(arg0: number, arg1: Internal.ScoreObjective): void;
        func_197899_c(arg0: string): Internal.ScoreObjective;
        func_197897_d(): Internal.Collection<string>;
        func_96509_i(arg0: string): Internal.ScorePlayerTeam;
        func_197893_a(arg0: Internal.ScoreCriteria, arg1: string, arg2: ((arg0: Internal.Score) => void)): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Scoreboard_ = Scoreboard;
    class StructureSeparationSettings extends Document.Object {
        func_236671_b_(): number;
        func_236668_a_(): number;
        func_236673_c_(): number;
        static readonly field_236664_a_ : Internal.Codec<Internal.StructureSeparationSettings>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureSeparationSettings_ = StructureSeparationSettings;
    interface ILivingEntityData {
    }
    type ILivingEntityData_ = ILivingEntityData;
    abstract class Enum <E> extends Document.Object implements Internal.Constable, Internal.Comparable<E>, Internal.Serializable {
        getDeclaringClass(): Internal.Class<E>;
        static valueOf<T_>(arg0: Internal.Class_<T_>, arg1: string): T_;
        hashCode(): number;
        equals(arg0: any): boolean;
        name(): string;
        toString(): string;
        compareTo(arg0: any): number;
        compareTo(arg0: E): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<E>>;
        ordinal(): number;
        get declaringClass(): Internal.Class<E>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Enum_<E> = Enum<E>;
    interface JsonSerializationContext {
        serialize(arg0: any): Internal.JsonElement;
        serialize(arg0: any, arg1: java_.lang.reflect.Type): Internal.JsonElement;
    }
    type JsonSerializationContext_ = JsonSerializationContext;
    class SecureRandom extends Internal.Random {
        static getSeed(arg0: number): number[];
        getAlgorithm(): string;
        static getInstanceStrong(): Internal.SecureRandom;
        getParameters(): Internal.SecureRandomParameters;
        reseed(): void;
        reseed(arg0: Internal.SecureRandomParameters): void;
        getProvider(): Internal.Provider;
        toString(): string;
        generateSeed(arg0: number): number[];
        static getInstance(arg0: string, arg1: Internal.SecureRandomParameters, arg2: string): Internal.SecureRandom;
        static getInstance(arg0: string, arg1: Internal.SecureRandomParameters): Internal.SecureRandom;
        static getInstance(arg0: string, arg1: Internal.SecureRandomParameters, arg2: Internal.Provider): Internal.SecureRandom;
        static getInstance(arg0: string, arg1: Internal.Provider): Internal.SecureRandom;
        static getInstance(arg0: string, arg1: string): Internal.SecureRandom;
        static getInstance(arg0: string): Internal.SecureRandom;
        setSeed(arg0: number): void;
        setSeed(arg0: number[]): void;
        nextBytes(arg0: number[]): void;
        nextBytes(arg0: number[], arg1: Internal.SecureRandomParameters): void;
        get provider(): Internal.Provider;
        get parameters(): Internal.SecureRandomParameters;
        get instanceStrong(): Internal.SecureRandom;
        get algorithm(): string;
        set seed(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SecureRandom_ = SecureRandom;
    class ObjectIntIdentityMap <T> extends Document.Object implements Internal.IObjectIntIterable<T> {
        func_148757_b(arg0: T): number;
        iterator(): Internal.Iterator<T>;
        func_148745_a(arg0: number): T;
        func_148746_a(arg0: T, arg1: number): void;
        func_186804_a(): number;
        func_195867_b(arg0: T): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ObjectIntIdentityMap_<T> = ObjectIntIdentityMap<T>;
    class Task$Status extends Internal.Enum<Internal.Task$Status> {
        static valueOf(arg0: string): Internal.Task$Status;
        static values(): Internal.Task$Status[];
        static readonly RUNNING : Internal.Task$Status;
        static readonly STOPPED : Internal.Task$Status;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Task$Status_ = "stopped" | "running" | Task$Status;
    interface IMerchant {
        func_213707_a(arg0: Internal.PlayerEntity, arg1: Internal.ITextComponent_, arg2: number): void;
        func_213704_a(arg0: Internal.MerchantOffer): void;
        func_70931_l_(): Internal.PlayerEntity;
        func_213702_q(arg0: number): void;
        func_213703_a(arg0: Internal.MerchantOffers): void;
        func_223340_ej(): boolean;
        func_70932_a_(arg0: Internal.PlayerEntity): void;
        func_213706_dY(): Internal.MerchantOffers;
        func_213705_dZ(): boolean;
        func_110297_a_(arg0: Internal.ItemStack): void;
        func_213714_ea(): Internal.SoundEvent;
        func_190670_t_(): Internal.World;
        func_213708_dV(): number;
    }
    type IMerchant_ = IMerchant;
    class ShaderDefault extends Document.Object {
        func_148092_b(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_148081_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_148083_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_148097_a(arg0: number[]): void;
        func_195652_a(arg0: Internal.Matrix4f): void;
        func_148087_a(arg0: number, arg1: number): void;
        func_148095_a(arg0: number, arg1: number, arg2: number): void;
        func_148090_a(arg0: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShaderDefault_ = ShaderDefault;
    class ActionResult <T> extends Document.Object {
        static func_226251_d_<T_>(arg0: T_): Internal.ActionResult<T_>;
        static func_233538_a_<T_>(arg0: T_, arg1: boolean): Internal.ActionResult<T_>;
        static func_226248_a_<T_>(arg0: T_): Internal.ActionResult<T_>;
        func_188397_a(): Internal.ActionResultType;
        static func_226249_b_<T_>(arg0: T_): Internal.ActionResult<T_>;
        func_188398_b(): T;
        static func_226250_c_<T_>(arg0: T_): Internal.ActionResult<T_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ActionResult_<T> = ActionResult<T>;
    class EntityAnchorArgument$Type extends Internal.Enum<Internal.EntityAnchorArgument$Type> {
        func_201017_a(arg0: Internal.Entity): Vec3;
        static valueOf(arg0: string): Internal.EntityAnchorArgument$Type;
        static values(): Internal.EntityAnchorArgument$Type[];
        func_201015_a(arg0: Internal.CommandSource): Vec3;
        static func_201016_a(arg0: string): Internal.EntityAnchorArgument$Type;
        static readonly EYES : Internal.EntityAnchorArgument$Type;
        static readonly FEET : Internal.EntityAnchorArgument$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityAnchorArgument$Type_ = "feet" | "eyes" | EntityAnchorArgument$Type;
    interface MinecraftSessionService {
        joinServer(arg0: Internal.GameProfile, arg1: string, arg2: string): void;
        hasJoinedServer(arg0: Internal.GameProfile, arg1: string, arg2: Internal.InetAddress): Internal.GameProfile;
        getTextures(arg0: Internal.GameProfile, arg1: boolean): Internal.Map<Internal.MinecraftProfileTexture$Type, Internal.MinecraftProfileTexture>;
        fillProfileProperties(arg0: Internal.GameProfile, arg1: boolean): Internal.GameProfile;
    }
    type MinecraftSessionService_ = MinecraftSessionService;
    class FilterManager extends Document.Object {
        func_244645_a(arg0: Internal.NetworkPlayerInfo): void;
        func_244646_a(arg0: Internal.UUID): void;
        func_244797_a(arg0: string): Internal.UUID;
        func_244644_a(): Internal.Set<Internal.UUID>;
        func_244756_c(arg0: Internal.UUID): boolean;
        func_244648_c(arg0: Internal.UUID): boolean;
        func_244647_b(arg0: Internal.UUID): void;
        func_244757_e(arg0: Internal.UUID): boolean;
        func_244649_d(arg0: Internal.UUID): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FilterManager_ = FilterManager;
    abstract class LoadingGui extends Internal.AbstractGui implements Internal.IRenderable {
        func_212969_a(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LoadingGui_ = LoadingGui;
    abstract class AbstractInt2IntMap extends Internal.AbstractInt2IntFunction implements Internal.Int2IntMap, Internal.Serializable {
        containsKey(arg0: number): boolean;
        hashCode(): number;
        putAll(arg0: Internal.Map_<number, number>): void;
        values(): Internal.IntCollection;
        values(): Internal.Collection<any>;
        equals(arg0: any): boolean;
        isEmpty(): boolean;
        toString(): string;
        keySet(): Internal.IntSet;
        keySet(): Internal.Set<any>;
        containsValue(arg0: number): boolean;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractInt2IntMap_ = AbstractInt2IntMap;
    class PropertyChangeEvent extends Internal.EventObject {
        setPropagationId(arg0: any): void;
        toString(): string;
        getPropagationId(): any;
        getOldValue(): any;
        getNewValue(): any;
        getPropertyName(): string;
        get newValue(): any;
        get propertyName(): string;
        get oldValue(): any;
        get propagationId(): any;
        set propagationId(arg0: any);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PropertyChangeEvent_ = PropertyChangeEvent;
    class Brain <E> extends Document.Object {
        func_233706_a_(arg0: Internal.List<Internal.Activity>): void;
        func_233700_a_(arg0: Internal.Activity, arg1: Internal.ImmutableList<com.mojang.datafixers.util.Pair<number, Internal.Task<E>>>, arg2: Internal.Set<com.mojang.datafixers.util.Pair<Internal.MemoryModuleType<any>, Internal.MemoryModuleStatus>>): void;
        func_218198_b(): Internal.Schedule;
        func_218199_a(arg0: Internal.Set<Internal.Activity>): void;
        func_218196_a(arg0: Internal.MemoryModuleType<any>, arg1: Internal.MemoryModuleStatus_): boolean;
        func_233702_a_<T_>(arg0: Internal.DynamicOps<T_>): Internal.DataResult<T_>;
        func_218202_a(arg0: Internal.Activity): void;
        func_218203_a(arg0: Internal.Schedule): void;
        func_218205_a<U_>(arg0: Internal.MemoryModuleType<U_>, arg1: U_): void;
        func_218191_a(arg0: Internal.MemoryModuleType<any>): boolean;
        func_218226_a<U_>(arg0: Internal.MemoryModuleType<U_>, arg1: Internal.Optional<U_>): void;
        func_218227_b(arg0: Internal.ServerWorld, arg1: E): void;
        func_218208_a(arg0: Internal.Activity, arg1: Internal.ImmutableList<com.mojang.datafixers.util.Pair<number, Internal.Task<E>>>): void;
        func_233716_f_(): Internal.Optional<Internal.Activity>;
        func_218207_c<U_>(arg0: Internal.MemoryModuleType<U_>): Internal.Optional<U_>;
        func_233712_d_(): Internal.List<Internal.Task<E>>;
        func_233698_a_(arg0: Internal.Activity, arg1: number, arg2: Internal.ImmutableList<Internal.Task<E>>): void;
        static func_233710_b_<E_>(arg0: Internal.Collection<Internal.MemoryModuleType<any>>, arg1: Internal.Collection<Internal.SensorType<Internal.Sensor<E_>>>): Internal.Codec<Internal.Brain<E_>>;
        func_218200_b(arg0: Internal.Activity): void;
        func_233696_a_<U_>(arg0: Internal.MemoryModuleType<U_>, arg1: U_, arg2: number): void;
        func_218185_f(): Internal.Brain<E>;
        func_218189_b<U_>(arg0: Internal.MemoryModuleType<U_>): void;
        func_233708_b_<U_>(arg0: Internal.MemoryModuleType<U_>, arg1: U_): boolean;
        static func_233705_a_<E_>(arg0: Internal.Collection<Internal.MemoryModuleType<any>>, arg1: Internal.Collection<Internal.SensorType<Internal.Sensor<E_>>>): Internal.Brain$BrainCodec<E_>;
        func_218214_c(arg0: Internal.Activity): boolean;
        func_233714_e_(): void;
        func_218210_a(arg0: Internal.ServerWorld, arg1: E): void;
        func_233699_a_(arg0: Internal.Activity, arg1: number, arg2: Internal.ImmutableList<Internal.Task<E>>, arg3: Internal.MemoryModuleType<any>): void;
        func_218211_a(arg0: number, arg1: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Brain_<E> = Brain<E>;
    class SUpdateLightPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218719_h(): number;
        func_218718_g(): number;
        func_241784_j_(): boolean;
        func_218713_i(): Internal.List<number[]>;
        func_218717_e(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218715_d(): number;
        func_218716_b(): number;
        func_218712_f(): Internal.List<number[]>;
        func_218714_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SUpdateLightPacket_ = SUpdateLightPacket;
    class CConfirmTransactionPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149533_d(): number;
        func_149532_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CConfirmTransactionPacket_ = CConfirmTransactionPacket;
    interface IRecipesGui {
        showCategories(arg0: Internal.List<ResourceLocation>): void;
        show<V>(arg0: Internal.IFocus<V>): void;
        getIngredientUnderMouse(): any;
    }
    type IRecipesGui_ = IRecipesGui;
    abstract class FlowingFluid extends Internal.Fluid {
        func_207207_a(arg0: number, arg1: boolean): Internal.FluidState;
        func_210198_f(): Internal.Fluid;
        func_223407_a(arg0: Internal.FluidState): number;
        func_207204_a(arg0: boolean): Internal.FluidState;
        func_210197_e(): Internal.Fluid;
        func_215664_b(arg0: Internal.FluidState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        func_215662_a(arg0: Internal.FluidState, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        func_207191_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.FluidState): void;
        func_215663_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.FluidState): Vec3;
        static readonly field_207209_a : Internal.BooleanProperty;
        static readonly field_207210_b : Internal.IntegerProperty;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FlowingFluid_ = FlowingFluid;
    class RecipeList extends Document.Object {
        func_194214_a(arg0: Internal.RecipeBook): void;
        func_194212_c(): boolean;
        func_194211_e(): boolean;
        func_194213_a(arg0: Internal.IRecipe<any>): boolean;
        func_194210_a(arg0: Internal.RecipeItemHelper, arg1: number, arg2: number, arg3: Internal.RecipeBook): void;
        func_192708_c(): boolean;
        func_192711_b(): Internal.List<Internal.IRecipe<any>>;
        func_194209_a(): boolean;
        func_194208_a(arg0: boolean): Internal.List<Internal.IRecipe<any>>;
        func_194207_b(arg0: boolean): Internal.List<Internal.IRecipe<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecipeList_ = RecipeList;
    interface PropertyChangeListener extends Internal.EventListener {
        propertyChange(arg0: Internal.PropertyChangeEvent): void;
    }
    type PropertyChangeListener_ = PropertyChangeListener;
    class Matcher extends Document.Object implements Internal.MatchResult {
        hasTransparentBounds(): boolean;
        requireEnd(): boolean;
        useTransparentBounds(arg0: boolean): Internal.Matcher;
        pattern(): Internal.Pattern;
        namedGroups(): Internal.Map<string, number>;
        replaceFirst(arg0: string): string;
        replaceFirst(arg0: ((arg0: Internal.MatchResult) => string)): string;
        regionStart(): number;
        replaceAll(arg0: string): string;
        replaceAll(arg0: ((arg0: Internal.MatchResult) => string)): string;
        lookingAt(): boolean;
        toMatchResult(): Internal.MatchResult;
        static quoteReplacement(arg0: string): string;
        hasMatch(): boolean;
        find(): boolean;
        find(arg0: number): boolean;
        end(arg0: number): number;
        end(): number;
        end(arg0: string): number;
        results(): Internal.Stream<Internal.MatchResult>;
        group(arg0: number): string;
        group(): string;
        group(arg0: string): string;
        start(arg0: number): number;
        start(arg0: string): number;
        start(): number;
        regionEnd(): number;
        matches(): boolean;
        hasAnchoringBounds(): boolean;
        appendReplacement(arg0: Internal.StringBuffer, arg1: string): Internal.Matcher;
        appendReplacement(arg0: Internal.StringBuilder, arg1: string): Internal.Matcher;
        appendTail(arg0: Internal.StringBuffer): Internal.StringBuffer;
        appendTail(arg0: Internal.StringBuilder): Internal.StringBuilder;
        groupCount(): number;
        reset(arg0: Internal.CharSequence): Internal.Matcher;
        reset(): Internal.Matcher;
        toString(): string;
        region(arg0: number, arg1: number): Internal.Matcher;
        useAnchoringBounds(arg0: boolean): Internal.Matcher;
        hitEnd(): boolean;
        usePattern(arg0: Internal.Pattern): Internal.Matcher;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Matcher_ = Matcher;
    class CaveEdgeConfig extends Document.Object implements Internal.IPlacementConfig {
        static readonly field_236946_a_ : Internal.Codec<Internal.CaveEdgeConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CaveEdgeConfig_ = CaveEdgeConfig;
    class ItemTossEventJS extends Internal.PlayerEventJS {
        getItem(): Internal.ItemStackJS;
        getEntity(): Internal.EntityJS;
        getItemEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get item(): Internal.ItemStackJS;
        get itemEntity(): Internal.EntityJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemTossEventJS_ = ItemTossEventJS;
    interface IWorldLightListener extends Internal.ILightListener {
        func_215612_a(arg0: Internal.SectionPos): Internal.NibbleArray;
        func_215611_b(arg0: BlockPos): number;
    }
    type IWorldLightListener_ = IWorldLightListener;
    class ClientChunkProvider$ChunkArray extends Document.Object {
        field_217195_b : Internal.AtomicReferenceArray<Internal.Chunk>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientChunkProvider$ChunkArray_ = ClientChunkProvider$ChunkArray;
    interface IdFunctionCall {
        execIdCall(arg0: Internal.IdFunctionObject, arg1: Internal.Context, arg2: Internal.Scriptable, arg3: Internal.Scriptable, arg4: any[]): any;
    }
    type IdFunctionCall_ = IdFunctionCall;
    class RaidManager extends Internal.WorldSavedData {
        static func_234620_a_(arg0: Internal.DimensionType): string;
        func_215167_a(arg0: number): Internal.Raid;
        func_189551_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        static func_215165_a(arg0: Internal.AbstractRaiderEntity, arg1: Internal.Raid): boolean;
        func_215174_a(arg0: BlockPos, arg1: number): Internal.Raid;
        func_215171_a(): void;
        func_76184_a(arg0: Internal.CompoundNBT): void;
        func_215170_a(arg0: Internal.ServerPlayerEntity): Internal.Raid;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RaidManager_ = RaidManager;
    class BlockIgnoreStructureProcessor extends Internal.StructureProcessor {
        func_230386_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings): Internal.Template$BlockInfo;
        static readonly field_215204_a : Internal.BlockIgnoreStructureProcessor;
        static readonly field_237073_a_ : Internal.Codec<Internal.BlockIgnoreStructureProcessor>;
        static readonly field_215206_c : Internal.BlockIgnoreStructureProcessor;
        static readonly field_215205_b : Internal.BlockIgnoreStructureProcessor;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockIgnoreStructureProcessor_ = BlockIgnoreStructureProcessor;
    class STBTTFontinfo extends Internal.Struct implements Internal.NativeResource {
        static malloc(): Internal.STBTTFontinfo;
        static malloc(arg0: number): Internal.STBTTFontinfo$Buffer;
        static createSafe(arg0: number, arg1: number): Internal.STBTTFontinfo$Buffer;
        static createSafe(arg0: number): Internal.STBTTFontinfo;
        sizeof(): number;
        static callocStack(arg0: number, arg1: Internal.MemoryStack): Internal.STBTTFontinfo$Buffer;
        static callocStack(): Internal.STBTTFontinfo;
        static callocStack(arg0: Internal.MemoryStack): Internal.STBTTFontinfo;
        static callocStack(arg0: number): Internal.STBTTFontinfo$Buffer;
        static create(arg0: number): Internal.STBTTFontinfo;
        static create(): Internal.STBTTFontinfo;
        static create(arg0: number): Internal.STBTTFontinfo$Buffer;
        static create(arg0: number, arg1: number): Internal.STBTTFontinfo$Buffer;
        static calloc(): Internal.STBTTFontinfo;
        static calloc(arg0: number): Internal.STBTTFontinfo$Buffer;
        static mallocStack(arg0: number, arg1: Internal.MemoryStack): Internal.STBTTFontinfo$Buffer;
        static mallocStack(arg0: number): Internal.STBTTFontinfo$Buffer;
        static mallocStack(): Internal.STBTTFontinfo;
        static mallocStack(arg0: Internal.MemoryStack): Internal.STBTTFontinfo;
        static readonly ALIGNOF : 8;
        static readonly SIZEOF : 160;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type STBTTFontinfo_ = STBTTFontinfo;
    interface NonNullSupplier <T> {
        get(): T;
    }
    type NonNullSupplier_<T> = (() => T) | NonNullSupplier<T>;
    class ShaderGroup extends Document.Object implements Internal.AutoCloseable {
        func_148018_a(arg0: number): void;
        func_177066_a(arg0: string): Internal.Framebuffer;
        func_148026_a(arg0: number, arg1: number): void;
        func_148023_a(arg0: string, arg1: Internal.Framebuffer, arg2: Internal.Framebuffer): Internal.Shader;
        func_148022_b(): string;
        func_148020_a(arg0: string, arg1: number, arg2: number): void;
        close(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShaderGroup_ = ShaderGroup;
    interface ScheduledExecutorService extends Internal.ExecutorService {
        scheduleAtFixedRate(arg0: (() => void), arg1: number, arg2: number, arg3: Internal.TimeUnit_): java_.util.concurrent.ScheduledFuture<any>;
        schedule(arg0: (() => void), arg1: number, arg2: Internal.TimeUnit_): java_.util.concurrent.ScheduledFuture<any>;
        schedule<V_>(arg0: (() => V_), arg1: number, arg2: Internal.TimeUnit_): java_.util.concurrent.ScheduledFuture<V_>;
        scheduleWithFixedDelay(arg0: (() => void), arg1: number, arg2: number, arg3: Internal.TimeUnit_): java_.util.concurrent.ScheduledFuture<any>;
    }
    type ScheduledExecutorService_ = ScheduledExecutorService;
    class WolfEntity extends Internal.TameableEntity implements Internal.IAngerable {
        func_230256_F__(): number;
        func_70646_bf(): number;
        func_70920_v(): number;
        func_70921_u(): boolean;
        func_70071_h_(): void;
        func_70922_bv(): boolean;
        func_70923_f(arg0: number, arg1: number): number;
        func_70641_bl(): number;
        func_230260_a__(arg0: number): void;
        func_70903_f(arg0: boolean): void;
        static func_234233_eS_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_70636_d(): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.WolfEntity;
        func_175546_cu(): Internal.DyeColor;
        func_230257_G__(): Internal.UUID;
        func_142018_a(arg0: Internal.LivingEntity, arg1: Internal.LivingEntity): boolean;
        func_70915_j(arg0: number): number;
        func_70103_a(arg0: number): void;
        func_70918_i(arg0: boolean): void;
        func_70917_k(arg0: number): number;
        func_230258_H__(): void;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_70645_a(arg0: Internal.DamageSource): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_241205_ce_(): Vec3;
        func_70878_b(arg0: Internal.AnimalEntity): boolean;
        func_184652_a(arg0: Internal.PlayerEntity): boolean;
        func_175547_a(arg0: Internal.DyeColor_): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        func_230259_a_(arg0: Internal.UUID): void;
        static readonly field_213441_bD : ((arg0: Internal.LivingEntity) => boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WolfEntity_ = WolfEntity;
    class Minecraft$PackManager extends Document.Object implements Internal.AutoCloseable {
        func_238225_b_(): Internal.DataPackRegistries;
        func_238226_c_(): Internal.IServerConfiguration;
        close(): void;
        func_238224_a_(): Internal.ResourcePackList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Minecraft$PackManager_ = Minecraft$PackManager;
    interface PerformanceMetrics {
        getAverageTime(): number;
        getSampleCount(): number;
        getMaxTime(): number;
        getMinTime(): number;
    }
    type PerformanceMetrics_ = PerformanceMetrics;
    class JigsawOrientation extends Internal.Enum<Internal.JigsawOrientation> implements Internal.IStringSerializable {
        static valueOf(arg0: string): Internal.JigsawOrientation;
        func_176610_l(): string;
        static values(): Internal.JigsawOrientation[];
        static func_239641_a_(arg0: Internal.Direction_, arg1: Internal.Direction_): Internal.JigsawOrientation;
        func_239642_b_(): Internal.Direction;
        func_239644_c_(): Internal.Direction;
        static readonly UP_SOUTH : Internal.JigsawOrientation;
        static readonly DOWN_NORTH : Internal.JigsawOrientation;
        static readonly UP_EAST : Internal.JigsawOrientation;
        static readonly UP_NORTH : Internal.JigsawOrientation;
        static readonly NORTH_UP : Internal.JigsawOrientation;
        static readonly SOUTH_UP : Internal.JigsawOrientation;
        static readonly DOWN_EAST : Internal.JigsawOrientation;
        static readonly DOWN_WEST : Internal.JigsawOrientation;
        static readonly UP_WEST : Internal.JigsawOrientation;
        static readonly WEST_UP : Internal.JigsawOrientation;
        static readonly DOWN_SOUTH : Internal.JigsawOrientation;
        static readonly EAST_UP : Internal.JigsawOrientation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JigsawOrientation_ = "down_east" | "down_north" | "down_south" | "down_west" | "up_east" | "up_north" | "up_south" | "up_west" | "west_up" | "east_up" | "north_up" | "south_up" | JigsawOrientation;
    class TexturedGlyph extends Document.Object {
        func_225595_a_(italic: boolean, x: number, y: number, matrix: Internal.Matrix4f, vertexConsumer: Internal.IVertexBuilder, red: number, green: number, blue: number, alpha: number, light: number): void;
        func_228162_a_(arg0: Internal.TexturedGlyph$Effect, arg1: Internal.Matrix4f, arg2: Internal.IVertexBuilder, arg3: number): void;
        func_228163_a_(arg0: boolean): Internal.RenderType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TexturedGlyph_ = TexturedGlyph;
    class AudioStreamManager extends Document.Object {
        func_217908_a(arg0: Internal.Collection<Internal.Sound>): Internal.CompletableFuture<any>;
        func_217909_a(arg0: ResourceLocation_): Internal.CompletableFuture<Internal.AudioStreamBuffer>;
        func_217917_b(arg0: ResourceLocation_, arg1: boolean): Internal.CompletableFuture<Internal.IAudioStream>;
        func_217912_a(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AudioStreamManager_ = AudioStreamManager;
    interface MemorySegment$Scope {
        isAlive(): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
    }
    type MemorySegment$Scope_ = MemorySegment$Scope;
    class PalettedContainer <T> extends Document.Object implements Internal.IResizeCallback<T>, Internal.PalettedContainerExtended<any> {
        func_235963_a_(arg0: ((arg0: T) => boolean)): boolean;
        func_222639_b(arg0: number, arg1: number, arg2: number, arg3: T): T;
        getDataArray(): Internal.BitArray;
        func_210459_b(): void;
        func_186009_b(arg0: Internal.PacketBuffer): void;
        func_186018_a(): number;
        func_225497_a(arg0: ((arg0: T, arg1: number) => void)): void;
        getPalette(): Internal.IPalette<any>;
        func_186016_a(arg0: number, arg1: number, arg2: number): T;
        getDefaultValue(): any;
        getPaletteSize(): number;
        func_186015_a(arg0: number): T;
        func_186010_a(arg0: Internal.PacketBuffer): void;
        onResize(arg0: number, arg1: T): number;
        func_196963_b(arg0: Internal.CompoundNBT, arg1: string, arg2: string): void;
        func_222642_a(arg0: Internal.ListNBT, arg1: number[]): void;
        func_222641_a(arg0: number, arg1: number, arg2: number, arg3: T): T;
        func_210460_c(): void;
        get dataArray(): Internal.BitArray;
        get defaultValue(): any;
        get palette(): Internal.IPalette<any>;
        get paletteSize(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PalettedContainer_<T> = PalettedContainer<T>;
    class PlayerEvent$PlayerLoggedInEvent extends Internal.PlayerEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerEvent$PlayerLoggedInEvent_ = PlayerEvent$PlayerLoggedInEvent;
    class PrintWriter extends Internal.Writer {
        print(arg0: number): void;
        print(arg0: number): void;
        print(arg0: number): void;
        print(arg0: string): void;
        print(arg0: boolean): void;
        print(arg0: any): void;
        print(arg0: string): void;
        print(arg0: string[]): void;
        print(arg0: number): void;
        println(arg0: string[]): void;
        println(arg0: number): void;
        println(arg0: number): void;
        println(arg0: string): void;
        println(arg0: any): void;
        println(): void;
        println(arg0: string): void;
        println(arg0: number): void;
        println(arg0: number): void;
        println(arg0: boolean): void;
        flush(): void;
        format(arg0: Internal.Locale, arg1: string, arg2: any[]): Internal.PrintWriter;
        format(arg0: string, arg1: any[]): Internal.PrintWriter;
        checkError(): boolean;
        close(): void;
        write(arg0: number): void;
        write(arg0: string[], arg1: number, arg2: number): void;
        write(arg0: string[]): void;
        write(arg0: string, arg1: number, arg2: number): void;
        write(arg0: string): void;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Writer;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.PrintWriter;
        append(arg0: string): Internal.Writer;
        append(arg0: string): Internal.PrintWriter;
        append(arg0: string): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.Writer;
        append(arg0: Internal.CharSequence): Internal.PrintWriter;
        printf(arg0: string, arg1: any[]): Internal.PrintWriter;
        printf(arg0: Internal.Locale, arg1: string, arg2: any[]): Internal.PrintWriter;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PrintWriter_ = PrintWriter;
    interface ShortConsumer extends Internal.Consumer<number>, Internal.IntConsumer {
        andThen(arg0: ((arg0: number) => void)): Internal.Consumer<number>;
        andThen(arg0: ((arg0: number) => void)): Internal.IntConsumer;
        andThen(arg0: ((arg0: number) => void)): Internal.ShortConsumer;
        andThen(arg0: ((arg0: number) => void)): Internal.ShortConsumer;
        accept(arg0: any): void;
        accept(arg0: number): void;
        accept(arg0: number): void;
        accept(arg0: number): void;
    }
    type ShortConsumer_ = ((arg0: number) => void) | ShortConsumer;
    class PlayerEvent$StartTracking extends Internal.PlayerEvent {
        getTarget(): Internal.Entity;
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        get target(): Internal.Entity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerEvent$StartTracking_ = PlayerEvent$StartTracking;
    interface Capability$IStorage <T> {
        writeNBT(arg0: Internal.Capability<T>, arg1: T, arg2: Internal.Direction_): Internal.INBT;
        readNBT(arg0: Internal.Capability<T>, arg1: T, arg2: Internal.Direction_, arg3: Internal.INBT): void;
    }
    type Capability$IStorage_<T> = Capability$IStorage<T>;
    class BeeDebugRenderer$Hive extends Document.Object {
        readonly field_229013_c_ : number;
        readonly field_229012_b_ : string;
        readonly field_229014_d_ : number;
        readonly field_229015_e_ : boolean;
        readonly field_229016_f_ : number;
        readonly field_229011_a_ : BlockPos;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BeeDebugRenderer$Hive_ = BeeDebugRenderer$Hive;
    class CowEntity extends Internal.AnimalEntity {
        static func_234188_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.CowEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CowEntity_ = CowEntity;
    class SUpdateRecipesPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_199616_a(): Internal.List<Internal.IRecipe<any>>;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        static func_218771_a<T_>(arg0: T_, arg1: Internal.PacketBuffer): void;
        static func_218772_c(arg0: Internal.PacketBuffer): Internal.IRecipe<any>;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SUpdateRecipesPacket_ = SUpdateRecipesPacket;
    abstract class RecipeJS extends Document.Object {
        parseResultItemList(o: any): Internal.List<Internal.ItemStackJS>;
        ingredientAction(filter: Internal.IngredientActionFilter, action: Internal.IngredientAction): Internal.RecipeJS;
        convertReplacedInput(index: number, oldIngredient: Internal.IngredientJS_, newIngredient: Internal.IngredientJS_): Internal.IngredientJS;
        getUniqueId(): string;
        damageItem(filter: Internal.IngredientActionFilter): Internal.RecipeJS;
        damageItem(filter: Internal.IngredientActionFilter, damage: number): Internal.RecipeJS;
        replaceOutput(i: Internal.IngredientJS_, with_: Internal.ItemStackJS_, exact: boolean, func: ((arg0: Internal.ItemStackJS, arg1: Internal.ItemStackJS) => Internal.ItemStackJS)): boolean;
        replaceOutput(i: Internal.IngredientJS_, with_: Internal.ItemStackJS_, exact: boolean): boolean;
        merge(data: any): Internal.RecipeJS;
        parseIngredientItemList(o: any): Internal.List<Internal.IngredientJS>;
        getPath(): string;
        create(arg0: Internal.ListJS): void;
        parseIngredientItemStackList(o: any): Internal.List<Internal.IngredientStackJS>;
        id(_id: ResourceLocation_): Internal.RecipeJS;
        parseIngredientItem(o: any, key: string): Internal.IngredientJS;
        parseIngredientItem(o: any): Internal.IngredientJS;
        group(g: string): Internal.RecipeJS;
        getOriginalRecipeResult(): Internal.ItemStackJS;
        getOriginalRecipeIngredients(): Internal.List<Internal.IngredientJS>;
        getInputIndex(ingredient: Internal.IngredientJS_, exact: boolean): number;
        setGroup(g: string): void;
        serialize(): void;
        getType(): string;
        replaceInput(i: Internal.IngredientJS_, with_: Internal.IngredientJS_, exact: boolean, func: ((arg0: ((arg0: Internal.ItemStackJS) => boolean), arg1: ((arg0: Internal.ItemStackJS) => boolean)) => ((arg0: Internal.ItemStackJS) => boolean))): boolean;
        replaceInput(i: Internal.IngredientJS_, with_: Internal.IngredientJS_, exact: boolean): boolean;
        keep(filter: Internal.IngredientActionFilter): Internal.RecipeJS;
        getGroup(): string;
        hasOutput(ingredient: Internal.IngredientJS_, exact: boolean): boolean;
        keepIngredient(filter: Internal.IngredientActionFilter): Internal.RecipeJS;
        customIngredientAction(filter: Internal.IngredientActionFilter, id: string): Internal.RecipeJS;
        getMod(): string;
        convertReplacedOutput(index: number, oldStack: Internal.ItemStackJS_, newStack: Internal.ItemStackJS_): Internal.ItemStackJS;
        save(): void;
        getJsonHashBytes(): number[];
        damageIngredient(filter: Internal.IngredientActionFilter, damage: number): Internal.RecipeJS;
        damageIngredient(filter: Internal.IngredientActionFilter): Internal.RecipeJS;
        getId(): string;
        dontAdd(): void;
        serializeJson(): void;
        createRecipe(): Internal.IRecipe<any>;
        getFromToString(): string;
        deserializeJson(): void;
        getOrCreateId(): ResourceLocation;
        deserialize(): void;
        serializeNBTAsJson(): boolean;
        getOutputIndex(ingredient: Internal.IngredientJS_, exact: boolean): number;
        set(data: any): Internal.RecipeJS;
        resultFromRecipeJson(json: Internal.JsonObject): Internal.ItemStackJS;
        stage(s: string): Internal.RecipeJS;
        serializeIngredientStack(in_: Internal.IngredientStackJS): Internal.JsonElement;
        replaceItem(filter: Internal.IngredientActionFilter, item: Internal.ItemStackJS_): Internal.RecipeJS;
        serializeItemStack(stack: Internal.ItemStackJS_): Internal.JsonElement;
        toString(): string;
        hasInput(ingredient: Internal.IngredientJS_, exact: boolean): boolean;
        parseResultItem(o: any): Internal.ItemStackJS;
        replaceIngredient(filter: Internal.IngredientActionFilter, item: Internal.ItemStackJS_): Internal.RecipeJS;
        static currentRecipe : Internal.RecipeJS;
        originalJson : Internal.JsonObject;
        serializeOutputs : boolean;
        originalRecipe : Internal.IRecipe<any>;
        readonly inputItems : Internal.List<Internal.IngredientJS>;
        static itemErrors : false;
        json : Internal.JsonObject;
        readonly outputItems : Internal.List<Internal.ItemStackJS>;
        type : Internal.RecipeTypeJS;
        serializeInputs : boolean;
        get path(): string;
        get originalRecipeIngredients(): Internal.List<Internal.IngredientJS>;
        get mod(): string;
        get jsonHashBytes(): number[];
        get originalRecipeResult(): Internal.ItemStackJS;
        get orCreateId(): ResourceLocation;
        get fromToString(): string;
        get uniqueId(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecipeJS_ = RecipeJS;
    interface IPartialSafeNBT {
        writeSafe(arg0: Internal.CompoundNBT, arg1: boolean): void;
    }
    type IPartialSafeNBT_ = IPartialSafeNBT;
    class SeaGrassFeature extends Internal.Feature<Internal.ProbabilityConfig> {
        func_241855_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos, arg4: Internal.ProbabilityConfig): boolean;
        func_241855_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos, arg4: Internal.IFeatureConfig): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SeaGrassFeature_ = SeaGrassFeature;
    interface IWeatherParticleRenderHandler {
        render(arg0: number, arg1: Internal.ClientWorld, arg2: Internal.Minecraft, arg3: Internal.ActiveRenderInfo): void;
    }
    type IWeatherParticleRenderHandler_ = ((arg0: number, arg1: Internal.ClientWorld, arg2: Internal.Minecraft, arg3: Internal.ActiveRenderInfo) => void) | IWeatherParticleRenderHandler;
    interface ModuleReader extends Internal.Closeable {
        read(arg0: string): Internal.Optional<Internal.ByteBuffer>;
        release(arg0: Internal.ByteBuffer): void;
        find(arg0: string): Internal.Optional<Internal.URI>;
        list(): Internal.Stream<string>;
        close(): void;
        open(arg0: string): Internal.Optional<Internal.InputStream>;
    }
    type ModuleReader_ = ModuleReader;
    class SmithingRecipe extends Document.Object implements Internal.IRecipe<Internal.IInventory> {
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_222127_g(): Internal.IRecipeType<any>;
        func_199560_c(): ResourceLocation;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_241456_a_(arg0: Internal.ItemStack): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_222128_h(): Internal.ItemStack;
        func_77571_b(): Internal.ItemStack;
        readonly field_234838_b_ : Internal.Ingredient;
        readonly field_234837_a_ : Internal.Ingredient;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SmithingRecipe_ = SmithingRecipe;
    class SingleRandomFeature extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_204628_a : Internal.List<(() => Internal.ConfiguredFeature<any, any>)>;
        static readonly field_236642_a_ : Internal.Codec<Internal.SingleRandomFeature>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SingleRandomFeature_ = SingleRandomFeature;
    interface IScheduledEventCallback {
        onCallback(arg0: Internal.ScheduledEvent): void;
    }
    type IScheduledEventCallback_ = ((arg0: Internal.ScheduledEvent) => void) | IScheduledEventCallback;
    class CodEntity extends Internal.AbstractGroupFishEntity {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CodEntity_ = CodEntity;
    interface DoubleIterator extends Internal.PrimitiveIterator$OfDouble {
        next(): any;
        next(): number;
        skip(arg0: number): number;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
        nextDouble(): number;
    }
    type DoubleIterator_ = DoubleIterator;
    class SStopSoundPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_197704_b(): Internal.SoundCategory;
        func_197703_a(): ResourceLocation;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SStopSoundPacket_ = SStopSoundPacket;
    interface IntList extends Internal.List<number>, Internal.Comparable<Internal.List<number>>, Internal.IntCollection {
        add(arg0: number, arg1: any): void;
        add(arg0: any): boolean;
        add(arg0: number, arg1: number): void;
        add(arg0: number): boolean;
        add(arg0: number): boolean;
        add(arg0: number, arg1: number): void;
        subList(arg0: number, arg1: number): Internal.IntList;
        subList(arg0: number, arg1: number): Internal.List<any>;
        set(arg0: number, arg1: number): number;
        set(arg0: number, arg1: any): any;
        set(arg0: number, arg1: number): number;
        removeInt(arg0: number): number;
        removeElements(arg0: number, arg1: number): void;
        remove(arg0: any): boolean;
        remove(arg0: number): any;
        remove(arg0: number): number;
        lastIndexOf(arg0: any): number;
        lastIndexOf(arg0: number): number;
        getInt(arg0: number): number;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.IntIterator;
        iterator(): Internal.IntListIterator;
        size(arg0: number): void;
        addAll(arg0: Internal.IntList): boolean;
        addAll(arg0: number, arg1: Internal.IntList): boolean;
        addAll(arg0: number, arg1: Internal.IntCollection): boolean;
        addElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
        addElements(arg0: number, arg1: number[]): void;
        getElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
        get(arg0: number): any;
        get(arg0: number): number;
        listIterator(arg0: number): Internal.ListIterator<any>;
        listIterator(arg0: number): Internal.IntListIterator;
        listIterator(): Internal.IntListIterator;
        listIterator(): Internal.ListIterator<any>;
        indexOf(arg0: number): number;
        indexOf(arg0: any): number;
    }
    type IntList_ = IntList;
    class LootTable extends Document.Object {
        func_216122_a(): Internal.LootParameterSet;
        func_216120_b(arg0: Internal.LootContext, arg1: ((arg0: Internal.ItemStack) => void)): void;
        func_216113_a(arg0: Internal.LootContext): Internal.List<Internal.ItemStack>;
        static func_216124_a(arg0: ((arg0: Internal.ItemStack) => void)): Internal.Consumer<Internal.ItemStack>;
        func_216114_a(arg0: Internal.LootContext, arg1: ((arg0: Internal.ItemStack) => void)): void;
        getLootTableId(): ResourceLocation;
        func_216118_a(arg0: Internal.IInventory, arg1: Internal.LootContext): void;
        static func_216119_b(): Internal.LootTable$Builder;
        freeze(): void;
        setLootTableId(arg0: ResourceLocation_): void;
        addPool(arg0: Internal.LootPool): void;
        getPool(arg0: string): Internal.LootPool;
        removePool(arg0: string): Internal.LootPool;
        func_227506_a_(arg0: Internal.ValidationTracker): void;
        isFrozen(): boolean;
        static readonly field_216126_b : Internal.LootParameterSet;
        static readonly field_186464_a : Internal.LootTable;
        get lootTableId(): ResourceLocation;
        get frozen(): boolean;
        set lootTableId(arg0: ResourceLocation_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootTable_ = LootTable;
    class ScriptFile extends Document.Object implements Internal.Comparable<Internal.ScriptFile> {
        getError(): Internal.Throwable;
        load(): boolean;
        compareTo(o: Internal.ScriptFile): number;
        compareTo(arg0: any): number;
        readonly source : ((arg0: Internal.ScriptFileInfo) => Internal.InputStream);
        readonly pack : Internal.ScriptPack;
        readonly info : Internal.ScriptFileInfo;
        get error(): Internal.Throwable;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScriptFile_ = ScriptFile;
    class LookController extends Document.Object {
        func_180424_b(): boolean;
        func_220674_a(arg0: Vec3): void;
        func_180422_f(): number;
        func_180423_e(): number;
        func_180421_g(): number;
        func_220679_a(arg0: number, arg1: number, arg2: number): void;
        func_75650_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_75651_a(arg0: Internal.Entity, arg1: number, arg2: number): void;
        func_75649_a(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LookController_ = LookController;
    class BellTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity {
        func_145842_c(arg0: number, arg1: number): boolean;
        func_73660_a(): void;
        func_213939_a(arg0: Internal.Direction_): void;
        field_213943_a : number;
        field_213944_b : boolean;
        field_213945_c : Internal.Direction;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BellTileEntity_ = BellTileEntity;
    class GuiScreenEvent$DrawScreenEvent$Pre extends Internal.GuiScreenEvent$DrawScreenEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$DrawScreenEvent$Pre_ = GuiScreenEvent$DrawScreenEvent$Pre;
    class PiglinMobsSensor extends Internal.Sensor<Internal.LivingEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PiglinMobsSensor_ = PiglinMobsSensor;
    class InputMappings$Type extends Internal.Enum<Internal.InputMappings$Type> {
        static valueOf(arg0: string): Internal.InputMappings$Type;
        static values(): Internal.InputMappings$Type[];
        func_197944_a(arg0: number): Internal.InputMappings$Input;
        static readonly SCANCODE : Internal.InputMappings$Type;
        static readonly MOUSE : Internal.InputMappings$Type;
        static readonly KEYSYM : Internal.InputMappings$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InputMappings$Type_ = "keysym" | "scancode" | "mouse" | InputMappings$Type;
    interface GameRulesAccessor$IntegerValue {
    }
    type GameRulesAccessor$IntegerValue_ = GameRulesAccessor$IntegerValue;
    interface DoubleStream$Builder extends Internal.DoubleConsumer {
        add(arg0: number): Internal.DoubleStream$Builder;
        build(): Internal.DoubleStream;
        accept(arg0: number): void;
    }
    type DoubleStream$Builder_ = DoubleStream$Builder;
    interface BaseStream <T, S> extends Internal.AutoCloseable {
        unordered(): S;
        onClose(arg0: (() => void)): S;
        iterator(): Internal.Iterator<T>;
        parallel(): S;
        spliterator(): Internal.Spliterator<T>;
        sequential(): S;
        isParallel(): boolean;
        close(): void;
    }
    type BaseStream_<T, S> = BaseStream<T, S>;
    class AlternativesLootEntry$Builder extends Internal.LootEntry$Builder<Internal.AlternativesLootEntry$Builder> {
        func_216081_b(): Internal.LootEntry;
        func_216080_a(arg0: Internal.LootEntry$Builder<any>): Internal.AlternativesLootEntry$Builder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AlternativesLootEntry$Builder_ = AlternativesLootEntry$Builder;
    class VindicatorEntity extends Internal.AbstractIllagerEntity {
        func_213654_dW(): Internal.SoundEvent;
        func_213660_a(arg0: number, arg1: boolean): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_193077_p(): Internal.AbstractIllagerEntity$ArmPose;
        func_200203_b(arg0: Internal.ITextComponent_): void;
        static func_234322_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_184191_r(arg0: Internal.Entity): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VindicatorEntity_ = VindicatorEntity;
    interface Structure$IStartFactory <C> {
        create(arg0: Internal.Structure<C>, arg1: number, arg2: number, arg3: Internal.MutableBoundingBox, arg4: number, arg5: number): Internal.StructureStart<C>;
    }
    type Structure$IStartFactory_<C> = Structure$IStartFactory<C>;
    class BlockEntityPredicate extends Document.Object implements Internal.BlockPredicate {
        data(cd: ((arg0: Internal.CompoundNBT) => boolean)): Internal.BlockEntityPredicate;
        toString(): string;
        check(block: Internal.BlockContainerJS): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockEntityPredicate_ = BlockEntityPredicate;
    class DonkeyEntity extends Internal.AbstractChestedHorseEntity {
        func_70878_b(arg0: Internal.AnimalEntity): boolean;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DonkeyEntity_ = DonkeyEntity;
    interface IForgeBlock {
        rotate(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: Internal.Rotation_): Internal.BlockState;
        getStateAtViewpoint(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Vec3): Internal.BlockState;
        getBedDirection(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): Internal.Direction;
        onBlockExploded(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Explosion): void;
        getHarvestLevel(arg0: Internal.BlockState): number;
        getTags(): Internal.Set<ResourceLocation>;
        isBed(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        canHarvestBlock(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.BlockState): boolean;
        getBedSpawnPosition(arg0: Internal.EntityType<any>, arg1: Internal.BlockState, arg2: Internal.IWorldReader, arg3: BlockPos, arg4: number, arg5: Internal.LivingEntity): Internal.Optional<Vec3>;
        isLadder(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.LivingEntity): boolean;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState, arg1: Internal.IBlockDisplayReader, arg2: BlockPos, arg3: Internal.FluidState): boolean;
        onNeighborChange(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): void;
        canStickTo(arg0: Internal.BlockState, arg1: Internal.BlockState): boolean;
        getPickBlock(arg0: Internal.BlockState, arg1: Internal.RayTraceResult, arg2: Internal.IBlockReader, arg3: BlockPos, arg4: Internal.PlayerEntity): Internal.ItemStack;
        getWeakChanges(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        canEntityDestroy(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        isBurning(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getHarvestTool(arg0: Internal.BlockState): Internal.ToolType;
        isPortalFrame(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        hasTileEntity(arg0: Internal.BlockState): boolean;
        getExplosionResistance(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): number;
        canSustainPlant(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_, arg4: Internal.IPlantable): boolean;
        isScaffolding(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.LivingEntity): boolean;
        observedNeighborChange(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Block, arg4: BlockPos): void;
        canDropFromExplosion(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): boolean;
        removedByPlayer(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity, arg4: boolean, arg5: Internal.FluidState): boolean;
        isStickyBlock(arg0: Internal.BlockState): boolean;
        createTileEntity(arg0: Internal.BlockState, arg1: Internal.IBlockReader): Internal.TileEntity;
        isFertile(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getAiPathNodeType(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.MobEntity): Internal.PathNodeType;
        getFogColor(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity, arg4: Vec3, arg5: number): Vec3;
        isSlimeBlock(arg0: Internal.BlockState): boolean;
        getLightValue(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        getFireSpreadSpeed(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
        isAir(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getToolModifiedState(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity, arg4: Internal.ItemStack, arg5: Internal.ToolType): Internal.BlockState;
        getBeaconColorMultiplier(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): number[];
        getExpDrop(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: number, arg4: number): number;
        isConduitFrame(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): boolean;
        canBeReplacedByLogs(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        addLandingEffects(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.LivingEntity, arg5: number): boolean;
        canCreatureSpawn(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.EntitySpawnPlacementRegistry$PlacementType_, arg4: Internal.EntityType<any>): boolean;
        getSoundType(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity): Internal.SoundType;
        isToolEffective(arg0: Internal.BlockState, arg1: Internal.ToolType): boolean;
        addRunningEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Entity): boolean;
        canBeReplacedByLeaves(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        getSlipperiness(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity): number;
        isFlammable(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        getBlock(): Internal.Block;
        addDestroyEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.ParticleManager): boolean;
        getEnchantPowerBonus(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): number;
        setBedOccupied(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.LivingEntity, arg4: boolean): void;
        isFireSource(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        onPlantGrow(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: BlockPos): void;
        getRespawnPosition(arg0: Internal.BlockState, arg1: Internal.EntityType<any>, arg2: Internal.IWorldReader, arg3: BlockPos, arg4: number, arg5: Internal.LivingEntity): Internal.Optional<Vec3>;
        catchFire(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Direction_, arg4: Internal.LivingEntity): void;
        canConnectRedstone(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        addHitEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: Internal.RayTraceResult, arg3: Internal.ParticleManager): boolean;
        getFlammability(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
    }
    type IForgeBlock_ = IForgeBlock;
    class SRecipeBookPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_193644_b(): Internal.List<ResourceLocation>;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_244302_d(): Internal.RecipeBookStatus;
        func_194151_e(): Internal.SRecipeBookPacket$State;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_192595_a(): Internal.List<ResourceLocation>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SRecipeBookPacket_ = SRecipeBookPacket;
    class CSelectTradePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_210353_a(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CSelectTradePacket_ = CSelectTradePacket;
    abstract class AbstractFeatureSizeType extends Document.Object {
        func_236710_c_(): Internal.OptionalInt;
        func_230369_a_(arg0: number, arg1: number): number;
        static readonly field_236704_a_ : Internal.Codec<Internal.AbstractFeatureSizeType>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractFeatureSizeType_ = AbstractFeatureSizeType;
    class LightningBoltEntity extends Internal.Entity {
        getDamage(): number;
        func_233623_a_(arg0: boolean): void;
        func_213297_N(): Internal.IPacket<any>;
        func_204809_d(arg0: Internal.ServerPlayerEntity): void;
        func_70071_h_(): void;
        setDamage(arg0: number): void;
        func_70112_a(arg0: number): boolean;
        func_184176_by(): Internal.SoundCategory;
        handler$zke000$handleLightning(ci: Internal.CallbackInfo, d0: number, list: Internal.List<any>): void;
        field_70264_a : number;
        get damage(): number;
        set damage(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LightningBoltEntity_ = LightningBoltEntity;
    class PlayerEvent extends Internal.LivingEvent {
        getPlayer(): Internal.PlayerEntity;
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        get player(): Internal.PlayerEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerEvent_ = PlayerEvent;
    interface FlowMessage extends org.apache.logging.log4j.message.Message {
        getText(): string;
        getMessage(): org.apache.logging.log4j.message.Message;
    }
    type FlowMessage_ = FlowMessage;
    class Products$P11 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P11_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> = Products$P11<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>;
    class PlatformWrapper$ModInfo extends Document.Object {
        getVersion(): string;
        getName(): string;
        getId(): string;
        get name(): string;
        get id(): string;
        get version(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlatformWrapper$ModInfo_ = PlatformWrapper$ModInfo;
    interface Consumer <T> {
        andThen(arg0: ((arg0: T) => void)): Internal.Consumer<T>;
        accept(arg0: T): void;
    }
    type Consumer_<T> = ((arg0: T) => void) | Consumer<T>;
    class GravityStructureProcessor extends Internal.StructureProcessor {
        func_230386_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings): Internal.Template$BlockInfo;
        static readonly field_237081_a_ : Internal.Codec<Internal.GravityStructureProcessor>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GravityStructureProcessor_ = GravityStructureProcessor;
    interface IngredientKJS extends Internal.AsKJS {
        getItemsKJS(): Internal.ItemStack[];
        asKJS(): any;
    }
    type IngredientKJS_ = IngredientKJS;
    interface DoubleIterable extends Internal.Iterable<number> {
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.DoubleIterator;
        forEach(arg0: ((arg0: number) => void)): void;
        forEach(arg0: ((arg0: number) => void)): void;
    }
    type DoubleIterable_ = DoubleIterable;
    interface IJeiBrewingRecipe {
        getBrewingSteps(): number;
    }
    type IJeiBrewingRecipe_ = IJeiBrewingRecipe;
    interface GeneratedClassLoader {
        defineClass(arg0: string, arg1: number[]): Internal.Class<any>;
        linkClass(arg0: Internal.Class_<any>): void;
    }
    type GeneratedClassLoader_ = GeneratedClassLoader;
    class ElderGuardianEntity extends Internal.GuardianEntity {
        func_175464_ck(): number;
        static func_234283_m_(): Internal.AttributeModifierMap$MutableAttribute;
        static readonly field_213629_b : 2.35;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ElderGuardianEntity_ = ElderGuardianEntity;
    class Brain$BrainCodec <E> extends Document.Object {
        func_233748_a_(arg0: Internal.Dynamic<any>): Internal.Brain<E>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Brain$BrainCodec_<E> = Brain$BrainCodec<E>;
    class StrafePlayerPhase extends Internal.Phase {
        func_188660_d(): void;
        func_188659_c(): void;
        func_188652_i(): Internal.PhaseType<Internal.StrafePlayerPhase>;
        func_188650_g(): Vec3;
        func_188686_a(arg0: Internal.LivingEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StrafePlayerPhase_ = StrafePlayerPhase;
    class MemoryModuleStatus extends Internal.Enum<Internal.MemoryModuleStatus> {
        static valueOf(arg0: string): Internal.MemoryModuleStatus;
        static values(): Internal.MemoryModuleStatus[];
        static readonly VALUE_PRESENT : Internal.MemoryModuleStatus;
        static readonly REGISTERED : Internal.MemoryModuleStatus;
        static readonly VALUE_ABSENT : Internal.MemoryModuleStatus;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MemoryModuleStatus_ = "value_present" | "value_absent" | "registered" | MemoryModuleStatus;
    class NBTQueryManager extends Document.Object {
        func_211547_a(arg0: BlockPos, arg1: ((arg0: Internal.CompoundNBT) => void)): void;
        func_211548_a(arg0: number, arg1: Internal.CompoundNBT): boolean;
        func_211549_a(arg0: number, arg1: ((arg0: Internal.CompoundNBT) => void)): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NBTQueryManager_ = NBTQueryManager;
    class ClientPlayerDataJS extends Internal.PlayerDataJS<Internal.PlayerEntity, Internal.ClientPlayerJS> {
        getWorld(): Internal.ClientWorldJS;
        getPlayer(): Internal.PlayerJS<any>;
        getPlayer(): Internal.ClientPlayerJS;
        getMinecraftPlayer(): Internal.PlayerEntity;
        getName(): string;
        getProfile(): Internal.GameProfile;
        getId(): Internal.UUID;
        getOverworld(): Internal.WorldJS;
        get world(): Internal.ClientWorldJS;
        get minecraftPlayer(): Internal.PlayerEntity;
        get profile(): Internal.GameProfile;
        get name(): string;
        get id(): Internal.UUID;
        get overworld(): Internal.WorldJS;
        get player(): Internal.ClientPlayerJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientPlayerDataJS_ = ClientPlayerDataJS;
    class DataType <T> extends Document.Object {
        static PLAYER : Internal.DataType<Internal.PlayerDataJS>;
        readonly parent : Internal.Class<T>;
        static SERVER : Internal.DataType<Internal.ServerJS>;
        readonly name : string;
        readonly actualParent : Internal.Class;
        static WORLD : Internal.DataType<Internal.WorldJS>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DataType_<T> = DataType<T>;
    class SpiderEntity extends Internal.MonsterEntity {
        static func_234305_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70687_e(arg0: Internal.EffectInstance): boolean;
        func_213295_a(arg0: Internal.BlockState, arg1: Vec3): void;
        func_70617_f_(): boolean;
        func_70668_bt(): Internal.CreatureAttribute;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70071_h_(): void;
        func_70841_p(): boolean;
        func_70042_X(): number;
        func_70839_e(arg0: boolean): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpiderEntity_ = SpiderEntity;
    class RuntimeException extends Internal.Exception {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RuntimeException_ = RuntimeException;
    class RandomTickCallbackJS extends Document.Object {
        getServer(): Internal.ServerJS;
        getWorld(): Internal.WorldJS;
        random : Internal.Random;
        block : Internal.BlockContainerJS;
        get server(): Internal.ServerJS;
        get world(): Internal.WorldJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RandomTickCallbackJS_ = RandomTickCallbackJS;
    interface IGenericEvent <T> {
        getGenericType(): java_.lang.reflect.Type;
    }
    type IGenericEvent_<T> = IGenericEvent<T>;
    interface ClassShutter {
        visibleToScripts(arg0: string, arg1: number): boolean;
    }
    type ClassShutter_ = ClassShutter;
    class ExplosionEventJS$Pre extends Internal.ExplosionEventJS {
        getSize(): number;
        setSize(s: number): void;
        canCancel(): boolean;
        get size(): number;
        set size(s: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ExplosionEventJS$Pre_ = ExplosionEventJS$Pre;
    class ScanningSittingPhase extends Internal.SittingPhase {
        func_188660_d(): void;
        func_188659_c(): void;
        func_188652_i(): Internal.PhaseType<Internal.ScanningSittingPhase>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScanningSittingPhase_ = ScanningSittingPhase;
    interface ChronoLocalDateTime <D> extends Internal.Temporal, Internal.TemporalAdjuster, Internal.Comparable<Internal.ChronoLocalDateTime<any>> {
        minus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDateTime<D>;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDateTime<D>;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        isEqual(arg0: Internal.ChronoLocalDateTime<any>): boolean;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        toLocalTime(): Internal.LocalTime;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        format(arg0: Internal.DateTimeFormatter): string;
        isSupported(arg0: Internal.TemporalField): boolean;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.ChronoLocalDateTime<any>): number;
        atZone(arg0: Internal.ZoneId): Internal.ChronoZonedDateTime<D>;
        toInstant(arg0: Internal.ZoneOffset): Internal.Instant;
        isBefore(arg0: Internal.ChronoLocalDateTime<any>): boolean;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDateTime<D>;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDateTime<D>;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.Temporal;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.ChronoLocalDateTime<D>;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ChronoLocalDateTime<D>;
        toLocalDate(): D;
        toEpochSecond(arg0: Internal.ZoneOffset): number;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        getChronology(): Internal.Chronology;
        isAfter(arg0: Internal.ChronoLocalDateTime<any>): boolean;
    }
    type ChronoLocalDateTime_<D> = ChronoLocalDateTime<D>;
    abstract class Writer extends Document.Object implements Internal.Appendable, Internal.Closeable, Internal.Flushable {
        flush(): void;
        static nullWriter(): Internal.Writer;
        close(): void;
        write(arg0: number): void;
        write(arg0: string[], arg1: number, arg2: number): void;
        write(arg0: string): void;
        write(arg0: string, arg1: number, arg2: number): void;
        write(arg0: string[]): void;
        append(arg0: string): Internal.Writer;
        append(arg0: string): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Writer;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.Writer;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Writer_ = Writer;
    abstract class DefaultColorVertexBuilder extends Document.Object implements Internal.IVertexBuilder {
        func_225611_b_(arg0: number, arg1: number, arg2: number, arg3: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DefaultColorVertexBuilder_ = DefaultColorVertexBuilder;
    interface IJeiHelpers {
        getStackHelper(): Internal.IStackHelper;
        getModIdHelper(): Internal.IModIdHelper;
        getGuiHelper(): Internal.IGuiHelper;
    }
    type IJeiHelpers_ = IJeiHelpers;
    interface OpenOption {
    }
    type OpenOption_ = OpenOption;
    interface DirectoryStream$Filter <T> {
        accept(arg0: T): boolean;
    }
    type DirectoryStream$Filter_<T> = ((arg0: T) => boolean) | DirectoryStream$Filter<T>;
    class RenderState$TransparencyState extends Internal.RenderState {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$TransparencyState_ = RenderState$TransparencyState;
    class PlayerInteractEvent$RightClickBlock extends Internal.PlayerInteractEvent {
        setCanceled(arg0: boolean): void;
        getUseItem(): Internal.Event$Result;
        getUseBlock(): Internal.Event$Result;
        getListenerList(): Internal.ListenerList;
        getHitVec(): Internal.BlockRayTraceResult;
        isCancelable(): boolean;
        setUseBlock(arg0: Internal.Event$Result_): void;
        setUseItem(arg0: Internal.Event$Result_): void;
        get useItem(): Internal.Event$Result;
        get useBlock(): Internal.Event$Result;
        get cancelable(): boolean;
        get hitVec(): Internal.BlockRayTraceResult;
        get listenerList(): Internal.ListenerList;
        set canceled(arg0: boolean);
        set useItem(arg0: Internal.Event$Result_);
        set useBlock(arg0: Internal.Event$Result_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerInteractEvent$RightClickBlock_ = PlayerInteractEvent$RightClickBlock;
    class CCloseWindowPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CCloseWindowPacket_ = CCloseWindowPacket;
    interface IServerWorld extends Internal.IWorld {
        func_201672_e(): Internal.ServerWorld;
        func_242417_l(arg0: Internal.Entity): void;
    }
    type IServerWorld_ = IServerWorld;
    class CookingRecipeSerializer <T> extends Internal.ForgeRegistryEntry<Internal.IRecipeSerializer<any>> implements Internal.IRecipeSerializer<T> {
        func_199425_a_(arg0: ResourceLocation_, arg1: Internal.JsonObject): Internal.IRecipe<any>;
        func_199425_a_(arg0: ResourceLocation_, arg1: Internal.JsonObject): T;
        func_199426_a_(arg0: ResourceLocation_, arg1: Internal.PacketBuffer): T;
        func_199426_a_(arg0: ResourceLocation_, arg1: Internal.PacketBuffer): Internal.IRecipe<any>;
        func_199427_a_(arg0: Internal.PacketBuffer, arg1: Internal.IRecipe<any>): void;
        func_199427_a_(arg0: Internal.PacketBuffer, arg1: T): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CookingRecipeSerializer_<T> = CookingRecipeSerializer<T>;
    class ClientWorld extends Internal.World implements Internal.ExtendedWorld, Internal.ClientWorldExtended {
        func_239132_a_(): Internal.DimensionRenderInfo;
        getChunkAtImmediately(arg0: number, arg1: number): Internal.Chunk;
        func_72912_H(): Internal.ClientWorld$ClientWorldInfo;
        func_72912_H(): Internal.IWorldInfo;
        func_184153_a(xCenter: number, yCenter: number, zCenter: number, radius: number, random: Internal.Random, spawnBarrierParticles: boolean, pos: Internal.BlockPos$Mutable): void;
        func_239136_a_(arg0: BlockPos, arg1: number): void;
        func_96441_U(): Internal.Scoreboard;
        func_217427_b(arg0: number, arg1: number, arg2: number): void;
        func_217418_a(arg0: Internal.Entity): void;
        func_225604_a_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_217406_a(arg0: string): Internal.MapData;
        func_228332_n_(): number;
        func_217404_b(arg0: Internal.IParticleData, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        func_217384_a(arg0: Internal.PlayerEntity, arg1: Internal.Entity, arg2: Internal.SoundEvent, arg3: Internal.SoundCategory_, arg4: number, arg5: number): void;
        func_184148_a(arg0: Internal.PlayerEntity, arg1: number, arg2: number, arg3: number, arg4: Internal.SoundEvent, arg5: Internal.SoundCategory_, arg6: number, arg7: number): void;
        func_96443_a(arg0: Internal.Scoreboard): void;
        func_228323_e_(arg0: number, arg1: number): void;
        func_228328_h_(arg0: number): Vec3;
        func_72882_A(): void;
        func_228330_j_(arg0: number): number;
        func_217411_a(arg0: number, arg1: Internal.Entity): void;
        func_230487_a_(arg0: Internal.Direction_, arg1: boolean): number;
        func_92088_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.CompoundNBT): void;
        func_239140_u_(): BlockPos;
        func_195597_b(arg0: BlockPos, arg1: Internal.BlockState): void;
        func_217413_d(arg0: number): void;
        func_184156_a(arg0: BlockPos, arg1: Internal.SoundEvent, arg2: Internal.SoundCategory_, arg3: number, arg4: number, arg5: boolean): void;
        func_217408_a(arg0: number, arg1: Internal.AbstractClientPlayerEntity): void;
        func_217425_f(): number;
        func_184135_a(arg0: Internal.IPacket<any>): void;
        getAnyChunkImmediately(arg0: number, arg1: number): Internal.IChunk;
        func_73029_E(arg0: number, arg1: number, arg2: number): void;
        func_225319_b(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.BlockState): void;
        func_217378_a(arg0: Internal.PlayerEntity, arg1: number, arg2: BlockPos, arg3: number): void;
        func_205219_F_(): Internal.ITickList<Internal.Fluid>;
        func_217399_a(arg0: Internal.MapData): void;
        func_239134_a_(arg0: number): void;
        func_241828_r(): Internal.DynamicRegistries;
        func_228326_g_(arg0: number): number;
        func_243489_v(): number;
        func_228327_h_(): void;
        func_217420_a(arg0: Internal.Entity, arg1: Internal.Entity): void;
        func_217395_y(): number;
        func_175669_a(arg0: number, arg1: BlockPos, arg2: number): void;
        func_195589_b(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_217417_b(arg0: Internal.Chunk): void;
        func_205220_G_(): Internal.ITickList<Internal.Block>;
        func_217419_d(): void;
        func_195590_a(arg0: Internal.IParticleData, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        func_72863_F(): Internal.ClientChunkProvider;
        func_72863_F(): Internal.AbstractChunkProvider;
        getPartEntities(): Internal.Collection<Internal.PartEntity<any>>;
        func_72877_b(arg0: number): void;
        func_72835_b(arg0: (() => boolean)): void;
        func_199532_z(): Internal.RecipeManager;
        func_73045_a(arg0: number): Internal.Entity;
        func_73022_a(): void;
        func_195594_a(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_225525_a_(arg0: BlockPos, arg1: Internal.ColorResolver): number;
        func_72914_a(arg0: Internal.CrashReport): Internal.CrashReportCategory;
        func_217416_b(): Internal.Iterable<Internal.Entity>;
        func_184134_a(arg0: number, arg1: number, arg2: number, arg3: Internal.SoundEvent, arg4: Internal.SoundCategory_, arg5: number, arg6: number, arg7: boolean): void;
        func_228318_a_(arg0: BlockPos, arg1: number): Vec3;
        func_217409_a(arg0: Internal.Chunk): void;
        func_184138_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.BlockState, arg3: number): void;
        func_205772_D(): Internal.ITagCollectionSupplier;
        func_225605_c_(arg0: number): void;
        toString(): string;
        func_228321_b_(arg0: BlockPos, arg1: Internal.ColorResolver): number;
        func_217354_b(arg0: number, arg1: number): boolean;
        getBiomeSeed(): number;
        func_175715_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_217369_A(): Internal.List<Internal.AbstractClientPlayerEntity>;
        get partEntities(): Internal.Collection<Internal.PartEntity<any>>;
        get biomeSeed(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientWorld_ = ClientWorld;
    class VillagerEntity extends Internal.AbstractVillagerEntity implements Internal.IReputationTracking, Internal.IVillagerDataHolder {
        func_213743_em(): boolean;
        func_213761_t(arg0: number): void;
        func_230293_i_(arg0: Internal.ItemStack): boolean;
        func_70071_h_(): void;
        func_175557_cr(): boolean;
        func_213768_b(arg0: Internal.MerchantOffers): void;
        func_223716_a(arg0: Internal.INBT): void;
        func_175555_cq(): boolean;
        func_213366_dy(): void;
        func_213397_c(arg0: number): boolean;
        func_213766_ei(): void;
        static func_234551_eU_(): Internal.AttributeModifierMap$MutableAttribute;
        func_213770_a(arg0: Internal.ServerWorld): void;
        architectury$handleOffer(offer: Internal.MerchantOffer): Internal.MerchantOffer;
        func_223340_ej(): boolean;
        func_223346_ep(): void;
        func_213753_a(arg0: Internal.VillagerData): void;
        func_241841_a(arg0: Internal.ServerWorld, arg1: Internal.LightningBoltEntity): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.VillagerEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_223107_f(arg0: Internal.PlayerEntity): number;
        func_223722_es(): Internal.GossipManager;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70103_a(arg0: number): void;
        func_213375_cj(): Internal.Brain<Internal.VillagerEntity>;
        func_175556_cs(): boolean;
        func_242368_a(arg0: Internal.ServerWorld, arg1: Internal.VillagerEntity, arg2: number): void;
        func_242367_a(arg0: Internal.ServerWorld, arg1: number, arg2: number): void;
        func_223350_a(arg0: number): boolean;
        architectury$getMaxOfferOverride(): number;
        func_213342_e(arg0: BlockPos): void;
        func_213739_a(arg0: Internal.IReputationType, arg1: Internal.Entity): void;
        func_234552_eW_(): boolean;
        func_213767_ej(): void;
        func_70932_a_(arg0: Internal.PlayerEntity): void;
        func_213742_a(arg0: Internal.MemoryModuleType<Internal.GlobalPos>): void;
        func_70645_a(arg0: Internal.DamageSource): void;
        func_213700_eh(): Internal.VillagerData;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_223721_ek(): boolean;
        func_70604_c(arg0: Internal.LivingEntity): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_213708_dV(): number;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        static readonly field_213774_bB : {};
        static readonly field_213788_bA : {};
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VillagerEntity_ = VillagerEntity;
    class FoxEntity extends Internal.AnimalEntity {
        func_213480_dY(): boolean;
        func_70608_bn(): boolean;
        func_70071_h_(): void;
        func_213472_dX(): boolean;
        func_213455_dW(): boolean;
        func_213353_d(arg0: Internal.ItemStack): Internal.SoundEvent;
        func_213466_r(arg0: boolean): void;
        func_213461_s(arg0: boolean): void;
        static func_213481_a(arg0: Internal.FoxEntity, arg1: Internal.LivingEntity): boolean;
        func_70636_d(): void;
        func_213453_ef(): boolean;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.FoxEntity;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70103_a(arg0: number): void;
        func_175448_a(arg0: Internal.ItemStack): boolean;
        func_213471_dV(): Internal.FoxEntity$Type;
        func_213365_e(arg0: Internal.ItemStack): boolean;
        func_213467_eg(): boolean;
        func_213475_v(arg0: number): number;
        static func_234192_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        func_213451_t(arg0: boolean): void;
        func_70624_b(arg0: Internal.LivingEntity): void;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_241205_ce_(): Vec3;
        func_70642_aH(): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_213503_w(arg0: number): number;
        func_213490_ee(): boolean;
        func_213502_u(arg0: boolean): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FoxEntity_ = FoxEntity;
    class StageCreationEvent extends Document.Object {
        getPlayer(): Internal.PlayerEntity;
        setPlayerStages(s: Internal.Stages): void;
        getPlayerStages(): Internal.Stages;
        get playerStages(): Internal.Stages;
        get player(): Internal.PlayerEntity;
        set playerStages(s: Internal.Stages);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StageCreationEvent_ = StageCreationEvent;
    class LocalDateTime extends Document.Object implements Internal.Temporal, Internal.TemporalAdjuster, Internal.ChronoLocalDateTime<Internal.LocalDate>, Internal.Serializable {
        static ofEpochSecond(arg0: number, arg1: number, arg2: Internal.ZoneOffset): Internal.LocalDateTime;
        plusHours(arg0: number): Internal.LocalDateTime;
        isEqual(arg0: Internal.ChronoLocalDateTime<any>): boolean;
        toLocalTime(): Internal.LocalTime;
        compareTo(arg0: Internal.ChronoLocalDateTime<any>): number;
        compareTo(arg0: any): number;
        getDayOfWeek(): Internal.DayOfWeek;
        plusSeconds(arg0: number): Internal.LocalDateTime;
        getMinute(): number;
        static from(arg0: Internal.TemporalAccessor): Internal.LocalDateTime;
        getMonth(): Internal.Month;
        plusNanos(arg0: number): Internal.LocalDateTime;
        withHour(arg0: number): Internal.LocalDateTime;
        plusMonths(arg0: number): Internal.LocalDateTime;
        plusYears(arg0: number): Internal.LocalDateTime;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.LocalDateTime;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        minusNanos(arg0: number): Internal.LocalDateTime;
        getNano(): number;
        format(arg0: Internal.DateTimeFormatter): string;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isSupported(arg0: Internal.TemporalField): boolean;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDateTime<any>;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.LocalDateTime;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.LocalDateTime;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDateTime<any>;
        getYear(): number;
        withDayOfMonth(arg0: number): Internal.LocalDateTime;
        withMonth(arg0: number): Internal.LocalDateTime;
        isAfter(arg0: Internal.ChronoLocalDateTime<any>): boolean;
        static ofInstant(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.LocalDateTime;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.LocalDateTime;
        minus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDateTime<any>;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.LocalDateTime;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDateTime<any>;
        minusHours(arg0: number): Internal.LocalDateTime;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        withYear(arg0: number): Internal.LocalDateTime;
        plusMinutes(arg0: number): Internal.LocalDateTime;
        minusMinutes(arg0: number): Internal.LocalDateTime;
        plusDays(arg0: number): Internal.LocalDateTime;
        hashCode(): number;
        static now(): Internal.LocalDateTime;
        static now(arg0: Internal.Clock): Internal.LocalDateTime;
        static now(arg0: Internal.ZoneId): Internal.LocalDateTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): Internal.LocalDateTime;
        static of(arg0: number, arg1: Internal.Month_, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.LocalDateTime;
        static of(arg0: number, arg1: Internal.Month_, arg2: number, arg3: number, arg4: number, arg5: number): Internal.LocalDateTime;
        static of(arg0: number, arg1: Internal.Month_, arg2: number, arg3: number, arg4: number): Internal.LocalDateTime;
        static of(arg0: Internal.LocalDate, arg1: Internal.LocalTime): Internal.LocalDateTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.LocalDateTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.LocalDateTime;
        get(arg0: Internal.TemporalField): number;
        getDayOfYear(): number;
        plusWeeks(arg0: number): Internal.LocalDateTime;
        getHour(): number;
        withMinute(arg0: number): Internal.LocalDateTime;
        getMonthValue(): number;
        minusYears(arg0: number): Internal.LocalDateTime;
        atOffset(arg0: Internal.ZoneOffset): Internal.OffsetDateTime;
        minusWeeks(arg0: number): Internal.LocalDateTime;
        withDayOfYear(arg0: number): Internal.LocalDateTime;
        static parse(arg0: Internal.CharSequence): Internal.LocalDateTime;
        static parse(arg0: Internal.CharSequence, arg1: Internal.DateTimeFormatter): Internal.LocalDateTime;
        atZone(arg0: Internal.ZoneId): Internal.ChronoZonedDateTime<any>;
        atZone(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        isBefore(arg0: Internal.ChronoLocalDateTime<any>): boolean;
        minusDays(arg0: number): Internal.LocalDateTime;
        withNano(arg0: number): Internal.LocalDateTime;
        getLong(arg0: Internal.TemporalField): number;
        minusMonths(arg0: number): Internal.LocalDateTime;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.Temporal;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.ChronoLocalDateTime<any>;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.LocalDateTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.LocalDateTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ChronoLocalDateTime<any>;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        toLocalDate(): Internal.LocalDate;
        toLocalDate(): Internal.ChronoLocalDate;
        equals(arg0: any): boolean;
        getSecond(): number;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        toString(): string;
        getDayOfMonth(): number;
        minusSeconds(arg0: number): Internal.LocalDateTime;
        withSecond(arg0: number): Internal.LocalDateTime;
        static readonly MIN : Internal.LocalDateTime;
        static readonly MAX : Internal.LocalDateTime;
        get dayOfWeek(): Internal.DayOfWeek;
        get month(): Internal.Month;
        get hour(): number;
        get year(): number;
        get dayOfYear(): number;
        get dayOfMonth(): number;
        get monthValue(): number;
        get nano(): number;
        get minute(): number;
        get second(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LocalDateTime_ = LocalDateTime;
    class Direction extends Internal.Enum<Internal.Direction> implements Internal.IStringSerializable {
        func_176735_f(): Internal.Direction;
        static func_176739_a(arg0: string): Internal.Direction;
        func_176734_d(): Internal.Direction;
        static func_82600_a(arg0: number): Internal.Direction;
        func_176736_b(): number;
        static func_176737_a(x: number, y: number, z: number): Internal.Direction;
        static values(): Internal.Direction[];
        func_82601_c(): number;
        func_176730_m(): Vec3i;
        static func_218383_a(arg0: number, arg1: number, arg2: number): Internal.Direction;
        func_96559_d(): number;
        static func_176731_b(arg0: number): Internal.Direction;
        static func_196054_a(arg0: Internal.Entity): Internal.Direction[];
        static func_210769_a(arg0: number, arg1: number, arg2: number): Internal.Direction;
        static func_176733_a(arg0: number): Internal.Direction;
        func_82599_e(): number;
        static func_229385_a_(arg0: Internal.Matrix4f, arg1: Internal.Direction_): Internal.Direction;
        func_185119_l(): number;
        static func_239631_a_(arg0: Internal.Random): Internal.Direction;
        func_176742_j(): string;
        func_176746_e(): Internal.Direction;
        func_176740_k(): Internal.Direction$Axis;
        static valueOf(arg0: string): Internal.Direction;
        static func_181076_a(arg0: Internal.Direction$AxisDirection_, arg1: Internal.Direction$Axis_): Internal.Direction;
        func_176743_c(): Internal.Direction$AxisDirection;
        func_176745_a(): number;
        static func_211699_a(arg0: Internal.Direction$Axis_, arg1: Internal.Direction$AxisDirection_): Internal.Direction;
        getPitch(): number;
        func_229384_a_(): Internal.Quaternion;
        func_176610_l(): string;
        func_229386_k_(): Internal.Vector3f;
        toString(): string;
        func_243532_a(arg0: number): boolean;
        static readonly DOWN : Internal.Direction;
        static readonly NORTH : Internal.Direction;
        static readonly WEST : Internal.Direction;
        static readonly UP : Internal.Direction;
        static readonly SOUTH : Internal.Direction;
        static readonly EAST : Internal.Direction;
        get pitch(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Direction_ = "down" | "up" | "north" | "south" | "west" | "east" | Direction;
    class TextureAtlasSprite extends Document.Object implements Internal.AutoCloseable, Internal.IForgeTextureAtlasSprite, Internal.SpriteExtended {
        func_195668_m(): ResourceLocation;
        func_195663_q(): void;
        func_94211_a(): number;
        func_94219_l(): void;
        func_229241_m_(): Internal.AtlasTexture;
        func_110970_k(): number;
        func_94209_e(): number;
        getPixelRGBA(arg0: number, arg1: number, arg2: number): number;
        func_94206_g(): number;
        func_229242_p_(): number;
        func_229230_a_(arg0: Internal.IVertexBuilder): Internal.IVertexBuilder;
        func_195662_a(arg0: number, arg1: number, arg2: number): boolean;
        func_94214_a(arg0: number): number;
        toString(): string;
        markActive(): void;
        close(): void;
        func_94216_b(): number;
        func_94212_f(): number;
        func_94210_h(): number;
        func_94207_b(arg0: number): number;
        func_130098_m(): boolean;
        readonly field_195670_c : Internal.NativeImage[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TextureAtlasSprite_ = TextureAtlasSprite;
    interface ChunkMixin extends Internal.ExtendedChunk {
    }
    type ChunkMixin_ = ChunkMixin;
    class LootConditionType extends Internal.LootType<Internal.ILootCondition> {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootConditionType_ = LootConditionType;
    class AdvancementRewards$Builder extends Document.Object {
        func_203906_b(arg0: number): Internal.AdvancementRewards$Builder;
        static func_203907_a(arg0: number): Internal.AdvancementRewards$Builder;
        static func_200280_c(arg0: ResourceLocation_): Internal.AdvancementRewards$Builder;
        func_200281_a(): Internal.AdvancementRewards;
        func_200279_d(arg0: ResourceLocation_): Internal.AdvancementRewards$Builder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AdvancementRewards$Builder_ = AdvancementRewards$Builder;
    class EntityEvent$EntityConstructing extends Internal.EntityEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityEvent$EntityConstructing_ = EntityEvent$EntityConstructing;
    class PointOfInterestType extends Internal.ForgeRegistryEntry<Internal.PointOfInterestType> {
        static func_221047_b(arg0: Internal.BlockState): Internal.Optional<Internal.PointOfInterestType>;
        getBlockStates(): Internal.ImmutableSet<Internal.BlockState>;
        static func_221042_a(arg0: Internal.Block): Internal.Set<Internal.BlockState>;
        toString(): string;
        func_221045_c(): Internal.Predicate<Internal.PointOfInterestType>;
        func_225478_d(): number;
        func_221044_b(): number;
        static readonly field_221059_g : Internal.PointOfInterestType;
        static readonly field_221070_r : Internal.PointOfInterestType;
        static readonly field_221065_m : Internal.PointOfInterestType;
        static readonly field_221071_s : ((arg0: Internal.PointOfInterestType) => boolean);
        static readonly field_221066_n : Internal.PointOfInterestType;
        static readonly field_221067_o : Internal.PointOfInterestType;
        static readonly field_221068_p : Internal.PointOfInterestType;
        static readonly field_234166_w_ : Internal.PointOfInterestType;
        static readonly field_221069_q : Internal.PointOfInterestType;
        static readonly field_226358_u_ : Internal.PointOfInterestType;
        static readonly field_221053_a : ((arg0: Internal.PointOfInterestType) => boolean);
        static readonly field_226357_t_ : Internal.PointOfInterestType;
        static readonly field_221054_b : Internal.PointOfInterestType;
        static readonly field_221060_h : Internal.PointOfInterestType;
        static readonly field_221055_c : Internal.PointOfInterestType;
        static readonly field_221061_i : Internal.PointOfInterestType;
        static readonly field_221056_d : Internal.PointOfInterestType;
        static readonly field_221062_j : Internal.PointOfInterestType;
        static readonly field_226356_s_ : Internal.PointOfInterestType;
        static readonly field_221057_e : Internal.PointOfInterestType;
        static readonly field_221063_k : Internal.PointOfInterestType;
        static readonly field_221058_f : Internal.PointOfInterestType;
        static readonly field_221064_l : Internal.PointOfInterestType;
        get blockStates(): Internal.ImmutableSet<Internal.BlockState>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PointOfInterestType_ = PointOfInterestType;
    /**
    */
    class EntityJS extends Document.Object implements Internal.MessageSender, Internal.WrappedJS {
        getMyRidingOffset(): number;
        positionRider(entity: Internal.Entity): void;
        setY(y: number): void;
        getIndirectPassengers(): Internal.Collection<any>;
        setX(x: number): void;
        hasPermissions(i: number): boolean;
        isLiving(): boolean;
        isOnScoreboardTeam(teamID: string): boolean;
        isSprinting(): boolean;
        getItem(): Internal.ItemStackJS;
        setPacketCoordinates(vec3: Vec3): void;
        setPacketCoordinates(d: number, e: number, f: number): void;
        spawnAtLocation(itemStack: Internal.ItemStack): Internal.ItemEntityJS;
        spawnAtLocation(itemStack: Internal.ItemStack, f: number): Internal.ItemEntityJS;
        spawnAtLocation(itemLike: Internal.IItemProvider): Internal.ItemEntityJS;
        spawnAtLocation(itemLike: Internal.IItemProvider, i: number): Internal.ItemEntityJS;
        setGlowing(bl: boolean): void;
        addTag(string: string): boolean;
        setZ(z: number): void;
        canSpawnSprintParticle(): boolean;
        getHasCustomName(): boolean;
        runCommandSilent(command: string): number;
        isVisuallyCrawling(): boolean;
        skipAttackInteraction(entity: Internal.Entity): boolean;
        pick(d: number, f: number, bl: boolean): Internal.RayTraceResult;
        getDistanceSq(x: number, y: number, z: number): number;
        getDistanceSq(pos: BlockPos): number;
        isBoss(): boolean;
        broadcastToPlayer(serverPlayer: Internal.ServerPlayerEntity): boolean;
        removeTag(string: string): boolean;
        isGlowing(): boolean;
        clearFire(): void;
        getHorizontalFacing(): Internal.Direction;
        getDimensionChangingDelay(): number;
        isPushable(): boolean;
        setMotion(x: number, y: number, z: number): void;
        closerThan(entity: Internal.Entity, d: number): boolean;
        getProfile(): Internal.GameProfile;
        setRotation(yaw: number, pitch: number): void;
        getBbHeight(): number;
        setLocationFromBoundingbox(): void;
        handleInsidePortal(blockPos: BlockPos): void;
        isOnSameTeam(e: Internal.EntityJS_): boolean;
        isAnimal(): boolean;
        getType(): Internal.EntityType<any>;
        getType(): string;
        setCustomNameAlwaysVisible(b: boolean): void;
        createCommandSourceStack(): Internal.CommandSource;
        addMotion(x: number, y: number, z: number): void;
        hurt(damageSource: Internal.DamageSource, f: number): boolean;
        shouldShowName(): boolean;
        getPickRadius(): number;
        setSwimming(bl: boolean): void;
        lerpTo(d: number, e: number, f: number, g: number, h: number, i: number, bl: boolean): void;
        mirror(mirror: Internal.Mirror_): number;
        refreshDimensions(): void;
        checkDespawn(): void;
        playerTouch(player: Internal.PlayerEntity): void;
        turn(d: number, e: number): void;
        isOnPortalCooldown(): boolean;
        getPistonPushReaction(): Internal.PushReaction;
        getFallDistance(): number;
        startSeenByPlayer(serverPlayer: Internal.ServerPlayerEntity): void;
        setOnFire(seconds: number): void;
        isSuppressingBounce(): boolean;
        attack(source: string, hp: number): void;
        attack(hp: number): void;
        shouldRender(d: number, e: number, f: number): boolean;
        thunderHit(serverLevel: Internal.ServerWorld, lightningBolt: Internal.LightningBoltEntity): void;
        setPose(pose: Internal.Pose_): void;
        displayFireAnimation(): boolean;
        getDistance(x: number, y: number, z: number): number;
        getDistance(pos: BlockPos): number;
        getRootVehicle(): Internal.EntityJS;
        isInvulnerableTo(damageSource: Internal.DamageSource): boolean;
        getCustomName(): Internal.Text;
        getCustomName(): Internal.ITextComponent;
        getStepHeight(): number;
        sendMessage(component: Internal.ITextComponent_, uUID: Internal.UUID): void;
        checkAndResetUpdateChunkPos(): boolean;
        getRidingEntity(): Internal.EntityJS;
        setPositionAndRotation(x: number, y: number, z: number, yaw: number, pitch: number): void;
        onPassengerTurned(entity: Internal.Entity): void;
        isMonster(): boolean;
        absMoveTo(d: number, e: number, f: number): void;
        absMoveTo(d: number, e: number, f: number, g: number, h: number): void;
        setPitch(pitch: number): void;
        toString(): string;
        getFacing(): Internal.Direction;
        isOnGround(): boolean;
        isSilent(): boolean;
        copyPosition(entity: Internal.Entity): void;
        getRopeHoldPosition(f: number): Vec3;
        moveTo(vec3: Vec3): void;
        moveTo(blockPos: BlockPos, f: number, g: number): void;
        moveTo(d: number, e: number, f: number, g: number, h: number): void;
        moveTo(d: number, e: number, f: number): void;
        getMaxAirSupply(): number;
        showVehicleHealth(): boolean;
        onAboveBubbleCol(bl: boolean): void;
        getCommandSenderWorld(): Internal.WorldJS;
        getWorld(): Internal.WorldJS;
        getName(): Internal.ITextComponent;
        getName(): Internal.Text;
        getPose(): Internal.Pose;
        getSoundSource(): Internal.SoundCategory;
        setStepHeight(stepHeight: number): void;
        canChangeDimensions(): boolean;
        isWaterCreature(): boolean;
        teleportTo(d: number, e: number, f: number): void;
        saveAsPassenger(compoundTag: Internal.CompoundNBT): boolean;
        setPosition(x: number, y: number, z: number): void;
        setPosition(block: Internal.BlockContainerJS): void;
        changeDimension(serverLevel: Internal.ServerWorld): Internal.EntityJS;
        setPos(d: number, e: number, f: number): void;
        extinguish(): void;
        teleportToWithTicket(d: number, e: number, f: number): void;
        hasIndirectPassenger(entity: Internal.Entity): boolean;
        setInvulnerable(bl: boolean): void;
        animateHurt(): void;
        setDeltaMovement(d: number, e: number, f: number): void;
        setDeltaMovement(vec3: Vec3): void;
        getEncodeId(): string;
        getArmorSlots(): Internal.Iterable<any>;
        getBrightness(): number;
        isControlledByLocalInstance(): boolean;
        updateSwimming(): void;
        isSteppingCarefully(): boolean;
        getFullNBT(): Internal.CompoundNBT;
        getNoClip(): boolean;
        setYaw(yaw: number): void;
        rideableUnderWater(): boolean;
        getYaw(): number;
        onInsideBubbleColumn(bl: boolean): void;
        setShiftKeyDown(bl: boolean): void;
        setNoGravity(bl: boolean): void;
        isCustomNameVisible(): boolean;
        getMaxFallDistance(): number;
        lerpMotion(d: number, e: number, f: number): void;
        getDirection(): Internal.Direction;
        getVehicle(): Internal.EntityJS;
        setBoundingBox(aABB: Internal.AxisAlignedBB): void;
        moveRelative(f: number, vec3: Vec3): void;
        getId(): number;
        getId(): Internal.UUID;
        getRemainingFireTicks(): number;
        getBoundingBox(): Internal.AxisAlignedBB;
        remove(): void;
        load(compoundTag: Internal.CompoundNBT): void;
        ignoreExplosion(): boolean;
        getAllSlots(): Internal.Iterable<any>;
        isFrame(): boolean;
        getViewXRot(f: number): number;
        startRiding(entity: Internal.Entity): boolean;
        startRiding(entity: Internal.Entity, bl: boolean): boolean;
        startRiding(e: Internal.EntityJS_, force: boolean): boolean;
        runCommand(command: string): number;
        isInWaterRainOrBubble(): boolean;
        getCustomNameAlwaysVisible(): boolean;
        isPassengerOfSameVehicle(entity: Internal.Entity): boolean;
        setYBodyRot(f: number): void;
        getBlock(): Internal.BlockContainerJS;
        isInLava(): boolean;
        isInWater(): boolean;
        getBoundingBoxForCulling(): Internal.AxisAlignedBB;
        dismountRidingEntity(): void;
        setPosAndOldPos(d: number, e: number, f: number): void;
        unRide(): void;
        isAttackable(): boolean;
        setSecondsOnFire(i: number): void;
        isInvulnerable(): boolean;
        killed(serverLevel: Internal.ServerWorld, livingEntity: Internal.LivingEntity): void;
        isPickable(): boolean;
        getAddEntityPacket(): Internal.IPacket<any>;
        hasOnePlayerPassenger(): boolean;
        setItemSlot(equipmentSlot: EquipmentSlot_, itemStack: Internal.ItemStack): void;
        getPosition(f: number): Vec3;
        isPeacefulCreature(): boolean;
        getInstance(): Internal.EntityJS;
        getMotionZ(): number;
        restoreFrom(entity: Internal.Entity): void;
        getMotionX(): number;
        getMotionY(): number;
        setYHeadRot(f: number): void;
        isEyeInFluid(tag: Internal.ITag<any>): boolean;
        makeStuckInBlock(blockState: Internal.BlockState, vec3: Vec3): void;
        getTags(): Internal.Set<any>;
        setOnGround(bl: boolean): void;
        setInvisible(bl: boolean): void;
        setLevel(level: Internal.World): void;
        isFree(d: number, e: number, f: number): boolean;
        getBbWidth(): number;
        isInvisibleTo(player: Internal.PlayerEntity): boolean;
        stopRiding(): void;
        getPacketCoordinates(): Vec3;
        hasCustomName(): boolean;
        isPushedByFluid(): boolean;
        getServer(): Internal.ServerJS;
        isDescending(): boolean;
        is(entity: Internal.Entity): boolean;
        push(d: number, e: number, f: number): void;
        push(entity: Internal.Entity): void;
        canCollideWith(entity: Internal.Entity): boolean;
        getDimensions(pose: Internal.Pose_): Internal.EntitySize;
        isSpectator(): boolean;
        getPassengersRidingOffset(): number;
        getDisplayName(): Internal.Text;
        getDisplayName(): Internal.ITextComponent;
        getTeamColor(): number;
        isVisuallySwimming(): boolean;
        getPortalWaitTime(): number;
        getStringUUID(): string;
        isInvisible(): boolean;
        isDiscrete(): boolean;
        getFluidHeight(tag: Internal.ITag<any>): number;
        lerpHeadTo(f: number, i: number): void;
        isUnderWater(): boolean;
        save(compoundTag: Internal.CompoundNBT): boolean;
        getEyeHeight(): number;
        getEyeHeight(pose: Internal.Pose_): number;
        saveWithoutId(compoundTag: Internal.CompoundNBT): Internal.CompoundNBT;
        setUUID(uUID: Internal.UUID): void;
        setAirSupply(i: number): void;
        shouldBlockExplode(explosion: Internal.Explosion, blockGetter: Internal.IBlockReader, blockPos: BlockPos, blockState: Internal.BlockState, f: number): boolean;
        removePassengers(): void;
        getSelfAndPassengers(): Internal.Stream<any>;
        getTeam(): Internal.Team;
        playSound(soundEvent: Internal.SoundEvent, f: number, g: number): void;
        playSound(id: Internal.SoundEvent): void;
        isShiftKeyDown(): boolean;
        isIgnoringBlockTriggers(): boolean;
        isSwimming(): boolean;
        getDismountLocationForPassenger(livingEntity: Internal.LivingEntity): Vec3;
        onSyncedDataUpdated(entityDataAccessor: Internal.DataParameter<any>): void;
        fillCrashReportCategory(crashReportCategory: Internal.CrashReportCategory): void;
        blockPosition(): BlockPos;
        mergeFullNBT(tag: Internal.CompoundNBT): Internal.EntityJS;
        kill(): void;
        fireImmune(): boolean;
        baseTick(): void;
        getEyePosition(f: number): Vec3;
        getLevel(): Internal.WorldJS;
        canBeCollidedWith(): boolean;
        getPitch(): number;
        getPassengers(): Internal.List<any>;
        getPassengers(): Internal.EntityArrayList;
        isVehicle(): boolean;
        getViewYRot(f: number): number;
        interactAt(player: Internal.PlayerEntity, vec3: Vec3, interactionHand: Hand_): Internal.ActionResultType;
        isNoGravity(): boolean;
        getYHeadRot(): number;
        isPassenger(): boolean;
        isPassenger(e: Internal.EntityJS_): boolean;
        getFluidJumpThreshold(): number;
        checkAndResetForcedChunkAdditionFlag(): boolean;
        rotate(rotation: Internal.Rotation_): number;
        getRecursivePassengers(): Internal.EntityArrayList;
        getNbt(): Internal.CompoundNBT;
        setFallDistance(fallDistance: number): void;
        setCustomName(component: Internal.ITextComponent_): void;
        tell(message: Internal.ITextComponent_): void;
        getTeamId(): string;
        setPosRaw(d: number, e: number, f: number): void;
        setNoClip(noClip: boolean): void;
        causeFallDamage(f: number, g: number): boolean;
        distanceToSqr(entity: Internal.Entity): number;
        distanceToSqr(d: number, e: number, f: number): number;
        distanceToSqr(vec3: Vec3): number;
        doEnchantDamageEffects(livingEntity: Internal.LivingEntity, entity: Internal.Entity): void;
        getUUID(): Internal.UUID;
        setId(i: number): void;
        getLookAngle(): Vec3;
        getLeashOffset(): Vec3;
        getAirSupply(): number;
        getRandomX(d: number): number;
        lookAt(anchor: Internal.EntityAnchorArgument$Type_, vec3: Vec3): void;
        setFullNBT(nbt: Internal.CompoundNBT): void;
        awardKillScore(entity: Internal.Entity, i: number, damageSource: Internal.DamageSource): void;
        tick(): void;
        updateFluidHeightAndDoFluidPushing(tag: Internal.ITag<any>, d: number): boolean;
        removeVehicle(): void;
        distanceTo(entity: Internal.Entity): number;
        isAlive(): boolean;
        onlyOpCanSetNbt(): boolean;
        getHandSlots(): Internal.Iterable<any>;
        ejectPassengers(): void;
        isOnFire(): boolean;
        shouldInformAdmins(): boolean;
        getViewVector(f: number): Vec3;
        rideTick(): void;
        position(): Vec3;
        setSprinting(bl: boolean): void;
        isPlayer(): boolean;
        handleEntityEvent(b: number): void;
        getEyeY(): number;
        isAlliedTo(entity: Internal.Entity): boolean;
        isAlliedTo(team: Internal.Team): boolean;
        acceptsSuccess(): boolean;
        isCrouching(): boolean;
        getUpVector(f: number): Vec3;
        isColliding(blockPos: BlockPos, blockState: Internal.BlockState): boolean;
        isInWall(): boolean;
        interact(player: Internal.PlayerEntity, interactionHand: Hand_): Internal.ActionResultType;
        getScoreboardName(): string;
        getMotionDirection(): Internal.Direction;
        getTicksExisted(): number;
        getDeltaMovement(): Vec3;
        setSlot(i: number, itemStack: Internal.ItemStack): boolean;
        hasPassenger(entity: Internal.Entity): boolean;
        hasPassenger(class_: Internal.Class_<any>): boolean;
        setSilent(bl: boolean): void;
        getControllingPassenger(): Internal.EntityJS;
        getRandomY(): number;
        getRandomZ(d: number): number;
        setCustomNameVisible(bl: boolean): void;
        setPortalCooldown(): void;
        getLightProbePosition(f: number): Vec3;
        setMotionZ(z: number): void;
        move(moverType: Internal.MoverType_, vec3: Vec3): void;
        setMotionY(y: number): void;
        setMotionX(x: number): void;
        isInWaterOrRain(): boolean;
        isAmbientCreature(): boolean;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        isInWaterOrBubble(): boolean;
        getBlockExplosionResistance(explosion: Internal.Explosion, blockGetter: Internal.IBlockReader, blockPos: BlockPos, blockState: Internal.BlockState, fluidState: Internal.FluidState, f: number): number;
        getRotationVector(): Internal.Vector2f;
        getX(): number;
        getX(d: number): number;
        stopSeenByPlayer(serverPlayer: Internal.ServerPlayerEntity): void;
        getY(d: number): number;
        getY(): number;
        spawn(): void;
        getZ(): number;
        getZ(d: number): number;
        shouldRenderAtSqrDistance(d: number): boolean;
        getEntityData(): Internal.EntityDataManager;
        setRemainingFireTicks(i: number): void;
        acceptsFailure(): boolean;
        getForward(): Vec3;
        getNoGravity(): boolean;
        readonly persistentData : Internal.CompoundNBT;
        readonly minecraftEntity : Internal.Entity;
        get packetCoordinates(): Vec3;
        get shiftKeyDown(): boolean;
        get pickable(): boolean;
        get invisible(): boolean;
        get customNameAlwaysVisible(): boolean;
        get type(): string;
        get yHeadRot(): number;
        get maxFallDistance(): number;
        get inWaterOrBubble(): boolean;
        get block(): Internal.BlockContainerJS;
        get id(): Internal.UUID;
        get pitch(): number;
        get boundingBoxForCulling(): Internal.AxisAlignedBB;
        get item(): Internal.ItemStackJS;
        get passengers(): Internal.EntityArrayList;
        get deltaMovement(): Vec3;
        get profile(): Internal.GameProfile;
        get customName(): Internal.ITextComponent;
        get onFire(): boolean;
        get encodeId(): string;
        get tags(): Internal.Set<any>;
        get crouching(): boolean;
        get passenger(): boolean;
        get animal(): boolean;
        get ignoringBlockTriggers(): boolean;
        get inWaterRainOrBubble(): boolean;
        get stepHeight(): number;
        get bbWidth(): number;
        get commandSenderWorld(): Internal.WorldJS;
        get noClip(): boolean;
        get rotationVector(): Internal.Vector2f;
        get boundingBox(): Internal.AxisAlignedBB;
        get server(): Internal.ServerJS;
        get nbt(): Internal.CompoundNBT;
        get boss(): boolean;
        get alive(): boolean;
        get displayName(): Internal.ITextComponent;
        get facing(): Internal.Direction;
        get ambientCreature(): boolean;
        get steppingCarefully(): boolean;
        get vehicle(): boolean;
        get swimming(): boolean;
        get world(): Internal.WorldJS;
        get customNameVisible(): boolean;
        get eyeHeight(): number;
        get scoreboardName(): string;
        get underWater(): boolean;
        get motionZ(): number;
        get silent(): boolean;
        get suppressingBounce(): boolean;
        get remainingFireTicks(): number;
        get motionY(): number;
        get forward(): Vec3;
        get motionX(): number;
        get eyeY(): number;
        get team(): Internal.Team;
        get yaw(): number;
        get monster(): boolean;
        get stringUUID(): string;
        get handSlots(): Internal.Iterable<any>;
        get glowing(): boolean;
        get bbHeight(): number;
        get onGround(): boolean;
        get spectator(): boolean;
        get x(): number;
        get y(): number;
        get z(): number;
        get armorSlots(): Internal.Iterable<any>;
        get instance(): Internal.EntityJS;
        get soundSource(): Internal.SoundCategory;
        get descending(): boolean;
        get visuallySwimming(): boolean;
        get inWaterOrRain(): boolean;
        get maxAirSupply(): number;
        get pushable(): boolean;
        get allSlots(): Internal.Iterable<any>;
        get pistonPushReaction(): Internal.PushReaction;
        get selfAndPassengers(): Internal.Stream<any>;
        get indirectPassengers(): Internal.Collection<any>;
        get pose(): Internal.Pose;
        get level(): Internal.WorldJS;
        get myRidingOffset(): number;
        get horizontalFacing(): Internal.Direction;
        get uUID(): Internal.UUID;
        get portalWaitTime(): number;
        get discrete(): boolean;
        get sprinting(): boolean;
        get noGravity(): boolean;
        get fullNBT(): Internal.CompoundNBT;
        get name(): Internal.Text;
        get peacefulCreature(): boolean;
        get attackable(): boolean;
        get entityData(): Internal.EntityDataManager;
        get frame(): boolean;
        get randomY(): number;
        get controlledByLocalInstance(): boolean;
        get ticksExisted(): number;
        get fallDistance(): number;
        get lookAngle(): Vec3;
        get fluidJumpThreshold(): number;
        get airSupply(): number;
        get visuallyCrawling(): boolean;
        get waterCreature(): boolean;
        get invulnerable(): boolean;
        get onPortalCooldown(): boolean;
        get pushedByFluid(): boolean;
        get dimensionChangingDelay(): number;
        get controllingPassenger(): Internal.EntityJS;
        get addEntityPacket(): Internal.IPacket<any>;
        get direction(): Internal.Direction;
        get player(): boolean;
        get living(): boolean;
        get pickRadius(): number;
        get ridingEntity(): Internal.EntityJS;
        get inWater(): boolean;
        get rootVehicle(): Internal.EntityJS;
        get recursivePassengers(): Internal.EntityArrayList;
        get inWall(): boolean;
        get brightness(): number;
        get passengersRidingOffset(): number;
        get motionDirection(): Internal.Direction;
        get teamId(): string;
        get inLava(): boolean;
        get leashOffset(): Vec3;
        get teamColor(): number;
        set noClip(noClip: boolean);
        set boundingBox(aABB: Internal.AxisAlignedBB);
        set packetCoordinates(vec3: Vec3);
        set fallDistance(fallDistance: number);
        set shiftKeyDown(bl: boolean);
        set invisible(bl: boolean);
        set customNameAlwaysVisible(b: boolean);
        set airSupply(i: number);
        set invulnerable(bl: boolean);
        set swimming(bl: boolean);
        set customNameVisible(bl: boolean);
        set yHeadRot(f: number);
        set secondsOnFire(i: number);
        set pitch(pitch: number);
        set motionZ(z: number);
        set silent(bl: boolean);
        set remainingFireTicks(i: number);
        set pose(pose: Internal.Pose_);
        set motionY(y: number);
        set deltaMovement(vec3: Vec3);
        set motionX(x: number);
        set customName(component: Internal.ITextComponent_);
        set uUID(uUID: Internal.UUID);
        set yaw(yaw: number);
        set yBodyRot(f: number);
        set sprinting(bl: boolean);
        set onGround(bl: boolean);
        set glowing(bl: boolean);
        set noGravity(bl: boolean);
        set fullNBT(nbt: Internal.CompoundNBT);
        set x(x: number);
        set y(y: number);
        set z(z: number);
        set stepHeight(stepHeight: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityJS_ = EntityJS;
    class ModuleDescriptor$Modifier extends Internal.Enum<Internal.ModuleDescriptor$Modifier> {
        static valueOf(arg0: string): Internal.ModuleDescriptor$Modifier;
        static values(): Internal.ModuleDescriptor$Modifier[];
        static readonly AUTOMATIC : Internal.ModuleDescriptor$Modifier;
        static readonly SYNTHETIC : Internal.ModuleDescriptor$Modifier;
        static readonly MANDATED : Internal.ModuleDescriptor$Modifier;
        static readonly OPEN : Internal.ModuleDescriptor$Modifier;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleDescriptor$Modifier_ = "open" | "automatic" | "synthetic" | "mandated" | ModuleDescriptor$Modifier;
    interface IReorderingProcessor {
        accept(arg0: ((arg0: number, arg1: Internal.Style, arg2: number) => boolean)): boolean;
    }
    type IReorderingProcessor_ = ((arg0: ((arg0: number, arg1: Internal.Style, arg2: number) => boolean)) => boolean) | IReorderingProcessor;
    class CreatureAttribute extends Document.Object {
        static readonly field_223225_d_ : Internal.CreatureAttribute;
        static readonly field_223224_c_ : Internal.CreatureAttribute;
        static readonly field_223222_a_ : Internal.CreatureAttribute;
        static readonly field_223223_b_ : Internal.CreatureAttribute;
        static readonly field_203100_e : Internal.CreatureAttribute;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CreatureAttribute_ = CreatureAttribute;
    interface Long2ObjectMap <V> extends Internal.Long2ObjectFunction<V>, Internal.Map<number, V> {
        long2ObjectEntrySet(): Internal.ObjectSet<Internal.Long2ObjectMap$Entry<V>>;
        getOrDefault(arg0: any, arg1: V): V;
        getOrDefault(arg0: number, arg1: V): V;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<number, V>>;
        entrySet(): Internal.Set<any>;
        containsKey(arg0: number): boolean;
        containsKey(arg0: any): boolean;
        computeIfAbsent(arg0: number, arg1: ((arg0: number) => V)): V;
        computeIfAbsent(arg0: any, arg1: ((arg0: any) => any)): any;
        computeIfAbsent(arg0: number, arg1: ((arg0: number) => V)): V;
        values(): Internal.ObjectCollection<V>;
        values(): Internal.Collection<any>;
        replace(arg0: any, arg1: any): any;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V): V;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        clear(): void;
        computeIfAbsentPartial(arg0: number, arg1: ((arg0: number) => V)): V;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: number, arg1: any): boolean;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: number, arg1: ((arg0: number, arg1: V) => V)): V;
        compute(arg0: any, arg1: ((arg0: any, arg1: any) => any)): any;
        compute(arg0: number, arg1: ((arg0: number, arg1: V) => V)): V;
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        computeIfPresent(arg0: number, arg1: ((arg0: number, arg1: V) => V)): V;
        computeIfPresent(arg0: number, arg1: ((arg0: number, arg1: V) => V)): V;
        computeIfPresent(arg0: any, arg1: ((arg0: any, arg1: any) => any)): any;
        size(): number;
        merge(arg0: number, arg1: V, arg2: ((arg0: V, arg1: V) => V)): V;
        merge(arg0: any, arg1: any, arg2: ((arg0: any, arg1: any) => any)): any;
        merge(arg0: number, arg1: V, arg2: ((arg0: V, arg1: V) => V)): V;
        get(arg0: any): V;
        keySet(): Internal.LongSet;
        keySet(): Internal.Set<any>;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: number, arg1: V): V;
        putIfAbsent(arg0: number, arg1: V): V;
    }
    type Long2ObjectMap_<V> = Long2ObjectMap<V>;
    class RenderState$WriteMaskState extends Internal.RenderState {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$WriteMaskState_ = RenderState$WriteMaskState;
    class MapCloningRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MapCloningRecipe_ = MapCloningRecipe;
    class ContainerType <T> extends Internal.ForgeRegistryEntry<Internal.ContainerType<any>> implements Internal.IForgeContainerType<T> {
        func_221506_a(arg0: number, arg1: Internal.PlayerInventory): T;
        create(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PacketBuffer): any;
        create(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PacketBuffer): T;
        static readonly field_221508_b : Internal.ContainerType<Internal.ChestContainer>;
        static readonly field_221514_h : Internal.ContainerType<Internal.RepairContainer>;
        static readonly field_221509_c : Internal.ContainerType<Internal.ChestContainer>;
        static readonly field_221515_i : Internal.ContainerType<Internal.BeaconContainer>;
        static readonly field_221520_n : Internal.ContainerType<Internal.FurnaceContainer>;
        static readonly field_221512_f : Internal.ContainerType<Internal.ChestContainer>;
        static readonly field_234650_u_ : Internal.ContainerType<Internal.SmithingTableContainer>;
        static readonly field_221507_a : Internal.ContainerType<Internal.ChestContainer>;
        static readonly field_226625_v_ : Internal.ContainerType<Internal.CartographyContainer>;
        static readonly field_221513_g : Internal.ContainerType<Internal.DispenserContainer>;
        static readonly field_221518_l : Internal.ContainerType<Internal.WorkbenchContainer>;
        static readonly field_221523_q : Internal.ContainerType<Internal.LecternContainer>;
        static readonly field_221519_m : Internal.ContainerType<Internal.EnchantmentContainer>;
        static readonly field_221524_r : Internal.ContainerType<Internal.LoomContainer>;
        static readonly field_221516_j : Internal.ContainerType<Internal.BlastFurnaceContainer>;
        static readonly field_221521_o : Internal.ContainerType<Internal.GrindstoneContainer>;
        static readonly field_221517_k : Internal.ContainerType<Internal.BrewingStandContainer>;
        static readonly field_221522_p : Internal.ContainerType<Internal.HopperContainer>;
        static readonly field_221527_u : Internal.ContainerType<Internal.SmokerContainer>;
        static readonly field_221525_s : Internal.ContainerType<Internal.MerchantContainer>;
        static readonly field_221526_t : Internal.ContainerType<Internal.ShulkerBoxContainer>;
        static readonly field_221510_d : Internal.ContainerType<Internal.ChestContainer>;
        static readonly field_221511_e : Internal.ContainerType<Internal.ChestContainer>;
        static readonly field_221529_w : Internal.ContainerType<Internal.StonecutterContainer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ContainerType_<T> = ContainerType<T>;
    class ZoneRules extends Document.Object implements Internal.Serializable {
        getTransitions(): Internal.List<Internal.ZoneOffsetTransition>;
        getDaylightSavings(arg0: Internal.Instant): Internal.Duration;
        getTransitionRules(): Internal.List<Internal.ZoneOffsetTransitionRule>;
        previousTransition(arg0: Internal.Instant): Internal.ZoneOffsetTransition;
        getOffset(arg0: Internal.LocalDateTime): Internal.ZoneOffset;
        getOffset(arg0: Internal.Instant): Internal.ZoneOffset;
        isFixedOffset(): boolean;
        hashCode(): number;
        getValidOffsets(arg0: Internal.LocalDateTime): Internal.List<Internal.ZoneOffset>;
        getTransition(arg0: Internal.LocalDateTime): Internal.ZoneOffsetTransition;
        static of(arg0: Internal.ZoneOffset, arg1: Internal.ZoneOffset, arg2: Internal.List<Internal.ZoneOffsetTransition>, arg3: Internal.List<Internal.ZoneOffsetTransition>, arg4: Internal.List<Internal.ZoneOffsetTransitionRule>): Internal.ZoneRules;
        static of(arg0: Internal.ZoneOffset): Internal.ZoneRules;
        equals(arg0: any): boolean;
        nextTransition(arg0: Internal.Instant): Internal.ZoneOffsetTransition;
        getStandardOffset(arg0: Internal.Instant): Internal.ZoneOffset;
        toString(): string;
        isDaylightSavings(arg0: Internal.Instant): boolean;
        isValidOffset(arg0: Internal.LocalDateTime, arg1: Internal.ZoneOffset): boolean;
        get fixedOffset(): boolean;
        get transitionRules(): Internal.List<Internal.ZoneOffsetTransitionRule>;
        get transitions(): Internal.List<Internal.ZoneOffsetTransition>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZoneRules_ = ZoneRules;
    class CPlayerDiggingPacket$Action extends Internal.Enum<Internal.CPlayerDiggingPacket$Action> {
        static valueOf(arg0: string): Internal.CPlayerDiggingPacket$Action;
        static values(): Internal.CPlayerDiggingPacket$Action[];
        static readonly STOP_DESTROY_BLOCK : Internal.CPlayerDiggingPacket$Action;
        static readonly DROP_ALL_ITEMS : Internal.CPlayerDiggingPacket$Action;
        static readonly DROP_ITEM : Internal.CPlayerDiggingPacket$Action;
        static readonly RELEASE_USE_ITEM : Internal.CPlayerDiggingPacket$Action;
        static readonly ABORT_DESTROY_BLOCK : Internal.CPlayerDiggingPacket$Action;
        static readonly SWAP_ITEM_WITH_OFFHAND : Internal.CPlayerDiggingPacket$Action;
        static readonly START_DESTROY_BLOCK : Internal.CPlayerDiggingPacket$Action;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CPlayerDiggingPacket$Action_ = "start_destroy_block" | "abort_destroy_block" | "stop_destroy_block" | "drop_all_items" | "drop_item" | "release_use_item" | "swap_item_with_offhand" | CPlayerDiggingPacket$Action;
    class CEntityActionPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149512_e(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_180764_b(): Internal.CEntityActionPacket$Action;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CEntityActionPacket_ = CEntityActionPacket;
    interface PrimitiveIterator <T, T_CONS> extends Internal.Iterator<T> {
        forEachRemaining(arg0: T_CONS): void;
    }
    type PrimitiveIterator_<T, T_CONS> = PrimitiveIterator<T, T_CONS>;
    class AdvancementRewards extends Document.Object {
        func_200286_b(): Internal.JsonElement;
        func_192113_a(arg0: Internal.ServerPlayerEntity): void;
        toString(): string;
        static func_241096_a_(arg0: Internal.JsonObject): Internal.AdvancementRewards;
        static readonly field_192114_a : Internal.AdvancementRewards;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AdvancementRewards_ = AdvancementRewards;
    interface ILootFunction extends Internal.IParameterized, Internal.BiFunction<Internal.ItemStack, Internal.LootContext, Internal.ItemStack> {
        func_230425_b_(): Internal.LootFunctionType;
    }
    type ILootFunction_ = ILootFunction;
    class CheckLivingEntitySpawnEventJS extends Internal.LivingEntityEventJS {
        getBlock(): Internal.BlockContainerJS;
        getX(): number;
        getWorld(): Internal.WorldJS;
        getY(): number;
        getZ(): number;
        getEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get world(): Internal.WorldJS;
        get x(): number;
        get y(): number;
        get block(): Internal.BlockContainerJS;
        get z(): number;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CheckLivingEntitySpawnEventJS_ = CheckLivingEntitySpawnEventJS;
    class BossOverlayGui extends Internal.AbstractGui {
        func_238484_a_(arg0: Internal.MatrixStack): void;
        func_184056_f(): boolean;
        func_184055_a(arg0: Internal.SUpdateBossInfoPacket): void;
        func_184057_b(): void;
        func_184054_d(): boolean;
        func_184053_e(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BossOverlayGui_ = BossOverlayGui;
    interface ICraftingGridHelper {
        setInputs<T>(arg0: Internal.IGuiIngredientGroup<T>, arg1: Internal.List<Internal.List<T>>): void;
        setInputs<T>(arg0: Internal.IGuiIngredientGroup<T>, arg1: Internal.List<Internal.List<T>>, arg2: number, arg3: number): void;
    }
    type ICraftingGridHelper_ = ICraftingGridHelper;
    interface IPalette <T> {
        func_186040_a(): number;
        func_186041_a(arg0: T): number;
        func_230341_a_(arg0: ((arg0: T) => boolean)): boolean;
        func_186039_a(arg0: number): T;
        func_186037_b(arg0: Internal.PacketBuffer): void;
        func_186038_a(arg0: Internal.PacketBuffer): void;
        func_196968_a(arg0: Internal.ListNBT): void;
    }
    type IPalette_<T> = IPalette<T>;
    abstract class DisplayEffectsScreen <T> extends Internal.ContainerScreen<T> {
        func_230430_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DisplayEffectsScreen_<T> = DisplayEffectsScreen<T>;
    interface DoubleListIterator extends Internal.DoubleBidirectionalIterator, Internal.ListIterator<number> {
        next(): any;
        next(): number;
        add(arg0: number): void;
        add(arg0: any): void;
        add(arg0: number): void;
        set(arg0: any): void;
        set(arg0: number): void;
        set(arg0: number): void;
        previous(): any;
        previous(): number;
        remove(): void;
    }
    type DoubleListIterator_ = DoubleListIterator;
    interface ChannelProgressivePromise extends Internal.ProgressivePromise<void>, Internal.ChannelProgressiveFuture, Internal.ChannelPromise {
        unvoid(): Internal.ChannelProgressivePromise;
        setSuccess(): Internal.ChannelProgressivePromise;
        setSuccess(arg0: void): Internal.ChannelProgressivePromise;
        setFailure(arg0: Internal.Throwable): Internal.ChannelProgressivePromise;
        removeListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>[]): Internal.ChannelProgressivePromise;
        syncUninterruptibly(): Internal.ChannelProgressivePromise;
        await(): Internal.ChannelProgressivePromise;
        setProgress(arg0: number, arg1: number): Internal.ChannelProgressivePromise;
        awaitUninterruptibly(): Internal.ChannelProgressivePromise;
        removeListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>): Internal.ChannelProgressivePromise;
        sync(): Internal.ChannelProgressivePromise;
        addListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>[]): Internal.ChannelProgressivePromise;
        addListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>): Internal.ChannelProgressivePromise;
    }
    type ChannelProgressivePromise_ = ChannelProgressivePromise;
    interface IGuiItemStackGroup extends Internal.IGuiIngredientGroup<Internal.ItemStack> {
        init(arg0: number, arg1: boolean, arg2: number, arg3: number): void;
        set(arg0: number, arg1: any): void;
        set(arg0: number, arg1: Internal.ItemStack): void;
        addTooltipCallback(arg0: ((arg0: number, arg1: boolean, arg2: Internal.ItemStack, arg3: Internal.List<Internal.ITextComponent>) => void)): void;
    }
    type IGuiItemStackGroup_ = IGuiItemStackGroup;
    interface IHopper extends Internal.IInventory {
        func_145831_w(): Internal.World;
        func_96108_aC(): number;
        func_96109_aB(): number;
        func_200100_i(): Internal.VoxelShape;
        func_96107_aA(): number;
    }
    type IHopper_ = IHopper;
    interface IForgeAdvancementBuilder {
        save(arg0: ((arg0: Internal.Advancement) => void), arg1: ResourceLocation_, arg2: Internal.ExistingFileHelper): Internal.Advancement;
        self(): Internal.Advancement$Builder;
    }
    type IForgeAdvancementBuilder_ = IForgeAdvancementBuilder;
    interface IntToLongFunction {
        applyAsLong(arg0: number): number;
    }
    type IntToLongFunction_ = ((arg0: number) => number) | IntToLongFunction;
    abstract class MobEntity extends Internal.LivingEntity {
        func_70638_az(): Internal.LivingEntity;
        func_82227_f(arg0: boolean): void;
        func_174820_d(arg0: number, arg1: Internal.ItemStack): boolean;
        func_233663_d_(arg0: EquipmentSlot_): void;
        func_70071_h_(): void;
        func_184641_n(arg0: boolean): void;
        func_70656_aK(): void;
        func_70605_aq(): Internal.MovementController;
        func_110162_b(arg0: Internal.Entity, arg1: boolean): void;
        func_110163_bv(): void;
        func_213397_c(arg0: number): boolean;
        func_98053_h(arg0: boolean): void;
        func_70641_bl(): number;
        func_184638_cS(): boolean;
        func_233659_b_(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_110166_bE(): Internal.Entity;
        static func_223315_a(arg0: Internal.EntityType<Internal.MobEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_184193_aE(): Internal.Iterable<Internal.ItemStack>;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_184214_aD(): Internal.Iterable<Internal.ItemStack>;
        func_184643_a(arg0: Internal.PathNodeType_): number;
        func_213384_dI(): BlockPos;
        func_184186_bw(): boolean;
        func_213380_a(arg0: Internal.IWorld, arg1: Internal.SpawnReason_): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70103_a(arg0: number): void;
        func_175448_a(arg0: Internal.ItemStack): boolean;
        func_204209_c(arg0: number): boolean;
        func_213365_e(arg0: Internal.ItemStack): boolean;
        func_233665_g_(arg0: Internal.ItemStack): boolean;
        static func_184636_a(arg0: EquipmentSlot_, arg1: number): Internal.Item;
        func_191989_p(arg0: number): void;
        func_213394_dL(): boolean;
        func_82143_as(): number;
        func_70671_ap(): Internal.LookController;
        func_213398_dR(): boolean;
        func_70625_a(arg0: Internal.Entity, arg1: number, arg2: number): void;
        func_110160_i(arg0: boolean, arg1: boolean): void;
        func_205019_a(arg0: Internal.IWorldReader): boolean;
        static func_233666_p_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70642_aH(): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70623_bb(): void;
        func_184649_cE(): number;
        func_98052_bS(): boolean;
        func_213383_dH(): boolean;
        func_184591_cq(): Internal.HandSide;
        func_175446_cd(): boolean;
        func_70646_bf(): number;
        func_213390_a(arg0: BlockPos, arg1: number): void;
        func_94061_f(arg0: boolean): void;
        func_82171_bF(): boolean;
        func_230293_i_(arg0: Internal.ItemStack): boolean;
        func_70615_aA(): void;
        func_70661_as(): Internal.PathNavigator;
        func_230280_a_(arg0: Internal.ShootableItem): boolean;
        func_184646_p(arg0: number): void;
        func_213358_a(arg0: Internal.EntityType<any>): boolean;
        static func_184648_b(arg0: EquipmentSlot_, arg1: Internal.ItemStack): boolean;
        func_233660_b_(arg0: Internal.PathNodeType_): boolean;
        func_70659_e(arg0: number): void;
        func_184205_a(arg0: Internal.Entity, arg1: boolean): boolean;
        func_104002_bU(): boolean;
        func_70636_d(): void;
        func_184201_a(arg0: EquipmentSlot_, arg1: Internal.ItemStack): void;
        static func_184640_d(arg0: Internal.ItemStack): EquipmentSlot;
        func_184642_a(arg0: EquipmentSlot_, arg1: number): void;
        func_70657_f(arg0: number): void;
        func_184644_a(arg0: Internal.PathNodeType_, arg1: number): void;
        func_70635_at(): Internal.EntitySenses;
        func_70613_aW(): boolean;
        func_213396_dB(): number;
        func_70683_ar(): Internal.JumpController;
        func_70030_z(): void;
        func_213381_d(arg0: number): void;
        func_213391_dJ(): number;
        func_213336_c(arg0: Internal.LivingEntity): boolean;
        func_213389_a(arg0: BlockPos): boolean;
        func_213392_I(): boolean;
        func_184582_a(arg0: EquipmentSlot_): Internal.ItemStack;
        func_110167_bD(): boolean;
        func_70624_b(arg0: Internal.LivingEntity): void;
        func_233656_b_<T_>(arg0: Internal.EntityType<T_>, arg1: boolean): T_;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184652_a(arg0: Internal.PlayerEntity): boolean;
        func_213395_q(arg0: boolean): void;
        func_213346_cF(): ResourceLocation;
        func_70627_aG(): number;
        func_184230_a(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        readonly field_70714_bg : Internal.GoalSelector;
        readonly field_70715_bh : Internal.GoalSelector;
        field_70757_a : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MobEntity_ = MobEntity;
    class Attribute extends Internal.ForgeRegistryEntry<Internal.Attribute> {
        func_111109_a(arg0: number): number;
        func_233754_c_(): string;
        func_233753_a_(arg0: boolean): Internal.Attribute;
        func_111111_c(): boolean;
        func_111110_b(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Attribute_ = Attribute;
    abstract class MethodHandle extends Document.Object implements Internal.Constable {
        asCollector(arg0: number, arg1: Internal.Class_<any>, arg2: number): Internal.MethodHandle;
        asCollector(arg0: Internal.Class_<any>, arg1: number): Internal.MethodHandle;
        asSpreader(arg0: Internal.Class_<any>, arg1: number): Internal.MethodHandle;
        asSpreader(arg0: number, arg1: Internal.Class_<any>, arg2: number): Internal.MethodHandle;
        withVarargs(arg0: boolean): Internal.MethodHandle;
        invokeExact(arg0: any[]): any;
        invoke(arg0: any[]): any;
        type(): Internal.MethodType;
        describeConstable(): Internal.Optional<Internal.MethodHandleDesc>;
        bindTo(arg0: any): Internal.MethodHandle;
        asVarargsCollector(arg0: Internal.Class_<any>): Internal.MethodHandle;
        asType(arg0: Internal.MethodType): Internal.MethodHandle;
        invokeWithArguments(arg0: Internal.List<any>): any;
        invokeWithArguments(arg0: any[]): any;
        isVarargsCollector(): boolean;
        asFixedArity(): Internal.MethodHandle;
        toString(): string;
        get varargsCollector(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MethodHandle_ = MethodHandle;
    class GuiScreenEvent$MouseClickedEvent$Pre extends Internal.GuiScreenEvent$MouseClickedEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$MouseClickedEvent$Pre_ = GuiScreenEvent$MouseClickedEvent$Pre;
    class DolphinEntity extends Internal.WaterMobEntity {
        func_70646_bf(): number;
        func_208011_dD(): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70071_h_(): void;
        func_70103_a(arg0: number): void;
        func_205010_bg(): number;
        static func_223364_b(arg0: Internal.EntityType<Internal.DolphinEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_211137_b(arg0: number): void;
        func_208008_s(arg0: boolean): void;
        func_213352_e(arg0: Vec3): void;
        func_213365_e(arg0: Internal.ItemStack): boolean;
        static func_234190_eK_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70648_aU(): boolean;
        func_211136_dB(): number;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_184652_a(arg0: Internal.PlayerEntity): boolean;
        func_208010_l(): BlockPos;
        func_208012_g(arg0: BlockPos): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_184649_cE(): number;
        static readonly field_205025_a : ((arg0: Internal.ItemEntity) => boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DolphinEntity_ = DolphinEntity;
    interface Long2ObjectFunction <V> extends it.unimi.dsi.fastutil.Function<number, V>, Internal.LongFunction<V> {
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        apply(arg0: number): V;
        containsKey(arg0: any): boolean;
        containsKey(arg0: number): boolean;
        get(arg0: any): V;
        get(arg0: number): V;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        put(arg0: number, arg1: V): V;
        remove(arg0: number): V;
        remove(arg0: any): V;
    }
    type Long2ObjectFunction_<V> = ((arg0: number) => V) | Long2ObjectFunction<V>;
    class TypeWrappers extends Document.Object {
        removeAll(): void;
        getWrapperFactory(target: Internal.Class_<any>, from: any): Internal.TypeWrapperFactory<any>;
        register<T_>(target: Internal.Class_<T_>, factory: ((arg0: any) => T_)): void;
        register<T_>(target: Internal.Class_<T_>, validator: ((arg0: any) => boolean), factory: ((arg0: any) => T_)): void;
        register<F_, T_>(id: string, from: Internal.Class_<F_>, to: Internal.Class_<T_>, factory: ((arg0: F_) => T_)): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TypeWrappers_ = TypeWrappers;
    abstract class ProjectileItemEntity extends Internal.ThrowableEntity implements Internal.IRendersAsItem {
        func_184543_l(): Internal.ItemStack;
        func_213884_b(arg0: Internal.ItemStack): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ProjectileItemEntity_ = ProjectileItemEntity;
    interface Scriptable {
        setPrototype(arg0: Internal.Scriptable): void;
        getPrototype(): Internal.Scriptable;
        hasInstance(arg0: Internal.Scriptable): boolean;
        setParentScope(arg0: Internal.Scriptable): void;
        get(arg0: string, arg1: Internal.Scriptable): any;
        get(arg0: number, arg1: Internal.Scriptable): any;
        getIds(): any[];
        has(arg0: number, arg1: Internal.Scriptable): boolean;
        has(arg0: string, arg1: Internal.Scriptable): boolean;
        getClassName(): string;
        getParentScope(): Internal.Scriptable;
        delete(arg0: number): void;
        delete(arg0: string): void;
        put(arg0: string, arg1: Internal.Scriptable, arg2: any): void;
        put(arg0: number, arg1: Internal.Scriptable, arg2: any): void;
        getDefaultValue(arg0: Internal.Class_<any>): any;
    }
    type Scriptable_ = Scriptable;
    class BitArray extends Document.Object implements Internal.PackedIntegerArrayExtended {
        func_225421_a(arg0: ((arg0: number) => void)): void;
        func_188144_b(): number;
        copyUsingPalette(out: any[], palette: Internal.ClonedPalette<any>): void;
        func_188143_a(): number[];
        func_188141_a(arg0: number, arg1: number): void;
        func_219789_a(arg0: number, arg1: number): number;
        func_188142_a(arg0: number): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BitArray_ = BitArray;
    class DataJsonGenerator extends Internal.JsonGenerator {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DataJsonGenerator_ = DataJsonGenerator;
    interface Appendable {
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: string): Internal.Appendable;
    }
    type Appendable_ = Appendable;
    class BookCloningRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<any>;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BookCloningRecipe_ = BookCloningRecipe;
    class DateTimeFormatter extends Document.Object {
        withLocale(arg0: Internal.Locale): Internal.DateTimeFormatter;
        parseBest(arg0: Internal.CharSequence, arg1: ((arg0: Internal.TemporalAccessor) => any)[]): Internal.TemporalAccessor;
        static ofLocalizedDateTime(arg0: Internal.FormatStyle_, arg1: Internal.FormatStyle_): Internal.DateTimeFormatter;
        static ofLocalizedDateTime(arg0: Internal.FormatStyle_): Internal.DateTimeFormatter;
        getResolverFields(): Internal.Set<Internal.TemporalField>;
        static ofPattern(arg0: string): Internal.DateTimeFormatter;
        static ofPattern(arg0: string, arg1: Internal.Locale): Internal.DateTimeFormatter;
        static ofLocalizedDate(arg0: Internal.FormatStyle_): Internal.DateTimeFormatter;
        formatTo(arg0: Internal.TemporalAccessor, arg1: Internal.Appendable): void;
        static parsedLeapSecond(): Internal.TemporalQuery<boolean>;
        static ofLocalizedPattern(arg0: string): Internal.DateTimeFormatter;
        getChronology(): Internal.Chronology;
        withChronology(arg0: Internal.Chronology): Internal.DateTimeFormatter;
        withDecimalStyle(arg0: Internal.DecimalStyle): Internal.DateTimeFormatter;
        localizedBy(arg0: Internal.Locale): Internal.DateTimeFormatter;
        withZone(arg0: Internal.ZoneId): Internal.DateTimeFormatter;
        static parsedExcessDays(): Internal.TemporalQuery<Internal.Period>;
        withResolverStyle(arg0: Internal.ResolverStyle_): Internal.DateTimeFormatter;
        getResolverStyle(): Internal.ResolverStyle;
        format(arg0: Internal.TemporalAccessor): string;
        getZone(): Internal.ZoneId;
        parse(arg0: Internal.CharSequence, arg1: Internal.ParsePosition): Internal.TemporalAccessor;
        parse<T_>(arg0: Internal.CharSequence, arg1: ((arg0: Internal.TemporalAccessor) => T_)): T_;
        parse(arg0: Internal.CharSequence): Internal.TemporalAccessor;
        getDecimalStyle(): Internal.DecimalStyle;
        toFormat(arg0: ((arg0: Internal.TemporalAccessor) => any)): Internal.Format;
        toFormat(): Internal.Format;
        static ofLocalizedTime(arg0: Internal.FormatStyle_): Internal.DateTimeFormatter;
        toString(): string;
        withResolverFields(arg0: Internal.TemporalField[]): Internal.DateTimeFormatter;
        withResolverFields(arg0: Internal.Set<Internal.TemporalField>): Internal.DateTimeFormatter;
        getLocale(): Internal.Locale;
        parseUnresolved(arg0: Internal.CharSequence, arg1: Internal.ParsePosition): Internal.TemporalAccessor;
        static readonly ISO_OFFSET_TIME : Internal.DateTimeFormatter;
        static readonly ISO_LOCAL_DATE_TIME : Internal.DateTimeFormatter;
        static readonly RFC_1123_DATE_TIME : Internal.DateTimeFormatter;
        static readonly ISO_INSTANT : Internal.DateTimeFormatter;
        static readonly ISO_ZONED_DATE_TIME : Internal.DateTimeFormatter;
        static readonly ISO_OFFSET_DATE_TIME : Internal.DateTimeFormatter;
        static readonly ISO_DATE_TIME : Internal.DateTimeFormatter;
        static readonly ISO_DATE : Internal.DateTimeFormatter;
        static readonly ISO_TIME : Internal.DateTimeFormatter;
        static readonly ISO_LOCAL_TIME : Internal.DateTimeFormatter;
        static readonly ISO_OFFSET_DATE : Internal.DateTimeFormatter;
        static readonly ISO_ORDINAL_DATE : Internal.DateTimeFormatter;
        static readonly ISO_LOCAL_DATE : Internal.DateTimeFormatter;
        static readonly BASIC_ISO_DATE : Internal.DateTimeFormatter;
        static readonly ISO_WEEK_DATE : Internal.DateTimeFormatter;
        get resolverFields(): Internal.Set<Internal.TemporalField>;
        get zone(): Internal.ZoneId;
        get decimalStyle(): Internal.DecimalStyle;
        get resolverStyle(): Internal.ResolverStyle;
        get chronology(): Internal.Chronology;
        get locale(): Internal.Locale;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DateTimeFormatter_ = DateTimeFormatter;
    abstract class LivingRenderer <T, M> extends Internal.EntityRenderer<T> implements Internal.IEntityRenderer<T, M> {
        func_217764_d(): M;
        func_177094_a(arg0: Internal.LayerRenderer<T, M>): boolean;
        func_225623_a_(arg0: T, arg1: number, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer, arg5: number): void;
        func_225623_a_(arg0: Internal.Entity, arg1: number, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer, arg5: number): void;
        static func_229117_c_(arg0: Internal.LivingEntity, arg1: number): number;
        field_177097_h : Internal.List<Internal.LayerRenderer<T, M>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingRenderer_<T, M> = LivingRenderer<T, M>;
    class ServerWorldJS extends Internal.WorldJS {
        setDefaultSpawnPos(blockPos: BlockPos, f: number): void;
        ensureLoadedAndValid(levelReader: Internal.IWorldReader, blockPos: BlockPos, i: number): void;
        getRaid(i: number): Internal.Raid;
        getPlayerData(arg0: Internal.PlayerEntity): Internal.PlayerDataJS<any, any>;
        getPlayerData(player: Internal.PlayerEntity): Internal.ServerPlayerDataJS;
        getSharedSpawnPos(): BlockPos;
        getDataStorage(): Internal.DimensionSavedDataManager;
        getStructureAt(blockPos: BlockPos, bl: boolean, structureFeature: Internal.Structure<any>): Internal.StructureStartWrapper<any>;
        getOrCreateStructureTemplate(resourceLocation: ResourceLocation_): Internal.StructureTemplateWrapper;
        getStartForFeature(sectionPos: Internal.SectionPos, structureFeature: Internal.Structure<any>, featureAccess: Internal.IStructureReader): Internal.StructureStartWrapper<any>;
        createOrExtendRaid(serverPlayer: Internal.ServerPlayerEntity): Internal.Raid;
        getPoiManager(): Internal.PointOfInterestManager;
        getPoiInRange(predicate: ((arg0: any) => boolean), blockPos: BlockPos, i: number, occupancy: Internal.PointOfInterestManager$Status_): Internal.Stream<any>;
        findAllPoi(predicate: ((arg0: any) => boolean), predicate2: ((arg0: any) => boolean), blockPos: BlockPos, i: number, occupancy: Internal.PointOfInterestManager$Status_): Internal.Stream<any>;
        getStructureManager(): Internal.TemplateManager;
        dragonFight(): Internal.DragonFightManager;
        shouldGenerateFeatures(): boolean;
        findClosestPoi(predicate: ((arg0: any) => boolean), blockPos: BlockPos, i: number, occupancy: Internal.PointOfInterestManager$Status_): Internal.Optional<any>;
        checkConsistencyWithBlocks(chunkPos: Internal.ChunkPos, levelChunkSection: Internal.ChunkSection): void;
        forWorldGenRegion(worldGenRegion: Internal.WorldGenRegion): Internal.StructureManager;
        setTime(time: number): void;
        getServer(): Internal.ServerJS;
        setStartForFeature(sectionPos: Internal.SectionPos, structureFeature: Internal.Structure<any>, structureStart: Internal.StructureStart<any>, featureAccess: Internal.IStructureReader): void;
        poiExistsAtPosition(poiType: Internal.PointOfInterestType, blockPos: BlockPos): boolean;
        getPortalForcer(): Internal.Teleporter;
        readStructure(compoundTag: Internal.CompoundNBT): Internal.StructureTemplateWrapper;
        getNearbyRaid(blockPos: BlockPos, i: number): Internal.Raid;
        getStructureFeatureManager(): Internal.StructureManager;
        getPoiInChunk(predicate: ((arg0: any) => boolean), chunkPos: Internal.ChunkPos, occupancy: Internal.PointOfInterestManager$Status_): Internal.Stream<any>;
        getType(blockPos: BlockPos): Internal.Optional<any>;
        getSharedSpawnAngle(): number;
        getEntities(filter: string): Internal.EntityArrayList;
        getEntities(): Internal.EntityArrayList;
        getPoiCountInRange(predicate: ((arg0: any) => boolean), blockPos: BlockPos, i: number, occupancy: Internal.PointOfInterestManager$Status_): number;
        isVillage(blockPos: BlockPos): boolean;
        isVillage(sectionPos: Internal.SectionPos): boolean;
        getDragons(): Internal.List<any>;
        getSide(): Internal.ScriptType;
        getRandomPoi(predicate: ((arg0: any) => boolean), predicate2: ((arg0: any) => boolean), occupancy: Internal.PointOfInterestManager$Status_, blockPos: BlockPos, i: number, random: Internal.Random): Internal.Optional<any>;
        poiExists(blockPos: BlockPos, predicate: ((arg0: any) => boolean)): boolean;
        isRaided(blockPos: BlockPos): boolean;
        isCloseToVillage(blockPos: BlockPos, i: number): boolean;
        getPoiInSquare(predicate: ((arg0: any) => boolean), blockPos: BlockPos, i: number, occupancy: Internal.PointOfInterestManager$Status_): Internal.Stream<any>;
        getShade(direction: Internal.Direction_, bl: boolean): number;
        sectionsToVillage(sectionPos: Internal.SectionPos): number;
        getScoreboard(): Internal.ServerScoreboard;
        isFlat(): boolean;
        getSeed(): number;
        getRaids(): Internal.RaidManager;
        addReferenceForFeature(sectionPos: Internal.SectionPos, structureFeature: Internal.Structure<any>, l: number, featureAccess: Internal.IStructureReader): void;
        getChunkSource(): Internal.ServerChunkProvider;
        startsForFeature(sectionPos: Internal.SectionPos, structureFeature: Internal.Structure<any>): Internal.Stream<any>;
        setChunkForced(i: number, j: number, bl: boolean): boolean;
        findAllClosestFirstPoi(predicate: ((arg0: any) => boolean), predicate2: ((arg0: any) => boolean), blockPos: BlockPos, i: number, occupancy: Internal.PointOfInterestManager$Status_): Internal.Stream<any>;
        getStructureTemplate(resourceLocation: ResourceLocation_): Internal.StructureTemplateWrapper;
        findPoi(predicate: ((arg0: any) => boolean), predicate2: ((arg0: any) => boolean), blockPos: BlockPos, i: number, occupancy: Internal.PointOfInterestManager$Status_): Internal.Optional<any>;
        toString(): string;
        getInstance(): Internal.ServerWorldJS;
        setLocalTime(time: number): void;
        readonly persistentData : Internal.CompoundNBT;
        get server(): Internal.ServerJS;
        get side(): Internal.ScriptType;
        get portalForcer(): Internal.Teleporter;
        get instance(): Internal.ServerWorldJS;
        get sharedSpawnPos(): BlockPos;
        get seed(): number;
        get poiManager(): Internal.PointOfInterestManager;
        get structureFeatureManager(): Internal.StructureManager;
        get sharedSpawnAngle(): number;
        get structureManager(): Internal.TemplateManager;
        get entities(): Internal.EntityArrayList;
        get flat(): boolean;
        get dataStorage(): Internal.DimensionSavedDataManager;
        get chunkSource(): Internal.ServerChunkProvider;
        get scoreboard(): Internal.ServerScoreboard;
        get raids(): Internal.RaidManager;
        get dragons(): Internal.List<any>;
        set localTime(time: number);
        set time(time: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerWorldJS_ = ServerWorldJS;
    class RavagerEntity extends Internal.AbstractRaiderEntity {
        func_213660_a(arg0: number, arg1: boolean): void;
        func_82171_bF(): boolean;
        func_70103_a(arg0: number): void;
        func_184179_bs(): Internal.Entity;
        func_213684_dX(): number;
        static func_234297_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70042_X(): number;
        func_213654_dW(): Internal.SoundEvent;
        func_213687_eg(): number;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_205019_a(arg0: Internal.IWorldReader): boolean;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_213637_dY(): boolean;
        func_213683_l(): number;
        func_70636_d(): void;
        func_70685_l(arg0: Internal.Entity): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_184649_cE(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RavagerEntity_ = RavagerEntity;
    interface BiFunction <T, U, R> {
        apply(arg0: T, arg1: U): R;
        andThen<V>(arg0: ((arg0: R) => V)): Internal.BiFunction<T, U, V>;
    }
    type BiFunction_<T, U, R> = ((arg0: T, arg1: U) => R) | BiFunction<T, U, R>;
    interface ITickableSound extends Internal.ISound {
        func_73660_a(): void;
        func_147667_k(): boolean;
    }
    type ITickableSound_ = ITickableSound;
    class Vector3f extends Document.Object {
        setY(arg0: number): void;
        setX(arg0: number): void;
        func_229190_a_(arg0: Internal.Vector3f, arg1: number): void;
        setZ(arg0: number): void;
        func_195896_c(arg0: Internal.Vector3f): void;
        func_195898_a(arg0: number): void;
        func_195897_a(arg0: Internal.Vector3f): void;
        hashCode(): number;
        func_229188_a_(arg0: Internal.Matrix3f): void;
        func_195899_a(): number;
        set(arg0: number[]): void;
        func_229191_a_(arg0: ((arg0: number) => number)): void;
        func_229192_b_(arg0: number, arg1: number, arg2: number): void;
        func_195902_c(): number;
        func_229194_d_(): boolean;
        func_195903_b(arg0: Internal.Vector3f): number;
        func_214905_a(arg0: Internal.Quaternion): void;
        func_229193_c_(arg0: number): Internal.Quaternion;
        func_195904_b(arg0: number, arg1: number, arg2: number): void;
        func_195905_a(arg0: number, arg1: number, arg2: number): void;
        equals(arg0: any): boolean;
        func_195900_b(): number;
        func_229195_e_(): Internal.Vector3f;
        func_195901_a(arg0: number, arg1: number): void;
        func_229189_a_(arg0: Internal.Vector3f): void;
        toString(): string;
        func_229187_a_(arg0: number): Internal.Quaternion;
        static field_229181_d_ : Internal.Vector3f;
        static field_229179_b_ : Internal.Vector3f;
        static field_229180_c_ : Internal.Vector3f;
        static field_229183_f_ : Internal.Vector3f;
        static field_229178_a_ : Internal.Vector3f;
        static field_229182_e_ : Internal.Vector3f;
        set x(arg0: number);
        set y(arg0: number);
        set z(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Vector3f_ = Vector3f;
    class EntityMobGriefingEvent extends Internal.EntityEvent {
        getListenerList(): Internal.ListenerList;
        hasResult(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityMobGriefingEvent_ = EntityMobGriefingEvent;
    class BlockRenderType extends Internal.Enum<Internal.BlockRenderType> {
        static valueOf(arg0: string): Internal.BlockRenderType;
        static values(): Internal.BlockRenderType[];
        static readonly INVISIBLE : Internal.BlockRenderType;
        static readonly MODEL : Internal.BlockRenderType;
        static readonly ENTITYBLOCK_ANIMATED : Internal.BlockRenderType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockRenderType_ = "invisible" | "entityblock_animated" | "model" | BlockRenderType;
    interface ProgressivePromise <V> extends Internal.Promise<V>, Internal.ProgressiveFuture<V> {
        setSuccess(arg0: V): Internal.ProgressivePromise<V>;
        setFailure(arg0: Internal.Throwable): Internal.ProgressivePromise<V>;
        removeListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>[]): Internal.ProgressivePromise<V>;
        tryProgress(arg0: number, arg1: number): boolean;
        syncUninterruptibly(): Internal.ProgressivePromise<V>;
        await(): Internal.ProgressivePromise<V>;
        setProgress(arg0: number, arg1: number): Internal.ProgressivePromise<V>;
        awaitUninterruptibly(): Internal.ProgressivePromise<V>;
        removeListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>): Internal.ProgressivePromise<V>;
        sync(): Internal.ProgressivePromise<V>;
        addListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>[]): Internal.ProgressivePromise<V>;
        addListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>): Internal.ProgressivePromise<V>;
    }
    type ProgressivePromise_<V> = ProgressivePromise<V>;
    class MobSpawnerTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity {
        func_145842_c(arg0: number, arg1: number): boolean;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_189517_E_(): Internal.CompoundNBT;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_183000_F(): boolean;
        func_73660_a(): void;
        func_145881_a(): Internal.AbstractSpawner;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MobSpawnerTileEntity_ = MobSpawnerTileEntity;
    class WorkbenchContainer extends Internal.RecipeBookContainer<Internal.CraftingInventory> implements Internal.CraftingContainerAccessor {
        getCraftResult(): Internal.CraftResultInventory;
        func_201771_a(arg0: Internal.RecipeItemHelper): void;
        func_75130_a(arg0: Internal.IInventory): void;
        func_203721_h(): number;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        getCraftMatrix(): Internal.CraftingInventory;
        func_241850_m(): Internal.RecipeBookCategory;
        static func_217066_a(arg0: number, arg1: Internal.World, arg2: Internal.PlayerEntity, arg3: Internal.CraftingInventory, arg4: Internal.CraftResultInventory): void;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_201772_h(): number;
        func_201770_g(): number;
        func_94530_a(arg0: Internal.ItemStack, arg1: Internal.Slot): boolean;
        func_201769_a(arg0: Internal.IRecipe<Internal.CraftingInventory>): boolean;
        func_201767_f(): number;
        func_201768_e(): void;
        get craftMatrix(): Internal.CraftingInventory;
        get craftResult(): Internal.CraftResultInventory;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorkbenchContainer_ = WorkbenchContainer;
    class Either$Mu <R> extends Document.Object implements Internal.K1 {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Either$Mu_<R> = Either$Mu<R>;
    class ServerData extends Document.Object {
        func_152584_a(arg0: Internal.ServerData$ServerResourceMode_): void;
        func_152586_b(): Internal.ServerData$ServerResourceMode;
        static func_78837_a(arg0: Internal.CompoundNBT): Internal.ServerData;
        func_147407_a(arg0: string): void;
        func_181041_d(): boolean;
        func_78836_a(): Internal.CompoundNBT;
        func_147409_e(): string;
        func_152583_a(arg0: Internal.ServerData): void;
        field_78845_b : string;
        field_78843_d : Internal.ITextComponent;
        field_78841_f : boolean;
        field_78847_a : string;
        field_82821_f : number;
        field_78846_c : Internal.ITextComponent;
        field_78844_e : number;
        forgeData : Internal.ExtendedServerListData;
        field_82822_g : Internal.ITextComponent;
        field_147412_i : Internal.List<Internal.ITextComponent>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerData_ = ServerData;
    class Locale$LanguageRange extends Document.Object {
        hashCode(): number;
        getRange(): string;
        getWeight(): number;
        equals(arg0: any): boolean;
        static mapEquivalents(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Map_<string, Internal.List_<string>>): Internal.List<Internal.Locale$LanguageRange>;
        toString(): string;
        static parse(arg0: string): Internal.List<Internal.Locale$LanguageRange>;
        static parse(arg0: string, arg1: Internal.Map_<string, Internal.List_<string>>): Internal.List<Internal.Locale$LanguageRange>;
        static readonly MAX_WEIGHT : 1.0;
        static readonly MIN_WEIGHT : 0.0;
        get range(): string;
        get weight(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Locale$LanguageRange_ = Locale$LanguageRange;
    class Instant extends Document.Object implements Internal.Temporal, Internal.TemporalAdjuster, Internal.Comparable<Internal.Instant>, Internal.Serializable {
        static ofEpochSecond(arg0: number): Internal.Instant;
        static ofEpochSecond(arg0: number, arg1: number): Internal.Instant;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.Instant;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Instant;
        static ofEpochMilli(arg0: number): Internal.Instant;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        minusMillis(arg0: number): Internal.Instant;
        compareTo(arg0: Internal.Instant): number;
        compareTo(arg0: any): number;
        hashCode(): number;
        static now(): Internal.Instant;
        static now(arg0: Internal.Clock): Internal.Instant;
        get(arg0: Internal.TemporalField): number;
        plusSeconds(arg0: number): Internal.Instant;
        static from(arg0: Internal.TemporalAccessor): Internal.Instant;
        plusNanos(arg0: number): Internal.Instant;
        atOffset(arg0: Internal.ZoneOffset): Internal.OffsetDateTime;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.Instant;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        minusNanos(arg0: number): Internal.Instant;
        getNano(): number;
        toEpochMilli(): number;
        static parse(arg0: Internal.CharSequence): Internal.Instant;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isSupported(arg0: Internal.TemporalField): boolean;
        atZone(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        isBefore(arg0: Internal.Instant): boolean;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Instant;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.Instant;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        getLong(arg0: Internal.TemporalField): number;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Instant;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.Instant;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.Temporal;
        plusMillis(arg0: number): Internal.Instant;
        equals(arg0: any): boolean;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        toString(): string;
        minusSeconds(arg0: number): Internal.Instant;
        getEpochSecond(): number;
        isAfter(arg0: Internal.Instant): boolean;
        static readonly MIN : Internal.Instant;
        static readonly MAX : Internal.Instant;
        static readonly EPOCH : Internal.Instant;
        get nano(): number;
        get epochSecond(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Instant_ = Instant;
    abstract class DynamicRegistries extends Document.Object {
        static func_243608_a(arg0: Internal.DynamicRegistries$Impl, arg1: Internal.WorldSettingsImport<any>): void;
        static func_239770_b_(): Internal.DynamicRegistries$Impl;
        func_230521_a_<E_>(arg0: Internal.RegistryKey<Internal.Registry<E_>>): Internal.Optional<Internal.MutableRegistry<E_>>;
        func_230520_a_(): Internal.Registry<Internal.DimensionType>;
        func_243612_b<E_>(arg0: Internal.RegistryKey<Internal.Registry<E_>>): Internal.MutableRegistry<E_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DynamicRegistries_ = DynamicRegistries;
    class RepairItemRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RepairItemRecipe_ = RepairItemRecipe;
    interface IJeiRuntime {
        getRecipeManager(): Internal.IRecipeManager;
        getIngredientListOverlay(): Internal.IIngredientListOverlay;
        getBookmarkOverlay(): Internal.IBookmarkOverlay;
        getRecipesGui(): Internal.IRecipesGui;
        getIngredientFilter(): Internal.IIngredientFilter;
        getIngredientManager(): Internal.IIngredientManager;
    }
    type IJeiRuntime_ = IJeiRuntime;
    class ItemModificationProperties extends Document.Object {
        setCraftingReminder(i: Internal.Item): void;
        setBurnTime(i: number): void;
        setMaxDamage(i: number): void;
        setMaxStackSize(i: number): void;
        setTier(c: ((arg0: Internal.ModifiedToolTier) => void)): void;
        setCraftingRemainder(i: Internal.Item): void;
        setFireResistant(b: boolean): void;
        setFoodProperties(consumer: ((arg0: Internal.FoodBuilder) => void)): void;
        setRarity(r: Rarity): void;
        readonly item : Internal.ItemKJS;
        set maxStackSize(i: number);
        set tier(c: ((arg0: Internal.ModifiedToolTier) => void));
        set craftingReminder(i: Internal.Item);
        set burnTime(i: number);
        set maxDamage(i: number);
        set foodProperties(consumer: ((arg0: Internal.FoodBuilder) => void));
        set craftingRemainder(i: Internal.Item);
        set fireResistant(b: boolean);
        set rarity(r: Rarity);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemModificationProperties_ = ItemModificationProperties;
    interface ConstantDesc {
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): any;
    }
    type ConstantDesc_ = ConstantDesc;
    interface IContainerListener {
        func_71110_a(arg0: Internal.Container, arg1: Internal.NonNullList<Internal.ItemStack>): void;
        func_71111_a(arg0: Internal.Container, arg1: number, arg2: Internal.ItemStack): void;
        func_71112_a(arg0: Internal.Container, arg1: number, arg2: number): void;
    }
    type IContainerListener_ = IContainerListener;
    class RecipeBookCategory extends Internal.Enum<Internal.RecipeBookCategory> {
        static valueOf(arg0: string): Internal.RecipeBookCategory;
        static values(): Internal.RecipeBookCategory[];
        static readonly FURNACE : Internal.RecipeBookCategory;
        static readonly BLAST_FURNACE : Internal.RecipeBookCategory;
        static readonly SMOKER : Internal.RecipeBookCategory;
        static readonly CRAFTING : Internal.RecipeBookCategory;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecipeBookCategory_ = "crafting" | "furnace" | "blast_furnace" | "smoker" | RecipeBookCategory;
    interface SeekableByteChannel extends Internal.ByteChannel {
        read(arg0: Internal.ByteBuffer): number;
        truncate(arg0: number): Internal.SeekableByteChannel;
        size(): number;
        position(arg0: number): Internal.SeekableByteChannel;
        position(): number;
        write(arg0: Internal.ByteBuffer): number;
    }
    type SeekableByteChannel_ = SeekableByteChannel;
    interface ItemKJS {
        setFoodPropertiesKJS(arg0: Internal.Food): void;
        setFireResistantKJS(arg0: boolean): void;
        setCraftingRemainderKJS(arg0: Internal.Item): void;
        setMaxDamageKJS(arg0: number): void;
        setItemBuilderKJS(arg0: Internal.ItemBuilder): void;
        setBurnTimeKJS(arg0: number): void;
        setRarityKJS(arg0: Internal.Rarity_): void;
        getItemBuilderKJS(): Internal.ItemBuilder;
        setMaxStackSizeKJS(arg0: number): void;
    }
    type ItemKJS_ = ItemKJS;
    class CUpdateJigsawBlockPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_240854_g_(): Internal.JigsawTileEntity$OrientationType;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_240851_c_(): ResourceLocation;
        func_240853_e_(): ResourceLocation;
        func_240852_d_(): ResourceLocation;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218788_e(): string;
        func_218789_b(): BlockPos;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CUpdateJigsawBlockPacket_ = CUpdateJigsawBlockPacket;
    interface ContentHandlerFactory {
        createContentHandler(arg0: string): Internal.ContentHandler;
    }
    type ContentHandlerFactory_ = ContentHandlerFactory;
    class InputEvent$RawMouseEvent extends Internal.InputEvent {
        getButton(): number;
        getListenerList(): Internal.ListenerList;
        getMods(): number;
        getAction(): number;
        isCancelable(): boolean;
        get button(): number;
        get mods(): number;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get action(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InputEvent$RawMouseEvent_ = InputEvent$RawMouseEvent;
    class LootContext$EntityTarget extends Internal.Enum<Internal.LootContext$EntityTarget> implements Internal.EntityTargetKJS {
        static func_186482_a(arg0: string): Internal.LootContext$EntityTarget;
        static valueOf(arg0: string): Internal.LootContext$EntityTarget;
        static values(): Internal.LootContext$EntityTarget[];
        getNameKJS(): string;
        func_216029_a(): Internal.LootParameter<Internal.Entity>;
        static readonly DIRECT_KILLER : Internal.LootContext$EntityTarget;
        static readonly KILLER_PLAYER : Internal.LootContext$EntityTarget;
        static readonly KILLER : Internal.LootContext$EntityTarget;
        static readonly THIS : Internal.LootContext$EntityTarget;
        get nameKJS(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootContext$EntityTarget_ = "this" | "killer" | "direct_killer" | "killer_player" | LootContext$EntityTarget;
    abstract class ForwardingSet <E> extends Internal.ForwardingCollection<E> implements Internal.Set<E> {
        hashCode(): number;
        equals(arg0: any): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ForwardingSet_<E> = ForwardingSet<E>;
    interface ChunkHolder$IPlayerProvider {
        func_219097_a(arg0: Internal.ChunkPos, arg1: boolean): Internal.Stream<Internal.ServerPlayerEntity>;
    }
    type ChunkHolder$IPlayerProvider_ = ChunkHolder$IPlayerProvider;
    class JsonGenerator extends Document.Object {
        json(id: ResourceLocation_, json: Internal.JsonElement): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JsonGenerator_ = JsonGenerator;
    class HashMap <K, V> extends Internal.AbstractMap<K, V> implements Internal.Map<K, V>, Internal.Cloneable, Internal.Serializable {
        getOrDefault(arg0: any, arg1: V): V;
        entrySet(): Internal.Set<Internal.Map$Entry<K, V>>;
        containsKey(arg0: any): boolean;
        forEach(arg0: ((arg0: K, arg1: V) => void)): void;
        computeIfAbsent(arg0: K, arg1: ((arg0: K) => V)): V;
        values(): Internal.Collection<V>;
        static newHashMap<K_, V_>(arg0: number): Internal.HashMap<K_, V_>;
        replace(arg0: K, arg1: V): V;
        replace(arg0: K, arg1: V, arg2: V): boolean;
        isEmpty(): boolean;
        clear(): void;
        replaceAll(arg0: ((arg0: K, arg1: V) => V)): void;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: K, arg1: ((arg0: K, arg1: V) => V)): V;
        computeIfPresent(arg0: K, arg1: ((arg0: K, arg1: V) => V)): V;
        size(): number;
        putAll(arg0: Internal.Map_<K, V>): void;
        merge(arg0: K, arg1: V, arg2: ((arg0: V, arg1: V) => V)): V;
        get(arg0: any): V;
        clone(): any;
        keySet(): Internal.Set<K>;
        putIfAbsent(arg0: K, arg1: V): V;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HashMap_<K, V> = HashMap<K, V>;
    class BoostHelper extends Document.Object {
        func_233621_b_(arg0: Internal.CompoundNBT): void;
        func_233620_b_(): boolean;
        func_233619_a_(arg0: boolean): void;
        func_233618_a_(arg0: Internal.CompoundNBT): void;
        func_233616_a_(): void;
        func_233617_a_(arg0: Internal.Random): boolean;
        field_233610_a_ : boolean;
        field_233612_c_ : number;
        field_233611_b_ : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BoostHelper_ = BoostHelper;
    class GraphicsFanciness extends Internal.Enum<Internal.GraphicsFanciness> {
        func_238162_a_(): number;
        func_238164_b_(): string;
        static valueOf(arg0: string): Internal.GraphicsFanciness;
        static func_238163_a_(arg0: number): Internal.GraphicsFanciness;
        static values(): Internal.GraphicsFanciness[];
        func_238166_c_(): Internal.GraphicsFanciness;
        toString(): string;
        static readonly FANCY : Internal.GraphicsFanciness;
        static readonly FABULOUS : Internal.GraphicsFanciness;
        static readonly FAST : Internal.GraphicsFanciness;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GraphicsFanciness_ = "fast" | "fancy" | "fabulous" | GraphicsFanciness;
    class ServerStatusResponse$Version extends Document.Object {
        func_151304_b(): number;
        func_151303_a(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerStatusResponse$Version_ = ServerStatusResponse$Version;
    class HuskEntity extends Internal.ZombieEntity {
        func_70652_k(arg0: Internal.Entity): boolean;
        static func_223334_b(arg0: Internal.EntityType<Internal.HuskEntity>, arg1: Internal.IServerWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HuskEntity_ = HuskEntity;
    class OceanRuinStructure$Type extends Internal.Enum<Internal.OceanRuinStructure$Type> implements Internal.IStringSerializable {
        static valueOf(arg0: string): Internal.OceanRuinStructure$Type;
        static func_215136_a(arg0: string): Internal.OceanRuinStructure$Type;
        func_176610_l(): string;
        static values(): Internal.OceanRuinStructure$Type[];
        func_215135_a(): string;
        static readonly field_236998_c_ : Internal.Codec<Internal.OceanRuinStructure$Type>;
        static readonly COLD : Internal.OceanRuinStructure$Type;
        static readonly WARM : Internal.OceanRuinStructure$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OceanRuinStructure$Type_ = "warm" | "cold" | OceanRuinStructure$Type;
    class RegistryKey <T> extends Document.Object implements Internal.Comparable<Internal.RegistryKey<any>>, Internal.SpecialEquality {
        func_244356_a(arg0: Internal.RegistryKey<Internal.Registry<any>>): boolean;
        getRegistryName(): ResourceLocation;
        toString(): string;
        static func_240903_a_<T_>(arg0: Internal.RegistryKey<Internal.Registry<T_>>, arg1: ResourceLocation_): Internal.RegistryKey<T_>;
        compareTo(arg0: Internal.RegistryKey<any>): number;
        compareTo(arg0: any): number;
        static func_240902_a_<T_>(arg0: Internal.RegistryKey<Internal.Registry<T_>>): Internal.Function<ResourceLocation, Internal.RegistryKey<T_>>;
        func_240901_a_(): ResourceLocation;
        static func_240904_a_<T_>(arg0: ResourceLocation_): Internal.RegistryKey<Internal.Registry<T_>>;
        specialEquals(o: any, shallow: boolean): boolean;
        rhino_getNamespace(): string;
        rhino_getPath(): string;
        get registryName(): ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegistryKey_<T> = RegistryKey<T>;
    interface LongToDoubleFunction {
        applyAsDouble(arg0: number): number;
    }
    type LongToDoubleFunction_ = ((arg0: number) => number) | LongToDoubleFunction;
    class SUpdateTimePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149366_c(): number;
        func_149365_d(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SUpdateTimePacket_ = SUpdateTimePacket;
    class JukeboxTileEntity extends Internal.TileEntity implements Internal.IClearable {
        func_195535_a(arg0: Internal.ItemStack): void;
        func_174888_l(): void;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        handler$zoh000$read(arg0: Internal.BlockState, arg1: Internal.CompoundNBT, arg2: Internal.CallbackInfo): void;
        func_195537_c(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JukeboxTileEntity_ = JukeboxTileEntity;
    interface Object2ObjectMap$FastEntrySet <K, V> extends Internal.ObjectSet<Internal.Object2ObjectMap$Entry<K, V>> {
        fastForEach(arg0: ((arg0: Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<K, V>, V>, V>) => void)): void;
        fastIterator(): Internal.ObjectIterator<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<K, V>, V>, V>>;
    }
    type Object2ObjectMap$FastEntrySet_<K, V> = Object2ObjectMap$FastEntrySet<K, V>;
    class KeyPair extends Document.Object implements Internal.Serializable {
        getPrivate(): Internal.PrivateKey;
        getPublic(): Internal.PublicKey;
        get private(): Internal.PrivateKey;
        get public(): Internal.PublicKey;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type KeyPair_ = KeyPair;
    interface IntListIterator extends Internal.IntBidirectionalIterator, Internal.ListIterator<number> {
        next(): any;
        next(): number;
        add(arg0: number): void;
        add(arg0: any): void;
        add(arg0: number): void;
        set(arg0: any): void;
        set(arg0: number): void;
        set(arg0: number): void;
        previous(): any;
        previous(): number;
        remove(): void;
    }
    type IntListIterator_ = IntListIterator;
    interface IPacket <T> {
        func_148833_a(arg0: T): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
    }
    type IPacket_<T> = IPacket<T>;
    interface ScriptSource {
        createStream(arg0: Internal.ScriptFileInfo): Internal.InputStream;
    }
    type ScriptSource_ = ((arg0: Internal.ScriptFileInfo) => Internal.InputStream) | ScriptSource;
    class CPlayerTryUseItemOnBlockPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218794_c(): Internal.BlockRayTraceResult;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_187022_c(): Hand;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CPlayerTryUseItemOnBlockPacket_ = CPlayerTryUseItemOnBlockPacket;
    class PlacementSettings extends Document.Object {
        func_186213_g(): Internal.MutableBoundingBox;
        func_215218_i(): boolean;
        func_237134_m_(): boolean;
        func_215219_b(): Internal.PlacementSettings;
        func_186221_e(): boolean;
        func_186214_a(arg0: Internal.Mirror_): Internal.PlacementSettings;
        func_186222_a(arg0: boolean): Internal.PlacementSettings;
        func_189947_a(arg0: BlockPos): Internal.Random;
        func_186212_b(): Internal.Mirror;
        func_186223_a(arg0: Internal.MutableBoundingBox): Internal.PlacementSettings;
        func_215221_j(): Internal.List<Internal.StructureProcessor>;
        func_186218_a(arg0: Internal.ChunkPos): Internal.PlacementSettings;
        func_186217_a(): Internal.PlacementSettings;
        func_186215_c(): Internal.Rotation;
        func_207665_a(arg0: BlockPos): Internal.PlacementSettings;
        func_215220_b(arg0: Internal.StructureProcessor): Internal.PlacementSettings;
        func_189950_a(arg0: Internal.Random): Internal.PlacementSettings;
        func_215222_a(arg0: Internal.StructureProcessor): Internal.PlacementSettings;
        func_207664_d(): BlockPos;
        func_186220_a(arg0: Internal.Rotation_): Internal.PlacementSettings;
        func_237132_a_(arg0: Internal.List<Internal.Template$Palette>, arg1: BlockPos): Internal.Template$Palette;
        func_215223_c(arg0: boolean): Internal.PlacementSettings;
        func_237133_d_(arg0: boolean): Internal.PlacementSettings;
        func_204763_l(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlacementSettings_ = PlacementSettings;
    abstract class PartEntity <T> extends Internal.Entity {
        getParent(): Internal.CompoundNBT;
        func_213297_N(): Internal.IPacket<any>;
        get parent(): Internal.CompoundNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PartEntity_<T> = PartEntity<T>;
    abstract class ChunkGenerator extends Document.Object {
        func_230356_f_(): number;
        func_230354_a_(arg0: Internal.WorldGenRegion): void;
        func_235956_a_(arg0: Internal.ServerWorld, arg1: Internal.Structure<any>, arg2: BlockPos, arg3: number, arg4: boolean): BlockPos;
        func_235953_a_(arg0: Internal.ISeedReader, arg1: Internal.StructureManager, arg2: Internal.IChunk): void;
        func_230355_e_(): number;
        func_235957_b_(): Internal.DimensionStructuresSettings;
        func_242706_a(arg0: Internal.Registry<Internal.Biome>, arg1: Internal.IChunk): void;
        func_242707_a(arg0: Internal.DynamicRegistries, arg1: Internal.StructureManager, arg2: Internal.IChunk, arg3: Internal.TemplateManager, arg4: number): void;
        func_230348_a_(arg0: number, arg1: number): Internal.IBlockReader;
        func_235952_a_(arg0: Internal.ChunkPos): boolean;
        func_230349_a_(arg0: number): Internal.ChunkGenerator;
        func_205470_d(): number;
        func_230353_a_(arg0: Internal.Biome, arg1: Internal.StructureManager, arg2: Internal.EntityClassification_, arg3: BlockPos): Internal.List<Internal.MobSpawnInfo$Spawners>;
        func_230350_a_(arg0: number, arg1: Internal.BiomeManager, arg2: Internal.IChunk, arg3: CarvingGenerationStep_): void;
        func_230352_b_(arg0: Internal.IWorld, arg1: Internal.StructureManager, arg2: Internal.IChunk): void;
        func_230351_a_(arg0: Internal.WorldGenRegion, arg1: Internal.StructureManager): void;
        func_222529_a(arg0: number, arg1: number, arg2: Internal.Heightmap$Type_): number;
        func_225551_a_(arg0: Internal.WorldGenRegion, arg1: Internal.IChunk): void;
        func_202090_b(): Internal.BiomeProvider;
        func_222531_c(arg0: number, arg1: number, arg2: Internal.Heightmap$Type_): number;
        func_222532_b(arg0: number, arg1: number, arg2: Internal.Heightmap$Type_): number;
        static readonly field_235948_a_ : Internal.Codec<Internal.ChunkGenerator>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkGenerator_ = ChunkGenerator;
    class SUpdateViewDistancePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218758_b(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SUpdateViewDistancePacket_ = SUpdateViewDistancePacket;
    class RenderHandEvent extends net.minecraftforge.eventbus.api.Event {
        getLight(): number;
        getListenerList(): Internal.ListenerList;
        getHand(): Hand;
        getSwingProgress(): number;
        getPartialTicks(): number;
        getEquipProgress(): number;
        getBuffers(): Internal.IRenderTypeBuffer;
        getItemStack(): Internal.ItemStack;
        isCancelable(): boolean;
        getInterpolatedPitch(): number;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get itemStack(): Internal.ItemStack;
        get cancelable(): boolean;
        get light(): number;
        get listenerList(): Internal.ListenerList;
        get buffers(): Internal.IRenderTypeBuffer;
        get swingProgress(): number;
        get interpolatedPitch(): number;
        get equipProgress(): number;
        get hand(): Hand;
        get partialTicks(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderHandEvent_ = RenderHandEvent;
    class FishingBobberEntity extends Internal.ProjectileEntity {
        func_184222_aU(): boolean;
        func_213297_N(): Internal.IPacket<any>;
        func_180426_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        func_234607_k_(): Internal.Entity;
        func_70071_h_(): void;
        func_70103_a(arg0: number): void;
        func_146034_e(arg0: Internal.ItemStack): number;
        func_70112_a(arg0: number): boolean;
        remove(arg0: boolean): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_234606_i_(): Internal.PlayerEntity;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_234605_g_(): boolean;
        readonly field_191518_aw : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FishingBobberEntity_ = FishingBobberEntity;
    class ScalingSettings extends Document.Object {
        func_236155_d_(): number;
        func_236153_b_(): number;
        func_236154_c_(): number;
        func_236151_a_(): number;
        static readonly field_236145_a_ : Internal.Codec<Internal.ScalingSettings>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScalingSettings_ = ScalingSettings;
    interface IVillagerDataHolder {
        func_213700_eh(): Internal.VillagerData;
    }
    type IVillagerDataHolder_ = IVillagerDataHolder;
    class CPlaceRecipePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_194319_c(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_199618_b(): ResourceLocation;
        func_194318_a(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CPlaceRecipePacket_ = CPlaceRecipePacket;
    interface StructLayout extends Internal.GroupLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.GroupLayout;
        withName(arg0: string): Internal.StructLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.GroupLayout;
        withoutName(): Internal.StructLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.StructLayout;
        withByteAlignment(arg0: number): Internal.GroupLayout;
    }
    type StructLayout_ = StructLayout;
    interface IGlyphInfo extends Internal.IGlyph {
        func_211200_h(): number;
        func_211579_f(): boolean;
        func_211578_g(): number;
        func_211203_b(): number;
        func_211573_a(arg0: number, arg1: number): void;
        func_223277_l_(): number;
        func_211202_a(): number;
        func_211198_f(): number;
        func_211199_g(): number;
        func_211204_i(): number;
    }
    type IGlyphInfo_ = IGlyphInfo;
    class AddSpawnProperties extends Document.Object {
        setCategory(s: string): void;
        setEntity(s: string): void;
        readonly biomes : Internal.WorldgenEntryList;
        weight : number;
        _category : Internal.EntityClassification;
        minCount : number;
        maxCount : number;
        _entity : Internal.EntityType<any>;
        set category(s: string);
        set entity(s: string);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AddSpawnProperties_ = AddSpawnProperties;
    abstract class AbstractCookingRecipe extends Document.Object implements Internal.IRecipe<Internal.IInventory> {
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_222137_e(): number;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_199560_c(): ResourceLocation;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_222138_b(): number;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_193358_e(): string;
        func_77571_b(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractCookingRecipe_ = AbstractCookingRecipe;
    class LivingFallEvent extends Internal.LivingEvent {
        getDistance(): number;
        getListenerList(): Internal.ListenerList;
        setDistance(arg0: number): void;
        setDamageMultiplier(arg0: number): void;
        isCancelable(): boolean;
        getDamageMultiplier(): number;
        get cancelable(): boolean;
        get distance(): number;
        get listenerList(): Internal.ListenerList;
        get damageMultiplier(): number;
        set distance(arg0: number);
        set damageMultiplier(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingFallEvent_ = LivingFallEvent;
    class SRemoveEntityEffectPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186967_a(arg0: Internal.World): Internal.Entity;
        func_186968_a(): Internal.Effect;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SRemoveEntityEffectPacket_ = SRemoveEntityEffectPacket;
    class PlayerModelPart extends Internal.Enum<Internal.PlayerModelPart> {
        func_179327_a(): number;
        func_179326_d(): Internal.ITextComponent;
        static valueOf(arg0: string): Internal.PlayerModelPart;
        func_179329_c(): string;
        static values(): Internal.PlayerModelPart[];
        static readonly RIGHT_PANTS_LEG : Internal.PlayerModelPart;
        static readonly LEFT_PANTS_LEG : Internal.PlayerModelPart;
        static readonly JACKET : Internal.PlayerModelPart;
        static readonly RIGHT_SLEEVE : Internal.PlayerModelPart;
        static readonly HAT : Internal.PlayerModelPart;
        static readonly LEFT_SLEEVE : Internal.PlayerModelPart;
        static readonly CAPE : Internal.PlayerModelPart;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerModelPart_ = "cape" | "jacket" | "left_sleeve" | "right_sleeve" | "left_pants_leg" | "right_pants_leg" | "hat" | PlayerModelPart;
    class AdvancementProgress extends Document.Object implements Internal.Comparable<Internal.AdvancementProgress> {
        func_192107_d(): Internal.Iterable<string>;
        func_192106_c(arg0: string): Internal.CriterionProgress;
        func_192108_b(): boolean;
        func_192109_a(arg0: string): boolean;
        func_192102_e(): Internal.Iterable<string>;
        func_192104_a(arg0: Internal.PacketBuffer): void;
        func_192099_a(arg0: Internal.Map_<string, Internal.Criterion_>, arg1: string[][]): void;
        func_192105_a(): boolean;
        func_192103_c(): number;
        func_192101_b(arg0: string): boolean;
        func_193126_d(): string;
        compareTo(arg0: Internal.AdvancementProgress): number;
        compareTo(arg0: any): number;
        static func_192100_b(arg0: Internal.PacketBuffer): Internal.AdvancementProgress;
        func_193128_g(): Internal.Date;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AdvancementProgress_ = AdvancementProgress;
    class ChannelOutboundBuffer extends Document.Object {
        bytesBeforeUnwritable(): number;
        getUserDefinedWritability(arg0: number): boolean;
        isEmpty(): boolean;
        isWritable(): boolean;
        removeBytes(arg0: number): void;
        nioBuffers(): Internal.ByteBuffer[];
        nioBuffers(arg0: number, arg1: number): Internal.ByteBuffer[];
        nioBufferCount(): number;
        addMessage(arg0: any, arg1: number, arg2: Internal.ChannelPromise): void;
        remove(arg0: Internal.Throwable): boolean;
        remove(): boolean;
        addFlush(): void;
        totalPendingWriteBytes(): number;
        forEachFlushedMessage(arg0: Internal.ChannelOutboundBuffer$MessageProcessor): void;
        current(): any;
        size(): number;
        setUserDefinedWritability(arg0: number, arg1: boolean): void;
        nioBufferSize(): number;
        recycle(): void;
        progress(arg0: number): void;
        bytesBeforeWritable(): number;
        get empty(): boolean;
        get writable(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChannelOutboundBuffer_ = ChannelOutboundBuffer;
    class CartographyContainer extends Internal.Container {
        func_75130_a(arg0: Internal.IInventory): void;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_94530_a(arg0: Internal.ItemStack, arg1: Internal.Slot): boolean;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        readonly field_216998_c : Internal.IInventory;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CartographyContainer_ = CartographyContainer;
    class CUpdateSignPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_187017_b(): string[];
        func_179722_a(): BlockPos;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CUpdateSignPacket_ = CUpdateSignPacket;
    abstract class TypeCapture <T> extends Document.Object {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TypeCapture_<T> = TypeCapture<T>;
    class MineshaftStructure$Type extends Internal.Enum<Internal.MineshaftStructure$Type> implements Internal.IStringSerializable {
        static valueOf(arg0: string): Internal.MineshaftStructure$Type;
        func_176610_l(): string;
        static values(): Internal.MineshaftStructure$Type[];
        static func_189910_a(arg0: number): Internal.MineshaftStructure$Type;
        func_214714_a(): string;
        static readonly MESA : Internal.MineshaftStructure$Type;
        static readonly NORMAL : Internal.MineshaftStructure$Type;
        static readonly field_236324_c_ : Internal.Codec<Internal.MineshaftStructure$Type>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MineshaftStructure$Type_ = "normal" | "mesa" | MineshaftStructure$Type;
    class FillLayerConfig extends Document.Object implements Internal.IFeatureConfig {
        readonly field_214637_b : Internal.BlockState;
        static readonly field_236537_a_ : Internal.Codec<Internal.FillLayerConfig>;
        readonly field_214636_a : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FillLayerConfig_ = FillLayerConfig;
    class ResourcePackInfo$Priority extends Internal.Enum<Internal.ResourcePackInfo$Priority> {
        func_198993_a<T_>(arg0: Internal.List<T_>, arg1: T_, arg2: ((arg0: T_) => Internal.ResourcePackInfo), arg3: boolean): number;
        static valueOf(arg0: string): Internal.ResourcePackInfo$Priority;
        static values(): Internal.ResourcePackInfo$Priority[];
        func_198992_a(): Internal.ResourcePackInfo$Priority;
        static readonly TOP : Internal.ResourcePackInfo$Priority;
        static readonly BOTTOM : Internal.ResourcePackInfo$Priority;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ResourcePackInfo$Priority_ = "top" | "bottom" | ResourcePackInfo$Priority;
    class ChargingPlayerPhase extends Internal.Phase {
        func_188660_d(): void;
        func_188659_c(): void;
        func_188668_a(arg0: Vec3): void;
        func_188652_i(): Internal.PhaseType<Internal.ChargingPlayerPhase>;
        func_188651_f(): number;
        func_188650_g(): Vec3;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChargingPlayerPhase_ = ChargingPlayerPhase;
    interface ObjLongConsumer <T> {
        accept(arg0: T, arg1: number): void;
    }
    type ObjLongConsumer_<T> = ((arg0: T, arg1: number) => void) | ObjLongConsumer<T>;
    class GuiContainerEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getGuiContainer(): Internal.ContainerScreen<any>;
        get guiContainer(): Internal.ContainerScreen<any>;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiContainerEvent_ = GuiContainerEvent;
    interface IRequirementsStrategy {
        createRequirements(arg0: Internal.Collection<string>): string[][];
    }
    type IRequirementsStrategy_ = IRequirementsStrategy;
    interface Object2IntMap$Entry <K> extends Internal.Map$Entry<K, number> {
        getValue(): any;
        getValue(): number;
        getIntValue(): number;
        setValue(arg0: number): number;
        setValue(arg0: any): any;
        setValue(arg0: number): number;
    }
    type Object2IntMap$Entry_<K> = Object2IntMap$Entry<K>;
    abstract class Fluid extends Internal.ForgeRegistryEntry<Internal.Fluid> implements Internal.IForgeFluid, Internal.BlockColorSettings<any> {
        getAttributes(): Internal.FluidAttributes;
        func_204524_b(): Internal.Item;
        useSmoothColorBlending(view: Internal.IBlockDisplayReader, state: Internal.FluidState, pos: BlockPos): boolean;
        useSmoothColorBlending(arg0: Internal.IBlockDisplayReader, arg1: any, arg2: BlockPos): boolean;
        func_223407_a(arg0: Internal.FluidState): number;
        getTags(): Internal.Set<ResourceLocation>;
        func_205569_a(arg0: Internal.IWorldReader): number;
        func_207182_e(): Internal.StateContainer<Internal.Fluid, Internal.FluidState>;
        func_207185_a(arg0: Internal.ITag<Internal.Fluid>): boolean;
        func_207192_d(arg0: Internal.FluidState): number;
        func_207193_c(arg0: Internal.FluidState): boolean;
        func_207187_a(arg0: Internal.Fluid): boolean;
        func_215664_b(arg0: Internal.FluidState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        func_207188_f(): Internal.FluidState;
        func_215662_a(arg0: Internal.FluidState, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        static readonly field_207201_d : Internal.ObjectIntIdentityMap<Internal.FluidState>;
        get attributes(): Internal.FluidAttributes;
        get tags(): Internal.Set<ResourceLocation>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Fluid_ = Fluid;
    class TraderLlamaEntity extends Internal.LlamaEntity {
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70636_d(): void;
        func_213800_eB(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TraderLlamaEntity_ = TraderLlamaEntity;
    abstract class RuleTest extends Document.Object {
        func_215181_a(arg0: Internal.BlockState, arg1: Internal.Random): boolean;
        static readonly field_237127_c_ : Internal.Codec<Internal.RuleTest>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RuleTest_ = RuleTest;
    class ExplosionEventJS$Post extends Internal.ExplosionEventJS {
        removeAffectedBlock(block: Internal.BlockContainerJS): void;
        removeAllAffectedBlocks(): void;
        removeKnockback(): void;
        getAffectedEntities(): Internal.EntityArrayList;
        removeAllAffectedEntities(): void;
        getAffectedBlocks(): Internal.List<Internal.BlockContainerJS>;
        removeAffectedEntity(entity: Internal.EntityJS_): void;
        get affectedEntities(): Internal.EntityArrayList;
        get affectedBlocks(): Internal.List<Internal.BlockContainerJS>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ExplosionEventJS$Post_ = ExplosionEventJS$Post;
    class CooldownTracker extends Document.Object {
        func_185141_a(arg0: Internal.Item): boolean;
        func_185142_b(arg0: Internal.Item): void;
        func_185143_a(arg0: Internal.Item, arg1: number): number;
        func_185144_a(): void;
        func_185145_a(arg0: Internal.Item, arg1: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CooldownTracker_ = CooldownTracker;
    class SMountEntityPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149402_e(): number;
        func_149403_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SMountEntityPacket_ = SMountEntityPacket;
    interface ITooltipCallback <T> {
        onTooltip(arg0: number, arg1: boolean, arg2: T, arg3: Internal.List<Internal.ITextComponent>): void;
    }
    type ITooltipCallback_<T> = ((arg0: number, arg1: boolean, arg2: T, arg3: Internal.List<Internal.ITextComponent>) => void) | ITooltipCallback<T>;
    abstract class JigsawPiece extends Document.Object {
        func_230378_a_(arg0: Internal.TemplateManager, arg1: Internal.ISeedReader, arg2: Internal.StructureManager, arg3: Internal.ChunkGenerator, arg4: BlockPos, arg5: BlockPos, arg6: Internal.Rotation_, arg7: Internal.MutableBoundingBox, arg8: Internal.Random, arg9: boolean): boolean;
        func_214846_a(arg0: Internal.IWorld, arg1: Internal.Template$BlockInfo, arg2: BlockPos, arg3: Internal.Rotation_, arg4: Internal.Random, arg5: Internal.MutableBoundingBox): void;
        func_214845_a(arg0: Internal.JigsawPattern$PlacementBehaviour_): Internal.JigsawPiece;
        func_214854_c(): Internal.JigsawPattern$PlacementBehaviour;
        func_214849_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_, arg3: Internal.Random): Internal.List<Internal.Template$BlockInfo>;
        func_214852_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_): Internal.MutableBoundingBox;
        func_214850_d(): number;
        func_214853_a(): Internal.IJigsawDeserializer<any>;
        static func_242845_a(arg0: Internal.ConfiguredFeature<any, any>): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.FeatureJigsawPiece>;
        static func_242861_b(arg0: string, arg1: Internal.StructureProcessorList): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.SingleJigsawPiece>;
        static func_242851_a(arg0: string, arg1: Internal.StructureProcessorList): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.LegacySingleJigsawPiece>;
        static func_242853_a(arg0: Internal.List<((arg0: Internal.JigsawPattern$PlacementBehaviour) => Internal.JigsawPiece)>): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.ListJigsawPiece>;
        static func_242864_g(): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.EmptyJigsawPiece>;
        static func_242849_a(arg0: string): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.LegacySingleJigsawPiece>;
        static func_242859_b(arg0: string): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.SingleJigsawPiece>;
        static readonly field_236847_e_ : Internal.Codec<Internal.JigsawPiece>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JigsawPiece_ = JigsawPiece;
    class SMultiBlockChangePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_244311_b(): boolean;
        func_244310_a(arg0: ((arg0: BlockPos, arg1: Internal.BlockState) => void)): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SMultiBlockChangePacket_ = SMultiBlockChangePacket;
    interface SequencedMap <K, V> extends Internal.Map<K, V> {
        pollFirstEntry(): Internal.Map$Entry<K, V>;
        putLast(arg0: K, arg1: V): V;
        lastEntry(): Internal.Map$Entry<K, V>;
        sequencedKeySet(): Internal.SequencedSet<K>;
        firstEntry(): Internal.Map$Entry<K, V>;
        putFirst(arg0: K, arg1: V): V;
        sequencedEntrySet(): Internal.SequencedSet<Internal.Map$Entry<K, V>>;
        sequencedValues(): Internal.SequencedCollection<V>;
        reversed(): Internal.SequencedMap<K, V>;
        pollLastEntry(): Internal.Map$Entry<K, V>;
    }
    type SequencedMap_<K, V> = SequencedMap<K, V>;
    class PaintingType extends Internal.ForgeRegistryEntry<Internal.PaintingType> {
        func_200834_b(): number;
        func_200832_c(): number;
        static readonly field_200857_p : Internal.PaintingType;
        static readonly field_200856_o : Internal.PaintingType;
        static readonly field_200855_n : Internal.PaintingType;
        static readonly field_200854_m : Internal.PaintingType;
        static readonly field_200853_l : Internal.PaintingType;
        static readonly field_200852_k : Internal.PaintingType;
        static readonly field_200851_j : Internal.PaintingType;
        static readonly field_200850_i : Internal.PaintingType;
        static readonly field_200863_v : Internal.PaintingType;
        static readonly field_200864_w : Internal.PaintingType;
        static readonly field_200862_u : Internal.PaintingType;
        static readonly field_200865_x : Internal.PaintingType;
        static readonly field_200861_t : Internal.PaintingType;
        static readonly field_200866_y : Internal.PaintingType;
        static readonly field_200849_h : Internal.PaintingType;
        static readonly field_200860_s : Internal.PaintingType;
        static readonly field_200867_z : Internal.PaintingType;
        static readonly field_200848_g : Internal.PaintingType;
        static readonly field_200847_f : Internal.PaintingType;
        static readonly field_200846_e : Internal.PaintingType;
        static readonly field_200845_d : Internal.PaintingType;
        static readonly field_200837_A : Internal.PaintingType;
        static readonly field_200844_c : Internal.PaintingType;
        static readonly field_200843_b : Internal.PaintingType;
        static readonly field_200859_r : Internal.PaintingType;
        static readonly field_200858_q : Internal.PaintingType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PaintingType_ = PaintingType;
    class IPBanEntry extends Internal.BanEntry<string> {
        func_199041_e(): Internal.ITextComponent;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IPBanEntry_ = IPBanEntry;
    interface IMutableSearchTree <T> extends Internal.ISearchTree<T> {
        func_217872_a(arg0: T): void;
        func_194040_a(): void;
        func_217871_a(): void;
    }
    type IMutableSearchTree_<T> = IMutableSearchTree<T>;
    class BufferBuilder extends Internal.DefaultColorVertexBuilder implements Internal.IVertexConsumer, Internal.VertexDrain, Internal.VertexBufferView {
        ensureBufferCapacity(bytes: number): boolean;
        func_181667_k(): void;
        func_225588_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number): void;
        func_225589_a_(arg0: number, arg1: number): void;
        func_227890_a_(matrices: Internal.MatrixStack$Entry, quad: Internal.BakedQuad, brightnessTable: number[], r: number, g: number, b: number, light: number[], overlay: number, colorize: boolean): void;
        func_178993_a(arg0: Internal.BufferBuilder$State): void;
        func_225586_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IVertexBuilder;
        func_227832_f_(): com.mojang.datafixers.util.Pair<Internal.BufferBuilder$DrawState, Internal.ByteBuffer>;
        func_178965_a(): void;
        createSink(factory: Internal.VertexType<any>): Internal.VertexSink;
        flush(vertexCount: number, format: Internal.BufferVertexFormat): void;
        func_178977_d(): void;
        getWriterPosition(): number;
        func_181675_d(): void;
        func_227833_h_(): void;
        func_225592_i_(): Internal.VertexFormatElement;
        func_181668_a(arg0: number, arg1: Internal.VertexFormat): void;
        func_181672_a(): Internal.BufferBuilder$State;
        func_181674_a(cameraX: number, cameraY: number, cameraZ: number): void;
        func_227834_j_(): boolean;
        getVertexFormat(): Internal.BufferVertexFormat;
        getVertexFormat(): Internal.VertexFormat;
        putBulkData(arg0: Internal.ByteBuffer): void;
        func_225590_a_(arg0: number, arg1: number): void;
        func_225591_a_(arg0: number, arg1: number): void;
        getDirectBuffer(): Internal.ByteBuffer;
        get vertexFormat(): Internal.VertexFormat;
        get writerPosition(): number;
        get directBuffer(): Internal.ByteBuffer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BufferBuilder_ = BufferBuilder;
    class RenderType$OutlineState extends Internal.Enum<Internal.RenderType$OutlineState> {
        static valueOf(arg0: string): Internal.RenderType$OutlineState;
        static values(): Internal.RenderType$OutlineState[];
        toString(): string;
        static readonly IS_OUTLINE : Internal.RenderType$OutlineState;
        static readonly NONE : Internal.RenderType$OutlineState;
        static readonly AFFECTS_OUTLINE : Internal.RenderType$OutlineState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderType$OutlineState_ = "none" | "is_outline" | "affects_outline" | RenderType$OutlineState;
    abstract class ImmutableList <E> extends Internal.ImmutableCollection<E> implements Internal.List<E>, Internal.RandomAccess {
        add(arg0: number, arg1: E): void;
        subList(arg0: number, arg1: number): Internal.List<any>;
        subList(arg0: number, arg1: number): Internal.ImmutableList<E>;
        set(arg0: number, arg1: E): E;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: ((arg0: E) => void)): void;
        sort(arg0: ((arg0: any) => boolean)): void;
        static copyOf<E_>(arg0: Internal.Collection<E_>): Internal.ImmutableList<E_>;
        static copyOf<E_>(arg0: Internal.Iterable<E_>): Internal.ImmutableList<E_>;
        static copyOf<E_>(arg0: E_[]): Internal.ImmutableList<E_>;
        static copyOf<E_>(arg0: Internal.Iterator<E_>): Internal.ImmutableList<E_>;
        reverse(): Internal.ImmutableList<E>;
        replaceAll(arg0: Internal.UnaryOperator<E>): void;
        asList(): Internal.ImmutableList<E>;
        remove(arg0: number): E;
        static sortedCopyOf<E_>(arg0: Internal.Iterable<E_>): Internal.ImmutableList<E_>;
        static sortedCopyOf<E_>(arg0: ((arg0: any) => boolean), arg1: Internal.Iterable<E_>): Internal.ImmutableList<E_>;
        lastIndexOf(arg0: any): number;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.UnmodifiableIterator<E>;
        addAll(arg0: number, arg1: Internal.Collection<E>): boolean;
        hashCode(): number;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_, arg7: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_, arg7: E_, arg8: E_): Internal.ImmutableList<E_>;
        static of<E_>(): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_, arg7: E_, arg8: E_, arg9: E_, arg10: E_, arg11: E_, arg12: E_[]): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_, arg7: E_, arg8: E_, arg9: E_, arg10: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_, arg7: E_, arg8: E_, arg9: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_): Internal.ImmutableList<E_>;
        equals(arg0: any): boolean;
        static toImmutableList<E_>(): Internal.Collector<E_, any, Internal.ImmutableList<E_>>;
        static builder<E_>(): Internal.ImmutableList$Builder<E_>;
        listIterator(arg0: number): Internal.ListIterator<any>;
        listIterator(arg0: number): Internal.UnmodifiableListIterator<E>;
        listIterator(): Internal.ListIterator<any>;
        listIterator(): Internal.UnmodifiableListIterator<E>;
        indexOf(arg0: any): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableList_<E> = ImmutableList<E>;
    class CommandBlockMinecartEntity extends Internal.AbstractMinecartEntity {
        func_180457_u(): Internal.BlockState;
        func_145822_e(): Internal.CommandBlockLogic;
        func_184264_v(): Internal.AbstractMinecartEntity$Type;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_184213_bq(): boolean;
        func_96095_a(arg0: number, arg1: number, arg2: number, arg3: boolean): void;
        func_184230_a(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandBlockMinecartEntity_ = CommandBlockMinecartEntity;
    class JsonArray extends Internal.JsonElement implements Internal.Iterable<Internal.JsonElement> {
        add(arg0: string): void;
        add(arg0: boolean): void;
        add(arg0: Internal.JsonElement): void;
        add(arg0: string): void;
        add(arg0: Internal.Number): void;
        getAsFloat(): number;
        getAsBigInteger(): Internal.BigInteger;
        getAsByte(): number;
        set(arg0: number, arg1: Internal.JsonElement): Internal.JsonElement;
        getAsBigDecimal(): Internal.BigDecimal;
        getAsNumber(): Internal.Number;
        getAsCharacter(): string;
        getAsString(): string;
        getAsDouble(): number;
        getAsInt(): number;
        remove(arg0: number): Internal.JsonElement;
        remove(arg0: Internal.JsonElement): boolean;
        getAsLong(): number;
        contains(arg0: Internal.JsonElement): boolean;
        iterator(): Internal.Iterator<Internal.JsonElement>;
        size(): number;
        addAll(arg0: Internal.JsonArray): void;
        getAsBoolean(): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        get(arg0: number): Internal.JsonElement;
        getAsShort(): number;
        get asByte(): number;
        get asLong(): number;
        get asInt(): number;
        get asBigInteger(): Internal.BigInteger;
        get asCharacter(): string;
        get asShort(): number;
        get asNumber(): Internal.Number;
        get asBigDecimal(): Internal.BigDecimal;
        get asDouble(): number;
        get asString(): string;
        get asFloat(): number;
        get asBoolean(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JsonArray_ = JsonArray;
    class PerlinNoiseGenerator extends Document.Object implements Internal.INoiseGenerator {
        func_215464_a(arg0: number, arg1: number, arg2: boolean): number;
        func_215460_a(arg0: number, arg1: number, arg2: number, arg3: number): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PerlinNoiseGenerator_ = PerlinNoiseGenerator;
    class AlterGroundTreeDecorator extends Internal.TreeDecorator {
        func_225576_a_(arg0: Internal.ISeedReader, arg1: Internal.Random, arg2: Internal.List<BlockPos>, arg3: Internal.List<BlockPos>, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox): void;
        static readonly field_236859_a_ : Internal.Codec<Internal.AlterGroundTreeDecorator>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AlterGroundTreeDecorator_ = AlterGroundTreeDecorator;
    class Template extends Document.Object {
        func_215388_b(arg0: Internal.PlacementSettings, arg1: BlockPos): Internal.MutableBoundingBox;
        func_215386_a(arg0: BlockPos, arg1: Internal.PlacementSettings, arg2: Internal.Block, arg3: boolean): Internal.List<Internal.Template$BlockInfo>;
        static processEntityInfos(arg0: Internal.Template, arg1: Internal.IWorld, arg2: BlockPos, arg3: Internal.PlacementSettings, arg4: Internal.List<Internal.Template$EntityInfo>): Internal.List<Internal.Template$EntityInfo>;
        func_215381_a(arg0: BlockPos, arg1: Internal.PlacementSettings, arg2: Internal.Block): Internal.List<Internal.Template$BlockInfo>;
        func_237146_a_(arg0: Internal.IServerWorld, arg1: BlockPos, arg2: BlockPos, arg3: Internal.PlacementSettings, arg4: Internal.Random, arg5: number): boolean;
        func_186257_a(arg0: Internal.Rotation_): BlockPos;
        func_186256_b(arg0: Internal.CompoundNBT): void;
        func_189552_a(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_237144_a_(arg0: Internal.IServerWorld, arg1: BlockPos, arg2: Internal.PlacementSettings, arg3: Internal.Random): void;
        static func_186266_a(arg0: Internal.PlacementSettings, arg1: BlockPos): BlockPos;
        static func_222857_a(arg0: Internal.IWorld, arg1: number, arg2: Internal.VoxelShapePart, arg3: number, arg4: number, arg5: number): void;
        static func_237145_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: BlockPos, arg3: Internal.PlacementSettings, arg4: Internal.List<Internal.Template$BlockInfo>): Internal.List<Internal.Template$BlockInfo>;
        func_186259_a(): BlockPos;
        func_186261_b(): string;
        func_186262_a(arg0: Internal.PlacementSettings, arg1: BlockPos, arg2: Internal.PlacementSettings, arg3: BlockPos): BlockPos;
        func_237152_b_(arg0: Internal.IServerWorld, arg1: BlockPos, arg2: Internal.PlacementSettings, arg3: Internal.Random): void;
        func_189961_a(arg0: BlockPos, arg1: Internal.Mirror_, arg2: Internal.Rotation_): BlockPos;
        static func_207667_a(arg0: Vec3, arg1: Internal.Mirror_, arg2: Internal.Rotation_, arg3: BlockPos): Vec3;
        func_186254_a(arg0: Internal.World, arg1: BlockPos, arg2: BlockPos, arg3: boolean, arg4: Internal.Block): void;
        static func_207669_a(arg0: BlockPos, arg1: Internal.Mirror_, arg2: Internal.Rotation_, arg3: BlockPos): BlockPos;
        func_186252_a(arg0: string): void;
        static processBlockInfos(arg0: Internal.IWorld, arg1: BlockPos, arg2: BlockPos, arg3: Internal.PlacementSettings, arg4: Internal.List<Internal.Template$BlockInfo>, arg5: Internal.Template): Internal.List<Internal.Template$BlockInfo>;
        func_237150_a_(arg0: BlockPos, arg1: Internal.Rotation_, arg2: BlockPos, arg3: Internal.Mirror_): Internal.MutableBoundingBox;
        static func_191157_a(arg0: BlockPos, arg1: Internal.Mirror_, arg2: Internal.Rotation_, arg3: number, arg4: number): BlockPos;
        static transformedVec3d(arg0: Internal.PlacementSettings, arg1: Vec3): Vec3;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Template_ = Template;
    interface ITag$INamedTag <T> extends Internal.ITag<T> {
        func_230234_a_(): ResourceLocation;
    }
    type ITag$INamedTag_<T> = ITag$INamedTag<T>;
    class ListenerList extends Document.Object {
        getListeners(arg0: number): Internal.IEventListener[];
        static clearBusID(arg0: number): void;
        unregister(arg0: number, arg1: Internal.IEventListener): void;
        static unregisterAll(arg0: number, arg1: Internal.IEventListener): void;
        register(arg0: number, arg1: Internal.EventPriority_, arg2: Internal.IEventListener): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ListenerList_ = ListenerList;
    class VertexFormatElement extends Document.Object {
        func_227897_a_(arg0: number, arg1: number): void;
        getElementCount(): number;
        hashCode(): number;
        func_177375_c(): Internal.VertexFormatElement$Usage;
        equals(arg0: any): boolean;
        func_227898_g_(): void;
        func_177367_b(): Internal.VertexFormatElement$Type;
        toString(): string;
        func_177368_f(): number;
        func_177369_e(): number;
        get elementCount(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VertexFormatElement_ = VertexFormatElement;
    abstract class ThermalRecipeJS extends Internal.RecipeJS {
        serializeIngredientStack(arg0: Internal.IngredientStackJS): Internal.JsonElement;
        energyMod(arg0: number): Internal.ThermalRecipeJS;
        fluidFrom(arg0: Internal.FluidStackJS): Internal.FluidIngredient;
        energy(arg0: number): Internal.ThermalRecipeJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ThermalRecipeJS_ = ThermalRecipeJS;
    class AbstractMinecartEntity$Type extends Internal.Enum<Internal.AbstractMinecartEntity$Type> {
        static valueOf(arg0: string): Internal.AbstractMinecartEntity$Type;
        static values(): Internal.AbstractMinecartEntity$Type[];
        static readonly CHEST : Internal.AbstractMinecartEntity$Type;
        static readonly FURNACE : Internal.AbstractMinecartEntity$Type;
        static readonly RIDEABLE : Internal.AbstractMinecartEntity$Type;
        static readonly COMMAND_BLOCK : Internal.AbstractMinecartEntity$Type;
        static readonly TNT : Internal.AbstractMinecartEntity$Type;
        static readonly SPAWNER : Internal.AbstractMinecartEntity$Type;
        static readonly HOPPER : Internal.AbstractMinecartEntity$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractMinecartEntity$Type_ = "rideable" | "chest" | "furnace" | "tnt" | "spawner" | "hopper" | "command_block" | AbstractMinecartEntity$Type;
    class CClientStatusPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_149435_c(): Internal.CClientStatusPacket$State;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CClientStatusPacket_ = CClientStatusPacket;
    class CPlayerDiggingPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_180762_c(): Internal.CPlayerDiggingPacket$Action;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179715_a(): BlockPos;
        func_179714_b(): Internal.Direction;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CPlayerDiggingPacket_ = CPlayerDiggingPacket;
    class RenderLayerEvent extends net.minecraftforge.eventbus.api.Event {
        getWorld(): Internal.ClientWorld;
        getCamX(): number;
        getListenerList(): Internal.ListenerList;
        getType(): Internal.RenderType;
        getLayer(): Internal.RenderLayer;
        getViewProjection(): Internal.Matrix4f;
        getCamZ(): number;
        getCamY(): number;
        readonly viewProjection : Internal.Matrix4f;
        readonly stack : Internal.MatrixStack;
        readonly camY : number;
        readonly buffers : Internal.RenderTypeBuffers;
        readonly camZ : number;
        readonly camX : number;
        readonly type : Internal.RenderType;
        readonly layer : Internal.RenderLayer;
        get world(): Internal.ClientWorld;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderLayerEvent_ = RenderLayerEvent;
    interface RecordBuilder <T> {
        add(arg0: string, arg1: T): Internal.RecordBuilder<T>;
        add(arg0: string, arg1: Internal.DataResult<T>): Internal.RecordBuilder<T>;
        add<E>(arg0: string, arg1: E, arg2: Internal.Encoder<E>): Internal.RecordBuilder<T>;
        add(arg0: T, arg1: T): Internal.RecordBuilder<T>;
        add(arg0: T, arg1: Internal.DataResult<T>): Internal.RecordBuilder<T>;
        add(arg0: Internal.DataResult<T>, arg1: Internal.DataResult<T>): Internal.RecordBuilder<T>;
        withErrorsFrom(arg0: Internal.DataResult<any>): Internal.RecordBuilder<T>;
        mapError(arg0: Internal.UnaryOperator<string>): Internal.RecordBuilder<T>;
        ops(): Internal.DynamicOps<T>;
        setLifecycle(arg0: Internal.Lifecycle): Internal.RecordBuilder<T>;
        build(arg0: Internal.DataResult<T>): Internal.DataResult<T>;
        build(arg0: T): Internal.DataResult<T>;
    }
    type RecordBuilder_<T> = RecordBuilder<T>;
    class TropicalFishEntity extends Internal.AbstractGroupFishEntity {
        func_204217_dE(): number;
        func_204222_dD(): number[];
        func_204218_dG(): ResourceLocation;
        func_204220_dF(): ResourceLocation;
        static func_212327_q(arg0: number): string;
        static func_212325_s(arg0: number): number;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_204221_dB(): number;
        func_204209_c(arg0: number): boolean;
        func_204215_a(arg0: number): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        static func_212323_p(arg0: number): Internal.DyeColor;
        static func_212324_b(arg0: number): string;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        static func_212326_d(arg0: number): Internal.DyeColor;
        func_204219_dC(): number[];
        static readonly field_204227_bz : number[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TropicalFishEntity_ = TropicalFishEntity;
    class LootPool extends Document.Object {
        setRolls(arg0: Internal.RandomValueRange): void;
        freeze(): void;
        getName(): string;
        setBonusRolls(arg0: Internal.RandomValueRange): void;
        getBonusRolls(): Internal.IRandomRange;
        static func_216096_a(): Internal.LootPool$Builder;
        getRolls(): Internal.IRandomRange;
        func_216091_a(arg0: ((arg0: Internal.ItemStack) => void), arg1: Internal.LootContext): void;
        func_227505_a_(arg0: Internal.ValidationTracker): void;
        isFrozen(): boolean;
        get name(): string;
        get frozen(): boolean;
        get rolls(): Internal.IRandomRange;
        get bonusRolls(): Internal.IRandomRange;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootPool_ = LootPool;
    class RegisterRecipeTransferHandlersEventJS extends Internal.EventJS {
        readonly data : Internal.IRecipeTransferRegistration;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegisterRecipeTransferHandlersEventJS_ = RegisterRecipeTransferHandlersEventJS;
    class GameSettings extends Document.Object {
        func_178878_a(arg0: Internal.PlayerModelPart_, arg1: boolean): void;
        func_178876_d(): Internal.Set<Internal.PlayerModelPart>;
        func_178877_a(arg0: Internal.PlayerModelPart_): void;
        func_74300_a(): void;
        func_82879_c(): void;
        func_216841_b(arg0: number): number;
        func_216840_a(arg0: number): number;
        func_216839_a(arg0: number): number;
        func_243229_a(arg0: Internal.PointOfView_): void;
        func_216842_e(): Internal.CloudOption;
        func_186711_a(arg0: Internal.SoundCategory_): number;
        func_243230_g(): Internal.PointOfView;
        func_186712_a(arg0: Internal.SoundCategory_, arg1: number): void;
        func_181148_f(): boolean;
        func_74303_b(): void;
        func_198014_a(arg0: Internal.KeyBinding, arg1: Internal.InputMappings$Input): void;
        func_198017_a(arg0: Internal.ResourcePackList): void;
        field_74319_N : boolean;
        field_243227_aN : number;
        field_74334_X : number;
        field_244794_ae : boolean;
        field_74362_aa : Internal.ParticleStatus;
        readonly field_74322_I : Internal.KeyBinding;
        readonly field_228046_af_ : Internal.KeyBinding;
        readonly field_151447_Z : Internal.KeyBinding;
        field_96694_H : number;
        field_74338_d : boolean;
        field_80005_w : boolean;
        field_85185_A : boolean;
        field_74358_q : boolean;
        field_151442_I : number;
        field_92119_C : number;
        field_211842_aO : boolean;
        field_74330_P : boolean;
        readonly field_178883_an : Internal.KeyBinding;
        field_228044_Y_ : boolean;
        field_244601_E : boolean;
        field_186717_N : boolean;
        readonly field_74368_y : Internal.KeyBinding;
        field_183018_l : Internal.List<string>;
        field_74333_Y : number;
        field_74318_M : Internal.Difficulty;
        field_238331_l_ : number;
        readonly field_74321_H : Internal.KeyBinding;
        field_74363_ab : string;
        field_193631_S : Internal.TutorialSteps;
        field_96693_G : number;
        readonly field_193630_aq : Internal.KeyBinding;
        field_74326_T : boolean;
        readonly field_151445_Q : Internal.KeyBinding;
        field_74353_u : boolean;
        field_74357_r : number;
        field_198018_T : boolean;
        field_151453_l : Internal.List<string>;
        readonly field_186718_X : Internal.KeyBinding;
        field_74345_l : Internal.CloudOption;
        readonly field_152395_am : Internal.KeyBinding;
        readonly field_151458_ab : Internal.KeyBinding;
        field_238330_f_ : Internal.GraphicsFanciness;
        readonly field_74314_A : Internal.KeyBinding;
        field_74341_c : number;
        readonly field_74310_D : Internal.KeyBinding;
        field_198019_u : string;
        field_74348_k : Internal.AmbientOcclusionStatus;
        field_74344_o : boolean;
        field_74332_R : string;
        field_74324_K : Internal.KeyBinding[];
        field_74336_f : boolean;
        readonly field_244602_au : Internal.KeyBinding;
        field_216844_T : boolean;
        field_96692_F : number;
        field_225307_E : boolean;
        field_181657_aC : boolean;
        field_82881_y : boolean;
        field_74329_Q : boolean;
        field_243226_aM : number;
        field_238332_z_ : number;
        field_208033_V : number;
        field_74352_v : boolean;
        field_92117_D : boolean;
        readonly field_74313_G : Internal.KeyBinding;
        readonly field_194146_ao : Internal.KeyBinding;
        readonly field_151456_ac : Internal.KeyBinding[];
        field_228045_Z_ : boolean;
        field_178879_v : boolean;
        field_216845_l : number;
        field_209231_W : number;
        field_181151_V : boolean;
        readonly field_74366_z : Internal.KeyBinding;
        field_74335_Z : number;
        field_230152_Z_ : boolean;
        field_238329_c_ : number;
        field_241568_aS_ : boolean;
        field_192571_R : Internal.NarratorStatus;
        field_205217_U : number;
        field_186715_A : Internal.HandSide;
        readonly field_193629_ap : Internal.KeyBinding;
        field_183509_X : boolean;
        readonly field_74323_J : Internal.KeyBinding;
        field_216843_O : boolean;
        readonly field_151457_aa : Internal.KeyBinding;
        field_74350_i : number;
        readonly field_151444_V : Internal.KeyBinding;
        field_82882_x : boolean;
        field_96691_E : number;
        readonly field_74351_w : Internal.KeyBinding;
        field_74359_p : boolean;
        field_74355_t : boolean;
        field_92118_B : number;
        readonly field_74370_x : Internal.KeyBinding;
        readonly field_74316_C : Internal.KeyBinding;
        readonly field_74312_F : Internal.KeyBinding;
        field_74343_n : Internal.ChatVisibility;
        field_151451_c : number;
        field_189989_R : boolean;
        field_186716_M : Internal.AttackIndicatorStatus;
        field_181150_U : boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameSettings_ = GameSettings;
    class ShaderUniform extends Internal.ShaderDefault implements Internal.AutoCloseable {
        func_148090_a(arg0: number): void;
        func_148092_b(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_148081_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_148093_b(): void;
        func_148083_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_148097_a(arg0: number[]): void;
        static func_148085_a(arg0: string): number;
        func_148084_b(arg0: number): void;
        func_195652_a(arg0: Internal.Matrix4f): void;
        func_148087_a(arg0: number, arg1: number): void;
        func_148095_a(arg0: number, arg1: number, arg2: number): void;
        func_148086_a(): string;
        close(): void;
        static func_227807_b_(arg0: number, arg1: Internal.CharSequence): number;
        static func_227806_a_(arg0: number, arg1: Internal.CharSequence): number;
        static func_227805_a_(arg0: number, arg1: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShaderUniform_ = ShaderUniform;
    class FontRenderer extends Document.Object {
        func_238412_a_(arg0: string, arg1: number): string;
        func_238411_a_(arg0: string, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: Internal.Matrix4f, arg6: Internal.IRenderTypeBuffer, arg7: boolean, arg8: number, arg9: number, arg10: boolean): number;
        func_238416_a_(arg0: ((arg0: ((arg0: number, arg1: Internal.Style, arg2: number) => boolean)) => boolean), arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: Internal.Matrix4f, arg6: Internal.IRenderTypeBuffer, arg7: boolean, arg8: number, arg9: number): number;
        func_238407_a_(arg0: Internal.MatrixStack, arg1: ((arg0: ((arg0: number, arg1: Internal.Style, arg2: number) => boolean)) => boolean), arg2: number, arg3: number, arg4: number): number;
        func_238413_a_(arg0: string, arg1: number, arg2: boolean): string;
        func_238414_a_(arg0: Internal.ITextProperties): number;
        func_238406_a_(arg0: Internal.MatrixStack, arg1: string, arg2: number, arg3: number, arg4: number, arg5: boolean): number;
        func_243245_a(arg0: ((arg0: ((arg0: number, arg1: Internal.Style, arg2: number) => boolean)) => boolean)): number;
        func_228079_a_(arg0: string, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: Internal.Matrix4f, arg6: Internal.IRenderTypeBuffer, arg7: boolean, arg8: number, arg9: number): number;
        func_78260_a(): boolean;
        func_243246_a(arg0: Internal.MatrixStack, arg1: Internal.ITextComponent_, arg2: number, arg3: number, arg4: number): number;
        func_243247_a(arg0: Internal.ITextComponent_, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: Internal.Matrix4f, arg6: Internal.IRenderTypeBuffer, arg7: boolean, arg8: number, arg9: number): number;
        func_238425_b_(arg0: Internal.ITextProperties, arg1: number): Internal.List<Internal.IReorderingProcessor>;
        func_238422_b_(arg0: Internal.MatrixStack, arg1: ((arg0: ((arg0: number, arg1: Internal.Style, arg2: number) => boolean)) => boolean), arg2: number, arg3: number, arg4: number): number;
        func_243248_b(arg0: Internal.MatrixStack, arg1: Internal.ITextComponent_, arg2: number, arg3: number, arg4: number): number;
        func_238420_b_(): Internal.CharacterManager;
        func_238421_b_(arg0: Internal.MatrixStack, arg1: string, arg2: number, arg3: number, arg4: number): number;
        func_238405_a_(arg0: Internal.MatrixStack, arg1: string, arg2: number, arg3: number, arg4: number): number;
        func_78267_b(arg0: string, arg1: number): number;
        func_238418_a_(arg0: Internal.ITextProperties, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_238417_a_(arg0: Internal.ITextProperties, arg1: number): Internal.ITextProperties;
        func_238419_a_(arg0: ResourceLocation_): Internal.Font;
        func_78256_a(arg0: string): number;
        func_147647_b(arg0: string): string;
        readonly field_78289_c : Internal.Random;
        readonly field_78288_b : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FontRenderer_ = FontRenderer;
    class FMLPlayMessages$SpawnEntity extends Document.Object {
        static encode(arg0: Internal.FMLPlayMessages$SpawnEntity, arg1: Internal.PacketBuffer): void;
        getAdditionalData(): Internal.PacketBuffer;
        static handle(arg0: Internal.FMLPlayMessages$SpawnEntity, arg1: (() => Internal.NetworkEvent$Context)): void;
        static decode(arg0: Internal.PacketBuffer): Internal.FMLPlayMessages$SpawnEntity;
        getEntity(): Internal.Entity;
        getTypeId(): number;
        getHeadYaw(): number;
        getYaw(): number;
        getPitch(): number;
        getVelY(): number;
        getVelZ(): number;
        getUuid(): Internal.UUID;
        getVelX(): number;
        getPosZ(): number;
        getEntityId(): number;
        getPosX(): number;
        getPosY(): number;
        get headYaw(): number;
        get velZ(): number;
        get entityId(): number;
        get velY(): number;
        get velX(): number;
        get uuid(): Internal.UUID;
        get yaw(): number;
        get posX(): number;
        get posY(): number;
        get posZ(): number;
        get typeId(): number;
        get additionalData(): Internal.PacketBuffer;
        get pitch(): number;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FMLPlayMessages$SpawnEntity_ = FMLPlayMessages$SpawnEntity;
    class MainWindow extends Document.Object implements Internal.AutoCloseable {
        func_227800_b_(): boolean;
        func_198105_m(): number;
        func_198083_n(): number;
        func_198087_p(): number;
        func_198106_d(): Internal.Optional<Internal.VideoMode>;
        func_227798_a_(): number;
        func_198082_x(): number;
        func_216521_a(arg0: number, arg1: boolean): number;
        func_216525_a(arg0: number): void;
        func_216526_a(arg0: number): void;
        func_216523_b(arg0: boolean): void;
        func_224797_a(arg0: Internal.Optional<Internal.VideoMode>): void;
        func_198107_o(): number;
        func_227802_e_(): void;
        func_198109_k(): number;
        func_230148_b_(arg0: string): void;
        func_198100_s(): number;
        close(): void;
        func_198092_i(): number;
        func_198097_f(): void;
        func_198091_l(): number;
        func_198113_j(): boolean;
        func_198077_g(): void;
        func_224798_d(arg0: boolean): void;
        func_216529_a(arg0: Internal.InputStream, arg1: Internal.InputStream): void;
        func_224796_s(): Internal.Monitor;
        func_198099_q(): number;
        func_227799_a_(arg0: string): void;
        func_198079_r(): number;
        static func_211162_a(arg0: ((arg0: number, arg1: string) => void)): void;
        func_198084_a(arg0: number, arg1: number): void;
        func_227801_c_(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MainWindow_ = MainWindow;
    abstract class ByteBuffer extends Internal.Buffer implements Internal.Comparable<Internal.ByteBuffer> {
        asIntBuffer(): Internal.IntBuffer;
        compact(): Internal.ByteBuffer;
        asLongBuffer(): Internal.LongBuffer;
        putDouble(arg0: number, arg1: number): Internal.ByteBuffer;
        putDouble(arg0: number): Internal.ByteBuffer;
        getDouble(arg0: number): number;
        getDouble(): number;
        getFloat(): number;
        getFloat(arg0: number): number;
        compareTo(arg0: Internal.ByteBuffer): number;
        compareTo(arg0: any): number;
        putLong(arg0: number): Internal.ByteBuffer;
        putLong(arg0: number, arg1: number): Internal.ByteBuffer;
        asReadOnlyBuffer(): Internal.ByteBuffer;
        put(arg0: number, arg1: number): Internal.ByteBuffer;
        put(arg0: Internal.ByteBuffer): Internal.ByteBuffer;
        put(arg0: number, arg1: Internal.ByteBuffer, arg2: number, arg3: number): Internal.ByteBuffer;
        put(arg0: number[]): Internal.ByteBuffer;
        put(arg0: number, arg1: number[]): Internal.ByteBuffer;
        put(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ByteBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.ByteBuffer;
        put(arg0: number): Internal.ByteBuffer;
        asDoubleBuffer(): Internal.DoubleBuffer;
        slice(): Internal.Buffer;
        slice(): Internal.ByteBuffer;
        slice(arg0: number, arg1: number): Internal.ByteBuffer;
        slice(arg0: number, arg1: number): Internal.Buffer;
        array(): any;
        array(): number[];
        hashCode(): number;
        get(arg0: number[]): Internal.ByteBuffer;
        get(arg0: number): number;
        get(): number;
        get(arg0: number[], arg1: number, arg2: number): Internal.ByteBuffer;
        get(arg0: number, arg1: number[]): Internal.ByteBuffer;
        get(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ByteBuffer;
        limit(arg0: number): Internal.Buffer;
        limit(arg0: number): Internal.ByteBuffer;
        arrayOffset(): number;
        putShort(arg0: number, arg1: number): Internal.ByteBuffer;
        putShort(arg0: number): Internal.ByteBuffer;
        flip(): Internal.ByteBuffer;
        flip(): Internal.Buffer;
        order(arg0: Internal.ByteOrder): Internal.ByteBuffer;
        order(): Internal.ByteOrder;
        asFloatBuffer(): Internal.FloatBuffer;
        asCharBuffer(): Internal.CharBuffer;
        static allocateDirect(arg0: number): Internal.ByteBuffer;
        hasArray(): boolean;
        putInt(arg0: number, arg1: number): Internal.ByteBuffer;
        putInt(arg0: number): Internal.ByteBuffer;
        getShort(): number;
        getShort(arg0: number): number;
        putChar(arg0: number, arg1: string): Internal.ByteBuffer;
        putChar(arg0: string): Internal.ByteBuffer;
        clear(): Internal.ByteBuffer;
        clear(): Internal.Buffer;
        duplicate(): Internal.Buffer;
        duplicate(): Internal.ByteBuffer;
        getLong(arg0: number): number;
        getLong(): number;
        putFloat(arg0: number): Internal.ByteBuffer;
        putFloat(arg0: number, arg1: number): Internal.ByteBuffer;
        getInt(arg0: number): number;
        getInt(): number;
        getChar(arg0: number): string;
        getChar(): string;
        alignmentOffset(arg0: number, arg1: number): number;
        static allocate(arg0: number): Internal.ByteBuffer;
        rewind(): Internal.Buffer;
        rewind(): Internal.ByteBuffer;
        mismatch(arg0: Internal.ByteBuffer): number;
        equals(arg0: any): boolean;
        reset(): Internal.ByteBuffer;
        reset(): Internal.Buffer;
        toString(): string;
        position(arg0: number): Internal.ByteBuffer;
        position(arg0: number): Internal.Buffer;
        alignedSlice(arg0: number): Internal.ByteBuffer;
        isDirect(): boolean;
        static wrap(arg0: number[], arg1: number, arg2: number): Internal.ByteBuffer;
        static wrap(arg0: number[]): Internal.ByteBuffer;
        asShortBuffer(): Internal.ShortBuffer;
        mark(): Internal.Buffer;
        mark(): Internal.ByteBuffer;
        get double(): number;
        get char(): string;
        get direct(): boolean;
        get short(): number;
        get float(): number;
        get long(): number;
        get int(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ByteBuffer_ = ByteBuffer;
    interface PrimitiveCodec <A> extends Internal.Codec<A> {
        encode<T_>(arg0: A, arg1: Internal.DynamicOps<T_>, arg2: T_): Internal.DataResult<T_>;
        read<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<A>;
        decode<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<com.mojang.datafixers.util.Pair<A, T_>>;
        write<T_>(arg0: Internal.DynamicOps<T_>, arg1: A): T_;
    }
    type PrimitiveCodec_<A> = PrimitiveCodec<A>;
    interface ByteBufAllocator {
        directBuffer(arg0: number): Internal.ByteBuf;
        directBuffer(arg0: number, arg1: number): Internal.ByteBuf;
        directBuffer(): Internal.ByteBuf;
        isDirectBufferPooled(): boolean;
        calculateNewCapacity(arg0: number, arg1: number): number;
        compositeDirectBuffer(): Internal.CompositeByteBuf;
        compositeDirectBuffer(arg0: number): Internal.CompositeByteBuf;
        ioBuffer(arg0: number): Internal.ByteBuf;
        ioBuffer(): Internal.ByteBuf;
        ioBuffer(arg0: number, arg1: number): Internal.ByteBuf;
        compositeHeapBuffer(arg0: number): Internal.CompositeByteBuf;
        compositeHeapBuffer(): Internal.CompositeByteBuf;
        compositeBuffer(arg0: number): Internal.CompositeByteBuf;
        compositeBuffer(): Internal.CompositeByteBuf;
        buffer(arg0: number): Internal.ByteBuf;
        buffer(): Internal.ByteBuf;
        buffer(arg0: number, arg1: number): Internal.ByteBuf;
        heapBuffer(arg0: number): Internal.ByteBuf;
        heapBuffer(): Internal.ByteBuf;
        heapBuffer(arg0: number, arg1: number): Internal.ByteBuf;
    }
    type ByteBufAllocator_ = ByteBufAllocator;
    interface IInventory extends Internal.IClearable {
        func_213901_a(arg0: Internal.Item): number;
        func_70304_b(arg0: number): Internal.ItemStack;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        func_70302_i_(): number;
        func_191420_l(): boolean;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_70296_d(): void;
    }
    type IInventory_ = IInventory;
    class MobSpawnInfo$Builder extends Document.Object implements Internal.MobSpawnSettingsBuilderAccessor {
        getSpawners(): Internal.Map<any, any>;
        setPlayerCanSpawn(arg0: boolean): void;
        func_242573_a(arg0: Internal.EntityType<any>, arg1: number, arg2: number): Internal.MobSpawnInfo$Builder;
        func_242572_a(arg0: number): Internal.MobSpawnInfo$Builder;
        func_242571_a(): Internal.MobSpawnInfo$Builder;
        func_242577_b(): Internal.MobSpawnInfo;
        getMobSpawnCosts(): Internal.Map<any, any>;
        func_242575_a(arg0: Internal.EntityClassification_, arg1: Internal.MobSpawnInfo$Spawners): Internal.MobSpawnInfo$Builder;
        isPlayerCanSpawn(): boolean;
        get mobSpawnCosts(): Internal.Map<any, any>;
        get spawners(): Internal.Map<any, any>;
        get playerCanSpawn(): boolean;
        set playerCanSpawn(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MobSpawnInfo$Builder_ = MobSpawnInfo$Builder;
    class Typed <A> extends Document.Object {
        getOptionalTyped<FT_>(arg0: Internal.OpticFinder<FT_>): Internal.Optional<Internal.Typed<FT_>>;
        getAll<FT_>(arg0: Internal.TypedOptic<A, any, FT_, any>): Internal.List<FT_>;
        getOrDefault<FT_>(arg0: Internal.OpticFinder<FT_>, arg1: FT_): FT_;
        set<FT_>(arg0: Internal.OpticFinder<FT_>, arg1: FT_): Internal.Typed<any>;
        set<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: Internal.Type<FR_>, arg2: FR_): Internal.Typed<any>;
        set<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: Internal.Typed<FR_>): Internal.Typed<any>;
        getOrCreateTyped<FT_>(arg0: Internal.OpticFinder<FT_>): Internal.Typed<FT_>;
        update<FT_>(arg0: Internal.OpticFinder<FT_>, arg1: ((arg0: FT_) => FT_)): Internal.Typed<any>;
        update<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: Internal.Type<FR_>, arg2: ((arg0: FT_) => FR_)): Internal.Typed<any>;
        getTyped<FT_>(arg0: Internal.OpticFinder<FT_>): Internal.Typed<FT_>;
        static pair<A_, B_>(arg0: Internal.Typed<A_>, arg1: Internal.Typed<B_>): Internal.Typed<com.mojang.datafixers.util.Pair<A_, B_>>;
        getAllTyped<FT_>(arg0: Internal.OpticFinder<FT_>): Internal.List<Internal.Typed<FT_>>;
        out(): Internal.Typed<A>;
        getValue(): A;
        getOptional<FT_>(arg0: Internal.OpticFinder<FT_>): Internal.Optional<FT_>;
        getOps(): Internal.DynamicOps<any>;
        getType(): Internal.Type<A>;
        get<FT_>(arg0: Internal.OpticFinder<FT_>): FT_;
        getOrCreate<FT_>(arg0: Internal.OpticFinder<FT_>): FT_;
        updateTyped<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: Internal.Type<FR_>, arg2: ((arg0: Internal.Typed<any>) => Internal.Typed<any>)): Internal.Typed<any>;
        updateTyped<FT_>(arg0: Internal.OpticFinder<FT_>, arg1: ((arg0: Internal.Typed<any>) => Internal.Typed<any>)): Internal.Typed<any>;
        updateRecursiveTyped<FT_>(arg0: Internal.OpticFinder<FT_>, arg1: ((arg0: Internal.Typed<any>) => Internal.Typed<any>)): Internal.Typed<any>;
        updateRecursiveTyped<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: Internal.Type<FR_>, arg2: ((arg0: Internal.Typed<any>) => Internal.Typed<any>)): Internal.Typed<any>;
        toString(): string;
        inj2<B_>(arg0: Internal.Type<B_>): Internal.Typed<Internal.Either<B_, A>>;
        write(): Internal.DataResult<Internal.Dynamic<any>>;
        inj1<B_>(arg0: Internal.Type<B_>): Internal.Typed<Internal.Either<A, B_>>;
        updateRecursive<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: Internal.Type<FR_>, arg2: ((arg0: FT_) => FR_)): Internal.Typed<any>;
        updateRecursive<FT_>(arg0: Internal.OpticFinder<FT_>, arg1: ((arg0: FT_) => FT_)): Internal.Typed<any>;
        get ops(): Internal.DynamicOps<any>;
        get type(): Internal.Type<A>;
        get value(): A;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Typed_<A> = Typed<A>;
    class Direction$AxisDirection extends Internal.Enum<Internal.Direction$AxisDirection> {
        func_239635_c_(): Internal.Direction$AxisDirection;
        static valueOf(arg0: string): Internal.Direction$AxisDirection;
        static values(): Internal.Direction$AxisDirection[];
        toString(): string;
        func_179524_a(): number;
        static readonly POSITIVE : Internal.Direction$AxisDirection;
        static readonly NEGATIVE : Internal.Direction$AxisDirection;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Direction$AxisDirection_ = "positive" | "negative" | Direction$AxisDirection;
    interface FuncSupplier {
        create(arg0: Internal.List<Internal.Unit>): Internal.Unit;
    }
    type FuncSupplier_ = ((arg0: Internal.List<Internal.Unit>) => Internal.Unit) | FuncSupplier;
    class ServerPlayNetHandler extends Document.Object implements Internal.IServerPlayNetHandler {
        func_230549_a_(arg0: Internal.CJigsawBlockGeneratePacket): void;
        func_211525_a(arg0: Internal.CQueryTileEntityNBTPacket): void;
        func_184338_a(arg0: Internal.CMoveVehiclePacket): void;
        func_147356_a(arg0: Internal.CCloseWindowPacket): void;
        func_175086_a(arg0: Internal.CResourcePackStatusPacket): void;
        func_73660_a(): void;
        func_147358_a(arg0: Internal.CInputPacket): void;
        func_175088_a(arg0: Internal.CSpectatePacket): void;
        func_147352_a(arg0: Internal.CClientSettingsPacket): void;
        func_147354_a(arg0: Internal.CChatMessagePacket): void;
        func_147298_b(): Internal.NetworkManager;
        func_147349_a(arg0: Internal.CCustomPayloadPacket): void;
        func_210159_a(arg0: Internal.CSelectTradePacket): void;
        func_147231_a(arg0: Internal.ITextComponent_): void;
        func_194028_b(arg0: Internal.ITextComponent_): void;
        func_217262_a(arg0: Internal.CUpdateJigsawBlockPacket): void;
        func_210157_a(arg0: Internal.CUpdateStructureBlockPacket): void;
        func_147344_a(arg0: Internal.CCreativeInventoryActionPacket): void;
        func_210155_a(arg0: Internal.CRenameItemPacket): void;
        func_147346_a(arg0: Internal.CPlayerTryUseItemPacket): void;
        func_210153_a(arg0: Internal.CUpdateCommandBlockPacket): void;
        func_147340_a(arg0: Internal.CUseEntityPacket): void;
        func_147342_a(arg0: Internal.CClientStatusPacket): void;
        func_147339_a(arg0: Internal.CConfirmTransactionPacket): void;
        func_241831_a(arg0: Internal.CUpdateRecipeBookStatusPacket): void;
        func_211526_a(arg0: Internal.CQueryEntityNBTPacket): void;
        func_184339_a(arg0: Internal.CConfirmTeleportPacket): void;
        func_184337_a(arg0: Internal.CPlayerTryUseItemOnBlockPacket): void;
        func_175087_a(arg0: Internal.CAnimateHandPacket): void;
        func_147355_a(arg0: Internal.CHeldItemChangePacket): void;
        func_175089_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.Set<Internal.SPlayerPositionLookPacket$Flags>): void;
        func_211148_a(arg0: Internal.IPacket<any>, arg1: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>): void;
        func_147357_a(arg0: Internal.CEntityActionPacket): void;
        func_147351_a(arg0: Internal.CClickWindowPacket): void;
        func_147353_a(arg0: Internal.CKeepAlivePacket): void;
        func_184340_a(arg0: Internal.CSteerBoatPacket): void;
        func_147348_a(arg0: Internal.CPlayerAbilitiesPacket): void;
        func_210158_a(arg0: Internal.CUpdateMinecartCommandBlockPacket): void;
        func_194308_a(arg0: Internal.CPlaceRecipePacket): void;
        func_217263_a(arg0: Internal.CSetDifficultyPacket): void;
        func_191984_a(arg0: Internal.CMarkRecipeSeenPacket): void;
        func_217261_a(arg0: Internal.CLockDifficultyPacket): void;
        func_210156_a(arg0: Internal.CEditBookPacket): void;
        func_147345_a(arg0: Internal.CPlayerDiggingPacket): void;
        func_195518_a(arg0: Internal.CTabCompletePacket): void;
        func_147347_a(arg0: Internal.CPlayerPacket): void;
        func_210154_a(arg0: Internal.CUpdateBeaconPacket): void;
        func_184342_d(): void;
        func_194027_a(arg0: Internal.CSeenAdvancementsPacket): void;
        func_210152_a(arg0: Internal.CPickItemPacket): void;
        func_147364_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_147343_a(arg0: Internal.CUpdateSignPacket): void;
        func_147359_a(arg0: Internal.IPacket<any>): void;
        func_147338_a(arg0: Internal.CEnchantItemPacket): void;
        readonly field_147371_a : Internal.NetworkManager;
        field_147369_b : Internal.ServerPlayerEntity;
        field_147365_f : number;
        field_147374_l : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerPlayNetHandler_ = ServerPlayNetHandler;
    class GenericLootEventJS extends Internal.LootEventJS {
        addGeneric(id: ResourceLocation_, b: ((arg0: Internal.LootBuilder) => void)): void;
        getType(): string;
        getDirectory(): string;
        get type(): string;
        get directory(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GenericLootEventJS_ = GenericLootEventJS;
    class GlVertexFormat <T> extends Document.Object implements Internal.BufferVertexFormat {
        getAttribute(name: T): Internal.GlVertexAttribute;
        getStride(): number;
        static builder<T_>(type: Internal.Class_<T_>, stride: number): Internal.GlVertexFormat$Builder<T_>;
        getAttributesArray(): Internal.GlVertexAttribute[];
        toString(): string;
        get attributesArray(): Internal.GlVertexAttribute[];
        get stride(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GlVertexFormat_<T> = GlVertexFormat<T>;
    class TickEvent$PlayerTickEvent extends Internal.TickEvent {
        getListenerList(): Internal.ListenerList;
        readonly player : Internal.PlayerEntity;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TickEvent$PlayerTickEvent_ = TickEvent$PlayerTickEvent;
    class BlockStateFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        static readonly field_236455_a_ : Internal.Codec<Internal.BlockStateFeatureConfig>;
        readonly field_227270_a_ : Internal.BlockState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockStateFeatureConfig_ = BlockStateFeatureConfig;
    class AccessFlag$Location extends Internal.Enum<Internal.AccessFlag$Location> {
        static valueOf(arg0: string): Internal.AccessFlag$Location;
        static values(): Internal.AccessFlag$Location[];
        static readonly MODULE : Internal.AccessFlag$Location;
        static readonly MODULE_EXPORTS : Internal.AccessFlag$Location;
        static readonly FIELD : Internal.AccessFlag$Location;
        static readonly METHOD_PARAMETER : Internal.AccessFlag$Location;
        static readonly MODULE_REQUIRES : Internal.AccessFlag$Location;
        static readonly METHOD : Internal.AccessFlag$Location;
        static readonly MODULE_OPENS : Internal.AccessFlag$Location;
        static readonly CLASS : Internal.AccessFlag$Location;
        static readonly INNER_CLASS : Internal.AccessFlag$Location;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AccessFlag$Location_ = "class" | "field" | "method" | "inner_class" | "method_parameter" | "module" | "module_requires" | "module_exports" | "module_opens" | AccessFlag$Location;
    class Method extends Internal.Executable {
        getName(): string;
        getParameterCount(): number;
        getGenericReturnType(): java_.lang.reflect.Type;
        isSynthetic(): boolean;
        getParameterTypes(): Internal.Class<any>[];
        invoke(arg0: any, arg1: any[]): any;
        isBridge(): boolean;
        getGenericExceptionTypes(): java_.lang.reflect.Type[];
        getDefaultValue(): any;
        getDeclaredAnnotations(): Internal.Annotation[];
        getDeclaringClass(): Internal.Class<any>;
        hashCode(): number;
        toGenericString(): string;
        getTypeParameters(): any[];
        getModifiers(): number;
        setAccessible(arg0: boolean): void;
        isVarArgs(): boolean;
        getExceptionTypes(): Internal.Class<any>[];
        isDefault(): boolean;
        getGenericParameterTypes(): java_.lang.reflect.Type[];
        getReturnType(): Internal.Class<any>;
        getAnnotation<T_>(arg0: Internal.Class_<T_>): T_;
        equals(arg0: any): boolean;
        toString(): string;
        getAnnotatedReturnType(): Internal.AnnotatedType;
        getParameterAnnotations(): Internal.Annotation[][];
        get declaredAnnotations(): Internal.Annotation[];
        get annotatedReturnType(): Internal.AnnotatedType;
        get parameterTypes(): Internal.Class<any>[];
        get parameterCount(): number;
        get defaultValue(): any;
        get modifiers(): number;
        get typeParameters(): any[];
        get declaringClass(): Internal.Class<any>;
        get varArgs(): boolean;
        get synthetic(): boolean;
        get genericParameterTypes(): java_.lang.reflect.Type[];
        get default(): boolean;
        get exceptionTypes(): Internal.Class<any>[];
        get name(): string;
        get genericReturnType(): java_.lang.reflect.Type;
        get genericExceptionTypes(): java_.lang.reflect.Type[];
        get bridge(): boolean;
        get parameterAnnotations(): Internal.Annotation[][];
        get returnType(): Internal.Class<any>;
        set accessible(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Method_ = Method;
    class FieldPosition extends Document.Object {
        getEndIndex(): number;
        hashCode(): number;
        getFieldAttribute(): Internal.Format$Field;
        equals(arg0: any): boolean;
        getField(): number;
        setEndIndex(arg0: number): void;
        toString(): string;
        getBeginIndex(): number;
        setBeginIndex(arg0: number): void;
        get field(): number;
        get fieldAttribute(): Internal.Format$Field;
        get endIndex(): number;
        get beginIndex(): number;
        set endIndex(arg0: number);
        set beginIndex(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FieldPosition_ = FieldPosition;
    interface IModelData {
        setData<T>(arg0: Internal.ModelProperty<T>, arg1: T): T;
        hasProperty(arg0: Internal.ModelProperty<any>): boolean;
        getData<T>(arg0: Internal.ModelProperty<T>): T;
    }
    type IModelData_ = IModelData;
    class FeatureJigsawPiece extends Internal.JigsawPiece {
        func_214852_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_): Internal.MutableBoundingBox;
        func_214853_a(): Internal.IJigsawDeserializer<any>;
        func_230378_a_(arg0: Internal.TemplateManager, arg1: Internal.ISeedReader, arg2: Internal.StructureManager, arg3: Internal.ChunkGenerator, arg4: BlockPos, arg5: BlockPos, arg6: Internal.Rotation_, arg7: Internal.MutableBoundingBox, arg8: Internal.Random, arg9: boolean): boolean;
        toString(): string;
        func_214868_a(arg0: Internal.TemplateManager, arg1: Internal.Rotation_): BlockPos;
        func_214849_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_, arg3: Internal.Random): Internal.List<Internal.Template$BlockInfo>;
        static readonly field_236816_a_ : Internal.Codec<Internal.FeatureJigsawPiece>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FeatureJigsawPiece_ = FeatureJigsawPiece;
    interface SheetDataAccessor {
        getHeight(): number;
        getWidth(): number;
    }
    type SheetDataAccessor_ = SheetDataAccessor;
    interface Message {
        getString(): string;
    }
    type Message_ = Message;
    interface IRecipeCategoryRegistration {
        addRecipeCategories(arg0: Internal.IRecipeCategory<any>[]): void;
        getJeiHelpers(): Internal.IJeiHelpers;
    }
    type IRecipeCategoryRegistration_ = IRecipeCategoryRegistration;
    interface IRecipeTransferError {
        getType(): Internal.IRecipeTransferError$Type;
        showError(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: Internal.IRecipeLayout, arg4: number, arg5: number): void;
    }
    type IRecipeTransferError_ = IRecipeTransferError;
    abstract class DimensionRenderInfo extends Document.Object {
        func_239216_b_(): boolean;
        func_239217_c_(): boolean;
        func_230494_a_(arg0: Vec3, arg1: number): Vec3;
        setSkyRenderHandler(arg0: ((arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft) => void)): void;
        func_230492_a_(arg0: number, arg1: number): number[];
        func_239213_a_(): number;
        func_230493_a_(arg0: number, arg1: number): boolean;
        setWeatherParticleRenderHandler(arg0: ((arg0: number, arg1: Internal.ClientWorld, arg2: Internal.Minecraft, arg3: Internal.ActiveRenderInfo) => void)): void;
        static func_243495_a(arg0: Internal.DimensionType): Internal.DimensionRenderInfo;
        getCloudRenderHandler(): Internal.ICloudRenderHandler;
        setCloudRenderHandler(arg0: ((arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft, arg5: number, arg6: number, arg7: number) => void)): void;
        getWeatherRenderHandler(): Internal.IWeatherRenderHandler;
        setWeatherRenderHandler(arg0: ((arg0: number, arg1: number, arg2: Internal.ClientWorld, arg3: Internal.Minecraft, arg4: Internal.LightTexture, arg5: number, arg6: number, arg7: number) => void)): void;
        getWeatherParticleRenderHandler(): Internal.IWeatherParticleRenderHandler;
        func_241683_c_(): Internal.DimensionRenderInfo$FogType;
        func_241684_d_(): boolean;
        getSkyRenderHandler(): Internal.ISkyRenderHandler;
        get weatherParticleRenderHandler(): Internal.IWeatherParticleRenderHandler;
        get cloudRenderHandler(): Internal.ICloudRenderHandler;
        get weatherRenderHandler(): Internal.IWeatherRenderHandler;
        get skyRenderHandler(): Internal.ISkyRenderHandler;
        set weatherParticleRenderHandler(arg0: ((arg0: number, arg1: Internal.ClientWorld, arg2: Internal.Minecraft, arg3: Internal.ActiveRenderInfo) => void));
        set cloudRenderHandler(arg0: ((arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft, arg5: number, arg6: number, arg7: number) => void));
        set weatherRenderHandler(arg0: ((arg0: number, arg1: number, arg2: Internal.ClientWorld, arg3: Internal.Minecraft, arg4: Internal.LightTexture, arg5: number, arg6: number, arg7: number) => void));
        set skyRenderHandler(arg0: ((arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft) => void));
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DimensionRenderInfo_ = DimensionRenderInfo;
    class Module extends Document.Object implements Internal.AnnotatedElement {
        getDescriptor(): Internal.ModuleDescriptor;
        getName(): string;
        addReads(arg0: Internal.Module): Internal.Module;
        canRead(arg0: Internal.Module): boolean;
        getLayer(): Internal.ModuleLayer;
        getResourceAsStream(arg0: string): Internal.InputStream;
        addUses(arg0: Internal.Class_<any>): Internal.Module;
        addExports(arg0: string, arg1: Internal.Module): Internal.Module;
        getClassLoader(): Internal.ClassLoader;
        isNamed(): boolean;
        getAnnotations(): Internal.Annotation[];
        canUse(arg0: Internal.Class_<any>): boolean;
        getDeclaredAnnotations(): Internal.Annotation[];
        isOpen(arg0: string): boolean;
        isOpen(arg0: string, arg1: Internal.Module): boolean;
        getAnnotation<T_>(arg0: Internal.Class_<T_>): T_;
        isExported(arg0: string): boolean;
        isExported(arg0: string, arg1: Internal.Module): boolean;
        getPackages(): Internal.Set<string>;
        toString(): string;
        addOpens(arg0: string, arg1: Internal.Module): Internal.Module;
        isNativeAccessEnabled(): boolean;
        get declaredAnnotations(): Internal.Annotation[];
        get named(): boolean;
        get classLoader(): Internal.ClassLoader;
        get name(): string;
        get annotations(): Internal.Annotation[];
        get nativeAccessEnabled(): boolean;
        get descriptor(): Internal.ModuleDescriptor;
        get packages(): Internal.Set<string>;
        get layer(): Internal.ModuleLayer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Module_ = Module;
    class Products$P12 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P12_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> = Products$P12<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>;
    class FMLServerStartedEvent extends Internal.ServerLifecycleEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FMLServerStartedEvent_ = FMLServerStartedEvent;
    class LogicalSide extends Internal.Enum<Internal.LogicalSide> {
        isServer(): boolean;
        static valueOf(arg0: string): Internal.LogicalSide;
        static values(): Internal.LogicalSide[];
        isClient(): boolean;
        static readonly SERVER : Internal.LogicalSide;
        static readonly CLIENT : Internal.LogicalSide;
        get server(): boolean;
        get client(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LogicalSide_ = "client" | "server" | LogicalSide;
    class MapItemRenderer extends Document.Object implements Internal.AutoCloseable {
        func_148249_a(): void;
        func_148246_a(arg0: Internal.MapData): void;
        func_228086_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: Internal.MapData, arg3: boolean, arg4: number): void;
        func_191207_a(arg0: Internal.MapItemRenderer$Instance): Internal.MapData;
        func_191205_a(arg0: string): Internal.MapItemRenderer$Instance;
        close(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MapItemRenderer_ = MapItemRenderer;
    interface NonNullConsumer <T> {
        accept(arg0: T): void;
    }
    type NonNullConsumer_<T> = ((arg0: T) => void) | NonNullConsumer<T>;
    class BigMushroomFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        readonly field_227274_c_ : number;
        static readonly field_236528_a_ : Internal.Codec<Internal.BigMushroomFeatureConfig>;
        readonly field_227272_a_ : Internal.BlockStateProvider;
        readonly field_227273_b_ : Internal.BlockStateProvider;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BigMushroomFeatureConfig_ = BigMushroomFeatureConfig;
    interface FuncSupplier$Func1 extends Internal.FuncSupplier {
        create(args: Internal.List<Internal.Unit>): Internal.Unit;
        create1(arg0: Internal.Unit): Internal.Unit;
    }
    type FuncSupplier$Func1_ = ((arg0: Internal.Unit) => Internal.Unit) | FuncSupplier$Func1;
    class SuggestionsBuilder extends Document.Object {
        add(arg0: Internal.SuggestionsBuilder): Internal.SuggestionsBuilder;
        createOffset(arg0: number): Internal.SuggestionsBuilder;
        getStart(): number;
        build(): Internal.Suggestions;
        restart(): Internal.SuggestionsBuilder;
        getRemaining(): string;
        buildFuture(): Internal.CompletableFuture<Internal.Suggestions>;
        suggest(arg0: string, arg1: Internal.Message): Internal.SuggestionsBuilder;
        suggest(arg0: number): Internal.SuggestionsBuilder;
        suggest(arg0: number, arg1: Internal.Message): Internal.SuggestionsBuilder;
        suggest(arg0: string): Internal.SuggestionsBuilder;
        getInput(): string;
        get input(): string;
        get start(): number;
        get remaining(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SuggestionsBuilder_ = SuggestionsBuilder;
    interface PrimitiveIterator$OfInt extends Internal.PrimitiveIterator<number, Internal.IntConsumer> {
        next(): any;
        next(): number;
        nextInt(): number;
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
    }
    type PrimitiveIterator$OfInt_ = PrimitiveIterator$OfInt;
    class RenderGameOverlayEvent$ElementType extends Internal.Enum<Internal.RenderGameOverlayEvent$ElementType> {
        static valueOf(arg0: string): Internal.RenderGameOverlayEvent$ElementType;
        static values(): Internal.RenderGameOverlayEvent$ElementType[];
        static readonly ALL : Internal.RenderGameOverlayEvent$ElementType;
        static readonly HELMET : Internal.RenderGameOverlayEvent$ElementType;
        static readonly ARMOR : Internal.RenderGameOverlayEvent$ElementType;
        static readonly VIGNETTE : Internal.RenderGameOverlayEvent$ElementType;
        static readonly CHAT : Internal.RenderGameOverlayEvent$ElementType;
        static readonly SUBTITLES : Internal.RenderGameOverlayEvent$ElementType;
        static readonly AIR : Internal.RenderGameOverlayEvent$ElementType;
        static readonly TEXT : Internal.RenderGameOverlayEvent$ElementType;
        static readonly BOSSINFO : Internal.RenderGameOverlayEvent$ElementType;
        static readonly CROSSHAIRS : Internal.RenderGameOverlayEvent$ElementType;
        static readonly DEBUG : Internal.RenderGameOverlayEvent$ElementType;
        static readonly PORTAL : Internal.RenderGameOverlayEvent$ElementType;
        static readonly BOSSHEALTH : Internal.RenderGameOverlayEvent$ElementType;
        static readonly POTION_ICONS : Internal.RenderGameOverlayEvent$ElementType;
        static readonly EXPERIENCE : Internal.RenderGameOverlayEvent$ElementType;
        static readonly HEALTH : Internal.RenderGameOverlayEvent$ElementType;
        static readonly HOTBAR : Internal.RenderGameOverlayEvent$ElementType;
        static readonly PLAYER_LIST : Internal.RenderGameOverlayEvent$ElementType;
        static readonly HEALTHMOUNT : Internal.RenderGameOverlayEvent$ElementType;
        static readonly FPS_GRAPH : Internal.RenderGameOverlayEvent$ElementType;
        static readonly JUMPBAR : Internal.RenderGameOverlayEvent$ElementType;
        static readonly FOOD : Internal.RenderGameOverlayEvent$ElementType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderGameOverlayEvent$ElementType_ = "all" | "helmet" | "portal" | "crosshairs" | "bosshealth" | "bossinfo" | "armor" | "health" | "food" | "air" | "hotbar" | "experience" | "text" | "healthmount" | "jumpbar" | "chat" | "player_list" | "debug" | "potion_icons" | "subtitles" | "fps_graph" | "vignette" | RenderGameOverlayEvent$ElementType;
    class Template$EntityInfo extends Document.Object {
        readonly field_186247_a : Vec3;
        readonly field_186248_b : BlockPos;
        readonly field_186249_c : Internal.CompoundNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Template$EntityInfo_ = Template$EntityInfo;
    class PlayerEvent$NameFormat extends Internal.PlayerEvent {
        getListenerList(): Internal.ListenerList;
        getDisplayname(): Internal.ITextComponent;
        setDisplayname(arg0: Internal.ITextComponent_): void;
        getUsername(): Internal.ITextComponent;
        get listenerList(): Internal.ListenerList;
        get displayname(): Internal.ITextComponent;
        get username(): Internal.ITextComponent;
        set displayname(arg0: Internal.ITextComponent_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerEvent$NameFormat_ = PlayerEvent$NameFormat;
    class LivingEntityAttackEventJS extends Internal.LivingEntityEventJS {
        getDamage(): number;
        getSource(): Internal.DamageSourceJS;
        getEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get damage(): number;
        get source(): Internal.DamageSourceJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingEntityAttackEventJS_ = LivingEntityAttackEventJS;
    interface IMetadataSectionSerializer <T> {
        func_195812_a(arg0: Internal.JsonObject): T;
        func_110483_a(): string;
    }
    type IMetadataSectionSerializer_<T> = IMetadataSectionSerializer<T>;
    interface Int2ObjectMap$Entry <V> extends Internal.Map$Entry<number, V> {
        getKey(): number;
        getKey(): any;
        getIntKey(): number;
    }
    type Int2ObjectMap$Entry_<V> = Int2ObjectMap$Entry<V>;
    class SetVisibility extends Document.Object {
        func_178621_a(arg0: Internal.Direction_, arg1: Internal.Direction_): boolean;
        func_178620_a(arg0: Internal.Set<Internal.Direction>): void;
        toString(): string;
        func_178619_a(arg0: Internal.Direction_, arg1: Internal.Direction_, arg2: boolean): void;
        func_178618_a(arg0: boolean): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SetVisibility_ = SetVisibility;
    class ItemModelMesher extends Document.Object {
        func_178083_a(): Internal.ModelManager;
        func_199311_a(arg0: Internal.Item, arg1: Internal.ModelResourceLocation): void;
        func_199309_a(arg0: Internal.ItemStack): Internal.TextureAtlasSprite;
        func_199934_a(arg0: Internal.IItemProvider): Internal.TextureAtlasSprite;
        func_178089_a(arg0: Internal.ItemStack): Internal.IBakedModel;
        func_199312_b(arg0: Internal.Item): Internal.IBakedModel;
        func_178085_b(): void;
        readonly field_199313_a : Internal.Int2ObjectMap<Internal.ModelResourceLocation>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemModelMesher_ = ItemModelMesher;
    interface ILootCondition$IBuilder {
        func_216298_a(): Internal.ILootCondition$IBuilder;
        build(): Internal.ILootCondition;
        func_216297_a(arg0: (() => Internal.ILootCondition)): Internal.Alternative$Builder;
    }
    type ILootCondition$IBuilder_ = (() => Internal.ILootCondition) | ILootCondition$IBuilder;
    class ChunkRenderBounds extends Document.Object {
        readonly z1 : number;
        readonly y1 : number;
        readonly z2 : number;
        readonly x1 : number;
        readonly y2 : number;
        static readonly ALWAYS_FALSE : Internal.ChunkRenderBounds;
        readonly x2 : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkRenderBounds_ = ChunkRenderBounds;
    abstract class LootEntry extends Document.Object implements Internal.ILootEntry {
        func_225579_a_(arg0: Internal.ValidationTracker): void;
        func_230420_a_(): Internal.LootPoolEntryType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootEntry_ = LootEntry;
    class CaveDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: number, arg4: number): void;
        func_201742_a(arg0: BlockPos, arg1: Internal.List<BlockPos>, arg2: Internal.List<number>): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CaveDebugRenderer_ = CaveDebugRenderer;
    abstract class TypeToken <T> extends Internal.TypeCapture<T> implements Internal.Serializable {
        getRawType(): Internal.Class<T>;
        resolveType(arg0: java_.lang.reflect.Type): Internal.TypeToken<any>;
        method(arg0: Internal.Method): Internal.Invokable<T, any>;
        unwrap(): Internal.TypeToken<T>;
        isSubtypeOf(arg0: java_.lang.reflect.Type): boolean;
        isSubtypeOf(arg0: Internal.TypeToken<any>): boolean;
        getType(): java_.lang.reflect.Type;
        hashCode(): number;
        getComponentType(): Internal.TypeToken<any>;
        static of(arg0: java_.lang.reflect.Type): Internal.TypeToken<any>;
        static of<T_>(arg0: Internal.Class_<T_>): Internal.TypeToken<T_>;
        equals(arg0: any): boolean;
        getSubtype(arg0: Internal.Class_<any>): Internal.TypeToken<T>;
        isArray(): boolean;
        toString(): string;
        where<X_>(arg0: Internal.TypeParameter<X_>, arg1: Internal.TypeToken<X_>): Internal.TypeToken<T>;
        where<X_>(arg0: Internal.TypeParameter<X_>, arg1: Internal.Class_<X_>): Internal.TypeToken<T>;
        getSupertype(arg0: Internal.Class_<T>): Internal.TypeToken<T>;
        getTypes(): Internal.TypeToken$TypeSet<>;
        isSupertypeOf(arg0: java_.lang.reflect.Type): boolean;
        isSupertypeOf(arg0: Internal.TypeToken<any>): boolean;
        wrap(): Internal.TypeToken<T>;
        isPrimitive(): boolean;
        get componentType(): Internal.TypeToken<any>;
        get types(): Internal.TypeToken$TypeSet<>;
        get rawType(): Internal.Class<T>;
        get primitive(): boolean;
        get array(): boolean;
        get type(): java_.lang.reflect.Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TypeToken_<T> = TypeToken<T>;
    class LecternTileEntity extends Internal.TileEntity implements Internal.IClearable, Internal.INamedContainerProvider {
        func_214033_c(): Internal.ItemStack;
        func_214034_r(): number;
        func_214041_g(): number;
        createMenu(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity): Internal.Container;
        func_174888_l(): void;
        func_214045_a(arg0: Internal.ItemStack): void;
        func_214046_f(): boolean;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_183000_F(): boolean;
        func_145748_c_(): Internal.ITextComponent;
        func_214040_a(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LecternTileEntity_ = LecternTileEntity;
    interface Hash {
    }
    type Hash_ = Hash;
    interface IntPredicate {
        or(arg0: ((arg0: number) => boolean)): Internal.IntPredicate;
        test(arg0: number): boolean;
        and(arg0: ((arg0: number) => boolean)): Internal.IntPredicate;
        negate(): Internal.IntPredicate;
    }
    type IntPredicate_ = ((arg0: number) => boolean) | IntPredicate;
    class Products$P4 <F, T1, T2, T3, T4> extends Document.Object {
        t4(): Internal.App<F, T4>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function4<T1, T2, T3, T4, R_>>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function4<T1, T2, T3, T4, R_>): Internal.App<F, R_>;
        and<T5_, T6_, T7_>(arg0: Internal.Products$P3<F, T5_, T6_, T7_>): Internal.Products$P7<F, T1, T2, T3, T4, T5_, T6_, T7_>;
        and<T5_>(arg0: Internal.App<F, T5_>): Internal.Products$P5<F, T1, T2, T3, T4, T5_>;
        and<T5_, T6_>(arg0: Internal.Products$P2<F, T5_, T6_>): Internal.Products$P6<F, T1, T2, T3, T4, T5_, T6_>;
        and<T5_, T6_, T7_, T8_>(arg0: Internal.Products$P4<F, T5_, T6_, T7_, T8_>): Internal.Products$P8<F, T1, T2, T3, T4, T5_, T6_, T7_, T8_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        t3(): Internal.App<F, T3>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P4_<F, T1, T2, T3, T4> = Products$P4<F, T1, T2, T3, T4>;
    interface GameSession {
        getPlayerCount(): number;
        getGameMode(): string;
        isRemoteServer(): boolean;
        getSessionId(): Internal.UUID;
        getDifficulty(): string;
    }
    type GameSession_ = GameSession;
    interface INetHandler {
        func_147298_b(): Internal.NetworkManager;
        func_147231_a(arg0: Internal.ITextComponent_): void;
    }
    type INetHandler_ = INetHandler;
    interface Encoder <A> {
        encode<T>(arg0: A, arg1: Internal.DynamicOps<T>, arg2: T): Internal.DataResult<T>;
        flatComap<B>(arg0: ((arg0: B) => Internal.DataResult<A>)): Internal.Encoder<B>;
        comap<B>(arg0: ((arg0: B) => A)): Internal.Encoder<B>;
        fieldOf(arg0: string): Internal.MapEncoder<A>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Encoder<A>;
        encodeStart<T>(arg0: Internal.DynamicOps<T>, arg1: A): Internal.DataResult<T>;
    }
    type Encoder_<A> = Encoder<A>;
    class EventPriority extends Internal.Enum<Internal.EventPriority> implements Internal.IEventListener {
        static valueOf(arg0: string): Internal.EventPriority;
        static values(): Internal.EventPriority[];
        invoke(arg0: net.minecraftforge.eventbus.api.Event): void;
        static readonly LOWEST : Internal.EventPriority;
        static readonly HIGH : Internal.EventPriority;
        static readonly LOW : Internal.EventPriority;
        static readonly HIGHEST : Internal.EventPriority;
        static readonly NORMAL : Internal.EventPriority;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EventPriority_ = "highest" | "high" | "normal" | "low" | "lowest" | EventPriority;
    class FoliagePlacerType <P> extends Internal.ForgeRegistryEntry<Internal.FoliagePlacerType<any>> {
        func_236772_a_(): Internal.Codec<P>;
        static readonly field_236770_i_ : Internal.FoliagePlacerType<Internal.DarkOakFoliagePlacer>;
        static readonly field_236767_f_ : Internal.FoliagePlacerType<Internal.FancyFoliagePlacer>;
        static readonly field_236766_e_ : Internal.FoliagePlacerType<Internal.BushFoliagePlacer>;
        static readonly field_227387_b_ : Internal.FoliagePlacerType<Internal.SpruceFoliagePlacer>;
        static readonly field_236768_g_ : Internal.FoliagePlacerType<Internal.JungleFoliagePlacer>;
        static readonly field_236769_h_ : Internal.FoliagePlacerType<Internal.MegaPineFoliagePlacer>;
        static readonly field_227389_d_ : Internal.FoliagePlacerType<Internal.AcaciaFoliagePlacer>;
        static readonly field_227386_a_ : Internal.FoliagePlacerType<Internal.BlobFoliagePlacer>;
        static readonly field_227388_c_ : Internal.FoliagePlacerType<Internal.PineFoliagePlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FoliagePlacerType_<P> = FoliagePlacerType<P>;
    class ClickEvent$Action extends Internal.Enum<Internal.ClickEvent$Action> {
        func_150674_a(): boolean;
        func_150673_b(): string;
        static valueOf(arg0: string): Internal.ClickEvent$Action;
        static values(): Internal.ClickEvent$Action[];
        static func_150672_a(arg0: string): Internal.ClickEvent$Action;
        static readonly RUN_COMMAND : Internal.ClickEvent$Action;
        static readonly CHANGE_PAGE : Internal.ClickEvent$Action;
        static readonly COPY_TO_CLIPBOARD : Internal.ClickEvent$Action;
        static readonly SUGGEST_COMMAND : Internal.ClickEvent$Action;
        static readonly OPEN_FILE : Internal.ClickEvent$Action;
        static readonly OPEN_URL : Internal.ClickEvent$Action;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClickEvent$Action_ = "open_url" | "open_file" | "run_command" | "suggest_command" | "change_page" | "copy_to_clipboard" | ClickEvent$Action;
    class DimensionType extends Document.Object {
        func_236035_c_(arg0: number): number;
        func_241513_m_(): number;
        func_242714_a(arg0: Internal.DimensionType): boolean;
        func_236037_d_(): boolean;
        func_236032_b_(arg0: number): number;
        static func_236031_a_(arg0: Internal.RegistryKey<Internal.World>, arg1: Internal.File): Internal.File;
        func_236040_e_(): boolean;
        func_236043_f_(): boolean;
        static func_242715_a(arg0: Internal.DimensionType, arg1: Internal.DimensionType): number;
        static func_242718_a(arg0: Internal.Registry<Internal.DimensionType>, arg1: Internal.Registry<Internal.Biome>, arg2: Internal.Registry<Internal.DimensionSettings>, arg3: number): Internal.SimpleRegistry<Internal.Dimension>;
        func_186067_c(): string;
        func_236046_h_(): boolean;
        func_242724_f(): number;
        func_241509_i_(): boolean;
        static func_236025_a_(arg0: Internal.Dynamic<any>): Internal.DataResult<Internal.RegistryKey<Internal.World>>;
        func_227176_e_(): Internal.IBiomeMagnifier;
        func_242725_p(): ResourceLocation;
        static func_236027_a_(arg0: Internal.DynamicRegistries$Impl): Internal.DynamicRegistries$Impl;
        func_241515_q_(): Internal.ITag<Internal.Block>;
        func_241510_j_(): boolean;
        func_236021_a_(arg0: number): number;
        func_241514_p_(): boolean;
        func_241511_k_(): boolean;
        func_218272_d(): boolean;
        func_241512_l_(): boolean;
        static readonly field_242712_c : ResourceLocation;
        static readonly field_235999_c_ : Internal.RegistryKey<Internal.DimensionType>;
        static readonly field_236001_e_ : Internal.RegistryKey<Internal.DimensionType>;
        static readonly field_235997_a_ : Internal.Codec<Internal.DimensionType>;
        static readonly field_236000_d_ : Internal.RegistryKey<Internal.DimensionType>;
        static readonly field_235998_b_ : number[];
        static readonly field_236002_f_ : Internal.Codec<(() => Internal.DimensionType)>;
        static readonly field_242711_b : ResourceLocation;
        static readonly field_241497_i_ : Internal.RegistryKey<Internal.DimensionType>;
        readonly field_241504_y_ : ResourceLocation;
        static readonly field_242710_a : ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DimensionType_ = DimensionType;
    class CInputPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_229755_e_(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149620_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_192620_b(): number;
        func_149618_e(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CInputPacket_ = CInputPacket;
    interface IRecipeTransferInfo <C> {
        getRecipeSlots(arg0: C): Internal.List<Internal.Slot>;
        getContainerClass(): Internal.Class<C>;
        canHandle(arg0: C): boolean;
        getRecipeCategoryUid(): ResourceLocation;
        getInventorySlots(arg0: C): Internal.List<Internal.Slot>;
        requireCompleteSets(): boolean;
    }
    type IRecipeTransferInfo_<C> = IRecipeTransferInfo<C>;
    abstract class Dictionary <K, V> extends Document.Object {
        size(): number;
        keys(): Internal.Enumeration<K>;
        elements(): Internal.Enumeration<V>;
        get(arg0: any): V;
        isEmpty(): boolean;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Dictionary_<K, V> = Dictionary<K, V>;
    class Quaternion extends Document.Object {
        func_227067_f_(): void;
        func_195891_b(): number;
        func_227068_g_(): Internal.Quaternion;
        func_195894_d(): number;
        hashCode(): number;
        func_195892_e(): void;
        equals(arg0: any): boolean;
        func_195893_c(): number;
        toString(): string;
        func_195889_a(): number;
        func_227066_a_(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_227065_a_(arg0: number): void;
        func_195890_a(arg0: Internal.Quaternion): void;
        static readonly field_227060_a_ : Internal.Quaternion;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Quaternion_ = Quaternion;
    interface CustomIngredientActionCallback {
        transform(arg0: Internal.ItemStackJS_, arg1: number, arg2: Internal.InventoryJS): any;
    }
    type CustomIngredientActionCallback_ = ((arg0: Internal.ItemStackJS, arg1: number, arg2: Internal.InventoryJS) => any) | CustomIngredientActionCallback;
    interface Int2ObjectMap <V> extends Internal.Int2ObjectFunction<V>, Internal.Map<number, V> {
        getOrDefault(arg0: any, arg1: V): V;
        getOrDefault(arg0: number, arg1: V): V;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<number, V>>;
        entrySet(): Internal.Set<any>;
        containsKey(arg0: number): boolean;
        containsKey(arg0: any): boolean;
        computeIfAbsent(arg0: number, arg1: ((arg0: number) => V)): V;
        computeIfAbsent(arg0: any, arg1: ((arg0: any) => any)): any;
        computeIfAbsent(arg0: number, arg1: ((arg0: number) => V)): V;
        values(): Internal.ObjectCollection<V>;
        values(): Internal.Collection<any>;
        replace(arg0: any, arg1: any): any;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V): V;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        clear(): void;
        computeIfAbsentPartial(arg0: number, arg1: ((arg0: number) => V)): V;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: number, arg1: any): boolean;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: number, arg1: ((arg0: number, arg1: V) => V)): V;
        compute(arg0: any, arg1: ((arg0: any, arg1: any) => any)): any;
        compute(arg0: number, arg1: ((arg0: number, arg1: V) => V)): V;
        defaultReturnValue(): V;
        defaultReturnValue(arg0: V): void;
        computeIfPresent(arg0: number, arg1: ((arg0: number, arg1: V) => V)): V;
        computeIfPresent(arg0: number, arg1: ((arg0: number, arg1: V) => V)): V;
        computeIfPresent(arg0: any, arg1: ((arg0: any, arg1: any) => any)): any;
        int2ObjectEntrySet(): Internal.ObjectSet<Internal.Int2ObjectMap$Entry<V>>;
        size(): number;
        merge(arg0: number, arg1: V, arg2: ((arg0: V, arg1: V) => V)): V;
        merge(arg0: any, arg1: any, arg2: ((arg0: any, arg1: any) => any)): any;
        merge(arg0: number, arg1: V, arg2: ((arg0: V, arg1: V) => V)): V;
        get(arg0: any): V;
        keySet(): Internal.IntSet;
        keySet(): Internal.Set<any>;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: number, arg1: V): V;
        putIfAbsent(arg0: number, arg1: V): V;
    }
    type Int2ObjectMap_<V> = Int2ObjectMap<V>;
    abstract class PlayerJS <E> extends Internal.LivingEntityJS implements Internal.WithAttachedData {
        getXpLevel(): number;
        getMyRidingOffset(): number;
        sendData(channel: string, data: Internal.CompoundNBT): void;
        getDestroySpeed(blockState: Internal.BlockState): number;
        paint(arg0: Internal.CompoundNBT): void;
        makeStuckInBlock(blockState: Internal.BlockState, vec3: Vec3): void;
        getProjectile(itemStack: Internal.ItemStack): Internal.ItemStack;
        isModelPartShown(playerModelPart: Internal.PlayerModelPart_): boolean;
        setXpLevel(l: number): void;
        getAttackStrengthScale(f: number): number;
        displayClientMessage(component: Internal.ITextComponent_, bl: boolean): void;
        addAdditionalSaveData(compoundTag: Internal.CompoundNBT): void;
        canEat(bl: boolean): boolean;
        setSelectedSlot(index: number): void;
        canUseGameMasterBlocks(): boolean;
        awardRecipes(collection: Internal.Collection<any>): number;
        checkMovementStatistics(d: number, e: number, f: number): void;
        openItemGui(itemStack: Internal.ItemStack, interactionHand: Hand_): void;
        isSleepingLongEnough(): boolean;
        getEnderChestInventory(): Internal.EnderChestInventory;
        causeFoodExhaustion(f: number): void;
        setReducedDebugInfo(bl: boolean): void;
        addFood(f: number, m: number): void;
        getSleepTimer(): number;
        isPushedByFluid(): boolean;
        getDimensionChangingDelay(): number;
        openMenu(menuProvider: Internal.INamedContainerProvider): Internal.OptionalInt;
        give(item: Internal.ItemStackJS_): void;
        canHarmPlayer(player: Internal.PlayerEntity): boolean;
        getProfile(): Internal.GameProfile;
        setGameMode(gameType: Internal.GameType_): void;
        getStandingEyeHeight(pose: Internal.Pose_, entityDimensions: Internal.EntitySize): number;
        isMiningBlock(): boolean;
        getDimensions(pose: Internal.Pose_): Internal.EntitySize;
        isSpectator(): boolean;
        setAbsorptionAmount(f: number): void;
        giveExperiencePoints(i: number): void;
        getDisplayName(): Internal.ITextComponent;
        getXp(): number;
        openTextEdit(signBlockEntity: Internal.SignTileEntity): void;
        addExhaustion(f: number): void;
        onUpdateAbilities(): void;
        getFoodLevel(): number;
        isFake(): boolean;
        getPortalWaitTime(): number;
        canTakeItem(itemStack: Internal.ItemStack): boolean;
        hurt(damageSource: Internal.DamageSource, f: number): boolean;
        shouldShowName(): boolean;
        respawn(): void;
        setEntityOnShoulder(compoundTag: Internal.CompoundNBT): boolean;
        onEnchantmentPerformed(itemStack: Internal.ItemStack, i: number): void;
        isSecondaryUseActive(): boolean;
        getGameProfile(): Internal.GameProfile;
        resetRecipes(collection: Internal.Collection<any>): number;
        setAirSupply(air: number): void;
        getEnchantmentSeed(): number;
        hasCorrectToolForDrops(blockState: Internal.BlockState): boolean;
        attack(entity: Internal.Entity): void;
        awardStat(stat: Internal.Stat<any>, i: number): void;
        awardStat(resourceLocation: ResourceLocation_, i: number): void;
        awardStat(stat: Internal.Stat<any>): void;
        awardStat(resourceLocation: ResourceLocation_): void;
        playSound(soundEvent: Internal.SoundEvent, f: number, g: number): void;
        eat(i: number, f: number): void;
        eat(item: Internal.Item, itemStack: Internal.ItemStack): void;
        eat(level: Internal.World, itemStack: Internal.ItemStack): Internal.ItemStack;
        stopFallFlying(): void;
        getScoreboard(): Internal.Scoreboard;
        getInventory(): Internal.InventoryJS;
        boostElytraFlight(): void;
        getData(): Internal.AttachedData;
        disableShield(bl: boolean): void;
        increaseScore(i: number): void;
        getShoulderEntityRight(): Internal.CompoundNBT;
        aiStep(): void;
        setStatusMessage(message: Internal.ITextComponent_): void;
        isSwimming(): boolean;
        isInvulnerableTo(damageSource: Internal.DamageSource): boolean;
        mayBuild(): boolean;
        openMinecartCommandBlock(baseCommandBlock: Internal.CommandBlockLogic): void;
        getItemBySlot(equipmentSlot: EquipmentSlot_): Internal.ItemStack;
        setPositionAndRotation(x: number, y: number, z: number, yaw: number, pitch: number): void;
        isLocalPlayer(): boolean;
        addItemCooldown(item: Internal.Item, ticks: number): void;
        toString(): string;
        giveExperienceLevels(i: number): void;
        travel(vec3: Vec3): void;
        setSaturation(f: number): void;
        getRopeHoldPosition(f: number): Vec3;
        playNotifySound(soundEvent: Internal.SoundEvent, soundSource: Internal.SoundCategory_, f: number, g: number): void;
        setXp(xp: number): void;
        sendMerchantOffers(i: number, merchantOffers: Internal.MerchantOffers, j: number, k: number, bl: boolean, bl2: boolean): void;
        getMaxAirSupply(): number;
        die(damageSource: Internal.DamageSource): void;
        sendInventoryUpdate(): void;
        getName(): Internal.ITextComponent;
        openHorseInventory(abstractHorse: Internal.AbstractHorseEntity, container: Internal.IInventory): void;
        getSoundSource(): Internal.SoundCategory;
        closeInventory(): void;
        causeFallDamage(f: number, g: number): boolean;
        getXpNeededForNextLevel(): number;
        openStructureBlock(structureBlockEntity: Internal.StructureBlockTileEntity): void;
        getCurrentItemAttackStrengthDelay(): number;
        resetPos(): void;
        tryToStartFallFlying(): boolean;
        sweepAttack(): void;
        getArmorSlots(): Internal.Iterable<any>;
        startSleepInBed(blockPos: BlockPos): Internal.Either<any, any>;
        giveInHand(item: Internal.ItemStackJS_): void;
        getLuck(): number;
        getAirSupply(): number;
        tick(player: Internal.PlayerEntity): void;
        tick(): void;
        isCreativeMode(): boolean;
        awardRecipesByKey(resourceLocations: ResourceLocation[]): void;
        updateSwimming(): void;
        removeVehicle(): void;
        getHandSlots(): Internal.Iterable<any>;
        needsFood(): boolean;
        getSpeed(): number;
        openCommandBlock(commandBlockEntity: Internal.CommandBlockTileEntity): void;
        setMouseItem(item: Internal.ItemStackJS_): void;
        rideTick(): void;
        stopSleeping(): void;
        openJigsawBlock(jigsawBlockEntity: Internal.JigsawTileEntity): void;
        getDismountPoses(): Internal.ImmutableList<any>;
        drop(itemStack: Internal.ItemStack, bl: boolean): Internal.ItemEntityJS;
        drop(bl: boolean): boolean;
        drop(itemStack: Internal.ItemStack, bl: boolean, bl2: boolean): Internal.ItemEntityJS;
        isCreative(): boolean;
        isPlayer(): boolean;
        handleEntityEvent(b: number): void;
        getStats(): Internal.PlayerStatsJS;
        getAbsorptionAmount(): number;
        getShoulderEntityLeft(): Internal.CompoundNBT;
        interactOn(entity: Internal.Entity, interactionHand: Hand_): Internal.ActionResultType;
        getScoreboardName(): string;
        addXPLevels(l: number): void;
        remove(): void;
        getOpenInventory(): Internal.Container;
        getStages(): Internal.Stages;
        isAffectedByFluids(): boolean;
        setSlot(i: number, itemStack: Internal.ItemStack): boolean;
        addItem(itemStack: Internal.ItemStack): boolean;
        closeContainer(): void;
        blockActionRestricted(level: Internal.World, blockPos: BlockPos, gameType: Internal.GameType_): boolean;
        jumpFromGround(): void;
        addXP(xp: number): void;
        startFallFlying(): void;
        isReducedDebugInfo(): boolean;
        getSaturationLevel(): number;
        stopSleepInBed(bl: boolean, bl2: boolean): void;
        resetStat(stat: Internal.Stat<any>): void;
        setMainArm(humanoidArm: Internal.HandSide_): void;
        getCooldowns(): Internal.CooldownTracker;
        readAdditionalSaveData(compoundTag: Internal.CompoundNBT): void;
        killed(serverLevel: Internal.ServerWorld, livingEntity: Internal.LivingEntity): void;
        resetAttackStrengthTicker(): void;
        getFoodData(): Internal.FoodStats;
        getSelectedSlot(): number;
        magicCrit(entity: Internal.Entity): void;
        mayUseItemAt(blockPos: BlockPos, direction: Internal.Direction_, itemStack: Internal.ItemStack): boolean;
        setItemSlot(equipmentSlot: EquipmentSlot_, itemStack: Internal.ItemStack): void;
        spawn(): void;
        crit(entity: Internal.Entity): void;
        getMainArm(): Internal.HandSide;
        getMouseItem(): Internal.ItemStackJS;
        setFoodLevel(i: number): void;
        isHurt(): boolean;
        getInstance(): Internal.PlayerJS<any>;
        setRemainingFireTicks(i: number): void;
        getScore(): number;
        setScore(i: number): void;
        readonly minecraftPlayer : E;
        get luck(): number;
        get instance(): Internal.PlayerJS<any>;
        get data(): Internal.AttachedData;
        get xpLevel(): number;
        get cooldowns(): Internal.CooldownTracker;
        get soundSource(): Internal.SoundCategory;
        get creativeMode(): boolean;
        get shoulderEntityRight(): Internal.CompoundNBT;
        get score(): number;
        get maxAirSupply(): number;
        get stats(): Internal.PlayerStatsJS;
        get scoreboard(): Internal.Scoreboard;
        get enderChestInventory(): Internal.EnderChestInventory;
        get myRidingOffset(): number;
        get profile(): Internal.GameProfile;
        get enchantmentSeed(): number;
        get creative(): boolean;
        get portalWaitTime(): number;
        get mouseItem(): Internal.ItemStackJS;
        get name(): Internal.ITextComponent;
        get foodData(): Internal.FoodStats;
        get displayName(): Internal.ITextComponent;
        get reducedDebugInfo(): boolean;
        get saturationLevel(): number;
        get inventory(): Internal.InventoryJS;
        get localPlayer(): boolean;
        get airSupply(): number;
        get speed(): number;
        get gameProfile(): Internal.GameProfile;
        get swimming(): boolean;
        get miningBlock(): boolean;
        get selectedSlot(): number;
        get sleepTimer(): number;
        get pushedByFluid(): boolean;
        get currentItemAttackStrengthDelay(): number;
        get dimensionChangingDelay(): number;
        get scoreboardName(): string;
        get sleepingLongEnough(): boolean;
        get xpNeededForNextLevel(): number;
        get player(): boolean;
        get absorptionAmount(): number;
        get openInventory(): Internal.Container;
        get secondaryUseActive(): boolean;
        get shoulderEntityLeft(): Internal.CompoundNBT;
        get mainArm(): Internal.HandSide;
        get dismountPoses(): Internal.ImmutableList<any>;
        get affectedByFluids(): boolean;
        get handSlots(): Internal.Iterable<any>;
        get spectator(): boolean;
        get xp(): number;
        get stages(): Internal.Stages;
        get fake(): boolean;
        get foodLevel(): number;
        get armorSlots(): Internal.Iterable<any>;
        set absorptionAmount(f: number);
        set mainArm(humanoidArm: Internal.HandSide_);
        set remainingFireTicks(i: number);
        set xpLevel(l: number);
        set reducedDebugInfo(bl: boolean);
        set statusMessage(message: Internal.ITextComponent_);
        set airSupply(air: number);
        set saturation(f: number);
        set score(i: number);
        set entityOnShoulder(compoundTag: Internal.CompoundNBT);
        set selectedSlot(index: number);
        set mouseItem(item: Internal.ItemStackJS_);
        set xp(xp: number);
        set foodLevel(i: number);
        set gameMode(gameType: Internal.GameType_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerJS_<E> = PlayerJS<E>;
    interface Copyable {
        copy(): Internal.Copyable;
    }
    type Copyable_ = Copyable;
    abstract class Permission extends Document.Object implements Internal.Guard, Internal.Serializable {
        getName(): string;
        checkGuard(arg0: any): void;
        newPermissionCollection(): Internal.PermissionCollection;
        hashCode(): number;
        equals(arg0: any): boolean;
        getActions(): string;
        toString(): string;
        implies(arg0: Internal.Permission): boolean;
        get name(): string;
        get actions(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Permission_ = Permission;
    class NetworkEvent extends net.minecraftforge.eventbus.api.Event {
        getPayload(): Internal.PacketBuffer;
        getLoginIndex(): number;
        getListenerList(): Internal.ListenerList;
        getSource(): Internal.Supplier<Internal.NetworkEvent$Context>;
        get payload(): Internal.PacketBuffer;
        get loginIndex(): number;
        get listenerList(): Internal.ListenerList;
        get source(): Internal.Supplier<Internal.NetworkEvent$Context>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NetworkEvent_ = NetworkEvent;
    class SmokerContainer extends Internal.AbstractFurnaceContainer {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SmokerContainer_ = SmokerContainer;
    abstract class FileStore extends Document.Object {
        getTotalSpace(): number;
        getAttribute(arg0: string): any;
        getUsableSpace(): number;
        isReadOnly(): boolean;
        getBlockSize(): number;
        supportsFileAttributeView(arg0: Internal.Class_<Internal.FileAttributeView_>): boolean;
        supportsFileAttributeView(arg0: string): boolean;
        name(): string;
        type(): string;
        getUnallocatedSpace(): number;
        getFileStoreAttributeView<V_>(arg0: Internal.Class_<V_>): V_;
        get unallocatedSpace(): number;
        get readOnly(): boolean;
        get totalSpace(): number;
        get usableSpace(): number;
        get blockSize(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FileStore_ = FileStore;
    class ExplosionContext extends Document.Object {
        func_230311_a_(arg0: Internal.Explosion, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: number): boolean;
        func_230312_a_(arg0: Internal.Explosion, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.FluidState): Internal.Optional<number>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ExplosionContext_ = ExplosionContext;
    class ChannelMetadata extends Document.Object {
        hasDisconnect(): boolean;
        defaultMaxMessagesPerRead(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChannelMetadata_ = ChannelMetadata;
    class SUpdateHealthPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149331_e(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149330_d(): number;
        func_149332_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SUpdateHealthPacket_ = SUpdateHealthPacket;
    class AudioFormat$Encoding extends Document.Object {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        static readonly PCM_UNSIGNED : Internal.AudioFormat$Encoding;
        static readonly ULAW : Internal.AudioFormat$Encoding;
        static readonly PCM_FLOAT : Internal.AudioFormat$Encoding;
        static readonly PCM_SIGNED : Internal.AudioFormat$Encoding;
        static readonly ALAW : Internal.AudioFormat$Encoding;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AudioFormat$Encoding_ = AudioFormat$Encoding;
    class BlastingRecipe extends Internal.AbstractCookingRecipe {
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_222128_h(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlastingRecipe_ = BlastingRecipe;
    abstract class UserList <K, V> extends Document.Object {
        func_152691_c(): Internal.File;
        func_152690_d(): boolean;
        func_152679_g(): void;
        func_199043_f(): Internal.Collection<V>;
        func_152678_f(): void;
        func_199042_b(arg0: Internal.UserListEntry<K>): void;
        func_152687_a(arg0: V): void;
        func_152684_c(arg0: K): void;
        func_152685_a(): string[];
        func_152683_b(arg0: K): V;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type UserList_<K, V> = UserList<K, V>;
    interface ITimerCallback <T> {
        func_212869_a_(arg0: T, arg1: Internal.TimerCallbackManager<T>, arg2: number): void;
    }
    type ITimerCallback_<T> = ((arg0: T, arg1: Internal.TimerCallbackManager<T>, arg2: number) => void) | ITimerCallback<T>;
    class JEISubtypesEventJS extends Internal.EventJS {
        useNBTKey(items: Internal.IngredientJS_, key: string): void;
        useNBT(items: Internal.IngredientJS_): void;
        registerInterpreter(id: any, interpreter: Internal.JEISubtypesEventJS$Interpreter): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JEISubtypesEventJS_ = JEISubtypesEventJS;
    class LecternContainer extends Internal.Container {
        func_75140_a(arg0: Internal.PlayerEntity, arg1: number): boolean;
        func_217016_e(): Internal.ItemStack;
        func_217017_f(): number;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_75137_b(arg0: number, arg1: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LecternContainer_ = LecternContainer;
    class GuiContainerEvent$DrawBackground extends Internal.GuiContainerEvent {
        getMouseY(): number;
        getListenerList(): Internal.ListenerList;
        getMouseX(): number;
        getMatrixStack(): Internal.MatrixStack;
        get mouseX(): number;
        get matrixStack(): Internal.MatrixStack;
        get listenerList(): Internal.ListenerList;
        get mouseY(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiContainerEvent$DrawBackground_ = GuiContainerEvent$DrawBackground;
    class ZombieEvent extends Internal.EntityEvent {
        getListenerList(): Internal.ListenerList;
        getSummoner(): Internal.ZombieEntity;
        get listenerList(): Internal.ListenerList;
        get summoner(): Internal.ZombieEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZombieEvent_ = ZombieEvent;
    class SPlaySoundPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_186926_d(): number;
        func_186929_b(): Internal.SoundCategory;
        func_186925_e(): number;
        func_197698_a(): ResourceLocation;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186932_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_186927_f(): number;
        func_186928_g(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlaySoundPacket_ = SPlaySoundPacket;
    class SChangeGameStatePacket$State extends Document.Object {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SChangeGameStatePacket$State_ = SChangeGameStatePacket$State;
    class RegisterItemSubtypeEventJS extends Internal.JEIEventJS {
        readonly data : Internal.ISubtypeRegistration;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegisterItemSubtypeEventJS_ = RegisterItemSubtypeEventJS;
    interface DebuggableScript {
        getFunctionName(): string;
        getParent(): Internal.DebuggableScript;
        getSourceName(): string;
        getParamOrVarName(arg0: number): string;
        isFunction(): boolean;
        getFunction(arg0: number): Internal.DebuggableScript;
        isTopLevel(): boolean;
        getFunctionCount(): number;
        getLineNumbers(): number[];
        getParamAndVarCount(): number;
        isGeneratedScript(): boolean;
        getParamCount(): number;
    }
    type DebuggableScript_ = DebuggableScript;
    class ValidationTracker extends Document.Object {
        func_227536_b_(arg0: ResourceLocation_): boolean;
        func_227530_a_(arg0: string): void;
        func_227531_a_(arg0: string, arg1: ResourceLocation_): Internal.ValidationTracker;
        func_227532_a_(arg0: ResourceLocation_): boolean;
        func_227528_a_(arg0: Internal.IParameterized): void;
        func_227527_a_(): Internal.Multimap<string, string>;
        func_227539_c_(arg0: ResourceLocation_): Internal.LootTable;
        func_227534_b_(arg0: string): Internal.ValidationTracker;
        func_227529_a_(arg0: Internal.LootParameterSet): Internal.ValidationTracker;
        func_227535_b_(arg0: string, arg1: ResourceLocation_): Internal.ValidationTracker;
        func_227541_d_(arg0: ResourceLocation_): Internal.ILootCondition;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ValidationTracker_ = ValidationTracker;
    interface ParticleManager$IParticleMetaFactory <T> {
        create(arg0: Internal.IAnimatedSprite): Internal.IParticleFactory<T>;
    }
    type ParticleManager$IParticleMetaFactory_<T> = ((arg0: Internal.IAnimatedSprite) => Internal.IParticleFactory<T>) | ParticleManager$IParticleMetaFactory<T>;
    class ItemRightClickEventJS extends Internal.PlayerEventJS {
        getHand(): Hand;
        getItem(): Internal.ItemStackJS;
        getEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get item(): Internal.ItemStackJS;
        get entity(): Internal.EntityJS;
        get hand(): Hand;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemRightClickEventJS_ = ItemRightClickEventJS;
    class TagsUpdatedEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getTagManager(): Internal.ITagCollectionSupplier;
        get tagManager(): Internal.ITagCollectionSupplier;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TagsUpdatedEvent_ = TagsUpdatedEvent;
    class CommandBlockTileEntity extends Internal.TileEntity {
        func_184253_b(arg0: boolean): void;
        func_184252_d(arg0: boolean): void;
        func_184255_d(): boolean;
        func_184254_e(): boolean;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_184251_i(): Internal.CommandBlockTileEntity$Mode;
        func_184256_g(): boolean;
        func_184249_c(): boolean;
        func_183000_F(): boolean;
        func_184257_h(): boolean;
        func_184258_j(): boolean;
        func_145829_t(): void;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_145993_a(): Internal.CommandBlockLogic;
        func_184250_a(arg0: boolean): void;
        func_226987_h_(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandBlockTileEntity_ = CommandBlockTileEntity;
    interface GameRulesAccessor$IntegerValueSimple {
    }
    type GameRulesAccessor$IntegerValueSimple_ = GameRulesAccessor$IntegerValueSimple;
    interface IContainerProvider {
        createMenu(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity): Internal.Container;
    }
    type IContainerProvider_ = ((arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity) => Internal.Container) | IContainerProvider;
    class ServerLifecycleEvent extends net.minecraftforge.eventbus.api.Event {
        getServer(): Internal.MinecraftServer;
        getListenerList(): Internal.ListenerList;
        get server(): Internal.MinecraftServer;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerLifecycleEvent_ = ServerLifecycleEvent;
    interface IItemTier {
        func_200929_c(): number;
        func_200927_e(): number;
        func_200928_b(): number;
        func_200924_f(): Internal.Ingredient;
        func_200925_d(): number;
        func_200926_a(): number;
    }
    type IItemTier_ = IItemTier;
    class BlazeEntity extends Internal.MonsterEntity {
        static func_234276_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70027_ad(): boolean;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_70636_d(): void;
        func_230270_dK_(): boolean;
        func_70013_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlazeEntity_ = BlazeEntity;
    interface IForgeSelectionContext {
        getEntity(): Internal.Entity;
    }
    type IForgeSelectionContext_ = IForgeSelectionContext;
    interface PathMatcher {
        matches(arg0: java_.nio.file.Path): boolean;
    }
    type PathMatcher_ = ((arg0: java_.nio.file.Path) => boolean) | PathMatcher;
    interface IFutureReloadListener {
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor, arg5: Internal.Executor): Internal.CompletableFuture<void>;
        func_225594_i_(): string;
    }
    type IFutureReloadListener_ = IFutureReloadListener;
    class ConditionalFunction extends Document.Object implements Internal.FunctionContainer, Internal.ConditionContainer {
        addFunction(arg0: Internal.JsonObject): Internal.FunctionContainer;
        addFunction(o: Internal.JsonObject): Internal.ConditionalFunction;
        addCondition(arg0: Internal.JsonObject): Internal.ConditionContainer;
        addCondition(o: Internal.JsonObject): Internal.ConditionalFunction;
        function : Internal.JsonObject;
        conditions : Internal.JsonArray;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ConditionalFunction_ = ConditionalFunction;
    interface IRecipeTransferHandlerHelper {
        createUserErrorWithTooltip(arg0: string): Internal.IRecipeTransferError;
        createUserErrorWithTooltip(arg0: Internal.ITextComponent_): Internal.IRecipeTransferError;
        createInternalError(): Internal.IRecipeTransferError;
        createUserErrorForSlots(arg0: Internal.ITextComponent_, arg1: Internal.Collection<number>): Internal.IRecipeTransferError;
        createUserErrorForSlots(arg0: string, arg1: Internal.Collection<number>): Internal.IRecipeTransferError;
    }
    type IRecipeTransferHandlerHelper_ = IRecipeTransferHandlerHelper;
    class FireworkStarFadeRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FireworkStarFadeRecipe_ = FireworkStarFadeRecipe;
    interface IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
    }
    type IFeatureConfig_ = IFeatureConfig;
    class CampfireTileEntity extends Internal.TileEntity implements Internal.IClearable, Internal.ITickableTileEntity {
        func_174888_l(): void;
        func_213986_d(): void;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_189517_E_(): Internal.CompoundNBT;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_213985_c(): Internal.NonNullList<Internal.ItemStack>;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_213984_a(arg0: Internal.ItemStack, arg1: number): boolean;
        func_73660_a(): void;
        func_213980_a(arg0: Internal.ItemStack): Internal.Optional<Internal.CampfireCookingRecipe>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CampfireTileEntity_ = CampfireTileEntity;
    class BehaviourType <T> extends Document.Object {
        getName(): string;
        hashCode(): number;
        get name(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BehaviourType_<T> = BehaviourType<T>;
    interface IntBidirectionalIterator extends Internal.IntIterator, Internal.ObjectBidirectionalIterator<number> {
        previousInt(): number;
        previous(): any;
        previous(): number;
        back(arg0: number): number;
        skip(arg0: number): number;
    }
    type IntBidirectionalIterator_ = IntBidirectionalIterator;
    class EntityMountEvent extends Internal.EntityEvent {
        getEntityBeingMounted(): Internal.Entity;
        getListenerList(): Internal.ListenerList;
        isMounting(): boolean;
        getEntityMounting(): Internal.Entity;
        getWorldObj(): Internal.World;
        isDismounting(): boolean;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get dismounting(): boolean;
        get mounting(): boolean;
        get entityBeingMounted(): Internal.Entity;
        get worldObj(): Internal.World;
        get entityMounting(): Internal.Entity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityMountEvent_ = EntityMountEvent;
    class SearchTreeManager extends Document.Object implements Internal.IResourceManagerReloadListener {
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_215357_a<T_>(arg0: Internal.SearchTreeManager$Key<T_>, arg1: Internal.IMutableSearchTree<T_>): void;
        func_215358_a<T_>(arg0: Internal.SearchTreeManager$Key<T_>): Internal.IMutableSearchTree<T_>;
        getResourceType(): Internal.IResourceType;
        static readonly field_215360_b : Internal.SearchTreeManager$Key<Internal.ItemStack>;
        static readonly field_194012_b : Internal.SearchTreeManager$Key<Internal.RecipeList>;
        static readonly field_215359_a : Internal.SearchTreeManager$Key<Internal.ItemStack>;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SearchTreeManager_ = SearchTreeManager;
    class FileChannel$MapMode extends Document.Object {
        toString(): string;
        static readonly READ_ONLY : Internal.FileChannel$MapMode;
        static readonly READ_WRITE : Internal.FileChannel$MapMode;
        static readonly PRIVATE : Internal.FileChannel$MapMode;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FileChannel$MapMode_ = FileChannel$MapMode;
    interface IRecipeManagerPlugin {
        getRecipeCategoryUids<V>(arg0: Internal.IFocus<V>): Internal.List<ResourceLocation>;
        getRecipes<T, V>(arg0: Internal.IRecipeCategory<T>, arg1: Internal.IFocus<V>): Internal.List<T>;
        getRecipes<T>(arg0: Internal.IRecipeCategory<T>): Internal.List<T>;
    }
    type IRecipeManagerPlugin_ = IRecipeManagerPlugin;
    interface ChannelInboundInvoker {
        fireChannelRead(arg0: any): Internal.ChannelInboundInvoker;
        fireChannelInactive(): Internal.ChannelInboundInvoker;
        fireChannelReadComplete(): Internal.ChannelInboundInvoker;
        fireChannelWritabilityChanged(): Internal.ChannelInboundInvoker;
        fireExceptionCaught(arg0: Internal.Throwable): Internal.ChannelInboundInvoker;
        fireChannelActive(): Internal.ChannelInboundInvoker;
        fireUserEventTriggered(arg0: any): Internal.ChannelInboundInvoker;
        fireChannelUnregistered(): Internal.ChannelInboundInvoker;
        fireChannelRegistered(): Internal.ChannelInboundInvoker;
    }
    type ChannelInboundInvoker_ = ChannelInboundInvoker;
    interface ByteProcessor {
        process(arg0: number): boolean;
    }
    type ByteProcessor_ = ByteProcessor;
    class VariantBlockStateGenerator extends Document.Object {
        toJson(): Internal.JsonObject;
        variant(key: string, consumer: ((arg0: Internal.VariantBlockStateGenerator$Variant) => void)): void;
        variant(key: string, model: string): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VariantBlockStateGenerator_ = VariantBlockStateGenerator;
    class DrownedEntity extends Internal.ZombieEntity implements Internal.IRangedAttackMob {
        func_204714_e(arg0: Internal.LivingEntity): boolean;
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        func_205019_a(arg0: Internal.IWorldReader): boolean;
        func_204713_s(arg0: boolean): void;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_96092_aw(): boolean;
        func_205343_av(): void;
        static func_223332_b(arg0: Internal.EntityType<Internal.DrownedEntity>, arg1: Internal.IServerWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_213352_e(arg0: Vec3): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DrownedEntity_ = DrownedEntity;
    interface NonNullFunction <T, R> {
        apply(arg0: T): R;
    }
    type NonNullFunction_<T, R> = ((arg0: T) => R) | NonNullFunction<T, R>;
    class InetAddress extends Document.Object implements Internal.Serializable {
        isReachable(arg0: Internal.NetworkInterface, arg1: number, arg2: number): boolean;
        isReachable(arg0: number): boolean;
        isMCSiteLocal(): boolean;
        static getAllByName(arg0: string): Internal.InetAddress[];
        isMCGlobal(): boolean;
        getHostName(): string;
        isMCOrgLocal(): boolean;
        getCanonicalHostName(): string;
        isAnyLocalAddress(): boolean;
        isLinkLocalAddress(): boolean;
        static getLocalHost(): Internal.InetAddress;
        isMCLinkLocal(): boolean;
        isLoopbackAddress(): boolean;
        isSiteLocalAddress(): boolean;
        isMulticastAddress(): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        static getByName(arg0: string): Internal.InetAddress;
        static getLoopbackAddress(): Internal.InetAddress;
        static getByAddress(arg0: number[]): Internal.InetAddress;
        static getByAddress(arg0: string, arg1: number[]): Internal.InetAddress;
        getAddress(): number[];
        toString(): string;
        getHostAddress(): string;
        isMCNodeLocal(): boolean;
        get linkLocalAddress(): boolean;
        get hostName(): string;
        get loopbackAddress(): Internal.InetAddress;
        get address(): number[];
        get canonicalHostName(): string;
        get mCOrgLocal(): boolean;
        get siteLocalAddress(): boolean;
        get mCNodeLocal(): boolean;
        get mCGlobal(): boolean;
        get localHost(): Internal.InetAddress;
        get mCLinkLocal(): boolean;
        get multicastAddress(): boolean;
        get hostAddress(): string;
        get mCSiteLocal(): boolean;
        get anyLocalAddress(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InetAddress_ = InetAddress;
    interface DSL$TypeReference {
        in(arg0: Internal.Schema): Internal.TypeTemplate;
        typeName(): string;
    }
    type DSL$TypeReference_ = DSL$TypeReference;
    abstract class Triple <L, M, R> extends Document.Object implements Internal.Comparable<Internal.Triple<L, M, R>>, Internal.Serializable {
        getRight(): R;
        hashCode(): number;
        getMiddle(): M;
        static of<L_, M_, R_>(arg0: L_, arg1: M_, arg2: R_): Internal.Triple<L_, M_, R_>;
        equals(arg0: any): boolean;
        toString(arg0: string): string;
        toString(): string;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.Triple<L, M, R>): number;
        getLeft(): L;
        get middle(): M;
        get left(): L;
        get right(): R;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Triple_<L, M, R> = Triple<L, M, R>;
    interface IForgeTagCollectionSupplier {
        getCustomTypeCollection(arg0: ResourceLocation_): Internal.ITagCollection<any>;
        getCustomTypeCollection<T>(arg0: Internal.IForgeRegistry<T>): Internal.ITagCollection<T>;
        getCustomTagTypes(): Internal.Map<ResourceLocation, Internal.ITagCollection<any>>;
    }
    type IForgeTagCollectionSupplier_ = IForgeTagCollectionSupplier;
    class ItemRegistryEventJS extends Internal.StartupEventJS {
        create(name: string): Internal.ItemBuilder;
        create(name: string, callback: ((arg0: Internal.ItemBuilder) => void)): void;
        createFood(builder: (() => Internal.FoodBuilder)): Internal.Supplier<Internal.FoodBuilder>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemRegistryEventJS_ = ItemRegistryEventJS;
    class ToolType extends Document.Object {
        getName(): string;
        static get(arg0: string): Internal.ToolType;
        static readonly PICKAXE : Internal.ToolType;
        static readonly SHOVEL : Internal.ToolType;
        static readonly AXE : Internal.ToolType;
        static readonly HOE : Internal.ToolType;
        get name(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ToolType_ = ToolType;
    interface ChunkHolder$IChunkLoadingError {
    }
    type ChunkHolder$IChunkLoadingError_ = ChunkHolder$IChunkLoadingError;
    class Tessellator extends Document.Object {
        func_78381_a(): void;
        func_178180_c(): Internal.BufferBuilder;
        static func_178181_a(): Internal.Tessellator;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Tessellator_ = Tessellator;
    class StriderEntity extends Internal.AnimalEntity implements Internal.IRideable, Internal.IEquipable {
        func_230265_N__(): number;
        func_234316_eJ_(): number;
        func_82171_bF(): boolean;
        func_70071_h_(): void;
        func_230264_L__(): boolean;
        func_230268_c_(arg0: Internal.LivingEntity): Vec3;
        func_184179_bs(): Internal.Entity;
        func_230267_a__(arg0: Vec3): void;
        func_213352_e(arg0: Vec3): void;
        func_230266_a_(arg0: Internal.SoundCategory_): void;
        static func_234317_eK_(): Internal.AttributeModifierMap$MutableAttribute;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.StriderEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        func_70027_ad(): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_184762_da(): boolean;
        static func_234314_c_(arg0: Internal.EntityType<Internal.StriderEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_234315_eI_(): boolean;
        func_230270_dK_(): boolean;
        func_70042_X(): number;
        func_230285_a_(arg0: Internal.Fluid): boolean;
        func_110257_ck(): boolean;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_241205_ce_(): Vec3;
        func_205019_a(arg0: Internal.IWorldReader): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_234319_t_(arg0: boolean): void;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StriderEntity_ = StriderEntity;
    class TNTMinecartEntity extends Internal.AbstractMinecartEntity {
        func_174816_a(arg0: Internal.Explosion, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: number): boolean;
        func_180457_u(): Internal.BlockState;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_184264_v(): Internal.AbstractMinecartEntity$Type;
        func_180428_a(arg0: Internal.Explosion, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.FluidState, arg5: number): number;
        func_70071_h_(): void;
        func_94095_a(arg0: Internal.DamageSource): void;
        func_70103_a(arg0: number): void;
        func_96095_a(arg0: number, arg1: number, arg2: number, arg3: boolean): void;
        func_96096_ay(): boolean;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_94105_c(): void;
        func_94104_d(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TNTMinecartEntity_ = TNTMinecartEntity;
    interface ReadableByteChannel extends Internal.Channel {
        read(arg0: Internal.ByteBuffer): number;
    }
    type ReadableByteChannel_ = ReadableByteChannel;
    class AffineTransform extends Document.Object implements Internal.Cloneable, Internal.Serializable {
        setToIdentity(): void;
        rotate(arg0: number): void;
        rotate(arg0: number, arg1: number, arg2: number): void;
        rotate(arg0: number, arg1: number): void;
        rotate(arg0: number, arg1: number, arg2: number, arg3: number): void;
        concatenate(arg0: Internal.AffineTransform): void;
        preConcatenate(arg0: Internal.AffineTransform): void;
        scale(arg0: number, arg1: number): void;
        static getScaleInstance(arg0: number, arg1: number): Internal.AffineTransform;
        static getRotateInstance(arg0: number, arg1: number, arg2: number, arg3: number): Internal.AffineTransform;
        static getRotateInstance(arg0: number): Internal.AffineTransform;
        static getRotateInstance(arg0: number, arg1: number): Internal.AffineTransform;
        static getRotateInstance(arg0: number, arg1: number, arg2: number): Internal.AffineTransform;
        translate(arg0: number, arg1: number): void;
        setToQuadrantRotation(arg0: number, arg1: number, arg2: number): void;
        setToQuadrantRotation(arg0: number): void;
        setToRotation(arg0: number): void;
        setToRotation(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setToRotation(arg0: number, arg1: number): void;
        setToRotation(arg0: number, arg1: number, arg2: number): void;
        transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        transform(arg0: Internal.Point2D, arg1: Internal.Point2D): Internal.Point2D;
        transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        transform(arg0: Internal.Point2D[], arg1: number, arg2: Internal.Point2D[], arg3: number, arg4: number): void;
        getMatrix(arg0: number[]): void;
        quadrantRotate(arg0: number): void;
        quadrantRotate(arg0: number, arg1: number, arg2: number): void;
        setTransform(arg0: Internal.AffineTransform): void;
        setTransform(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        hashCode(): number;
        inverseTransform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        inverseTransform(arg0: Internal.Point2D, arg1: Internal.Point2D): Internal.Point2D;
        setToShear(arg0: number, arg1: number): void;
        getTranslateY(): number;
        getTranslateX(): number;
        getDeterminant(): number;
        shear(arg0: number, arg1: number): void;
        invert(): void;
        static getQuadrantRotateInstance(arg0: number, arg1: number, arg2: number): Internal.AffineTransform;
        static getQuadrantRotateInstance(arg0: number): Internal.AffineTransform;
        isIdentity(): boolean;
        createTransformedShape(arg0: Internal.Shape): Internal.Shape;
        createInverse(): Internal.AffineTransform;
        getShearX(): number;
        getScaleY(): number;
        getScaleX(): number;
        static getTranslateInstance(arg0: number, arg1: number): Internal.AffineTransform;
        getShearY(): number;
        getType(): number;
        setToScale(arg0: number, arg1: number): void;
        equals(arg0: any): boolean;
        clone(): any;
        toString(): string;
        setToTranslation(arg0: number, arg1: number): void;
        deltaTransform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        deltaTransform(arg0: Internal.Point2D, arg1: Internal.Point2D): Internal.Point2D;
        static getShearInstance(arg0: number, arg1: number): Internal.AffineTransform;
        static readonly TYPE_QUADRANT_ROTATION : 8;
        static readonly TYPE_TRANSLATION : 1;
        static readonly TYPE_IDENTITY : 0;
        static readonly TYPE_UNIFORM_SCALE : 2;
        static readonly TYPE_MASK_SCALE : 6;
        static readonly TYPE_MASK_ROTATION : 24;
        static readonly TYPE_GENERAL_SCALE : 4;
        static readonly TYPE_FLIP : 64;
        static readonly TYPE_GENERAL_ROTATION : 16;
        static readonly TYPE_GENERAL_TRANSFORM : 32;
        get scaleX(): number;
        get shearX(): number;
        get scaleY(): number;
        get translateY(): number;
        get identity(): boolean;
        get translateX(): number;
        get type(): number;
        get shearY(): number;
        get determinant(): number;
        set toQuadrantRotation(arg0: number);
        set toRotation(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AffineTransform_ = AffineTransform;
    interface Optic <Proof, S, T, A, B> {
        eval<P>(arg0: Internal.App<Proof, P>): Internal.Function<Internal.App2<P, A, B>, Internal.App2<P, S, T>>;
        compose<Proof2, A1, B1>(arg0: Internal.Optic<Proof2, A, B, A1, B1>): Internal.Optic<Proof2, S, T, A1, B1>;
        upCast<Proof2>(arg0: Internal.Set<Internal.TypeToken<Internal.K1>>, arg1: Internal.TypeToken<Proof2>): Internal.Optional<Internal.Optic<Proof2, S, T, A, B>>;
        composeUnchecked<Proof2, A1, B1>(arg0: Internal.Optic<any, A, B, A1, B1>): Internal.Optic<any, S, T, A1, B1>;
    }
    type Optic_<Proof, S, T, A, B> = Optic<Proof, S, T, A, B>;
    class VanillaPack extends Document.Object implements Internal.IResourcePack, Internal.IPackResources {
        func_195762_a(): string;
        handler$zzl000$initHeadInjected(arg0: string[], arg1: Internal.CallbackInfo): void;
        func_195761_a(arg0: Internal.ResourcePackType_, arg1: ResourceLocation_): Internal.InputStream;
        func_195760_a<T_>(arg0: Internal.IMetadataSectionSerializer<T_>): T_;
        handler$zzl000$hasResourceReturnInjected(arg0: Internal.ResourcePackType_, arg1: ResourceLocation_, arg2: Internal.CallbackInfoReturnable<any>): void;
        func_225637_a_(arg0: Internal.ResourcePackType_, arg1: string, arg2: string, arg3: number, arg4: ((arg0: string) => boolean)): Internal.Collection<ResourceLocation>;
        func_195764_b(arg0: Internal.ResourcePackType_, arg1: ResourceLocation_): boolean;
        func_195763_b(arg0: string): Internal.InputStream;
        cacheExists(arg0: Internal.ResourcePackType_, arg1: string, arg2: boolean): void;
        func_195759_a(arg0: Internal.ResourcePackType_): Internal.Set<string>;
        persistAndClearCache(): void;
        exists(arg0: Internal.ResourcePackType_, arg1: string): boolean;
        close(): void;
        handler$zzl001$hasResourceHeadInjected(arg0: Internal.ResourcePackType_, arg1: ResourceLocation_, arg2: Internal.CallbackInfoReturnable<any>): void;
        static field_211688_b : Internal.Class<any>;
        static field_199754_a : java_.nio.file.Path;
        readonly field_195783_a : Internal.Set<string>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VanillaPack_ = VanillaPack;
    interface Commands$IParser {
        parse(arg0: Internal.StringReader): void;
    }
    type Commands$IParser_ = ((arg0: Internal.StringReader) => void) | Commands$IParser;
    class Shader extends Document.Object implements Internal.AutoCloseable {
        func_195654_a(arg0: Internal.Matrix4f): void;
        func_217624_b(): Internal.ShaderInstance;
        func_148042_a(arg0: number): void;
        func_148041_a(arg0: string, arg1: (() => number), arg2: number, arg3: number): void;
        close(): void;
        readonly field_148052_a : Internal.Framebuffer;
        readonly field_148050_b : Internal.Framebuffer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Shader_ = Shader;
    interface SortedMap <K, V> extends Internal.SequencedMap<K, V> {
        comparator(): Internal.Comparator<K>;
        putLast(arg0: K, arg1: V): V;
        entrySet(): Internal.Set<Internal.Map$Entry<K, V>>;
        firstKey(): K;
        subMap(arg0: K, arg1: K): Internal.SortedMap<K, V>;
        values(): Internal.Collection<V>;
        lastKey(): K;
        headMap(arg0: K): Internal.SortedMap<K, V>;
        putFirst(arg0: K, arg1: V): V;
        keySet(): Internal.Set<K>;
        tailMap(arg0: K): Internal.SortedMap<K, V>;
        reversed(): Internal.SortedMap<K, V>;
        reversed(): Internal.SequencedMap<any, any>;
    }
    type SortedMap_<K, V> = SortedMap<K, V>;
    abstract class Widget extends Internal.AbstractGui implements Internal.IRenderable, Internal.IGuiEventListener {
        func_230999_j_(): boolean;
        func_238483_d_(): number;
        func_230443_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        func_230982_a_(arg0: number, arg1: number): void;
        func_230986_a_(arg0: number): void;
        setFGColor(arg0: number): void;
        clearFGColor(): void;
        func_238482_a_(arg0: Internal.ITextComponent_): void;
        func_231047_b_(arg0: number, arg1: number): boolean;
        setHeight(arg0: number): void;
        func_231048_c_(arg0: number, arg1: number, arg2: number): boolean;
        func_230430_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_230431_b_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
        func_231044_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_230449_g_(): boolean;
        func_230991_b_(arg0: number): void;
        func_231049_c__(arg0: boolean): boolean;
        func_230994_c_(arg0: number): void;
        func_230988_a_(arg0: Internal.SoundHandler): void;
        getFGColor(): number;
        func_230998_h_(): number;
        func_231000_a__(arg0: number, arg1: number): void;
        func_230458_i_(): Internal.ITextComponent;
        static readonly field_230687_i_ : ResourceLocation;
        static readonly UNSET_FG_COLOR : -1;
        field_230694_p_ : boolean;
        field_230690_l_ : number;
        field_230693_o_ : boolean;
        field_230691_m_ : number;
        get fGColor(): number;
        set fGColor(arg0: number);
        set height(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Widget_ = Widget;
    class WorldEvent$PotentialSpawns extends Internal.WorldEvent {
        getListenerList(): Internal.ListenerList;
        getType(): Internal.EntityClassification;
        getPos(): BlockPos;
        getList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get pos(): BlockPos;
        get type(): Internal.EntityClassification;
        get list(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldEvent$PotentialSpawns_ = WorldEvent$PotentialSpawns;
    class Orientation extends Internal.Enum<Internal.Orientation> implements Internal.IStringSerializable {
        func_235531_a_(arg0: Internal.JigsawOrientation_): Internal.JigsawOrientation;
        func_235529_a_(arg0: Internal.Direction$Axis_): boolean;
        static valueOf(arg0: string): Internal.Orientation;
        func_235530_a_(arg0: Internal.Direction_): Internal.Direction;
        func_176610_l(): string;
        static values(): Internal.Orientation[];
        toString(): string;
        func_235527_a_(arg0: Internal.Orientation_): Internal.Orientation;
        static readonly ROT_60_REF_PNP : Internal.Orientation;
        static readonly ROT_180_EDGE_YZ_POS : Internal.Orientation;
        static readonly ROT_180_FACE_XZ : Internal.Orientation;
        static readonly ROT_180_FACE_XY : Internal.Orientation;
        static readonly ROT_90_X_POS : Internal.Orientation;
        static readonly ROT_60_REF_NPN : Internal.Orientation;
        static readonly SWAP_NEG_XZ : Internal.Orientation;
        static readonly ROT_60_REF_NNN : Internal.Orientation;
        static readonly ROT_60_REF_NPP : Internal.Orientation;
        static readonly ROT_60_REF_PPN : Internal.Orientation;
        static readonly SWAP_NEG_XY : Internal.Orientation;
        static readonly ROT_90_REF_Z_NEG : Internal.Orientation;
        static readonly ROT_90_X_NEG : Internal.Orientation;
        static readonly ROT_180_EDGE_YZ_NEG : Internal.Orientation;
        static readonly ROT_60_REF_NNP : Internal.Orientation;
        static readonly ROT_60_REF_PNN : Internal.Orientation;
        static readonly ROT_60_REF_PPP : Internal.Orientation;
        static readonly ROT_180_EDGE_XZ_NEG : Internal.Orientation;
        static readonly ROT_120_NNN : Internal.Orientation;
        static readonly ROT_120_NPP : Internal.Orientation;
        static readonly ROT_120_PPN : Internal.Orientation;
        static readonly ROT_120_NPN : Internal.Orientation;
        static readonly ROT_90_REF_X_POS : Internal.Orientation;
        static readonly ROT_120_PNP : Internal.Orientation;
        static readonly SWAP_YZ : Internal.Orientation;
        static readonly ROT_90_REF_Y_NEG : Internal.Orientation;
        static readonly ROT_120_NNP : Internal.Orientation;
        static readonly ROT_120_PNN : Internal.Orientation;
        static readonly ROT_120_PPP : Internal.Orientation;
        static readonly ROT_90_Y_POS : Internal.Orientation;
        static readonly ROT_180_EDGE_XZ_POS : Internal.Orientation;
        static readonly ROT_90_Y_NEG : Internal.Orientation;
        static readonly ROT_180_EDGE_XY_NEG : Internal.Orientation;
        static readonly INVERT_X : Internal.Orientation;
        static readonly ROT_90_REF_Y_POS : Internal.Orientation;
        static readonly ROT_90_Z_NEG : Internal.Orientation;
        static readonly ROT_180_FACE_YZ : Internal.Orientation;
        static readonly ROT_90_REF_X_NEG : Internal.Orientation;
        static readonly ROT_180_EDGE_XY_POS : Internal.Orientation;
        static readonly ROT_90_Z_POS : Internal.Orientation;
        static readonly INVERSION : Internal.Orientation;
        static readonly SWAP_NEG_YZ : Internal.Orientation;
        static readonly IDENTITY : Internal.Orientation;
        static readonly ROT_90_REF_Z_POS : Internal.Orientation;
        static readonly SWAP_XY : Internal.Orientation;
        static readonly SWAP_XZ : Internal.Orientation;
        static readonly INVERT_Z : Internal.Orientation;
        static readonly INVERT_Y : Internal.Orientation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Orientation_ = "identity" | "rot_180_face_xy" | "rot_180_face_xz" | "rot_180_face_yz" | "rot_120_nnn" | "rot_120_nnp" | "rot_120_npn" | "rot_120_npp" | "rot_120_pnn" | "rot_120_pnp" | "rot_120_ppn" | "rot_120_ppp" | "rot_180_edge_xy_neg" | "rot_180_edge_xy_pos" | "rot_180_edge_xz_neg" | "rot_180_edge_xz_pos" | "rot_180_edge_yz_neg" | "rot_180_edge_yz_pos" | "rot_90_x_neg" | "rot_90_x_pos" | "rot_90_y_neg" | "rot_90_y_pos" | "rot_90_z_neg" | "rot_90_z_pos" | "inversion" | "invert_x" | "invert_y" | "invert_z" | "rot_60_ref_nnn" | "rot_60_ref_nnp" | "rot_60_ref_npn" | "rot_60_ref_npp" | "rot_60_ref_pnn" | "rot_60_ref_pnp" | "rot_60_ref_ppn" | "rot_60_ref_ppp" | "swap_xy" | "swap_yz" | "swap_xz" | "swap_neg_xy" | "swap_neg_yz" | "swap_neg_xz" | "rot_90_ref_x_neg" | "rot_90_ref_x_pos" | "rot_90_ref_y_neg" | "rot_90_ref_y_pos" | "rot_90_ref_z_neg" | "rot_90_ref_z_pos" | Orientation;
    interface TypeDescriptor$OfField <F> extends Internal.TypeDescriptor {
        componentType(): F;
        arrayType(): F;
        isArray(): boolean;
        isPrimitive(): boolean;
    }
    type TypeDescriptor$OfField_<F> = TypeDescriptor$OfField<F>;
    class ByteOrder extends Document.Object {
        static nativeOrder(): Internal.ByteOrder;
        toString(): string;
        static readonly BIG_ENDIAN : Internal.ByteOrder;
        static readonly LITTLE_ENDIAN : Internal.ByteOrder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ByteOrder_ = ByteOrder;
    class RayTraceContext extends Document.Object {
        func_222253_b(): Vec3;
        func_222250_a(): Vec3;
        func_222251_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        func_222252_a(arg0: Internal.FluidState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RayTraceContext_ = RayTraceContext;
    interface PathIterator {
        next(): void;
        getWindingRule(): number;
        currentSegment(arg0: number[]): number;
        currentSegment(arg0: number[]): number;
        isDone(): boolean;
    }
    type PathIterator_ = PathIterator;
    class BlockEvent$NeighborNotifyEvent extends Internal.BlockEvent {
        getListenerList(): Internal.ListenerList;
        getForceRedstoneUpdate(): boolean;
        isCancelable(): boolean;
        getNotifiedSides(): Internal.EnumSet<Internal.Direction>;
        get cancelable(): boolean;
        get notifiedSides(): Internal.EnumSet<Internal.Direction>;
        get listenerList(): Internal.ListenerList;
        get forceRedstoneUpdate(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockEvent$NeighborNotifyEvent_ = BlockEvent$NeighborNotifyEvent;
    class ModuleDescriptor$Exports extends Document.Object implements Internal.Comparable<Internal.ModuleDescriptor$Exports> {
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        hashCode(): number;
        equals(arg0: any): boolean;
        isQualified(): boolean;
        toString(): string;
        source(): string;
        compareTo(arg0: Internal.ModuleDescriptor$Exports): number;
        compareTo(arg0: any): number;
        modifiers(): Internal.Set<Internal.ModuleDescriptor$Exports$Modifier>;
        targets(): Internal.Set<string>;
        get qualified(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleDescriptor$Exports_ = ModuleDescriptor$Exports;
    class SCloseWindowPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SCloseWindowPacket_ = SCloseWindowPacket;
    class RegisterCommandsEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        getDispatcher(): Internal.CommandDispatcher<Internal.CommandSource>;
        getEnvironment(): Internal.Commands$EnvironmentType;
        get environment(): Internal.Commands$EnvironmentType;
        get listenerList(): Internal.ListenerList;
        get dispatcher(): Internal.CommandDispatcher<Internal.CommandSource>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegisterCommandsEvent_ = RegisterCommandsEvent;
    class EntityType <T> extends Internal.ForgeRegistryEntry<Internal.EntityType<any>> {
        func_200715_a(): boolean;
        func_220342_a(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT, arg2: Internal.ITextComponent_, arg3: Internal.PlayerEntity, arg4: BlockPos, arg5: Internal.SpawnReason_, arg6: boolean, arg7: boolean): T;
        static func_200717_a(arg0: number, arg1: Internal.World): Internal.Entity;
        func_220341_a(arg0: Internal.ITag<Internal.EntityType<any>>): boolean;
        getTags(): Internal.Set<ResourceLocation>;
        func_210760_d(): string;
        static func_200718_a(arg0: Internal.EntityType<any>): ResourceLocation;
        func_225437_d(): boolean;
        func_220338_c(): boolean;
        func_220333_h(): number;
        func_233602_m_(): number;
        func_212546_e(): Internal.ITextComponent;
        static func_220335_a(arg0: Internal.CompoundNBT, arg1: Internal.World, arg2: ((arg0: Internal.Entity) => Internal.Entity)): Internal.Entity;
        func_220332_l(): number;
        func_220334_j(): Internal.EntitySize;
        func_220339_d(): Internal.EntityClassification;
        static func_208048_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: Internal.Entity, arg3: Internal.CompoundNBT): void;
        func_200720_b(): boolean;
        func_200721_a(arg0: Internal.World): T;
        func_220331_a(arg0: Internal.ServerWorld, arg1: Internal.ItemStack, arg2: Internal.PlayerEntity, arg3: BlockPos, arg4: Internal.SpawnReason_, arg5: boolean, arg6: boolean): Internal.Entity;
        static func_220330_a(arg0: Internal.CompoundNBT, arg1: Internal.World): Internal.Optional<Internal.Entity>;
        func_233597_a_(arg0: Internal.BlockState): boolean;
        func_220344_i(): number;
        func_220328_a(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        func_220348_g(): ResourceLocation;
        static func_220327_a(arg0: string): Internal.Optional<Internal.EntityType<any>>;
        toString(): string;
        static func_220347_a(arg0: Internal.CompoundNBT): Internal.Optional<Internal.EntityType<any>>;
        customClientSpawn(arg0: Internal.FMLPlayMessages$SpawnEntity, arg1: Internal.World): T;
        func_220349_b(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT, arg2: Internal.ITextComponent_, arg3: Internal.PlayerEntity, arg4: BlockPos, arg5: Internal.SpawnReason_, arg6: boolean, arg7: boolean): T;
        func_220340_m(): boolean;
        static readonly field_200795_i : Internal.EntityType<Internal.ChickenEntity>;
        static readonly field_200768_H : Internal.EntityType<Internal.LeashKnotEntity>;
        static readonly field_200723_aB : Internal.EntityType<Internal.WitherSkullEntity>;
        static readonly field_220356_B : Internal.EntityType<Internal.FoxEntity>;
        static readonly field_200799_m : Internal.EntityType<Internal.DragonFireballEntity>;
        static readonly field_220351_aK : Internal.EntityType<Internal.WanderingTraderEntity>;
        static readonly field_220360_g : Internal.EntityType<Internal.CatEntity>;
        static readonly field_200783_W : Internal.EntityType<Internal.ParrotEntity>;
        static readonly field_200737_ac : Internal.EntityType<Internal.SheepEntity>;
        static readonly field_200743_ai : Internal.EntityType<Internal.SlimeEntity>;
        static readonly field_200754_at : Internal.EntityType<Internal.PotionEntity>;
        static readonly field_203779_Z : Internal.EntityType<Internal.PufferfishEntity>;
        static readonly field_200791_e : Internal.EntityType<Internal.BatEntity>;
        static readonly field_200806_t : Internal.EntityType<Internal.EvokerEntity>;
        static readonly field_200764_D : Internal.EntityType<Internal.IllusionerEntity>;
        static readonly field_226289_e_ : Internal.EntityType<Internal.BeeEntity>;
        static readonly field_200772_L : Internal.EntityType<Internal.MinecartEntity>;
        static readonly field_200726_aE : Internal.EntityType<Internal.ZombieHorseEntity>;
        static readonly field_200802_p : Internal.EntityType<Internal.EnderDragonEntity>;
        static readonly field_200776_P : Internal.EntityType<Internal.HopperMinecartEntity>;
        static readonly field_200748_an : Internal.EntityType<Internal.SpiderEntity>;
        static readonly field_200740_af : Internal.EntityType<Internal.SilverfishEntity>;
        static readonly field_200751_aq : Internal.EntityType<Internal.EggEntity>;
        static readonly field_200810_x : Internal.EntityType<Internal.FireworkRocketEntity>;
        static readonly field_200788_b : Internal.EntityType<Internal.AreaEffectCloudEntity>;
        static readonly field_200729_aH : Internal.EntityType<Internal.PlayerEntity>;
        static readonly field_200796_j : Internal.EntityType<Internal.CowEntity>;
        static readonly field_220354_ax : Internal.EntityType<Internal.TraderLlamaEntity>;
        static readonly field_200769_I : Internal.EntityType<Internal.LlamaEntity>;
        static readonly field_200780_T : Internal.EntityType<Internal.MooshroomEntity>;
        static readonly field_200759_ay : Internal.EntityType<Internal.WitchEntity>;
        static readonly field_200749_ao : Internal.EntityType<Internal.SquidEntity>;
        static readonly field_200784_X : Internal.EntityType<Internal.PigEntity>;
        static readonly field_200741_ag : Internal.EntityType<Internal.SkeletonEntity>;
        static readonly field_200735_aa : Internal.EntityType<Internal.TNTEntity>;
        static readonly field_200807_u : Internal.EntityType<Internal.ExperienceOrbEntity>;
        static readonly field_203778_ae : Internal.EntityType<Internal.SalmonEntity>;
        static readonly field_200752_ar : Internal.EntityType<Internal.EnderPearlEntity>;
        static readonly field_200761_A : Internal.EntityType<Internal.GuardianEntity>;
        static readonly field_203099_aq : Internal.EntityType<Internal.TurtleEntity>;
        static readonly field_200792_f : Internal.EntityType<Internal.BlazeEntity>;
        static readonly field_233588_G_ : Internal.EntityType<Internal.HoglinEntity>;
        static readonly field_200803_q : Internal.EntityType<Internal.EndermanEntity>;
        static readonly field_200765_E : Internal.EntityType<Internal.ItemEntity>;
        static readonly field_200773_M : Internal.EntityType<Internal.ChestMinecartEntity>;
        static readonly field_200724_aC : Internal.EntityType<Internal.WolfEntity>;
        static readonly field_200777_Q : Internal.EntityType<Internal.SpawnerMinecartEntity>;
        static readonly field_200746_al : Internal.EntityType<Internal.SnowballEntity>;
        static readonly field_205137_n : Internal.EntityType<Internal.DolphinEntity>;
        static readonly field_200757_aw : Internal.EntityType<Internal.IronGolemEntity>;
        static readonly field_200811_y : Internal.EntityType<Internal.GhastEntity>;
        static readonly field_200789_c : Internal.EntityType<Internal.ArmorStandEntity>;
        static readonly field_200760_az : Internal.EntityType<Internal.WitherEntity>;
        static readonly field_200766_F : Internal.EntityType<Internal.ItemFrameEntity>;
        static readonly field_200727_aF : Internal.EntityType<Internal.ZombieVillagerEntity>;
        static readonly field_200797_k : Internal.EntityType<Internal.CreeperEntity>;
        static readonly field_200781_U : Internal.EntityType<Internal.OcelotEntity>;
        static readonly field_204262_at : Internal.EntityType<Internal.TropicalFishEntity>;
        static readonly field_200747_am : Internal.EntityType<Internal.SpectralArrowEntity>;
        static readonly field_242287_aj : Internal.EntityType<Internal.PiglinBruteEntity>;
        static readonly field_200750_ap : Internal.EntityType<Internal.StrayEntity>;
        static readonly field_200758_ax : Internal.EntityType<Internal.VindicatorEntity>;
        static readonly field_200808_v : Internal.EntityType<Internal.EyeOfEnderEntity>;
        static readonly field_200762_B : Internal.EntityType<Internal.HorseEntity>;
        static readonly field_200793_g : Internal.EntityType<Internal.BoatEntity>;
        static readonly field_200804_r : Internal.EntityType<Internal.EndermiteEntity>;
        static readonly field_200730_aI : Internal.EntityType<Internal.FishingBobberEntity>;
        static readonly field_233589_aE_ : Internal.EntityType<Internal.StriderEntity>;
        static readonly field_200774_N : Internal.EntityType<Internal.CommandBlockMinecartEntity>;
        static readonly field_220352_aU : Internal.EntityType<Internal.RavagerEntity>;
        static readonly field_200800_n : Internal.EntityType<Internal.ElderGuardianEntity>;
        static readonly field_200722_aA : Internal.EntityType<Internal.WitherSkeletonEntity>;
        static readonly field_200778_R : Internal.EntityType<Internal.TNTMinecartEntity>;
        static readonly field_203097_aH : Internal.EntityType<Internal.PhantomEntity>;
        static readonly field_200738_ad : Internal.EntityType<Internal.ShulkerEntity>;
        static readonly field_200786_Z : Internal.EntityType<Internal.PolarBearEntity>;
        static readonly field_200744_aj : Internal.EntityType<Internal.SmallFireballEntity>;
        static readonly field_200755_au : Internal.EntityType<Internal.VexEntity>;
        static readonly field_200812_z : Internal.EntityType<Internal.GiantEntity>;
        static readonly field_203780_j : Internal.EntityType<Internal.CodEntity>;
        static readonly field_233592_ba_ : Internal.EntityType<Internal.ZombifiedPiglinEntity>;
        static readonly field_200770_J : Internal.EntityType<Internal.LlamaSpitEntity>;
        static readonly field_200725_aD : Internal.EntityType<Internal.ZombieEntity>;
        static readonly field_200767_G : Internal.EntityType<Internal.FireballEntity>;
        static readonly field_200798_l : Internal.EntityType<Internal.DonkeyEntity>;
        static readonly field_200782_V : Internal.EntityType<Internal.PaintingEntity>;
        static readonly field_200745_ak : Internal.EntityType<Internal.SnowGolemEntity>;
        static readonly field_200739_ae : Internal.EntityType<Internal.ShulkerBulletEntity>;
        static readonly field_200809_w : Internal.EntityType<Internal.FallingBlockEntity>;
        static readonly field_200779_S : Internal.EntityType<Internal.MuleEntity>;
        static readonly field_233591_ai_ : Internal.EntityType<Internal.PiglinEntity>;
        static readonly field_203098_aL : Internal.EntityType<Internal.TridentEntity>;
        static readonly field_200790_d : Internal.EntityType<Internal.ArrowEntity>;
        static readonly field_220353_aa : Internal.EntityType<Internal.PandaEntity>;
        static readonly field_233590_aW_ : Internal.EntityType<Internal.ZoglinEntity>;
        static readonly field_200756_av : Internal.EntityType<Internal.VillagerEntity>;
        static readonly field_200805_s : Internal.EntityType<Internal.EvokerFangsEntity>;
        static readonly field_200763_C : Internal.EntityType<Internal.HuskEntity>;
        static readonly field_204724_o : Internal.EntityType<Internal.DrownedEntity>;
        static readonly field_200794_h : Internal.EntityType<Internal.CaveSpiderEntity>;
        static readonly field_200728_aG : Internal.EntityType<Internal.LightningBoltEntity>;
        static readonly field_200801_o : Internal.EntityType<Internal.EnderCrystalEntity>;
        static readonly field_200771_K : Internal.EntityType<Internal.MagmaCubeEntity>;
        static readonly field_200775_O : Internal.EntityType<Internal.FurnaceMinecartEntity>;
        static readonly field_220350_aJ : Internal.EntityType<Internal.PillagerEntity>;
        static readonly field_200742_ah : Internal.EntityType<Internal.SkeletonHorseEntity>;
        static readonly field_200736_ab : Internal.EntityType<Internal.RabbitEntity>;
        static readonly field_200753_as : Internal.EntityType<Internal.ExperienceBottleEntity>;
        get tags(): Internal.Set<ResourceLocation>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityType_<T> = EntityType<T>;
    interface WithAttachedData {
        getData(): Internal.AttachedData;
    }
    type WithAttachedData_ = WithAttachedData;
    class AccessFlag extends Internal.Enum<Internal.AccessFlag> {
        static maskToAccessFlags(arg0: number, arg1: Internal.AccessFlag$Location_): Internal.Set<Internal.AccessFlag>;
        static valueOf(arg0: string): Internal.AccessFlag;
        static values(): Internal.AccessFlag[];
        sourceModifier(): boolean;
        locations(): Internal.Set<Internal.AccessFlag$Location>;
        locations(arg0: Internal.ClassFileFormatVersion_): Internal.Set<Internal.AccessFlag$Location>;
        mask(): number;
        static readonly TRANSITIVE : Internal.AccessFlag;
        static readonly SYNCHRONIZED : Internal.AccessFlag;
        static readonly VOLATILE : Internal.AccessFlag;
        static readonly VARARGS : Internal.AccessFlag;
        static readonly STRICT : Internal.AccessFlag;
        static readonly ENUM : Internal.AccessFlag;
        static readonly SUPER : Internal.AccessFlag;
        static readonly NATIVE : Internal.AccessFlag;
        static readonly SYNTHETIC : Internal.AccessFlag;
        static readonly FINAL : Internal.AccessFlag;
        static readonly BRIDGE : Internal.AccessFlag;
        static readonly ABSTRACT : Internal.AccessFlag;
        static readonly STATIC : Internal.AccessFlag;
        static readonly PRIVATE : Internal.AccessFlag;
        static readonly OPEN : Internal.AccessFlag;
        static readonly STATIC_PHASE : Internal.AccessFlag;
        static readonly MODULE : Internal.AccessFlag;
        static readonly INTERFACE : Internal.AccessFlag;
        static readonly ANNOTATION : Internal.AccessFlag;
        static readonly PUBLIC : Internal.AccessFlag;
        static readonly MANDATED : Internal.AccessFlag;
        static readonly PROTECTED : Internal.AccessFlag;
        static readonly TRANSIENT : Internal.AccessFlag;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AccessFlag_ = "public" | "private" | "protected" | "static" | "final" | "super" | "open" | "transitive" | "synchronized" | "static_phase" | "volatile" | "bridge" | "transient" | "varargs" | "native" | "interface" | "abstract" | "strict" | "synthetic" | "annotation" | "enum" | "mandated" | "module" | AccessFlag;
    interface ILootConditionConsumer <T> {
        func_212840_b_(arg0: (() => Internal.ILootCondition)): T;
        func_212862_c_(): T;
    }
    type ILootConditionConsumer_<T> = ILootConditionConsumer<T>;
    abstract class RenderState extends Document.Object {
        hashCode(): number;
        func_228547_a_(): void;
        equals(arg0: any): boolean;
        toString(): string;
        func_228549_b_(): void;
        static readonly field_228530_v_ : Internal.RenderState$OverlayState;
        static readonly field_239235_M_ : Internal.RenderState$LayerState;
        static readonly field_228533_y_ : Internal.RenderState$DiffuseLightingState;
        static readonly field_228531_w_ : Internal.RenderState$OverlayState;
        static readonly field_228534_z_ : Internal.RenderState$CullState;
        static readonly field_228532_x_ : Internal.RenderState$DiffuseLightingState;
        static readonly field_228515_g_ : Internal.RenderState$TransparencyState;
        static readonly field_228514_f_ : Internal.RenderState$TransparencyState;
        static readonly field_228495_E_ : Internal.RenderState$WriteMaskState;
        static readonly field_239237_T_ : Internal.RenderState$TargetState;
        static readonly field_239238_U_ : Internal.RenderState$TargetState;
        static readonly field_239239_V_ : Internal.RenderState$TargetState;
        static readonly field_228510_b_ : Internal.RenderState$TransparencyState;
        static readonly field_228494_D_ : Internal.RenderState$DepthTestState;
        static readonly field_228497_G_ : Internal.RenderState$WriteMaskState;
        static readonly field_228496_F_ : Internal.RenderState$WriteMaskState;
        static readonly field_228511_c_ : Internal.RenderState$TransparencyState;
        static readonly field_228512_d_ : Internal.RenderState$TransparencyState;
        static readonly field_228513_e_ : Internal.RenderState$TransparencyState;
        static readonly field_228518_j_ : Internal.RenderState$AlphaState;
        static readonly field_228499_I_ : Internal.RenderState$LayerState;
        static readonly field_228519_k_ : Internal.RenderState$ShadeModelState;
        static readonly field_228498_H_ : Internal.RenderState$LayerState;
        static readonly field_228517_i_ : Internal.RenderState$AlphaState;
        static readonly field_239236_S_ : Internal.RenderState$TargetState;
        static readonly field_228516_h_ : Internal.RenderState$AlphaState;
        static readonly field_228529_u_ : Internal.RenderState$LightmapState;
        readonly field_228508_R_ : (() => void);
        static readonly field_228506_P_ : Internal.RenderState$LineState;
        field_228507_Q_ : (() => void);
        static readonly field_228492_B_ : Internal.RenderState$DepthTestState;
        static readonly field_228505_O_ : Internal.RenderState$TargetState;
        static readonly field_228493_C_ : Internal.RenderState$DepthTestState;
        static readonly field_228504_N_ : Internal.RenderState$TargetState;
        static readonly field_228503_M_ : Internal.RenderState$FogState;
        static readonly field_228491_A_ : Internal.RenderState$CullState;
        static readonly field_228502_L_ : Internal.RenderState$FogState;
        static readonly field_228501_K_ : Internal.RenderState$FogState;
        static readonly field_228521_m_ : Internal.RenderState$TextureState;
        static readonly field_228520_l_ : Internal.RenderState$ShadeModelState;
        static readonly field_228523_o_ : Internal.RenderState$TextureState;
        static readonly field_228522_n_ : Internal.RenderState$TextureState;
        static readonly field_228524_p_ : Internal.RenderState$TexturingState;
        static readonly field_241712_U_ : Internal.RenderState$TargetState;
        readonly field_228509_a_ : string;
        static readonly field_228525_q_ : Internal.RenderState$TexturingState;
        static readonly field_228526_r_ : Internal.RenderState$TexturingState;
        static readonly field_228527_s_ : Internal.RenderState$TexturingState;
        static readonly field_228528_t_ : Internal.RenderState$LightmapState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState_ = RenderState;
    interface ChannelProgressiveFuture extends Internal.ChannelFuture, Internal.ProgressiveFuture<void> {
        removeListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>[]): Internal.ChannelProgressiveFuture;
        syncUninterruptibly(): Internal.ChannelProgressiveFuture;
        await(): Internal.ChannelProgressiveFuture;
        awaitUninterruptibly(): Internal.ChannelProgressiveFuture;
        removeListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>): Internal.ChannelProgressiveFuture;
        sync(): Internal.ChannelProgressiveFuture;
        addListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>[]): Internal.ChannelProgressiveFuture;
        addListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<void>>): Internal.ChannelProgressiveFuture;
    }
    type ChannelProgressiveFuture_ = ChannelProgressiveFuture;
    interface JsonDeserializationContext {
        deserialize<T>(arg0: Internal.JsonElement, arg1: java_.lang.reflect.Type): T;
    }
    type JsonDeserializationContext_ = JsonDeserializationContext;
    class MegaPineFoliagePlacer extends Internal.FoliagePlacer {
        func_230374_a_(arg0: Internal.Random, arg1: number, arg2: Internal.BaseTreeFeatureConfig): number;
        static readonly field_236778_a_ : Internal.Codec<Internal.MegaPineFoliagePlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MegaPineFoliagePlacer_ = MegaPineFoliagePlacer;
    class EndermiteEntity extends Internal.MonsterEntity {
        static func_234288_m_(): Internal.AttributeModifierMap$MutableAttribute;
        static func_223328_b(arg0: Internal.EntityType<Internal.EndermiteEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_175496_a(arg0: boolean): void;
        func_175495_n(): boolean;
        func_70668_bt(): Internal.CreatureAttribute;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70071_h_(): void;
        func_70636_d(): void;
        func_70033_W(): number;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_181013_g(arg0: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EndermiteEntity_ = EndermiteEntity;
    class SSetSlotPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_149173_d(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149175_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149174_e(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SSetSlotPacket_ = SSetSlotPacket;
    class DispenserTileEntity extends Internal.LockableLootTileEntity {
        func_70302_i_(): number;
        func_146019_a(arg0: Internal.ItemStack): number;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_146017_i(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DispenserTileEntity_ = DispenserTileEntity;
    class DefaultEventLoopGroup extends Internal.MultithreadEventLoopGroup {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DefaultEventLoopGroup_ = DefaultEventLoopGroup;
    interface DebugFrame {
        onEnter(arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Scriptable, arg3: any[]): void;
        onExit(arg0: Internal.Context, arg1: boolean, arg2: any): void;
        onExceptionThrown(arg0: Internal.Context, arg1: Internal.Throwable): void;
        onLineChange(arg0: Internal.Context, arg1: number): void;
        onDebuggerStatement(arg0: Internal.Context): void;
    }
    type DebugFrame_ = DebugFrame;
    interface ISound {
        func_147652_d(): number;
        func_147650_b(): ResourceLocation;
        func_230510_t_(): boolean;
        func_217861_m(): boolean;
        func_211503_n(): boolean;
        func_184364_b(): Internal.Sound;
        func_184366_a(arg0: Internal.SoundHandler): Internal.SoundEventAccessor;
        func_184365_d(): Internal.SoundCategory;
        func_147649_g(): number;
        func_147656_j(): Internal.ISound$AttenuationType;
        getStream(arg0: Internal.AudioStreamManager, arg1: Internal.Sound, arg2: boolean): Internal.CompletableFuture<Internal.IAudioStream>;
        func_147654_h(): number;
        func_147655_f(): number;
        func_147657_c(): boolean;
        func_147651_i(): number;
        func_147653_e(): number;
    }
    type ISound_ = ISound;
    class AirBlock extends Internal.Block {
        func_220053_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.ISelectionContext): Internal.VoxelShape;
        func_149645_b(arg0: Internal.BlockState): Internal.BlockRenderType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AirBlock_ = AirBlock;
    class ItemFoodEatenEventJS extends Internal.PlayerEventJS {
        getItem(): Internal.ItemStackJS;
        getEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get item(): Internal.ItemStackJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemFoodEatenEventJS_ = ItemFoodEatenEventJS;
    /**
    */
    interface ITextComponent extends Internal.Message, Internal.ITextProperties {
        func_230439_a_<T_>(arg0: Internal.ITextProperties$IStyledTextAcceptor<T_>, arg1: Internal.Style): Internal.Optional<T_>;
        func_212636_a(arg0: number): string;
        func_230438_a_<T_>(arg0: Internal.ITextProperties$ITextAcceptor<T_>): Internal.Optional<T_>;
        func_230532_e_(): Internal.IFormattableTextComponent;
        func_150253_a(): Internal.List<Internal.ITextComponent>;
        func_230531_f_(): Internal.IFormattableTextComponent;
        getString(): string;
        func_241878_f(): Internal.IReorderingProcessor;
        func_150256_b(): Internal.Style;
        func_150261_e(): string;
        func_230534_b_<T_>(arg0: Internal.ITextProperties$IStyledTextAcceptor<T_>, arg1: Internal.Style): Internal.Optional<T_>;
        func_230533_b_<T_>(arg0: Internal.ITextProperties$ITextAcceptor<T_>): Internal.Optional<T_>;
    }
    type ITextComponent_ = string | object | Internal.Text_ | ITextComponent;
    class PackCompatibility extends Internal.Enum<Internal.PackCompatibility> {
        static valueOf(arg0: string): Internal.PackCompatibility;
        func_198967_b(): Internal.ITextComponent;
        func_198968_a(): boolean;
        static values(): Internal.PackCompatibility[];
        static func_198969_a(arg0: number): Internal.PackCompatibility;
        func_198971_c(): Internal.ITextComponent;
        static readonly TOO_OLD : Internal.PackCompatibility;
        static readonly COMPATIBLE : Internal.PackCompatibility;
        static readonly TOO_NEW : Internal.PackCompatibility;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PackCompatibility_ = "too_old" | "too_new" | "compatible" | PackCompatibility;
    class BlockItemUseContext extends Internal.ItemUseContext {
        func_196012_c(): boolean;
        func_196010_d(): Internal.Direction;
        func_196011_b(): boolean;
        func_195995_a(): BlockPos;
        static func_221536_a(arg0: Internal.BlockItemUseContext, arg1: BlockPos, arg2: Internal.Direction_): Internal.BlockItemUseContext;
        func_196009_e(): Internal.Direction[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockItemUseContext_ = BlockItemUseContext;
    interface LongPredicate {
        or(arg0: ((arg0: number) => boolean)): Internal.LongPredicate;
        test(arg0: number): boolean;
        and(arg0: ((arg0: number) => boolean)): Internal.LongPredicate;
        negate(): Internal.LongPredicate;
    }
    type LongPredicate_ = ((arg0: number) => boolean) | LongPredicate;
    interface NBTSerializable {
        toNBT(): Internal.INBT;
    }
    type NBTSerializable_ = NBTSerializable;
    class StatisticsManager extends Document.Object {
        func_77444_a(arg0: Internal.Stat<any>): number;
        func_199060_a<T_>(arg0: Internal.StatType<T_>, arg1: T_): number;
        func_150873_a(arg0: Internal.PlayerEntity, arg1: Internal.Stat<any>, arg2: number): void;
        func_150871_b(arg0: Internal.PlayerEntity, arg1: Internal.Stat<any>, arg2: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StatisticsManager_ = StatisticsManager;
    interface IGlobalGuiHandler {
        getGuiExtraAreas(): Internal.Collection<Internal.Rectangle2d>;
        getIngredientUnderMouse(arg0: number, arg1: number): any;
    }
    type IGlobalGuiHandler_ = IGlobalGuiHandler;
    class View <A, B> extends Document.Object implements Internal.App2<any, A, B> {
        flatMap<C_>(arg0: ((arg0: Internal.Type<B>) => Internal.View<B, C_>)): Internal.View<A, C_>;
        newType(): Internal.Type<B>;
        compose<C_>(arg0: Internal.View<C_, A>): Internal.View<C_, B>;
        hashCode(): number;
        function(): Internal.PointFree<Internal.Function<A, B>>;
        equals(arg0: any): boolean;
        static create<A_, B_>(arg0: Internal.Type<A_>, arg1: Internal.Type<B_>, arg2: Internal.PointFree<((arg0: A_) => B_)>): Internal.View<A_, B_>;
        static create<A_, B_>(arg0: string, arg1: Internal.Type<A_>, arg2: Internal.Type<B_>, arg3: ((arg0: Internal.DynamicOps<any>) => ((arg0: A_) => B_))): Internal.View<A_, B_>;
        rewriteOrNop(arg0: Internal.PointFreeRule): Internal.View<A, B>;
        toString(): string;
        type(): Internal.Type<A>;
        rewrite(arg0: Internal.PointFreeRule): Internal.Optional<Internal.View<A, B>>;
        static nopView<A_>(arg0: Internal.Type<A_>): Internal.View<A_, A_>;
        getFuncType(): Internal.Type<Internal.Function<A, B>>;
        get funcType(): Internal.Type<Internal.Function<A, B>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type View_<A, B> = View<A, B>;
    class ChestMinecartEntity extends Internal.ContainerMinecartEntity {
        func_213968_a(arg0: number, arg1: Internal.PlayerInventory): Internal.Container;
        func_70302_i_(): number;
        func_180457_u(): Internal.BlockState;
        func_184264_v(): Internal.AbstractMinecartEntity$Type;
        func_94095_a(arg0: Internal.DamageSource): void;
        func_94085_r(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChestMinecartEntity_ = ChestMinecartEntity;
    interface Object2ObjectSortedMap$FastSortedEntrySet <K, V> extends Internal.ObjectSortedSet<Internal.Object2ObjectMap$Entry<K, V>>, Internal.Object2ObjectMap$FastEntrySet<K, V> {
        fastIterator(): Internal.ObjectBidirectionalIterator<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<K, V>, V>, V>, V>, V>>;
        fastIterator(): Internal.ObjectIterator<any>;
        fastIterator(arg0: Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<K, V>, V>, V>, V>, V>): Internal.ObjectBidirectionalIterator<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<K, V>, V>, V>, V>, V>>;
    }
    type Object2ObjectSortedMap$FastSortedEntrySet_<K, V> = Object2ObjectSortedMap$FastSortedEntrySet<K, V>;
    class TimeUnit extends Internal.Enum<Internal.TimeUnit> {
        toChronoUnit(): Internal.ChronoUnit;
        timedJoin(arg0: Internal.Thread, arg1: number): void;
        timedWait(arg0: any, arg1: number): void;
        static valueOf(arg0: string): Internal.TimeUnit;
        static values(): Internal.TimeUnit[];
        convert(arg0: Internal.Duration): number;
        convert(arg0: number, arg1: Internal.TimeUnit_): number;
        toSeconds(arg0: number): number;
        sleep(arg0: number): void;
        toNanos(arg0: number): number;
        toMinutes(arg0: number): number;
        toHours(arg0: number): number;
        static of(arg0: Internal.ChronoUnit_): Internal.TimeUnit;
        toMillis(arg0: number): number;
        toDays(arg0: number): number;
        toMicros(arg0: number): number;
        static readonly MILLISECONDS : Internal.TimeUnit;
        static readonly MICROSECONDS : Internal.TimeUnit;
        static readonly HOURS : Internal.TimeUnit;
        static readonly SECONDS : Internal.TimeUnit;
        static readonly NANOSECONDS : Internal.TimeUnit;
        static readonly DAYS : Internal.TimeUnit;
        static readonly MINUTES : Internal.TimeUnit;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TimeUnit_ = "nanoseconds" | "microseconds" | "milliseconds" | "seconds" | "minutes" | "hours" | "days" | TimeUnit;
    class SpecialRecipeSerializer <T> extends Internal.ForgeRegistryEntry<Internal.IRecipeSerializer<any>> implements Internal.IRecipeSerializer<T> {
        func_199425_a_(arg0: ResourceLocation_, arg1: Internal.JsonObject): T;
        func_199426_a_(arg0: ResourceLocation_, arg1: Internal.PacketBuffer): T;
        func_199427_a_(arg0: Internal.PacketBuffer, arg1: T): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpecialRecipeSerializer_<T> = SpecialRecipeSerializer<T>;
    class VillagerHostilesSensor extends Internal.Sensor<Internal.LivingEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VillagerHostilesSensor_ = VillagerHostilesSensor;
    class LivingHealEvent extends Internal.LivingEvent {
        getListenerList(): Internal.ListenerList;
        setAmount(arg0: number): void;
        isCancelable(): boolean;
        getAmount(): number;
        get amount(): number;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        set amount(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingHealEvent_ = LivingHealEvent;
    abstract class PosRuleTest extends Document.Object {
        func_230385_a_(arg0: BlockPos, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Random): boolean;
        static readonly field_237102_c_ : Internal.Codec<Internal.PosRuleTest>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PosRuleTest_ = PosRuleTest;
    class MultipartBlockStateGenerator$Part extends Document.Object {
        toJson(): Internal.JsonObject;
        model(s: string): Internal.VariantBlockStateGenerator$Model;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MultipartBlockStateGenerator$Part_ = MultipartBlockStateGenerator$Part;
    class MapData$MapInfo extends Document.Object {
        func_176102_a(arg0: number, arg1: number): void;
        func_176101_a(arg0: Internal.ItemStack): Internal.IPacket<any>;
        readonly field_76211_a : Internal.PlayerEntity;
        field_82569_d : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MapData$MapInfo_ = MapData$MapInfo;
    interface BufferVertexType <T> extends Internal.VertexType<T> {
        getBufferVertexFormat(): Internal.BufferVertexFormat;
    }
    type BufferVertexType_<T> = BufferVertexType<T>;
    class LivingDropsEvent extends Internal.LivingEvent {
        getLootingLevel(): number;
        getListenerList(): Internal.ListenerList;
        getSource(): Internal.DamageSource;
        getDrops(): Internal.Collection<Internal.ItemEntity>;
        isRecentlyHit(): boolean;
        isCancelable(): boolean;
        get drops(): Internal.Collection<Internal.ItemEntity>;
        get recentlyHit(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get lootingLevel(): number;
        get source(): Internal.DamageSource;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingDropsEvent_ = LivingDropsEvent;
    class Snooper extends Document.Object {
        func_76471_b(): void;
        func_152768_a(arg0: string, arg1: any): void;
        func_130105_g(): number;
        func_152767_b(arg0: string, arg1: any): void;
        func_76468_d(): boolean;
        func_80006_f(): string;
        func_76470_e(): void;
        func_76463_a(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Snooper_ = Snooper;
    abstract class ArgumentBuilder <S, T> extends Document.Object {
        redirect(arg0: Internal.CommandNode<S>, arg1: ((arg0: Internal.CommandContext<S>) => S)): T;
        redirect(arg0: Internal.CommandNode<S>): T;
        getRedirectModifier(): Internal.RedirectModifier<S>;
        getRedirect(): Internal.CommandNode<S>;
        getCommand(): Internal.Command<S>;
        forward(arg0: Internal.CommandNode<S>, arg1: ((arg0: Internal.CommandContext<S>) => Internal.Collection<S>), arg2: boolean): T;
        then(arg0: Internal.ArgumentBuilder<S, any>): T;
        then(arg0: Internal.CommandNode<S>): T;
        isFork(): boolean;
        fork(arg0: Internal.CommandNode<S>, arg1: ((arg0: Internal.CommandContext<S>) => Internal.Collection<S>)): T;
        getRequirement(): Internal.Predicate<S>;
        build(): Internal.CommandNode<S>;
        getArguments(): Internal.Collection<Internal.CommandNode<S>>;
        executes(arg0: ((arg0: Internal.CommandContext<S>) => number)): T;
        requires(arg0: ((arg0: S) => boolean)): T;
        get arguments(): Internal.Collection<Internal.CommandNode<S>>;
        get requirement(): Internal.Predicate<S>;
        get redirectModifier(): Internal.RedirectModifier<S>;
        get command(): Internal.Command<S>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ArgumentBuilder_<S, T> = ArgumentBuilder<S, T>;
    class InputEvent$KeyInputEvent extends Internal.InputEvent {
        getKey(): number;
        getListenerList(): Internal.ListenerList;
        getAction(): number;
        getModifiers(): number;
        getScanCode(): number;
        get listenerList(): Internal.ListenerList;
        get action(): number;
        get modifiers(): number;
        get key(): number;
        get scanCode(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InputEvent$KeyInputEvent_ = InputEvent$KeyInputEvent;
    abstract class ChannelHandlerAdapter extends Document.Object implements Internal.ChannelHandler {
        exceptionCaught(arg0: Internal.ChannelHandlerContext, arg1: Internal.Throwable): void;
        handlerAdded(arg0: Internal.ChannelHandlerContext): void;
        isSharable(): boolean;
        handlerRemoved(arg0: Internal.ChannelHandlerContext): void;
        get sharable(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChannelHandlerAdapter_ = ChannelHandlerAdapter;
    abstract class ScriptableObject extends Document.Object implements Internal.Scriptable, Internal.SymbolScriptable, Internal.Serializable, Internal.DebuggableObject, Internal.ConstProperties {
        isSealed(): boolean;
        setParentScope(m: Internal.Scriptable): void;
        static redefineProperty(obj: Internal.Scriptable, name: string, isConst: boolean): void;
        putConst(name: string, start: Internal.Scriptable, value: any): void;
        static getTypedProperty<T_>(s: Internal.Scriptable, index: number, type: Internal.Class_<T_>): T_;
        static getTypedProperty<T_>(s: Internal.Scriptable, name: string, type: Internal.Class_<T_>): T_;
        getIds(): any[];
        static getArrayPrototype(scope: Internal.Scriptable): Internal.Scriptable;
        getAllIds(): any[];
        put(name: string, start: Internal.Scriptable, value: any): void;
        put(key: Internal.Symbol, start: Internal.Scriptable, value: any): void;
        put(index: number, start: Internal.Scriptable, value: any): void;
        getDefaultValue(typeHint: Internal.Class_<any>): any;
        static getDefaultValue(object: Internal.Scriptable, typeHint: Internal.Class_<any>): any;
        defineOwnProperties(cx: Internal.Context, props: Internal.ScriptableObject): void;
        defineProperty(propertyName: string, clazz: Internal.Class_<any>, attributes: number): void;
        static defineProperty(destination: Internal.Scriptable, propertyName: string, value: any, attributes: number): void;
        defineProperty(key: Internal.Symbol, value: any, attributes: number): void;
        defineProperty(propertyName: string, value: any, attributes: number): void;
        defineProperty(propertyName: string, delegateTo: any, getter: Internal.Method, setter: Internal.Method, attributes: number): void;
        setGetterOrSetter(name: string, index: number, getterOrSetter: Internal.Callable, isSetter: boolean): void;
        avoidObjectDetection(): boolean;
        has(key: Internal.Symbol, start: Internal.Scriptable): boolean;
        has(index: number, start: Internal.Scriptable): boolean;
        has(name: string, start: Internal.Scriptable): boolean;
        getExternalArrayLength(): any;
        getAttributes(index: number): number;
        getAttributes(name: string): number;
        getAttributes(sym: Internal.Symbol): number;
        hasInstance(instance: Internal.Scriptable): boolean;
        getAssociatedValue(key: any): any;
        static getPropertyIds(obj: Internal.Scriptable): any[];
        static hasProperty(obj: Internal.Scriptable, name: string): boolean;
        static hasProperty(obj: Internal.Scriptable, index: number): boolean;
        static hasProperty(obj: Internal.Scriptable, key: Internal.Symbol): boolean;
        getExternalArrayData(): Internal.ExternalArrayData;
        size(): number;
        defineOwnProperty(cx: Internal.Context, id: any, desc: Internal.ScriptableObject): void;
        getClassName(): string;
        static getFunctionPrototype(scope: Internal.Scriptable): Internal.Scriptable;
        getParentScope(): Internal.Scriptable;
        preventExtensions(): void;
        setExternalArrayData(array: Internal.ExternalArrayData): void;
        static callMethod(cx: Internal.Context, obj: Internal.Scriptable, methodName: string, args: any[]): any;
        static callMethod(obj: Internal.Scriptable, methodName: string, args: any[]): any;
        getTypeOf(): string;
        static getTopScopeValue(scope: Internal.Scriptable, key: any): any;
        sealObject(): void;
        setAttributes(index: number, attributes: number): void;
        setAttributes(name: string, attributes: number): void;
        setAttributes(key: Internal.Symbol, attributes: number): void;
        delete(index: number): void;
        delete(name: string): void;
        delete(key: Internal.Symbol): void;
        static putProperty(obj: Internal.Scriptable, key: Internal.Symbol, value: any): void;
        static putProperty(obj: Internal.Scriptable, name: string, value: any): void;
        static putProperty(obj: Internal.Scriptable, index: number, value: any): void;
        associateValue(key: any, value: any): any;
        static deleteProperty(obj: Internal.Scriptable, name: string): boolean;
        static deleteProperty(obj: Internal.Scriptable, index: number): boolean;
        getPrototype(): Internal.Scriptable;
        static getObjectPrototype(scope: Internal.Scriptable): Internal.Scriptable;
        isExtensible(): boolean;
        isConst(name: string): boolean;
        get(key: Internal.Symbol, start: Internal.Scriptable): any;
        get(index: number, start: Internal.Scriptable): any;
        get(name: string, start: Internal.Scriptable): any;
        get(key: any): any;
        static putConstProperty(obj: Internal.Scriptable, name: string, value: any): void;
        getGetterOrSetter(name: string, index: number, isSetter: boolean): any;
        static getProperty(obj: Internal.Scriptable, index: number): any;
        static getProperty(obj: Internal.Scriptable, key: Internal.Symbol): any;
        static getProperty(obj: Internal.Scriptable, name: string): any;
        static getTopLevelScope(obj: Internal.Scriptable): Internal.Scriptable;
        static defineClass<T_>(scope: Internal.Scriptable, clazz: Internal.Class_<T_>): void;
        static defineClass<T_>(scope: Internal.Scriptable, clazz: Internal.Class_<T_>, sealed: boolean): void;
        static defineClass<T_>(scope: Internal.Scriptable, clazz: Internal.Class_<T_>, sealed: boolean, mapInheritance: boolean): string;
        isEmpty(): boolean;
        defineFunctionProperties(names: string[], clazz: Internal.Class_<any>, attributes: number): void;
        static getClassPrototype(scope: Internal.Scriptable, className: string): Internal.Scriptable;
        setPrototype(m: Internal.Scriptable): void;
        defineConst(name: string, start: Internal.Scriptable): void;
        static defineConstProperty(destination: Internal.Scriptable, propertyName: string): void;
        static getGeneratorFunctionPrototype(scope: Internal.Scriptable): Internal.Scriptable;
        static readonly DONTENUM : 2;
        static readonly CONST : 13;
        static readonly UNINITIALIZED_CONST : 8;
        static readonly EMPTY : 0;
        static readonly READONLY : 1;
        static readonly PERMANENT : 4;
        get sealed(): boolean;
        get externalArrayData(): Internal.ExternalArrayData;
        get parentScope(): Internal.Scriptable;
        get ids(): any[];
        get className(): string;
        get externalArrayLength(): any;
        get allIds(): any[];
        get prototype(): Internal.Scriptable;
        get extensible(): boolean;
        get typeOf(): string;
        get empty(): boolean;
        set externalArrayData(array: Internal.ExternalArrayData);
        set parentScope(m: Internal.Scriptable);
        set prototype(m: Internal.Scriptable);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScriptableObject_ = ScriptableObject;
    class Biome$RainType extends Internal.Enum<Internal.Biome$RainType> implements Internal.IStringSerializable {
        static func_235122_a_(arg0: string): Internal.Biome$RainType;
        static valueOf(arg0: string): Internal.Biome$RainType;
        func_176610_l(): string;
        static values(): Internal.Biome$RainType[];
        func_222361_a(): string;
        static readonly RAIN : Internal.Biome$RainType;
        static readonly SNOW : Internal.Biome$RainType;
        static readonly NONE : Internal.Biome$RainType;
        static readonly field_235121_d_ : Internal.Codec<Internal.Biome$RainType>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Biome$RainType_ = "none" | "rain" | "snow" | Biome$RainType;
    abstract class AbstractFishEntity extends Internal.WaterMobEntity {
        func_70641_bl(): number;
        func_203706_r(arg0: boolean): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70636_d(): void;
        static func_234176_m_(): Internal.AttributeModifierMap$MutableAttribute;
        static func_223363_b(arg0: Internal.EntityType<Internal.AbstractFishEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_213352_e(arg0: Vec3): void;
        func_213397_c(arg0: number): boolean;
        func_213392_I(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractFishEntity_ = AbstractFishEntity;
    interface IResizeCallback <T> {
        onResize(arg0: number, arg1: T): number;
    }
    type IResizeCallback_<T> = IResizeCallback<T>;
    class Cipher extends Document.Object {
        static getMaxAllowedParameterSpec(arg0: string): Internal.AlgorithmParameterSpec;
        init(arg0: number, arg1: Internal.Certificate): void;
        init(arg0: number, arg1: Internal.Key, arg2: Internal.AlgorithmParameters, arg3: Internal.SecureRandom): void;
        init(arg0: number, arg1: Internal.Key, arg2: Internal.AlgorithmParameters): void;
        init(arg0: number, arg1: Internal.Certificate, arg2: Internal.SecureRandom): void;
        init(arg0: number, arg1: Internal.Key, arg2: Internal.AlgorithmParameterSpec, arg3: Internal.SecureRandom): void;
        init(arg0: number, arg1: Internal.Key, arg2: Internal.SecureRandom): void;
        init(arg0: number, arg1: Internal.Key, arg2: Internal.AlgorithmParameterSpec): void;
        init(arg0: number, arg1: Internal.Key): void;
        getAlgorithm(): string;
        update(arg0: Internal.ByteBuffer, arg1: Internal.ByteBuffer): number;
        update(arg0: number[], arg1: number, arg2: number, arg3: number[], arg4: number): number;
        update(arg0: number[], arg1: number, arg2: number, arg3: number[]): number;
        update(arg0: number[]): number[];
        update(arg0: number[], arg1: number, arg2: number): number[];
        getOutputSize(arg0: number): number;
        updateAAD(arg0: number[]): void;
        updateAAD(arg0: number[], arg1: number, arg2: number): void;
        updateAAD(arg0: Internal.ByteBuffer): void;
        unwrap(arg0: number[], arg1: string, arg2: number): Internal.Key;
        doFinal(arg0: number[], arg1: number, arg2: number, arg3: number[], arg4: number): number;
        doFinal(arg0: number[], arg1: number, arg2: number, arg3: number[]): number;
        doFinal(arg0: number[], arg1: number): number;
        doFinal(arg0: number[]): number[];
        doFinal(arg0: number[], arg1: number, arg2: number): number[];
        doFinal(): number[];
        doFinal(arg0: Internal.ByteBuffer, arg1: Internal.ByteBuffer): number;
        static getMaxAllowedKeyLength(arg0: string): number;
        getExemptionMechanism(): Internal.ExemptionMechanism;
        getBlockSize(): number;
        getIV(): number[];
        getParameters(): Internal.AlgorithmParameters;
        getProvider(): Internal.Provider;
        toString(): string;
        static getInstance(arg0: string, arg1: Internal.Provider): Internal.Cipher;
        static getInstance(arg0: string, arg1: string): Internal.Cipher;
        static getInstance(arg0: string): Internal.Cipher;
        wrap(arg0: Internal.Key): number[];
        static readonly WRAP_MODE : 3;
        static readonly UNWRAP_MODE : 4;
        static readonly ENCRYPT_MODE : 1;
        static readonly PUBLIC_KEY : 1;
        static readonly PRIVATE_KEY : 2;
        static readonly SECRET_KEY : 3;
        static readonly DECRYPT_MODE : 2;
        get provider(): Internal.Provider;
        get exemptionMechanism(): Internal.ExemptionMechanism;
        get iV(): number[];
        get parameters(): Internal.AlgorithmParameters;
        get blockSize(): number;
        get algorithm(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Cipher_ = Cipher;
    class CodeSource extends Document.Object implements Internal.Serializable {
        getLocation(): Internal.URL;
        getCodeSigners(): any[];
        hashCode(): number;
        equals(arg0: any): boolean;
        getCertificates(): Internal.Certificate[];
        toString(): string;
        implies(arg0: Internal.CodeSource): boolean;
        get codeSigners(): any[];
        get certificates(): Internal.Certificate[];
        get location(): Internal.URL;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CodeSource_ = CodeSource;
    class ChunkPrimerTickList <T> extends Document.Object implements Internal.ITickList<T> {
        func_205362_a(arg0: BlockPos, arg1: T, arg2: number, arg3: Internal.TickPriority_): void;
        func_205361_b(arg0: BlockPos, arg1: T): boolean;
        func_205381_a(arg0: Internal.ITickList<T>, arg1: ((arg0: BlockPos) => T)): void;
        func_205359_a(arg0: BlockPos, arg1: T): boolean;
        func_205379_a(): Internal.ListNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkPrimerTickList_<T> = ChunkPrimerTickList<T>;
    interface ContextAction <T> {
        run(arg0: Internal.Context): T;
    }
    type ContextAction_<T> = ContextAction<T>;
    class Optional <T> extends Document.Object {
        or(arg0: (() => Internal.Optional<T>)): Internal.Optional<T>;
        static ofNullable<T_>(arg0: T_): Internal.Optional<T_>;
        isEmpty(): boolean;
        isPresent(): boolean;
        orElse(arg0: T): T;
        orElseThrow<X_>(arg0: (() => X_)): T;
        orElseThrow(): T;
        static empty<T_>(): Internal.Optional<T_>;
        flatMap<U_>(arg0: ((arg0: T) => Internal.Optional<U_>)): Internal.Optional<U_>;
        filter(arg0: ((arg0: T) => boolean)): Internal.Optional<T>;
        orElseGet(arg0: (() => T)): T;
        stream(): Internal.Stream<T>;
        hashCode(): number;
        ifPresentOrElse(arg0: ((arg0: T) => void), arg1: (() => void)): void;
        ifPresent(arg0: ((arg0: T) => void)): void;
        static of<T_>(arg0: T_): Internal.Optional<T_>;
        equals(arg0: any): boolean;
        get(): T;
        toString(): string;
        map<U_>(arg0: ((arg0: T) => U_)): Internal.Optional<U_>;
        get present(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Optional_<T> = Optional<T>;
    interface MethodHandleInfo {
        getReferenceKind(): number;
        getDeclaringClass(): Internal.Class<any>;
        getName(): string;
        isVarArgs(): boolean;
        getMethodType(): Internal.MethodType;
        reflectAs<T>(arg0: Internal.Class_<T>, arg1: Internal.MethodHandles$Lookup): T;
        getModifiers(): number;
    }
    type MethodHandleInfo_ = MethodHandleInfo;
    class SBlockActionPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_179825_a(): BlockPos;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148864_h(): number;
        func_148868_c(): Internal.Block;
        func_148869_g(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SBlockActionPacket_ = SBlockActionPacket;
    class ServerRecipeBook extends Internal.RecipeBook {
        func_192826_c(arg0: Internal.ServerPlayerEntity): void;
        func_192824_e(): Internal.CompoundNBT;
        func_197925_b(arg0: Internal.Collection<Internal.IRecipe<any>>, arg1: Internal.ServerPlayerEntity): number;
        func_197926_a(arg0: Internal.Collection<Internal.IRecipe<any>>, arg1: Internal.ServerPlayerEntity): number;
        func_192825_a(arg0: Internal.CompoundNBT, arg1: Internal.RecipeManager): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerRecipeBook_ = ServerRecipeBook;
    abstract class AbstractSet <E> extends Internal.AbstractCollection<E> implements Internal.Set<E> {
        removeAll(arg0: Internal.Collection<any>): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractSet_<E> = AbstractSet<E>;
    class CEnchantItemPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149537_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149539_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CEnchantItemPacket_ = CEnchantItemPacket;
    class ResolvedModule extends Document.Object {
        reference(): Internal.ModuleReference;
        configuration(): Internal.Configuration;
        hashCode(): number;
        equals(arg0: any): boolean;
        reads(): Internal.Set<Internal.ResolvedModule>;
        name(): string;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ResolvedModule_ = ResolvedModule;
    class HoverEvent$Action <T> extends Document.Object {
        func_150686_a(): boolean;
        func_240670_a_(arg0: Internal.ITextComponent_): Internal.HoverEvent;
        func_240669_a_(arg0: any): Internal.JsonElement;
        func_150685_b(): string;
        static func_150684_a(arg0: string): Internal.HoverEvent$Action<any>;
        toString(): string;
        func_240668_a_(arg0: Internal.JsonElement): Internal.HoverEvent;
        static readonly field_230550_a_ : Internal.HoverEvent$Action<Internal.ITextComponent>;
        static readonly field_230551_b_ : Internal.HoverEvent$Action<Internal.HoverEvent$ItemHover>;
        static readonly field_230552_c_ : Internal.HoverEvent$Action<Internal.HoverEvent$EntityHover>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HoverEvent$Action_<T> = HoverEvent$Action<T>;
    interface IForgeChunk extends Internal.ICapabilityProvider {
    }
    type IForgeChunk_ = IForgeChunk;
    class PistonTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity {
        func_212363_d(): Internal.Direction;
        func_145833_n(): number;
        func_211146_k(): number;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_195508_a(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        func_73660_a(): void;
        func_174928_c(arg0: number): number;
        func_174929_b(arg0: number): number;
        func_145860_a(arg0: number): number;
        func_195509_h(): Internal.Direction;
        func_174926_d(arg0: number): number;
        func_145868_b(): boolean;
        func_145867_d(): boolean;
        func_189517_E_(): Internal.CompoundNBT;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_145866_f(): void;
        func_200230_i(): Internal.BlockState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PistonTileEntity_ = PistonTileEntity;
    abstract class SpecialRecipe extends Document.Object implements Internal.ICraftingRecipe {
        func_199560_c(): ResourceLocation;
        func_192399_d(): boolean;
        func_77571_b(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpecialRecipe_ = SpecialRecipe;
    class RegisterCategoriesEventJS extends Internal.JEIEventJS {
        readonly data : Internal.IRecipeCategoryRegistration;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegisterCategoriesEventJS_ = RegisterCategoriesEventJS;
    abstract class AbstractGui extends Document.Object {
        func_238459_a_(arg0: number, arg1: number, arg2: ((arg0: number, arg1: number) => void)): void;
        static func_238472_a_(arg0: Internal.MatrixStack, arg1: Internal.FontRenderer, arg2: Internal.ITextComponent_, arg3: number, arg4: number, arg5: number): void;
        static func_238471_a_(arg0: Internal.MatrixStack, arg1: Internal.FontRenderer, arg2: string, arg3: number, arg4: number, arg5: number): void;
        static func_238463_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): void;
        static func_238470_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.TextureAtlasSprite): void;
        static func_238467_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        static func_238466_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number): void;
        func_230926_e_(arg0: number): void;
        static func_238464_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        static func_238475_b_(arg0: Internal.MatrixStack, arg1: Internal.FontRenderer, arg2: Internal.ITextComponent_, arg3: number, arg4: number, arg5: number): void;
        func_238474_b_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        static func_238476_c_(arg0: Internal.MatrixStack, arg1: Internal.FontRenderer, arg2: string, arg3: number, arg4: number, arg5: number): void;
        func_230927_p_(): number;
        static readonly field_230665_h_ : ResourceLocation;
        static readonly field_230663_f_ : ResourceLocation;
        static readonly field_230664_g_ : ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractGui_ = AbstractGui;
    class ClientAdvancementManager extends Document.Object {
        func_194230_a(arg0: Internal.Advancement, arg1: boolean): void;
        func_192799_a(arg0: Internal.SAdvancementInfoPacket): void;
        func_194229_a(): Internal.AdvancementList;
        func_192798_a(arg0: Internal.ClientAdvancementManager$IListener): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientAdvancementManager_ = ClientAdvancementManager;
    interface AttributeView {
        name(): string;
    }
    type AttributeView_ = AttributeView;
    class WorldLightManager extends Document.Object implements Internal.ILightListener, Internal.StarLightLightingProvider {
        func_215572_a(arg0: Internal.LightType_, arg1: Internal.SectionPos): string;
        getLightEngine(): Internal.StarLightInterface;
        func_215571_a(arg0: Internal.ChunkPos, arg1: boolean): void;
        func_215570_a(): boolean;
        clientRemoveLightData(arg0: Internal.ChunkPos): void;
        func_215569_a(arg0: Internal.LightType_): Internal.IWorldLightListener;
        func_215568_a(arg0: BlockPos): void;
        func_215566_a(arg0: Internal.SectionPos, arg1: boolean): void;
        clientChunkLoad(arg0: Internal.ChunkPos, arg1: Internal.Chunk): void;
        func_215575_a(arg0: number, arg1: boolean, arg2: boolean): number;
        func_215574_a(arg0: Internal.LightType_, arg1: Internal.SectionPos, arg2: Internal.NibbleArray, arg3: boolean): void;
        func_215573_a(arg0: BlockPos, arg1: number): void;
        clientUpdateLight(arg0: Internal.LightType_, arg1: Internal.SectionPos, arg2: Internal.NibbleArray, arg3: boolean): void;
        func_223115_b(arg0: Internal.ChunkPos, arg1: boolean): void;
        handler$zjm000$construct(arg0: Internal.IChunkLightProvider, arg1: boolean, arg2: boolean, arg3: Internal.CallbackInfo): void;
        func_227470_b_(arg0: BlockPos, arg1: number): number;
        get lightEngine(): Internal.StarLightInterface;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldLightManager_ = WorldLightManager;
    interface CharacterManager$ISliceAcceptor {
        accept(arg0: Internal.Style, arg1: number, arg2: number): void;
    }
    type CharacterManager$ISliceAcceptor_ = ((arg0: Internal.Style, arg1: number, arg2: number) => void) | CharacterManager$ISliceAcceptor;
    class LoomContainer extends Internal.Container {
        func_217023_e(): number;
        func_217022_g(): Internal.Slot;
        func_75140_a(arg0: Internal.PlayerEntity, arg1: number): boolean;
        func_75130_a(arg0: Internal.IInventory): void;
        func_217024_f(): Internal.Slot;
        constant$zne000$getLimit(arg0: number): number;
        func_217025_h(): Internal.Slot;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_217026_i(): Internal.Slot;
        func_217020_a(arg0: (() => void)): void;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LoomContainer_ = LoomContainer;
    class SlideSettings extends Document.Object {
        func_236186_a_(): number;
        func_236188_b_(): number;
        func_236189_c_(): number;
        static readonly field_236182_a_ : Internal.Codec<Internal.SlideSettings>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SlideSettings_ = SlideSettings;
    interface IntUnaryOperator {
        applyAsInt(arg0: number): number;
        compose(arg0: ((arg0: number) => number)): Internal.IntUnaryOperator;
        andThen(arg0: ((arg0: number) => number)): Internal.IntUnaryOperator;
    }
    type IntUnaryOperator_ = ((arg0: number) => number) | IntUnaryOperator;
    class VarHandle$VarHandleDesc extends Internal.DynamicConstantDesc<Internal.VarHandle> {
        static ofStaticField(arg0: Internal.ClassDesc, arg1: string, arg2: Internal.ClassDesc): Internal.VarHandle$VarHandleDesc;
        varType(): Internal.ClassDesc;
        static ofArray(arg0: Internal.ClassDesc): Internal.VarHandle$VarHandleDesc;
        toString(): string;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): any;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): Internal.VarHandle;
        static ofField(arg0: Internal.ClassDesc, arg1: string, arg2: Internal.ClassDesc): Internal.VarHandle$VarHandleDesc;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VarHandle$VarHandleDesc_ = VarHandle$VarHandleDesc;
    class NetworkInterface extends Document.Object {
        getInterfaceAddresses(): Internal.List<Internal.InterfaceAddress>;
        getParent(): Internal.NetworkInterface;
        getName(): string;
        getIndex(): number;
        supportsMulticast(): boolean;
        getSubInterfaces(): Internal.Enumeration<Internal.NetworkInterface>;
        static getByIndex(arg0: number): Internal.NetworkInterface;
        inetAddresses(): Internal.Stream<Internal.InetAddress>;
        static getByInetAddress(arg0: Internal.InetAddress): Internal.NetworkInterface;
        isPointToPoint(): boolean;
        getMTU(): number;
        static networkInterfaces(): Internal.Stream<Internal.NetworkInterface>;
        isUp(): boolean;
        getDisplayName(): string;
        hashCode(): number;
        equals(arg0: any): boolean;
        static getByName(arg0: string): Internal.NetworkInterface;
        getHardwareAddress(): number[];
        isLoopback(): boolean;
        subInterfaces(): Internal.Stream<Internal.NetworkInterface>;
        toString(): string;
        isVirtual(): boolean;
        static getNetworkInterfaces(): Internal.Enumeration<Internal.NetworkInterface>;
        getInetAddresses(): Internal.Enumeration<Internal.InetAddress>;
        get parent(): Internal.NetworkInterface;
        get hardwareAddress(): number[];
        get virtual(): boolean;
        get displayName(): string;
        get pointToPoint(): boolean;
        get interfaceAddresses(): Internal.List<Internal.InterfaceAddress>;
        get name(): string;
        get index(): number;
        get up(): boolean;
        get mTU(): number;
        get loopback(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NetworkInterface_ = NetworkInterface;
    class FrameTimer extends Document.Object {
        func_219792_a(arg0: number, arg1: number, arg2: number): number;
        func_181747_a(arg0: number): void;
        func_181749_a(): number;
        func_181746_c(): number[];
        func_181751_b(arg0: number): number;
        func_181750_b(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FrameTimer_ = FrameTimer;
    class GuiScreenEvent$MouseDragEvent$Post extends Internal.GuiScreenEvent$MouseDragEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$MouseDragEvent$Post_ = GuiScreenEvent$MouseDragEvent$Post;
    class CSeenAdvancementsPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        static func_194163_a(arg0: Internal.Advancement): Internal.CSeenAdvancementsPacket;
        func_194162_b(): Internal.CSeenAdvancementsPacket$Action;
        func_194165_c(): ResourceLocation;
        static func_194164_a(): Internal.CSeenAdvancementsPacket;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CSeenAdvancementsPacket_ = CSeenAdvancementsPacket;
    interface Delayed extends Internal.Comparable<Internal.Delayed> {
        getDelay(arg0: Internal.TimeUnit_): number;
    }
    type Delayed_ = Delayed;
    class InsolatorRecipeJS extends Internal.ThermalRecipeJS {
        minTicks(arg0: number): Internal.InsolatorRecipeJS;
        serialize(): void;
        waterMod(arg0: number): Internal.InsolatorRecipeJS;
        create(arg0: Internal.ListJS): void;
        experience(arg0: number): Internal.InsolatorRecipeJS;
        water(arg0: number): Internal.InsolatorRecipeJS;
        deserialize(): void;
        inKey : string;
        outKey : string;
        outputFluids : Internal.ArrayList<Internal.FluidStackJS>;
        inputFluids : Internal.ArrayList<Internal.FluidIngredient>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InsolatorRecipeJS_ = InsolatorRecipeJS;
    abstract class PlayerDataJS <E, P> extends Document.Object implements Internal.WithAttachedData {
        getPlayer(): P;
        getMinecraftPlayer(): E;
        getName(): string;
        getProfile(): Internal.GameProfile;
        hasClientMod(): boolean;
        getId(): Internal.UUID;
        getOverworld(): Internal.WorldJS;
        getData(): Internal.AttachedData;
        get data(): Internal.AttachedData;
        get minecraftPlayer(): E;
        get profile(): Internal.GameProfile;
        get name(): string;
        get id(): Internal.UUID;
        get overworld(): Internal.WorldJS;
        get player(): P;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerDataJS_<E, P> = PlayerDataJS<E, P>;
    /**
    */
    class ItemStackJS extends Document.Object implements Internal.IngredientJS, Internal.NBTSerializable, Internal.ChangeListener<Internal.INBT>, Internal.SpecialEquality {
        getMaxStackSize(): number;
        isEdible(): boolean;
        isBlock(): boolean;
        sameItemStackIgnoreDurability(itemStack: Internal.ItemStack): boolean;
        getStacks(): Internal.Set<Internal.ItemStackJS>;
        getDestroySpeed(blockState: Internal.BlockState): number;
        getItem(): Internal.Item;
        static findGroup(id: string): Internal.ItemGroup;
        getTags(): Internal.Collection<ResourceLocation>;
        hasEnchantment(enchantment: Internal.Enchantment, level: number): boolean;
        inventoryTick(level: Internal.World, entity: Internal.Entity, i: number, bl: boolean): void;
        getItemGroup(): string;
        addAttributeModifier(attribute: Internal.Attribute, attributeModifier: Internal.AttributeModifier, equipmentSlot: EquipmentSlot_): void;
        setChance(c: number): void;
        hasAdventureModeBreakTagForBlock(tagContainer: Internal.ITagCollectionSupplier, blockInWorld: Internal.CachedBlockInfo): boolean;
        setEntityRepresentation(entity: Internal.Entity): void;
        getCount(): number;
        setCount(count: number): void;
        grow(i: number): void;
        shrink(i: number): void;
        getMinecraftNbt(): Internal.CompoundNBT;
        getNbtString(): string;
        toJson(): Internal.JsonElement;
        isNBTEqual(other: Internal.ItemStackJS_): boolean;
        isNBTEqual(other: Internal.ItemStack): boolean;
        withCount(c: number): Internal.ItemStackJS;
        withCount(arg0: number): Internal.IngredientJS;
        getDisplayName(): Internal.ITextComponent;
        onUseTick(level: Internal.World, livingEntity: Internal.LivingEntity, i: number): void;
        static getListJS(): Internal.ListJS;
        hurt(i: number, random: Internal.Random, serverPlayer: Internal.ServerPlayerEntity): boolean;
        setDamageValue(i: number): void;
        getAttributeModifiers(equipmentSlot: EquipmentSlot_): Internal.Multimap<any, any>;
        hasNBT(): boolean;
        getMod(): string;
        save(compoundTag: Internal.CompoundNBT): Internal.CompoundNBT;
        setPopTime(i: number): void;
        hideTooltipPart(tooltipPart: Internal.ItemStack$TooltipDisplayFlags_): void;
        weakNBT(): Internal.IngredientJS;
        toNBT(): Internal.CompoundNBT;
        toNBT(): Internal.INBT;
        getDamageValue(): number;
        copy(): Internal.Copyable;
        copy(): Internal.IngredientJS;
        copy(): Internal.ItemStackJS;
        getItemStack(): Internal.ItemStack;
        getMaxDamage(): number;
        getDrinkingSound(): Internal.SoundEvent;
        isDamaged(): boolean;
        withNBT(nbt: Internal.CompoundNBT): Internal.ItemStackJS;
        useOn(useOnContext: Internal.ItemUseContext): Internal.ActionResultType;
        mineBlock(level: Internal.World, blockState: Internal.BlockState, blockPos: BlockPos, player: Internal.PlayerEntity): void;
        onChanged(o: Internal.INBT): void;
        onChanged(arg0: any): void;
        strongEquals(o: any): boolean;
        hurtAndBreak(i: number, livingEntity: Internal.LivingEntity, consumer: ((arg0: any) => void)): void;
        isCorrectToolForDrops(blockState: Internal.BlockState): boolean;
        getEnchantments(): Internal.MapJS;
        removeNBT(): Internal.ItemStackJS;
        equals(o: any): boolean;
        enchant(enchantments: Internal.MapJS): Internal.ItemStackJS;
        enchant(enchantment: Internal.Enchantment, level: number): Internal.ItemStackJS;
        x(arg0: number): Internal.IngredientJS;
        x(c: number): Internal.ItemStackJS;
        ignoreNBT(): Internal.IngredientJS;
        toString(): string;
        setNbt(tag: Internal.CompoundNBT): void;
        getUseDuration(): number;
        getItemIds(): Internal.Set<string>;
        getNbt(): Internal.CompoundNBT;
        getName(): Internal.Text;
        use(level: Internal.World, player: Internal.PlayerEntity, interactionHand: Hand_): Internal.ActionResult<any>;
        getVanillaItems(): Internal.Set<Internal.Item>;
        getHarvestLevel(tool: ToolType, player: Internal.PlayerJS<any>, block: Internal.BlockContainerJS): number;
        getHarvestLevel(tool: ToolType): number;
        getRarity(): Internal.Rarity;
        interactLivingEntity(player: Internal.PlayerEntity, livingEntity: Internal.LivingEntity, interactionHand: Hand_): Internal.ActionResultType;
        sameItem(itemStack: Internal.ItemStack): boolean;
        setRepairCost(i: number): void;
        split(i: number): Internal.ItemStack;
        onCraftedBy(level: Internal.World, player: Internal.PlayerEntity, i: number): void;
        finishUsingItem(level: Internal.World, livingEntity: Internal.LivingEntity): Internal.ItemStack;
        getFirst(): Internal.ItemStackJS;
        static getList(): Internal.List<Internal.ItemStackJS>;
        hurtEnemy(livingEntity: Internal.LivingEntity, player: Internal.PlayerEntity): void;
        isEnchantable(): boolean;
        isStackable(): boolean;
        withName(displayName: Internal.ITextComponent_): Internal.ItemStackJS;
        withChance(c: number): Internal.ItemStackJS;
        useOnRelease(): boolean;
        test(other: Internal.ItemStackJS_): boolean;
        hasTag(tag: ResourceLocation_): boolean;
        hasTag(): boolean;
        testVanillaItem(item: Internal.Item): boolean;
        getBaseRepairCost(): number;
        isEnchanted(): boolean;
        hasChance(): boolean;
        static getRawItem(o: any): Internal.Item;
        getEntityRepresentation(): Internal.Entity;
        setHoverName(component: Internal.ITextComponent_): Internal.ItemStack;
        areItemsEqual(other: Internal.ItemStackJS_): boolean;
        areItemsEqual(other: Internal.ItemStack): boolean;
        getChance(): number;
        getDescriptionId(): string;
        getUseAnimation(): Internal.UseAction;
        getFrame(): Internal.ItemFrameEntity;
        isInvalidRecipeIngredient(): boolean;
        getId(): string;
        getPopTime(): number;
        removeTagKey(string: string): void;
        isFramed(): boolean;
        static clearListCache(): void;
        resetHoverName(): void;
        getHarvestSpeed(block: Internal.BlockContainerJS): number;
        getHarvestSpeed(): number;
        hashCode(): number;
        static of(o: any): Internal.ItemStackJS;
        toRawResultJson(): Internal.JsonElement;
        getEatingSound(): Internal.SoundEvent;
        toResultJson(): Internal.JsonElement;
        hasFoil(): boolean;
        chance(c: number): Internal.ItemStackJS;
        isEmpty(): boolean;
        static getTypeList(): Internal.ListJS;
        hasAdventureModePlaceTagForBlock(tagContainer: Internal.ITagCollectionSupplier, blockInWorld: Internal.CachedBlockInfo): boolean;
        getHoverName(): Internal.ITextComponent;
        releaseUsing(level: Internal.World, livingEntity: Internal.LivingEntity, i: number): void;
        getFluidStack(): Internal.FluidStackJS;
        static resultFromRecipeJson(json: Internal.JsonElement): Internal.ItemStackJS;
        testVanilla(other: Internal.ItemStack): boolean;
        getEnchantmentTags(): Internal.ListNBT;
        removeChance(): void;
        isDamageableItem(): boolean;
        hasCustomHoverName(): boolean;
        static readonly EMPTY : Internal.ItemStackJS;
        get damageValue(): number;
        get nbt(): Internal.CompoundNBT;
        get maxStackSize(): number;
        get itemStack(): Internal.ItemStack;
        get mod(): string;
        get baseRepairCost(): number;
        get displayName(): Internal.ITextComponent;
        get maxDamage(): number;
        get itemIds(): Internal.Set<string>;
        get eatingSound(): Internal.SoundEvent;
        get popTime(): number;
        get vanillaItems(): Internal.Set<Internal.Item>;
        get enchantable(): boolean;
        get empty(): boolean;
        get enchantmentTags(): Internal.ListNBT;
        get descriptionId(): string;
        get harvestSpeed(): number;
        get typeList(): Internal.ListJS;
        get framed(): boolean;
        get nbtString(): string;
        get useDuration(): number;
        get block(): boolean;
        get id(): string;
        get minecraftNbt(): Internal.CompoundNBT;
        get invalidRecipeIngredient(): boolean;
        get itemGroup(): string;
        get stackable(): boolean;
        get item(): Internal.Item;
        get stacks(): Internal.Set<Internal.ItemStackJS>;
        get count(): number;
        get enchantments(): Internal.MapJS;
        get list(): Internal.List<Internal.ItemStackJS>;
        get damageableItem(): boolean;
        get listJS(): Internal.ListJS;
        get tags(): Internal.Collection<ResourceLocation>;
        get enchanted(): boolean;
        get hoverName(): Internal.ITextComponent;
        get drinkingSound(): Internal.SoundEvent;
        get damaged(): boolean;
        get name(): Internal.Text;
        get fluidStack(): Internal.FluidStackJS;
        get edible(): boolean;
        get entityRepresentation(): Internal.Entity;
        get first(): Internal.ItemStackJS;
        get useAnimation(): Internal.UseAction;
        get rarity(): Internal.Rarity;
        get frame(): Internal.ItemFrameEntity;
        set nbt(tag: Internal.CompoundNBT);
        set damageValue(i: number);
        set hoverName(component: Internal.ITextComponent_);
        set count(count: number);
        set entityRepresentation(entity: Internal.Entity);
        set popTime(i: number);
        set repairCost(i: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemStackJS_ = string | object | ItemStackJS;
    abstract class ImmutableSet <E> extends Internal.ImmutableCollection<E> implements Internal.Set<E> {
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.UnmodifiableIterator<E>;
        hashCode(): number;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_): Internal.ImmutableSet<E_>;
        static of<E_>(): Internal.ImmutableSet<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_): Internal.ImmutableSet<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_[]): Internal.ImmutableSet<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_): Internal.ImmutableSet<E_>;
        static of<E_>(arg0: E_, arg1: E_): Internal.ImmutableSet<E_>;
        static of<E_>(arg0: E_): Internal.ImmutableSet<E_>;
        equals(arg0: any): boolean;
        static builder<E_>(): Internal.ImmutableSet$Builder<E_>;
        static copyOf<E_>(arg0: E_[]): Internal.ImmutableSet<E_>;
        static copyOf<E_>(arg0: Internal.Iterator<E_>): Internal.ImmutableSet<E_>;
        static copyOf<E_>(arg0: Internal.Collection<E_>): Internal.ImmutableSet<E_>;
        static copyOf<E_>(arg0: Internal.Iterable<E_>): Internal.ImmutableSet<E_>;
        asList(): Internal.ImmutableList<E>;
        static toImmutableSet<E_>(): Internal.Collector<E_, any, Internal.ImmutableSet<E_>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableSet_<E> = ImmutableSet<E>;
    class BakedQuad extends Document.Object implements Internal.IVertexProducer, Internal.BakedQuadAccess, Internal.ModelQuadView {
        getLight(idx: number): number;
        getNormal(idx: number): number;
        getTexV(idx: number): number;
        getTexU(idx: number): number;
        func_187508_a(): Internal.TextureAtlasSprite;
        func_239287_f_(): boolean;
        getColorIndex(): number;
        getColor(idx: number): number;
        func_178209_a(): number[];
        getX(idx: number): number;
        func_178211_c(): number;
        func_178212_b(): boolean;
        func_178210_d(): Internal.Direction;
        getY(idx: number): number;
        setVertices(arg0: number[]): void;
        getZ(idx: number): number;
        rubidium$getSprite(): Internal.TextureAtlasSprite;
        pipe(arg0: net.minecraftforge.client.model.pipeline.IVertexConsumer): void;
        getFlags(): number;
        get flags(): number;
        get colorIndex(): number;
        set vertices(arg0: number[]);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BakedQuad_ = BakedQuad;
    class RenderState$BooleanState extends Internal.RenderState {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderState$BooleanState_ = RenderState$BooleanState;
    interface IServerConfiguration {
        func_82574_x(): Internal.GameRules;
        func_230413_a_(arg0: Internal.CompoundNBT): void;
        func_230414_b_(arg0: Internal.CompoundNBT): void;
        func_176123_z(): boolean;
        func_230411_a_(arg0: Internal.DynamicRegistries, arg1: Internal.CompoundNBT): Internal.CompoundNBT;
        func_230409_a_(arg0: Internal.Difficulty_): void;
        func_230416_x_(): Internal.CompoundNBT;
        func_76086_u(): boolean;
        func_85118_a(arg0: Internal.CrashReportCategory): void;
        func_76065_j(): string;
        func_230415_d_(arg0: boolean): void;
        func_176130_y(): Internal.Difficulty;
        func_230418_z_(): Internal.DimensionGeneratorSettings;
        func_230408_H_(): Internal.WorldSettings;
        func_230417_y_(): number;
        func_230392_a_(arg0: Internal.GameType_): void;
        func_230412_a_(arg0: string, arg1: boolean): void;
        func_230410_a_(arg0: Internal.DatapackCodec): void;
        func_230405_E_(): boolean;
        func_230404_D_(): Internal.CompoundNBT;
        func_230406_F_(): Internal.Set<string>;
        func_76077_q(): Internal.GameType;
        func_230407_G_(): Internal.IServerWorldInfo;
        func_230401_A_(): Internal.Lifecycle;
        func_76093_s(): boolean;
        func_237379_i_(arg0: number): string;
        func_230403_C_(): Internal.DatapackCodec;
        func_230402_B_(): Internal.CompoundNBT;
    }
    type IServerConfiguration_ = IServerConfiguration;
    class FireworksJS$Shape extends Internal.Enum<Internal.FireworksJS$Shape> {
        static valueOf(name: string): Internal.FireworksJS$Shape;
        static values(): Internal.FireworksJS$Shape[];
        static get(name: string): Internal.FireworksJS$Shape;
        static readonly SMALL_BALL : Internal.FireworksJS$Shape;
        static readonly LARGE_BALL : Internal.FireworksJS$Shape;
        static readonly STAR : Internal.FireworksJS$Shape;
        static readonly CREEPER : Internal.FireworksJS$Shape;
        static readonly BURST : Internal.FireworksJS$Shape;
        static readonly VALUES : Internal.FireworksJS$Shape[];
        readonly type : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FireworksJS$Shape_ = "small_ball" | "large_ball" | "star" | "creeper" | "burst" | FireworksJS$Shape;
    interface Flushable {
        flush(): void;
    }
    type Flushable_ = Flushable;
    abstract class BlockType extends Document.Object {
        applyDefaults(builder: Internal.BlockBuilder): void;
        generateBlockModels(builder: Internal.BlockBuilder): Internal.Map<ResourceLocation, Internal.JsonObject>;
        generateData(builder: Internal.BlockBuilder, generator: Internal.DataJsonGenerator): void;
        createBlock(arg0: Internal.BlockBuilder): Internal.Block;
        generateAssets(b: Internal.BlockBuilder, generator: Internal.AssetJsonGenerator): void;
        readonly name : string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockType_ = BlockType;
    interface PlayerInteractionManagerKJS {
        isDestroyingBlockKJS(): boolean;
    }
    type PlayerInteractionManagerKJS_ = PlayerInteractionManagerKJS;
    class RepairContainer extends Internal.AbstractRepairContainer {
        func_82850_a(arg0: string): void;
        func_82848_d(): void;
        setMaximumCost(arg0: number): void;
        static func_216977_d(arg0: number): number;
        func_216976_f(): number;
        field_82856_l : number;
        set maximumCost(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RepairContainer_ = RepairContainer;
    class EntityEvent$Size extends Internal.EntityEvent {
        getOldEyeHeight(): number;
        getListenerList(): Internal.ListenerList;
        getNewSize(): Internal.EntitySize;
        getPose(): Internal.Pose;
        getNewEyeHeight(): number;
        setNewSize(arg0: Internal.EntitySize, arg1: boolean): void;
        setNewSize(arg0: Internal.EntitySize): void;
        getOldSize(): Internal.EntitySize;
        setNewEyeHeight(arg0: number): void;
        get oldEyeHeight(): number;
        get listenerList(): Internal.ListenerList;
        get pose(): Internal.Pose;
        get newSize(): Internal.EntitySize;
        get newEyeHeight(): number;
        get oldSize(): Internal.EntitySize;
        set newSize(arg0: Internal.EntitySize);
        set newEyeHeight(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityEvent$Size_ = EntityEvent$Size;
    class LootBuilderPool extends Document.Object implements Internal.FunctionContainer, Internal.ConditionContainer {
        addItem(item: Internal.ItemStack): Internal.LootTableEntry;
        addItem(item: Internal.ItemStack, weight: number, count: Internal.IRandomRange): Internal.LootTableEntry;
        addItem(item: Internal.ItemStack, weight: number): Internal.LootTableEntry;
        setUniformRolls(min: number, max: number): void;
        toJson(): Internal.JsonObject;
        setBinomialRolls(n: number, p: number): void;
        addEntry(json: Internal.JsonObject): Internal.LootTableEntry;
        addFunction(o: Internal.JsonObject): Internal.LootBuilderPool;
        addFunction(arg0: Internal.JsonObject): Internal.FunctionContainer;
        addLootTable(table: ResourceLocation_): Internal.LootTableEntry;
        addEmpty(weight: number): Internal.LootTableEntry;
        addCondition(arg0: Internal.JsonObject): Internal.ConditionContainer;
        addCondition(o: Internal.JsonObject): Internal.LootBuilderPool;
        addTag(tag: string, expand: boolean): Internal.LootTableEntry;
        readonly entries : Internal.JsonArray;
        readonly functions : Internal.JsonArray;
        rolls : Internal.IRandomRange;
        readonly conditions : Internal.JsonArray;
        bonusRolls : Internal.IRandomRange;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootBuilderPool_ = LootBuilderPool;
    class PlayerInteractEvent$EntityInteract extends Internal.PlayerInteractEvent {
        getTarget(): Internal.Entity;
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get target(): Internal.Entity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerInteractEvent$EntityInteract_ = PlayerInteractEvent$EntityInteract;
    interface ItemHandler extends Internal.Iterable<Internal.ItemStack> {
        getHeight(): number;
        iterator(): Internal.Iterator<Internal.ItemStack>;
        extractItem(arg0: number, arg1: number, arg2: boolean): Internal.ItemStack;
        getSlotLimit(arg0: number): number;
        isItemValid(arg0: number, arg1: Internal.ItemStack): boolean;
        getWidth(): number;
        getSlots(): number;
        getStackInSlot(arg0: number): Internal.ItemStack;
        insertItem(arg0: number, arg1: Internal.ItemStack, arg2: boolean): Internal.ItemStack;
    }
    type ItemHandler_ = ItemHandler;
    class RenderTooltipEvent$PostText extends Internal.RenderTooltipEvent$Post {
        getHeight(): number;
        getListenerList(): Internal.ListenerList;
        getWidth(): number;
        get listenerList(): Internal.ListenerList;
        get width(): number;
        get height(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderTooltipEvent$PostText_ = RenderTooltipEvent$PostText;
    abstract class EntityRenderer <T> extends Document.Object implements Internal.EntityLightSampler<any> {
        bridge$getBlockLight(entity: Internal.Entity, pos: BlockPos): number;
        func_76983_a(): Internal.FontRenderer;
        func_225627_b_(arg0: T, arg1: number): Vec3;
        func_229100_c_(arg0: T, arg1: number): number;
        bridge$getSkyLight(entity: Internal.Entity, pos: BlockPos): number;
        func_225626_a_(arg0: T, arg1: Internal.ClippingHelper, arg2: number, arg3: number, arg4: number): boolean;
        func_110775_a(arg0: T): ResourceLocation;
        func_225623_a_(arg0: T, arg1: number, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer, arg5: number): void;
        func_177068_d(): Internal.EntityRendererManager;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityRenderer_<T> = EntityRenderer<T>;
    interface IRecipeType <T> {
        func_222148_a<C>(arg0: Internal.IRecipe<C>, arg1: Internal.World, arg2: C): Internal.Optional<T>;
    }
    type IRecipeType_<T> = IRecipeType<T>;
    class FoodBuilder extends Document.Object {
        saturation(s: number): Internal.FoodBuilder;
        build(): Internal.Food;
        removeEffect(mobEffect: Internal.Effect): Internal.FoodBuilder;
        effect(mobEffectId: ResourceLocation_, duration: number, amplifier: number, probability: number): Internal.FoodBuilder;
        alwaysEdible(): Internal.FoodBuilder;
        alwaysEdible(flag: boolean): Internal.FoodBuilder;
        meat(flag: boolean): Internal.FoodBuilder;
        meat(): Internal.FoodBuilder;
        fastToEat(): Internal.FoodBuilder;
        fastToEat(flag: boolean): Internal.FoodBuilder;
        eaten(e: ((arg0: Internal.ItemFoodEatenEventJS) => void)): Internal.FoodBuilder;
        hunger(h: number): Internal.FoodBuilder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FoodBuilder_ = FoodBuilder;
    interface Logger {
        getName(): string;
        log(level: Internal.Level, marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        log(level: Internal.Level, marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        log(level: Internal.Level, messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        log(level: Internal.Level, messageSupplier: Internal.MessageSupplier): void;
        log(level: Internal.Level, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        log(level: Internal.Level, message: org.apache.logging.log4j.message.Message): void;
        log(level: Internal.Level, marker: Internal.Marker, message: Internal.CharSequence): void;
        log(level: Internal.Level, marker: Internal.Marker, messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        log(level: Internal.Level, marker: Internal.Marker, messageSupplier: Internal.MessageSupplier): void;
        log(level: Internal.Level, marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        log(level: Internal.Level, marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, params: any[]): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string): void;
        log(level: Internal.Level, marker: Internal.Marker, message: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        log(level: Internal.Level, message: string, p0: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        log(level: Internal.Level, message: string): void;
        log(level: Internal.Level, message: string, params: any[]): void;
        log(level: Internal.Level, message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        log(level: Internal.Level, message: string, throwable: Internal.Throwable): void;
        log(level: Internal.Level, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        log(level: Internal.Level, message: Internal.CharSequence): void;
        log(level: Internal.Level, message: any): void;
        log(level: Internal.Level, message: any, throwable: Internal.Throwable): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any): void;
        log(level: Internal.Level, messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        log(level: Internal.Level, messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        logMessage(level: Internal.Level, marker: Internal.Marker, fqcn: string, location: Internal.StackTraceElement, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        atWarn(): Internal.LogBuilder;
        atInfo(): Internal.LogBuilder;
        isWarnEnabled(): boolean;
        isWarnEnabled(marker: Internal.Marker): boolean;
        error(marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        error(marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        error(messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        error(marker: Internal.Marker, message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        error(message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        error(message: org.apache.logging.log4j.message.Message): void;
        error(marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        error(message: Internal.CharSequence): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        error(messageSupplier: Internal.MessageSupplier): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        error(message: string, throwable: Internal.Throwable): void;
        error(messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        error(messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        error(marker: Internal.Marker, message: string, p0: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any): void;
        error(message: string, p0: any, p1: any): void;
        error(message: string, p0: any, p1: any, p2: any): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        error(message: string, p0: any): void;
        error(marker: Internal.Marker, message: Internal.CharSequence): void;
        error(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        error(marker: Internal.Marker, message: string, params: any[]): void;
        error(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier): void;
        error(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        error(marker: Internal.Marker, message: string): void;
        error(marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        error(marker: Internal.Marker, message: any): void;
        error(marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        error(message: any, throwable: Internal.Throwable): void;
        error(message: string): void;
        error(message: string, params: any[]): void;
        error(message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        error(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        error(message: Internal.CharSequence, throwable: Internal.Throwable): void;
        error(message: any): void;
        printf(level: Internal.Level, format: string, params: any[]): void;
        printf(level: Internal.Level, marker: Internal.Marker, format: string, params: any[]): void;
        fatal(message: any, throwable: Internal.Throwable): void;
        fatal(message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        fatal(message: Internal.CharSequence, throwable: Internal.Throwable): void;
        fatal(messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        fatal(message: Internal.CharSequence): void;
        fatal(message: any): void;
        fatal(messageSupplier: Internal.MessageSupplier): void;
        fatal(message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        fatal(message: string, throwable: Internal.Throwable): void;
        fatal(messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        fatal(messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        fatal(message: string, params: any[]): void;
        fatal(message: string): void;
        fatal(marker: Internal.Marker, message: string, p0: any): void;
        fatal(marker: Internal.Marker, message: Internal.CharSequence): void;
        fatal(marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        fatal(marker: Internal.Marker, message: any): void;
        fatal(marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        fatal(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        fatal(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier): void;
        fatal(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        fatal(marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        fatal(marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        fatal(marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        fatal(message: org.apache.logging.log4j.message.Message): void;
        fatal(marker: Internal.Marker, message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        fatal(marker: Internal.Marker, message: string, params: any[]): void;
        fatal(marker: Internal.Marker, message: string): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any): void;
        fatal(message: string, p0: any, p1: any, p2: any): void;
        fatal(message: string, p0: any, p1: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        fatal(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any): void;
        fatal(message: string, p0: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        throwing<T>(throwable: T): T;
        throwing<T>(level: Internal.Level, throwable: T): T;
        atTrace(): Internal.LogBuilder;
        trace(marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        trace(marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        trace(message: org.apache.logging.log4j.message.Message): void;
        trace(marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        trace(message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        trace(message: any): void;
        trace(message: Internal.CharSequence, throwable: Internal.Throwable): void;
        trace(message: Internal.CharSequence): void;
        trace(messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        trace(messageSupplier: Internal.MessageSupplier): void;
        trace(marker: Internal.Marker, message: Internal.CharSequence): void;
        trace(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier): void;
        trace(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any): void;
        trace(marker: Internal.Marker, message: string, params: any[]): void;
        trace(marker: Internal.Marker, message: string): void;
        trace(marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, message: any): void;
        trace(marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        trace(message: string, p0: any): void;
        trace(message: string, p0: any, p1: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any): void;
        trace(message: string, p0: any, p1: any, p2: any): void;
        trace(messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        trace(message: string, throwable: Internal.Throwable): void;
        trace(message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        trace(message: string, params: any[]): void;
        trace(message: string): void;
        trace(message: any, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        trace(marker: Internal.Marker, message: string, p0: any): void;
        trace(messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        isInfoEnabled(marker: Internal.Marker): boolean;
        isInfoEnabled(): boolean;
        isErrorEnabled(marker: Internal.Marker): boolean;
        isErrorEnabled(): boolean;
        traceEntry(): Internal.EntryMessage;
        traceEntry(message: org.apache.logging.log4j.message.Message): Internal.EntryMessage;
        traceEntry(format: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): Internal.EntryMessage;
        traceEntry(format: string, params: any[]): Internal.EntryMessage;
        traceEntry(paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): Internal.EntryMessage;
        isTraceEnabled(): boolean;
        isTraceEnabled(marker: Internal.Marker): boolean;
        atLevel(level: Internal.Level): Internal.LogBuilder;
        info(messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        info(messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        info(message: string, throwable: Internal.Throwable): void;
        info(message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        info(messageSupplier: Internal.MessageSupplier): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any): void;
        info(marker: Internal.Marker, message: string, p0: any): void;
        info(message: Internal.CharSequence, throwable: Internal.Throwable): void;
        info(message: Internal.CharSequence): void;
        info(messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        info(message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        info(message: string, params: any[]): void;
        info(message: string): void;
        info(message: any, throwable: Internal.Throwable): void;
        info(message: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any): void;
        info(message: string, p0: any, p1: any, p2: any): void;
        info(message: string, p0: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        info(message: string, p0: any, p1: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        info(marker: Internal.Marker, message: Internal.CharSequence): void;
        info(marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        info(marker: Internal.Marker, message: any): void;
        info(marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        info(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        info(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        info(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier): void;
        info(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        info(marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        info(marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        info(marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        info(message: org.apache.logging.log4j.message.Message): void;
        info(marker: Internal.Marker, message: string): void;
        info(marker: Internal.Marker, message: string, params: any[]): void;
        info(marker: Internal.Marker, message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        always(): Internal.LogBuilder;
        getMessageFactory<MF>(): MF;
        catching(level: Internal.Level, throwable: Internal.Throwable): void;
        catching(throwable: Internal.Throwable): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any): void;
        debug(marker: Internal.Marker, message: string, p0: any): void;
        debug(messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        debug(messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        debug(message: string): void;
        debug(message: any, throwable: Internal.Throwable): void;
        debug(message: any): void;
        debug(message: Internal.CharSequence, throwable: Internal.Throwable): void;
        debug(message: string, params: any[]): void;
        debug(message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        debug(message: string, throwable: Internal.Throwable): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        debug(message: string, p0: any, p1: any, p2: any): void;
        debug(message: string, p0: any, p1: any): void;
        debug(message: string, p0: any): void;
        debug(marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        debug(messageSupplier: Internal.MessageSupplier): void;
        debug(marker: Internal.Marker, message: any): void;
        debug(marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        debug(marker: Internal.Marker, message: string): void;
        debug(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        debug(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        debug(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier): void;
        debug(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        debug(marker: Internal.Marker, message: Internal.CharSequence): void;
        debug(message: org.apache.logging.log4j.message.Message): void;
        debug(message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        debug(messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        debug(marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        debug(message: Internal.CharSequence): void;
        debug(marker: Internal.Marker, message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        debug(marker: Internal.Marker, message: string, params: any[]): void;
        debug(marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        debug(marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        atError(): Internal.LogBuilder;
        traceExit<R>(format: string, result: R): R;
        traceExit(message: Internal.EntryMessage): void;
        traceExit(): void;
        traceExit<R>(message: Internal.EntryMessage, result: R): R;
        traceExit<R>(message: org.apache.logging.log4j.message.Message, result: R): R;
        traceExit<R>(result: R): R;
        atFatal(): Internal.LogBuilder;
        isFatalEnabled(marker: Internal.Marker): boolean;
        isFatalEnabled(): boolean;
        getLevel(): Internal.Level;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        warn(messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, message: string, p0: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        warn(message: string, p0: any): void;
        warn(message: string, p0: any, p1: any): void;
        warn(message: string, p0: any, p1: any, p2: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        warn(marker: Internal.Marker, message: string, params: any[]): void;
        warn(marker: Internal.Marker, message: string): void;
        warn(marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, message: any): void;
        warn(marker: Internal.Marker, message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        warn(marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier): void;
        warn(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        warn(message: string): void;
        warn(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, message: Internal.CharSequence): void;
        warn(marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        warn(message: string, params: any[]): void;
        warn(marker: Internal.Marker, messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        warn(message: any, throwable: Internal.Throwable): void;
        warn(message: any): void;
        warn(message: string, paramSuppliers: org.apache.logging.log4j.util.Supplier<any>[]): void;
        warn(message: string, throwable: Internal.Throwable): void;
        warn(messageSupplier: org.apache.logging.log4j.util.Supplier<any>): void;
        warn(message: org.apache.logging.log4j.message.Message): void;
        warn(message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        warn(messageSupplier: Internal.MessageSupplier): void;
        warn(message: Internal.CharSequence, throwable: Internal.Throwable): void;
        warn(message: Internal.CharSequence): void;
        warn(messageSupplier: Internal.MessageSupplier, throwable: Internal.Throwable): void;
        entry(): void;
        entry(params: any[]): void;
        exit(): void;
        exit<R>(result: R): R;
        isEnabled(level: Internal.Level, marker: Internal.Marker): boolean;
        isEnabled(level: Internal.Level): boolean;
        isDebugEnabled(): boolean;
        isDebugEnabled(marker: Internal.Marker): boolean;
        atDebug(): Internal.LogBuilder;
    }
    type Logger_ = Logger;
    interface IChunkLightProvider {
        func_212864_k_(): Internal.IBlockReader;
        func_217202_b(arg0: number, arg1: number): Internal.IBlockReader;
        func_217201_a(arg0: Internal.LightType_, arg1: Internal.SectionPos): void;
    }
    type IChunkLightProvider_ = IChunkLightProvider;
    class BlockRayTraceResult extends Internal.RayTraceResult {
        func_216346_c(): Internal.RayTraceResult$Type;
        func_216353_d(): boolean;
        func_237485_a_(arg0: BlockPos): Internal.BlockRayTraceResult;
        func_216354_b(): Internal.Direction;
        static func_216352_a(arg0: Vec3, arg1: Internal.Direction_, arg2: BlockPos): Internal.BlockRayTraceResult;
        func_216351_a(arg0: Internal.Direction_): Internal.BlockRayTraceResult;
        func_216350_a(): BlockPos;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockRayTraceResult_ = BlockRayTraceResult;
    class RegisterIngredientsEventJS extends Internal.JEIEventJS {
        readonly data : Internal.IModIngredientRegistration;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegisterIngredientsEventJS_ = RegisterIngredientsEventJS;
    interface IForgeItem {
        getToolTypes(arg0: Internal.ItemStack): Internal.Set<Internal.ToolType>;
        canElytraFly(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        getItemStackTileEntityRenderer(): Internal.ItemStackTileEntityRenderer;
        getHarvestLevel(arg0: Internal.ItemStack, arg1: Internal.ToolType, arg2: Internal.PlayerEntity, arg3: Internal.BlockState): number;
        getItem(): Internal.Item;
        getTags(): Internal.Set<ResourceLocation>;
        getSmeltingExperience(arg0: Internal.ItemStack): number;
        setDamage(arg0: Internal.ItemStack, arg1: number): void;
        canHarvestBlock(arg0: Internal.ItemStack, arg1: Internal.BlockState): boolean;
        renderHelmetOverlay(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: number, arg3: number, arg4: number): void;
        getItemEnchantability(arg0: Internal.ItemStack): number;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        damageItem<T>(arg0: Internal.ItemStack, arg1: number, arg2: T, arg3: ((arg0: T) => void)): number;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: boolean): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack): number;
        readShareTag(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT): void;
        getArmorModel<A>(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: EquipmentSlot_, arg3: A): A;
        onEntityItemUpdate(arg0: Internal.ItemStack, arg1: Internal.ItemEntity): boolean;
        getDamage(arg0: Internal.ItemStack): number;
        showDurabilityBar(arg0: Internal.ItemStack): boolean;
        isBookEnchantable(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.LivingEntity, arg3: Internal.LivingEntity): boolean;
        onUsingTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): void;
        createEntity(arg0: Internal.World, arg1: Internal.Entity, arg2: Internal.ItemStack): Internal.Entity;
        getCreativeTabs(): Internal.Collection<Internal.ItemGroup>;
        isPiglinCurrency(arg0: Internal.ItemStack): boolean;
        isRepairable(arg0: Internal.ItemStack): boolean;
        getShareTag(arg0: Internal.ItemStack): Internal.CompoundNBT;
        getRGBDurabilityForDisplay(arg0: Internal.ItemStack): number;
        isDamageable(arg0: Internal.ItemStack): boolean;
        getBurnTime(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack, arg1: Internal.IRecipeType<any>): number;
        onDroppedByPlayer(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity): boolean;
        onEntitySwing(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        elytraFlightTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): boolean;
        getAttributeModifiers(arg0: EquipmentSlot_, arg1: Internal.ItemStack): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        onLeftClickEntity(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.Entity): boolean;
        canEquip(arg0: Internal.ItemStack, arg1: EquipmentSlot_, arg2: Internal.Entity): boolean;
        getDurabilityForDisplay(arg0: Internal.ItemStack): number;
        onBlockStartBreak(arg0: Internal.ItemStack, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.MobEntity): void;
        canContinueUsing(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getEntityLifespan(arg0: Internal.ItemStack, arg1: Internal.World): number;
        getArmorTexture(arg0: Internal.ItemStack, arg1: Internal.Entity, arg2: EquipmentSlot_, arg3: string): string;
        hasCustomEntity(arg0: Internal.ItemStack): boolean;
        getHighlightTip(arg0: Internal.ItemStack, arg1: Internal.ITextComponent_): Internal.ITextComponent;
        getMaxDamage(arg0: Internal.ItemStack): number;
        getCreatorModId(arg0: Internal.ItemStack): string;
        isDamaged(arg0: Internal.ItemStack): boolean;
        onArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.PlayerEntity): void;
        hasContainerItem(arg0: Internal.ItemStack): boolean;
        isShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        doesSneakBypassUse(arg0: Internal.ItemStack, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        onItemUseFirst(arg0: Internal.ItemStack, arg1: Internal.ItemUseContext): Internal.ActionResultType;
        getContainerItem(arg0: Internal.ItemStack): Internal.ItemStack;
        getEquipmentSlot(arg0: Internal.ItemStack): EquipmentSlot;
        getItemStackLimit(arg0: Internal.ItemStack): number;
        initCapabilities(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT): Internal.ICapabilityProvider;
        getFontRenderer(arg0: Internal.ItemStack): Internal.FontRenderer;
        makesPiglinsNeutral(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        isEnderMask(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.EndermanEntity): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack, arg1: Internal.Enchantment): boolean;
    }
    type IForgeItem_ = IForgeItem;
    class ProbabilityConfig extends Document.Object implements Internal.ICarverConfig, Internal.IFeatureConfig {
        static readonly field_236576_b_ : Internal.Codec<Internal.ProbabilityConfig>;
        readonly field_203622_a : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ProbabilityConfig_ = ProbabilityConfig;
    interface IEventHandler {
        onEvent(arg0: Internal.EventJS): void;
    }
    type IEventHandler_ = ((arg0: Internal.EventJS) => void) | IEventHandler;
    interface ValueLayout$OfDouble extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfDouble;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfDouble;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.ValueLayout$OfDouble;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfDouble;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfDouble_ = ValueLayout$OfDouble;
    class AxisAlignedLinearPosTest extends Internal.PosRuleTest {
        func_230385_a_(arg0: BlockPos, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Random): boolean;
        static readonly field_237045_a_ : Internal.Codec<Internal.AxisAlignedLinearPosTest>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AxisAlignedLinearPosTest_ = AxisAlignedLinearPosTest;
    interface Comparator <T> {
        compare(arg0: T, arg1: T): number;
        thenComparingInt(arg0: ((arg0: T) => number)): Internal.Comparator<T>;
        thenComparingDouble(arg0: ((arg0: T) => number)): Internal.Comparator<T>;
        thenComparingLong(arg0: ((arg0: T) => number)): Internal.Comparator<T>;
        thenComparing<U>(arg0: ((arg0: T) => U), arg1: ((arg0: any) => boolean)): Internal.Comparator<T>;
        thenComparing(arg0: ((arg0: any) => boolean)): Internal.Comparator<T>;
        thenComparing<U>(arg0: ((arg0: T) => U)): Internal.Comparator<T>;
        equals(arg0: any): boolean;
        reversed(): Internal.Comparator<T>;
    }
    type Comparator_<T> = ((arg0: any) => boolean) | Comparator<T>;
    interface CustomJavaObjectWrapper {
        wrapAsJavaObject(arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Class_<any>): Internal.Scriptable;
    }
    type CustomJavaObjectWrapper_ = ((arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Class<any>) => Internal.Scriptable) | CustomJavaObjectWrapper;
    interface SpecialEquality {
        specialEquals(o: any, shallow: boolean): boolean;
    }
    type SpecialEquality_ = SpecialEquality;
    class JigsawTileEntity extends Internal.TileEntity {
        func_235664_a_(arg0: ResourceLocation_): void;
        func_235665_a_(arg0: Internal.ServerWorld, arg1: number, arg2: boolean): void;
        func_214055_a(arg0: string): void;
        func_235662_a_(arg0: Internal.JigsawTileEntity$OrientationType_): void;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_214054_f(): string;
        func_235670_g_(): ResourceLocation;
        func_235671_j_(): Internal.JigsawTileEntity$OrientationType;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_189517_E_(): Internal.CompoundNBT;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_235667_c_(arg0: ResourceLocation_): void;
        func_235666_b_(arg0: ResourceLocation_): void;
        func_235669_f_(): ResourceLocation;
        func_235668_d_(): ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JigsawTileEntity_ = JigsawTileEntity;
    interface IStructureReader {
        func_230346_b_(arg0: Internal.Structure<any>): Internal.LongSet;
        func_230344_a_(arg0: Internal.Structure<any>, arg1: Internal.StructureStart<any>): void;
        func_230343_a_(arg0: Internal.Structure<any>, arg1: number): void;
        func_230342_a_(arg0: Internal.Structure<any>): Internal.StructureStart<any>;
        func_201606_b(arg0: Internal.Map_<Internal.Structure_<any>, Internal.LongSet_>): void;
        func_201604_d(): Internal.Map<Internal.Structure<any>, Internal.LongSet>;
    }
    type IStructureReader_ = IStructureReader;
    class TreeExtractorBoostRecipeJS extends Internal.ThermalRecipeJS {
        serialize(): void;
        boostMod(arg0: number): Internal.TreeExtractorBoostRecipeJS;
        create(arg0: Internal.ListJS): void;
        cycles(arg0: number): Internal.TreeExtractorBoostRecipeJS;
        deserialize(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TreeExtractorBoostRecipeJS_ = TreeExtractorBoostRecipeJS;
    class DimensionRenderInfo$FogType extends Internal.Enum<Internal.DimensionRenderInfo$FogType> {
        static valueOf(arg0: string): Internal.DimensionRenderInfo$FogType;
        static values(): Internal.DimensionRenderInfo$FogType[];
        static readonly END : Internal.DimensionRenderInfo$FogType;
        static readonly NONE : Internal.DimensionRenderInfo$FogType;
        static readonly NORMAL : Internal.DimensionRenderInfo$FogType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DimensionRenderInfo$FogType_ = "none" | "normal" | "end" | DimensionRenderInfo$FogType;
    abstract class SyncedTileEntity extends Internal.TileEntity {
        causeBlockUpdate(): void;
        sendData(): void;
        writeToClient(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        notifyUpdate(): void;
        readClientUpdate(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        getTileData(): Internal.CompoundNBT;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        containedChunk(): Internal.Chunk;
        func_189517_E_(): Internal.CompoundNBT;
        packetTarget(): Internal.PacketDistributor$PacketTarget;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        get tileData(): Internal.CompoundNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SyncedTileEntity_ = SyncedTileEntity;
    class MinecraftGame extends Document.Object implements Internal.RunningGame {
        getVersion(): Internal.GameVersion;
        func_216815_b(): void;
        setSessionEventListener(arg0: Internal.SessionEventListener): void;
        getSelectedLanguage(): com.mojang.bridge.game.Language;
        func_216814_a(): void;
        getCurrentSession(): Internal.GameSession;
        getPerformanceMetrics(): Internal.PerformanceMetrics;
        get currentSession(): Internal.GameSession;
        get selectedLanguage(): com.mojang.bridge.game.Language;
        get performanceMetrics(): Internal.PerformanceMetrics;
        get version(): Internal.GameVersion;
        set sessionEventListener(arg0: Internal.SessionEventListener);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MinecraftGame_ = MinecraftGame;
    class FeatureSpreadConfig extends Document.Object implements Internal.IPlacementConfig, Internal.IFeatureConfig {
        func_242799_a(): Internal.FeatureSpread;
        static readonly field_242797_a : Internal.Codec<Internal.FeatureSpreadConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FeatureSpreadConfig_ = FeatureSpreadConfig;
    class MapItemRenderer$Instance extends Document.Object implements Internal.AutoCloseable {
        close(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MapItemRenderer$Instance_ = MapItemRenderer$Instance;
    class BlockMatchRuleTest extends Internal.RuleTest {
        func_215181_a(arg0: Internal.BlockState, arg1: Internal.Random): boolean;
        static readonly field_237075_a_ : Internal.Codec<Internal.BlockMatchRuleTest>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockMatchRuleTest_ = BlockMatchRuleTest;
    class JeiEvent extends net.minecraftforge.eventbus.api.Event {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JeiEvent_ = JeiEvent;
    interface IGuiFluidStackGroup extends Internal.IGuiIngredientGroup<net.minecraftforge.fluids.FluidStack> {
        init(arg0: number, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: Internal.IDrawable): void;
        set(arg0: number, arg1: any): void;
        set(arg0: number, arg1: net.minecraftforge.fluids.FluidStack): void;
        addTooltipCallback(arg0: ((arg0: number, arg1: boolean, arg2: net.minecraftforge.fluids.FluidStack, arg3: Internal.List<Internal.ITextComponent>) => void)): void;
    }
    type IGuiFluidStackGroup_ = IGuiFluidStackGroup;
    class GuiScreenEvent$DrawScreenEvent extends Internal.GuiScreenEvent {
        getMouseY(): number;
        getListenerList(): Internal.ListenerList;
        getMouseX(): number;
        getRenderPartialTicks(): number;
        getMatrixStack(): Internal.MatrixStack;
        get mouseX(): number;
        get matrixStack(): Internal.MatrixStack;
        get listenerList(): Internal.ListenerList;
        get renderPartialTicks(): number;
        get mouseY(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$DrawScreenEvent_ = GuiScreenEvent$DrawScreenEvent;
    class CachedBlockInfo extends Document.Object {
        func_196960_c(): Internal.IWorldReader;
        static func_177510_a(arg0: ((arg0: Internal.BlockState) => boolean)): Internal.Predicate<Internal.CachedBlockInfo>;
        func_177509_a(): Internal.BlockState;
        func_177507_b(): Internal.TileEntity;
        func_177508_d(): BlockPos;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CachedBlockInfo_ = CachedBlockInfo;
    class SoundSource extends Document.Object {
        func_216423_c(arg0: number): void;
        func_216425_a(arg0: boolean): void;
        func_216422_a(arg0: number): void;
        func_216436_b(): void;
        func_216420_a(arg0: Vec3): void;
        func_216430_b(arg0: number): void;
        func_216432_b(arg0: boolean): void;
        func_216433_a(arg0: Internal.IAudioStream): void;
        func_216419_h(): void;
        func_216429_a(arg0: Internal.AudioStreamBuffer): void;
        func_216438_c(): void;
        func_216418_f(): void;
        func_216435_g(): boolean;
        func_216437_e(): void;
        func_216434_i(): void;
        func_216439_d(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SoundSource_ = SoundSource;
    class Pattern extends Document.Object implements Internal.Serializable {
        static quote(arg0: string): string;
        split(arg0: Internal.CharSequence, arg1: number): string[];
        split(arg0: Internal.CharSequence): string[];
        splitWithDelimiters(arg0: Internal.CharSequence, arg1: number): string[];
        static compile(arg0: string): Internal.Pattern;
        static compile(arg0: string, arg1: number): Internal.Pattern;
        splitAsStream(arg0: Internal.CharSequence): Internal.Stream<string>;
        pattern(): string;
        flags(): number;
        namedGroups(): Internal.Map<string, number>;
        toString(): string;
        asMatchPredicate(): Internal.Predicate<string>;
        asPredicate(): Internal.Predicate<string>;
        matcher(arg0: Internal.CharSequence): Internal.Matcher;
        static matches(arg0: string, arg1: Internal.CharSequence): boolean;
        static readonly DOTALL : 32;
        static readonly UNICODE_CASE : 64;
        static readonly LITERAL : 16;
        static readonly UNICODE_CHARACTER_CLASS : 256;
        static readonly CASE_INSENSITIVE : 2;
        static readonly CANON_EQ : 128;
        static readonly COMMENTS : 4;
        static readonly UNIX_LINES : 1;
        static readonly MULTILINE : 8;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Pattern_ = Pattern;
    class Enchantment$Rarity extends Internal.Enum<Internal.Enchantment$Rarity> {
        static valueOf(arg0: string): Internal.Enchantment$Rarity;
        static values(): Internal.Enchantment$Rarity[];
        func_185270_a(): number;
        static readonly RARE : Internal.Enchantment$Rarity;
        static readonly VERY_RARE : Internal.Enchantment$Rarity;
        static readonly UNCOMMON : Internal.Enchantment$Rarity;
        static readonly COMMON : Internal.Enchantment$Rarity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Enchantment$Rarity_ = "common" | "uncommon" | "rare" | "very_rare" | Enchantment$Rarity;
    interface RedirectModifier <S> {
        apply(arg0: Internal.CommandContext<S>): Internal.Collection<S>;
    }
    type RedirectModifier_<S> = ((arg0: Internal.CommandContext<S>) => Internal.Collection<S>) | RedirectModifier<S>;
    interface IVertexBuilder extends Internal.IForgeVertexBuilder, Internal.VertexDrain {
        func_225582_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_227891_b_(arg0: number): Internal.IVertexBuilder;
        func_225587_b_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225588_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number): void;
        func_227890_a_(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number[], arg3: number, arg4: number, arg5: number, arg6: number[], arg7: number, arg8: boolean): void;
        func_225585_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225586_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IVertexBuilder;
        func_225583_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225584_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_227885_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IVertexBuilder;
        createSink(factory: Internal.VertexType<any>): Internal.VertexSink;
        func_181675_d(): void;
        func_227886_a_(arg0: number): Internal.IVertexBuilder;
        func_227889_a_(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_227888_a_(matrix: Internal.Matrix4f, x: number, y: number, z: number): Internal.IVertexBuilder;
        func_227887_a_(matrix: Internal.Matrix3f, x: number, y: number, z: number): Internal.IVertexBuilder;
    }
    type IVertexBuilder_ = IVertexBuilder;
    class ChunkWatchEvent$UnWatch extends Internal.ChunkWatchEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkWatchEvent$UnWatch_ = ChunkWatchEvent$UnWatch;
    interface TypeDescriptor {
        descriptorString(): string;
    }
    type TypeDescriptor_ = TypeDescriptor;
    abstract class LivingEntityEventJS extends Internal.EntityEventJS {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingEntityEventJS_ = LivingEntityEventJS;
    interface Watchable {
        register(arg0: Internal.WatchService, arg1: Internal.WatchEvent$Kind<any>[], arg2: any[]): Internal.WatchKey;
        register(arg0: Internal.WatchService, arg1: Internal.WatchEvent$Kind<any>[]): Internal.WatchKey;
    }
    type Watchable_ = Watchable;
    interface PrivilegedExceptionAction <T> {
        run(): T;
    }
    type PrivilegedExceptionAction_<T> = (() => T) | PrivilegedExceptionAction<T>;
    class NativeJavaObject extends Document.Object implements Internal.Scriptable, Internal.SymbolScriptable, Internal.Wrapper, Internal.Serializable {
        hasInstance(value: Internal.Scriptable): boolean;
        static canConvert(cx: Internal.Context, fromObj: any, to: Internal.Class_<any>): boolean;
        setParentScope(m: Internal.Scriptable): void;
        getIds(): any[];
        delete(name: string): void;
        delete(key: Internal.Symbol): void;
        delete(index: number): void;
        put(name: string, start: Internal.Scriptable, value: any): void;
        put(index: number, start: Internal.Scriptable, value: any): void;
        put(symbol: Internal.Symbol, start: Internal.Scriptable, value: any): void;
        unwrap(): any;
        getDefaultValue(hint: Internal.Class_<any>): any;
        setPrototype(m: Internal.Scriptable): void;
        getPrototype(): Internal.Scriptable;
        get(index: number, start: Internal.Scriptable): any;
        get(key: Internal.Symbol, start: Internal.Scriptable): any;
        get(name: string, start: Internal.Scriptable): any;
        has(key: Internal.Symbol, start: Internal.Scriptable): boolean;
        has(name: string, start: Internal.Scriptable): boolean;
        has(index: number, start: Internal.Scriptable): boolean;
        getClassName(): string;
        getParentScope(): Internal.Scriptable;
        get parentScope(): Internal.Scriptable;
        get ids(): any[];
        get className(): string;
        get prototype(): Internal.Scriptable;
        set parentScope(m: Internal.Scriptable);
        set prototype(m: Internal.Scriptable);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NativeJavaObject_ = NativeJavaObject;
    interface IRecipeRegistration {
        addRecipes(arg0: Internal.Collection<any>, arg1: ResourceLocation_): void;
        getJeiHelpers(): Internal.IJeiHelpers;
        addIngredientInfo<T>(arg0: Internal.List<T>, arg1: Internal.IIngredientType<T>, arg2: Internal.ITextComponent[]): void;
        addIngredientInfo<T>(arg0: Internal.List<T>, arg1: Internal.IIngredientType<T>, arg2: string[]): void;
        addIngredientInfo<T>(arg0: T, arg1: Internal.IIngredientType<T>, arg2: Internal.ITextComponent[]): void;
        addIngredientInfo<T>(arg0: T, arg1: Internal.IIngredientType<T>, arg2: string[]): void;
        getVanillaRecipeFactory(): Internal.IVanillaRecipeFactory;
        getIngredientManager(): Internal.IIngredientManager;
    }
    type IRecipeRegistration_ = IRecipeRegistration;
    interface AmbiguityConsumer <S> {
        ambiguous(arg0: Internal.CommandNode<S>, arg1: Internal.CommandNode<S>, arg2: Internal.CommandNode<S>, arg3: Internal.Collection<string>): void;
    }
    type AmbiguityConsumer_<S> = ((arg0: Internal.CommandNode<S>, arg1: Internal.CommandNode<S>, arg2: Internal.CommandNode<S>, arg3: Internal.Collection<string>) => void) | AmbiguityConsumer<S>;
    class Parameter extends Document.Object implements Internal.AnnotatedElement {
        getDeclaringInvokable(): Internal.Invokable<any, any>;
        getAnnotationsByType<A_>(arg0: Internal.Class_<A_>): A_[];
        getType(): Internal.TypeToken<any>;
        getDeclaredAnnotationsByType<A_>(arg0: Internal.Class_<A_>): A_[];
        getAnnotation<A_>(arg0: Internal.Class_<A_>): A_;
        isAnnotationPresent(arg0: Internal.Class_<Internal.Annotation_>): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        getDeclaredAnnotation<A_>(arg0: Internal.Class_<A_>): A_;
        toString(): string;
        getAnnotations(): Internal.Annotation[];
        getDeclaredAnnotations(): Internal.Annotation[];
        get declaredAnnotations(): Internal.Annotation[];
        get annotations(): Internal.Annotation[];
        get declaringInvokable(): Internal.Invokable<any, any>;
        get type(): Internal.TypeToken<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Parameter_ = Parameter;
    interface IntFunction <R> {
        apply(arg0: number): R;
    }
    type IntFunction_<R> = ((arg0: number) => R) | IntFunction<R>;
    class GuiScreenEvent$MouseReleasedEvent$Pre extends Internal.GuiScreenEvent$MouseReleasedEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$MouseReleasedEvent$Pre_ = GuiScreenEvent$MouseReleasedEvent$Pre;
    class AudioStreamBuffer extends Document.Object {
        func_216474_b(): void;
        func_216472_c(): Internal.OptionalInt;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AudioStreamBuffer_ = AudioStreamBuffer;
    abstract class FlyingEntity extends Internal.MobEntity {
        func_70617_f_(): boolean;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_213352_e(arg0: Vec3): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FlyingEntity_ = FlyingEntity;
    class NearestBedSensor extends Internal.Sensor<Internal.MobEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NearestBedSensor_ = NearestBedSensor;
    class LivingEntityDeathEventJS extends Internal.LivingEntityEventJS {
        getSource(): Internal.DamageSourceJS;
        getEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get source(): Internal.DamageSourceJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingEntityDeathEventJS_ = LivingEntityDeathEventJS;
    class AddLakeProperties extends Document.Object {
        setWorldgenLayer(id: string): void;
        setBlock(id: string): void;
        chance : number;
        retrogen : number;
        readonly biomes : Internal.WorldgenEntryList;
        _block : Internal.BlockState;
        _worldgenLayer : DecorationGenerationStep;
        set block(id: string);
        set worldgenLayer(id: string);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AddLakeProperties_ = AddLakeProperties;
    class Pair$Mu <S> extends Document.Object implements Internal.K1 {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Pair$Mu_<S> = Pair$Mu<S>;
    class AttributeModifierMap extends Document.Object {
        static func_233803_a_(): Internal.AttributeModifierMap$MutableAttribute;
        func_233804_a_(arg0: Internal.Attribute): number;
        func_233807_b_(arg0: Internal.Attribute): number;
        func_233806_a_(arg0: ((arg0: Internal.ModifiableAttributeInstance) => void), arg1: Internal.Attribute): Internal.ModifiableAttributeInstance;
        func_233805_a_(arg0: Internal.Attribute, arg1: Internal.UUID): number;
        func_233808_b_(arg0: Internal.Attribute, arg1: Internal.UUID): boolean;
        func_233809_c_(arg0: Internal.Attribute): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttributeModifierMap_ = AttributeModifierMap;
    class CUpdateCommandBlockPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_210364_d(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_210359_b(): string;
        func_210361_a(): BlockPos;
        func_210360_f(): Internal.CommandBlockTileEntity$Mode;
        func_210363_c(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_210362_e(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CUpdateCommandBlockPacket_ = CUpdateCommandBlockPacket;
    interface CharacterIterator extends Internal.Cloneable {
        next(): string;
        current(): string;
        getIndex(): number;
        previous(): string;
        last(): string;
        setIndex(arg0: number): string;
        getEndIndex(): number;
        clone(): any;
        getBeginIndex(): number;
        first(): string;
    }
    type CharacterIterator_ = CharacterIterator;
    abstract class TypeParameter <T> extends Internal.TypeCapture<T> {
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TypeParameter_<T> = TypeParameter<T>;
    interface ITooltipFlag {
        func_194127_a(): boolean;
    }
    type ITooltipFlag_ = ITooltipFlag;
    interface URLStreamHandlerFactory {
        createURLStreamHandler(arg0: string): Internal.URLStreamHandler;
    }
    type URLStreamHandlerFactory_ = URLStreamHandlerFactory;
    interface IVanillaRecipeFactory {
        createBrewingRecipe(arg0: Internal.List<Internal.ItemStack>, arg1: Internal.List<Internal.ItemStack>, arg2: Internal.ItemStack): Internal.IJeiBrewingRecipe;
        createBrewingRecipe(arg0: Internal.List<Internal.ItemStack>, arg1: Internal.ItemStack, arg2: Internal.ItemStack): Internal.IJeiBrewingRecipe;
        createAnvilRecipe(arg0: Internal.ItemStack, arg1: Internal.List<Internal.ItemStack>, arg2: Internal.List<Internal.ItemStack>): any;
        createAnvilRecipe(arg0: Internal.List<Internal.ItemStack>, arg1: Internal.List<Internal.ItemStack>, arg2: Internal.List<Internal.ItemStack>): any;
    }
    type IVanillaRecipeFactory_ = IVanillaRecipeFactory;
    class RecipeBookCategories extends Internal.Enum<Internal.RecipeBookCategories> {
        func_202903_a(): Internal.List<Internal.ItemStack>;
        static func_243236_a(arg0: Internal.RecipeBookCategory_): Internal.List<Internal.RecipeBookCategories>;
        static valueOf(arg0: string): Internal.RecipeBookCategories;
        static values(): Internal.RecipeBookCategories[];
        static readonly CRAFTING_EQUIPMENT : Internal.RecipeBookCategories;
        static readonly BLAST_FURNACE_BLOCKS : Internal.RecipeBookCategories;
        static readonly field_243235_w : {};
        static readonly CRAFTING_REDSTONE : Internal.RecipeBookCategories;
        static readonly CRAFTING_MISC : Internal.RecipeBookCategories;
        static readonly CAMPFIRE : Internal.RecipeBookCategories;
        static readonly SMITHING : Internal.RecipeBookCategories;
        static readonly FURNACE_FOOD : Internal.RecipeBookCategories;
        static readonly CRAFTING_SEARCH : Internal.RecipeBookCategories;
        static readonly BLAST_FURNACE_MISC : Internal.RecipeBookCategories;
        static readonly SMOKER_FOOD : Internal.RecipeBookCategories;
        static readonly CRAFTING_BUILDING_BLOCKS : Internal.RecipeBookCategories;
        static readonly FURNACE_BLOCKS : Internal.RecipeBookCategories;
        static readonly SMOKER_SEARCH : Internal.RecipeBookCategories;
        static readonly STONECUTTER : Internal.RecipeBookCategories;
        static readonly FURNACE_SEARCH : Internal.RecipeBookCategories;
        static readonly field_243231_s : [undefined, undefined];
        static readonly BLAST_FURNACE_SEARCH : Internal.RecipeBookCategories;
        static readonly UNKNOWN : Internal.RecipeBookCategories;
        static readonly field_243232_t : [undefined, undefined, undefined];
        static readonly field_243233_u : [undefined, undefined, undefined, undefined];
        static readonly FURNACE_MISC : Internal.RecipeBookCategories;
        static readonly field_243234_v : [undefined, undefined, undefined, undefined, undefined];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecipeBookCategories_ = "crafting_search" | "crafting_building_blocks" | "crafting_redstone" | "crafting_equipment" | "crafting_misc" | "furnace_search" | "furnace_food" | "furnace_blocks" | "furnace_misc" | "blast_furnace_search" | "blast_furnace_blocks" | "blast_furnace_misc" | "smoker_search" | "smoker_food" | "stonecutter" | "smithing" | "campfire" | "unknown" | RecipeBookCategories;
    class IronGolemEntity$Cracks extends Internal.Enum<Internal.IronGolemEntity$Cracks> {
        static func_226515_a_(arg0: number): Internal.IronGolemEntity$Cracks;
        static valueOf(arg0: string): Internal.IronGolemEntity$Cracks;
        static values(): Internal.IronGolemEntity$Cracks[];
        static readonly HIGH : Internal.IronGolemEntity$Cracks;
        static readonly MEDIUM : Internal.IronGolemEntity$Cracks;
        static readonly LOW : Internal.IronGolemEntity$Cracks;
        static readonly NONE : Internal.IronGolemEntity$Cracks;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IronGolemEntity$Cracks_ = "none" | "low" | "medium" | "high" | IronGolemEntity$Cracks;
    abstract class AbstractBlock$AbstractBlockState extends Internal.StateHolder<Internal.Block, Internal.BlockState> implements Internal.IBlockState, Internal.ExtendedAbstractBlockState, Internal.BlockStateKJS {
        func_215696_m(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_235785_r_(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_185906_d(): number;
        func_203425_a(arg0: Internal.Block): boolean;
        getOpacityIfCached(): number;
        clearCache(): void;
        func_185888_a(arg0: Internal.World, arg1: BlockPos): number;
        setRequiresToolKJS(arg0: boolean): void;
        setMaterialKJS(arg0: Internal.Material): void;
        func_215700_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.ISelectionContext): Internal.VoxelShape;
        func_227031_a_(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: Hand_, arg3: Internal.BlockRayTraceResult): Internal.ActionResultType;
        func_215682_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Entity, arg3: Internal.Direction_): boolean;
        func_196947_b(arg0: Internal.World, arg1: BlockPos, arg2: Internal.BlockState, arg3: boolean): void;
        func_215686_e(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_215688_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.EntityType<any>): boolean;
        func_185904_a(): Internal.Material;
        func_185902_a(arg0: Internal.Mirror_): Internal.BlockState;
        func_200016_a(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        handler$zjh000$initLightAccessState(arg0: Internal.CallbackInfo): void;
        setDestroySpeedKJS(arg0: number): void;
        setLightEmissionKJS(arg0: number): void;
        func_196957_g(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.PathType_): boolean;
        func_177230_c(): Internal.Block;
        func_224755_d(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        func_200132_m(): boolean;
        func_227032_a_(arg0: Internal.Fluid): boolean;
        func_204519_t(): boolean;
        func_185893_b(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): number;
        func_215702_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): Internal.VoxelShape;
        func_215693_a(arg0: Internal.LootContext$Builder): Internal.List<Internal.ItemStack>;
        func_196953_a(arg0: Internal.BlockItemUseContext): boolean;
        func_215706_a(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: Internal.ItemStack): void;
        func_215704_f(): boolean;
        handler$zlp000$cacheStateTail(ci: Internal.CallbackInfo): void;
        func_215699_b(arg0: Internal.World, arg1: BlockPos): Internal.INamedContainerProvider;
        func_196951_e(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        func_185897_m(): boolean;
        handler$zlp000$cacheStateHead(ci: Internal.CallbackInfo): void;
        func_215691_g(): boolean;
        func_215697_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Block, arg3: BlockPos, arg4: boolean): void;
        func_196955_c(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        func_185911_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): number;
        func_227034_b_(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: Internal.Random): void;
        func_185909_g(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.MaterialColor;
        func_199611_f(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.ISelectionContext): Internal.VoxelShape;
        func_191059_e(arg0: Internal.IBlockReader, arg1: BlockPos): Vec3;
        func_235719_a_(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Entity): boolean;
        func_185901_i(): Internal.BlockRenderType;
        func_235715_a_(arg0: Internal.ITag<Internal.Block>, arg1: ((arg0: Internal.AbstractBlock$AbstractBlockState) => boolean)): boolean;
        func_185887_b(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        func_215695_r(): Internal.SoundType;
        func_185905_o(): Internal.PushReaction;
        func_229980_m_(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_227033_a_(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: Internal.Random): void;
        func_202065_c(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_196942_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.PlayerEntity): void;
        isCacheInvalid(): boolean;
        func_235734_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: number): void;
        func_200131_a(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_209533_a(arg0: BlockPos): number;
        func_204520_s(): Internal.FluidState;
        func_235728_a_(arg0: Internal.World, arg1: BlockPos, arg2: number, arg3: number): boolean;
        func_185907_a(arg0: Internal.Rotation_): Internal.BlockState;
        func_196948_b(arg0: Internal.IWorld, arg1: BlockPos, arg2: number): void;
        func_241483_b_(arg0: Internal.IWorld, arg1: BlockPos, arg2: number, arg3: number): void;
        func_185903_a(arg0: Internal.PlayerEntity, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        func_200015_d(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_215685_b(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.ISelectionContext): Internal.VoxelShape;
        func_200017_a(arg0: Internal.BlockState, arg1: Internal.Direction_): boolean;
        func_241482_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: number, arg3: number): void;
        func_185912_n(): boolean;
        func_196958_f(): boolean;
        func_235783_q_(): boolean;
        func_235714_a_(arg0: Internal.ITag<Internal.Block>): boolean;
        isConditionallyFullOpaque(): boolean;
        func_215690_a(arg0: Internal.World, arg1: Internal.BlockState, arg2: Internal.BlockRayTraceResult, arg3: Internal.ProjectileEntity): void;
        func_215705_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.BlockState, arg3: boolean): void;
        func_235777_m_(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        func_215703_d(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        func_196950_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Entity): void;
        func_235754_c_(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        func_242698_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_, arg3: Internal.BlockVoxelShape_): boolean;
        func_227035_k_(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_196952_d(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        func_196954_c(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        func_196956_a(arg0: Internal.Direction_, arg1: Internal.BlockState, arg2: Internal.IWorld, arg3: BlockPos, arg4: BlockPos): Internal.BlockState;
        func_215692_c(): void;
        get conditionallyFullOpaque(): boolean;
        get opacityIfCached(): number;
        get cacheInvalid(): boolean;
        set materialKJS(arg0: Internal.Material);
        set requiresToolKJS(arg0: boolean);
        set destroySpeedKJS(arg0: number);
        set lightEmissionKJS(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractBlock$AbstractBlockState_ = AbstractBlock$AbstractBlockState;
    class LootParameterSet extends Document.Object {
        toString(): string;
        func_216276_b(): Internal.Set<Internal.LootParameter<any>>;
        func_216277_a(): Internal.Set<Internal.LootParameter<any>>;
        func_227556_a_(arg0: Internal.ValidationTracker, arg1: Internal.IParameterized): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootParameterSet_ = LootParameterSet;
    class DecimalFormat extends Internal.NumberFormat {
        setNegativeSuffix(arg0: string): void;
        setGroupingSize(arg0: number): void;
        formatToCharacterIterator(arg0: any): Internal.AttributedCharacterIterator;
        setGroupingUsed(arg0: boolean): void;
        getGroupingSize(): number;
        setNegativePrefix(arg0: string): void;
        getMinimumFractionDigits(): number;
        setCurrency(arg0: Internal.Currency): void;
        setMultiplier(arg0: number): void;
        setPositiveSuffix(arg0: string): void;
        toLocalizedPattern(): string;
        setMinimumIntegerDigits(arg0: number): void;
        getDecimalFormatSymbols(): Internal.DecimalFormatSymbols;
        getRoundingMode(): Internal.RoundingMode;
        hashCode(): number;
        setDecimalSeparatorAlwaysShown(arg0: boolean): void;
        isParseBigDecimal(): boolean;
        getPositivePrefix(): string;
        setPositivePrefix(arg0: string): void;
        getMultiplier(): number;
        applyPattern(arg0: string): void;
        getCurrency(): Internal.Currency;
        setParseBigDecimal(arg0: boolean): void;
        toPattern(): string;
        setDecimalFormatSymbols(arg0: Internal.DecimalFormatSymbols): void;
        getPositiveSuffix(): string;
        applyLocalizedPattern(arg0: string): void;
        format(arg0: number, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        format(arg0: any, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        format(arg0: number, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        setMinimumFractionDigits(arg0: number): void;
        parse(arg0: string, arg1: Internal.ParsePosition): Internal.Number;
        setMaximumIntegerDigits(arg0: number): void;
        getMaximumIntegerDigits(): number;
        getNegativeSuffix(): string;
        getNegativePrefix(): string;
        getMaximumFractionDigits(): number;
        equals(arg0: any): boolean;
        clone(): any;
        setRoundingMode(arg0: Internal.RoundingMode_): void;
        getMinimumIntegerDigits(): number;
        isDecimalSeparatorAlwaysShown(): boolean;
        setMaximumFractionDigits(arg0: number): void;
        get decimalFormatSymbols(): Internal.DecimalFormatSymbols;
        get decimalSeparatorAlwaysShown(): boolean;
        get positiveSuffix(): string;
        get multiplier(): number;
        get parseBigDecimal(): boolean;
        get groupingSize(): number;
        get positivePrefix(): string;
        get maximumIntegerDigits(): number;
        get roundingMode(): Internal.RoundingMode;
        get maximumFractionDigits(): number;
        get minimumFractionDigits(): number;
        get negativePrefix(): string;
        get currency(): Internal.Currency;
        get negativeSuffix(): string;
        get minimumIntegerDigits(): number;
        set decimalFormatSymbols(arg0: Internal.DecimalFormatSymbols);
        set decimalSeparatorAlwaysShown(arg0: boolean);
        set positiveSuffix(arg0: string);
        set multiplier(arg0: number);
        set groupingUsed(arg0: boolean);
        set parseBigDecimal(arg0: boolean);
        set groupingSize(arg0: number);
        set positivePrefix(arg0: string);
        set maximumIntegerDigits(arg0: number);
        set maximumFractionDigits(arg0: number);
        set roundingMode(arg0: Internal.RoundingMode_);
        set minimumFractionDigits(arg0: number);
        set negativePrefix(arg0: string);
        set currency(arg0: Internal.Currency);
        set minimumIntegerDigits(arg0: number);
        set negativeSuffix(arg0: string);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DecimalFormat_ = DecimalFormat;
    interface Matrix3fExtended {
        rotate(arg0: Internal.Quaternion): void;
        transformVecZ(dir: Internal.Vector3f): number;
        transformVecZ(arg0: number, arg1: number, arg2: number): number;
        transformVecY(dir: Internal.Vector3f): number;
        transformVecY(arg0: number, arg1: number, arg2: number): number;
        transformVecX(arg0: number, arg1: number, arg2: number): number;
        transformVecX(dir: Internal.Vector3f): number;
        computeNormal(arg0: Internal.Direction_): number;
    }
    type Matrix3fExtended_ = Matrix3fExtended;
    class Path extends Document.Object {
        func_75881_a(arg0: Internal.Entity, arg1: number): Vec3;
        func_224771_h(): boolean;
        func_75870_c(): Internal.PathPoint;
        func_224770_k(): BlockPos;
        func_75875_a(): void;
        func_75872_c(arg0: number): void;
        func_189966_g(): Internal.PathPoint[];
        func_189965_h(): Internal.PathPoint[];
        func_224769_l(): number;
        func_242950_i(): Internal.PathPoint;
        func_242945_b(): boolean;
        func_242947_d(arg0: number): BlockPos;
        func_215747_b(arg0: number): void;
        func_242948_g(): BlockPos;
        static func_186311_b(arg0: Internal.PacketBuffer): Internal.Path;
        func_75877_a(arg0: number): Internal.PathPoint;
        func_75874_d(): number;
        func_75873_e(): number;
        func_237225_h_(): Internal.PathPoint;
        func_75876_a(arg0: Internal.Path): boolean;
        toString(): string;
        func_75878_a(arg0: Internal.Entity): Vec3;
        func_75879_b(): boolean;
        func_186309_a(arg0: number, arg1: Internal.PathPoint): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Path_ = Path;
    interface VertexDrain {
        createSink<T>(arg0: Internal.VertexType<T>): T;
    }
    type VertexDrain_ = VertexDrain;
    class PacketDistributor$PacketTarget extends Document.Object {
        getDirection(): Internal.NetworkDirection;
        send(arg0: Internal.IPacket<any>): void;
        get direction(): Internal.NetworkDirection;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PacketDistributor$PacketTarget_ = PacketDistributor$PacketTarget;
    interface MethodTypeDesc extends Internal.ConstantDesc, Internal.TypeDescriptor$OfMethod<Internal.ClassDesc, Internal.MethodTypeDesc> {
        parameterType(arg0: number): Internal.TypeDescriptor$OfField<any>;
        parameterType(arg0: number): Internal.ClassDesc;
        dropParameterTypes(arg0: number, arg1: number): Internal.TypeDescriptor$OfMethod<any, any>;
        dropParameterTypes(arg0: number, arg1: number): Internal.MethodTypeDesc;
        parameterCount(): number;
        changeReturnType(arg0: Internal.ClassDesc): Internal.MethodTypeDesc;
        changeReturnType(arg0: Internal.TypeDescriptor$OfField<any>): Internal.TypeDescriptor$OfMethod<any, any>;
        descriptorString(): string;
        insertParameterTypes(arg0: number, arg1: Internal.ClassDesc[]): Internal.MethodTypeDesc;
        insertParameterTypes(arg0: number, arg1: Internal.TypeDescriptor$OfField[]): Internal.TypeDescriptor$OfMethod<any, any>;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): Internal.MethodType;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): any;
        changeParameterType(arg0: number, arg1: Internal.TypeDescriptor$OfField<any>): Internal.TypeDescriptor$OfMethod<any, any>;
        changeParameterType(arg0: number, arg1: Internal.ClassDesc): Internal.MethodTypeDesc;
        parameterArray(): Internal.ClassDesc[];
        parameterArray(): Internal.TypeDescriptor$OfField[];
        equals(arg0: any): boolean;
        parameterList(): Internal.List<Internal.ClassDesc>;
        displayDescriptor(): string;
        returnType(): Internal.TypeDescriptor$OfField<any>;
        returnType(): Internal.ClassDesc;
    }
    type MethodTypeDesc_ = MethodTypeDesc;
    interface Codec <A> extends Internal.Encoder<A>, Internal.Decoder<A> {
        flatComapMap<S_>(arg0: ((arg0: A) => S_), arg1: ((arg0: S_) => Internal.DataResult<A>)): Internal.Codec<S_>;
        dispatch<E_>(arg0: ((arg0: E_) => A), arg1: ((arg0: A) => Internal.Codec<E_>)): Internal.Codec<E_>;
        dispatch<E_>(arg0: string, arg1: ((arg0: E_) => A), arg2: ((arg0: A) => Internal.Codec<E_>)): Internal.Codec<E_>;
        deprecated(arg0: number): Internal.Codec<A>;
        dispatchMap<E_>(arg0: string, arg1: ((arg0: E_) => A), arg2: ((arg0: A) => Internal.Codec<E_>)): Internal.MapCodec<E_>;
        dispatchMap<E_>(arg0: ((arg0: E_) => A), arg1: ((arg0: A) => Internal.Codec<E_>)): Internal.MapCodec<E_>;
        comapFlatMap<S_>(arg0: ((arg0: A) => Internal.DataResult<S_>), arg1: ((arg0: S_) => A)): Internal.Codec<S_>;
        promotePartial(arg0: ((arg0: string) => void)): Internal.Codec<A>;
        promotePartial(arg0: ((arg0: any) => void)): Internal.Decoder<any>;
        flatXmap<S_>(arg0: ((arg0: A) => Internal.DataResult<S_>), arg1: ((arg0: S_) => Internal.DataResult<A>)): Internal.Codec<S_>;
        fieldOf(arg0: string): Internal.MapDecoder<any>;
        fieldOf(arg0: string): Internal.MapEncoder<any>;
        fieldOf(arg0: string): Internal.MapCodec<A>;
        xmap<S_>(arg0: ((arg0: A) => S_), arg1: ((arg0: S_) => A)): Internal.Codec<S_>;
        listOf(): Internal.Codec<Internal.List<A>>;
        optionalFieldOf(arg0: string): Internal.MapCodec<Internal.Optional<A>>;
        optionalFieldOf(arg0: string, arg1: Internal.Lifecycle, arg2: A, arg3: Internal.Lifecycle): Internal.MapCodec<A>;
        optionalFieldOf(arg0: string, arg1: A, arg2: Internal.Lifecycle): Internal.MapCodec<A>;
        optionalFieldOf(arg0: string, arg1: A): Internal.MapCodec<A>;
        partialDispatch<E_>(arg0: string, arg1: ((arg0: E_) => Internal.DataResult<A>), arg2: ((arg0: A) => Internal.DataResult<Internal.Codec<E_>>)): Internal.Codec<E_>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Decoder<any>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Encoder<any>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Codec<A>;
        orElse(arg0: ((arg0: string) => void), arg1: A): Internal.Codec<A>;
        orElse(arg0: A): Internal.Codec<A>;
        orElse(arg0: Internal.UnaryOperator<string>, arg1: A): Internal.Codec<A>;
        orElseGet(arg0: (() => A)): Internal.Codec<A>;
        orElseGet(arg0: Internal.UnaryOperator<string>, arg1: (() => A)): Internal.Codec<A>;
        orElseGet(arg0: ((arg0: string) => void), arg1: (() => A)): Internal.Codec<A>;
        dispatchStable<E_>(arg0: ((arg0: E_) => A), arg1: ((arg0: A) => Internal.Codec<E_>)): Internal.Codec<E_>;
        stable(): Internal.Codec<A>;
        mapResult(arg0: Internal.Codec$ResultFunction<A>): Internal.Codec<A>;
    }
    type Codec_<A> = Codec<A>;
    class StrongholdLocationCache extends Internal.WorldSavedData {
        getChunkPosList(): Internal.List<Internal.ChunkPos>;
        static getFileId(dimensionType: Internal.DimensionType): string;
        setChunkPosList(positions: Internal.List<Internal.ChunkPos>): void;
        func_189551_b(compoundTag: Internal.CompoundNBT): Internal.CompoundNBT;
        func_76184_a(arg: Internal.CompoundNBT): void;
        get chunkPosList(): Internal.List<Internal.ChunkPos>;
        set chunkPosList(positions: Internal.List<Internal.ChunkPos>);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StrongholdLocationCache_ = StrongholdLocationCache;
    interface IGhostIngredientHandler <T> {
        getTargets<I>(arg0: T, arg1: I, arg2: boolean): Internal.List<Internal.IGhostIngredientHandler$Target<I>>;
        onComplete(): void;
        shouldHighlightTargets(): boolean;
    }
    type IGhostIngredientHandler_<T> = IGhostIngredientHandler<T>;
    class FlamingSittingPhase extends Internal.SittingPhase {
        func_188660_d(): void;
        func_188658_e(): void;
        func_188659_c(): void;
        func_188663_j(): void;
        func_188657_b(): void;
        func_188652_i(): Internal.PhaseType<Internal.FlamingSittingPhase>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FlamingSittingPhase_ = FlamingSittingPhase;
    interface IReputationType {
    }
    type IReputationType_ = IReputationType;
    class NoFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        static readonly field_236558_a_ : Internal.Codec<Internal.NoFeatureConfig>;
        static readonly field_236559_b_ : Internal.NoFeatureConfig;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NoFeatureConfig_ = NoFeatureConfig;
    class FishingLootEventJS extends Internal.LootEventJS {
        addFishing(id: ResourceLocation_, b: ((arg0: Internal.LootBuilder) => void)): void;
        getType(): string;
        getDirectory(): string;
        get type(): string;
        get directory(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FishingLootEventJS_ = FishingLootEventJS;
    class EvokerFangsEntity extends Internal.Entity {
        func_190549_a(arg0: Internal.LivingEntity): void;
        func_213297_N(): Internal.IPacket<any>;
        func_70071_h_(): void;
        func_70103_a(arg0: number): void;
        func_190550_a(arg0: number): number;
        func_190552_j(): Internal.LivingEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EvokerFangsEntity_ = EvokerFangsEntity;
    interface IParticleFactory <T> {
        func_199234_a(arg0: T, arg1: Internal.ClientWorld, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.Particle;
    }
    type IParticleFactory_<T> = IParticleFactory<T>;
    class Products$P16 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P16_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> = Products$P16<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>;
    class PlayerEvent$LoadFromFile extends Internal.PlayerEvent {
        getListenerList(): Internal.ListenerList;
        getPlayerFile(arg0: string): Internal.File;
        getPlayerDirectory(): Internal.File;
        getPlayerUUID(): string;
        get playerUUID(): string;
        get playerDirectory(): Internal.File;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerEvent$LoadFromFile_ = PlayerEvent$LoadFromFile;
    class EntityViewRenderEvent$CameraSetup extends Internal.EntityViewRenderEvent {
        setRoll(arg0: number): void;
        getYaw(): number;
        getListenerList(): Internal.ListenerList;
        getPitch(): number;
        getRoll(): number;
        setPitch(arg0: number): void;
        setYaw(arg0: number): void;
        get listenerList(): Internal.ListenerList;
        get roll(): number;
        get pitch(): number;
        get yaw(): number;
        set roll(arg0: number);
        set pitch(arg0: number);
        set yaw(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityViewRenderEvent$CameraSetup_ = EntityViewRenderEvent$CameraSetup;
    abstract class Biome$TemperatureModifier extends Internal.Enum<Internal.Biome$TemperatureModifier> implements Internal.IStringSerializable {
        func_241852_a(arg0: BlockPos, arg1: number): number;
        static valueOf(arg0: string): Internal.Biome$TemperatureModifier;
        func_176610_l(): string;
        static values(): Internal.Biome$TemperatureModifier[];
        static func_242477_a(arg0: string): Internal.Biome$TemperatureModifier;
        func_242478_b(): string;
        static readonly field_242473_c : Internal.Codec<Internal.Biome$TemperatureModifier>;
        static readonly NONE : Internal.Biome$TemperatureModifier;
        static readonly FROZEN : Internal.Biome$TemperatureModifier;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Biome$TemperatureModifier_ = "none" | "frozen" | Biome$TemperatureModifier;
    class SoundEventAccessor extends Document.Object implements Internal.ISoundEventAccessor<Internal.Sound> {
        func_148720_g(): Internal.Sound;
        func_148720_g(): any;
        func_217867_a(arg0: Internal.SoundEngine): void;
        func_188715_a(arg0: Internal.ISoundEventAccessor<Internal.Sound>): void;
        func_148721_a(): number;
        func_188712_c(): Internal.ITextComponent;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SoundEventAccessor_ = SoundEventAccessor;
    class PointOfInterestDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_217691_a(arg0: Internal.PointOfInterestDebugRenderer$POIInfo): void;
        func_217692_a(arg0: Internal.PointOfInterestDebugRenderer$BrainInfo): void;
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_217706_a(arg0: BlockPos, arg1: number): void;
        func_217698_a(arg0: BlockPos): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PointOfInterestDebugRenderer_ = PointOfInterestDebugRenderer;
    class SWorldSpawnChangedPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_244313_c(): number;
        func_240832_b_(): BlockPos;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SWorldSpawnChangedPacket_ = SWorldSpawnChangedPacket;
    class SectionPos extends Vec3i {
        static func_218158_a(arg0: Internal.SectionPos, arg1: number): Internal.Stream<Internal.SectionPos>;
        func_218152_g(): number;
        static func_218159_a(arg0: number): number;
        static func_218154_a(arg0: number, arg1: number, arg2: number): Internal.SectionPos;
        func_218151_e(): number;
        static func_218156_a(arg0: Internal.ChunkPos, arg1: number): Internal.SectionPos;
        static func_218153_d(arg0: number): number;
        static func_218157_a(arg0: Internal.Entity): Internal.SectionPos;
        static func_218150_b(arg0: BlockPos): number;
        static func_218171_b(arg0: number): number;
        static func_218172_a(arg0: number, arg1: Internal.Direction_): number;
        static func_218173_b(arg0: number): number;
        static func_218174_a(arg0: number, arg1: number, arg2: number, arg3: number): number;
        func_218145_w(): Internal.Stream<BlockPos>;
        func_218146_v(): number;
        static func_243641_a(arg0: number): number;
        static func_218170_a(arg0: number): Internal.SectionPos;
        func_218147_s(): BlockPos;
        func_218143_r(): number;
        func_218160_t(): BlockPos;
        static func_218169_f(arg0: number): number;
        func_243646_f(arg0: number): number;
        func_218164_f(): number;
        func_218149_a(): number;
        func_243647_g(arg0: number): BlockPos;
        func_218165_h(): number;
        func_218148_c(): number;
        static func_218162_e(arg0: number): number;
        func_243644_d(arg0: number): number;
        static func_218142_c(arg0: number): number;
        func_243645_e(arg0: number): number;
        static func_218168_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.Stream<Internal.SectionPos>;
        static func_218166_b(arg0: number, arg1: number, arg2: number): number;
        static func_218144_c(arg0: number): number;
        static func_218167_a(arg0: BlockPos): Internal.SectionPos;
        static func_243642_b(arg0: number): number;
        func_218163_b(): number;
        static func_243643_c(arg0: number): number;
        func_218161_d(): number;
        static func_229421_b_(arg0: Internal.ChunkPos, arg1: number): Internal.Stream<Internal.SectionPos>;
        func_218155_u(): Internal.ChunkPos;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SectionPos_ = SectionPos;
    interface ChangeListener <T> {
        onChanged(arg0: T): void;
    }
    type ChangeListener_<T> = ((arg0: T) => void) | ChangeListener<T>;
    class InputMappings$Input extends Document.Object {
        func_237520_d_(): Internal.ITextComponent;
        func_197935_d(): string;
        func_197937_c(): number;
        func_197938_b(): Internal.InputMappings$Type;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        func_241552_e_(): Internal.OptionalInt;
        static readonly field_199875_d : {"key.keyboard.period":Internal.InputMappings$Input,"key.mouse.middle":Internal.InputMappings$Input,"key.keyboard.enter":Internal.InputMappings$Input,"key.mouse.right":Internal.InputMappings$Input,"key.keyboard.up":Internal.InputMappings$Input,"key.keyboard.f8":Internal.InputMappings$Input,"key.keyboard.left.control":Internal.InputMappings$Input,"key.keyboard.f9":Internal.InputMappings$Input,"key.keyboard.f6":Internal.InputMappings$Input,"key.keyboard.f7":Internal.InputMappings$Input,"key.keyboard.keypad.equal":Internal.InputMappings$Input,"key.keyboard.f1":Internal.InputMappings$Input,"key.keyboard.comma":Internal.InputMappings$Input,"key.keyboard.f4":Internal.InputMappings$Input,"key.keyboard.f5":Internal.InputMappings$Input,"key.keyboard.f2":Internal.InputMappings$Input,"key.keyboard.f3":Internal.InputMappings$Input,"key.keyboard.world.1":Internal.InputMappings$Input,"key.keyboard.right.bracket":Internal.InputMappings$Input,"key.keyboard.keypad.subtract":Internal.InputMappings$Input,"key.keyboard.world.2":Internal.InputMappings$Input,"key.keyboard.left.win":Internal.InputMappings$Input,"key.keyboard.home":Internal.InputMappings$Input,"key.keyboard.scroll.lock":Internal.InputMappings$Input,"key.keyboard.9":Internal.InputMappings$Input,"key.keyboard.8":Internal.InputMappings$Input,"key.keyboard.left.bracket":Internal.InputMappings$Input,"key.keyboard.backspace":Internal.InputMappings$Input,"key.mouse.left":Internal.InputMappings$Input,"key.keyboard.left":Internal.InputMappings$Input,"key.keyboard.equal":Internal.InputMappings$Input,"key.keyboard.right.alt":Internal.InputMappings$Input,"key.keyboard.keypad.add":Internal.InputMappings$Input,"key.keyboard.slash":Internal.InputMappings$Input,"key.keyboard.left.alt":Internal.InputMappings$Input,"key.keyboard.grave.accent":Internal.InputMappings$Input,"key.keyboard.5":Internal.InputMappings$Input,"key.keyboard.4":Internal.InputMappings$Input,"key.keyboard.7":Internal.InputMappings$Input,"key.keyboard.semicolon":Internal.InputMappings$Input,"key.keyboard.6":Internal.InputMappings$Input,"key.keyboard.1":Internal.InputMappings$Input,"key.keyboard.0":Internal.InputMappings$Input,"key.keyboard.keypad.enter":Internal.InputMappings$Input,"key.keyboard.3":Internal.InputMappings$Input,"key.keyboard.2":Internal.InputMappings$Input,"key.keyboard.tab":Internal.InputMappings$Input,"key.keyboard.apostrophe":Internal.InputMappings$Input,"key.keyboard.unknown":Internal.InputMappings$Input,"key.keyboard.f22":Internal.InputMappings$Input,"key.keyboard.f23":Internal.InputMappings$Input,"key.keyboard.f20":Internal.InputMappings$Input,"key.keyboard.keypad.0":Internal.InputMappings$Input,"key.keyboard.keypad.decimal":Internal.InputMappings$Input,"key.keyboard.f21":Internal.InputMappings$Input,"key.keyboard.keypad.1":Internal.InputMappings$Input,"key.keyboard.print.screen":Internal.InputMappings$Input,"key.keyboard.page.up":Internal.InputMappings$Input,"key.keyboard.pause":Internal.InputMappings$Input,"key.keyboard.right.shift":Internal.InputMappings$Input,"key.keyboard.y":Internal.InputMappings$Input,"key.keyboard.x":Internal.InputMappings$Input,"key.keyboard.z":Internal.InputMappings$Input,"key.keyboard.right.win":Internal.InputMappings$Input,"key.keyboard.keypad.2":Internal.InputMappings$Input,"key.keyboard.delete":Internal.InputMappings$Input,"key.keyboard.keypad.3":Internal.InputMappings$Input,"key.keyboard.f24":Internal.InputMappings$Input,"key.keyboard.keypad.4":Internal.InputMappings$Input,"key.keyboard.f25":Internal.InputMappings$Input,"key.keyboard.keypad.5":Internal.InputMappings$Input,"key.keyboard.keypad.6":Internal.InputMappings$Input,"key.keyboard.keypad.7":Internal.InputMappings$Input,"key.keyboard.keypad.8":Internal.InputMappings$Input,"key.keyboard.keypad.9":Internal.InputMappings$Input,"key.keyboard.e":Internal.InputMappings$Input,"key.keyboard.d":Internal.InputMappings$Input,"key.keyboard.g":Internal.InputMappings$Input,"key.keyboard.f":Internal.InputMappings$Input,"key.keyboard.a":Internal.InputMappings$Input,"key.keyboard.c":Internal.InputMappings$Input,"key.keyboard.b":Internal.InputMappings$Input,"key.keyboard.u":Internal.InputMappings$Input,"key.keyboard.t":Internal.InputMappings$Input,"key.keyboard.w":Internal.InputMappings$Input,"key.keyboard.v":Internal.InputMappings$Input,"key.keyboard.num.lock":Internal.InputMappings$Input,"key.keyboard.q":Internal.InputMappings$Input,"key.keyboard.insert":Internal.InputMappings$Input,"key.keyboard.p":Internal.InputMappings$Input,"key.keyboard.s":Internal.InputMappings$Input,"key.keyboard.r":Internal.InputMappings$Input,"key.keyboard.m":Internal.InputMappings$Input,"key.keyboard.menu":Internal.InputMappings$Input,"key.keyboard.l":Internal.InputMappings$Input,"key.keyboard.o":Internal.InputMappings$Input,"key.keyboard.n":Internal.InputMappings$Input,"key.keyboard.i":Internal.InputMappings$Input,"key.keyboard.h":Internal.InputMappings$Input,"key.keyboard.k":Internal.InputMappings$Input,"key.keyboard.j":Internal.InputMappings$Input,"key.keyboard.escape":Internal.InputMappings$Input,"key.keyboard.end":Internal.InputMappings$Input,"key.keyboard.keypad.multiply":Internal.InputMappings$Input,"key.keyboard.right.control":Internal.InputMappings$Input,"key.mouse.8":Internal.InputMappings$Input,"key.keyboard.left.shift":Internal.InputMappings$Input,"key.keyboard.f11":Internal.InputMappings$Input,"key.keyboard.f12":Internal.InputMappings$Input,"key.keyboard.space":Internal.InputMappings$Input,"key.keyboard.f10":Internal.InputMappings$Input,"key.keyboard.keypad.divide":Internal.InputMappings$Input,"key.mouse.6":Internal.InputMappings$Input,"key.mouse.7":Internal.InputMappings$Input,"key.keyboard.minus":Internal.InputMappings$Input,"key.mouse.4":Internal.InputMappings$Input,"key.mouse.5":Internal.InputMappings$Input,"key.keyboard.right":Internal.InputMappings$Input,"key.keyboard.down":Internal.InputMappings$Input,"key.keyboard.caps.lock":Internal.InputMappings$Input,"key.keyboard.f15":Internal.InputMappings$Input,"key.keyboard.page.down":Internal.InputMappings$Input,"key.keyboard.f16":Internal.InputMappings$Input,"key.keyboard.backslash":Internal.InputMappings$Input,"key.keyboard.f13":Internal.InputMappings$Input,"key.keyboard.f14":Internal.InputMappings$Input,"key.keyboard.f19":Internal.InputMappings$Input,"key.keyboard.f17":Internal.InputMappings$Input,"key.keyboard.f18":Internal.InputMappings$Input};
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InputMappings$Input_ = InputMappings$Input;
    interface IForgeWorldServer extends Internal.IForgeWorld {
        getWorldServer(): Internal.ServerWorld;
    }
    type IForgeWorldServer_ = IForgeWorldServer;
    class RecipeBookStatus extends Document.Object {
        func_242158_b(arg0: Internal.RecipeBookCategory_): boolean;
        func_242149_a(): Internal.RecipeBookStatus;
        func_242159_b(arg0: Internal.RecipeBookCategory_, arg1: boolean): void;
        static func_242157_a(arg0: Internal.PacketBuffer): Internal.RecipeBookStatus;
        hashCode(): number;
        equals(arg0: any): boolean;
        func_242161_b(arg0: Internal.PacketBuffer): void;
        func_242151_a(arg0: Internal.RecipeBookCategory_): boolean;
        func_242152_a(arg0: Internal.RecipeBookCategory_, arg1: boolean): void;
        func_242160_b(arg0: Internal.CompoundNBT): void;
        func_242150_a(arg0: Internal.RecipeBookStatus): void;
        static func_242154_a(arg0: Internal.CompoundNBT): Internal.RecipeBookStatus;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecipeBookStatus_ = RecipeBookStatus;
    abstract class FileSystemProvider extends Document.Object {
        isSameFile(arg0: java_.nio.file.Path, arg1: java_.nio.file.Path): boolean;
        getFileStore(arg0: java_.nio.file.Path): Internal.FileStore;
        newByteChannel(arg0: java_.nio.file.Path, arg1: Internal.Set<Internal.OpenOption>, arg2: any[]): Internal.SeekableByteChannel;
        newAsynchronousFileChannel(arg0: java_.nio.file.Path, arg1: Internal.Set<Internal.OpenOption>, arg2: Internal.ExecutorService, arg3: any[]): Internal.AsynchronousFileChannel;
        getFileAttributeView<V_>(arg0: java_.nio.file.Path, arg1: Internal.Class_<V_>, arg2: any[]): V_;
        createSymbolicLink(arg0: java_.nio.file.Path, arg1: java_.nio.file.Path, arg2: any[]): void;
        static installedProviders(): Internal.List<Internal.FileSystemProvider>;
        delete(arg0: java_.nio.file.Path): void;
        createLink(arg0: java_.nio.file.Path, arg1: java_.nio.file.Path): void;
        setAttribute(arg0: java_.nio.file.Path, arg1: string, arg2: any, arg3: any[]): void;
        newFileChannel(arg0: java_.nio.file.Path, arg1: Internal.Set<Internal.OpenOption>, arg2: any[]): Internal.FileChannel;
        newInputStream(arg0: java_.nio.file.Path, arg1: Internal.OpenOption[]): Internal.InputStream;
        readAttributes<A_>(arg0: java_.nio.file.Path, arg1: Internal.Class_<A_>, arg2: any[]): A_;
        readAttributes(arg0: java_.nio.file.Path, arg1: string, arg2: any[]): Internal.Map<string, any>;
        newOutputStream(arg0: java_.nio.file.Path, arg1: Internal.OpenOption[]): Internal.OutputStream;
        getPath(arg0: Internal.URI): java_.nio.file.Path;
        createDirectory(arg0: java_.nio.file.Path, arg1: any[]): void;
        copy(arg0: java_.nio.file.Path, arg1: java_.nio.file.Path, arg2: any[]): void;
        move(arg0: java_.nio.file.Path, arg1: java_.nio.file.Path, arg2: any[]): void;
        getScheme(): string;
        newFileSystem(arg0: Internal.URI, arg1: Internal.Map_<string, any>): Internal.FileSystem;
        newFileSystem(arg0: java_.nio.file.Path, arg1: Internal.Map_<string, any>): Internal.FileSystem;
        deleteIfExists(arg0: java_.nio.file.Path): boolean;
        newDirectoryStream(arg0: java_.nio.file.Path, arg1: ((arg0: java_.nio.file.Path) => boolean)): Internal.DirectoryStream<java_.nio.file.Path>;
        getFileSystem(arg0: Internal.URI): Internal.FileSystem;
        checkAccess(arg0: java_.nio.file.Path, arg1: any[]): void;
        readSymbolicLink(arg0: java_.nio.file.Path): java_.nio.file.Path;
        isHidden(arg0: java_.nio.file.Path): boolean;
        exists(arg0: java_.nio.file.Path, arg1: any[]): boolean;
        readAttributesIfExists<A_>(arg0: java_.nio.file.Path, arg1: Internal.Class_<A_>, arg2: any[]): A_;
        get scheme(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FileSystemProvider_ = FileSystemProvider;
    class ClientChunkProvider extends Internal.AbstractChunkProvider implements Internal.ChunkStatusListenerManager {
        func_217251_d(arg0: number, arg1: number): void;
        func_212863_j_(): Internal.WorldLightManager;
        func_212864_k_(): Internal.IBlockReader;
        func_212849_a_(arg0: number, arg1: number, arg2: Internal.ChunkStatus, arg3: boolean): Internal.IChunk;
        func_212849_a_(arg0: number, arg1: number, arg2: Internal.ChunkStatus, arg3: boolean): Internal.Chunk;
        func_73234_b(arg0: number, arg1: number): void;
        func_217204_a(arg0: Internal.Entity): boolean;
        func_73148_d(): string;
        func_228313_a_(arg0: number, arg1: number, arg2: Internal.BiomeContainer, arg3: Internal.PacketBuffer, arg4: Internal.CompoundNBT, arg5: number, arg6: boolean): Internal.Chunk;
        func_222866_a(arg0: BlockPos): boolean;
        func_217201_a(arg0: Internal.LightType_, arg1: Internal.SectionPos): void;
        func_222865_a(arg0: Internal.ChunkPos): boolean;
        func_217252_g(): number;
        func_217207_a(arg0: (() => boolean)): void;
        func_217248_a(arg0: number): void;
        setListener(listener: Internal.ChunkStatusListener): void;
        field_217255_c : Internal.WorldLightManager;
        field_217256_d : Internal.ClientChunkProvider$ChunkArray;
        set listener(listener: Internal.ChunkStatusListener);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientChunkProvider_ = ClientChunkProvider;
    interface IForgeEntity extends Internal.ICapabilitySerializable<Internal.CompoundNBT> {
        shouldRiderSit(): boolean;
        canUpdate(): boolean;
        canUpdate(arg0: boolean): void;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        captureDrops(arg0: Internal.Collection<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        onRemovedFromWorld(): void;
        isMultipartEntity(): boolean;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.CompoundNBT): void;
        getPersistentData(): Internal.CompoundNBT;
        getEntity(): Internal.Entity;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        onAddedToWorld(): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        revive(): void;
        canTrample(arg0: Internal.BlockState, arg1: BlockPos, arg2: number): boolean;
        isAddedToWorld(): boolean;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
    }
    type IForgeEntity_ = IForgeEntity;
    class SlimeEntity extends Internal.MobEntity implements Internal.IMob {
        func_200600_R(): Internal.EntityType<Internal.SlimeEntity>;
        func_70646_bf(): number;
        func_70100_b_(arg0: Internal.PlayerEntity): void;
        func_70108_f(arg0: Internal.Entity): void;
        static func_223366_c(arg0: Internal.EntityType<Internal.SlimeEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70071_h_(): void;
        remove(arg0: boolean): void;
        func_213305_a(arg0: Internal.Pose_): Internal.EntitySize;
        func_70809_q(): number;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_213323_x_(): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_189101_db(): boolean;
        field_70813_a : number;
        field_70812_c : number;
        field_70811_b : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SlimeEntity_ = SlimeEntity;
    class VersionData extends Document.Object {
        func_237328_e_(): boolean;
        func_237326_c_(): string;
        func_237327_d_(): number;
        func_237325_b_(): number;
        static func_237324_a_(arg0: Internal.Dynamic<any>): Internal.VersionData;
        func_237323_a_(): number;
        readonly field_237321_d_ : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VersionData_ = VersionData;
    class ClientPlayerNetworkEvent extends net.minecraftforge.eventbus.api.Event {
        getNetworkManager(): Internal.NetworkManager;
        getPlayer(): Internal.ClientPlayerEntity;
        getListenerList(): Internal.ListenerList;
        getController(): Internal.PlayerController;
        get networkManager(): Internal.NetworkManager;
        get controller(): Internal.PlayerController;
        get listenerList(): Internal.ListenerList;
        get player(): Internal.ClientPlayerEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientPlayerNetworkEvent_ = ClientPlayerNetworkEvent;
    interface LogBuilder {
        withLocation(location: Internal.StackTraceElement): Internal.LogBuilder;
        withLocation(): Internal.LogBuilder;
        log(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        log(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        log(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        log(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        log(message: string, p0: any, p1: any, p2: any, p3: any): void;
        log(message: string, p0: any): void;
        log(): void;
        log(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        log(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        log(messageSupplier: org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.message.Message>): void;
        log(message: org.apache.logging.log4j.message.Message): void;
        log(message: string, params: org.apache.logging.log4j.util.Supplier<any>[]): void;
        log(message: string, params: any[]): void;
        log(message: string): void;
        log(message: string, p0: any, p1: any, p2: any): void;
        log(message: string, p0: any, p1: any): void;
        log(message: Internal.CharSequence): void;
        log(message: any): void;
        withMarker(marker: Internal.Marker): Internal.LogBuilder;
        withThrowable(throwable: Internal.Throwable): Internal.LogBuilder;
    }
    type LogBuilder_ = LogBuilder;
    interface DataInput {
        readLine(): string;
        readChar(): string;
        skipBytes(arg0: number): number;
        readLong(): number;
        readUTF(): string;
        readShort(): number;
        readDouble(): number;
        readFully(arg0: number[]): void;
        readFully(arg0: number[], arg1: number, arg2: number): void;
        readFloat(): number;
        readBoolean(): boolean;
        readByte(): number;
        readInt(): number;
        readUnsignedByte(): number;
        readUnsignedShort(): number;
    }
    type DataInput_ = DataInput;
    class PointOfInterestDebugRenderer$POIInfo extends Document.Object {
        field_217756_b : string;
        field_217757_c : number;
        readonly field_217755_a : BlockPos;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PointOfInterestDebugRenderer$POIInfo_ = PointOfInterestDebugRenderer$POIInfo;
    abstract class RenderTooltipEvent$Post extends Internal.RenderTooltipEvent {
        getHeight(): number;
        getListenerList(): Internal.ListenerList;
        getWidth(): number;
        get listenerList(): Internal.ListenerList;
        get width(): number;
        get height(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderTooltipEvent$Post_ = RenderTooltipEvent$Post;
    class StrayEntity extends Internal.AbstractSkeletonEntity {
        static func_223327_b(arg0: Internal.EntityType<Internal.StrayEntity>, arg1: Internal.IServerWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StrayEntity_ = StrayEntity;
    class SpellcastingIllagerEntity$SpellType extends Internal.Enum<Internal.SpellcastingIllagerEntity$SpellType> {
        static valueOf(arg0: string): Internal.SpellcastingIllagerEntity$SpellType;
        static values(): Internal.SpellcastingIllagerEntity$SpellType[];
        static func_193337_a(arg0: number): Internal.SpellcastingIllagerEntity$SpellType;
        static readonly SUMMON_VEX : Internal.SpellcastingIllagerEntity$SpellType;
        static readonly DISAPPEAR : Internal.SpellcastingIllagerEntity$SpellType;
        static readonly FANGS : Internal.SpellcastingIllagerEntity$SpellType;
        static readonly NONE : Internal.SpellcastingIllagerEntity$SpellType;
        static readonly WOLOLO : Internal.SpellcastingIllagerEntity$SpellType;
        static readonly BLINDNESS : Internal.SpellcastingIllagerEntity$SpellType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpellcastingIllagerEntity$SpellType_ = "none" | "summon_vex" | "fangs" | "wololo" | "disappear" | "blindness" | SpellcastingIllagerEntity$SpellType;
    interface ObjectSet <K> extends Internal.ObjectCollection<K>, Internal.Set<K> {
        iterator(): Internal.ObjectIterator<K>;
        iterator(): Internal.Iterator<any>;
    }
    type ObjectSet_<K> = ObjectSet<K>;
    interface DoubleUnaryOperator {
        applyAsDouble(arg0: number): number;
        compose(arg0: ((arg0: number) => number)): Internal.DoubleUnaryOperator;
        andThen(arg0: ((arg0: number) => number)): Internal.DoubleUnaryOperator;
    }
    type DoubleUnaryOperator_ = ((arg0: number) => number) | DoubleUnaryOperator;
    class SimpleBlockStateProvider extends Internal.BlockStateProvider {
        func_225574_a_(arg0: Internal.Random, arg1: BlockPos): Internal.BlockState;
        static readonly field_236809_b_ : Internal.Codec<Internal.SimpleBlockStateProvider>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SimpleBlockStateProvider_ = SimpleBlockStateProvider;
    interface ISuggestionProvider {
        func_197010_l(): Internal.Collection<ResourceLocation>;
        func_197012_k(): Internal.Collection<string>;
        func_197034_c(arg0: number): boolean;
        func_199612_m(): Internal.Stream<ResourceLocation>;
        func_197009_a(arg0: Internal.CommandContext<Internal.ISuggestionProvider>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        func_197011_j(): Internal.Collection<string>;
        func_241861_q(): Internal.DynamicRegistries;
        func_230390_p_(): Internal.Set<Internal.RegistryKey<Internal.World>>;
        func_217293_r(): Internal.Collection<Internal.ISuggestionProvider$Coordinates>;
        func_217294_q(): Internal.Collection<Internal.ISuggestionProvider$Coordinates>;
        func_211270_p(): Internal.Collection<string>;
    }
    type ISuggestionProvider_ = ISuggestionProvider;
    interface StringBuilderAppendable {
        appendString(arg0: Internal.StringBuilder): void;
    }
    type StringBuilderAppendable_ = StringBuilderAppendable;
    class SphereReplaceConfig extends Document.Object implements Internal.IFeatureConfig {
        readonly field_242809_d : number;
        readonly field_202434_d : Internal.List<Internal.BlockState>;
        static readonly field_236516_a_ : Internal.Codec<Internal.SphereReplaceConfig>;
        readonly field_202432_b : Internal.FeatureSpread;
        readonly field_214693_a : Internal.BlockState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SphereReplaceConfig_ = SphereReplaceConfig;
    interface Constant <T> extends Internal.Comparable<T> {
        name(): string;
        id(): number;
    }
    type Constant_<T> = Constant<T>;
    abstract class DynamicConstantDesc <T> extends Document.Object implements Internal.ConstantDesc {
        static ofCanonical<T_>(arg0: Internal.DirectMethodHandleDesc, arg1: string, arg2: Internal.ClassDesc, arg3: Internal.ConstantDesc[]): Internal.ConstantDesc;
        constantType(): Internal.ClassDesc;
        bootstrapMethod(): Internal.DirectMethodHandleDesc;
        constantName(): string;
        hashCode(): number;
        static of<T_>(arg0: Internal.DirectMethodHandleDesc, arg1: Internal.ConstantDesc[]): Internal.DynamicConstantDesc<T_>;
        static of<T_>(arg0: Internal.DirectMethodHandleDesc): Internal.DynamicConstantDesc<T_>;
        equals(arg0: any): boolean;
        bootstrapArgsList(): Internal.List<Internal.ConstantDesc>;
        bootstrapArgs(): Internal.ConstantDesc[];
        static ofNamed<T_>(arg0: Internal.DirectMethodHandleDesc, arg1: string, arg2: Internal.ClassDesc, arg3: Internal.ConstantDesc[]): Internal.DynamicConstantDesc<T_>;
        toString(): string;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): T;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DynamicConstantDesc_<T> = DynamicConstantDesc<T>;
    interface IAdvancedRegistration {
        getJeiHelpers(): Internal.IJeiHelpers;
        addRecipeManagerPlugin(arg0: Internal.IRecipeManagerPlugin): void;
    }
    type IAdvancedRegistration_ = IAdvancedRegistration;
    abstract class PlayerList extends Document.Object {
        func_72380_a(arg0: Internal.ServerPlayerEntity): Internal.CompoundNBT;
        func_177452_b(arg0: Internal.PlayerEntity, arg1: Internal.ITextComponent_): void;
        func_232642_a_(arg0: Internal.IPacket<any>, arg1: Internal.RegistryKey<Internal.World>): void;
        removePlayer(arg0: Internal.ServerPlayerEntity): boolean;
        func_72394_k(): number;
        addPlayer(arg0: Internal.ServerPlayerEntity): boolean;
        func_72352_l(): number;
        func_212504_a(arg0: Internal.ServerWorld): void;
        func_72392_r(): void;
        func_187244_a(): void;
        func_152599_k(): Internal.WhiteList;
        func_187243_f(arg0: Internal.ServerPlayerEntity): void;
        func_193244_w(): void;
        func_72374_b(): void;
        func_192054_h(arg0: Internal.ServerPlayerEntity): Internal.PlayerAdvancements;
        func_152607_e(arg0: Internal.GameProfile): boolean;
        func_206257_x(): boolean;
        func_72355_a(arg0: Internal.NetworkManager, arg1: Internal.ServerPlayerEntity): void;
        func_152603_m(): Internal.OpList;
        func_152605_a(arg0: Internal.GameProfile): void;
        func_72363_f(): Internal.IPBanList;
        func_72382_j(arg0: string): Internal.List<Internal.ServerPlayerEntity>;
        func_72369_d(): string[];
        func_72367_e(arg0: Internal.ServerPlayerEntity): void;
        func_72365_p(): Internal.MinecraftServer;
        func_148540_a(arg0: Internal.IPacket<any>): void;
        func_206258_a(arg0: Internal.SocketAddress, arg1: Internal.GameProfile): Internal.ITextComponent;
        func_72378_q(): Internal.CompoundNBT;
        func_177453_a(arg0: Internal.PlayerEntity, arg1: Internal.ITextComponent_): void;
        func_232644_a_(arg0: Internal.ServerPlayerEntity, arg1: boolean): Internal.ServerPlayerEntity;
        func_177451_a(arg0: Internal.UUID): Internal.ServerPlayerEntity;
        func_72387_b(arg0: boolean): void;
        func_217884_a(arg0: number): void;
        func_232641_a_(arg0: Internal.ITextComponent_, arg1: Internal.ChatType_, arg2: Internal.UUID): void;
        func_152596_g(arg0: Internal.GameProfile): boolean;
        func_152610_b(arg0: Internal.GameProfile): void;
        func_152612_a(arg0: string): Internal.ServerPlayerEntity;
        func_72395_o(): number;
        func_152598_l(): string[];
        func_152606_n(): string[];
        func_183023_f(arg0: Internal.GameProfile): boolean;
        func_72354_b(arg0: Internal.ServerPlayerEntity, arg1: Internal.ServerWorld): void;
        func_72371_a(arg0: boolean): void;
        func_152608_h(): Internal.BanList;
        func_152604_a(arg0: Internal.GameType_): void;
        func_72389_g(): void;
        func_72383_n(): boolean;
        func_72385_f(arg0: Internal.ServerPlayerEntity): void;
        func_148545_a(arg0: Internal.GameProfile): Internal.ServerPlayerEntity;
        func_148543_a(arg0: Internal.PlayerEntity, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.RegistryKey<Internal.World>, arg6: Internal.IPacket<any>): void;
        func_152602_a(arg0: Internal.PlayerEntity): Internal.ServerStatisticsManager;
        func_181057_v(): Internal.List<Internal.ServerPlayerEntity>;
        static readonly field_152613_a : Internal.File;
        static readonly field_152614_b : Internal.File;
        static readonly field_152615_c : Internal.File;
        static readonly field_152616_d : Internal.File;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerList_ = PlayerList;
    interface ByteChannel extends Internal.ReadableByteChannel, Internal.WritableByteChannel {
    }
    type ByteChannel_ = ByteChannel;
    class BeaconContainer extends Internal.Container {
        func_216967_f(): Internal.Effect;
        func_216969_e(): number;
        func_216968_g(): Internal.Effect;
        func_216966_c(arg0: number, arg1: number): void;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_216970_h(): boolean;
        func_75137_b(arg0: number, arg1: number): void;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BeaconContainer_ = BeaconContainer;
    interface TemporalQuery <R> {
        queryFrom(arg0: Internal.TemporalAccessor): R;
    }
    type TemporalQuery_<R> = ((arg0: Internal.TemporalAccessor) => R) | TemporalQuery<R>;
    class GuiScreenEvent$InitGuiEvent extends Internal.GuiScreenEvent {
        getListenerList(): Internal.ListenerList;
        getWidgetList(): Internal.List<Internal.Widget>;
        addWidget(arg0: Internal.Widget): void;
        removeWidget(arg0: Internal.Widget): void;
        get listenerList(): Internal.ListenerList;
        get widgetList(): Internal.List<Internal.Widget>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$InitGuiEvent_ = GuiScreenEvent$InitGuiEvent;
    class ResourcePackType extends Internal.Enum<Internal.ResourcePackType> {
        static valueOf(arg0: string): Internal.ResourcePackType;
        static values(): Internal.ResourcePackType[];
        func_198956_a(): string;
        static readonly CLIENT_RESOURCES : Internal.ResourcePackType;
        static readonly SERVER_DATA : Internal.ResourcePackType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ResourcePackType_ = "client_resources" | "server_data" | ResourcePackType;
    interface DataFixer {
        update<T>(arg0: Internal.DSL$TypeReference, arg1: Internal.Dynamic<T>, arg2: number, arg3: number): Internal.Dynamic<T>;
        getSchema(arg0: number): Internal.Schema;
    }
    type DataFixer_ = DataFixer;
    class WorldGenRegion extends Document.Object implements Internal.ISeedReader {
        func_241828_r(): Internal.DynamicRegistries;
        func_212866_a_(arg0: number, arg1: number): Internal.IChunk;
        func_225524_e_(): Internal.WorldLightManager;
        func_225523_d_(): Internal.BiomeManager;
        func_201674_k(): Internal.Random;
        func_72912_H(): Internal.IWorldInfo;
        func_201679_a(): number;
        func_175647_a<T_>(arg0: Internal.Class_<T_>, arg1: Internal.AxisAlignedBB, arg2: ((arg0: T_) => boolean)): Internal.List<T_>;
        func_241211_a_(arg0: BlockPos, arg1: Internal.BlockState, arg2: number, arg3: number): boolean;
        func_225604_a_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_190525_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: ((arg0: Internal.Entity) => boolean)): Internal.PlayerEntity;
        func_205220_G_(): Internal.ITickList<Internal.Block>;
        func_201680_b(): number;
        func_241827_a(arg0: Internal.SectionPos, arg1: Internal.Structure<any>): Internal.Stream<Internal.StructureStart<any>>;
        func_72863_F(): Internal.AbstractChunkProvider;
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
        func_181545_F(): number;
        func_175649_E(arg0: BlockPos): Internal.DifficultyInstance;
        func_175674_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: ((arg0: Internal.Entity) => boolean)): Internal.List<Internal.Entity>;
        func_72905_C(): number;
        func_195594_a(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_230487_a_(arg0: Internal.Direction_, arg1: boolean): number;
        func_175657_ab(): number;
        func_241212_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity, arg3: number): boolean;
        func_230315_m_(): Internal.DimensionType;
        func_217353_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus, arg3: boolean): Internal.IChunk;
        func_217375_a(arg0: BlockPos, arg1: ((arg0: Internal.BlockState) => boolean)): boolean;
        func_184133_a(arg0: Internal.PlayerEntity, arg1: BlockPos, arg2: Internal.SoundEvent, arg3: Internal.SoundCategory_, arg4: number, arg5: number): void;
        func_201676_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_201672_e(): Internal.ServerWorld;
        func_201670_d(): boolean;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_217378_a(arg0: Internal.PlayerEntity, arg1: number, arg2: BlockPos, arg3: number): void;
        func_217376_c(arg0: Internal.Entity): boolean;
        func_217354_b(arg0: number, arg1: number): boolean;
        func_217377_a(arg0: BlockPos, arg1: boolean): boolean;
        func_205219_F_(): Internal.ITickList<Internal.Fluid>;
        func_175723_af(): Internal.WorldBorder;
        func_217369_A(): Internal.List<Internal.PlayerEntity>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldGenRegion_ = WorldGenRegion;
    interface Function8 <T1, T2, T3, T4, T5, T6, T7, T8, R> {
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function<T8, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function3<T6, T7, T8, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.BiFunction<T7, T8, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function5<T4, T5, T6, T7, T8, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function4<T5, T6, T7, T8, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function6<T3, T4, T5, T6, T7, T8, R>>;
        curry(): Internal.Function<T1, Internal.Function7<T2, T3, T4, T5, T6, T7, T8, R>>;
    }
    type Function8_<T1, T2, T3, T4, T5, T6, T7, T8, R> = Function8<T1, T2, T3, T4, T5, T6, T7, T8, R>;
    class StandardLevel extends Internal.Enum<Internal.StandardLevel> {
        static valueOf(name: string): Internal.StandardLevel;
        static getStandardLevel(intLevel: number): Internal.StandardLevel;
        static values(): Internal.StandardLevel[];
        intLevel(): number;
        static readonly TRACE : Internal.StandardLevel;
        static readonly ALL : Internal.StandardLevel;
        static readonly ERROR : Internal.StandardLevel;
        static readonly INFO : Internal.StandardLevel;
        static readonly FATAL : Internal.StandardLevel;
        static readonly DEBUG : Internal.StandardLevel;
        static readonly OFF : Internal.StandardLevel;
        static readonly WARN : Internal.StandardLevel;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StandardLevel_ = "off" | "fatal" | "error" | "warn" | "info" | "debug" | "trace" | "all" | StandardLevel;
    interface ClassDesc extends Internal.ConstantDesc, Internal.TypeDescriptor$OfField<Internal.ClassDesc> {
        componentType(): Internal.TypeDescriptor$OfField<any>;
        componentType(): Internal.ClassDesc;
        arrayType(): Internal.ClassDesc;
        arrayType(): Internal.TypeDescriptor$OfField<any>;
        arrayType(arg0: number): Internal.ClassDesc;
        displayName(): string;
        descriptorString(): string;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): any;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): Internal.Class<any>;
        isClassOrInterface(): boolean;
        nested(arg0: string): Internal.ClassDesc;
        nested(arg0: string, arg1: string[]): Internal.ClassDesc;
        equals(arg0: any): boolean;
        isArray(): boolean;
        packageName(): string;
        isPrimitive(): boolean;
    }
    type ClassDesc_ = ClassDesc;
    abstract class Either <L, R> extends Document.Object implements Internal.App<Internal.Either$Mu<R>, L> {
        flatMap<L2_>(arg0: ((arg0: L) => Internal.Either<L2_, R>)): Internal.Either<L2_, R>;
        mapRight<T_>(arg0: ((arg0: R) => T_)): Internal.Either<L, T_>;
        swap(): Internal.Either<R, L>;
        left(): Internal.Optional<L>;
        static left<L_, R_>(arg0: L_): Internal.Either<L_, R_>;
        static unbox<L_, R_>(arg0: Internal.App<Internal.Either$Mu<R_>, L_>): Internal.Either<L_, R_>;
        mapLeft<T_>(arg0: ((arg0: L) => T_)): Internal.Either<T_, R>;
        ifLeft(arg0: ((arg0: L) => void)): Internal.Either<L, R>;
        mapBoth<C_, D_>(arg0: ((arg0: L) => C_), arg1: ((arg0: R) => D_)): Internal.Either<C_, D_>;
        static right<L_, R_>(arg0: R_): Internal.Either<L_, R_>;
        right(): Internal.Optional<R>;
        map<T_>(arg0: ((arg0: L) => T_), arg1: ((arg0: R) => T_)): T_;
        ifRight(arg0: ((arg0: R) => void)): Internal.Either<L, R>;
        orThrow(): L;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Either_<L, R> = Either<L, R>;
    class StartupEventJS extends Internal.EventJS {
        post(id: string): boolean;
        post(id: string, sub: string): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StartupEventJS_ = StartupEventJS;
    interface RunningGame {
        getVersion(): Internal.GameVersion;
        setSessionEventListener(arg0: Internal.SessionEventListener): void;
        getSelectedLanguage(): com.mojang.bridge.game.Language;
        getCurrentSession(): Internal.GameSession;
        getPerformanceMetrics(): Internal.PerformanceMetrics;
    }
    type RunningGame_ = RunningGame;
    class CEntityActionPacket$Action extends Internal.Enum<Internal.CEntityActionPacket$Action> {
        static valueOf(arg0: string): Internal.CEntityActionPacket$Action;
        static values(): Internal.CEntityActionPacket$Action[];
        static readonly PRESS_SHIFT_KEY : Internal.CEntityActionPacket$Action;
        static readonly STOP_RIDING_JUMP : Internal.CEntityActionPacket$Action;
        static readonly STOP_SLEEPING : Internal.CEntityActionPacket$Action;
        static readonly START_RIDING_JUMP : Internal.CEntityActionPacket$Action;
        static readonly START_SPRINTING : Internal.CEntityActionPacket$Action;
        static readonly STOP_SPRINTING : Internal.CEntityActionPacket$Action;
        static readonly START_FALL_FLYING : Internal.CEntityActionPacket$Action;
        static readonly RELEASE_SHIFT_KEY : Internal.CEntityActionPacket$Action;
        static readonly OPEN_INVENTORY : Internal.CEntityActionPacket$Action;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CEntityActionPacket$Action_ = "press_shift_key" | "release_shift_key" | "stop_sleeping" | "start_sprinting" | "stop_sprinting" | "start_riding_jump" | "stop_riding_jump" | "open_inventory" | "start_fall_flying" | CEntityActionPacket$Action;
    class InterModComms$IMCMessage extends Document.Object {
        getModId(): string;
        getSenderModId(): string;
        getMethod(): string;
        getMessageSupplier<T_>(): Internal.Supplier<T_>;
        get messageSupplier(): Internal.Supplier<T_>;
        get method(): string;
        get senderModId(): string;
        get modId(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InterModComms$IMCMessage_ = InterModComms$IMCMessage;
    class GameRules extends Document.Object implements Internal.GameRulesAccessor {
        func_234905_b_(): Internal.GameRules;
        static func_223590_a(arg0: Internal.GameRules$IRuleEntryVisitor): void;
        func_223585_a<T_>(arg0: Internal.GameRules$RuleKey<T_>): T_;
        func_223586_b(arg0: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>): boolean;
        func_234899_a_(arg0: Internal.GameRules, arg1: Internal.MinecraftServer): void;
        func_223592_c(arg0: Internal.GameRules$RuleKey<Internal.GameRules$IntegerValue>): number;
        static func_234903_a_<T_>(arg0: string, arg1: Internal.GameRules$Category_, arg2: Internal.GameRules$RuleType<T_>): Internal.GameRules$RuleKey<T_>;
        func_82770_a(): Internal.CompoundNBT;
        static readonly field_223599_b : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223598_a : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223621_x : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223614_q : Internal.GameRules$RuleKey<Internal.GameRules$IntegerValue>;
        static readonly field_223615_r : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223612_o : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_234895_F_ : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223613_p : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_234896_G_ : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223610_m : Internal.GameRules$RuleKey<Internal.GameRules$IntegerValue>;
        static readonly field_223611_n : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223600_c : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223601_d : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_226681_C_ : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_226680_B_ : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223618_u : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223619_v : Internal.GameRules$RuleKey<Internal.GameRules$IntegerValue>;
        static readonly field_223616_s : Internal.GameRules$RuleKey<Internal.GameRules$IntegerValue>;
        static readonly field_223617_t : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223608_k : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223609_l : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223620_w : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223606_i : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_230127_D_ : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223607_j : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_230128_E_ : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223604_g : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_226679_A_ : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223605_h : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223602_e : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_226682_y_ : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223603_f : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_226683_z_ : Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameRules_ = GameRules;
    class MuleEntity extends Internal.AbstractChestedHorseEntity {
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_190697_dk(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MuleEntity_ = MuleEntity;
    abstract class MultithreadEventExecutorGroup extends Internal.AbstractEventExecutorGroup {
        next(): Internal.EventExecutor;
        terminationFuture(): io.netty.util.concurrent.Future<any>;
        isShuttingDown(): boolean;
        iterator(): Internal.Iterator<Internal.EventExecutor>;
        shutdownGracefully(arg0: number, arg1: number, arg2: Internal.TimeUnit_): io.netty.util.concurrent.Future<any>;
        isTerminated(): boolean;
        awaitTermination(arg0: number, arg1: Internal.TimeUnit_): boolean;
        executorCount(): number;
        shutdown(): void;
        isShutdown(): boolean;
        get shuttingDown(): boolean;
        get terminated(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MultithreadEventExecutorGroup_ = MultithreadEventExecutorGroup;
    class LeashKnotEntity extends Internal.HangingEntity {
        func_213297_N(): Internal.IPacket<any>;
        func_70518_d(): boolean;
        func_70112_a(arg0: number): boolean;
        func_70107_b(arg0: number, arg1: number, arg2: number): void;
        func_241843_o(arg0: number): Vec3;
        func_82329_d(): number;
        func_110128_b(arg0: Internal.Entity): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        static func_213855_a(arg0: Internal.World, arg1: BlockPos): Internal.LeashKnotEntity;
        func_82330_g(): number;
        func_174859_a(arg0: Internal.Direction_): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_184523_o(): void;
        func_184230_a(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LeashKnotEntity_ = LeashKnotEntity;
    class ISuggestionProvider$Coordinates extends Document.Object {
        readonly field_209008_e : string;
        static readonly field_209004_a : Internal.ISuggestionProvider$Coordinates;
        static readonly field_209005_b : Internal.ISuggestionProvider$Coordinates;
        readonly field_209006_c : string;
        readonly field_209007_d : string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ISuggestionProvider$Coordinates_ = ISuggestionProvider$Coordinates;
    interface TriPredicate <T, U, V> {
        or(arg0: ((arg0: T, arg1: U, arg2: V) => boolean)): Internal.TriPredicate<T, U, V>;
        test(arg0: T, arg1: U, arg2: V): boolean;
        and(arg0: ((arg0: T, arg1: U, arg2: V) => boolean)): Internal.TriPredicate<T, U, V>;
        negate(): Internal.TriPredicate<T, U, V>;
    }
    type TriPredicate_<T, U, V> = ((arg0: T, arg1: U, arg2: V) => boolean) | TriPredicate<T, U, V>;
    interface AsynchronousChannel extends Internal.Channel {
        close(): void;
    }
    type AsynchronousChannel_ = AsynchronousChannel;
    class MobSpawnInfo extends Document.Object {
        getEntityTypes(): Internal.Set<Internal.EntityType<any>>;
        func_242562_b(): boolean;
        func_242559_a(arg0: Internal.EntityClassification_): Internal.List<Internal.MobSpawnInfo$Spawners>;
        func_242557_a(): number;
        getSpawnerTypes(): Internal.Set<Internal.EntityClassification>;
        func_242558_a(arg0: Internal.EntityType<any>): Internal.MobSpawnInfo$SpawnCosts;
        static readonly field_242550_a : Internal.Logger;
        static readonly field_242552_c : Internal.MapCodec<Internal.MobSpawnInfo>;
        static readonly field_242551_b : Internal.MobSpawnInfo;
        get spawnerTypes(): Internal.Set<Internal.EntityClassification>;
        get entityTypes(): Internal.Set<Internal.EntityType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MobSpawnInfo_ = MobSpawnInfo;
    interface FamilyOptic <A, B> {
        apply(arg0: number): Internal.OpticParts<A, B>;
    }
    type FamilyOptic_<A, B> = FamilyOptic<A, B>;
    interface IJumpingMount {
        func_184777_r_(): void;
        func_110206_u(arg0: number): void;
        func_184776_b(): boolean;
        func_184775_b(arg0: number): void;
    }
    type IJumpingMount_ = IJumpingMount;
    interface IForgeBakedModel {
        getBakedModel(): Internal.IBakedModel;
        isAmbientOcclusion(arg0: Internal.BlockState): boolean;
        doesHandlePerspectives(): boolean;
        getModelData(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.IModelData): Internal.IModelData;
        isLayered(): boolean;
        handlePerspective(arg0: Internal.ItemCameraTransforms$TransformType_, arg1: Internal.MatrixStack): Internal.IBakedModel;
        getQuads(arg0: Internal.BlockState, arg1: Internal.Direction_, arg2: Internal.Random, arg3: Internal.IModelData): Internal.List<Internal.BakedQuad>;
        getParticleTexture(arg0: Internal.IModelData): Internal.TextureAtlasSprite;
        getLayerModels(arg0: Internal.ItemStack, arg1: boolean): Internal.List<com.mojang.datafixers.util.Pair<Internal.IBakedModel, Internal.RenderType>>;
    }
    type IForgeBakedModel_ = IForgeBakedModel;
    interface ShortBidirectionalIterator extends Internal.ShortIterator, Internal.ObjectBidirectionalIterator<number> {
        previous(): any;
        previous(): number;
        previousShort(): number;
        back(arg0: number): number;
        skip(arg0: number): number;
    }
    type ShortBidirectionalIterator_ = ShortBidirectionalIterator;
    class ClientSuggestionProvider extends Document.Object implements Internal.ISuggestionProvider {
        func_197010_l(): Internal.Collection<ResourceLocation>;
        func_197012_k(): Internal.Collection<string>;
        func_241861_q(): Internal.DynamicRegistries;
        func_230390_p_(): Internal.Set<Internal.RegistryKey<Internal.World>>;
        func_217293_r(): Internal.Collection<Internal.ISuggestionProvider$Coordinates>;
        func_217294_q(): Internal.Collection<Internal.ISuggestionProvider$Coordinates>;
        func_197034_c(arg0: number): boolean;
        func_199612_m(): Internal.Stream<ResourceLocation>;
        func_197015_a(arg0: number, arg1: Internal.Suggestions): void;
        func_211270_p(): Internal.Collection<string>;
        func_197009_a(arg0: Internal.CommandContext<Internal.ISuggestionProvider>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        func_197011_j(): Internal.Collection<string>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientSuggestionProvider_ = ClientSuggestionProvider;
    class SkeletonHorseEntity extends Internal.AbstractHorseEntity {
        func_70668_bt(): Internal.CreatureAttribute;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        static func_234250_eJ_(): Internal.AttributeModifierMap$MutableAttribute;
        func_205710_ba(): boolean;
        func_70636_d(): void;
        func_190690_dh(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_190691_p(arg0: boolean): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_70042_X(): number;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SkeletonHorseEntity_ = SkeletonHorseEntity;
    abstract class AbstractPiglinEntity extends Internal.MonsterEntity {
        func_70638_az(): Internal.LivingEntity;
        func_242340_t(arg0: boolean): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_234424_eM_(): Internal.PiglinAction;
        func_70033_W(): number;
        func_70642_aH(): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_242336_eL(): boolean;
        func_242337_eM(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractPiglinEntity_ = AbstractPiglinEntity;
    interface ICriterionInstance {
        func_230240_a_(arg0: Internal.ConditionArraySerializer): Internal.JsonObject;
        func_192244_a(): ResourceLocation;
    }
    type ICriterionInstance_ = ICriterionInstance;
    interface PalettedContainer$ICountConsumer <T> {
        accept(arg0: T, arg1: number): void;
    }
    type PalettedContainer$ICountConsumer_<T> = ((arg0: T, arg1: number) => void) | PalettedContainer$ICountConsumer<T>;
    class MovementInput extends Document.Object {
        func_190020_b(): Internal.Vector2f;
        func_225607_a_(arg0: boolean): void;
        func_223135_b(): boolean;
        field_187256_d : boolean;
        field_187257_e : boolean;
        field_78902_a : number;
        field_187255_c : boolean;
        field_228350_h_ : boolean;
        field_192832_b : number;
        field_78901_c : boolean;
        field_187258_f : boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MovementInput_ = MovementInput;
    class AddJEIEventJS <T> extends Internal.EventJS {
        add(o: any): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AddJEIEventJS_<T> = AddJEIEventJS<T>;
    class StarLightInterface extends Document.Object {
        getWorld(): Internal.World;
        blockChange(arg0: BlockPos): Internal.CompletableFuture<void>;
        removeChunkTasks(arg0: Internal.ChunkPos): void;
        checkBlockEdges(arg0: number, arg1: number): void;
        checkBlockEdges(arg0: number, arg1: number, arg2: Internal.ShortCollection): void;
        getSkyReader(): Internal.IWorldLightListener;
        checkChunkEdges(arg0: number, arg1: number): void;
        isClientSide(): boolean;
        relightChunks(arg0: Internal.Set<Internal.ChunkPos>, arg1: ((arg0: Internal.ChunkPos) => void), arg2: ((arg0: number) => void)): void;
        scheduleChunkLight(arg0: Internal.ChunkPos, arg1: (() => void)): void;
        propagateChanges(): void;
        sectionChange(arg0: Internal.SectionPos, arg1: boolean): Internal.CompletableFuture<void>;
        forceLoadInChunk(arg0: Internal.IChunk, arg1: boolean[]): void;
        loadInChunk(arg0: number, arg1: number, arg2: boolean[]): void;
        lightChunk(arg0: Internal.IChunk, arg1: boolean[]): void;
        getLightAccess(): Internal.IChunkLightProvider;
        checkSkyEdges(arg0: number, arg1: number, arg2: Internal.ShortCollection): void;
        checkSkyEdges(arg0: number, arg1: number): void;
        getBlockReader(): Internal.IWorldLightListener;
        hasUpdates(): boolean;
        getAnyChunkNow(arg0: number, arg1: number): Internal.IChunk;
        static readonly CHUNK_WORK_TICKET : Internal.TicketType<Internal.ChunkPos>;
        get world(): Internal.World;
        get skyReader(): Internal.IWorldLightListener;
        get clientSide(): boolean;
        get lightAccess(): Internal.IChunkLightProvider;
        get blockReader(): Internal.IWorldLightListener;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StarLightInterface_ = StarLightInterface;
    abstract class TileEntityBehaviour extends Document.Object {
        onNeighborChanged(arg0: BlockPos): void;
        getWorld(): Internal.World;
        read(arg0: Internal.CompoundNBT, arg1: boolean): void;
        destroy(): void;
        static destroy<T_>(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.BehaviourType<T_>): void;
        onBlockChanged(arg0: Internal.BlockState): void;
        lazyTick(): void;
        tick(): void;
        setLazyTickRate(arg0: number): void;
        remove(): void;
        getType(): Internal.BehaviourType<any>;
        getRequiredItems(): Internal.ItemRequirement;
        getPos(): BlockPos;
        static get<T_>(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.BehaviourType<T_>): T_;
        static get<T_>(arg0: Internal.TileEntity, arg1: Internal.BehaviourType<T_>): T_;
        isSafeNBT(): boolean;
        initialize(): void;
        write(arg0: Internal.CompoundNBT, arg1: boolean): void;
        tileEntity : Internal.SmartTileEntity;
        get world(): Internal.World;
        get pos(): BlockPos;
        get type(): Internal.BehaviourType<any>;
        get safeNBT(): boolean;
        get requiredItems(): Internal.ItemRequirement;
        set lazyTickRate(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TileEntityBehaviour_ = TileEntityBehaviour;
    class LongSummaryStatistics extends Document.Object implements Internal.LongConsumer, Internal.IntConsumer {
        getMin(): number;
        getMax(): number;
        toString(): string;
        getAverage(): number;
        getSum(): number;
        getCount(): number;
        combine(arg0: Internal.LongSummaryStatistics): void;
        accept(arg0: number): void;
        accept(arg0: number): void;
        get average(): number;
        get min(): number;
        get max(): number;
        get count(): number;
        get sum(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LongSummaryStatistics_ = LongSummaryStatistics;
    class PacketDispatcher extends Document.Object {
        sendPacket(arg0: ResourceLocation_, arg1: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PacketDispatcher_ = PacketDispatcher;
    interface MessageSupplier {
        get(): org.apache.logging.log4j.message.Message;
    }
    type MessageSupplier_ = MessageSupplier;
    abstract class Pointer$Default extends Document.Object implements Internal.Pointer {
        address(): number;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Pointer$Default_ = Pointer$Default;
    class RockGenMappingRecipeJS extends Internal.ThermalRecipeJS {
        serialize(): void;
        below(arg0: string): Internal.RockGenMappingRecipeJS;
        create(arg0: Internal.ListJS): void;
        adjacent(arg0: string): Internal.RockGenMappingRecipeJS;
        adjacent(arg0: number): Internal.RockGenMappingRecipeJS;
        deserialize(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RockGenMappingRecipeJS_ = RockGenMappingRecipeJS;
    class Proxy$Type extends Internal.Enum<Internal.Proxy$Type> {
        static valueOf(arg0: string): Internal.Proxy$Type;
        static values(): Internal.Proxy$Type[];
        static readonly SOCKS : Internal.Proxy$Type;
        static readonly HTTP : Internal.Proxy$Type;
        static readonly DIRECT : Internal.Proxy$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Proxy$Type_ = "direct" | "http" | "socks" | Proxy$Type;
    interface ValueLayout$OfLong extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfLong;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfLong;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.ValueLayout$OfLong;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfLong;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfLong_ = ValueLayout$OfLong;
    class PlayerEvent$StopTracking extends Internal.PlayerEvent {
        getTarget(): Internal.Entity;
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        get target(): Internal.Entity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerEvent$StopTracking_ = PlayerEvent$StopTracking;
    class ChunkEvent$Unload extends Internal.ChunkEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkEvent$Unload_ = ChunkEvent$Unload;
    abstract class Task <E> extends Document.Object {
        func_220380_e(arg0: Internal.ServerWorld, arg1: E, arg2: number): void;
        func_220376_b(): Internal.Task$Status;
        toString(): string;
        func_220378_b(arg0: Internal.ServerWorld, arg1: E, arg2: number): boolean;
        func_220377_c(arg0: Internal.ServerWorld, arg1: E, arg2: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Task_<E> = Task<E>;
    class BlastFurnaceContainer extends Internal.AbstractFurnaceContainer {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlastFurnaceContainer_ = BlastFurnaceContainer;
    class VariantBlockStateGenerator$Variant extends Document.Object {
        toJson(): Internal.JsonElement;
        model(s: string): Internal.VariantBlockStateGenerator$Model;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VariantBlockStateGenerator$Variant_ = VariantBlockStateGenerator$Variant;
    interface EventLoop extends Internal.OrderedEventExecutor, Internal.EventLoopGroup {
        parent(): Internal.EventLoopGroup;
    }
    type EventLoop_ = EventLoop;
    class DrawHighlightEvent$HighlightBlock extends Internal.DrawHighlightEvent {
        getTarget(): Internal.RayTraceResult;
        getTarget(): Internal.BlockRayTraceResult;
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get target(): Internal.BlockRayTraceResult;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DrawHighlightEvent$HighlightBlock_ = DrawHighlightEvent$HighlightBlock;
    abstract class BuilderBase extends Document.Object {
        add(): void;
        translationKey(key: string): Internal.BuilderBase;
        getBuilderType(): string;
        newID(pre: string, post: string): ResourceLocation;
        displayName(name: string): Internal.BuilderBase;
        readonly id : ResourceLocation;
        get builderType(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BuilderBase_ = BuilderBase;
    class LivingHurtEvent extends Internal.LivingEvent {
        getListenerList(): Internal.ListenerList;
        getSource(): Internal.DamageSource;
        setAmount(arg0: number): void;
        isCancelable(): boolean;
        getAmount(): number;
        get amount(): number;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get source(): Internal.DamageSource;
        set amount(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingHurtEvent_ = LivingHurtEvent;
    interface IRangedAttackMob {
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
    }
    type IRangedAttackMob_ = IRangedAttackMob;
    class ExperienceOrbEntity extends Internal.Entity {
        func_213297_N(): Internal.IPacket<any>;
        func_70100_b_(arg0: Internal.PlayerEntity): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70075_an(): boolean;
        func_70071_h_(): void;
        func_70528_g(): number;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        static func_70527_a(arg0: number): number;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_70526_d(): number;
        field_70531_b : number;
        field_70533_a : number;
        field_70532_c : number;
        field_70530_e : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ExperienceOrbEntity_ = ExperienceOrbEntity;
    class RecordCodecBuilder$Instance <O> extends Document.Object implements Internal.Applicative<Internal.RecordCodecBuilder$Mu<O>, any> {
        ap2<A_, B_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, ((arg0: A_, arg1: B_) => R_)>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, B_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function4<T1_, T2_, T3_, T4_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap3<T1_, T2_, T3_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function3<T1_, T2_, T3_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        lift1<A_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, ((arg0: A_) => R_)>): Internal.Function<Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>>;
        stable<A_>(arg0: A_): Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>;
        deprecated<A_>(arg0: A_, arg1: number): Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>;
        map<T_, R_>(arg0: ((arg0: T_) => R_), arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        point<A_>(arg0: A_, arg1: Internal.Lifecycle): Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>;
        point<A_>(arg0: A_): Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RecordCodecBuilder$Instance_<O> = RecordCodecBuilder$Instance<O>;
    class Commands extends Document.Object {
        func_197051_a(arg0: Internal.ServerPlayerEntity): void;
        static func_242986_b(): void;
        static func_227481_a_<S_>(arg0: Internal.ParseResults<S_>): Internal.CommandSyntaxException;
        static func_197056_a<T_>(arg0: string, arg1: Internal.ArgumentType<T_>): Internal.RequiredArgumentBuilder<Internal.CommandSource, T_>;
        func_197054_a(): Internal.CommandDispatcher<Internal.CommandSource>;
        func_197059_a(arg0: Internal.CommandSource, arg1: string): number;
        static func_197057_a(arg0: string): Internal.LiteralArgumentBuilder<Internal.CommandSource>;
        static func_212590_a(arg0: ((arg0: Internal.StringReader) => void)): Internal.Predicate<string>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Commands_ = Commands;
    abstract class AbstractArrowEntity extends Internal.ProjectileEntity {
        func_213297_N(): Internal.IPacket<any>;
        func_212361_a(arg0: Internal.Entity): void;
        func_213872_b(arg0: number): void;
        func_180426_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        func_70100_b_(arg0: Internal.PlayerEntity): void;
        func_70240_a(arg0: number): void;
        func_213874_s(): number;
        func_70071_h_(): void;
        func_70112_a(arg0: number): boolean;
        func_213315_a(arg0: Internal.MoverType_, arg1: Vec3): void;
        func_70186_c(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_190547_a(arg0: Internal.LivingEntity, arg1: number): void;
        func_213869_a(arg0: Internal.SoundEvent): void;
        func_203047_q(): boolean;
        func_213873_r(): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70016_h(arg0: number, arg1: number, arg2: number): void;
        func_70241_g(): boolean;
        func_70075_an(): boolean;
        func_203045_n(arg0: boolean): void;
        func_213865_o(arg0: boolean): void;
        func_70243_d(arg0: boolean): void;
        func_70242_d(): number;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70239_b(arg0: number): void;
        field_70254_i : boolean;
        field_70249_b : number;
        field_70252_j : number;
        field_195056_av : Internal.BlockState;
        field_70251_a : Internal.AbstractArrowEntity$PickupStatus;
        field_213878_az : Internal.IntOpenHashSet;
        field_213875_aA : Internal.List<Internal.Entity>;
        field_70255_ao : number;
        field_70256_ap : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractArrowEntity_ = AbstractArrowEntity;
    interface Closeable extends Internal.AutoCloseable {
        close(): void;
    }
    type Closeable_ = Closeable;
    class ToastGui extends Internal.AbstractGui {
        func_192990_a<T_>(arg0: Internal.Class_<T_>, arg1: any): T_;
        func_238541_a_(arg0: Internal.MatrixStack): void;
        func_192989_b(): Internal.Minecraft;
        func_191788_b(): void;
        func_192988_a(arg0: Internal.IToast): void;
        readonly field_191792_h : Internal.Deque<Internal.IToast>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ToastGui_ = ToastGui;
    class PhaseType <T> extends Document.Object {
        static func_188739_c(): number;
        static func_188738_a(arg0: number): Internal.PhaseType<any>;
        toString(): string;
        func_188740_b(): number;
        func_188736_a(arg0: Internal.EnderDragonEntity): Internal.IPhase;
        static readonly field_188748_h : Internal.PhaseType<Internal.AttackingSittingPhase>;
        static readonly field_188741_a : Internal.PhaseType<Internal.HoldingPatternPhase>;
        static readonly field_188749_i : Internal.PhaseType<Internal.ChargingPlayerPhase>;
        static readonly field_188742_b : Internal.PhaseType<Internal.StrafePlayerPhase>;
        static readonly field_188743_c : Internal.PhaseType<Internal.LandingApproachPhase>;
        static readonly field_188744_d : Internal.PhaseType<Internal.LandingPhase>;
        static readonly field_188750_j : Internal.PhaseType<Internal.DyingPhase>;
        static readonly field_188745_e : Internal.PhaseType<Internal.TakeoffPhase>;
        static readonly field_188751_k : Internal.PhaseType<Internal.HoverPhase>;
        static readonly field_188746_f : Internal.PhaseType<Internal.FlamingSittingPhase>;
        static readonly field_188747_g : Internal.PhaseType<Internal.ScanningSittingPhase>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PhaseType_<T> = PhaseType<T>;
    abstract class CreatureEntity extends Internal.MobEntity {
        func_213380_a(arg0: Internal.IWorld, arg1: Internal.SpawnReason_): boolean;
        func_180484_a(arg0: BlockPos): number;
        func_70781_l(): boolean;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CreatureEntity_ = CreatureEntity;
    class SPlayerListItemPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179767_a(): Internal.List<Internal.SPlayerListItemPacket$AddPlayerData>;
        toString(): string;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179768_b(): Internal.SPlayerListItemPacket$Action;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlayerListItemPacket_ = SPlayerListItemPacket;
    interface Destroyable {
        isDestroyed(): boolean;
        destroy(): void;
    }
    type Destroyable_ = Destroyable;
    class ModuleDescriptor$Builder extends Document.Object {
        mainClass(arg0: string): Internal.ModuleDescriptor$Builder;
        build(): Internal.ModuleDescriptor;
        provides(arg0: Internal.ModuleDescriptor$Provides): Internal.ModuleDescriptor$Builder;
        provides(arg0: string, arg1: Internal.List<string>): Internal.ModuleDescriptor$Builder;
        exports(arg0: string): Internal.ModuleDescriptor$Builder;
        exports(arg0: Internal.Set<Internal.ModuleDescriptor$Exports$Modifier>, arg1: string, arg2: Internal.Set<string>): Internal.ModuleDescriptor$Builder;
        exports(arg0: string, arg1: Internal.Set<string>): Internal.ModuleDescriptor$Builder;
        exports(arg0: Internal.Set<Internal.ModuleDescriptor$Exports$Modifier>, arg1: string): Internal.ModuleDescriptor$Builder;
        exports(arg0: Internal.ModuleDescriptor$Exports): Internal.ModuleDescriptor$Builder;
        opens(arg0: string): Internal.ModuleDescriptor$Builder;
        opens(arg0: Internal.Set<Internal.ModuleDescriptor$Opens$Modifier>, arg1: string, arg2: Internal.Set<string>): Internal.ModuleDescriptor$Builder;
        opens(arg0: string, arg1: Internal.Set<string>): Internal.ModuleDescriptor$Builder;
        opens(arg0: Internal.ModuleDescriptor$Opens): Internal.ModuleDescriptor$Builder;
        opens(arg0: Internal.Set<Internal.ModuleDescriptor$Opens$Modifier>, arg1: string): Internal.ModuleDescriptor$Builder;
        uses(arg0: string): Internal.ModuleDescriptor$Builder;
        packages(arg0: Internal.Set<string>): Internal.ModuleDescriptor$Builder;
        version(arg0: string): Internal.ModuleDescriptor$Builder;
        version(arg0: Internal.ModuleDescriptor$Version): Internal.ModuleDescriptor$Builder;
        requires(arg0: Internal.ModuleDescriptor$Requires): Internal.ModuleDescriptor$Builder;
        requires(arg0: Internal.Set<Internal.ModuleDescriptor$Requires$Modifier>, arg1: string, arg2: Internal.ModuleDescriptor$Version): Internal.ModuleDescriptor$Builder;
        requires(arg0: string): Internal.ModuleDescriptor$Builder;
        requires(arg0: Internal.Set<Internal.ModuleDescriptor$Requires$Modifier>, arg1: string): Internal.ModuleDescriptor$Builder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleDescriptor$Builder_ = ModuleDescriptor$Builder;
    class ListJigsawPiece extends Internal.JigsawPiece {
        func_214852_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_): Internal.MutableBoundingBox;
        func_214853_a(): Internal.IJigsawDeserializer<any>;
        func_230378_a_(arg0: Internal.TemplateManager, arg1: Internal.ISeedReader, arg2: Internal.StructureManager, arg3: Internal.ChunkGenerator, arg4: BlockPos, arg5: BlockPos, arg6: Internal.Rotation_, arg7: Internal.MutableBoundingBox, arg8: Internal.Random, arg9: boolean): boolean;
        toString(): string;
        func_214845_a(arg0: Internal.JigsawPattern$PlacementBehaviour_): Internal.JigsawPiece;
        func_214849_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_, arg3: Internal.Random): Internal.List<Internal.Template$BlockInfo>;
        static readonly field_236834_a_ : Internal.Codec<Internal.ListJigsawPiece>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ListJigsawPiece_ = ListJigsawPiece;
    /**
    */
    class RecipeEventJS extends Internal.EventJS {
        printTypes(): void;
        getRecipeFunction(id: string): Internal.RecipeFunction;
        custom(o: any): Internal.RecipeJS;
        forEachRecipe(filter: ((arg0: Internal.RecipeJS) => boolean), consumer: ((arg0: any) => void)): void;
        countRecipes(filter: ((arg0: Internal.RecipeJS) => boolean)): number;
        forEachRecipeAsync(filter: ((arg0: Internal.RecipeJS) => boolean), consumer: ((arg0: Internal.RecipeJS) => void)): void;
        remove(filter: ((arg0: Internal.RecipeJS) => boolean)): number;
        printExamples(type: string): void;
        addRecipe(r: Internal.RecipeJS, type: Internal.RecipeTypeJS, args1: Internal.ListJS): Internal.RecipeJS;
        replaceOutput(filter: ((arg0: Internal.RecipeJS) => boolean), ingredient: Internal.IngredientJS_, with_: Internal.ItemStackJS_): number;
        replaceOutput(filter: ((arg0: Internal.RecipeJS) => boolean), ingredient: Internal.IngredientJS_, with_: Internal.ItemStackJS_, exact: boolean): number;
        replaceOutput(ingredient: Internal.IngredientJS_, with_: Internal.ItemStackJS_): number;
        stage(filter: ((arg0: Internal.RecipeJS) => boolean), stage: string): void;
        replaceInput(filter: ((arg0: Internal.RecipeJS) => boolean), ingredient: Internal.IngredientJS_, with_: Internal.IngredientJS_): number;
        replaceInput(filter: ((arg0: Internal.RecipeJS) => boolean), ingredient: Internal.IngredientJS_, with_: Internal.IngredientJS_, exact: boolean): number;
        replaceInput(ingredient: Internal.IngredientJS_, with_: Internal.IngredientJS_): number;
        printAllTypes(): void;
        customFilter(filter: ((arg0: Internal.RecipeJS) => boolean)): Internal.RecipeFilter;
        setItemErrors(b: boolean): void;
        static instance : Internal.RecipeEventJS;
        static readonly FORGE_CONDITIONAL : "forge:conditional";
        static customIngredientMap : {};
        set itemErrors(b: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
        /**
        * Holds all the recipes collected by probejs(not documents).
        */
        get recipes(): stub.probejs.recipeHolder;
        /**
        * Adds a smelting recipe to Minecraft.
        * Used by Furnaces.
        */
        smelting(output: dev.latvian.kubejs.item.ItemStackJS, input): Internal.CookingRecipeJS;
        /**
        * Adds a smelting recipe to Minecraft.
        * Used by Smokers.
        */
        smoking(output: dev.latvian.kubejs.item.ItemStackJS, input): Internal.CookingRecipeJS;
        /**
        * Adds a smelting recipe to Minecraft.
        * Used by Blast Furnaces.
        */
        blasting(output: dev.latvian.kubejs.item.ItemStackJS, input): Internal.CookingRecipeJS;
        /**
        * Adds a shaped crafting recipe.
        */
        shaped(output: dev.latvian.kubejs.item.ItemStackJS, pattern): Internal.ShapedRecipeJS;
        /**
        * Adds a shapeless crafting recipe.
        */
        shapeless(output: dev.latvian.kubejs.item.ItemStackJS, inputs): Internal.ShapelessRecipeJS;
        /**
        * Adds a smelting recipe to Minecraft.
        * Used by Campfire.
        */
        campfireCooking(output: dev.latvian.kubejs.item.ItemStackJS, input): Internal.CookingRecipeJS;
        /**
        * Adds a stonecutting recipe.
        */
        stonecutting(output: dev.latvian.kubejs.item.ItemStackJS, inputs): Internal.StonecuttingRecipeJS;
        /**
        * Adds a smithing recipe.
        */
        smithing(output: dev.latvian.kubejs.item.ItemStackJS, base): Internal.SmithingRecipeJS;
    }
    type RecipeEventJS_ = RecipeEventJS;
    class ChatType extends Internal.Enum<Internal.ChatType> {
        static valueOf(arg0: string): Internal.ChatType;
        static values(): Internal.ChatType[];
        func_218690_b(): boolean;
        static func_192582_a(arg0: number): Internal.ChatType;
        func_192583_a(): number;
        static readonly SYSTEM : Internal.ChatType;
        static readonly CHAT : Internal.ChatType;
        static readonly GAME_INFO : Internal.ChatType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChatType_ = "chat" | "system" | "game_info" | ChatType;
    class Item extends Internal.ForgeRegistryEntry<Internal.Item> implements Internal.IItemProvider, Internal.IForgeItem, Internal.ItemKJS {
        func_179218_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.LivingEntity): boolean;
        getToolTypes(arg0: Internal.ItemStack): Internal.Set<Internal.ToolType>;
        func_219971_r(): boolean;
        func_225519_S__(): Internal.SoundEvent;
        func_77667_c(arg0: Internal.ItemStack): string;
        getItemStackTileEntityRenderer(): Internal.ItemStackTileEntityRenderer;
        getHarvestLevel(arg0: Internal.ItemStack, arg1: Internal.ToolType, arg2: Internal.PlayerEntity, arg3: Internal.BlockState): number;
        func_77640_w(): Internal.ItemGroup;
        getTags(): Internal.Set<ResourceLocation>;
        func_190903_i(): Internal.ItemStack;
        func_111207_a(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.LivingEntity, arg3: Hand_): Internal.ActionResultType;
        static func_150891_b(arg0: Internal.Item): number;
        func_195938_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        func_150893_a(arg0: Internal.ItemStack, arg1: Internal.BlockState): number;
        func_206844_a(arg0: Internal.ITag<Internal.Item>): boolean;
        setFireResistantKJS(arg0: boolean): void;
        func_82789_a(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_150895_a(arg0: Internal.ItemGroup, arg1: Internal.NonNullList<Internal.ItemStack>): void;
        func_150897_b(arg0: Internal.BlockState): boolean;
        static func_150899_d(arg0: number): Internal.Item;
        func_111205_h(arg0: EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        setFoodPropertiesKJS(arg0: Internal.Food): void;
        func_77619_b(): number;
        func_77659_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: Hand_): Internal.ActionResult<Internal.ItemStack>;
        func_77615_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.LivingEntity, arg3: number): void;
        func_77636_d(arg0: Internal.ItemStack): boolean;
        func_77613_e(arg0: Internal.ItemStack): Internal.Rarity;
        func_77634_r(): boolean;
        setBurnTimeKJS(i: number): void;
        func_77651_p(): boolean;
        func_219967_s(): Internal.Food;
        getIdKJS(): string;
        isRepairable(arg0: Internal.ItemStack): boolean;
        func_219972_a(arg0: Internal.World, arg1: Internal.LivingEntity, arg2: Internal.ItemStack, arg3: number): void;
        setItemBuilderKJS(b: Internal.ItemBuilder): void;
        func_77624_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.List<Internal.ITextComponent>, arg3: Internal.ITooltipFlag): void;
        getItemBuilderKJS(): Internal.ItemBuilder;
        func_200295_i(arg0: Internal.ItemStack): Internal.ITextComponent;
        setMaxStackSizeKJS(arg0: number): void;
        func_219970_i(arg0: Internal.ItemStack): boolean;
        func_77643_m_(): boolean;
        func_179215_a(arg0: Internal.CompoundNBT): boolean;
        func_77622_d(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.PlayerEntity): void;
        func_77626_a(arg0: Internal.ItemStack): number;
        func_77668_q(): Internal.Item;
        func_77645_m(): boolean;
        func_195939_a(arg0: Internal.ItemUseContext): Internal.ActionResultType;
        setCraftingRemainderKJS(arg0: Internal.Item): void;
        func_77654_b(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.LivingEntity): Internal.ItemStack;
        setMaxDamageKJS(arg0: number): void;
        static func_150898_a(arg0: Internal.Block): Internal.Item;
        func_234685_a_(arg0: Internal.DamageSource): boolean;
        setRarityKJS(arg0: Internal.Rarity_): void;
        func_77658_a(): string;
        func_225520_U__(): Internal.SoundEvent;
        func_77616_k(arg0: Internal.ItemStack): boolean;
        func_77639_j(): number;
        func_77612_l(): number;
        func_234687_u_(): boolean;
        func_200296_o(): Internal.ITextComponent;
        func_77644_a(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: Internal.LivingEntity): boolean;
        toString(): string;
        func_199767_j(): Internal.Item;
        func_77663_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.Entity, arg3: number, arg4: boolean): void;
        func_77661_b(arg0: Internal.ItemStack): Internal.UseAction;
        field_77777_bU : number;
        field_77700_c : Internal.Item;
        static readonly field_179220_a : {};
        field_77774_bZ : string;
        get itemBuilderKJS(): Internal.ItemBuilder;
        get itemStackTileEntityRenderer(): Internal.ItemStackTileEntityRenderer;
        get tags(): Internal.Set<ResourceLocation>;
        get idKJS(): string;
        set rarityKJS(arg0: Internal.Rarity_);
        set maxStackSizeKJS(arg0: number);
        set itemBuilderKJS(b: Internal.ItemBuilder);
        set foodPropertiesKJS(arg0: Internal.Food);
        set burnTimeKJS(i: number);
        set fireResistantKJS(arg0: boolean);
        set craftingRemainderKJS(arg0: Internal.Item);
        set maxDamageKJS(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Item_ = Item;
    class Advancement$Builder extends Document.Object implements Internal.IForgeAdvancementBuilder {
        static func_200278_a(): Internal.Advancement$Builder;
        func_200277_c(): Internal.Map<string, Internal.Criterion>;
        func_215092_a(arg0: Internal.ItemStack, arg1: Internal.ITextComponent_, arg2: Internal.ITextComponent_, arg3: ResourceLocation_, arg4: Internal.FrameType_, arg5: boolean, arg6: boolean, arg7: boolean): Internal.Advancement$Builder;
        func_200276_a(arg0: string, arg1: Internal.Criterion): Internal.Advancement$Builder;
        func_200274_a(arg0: Internal.AdvancementRewards): Internal.Advancement$Builder;
        func_200273_b(): Internal.JsonObject;
        func_192058_a(arg0: ((arg0: ResourceLocation) => Internal.Advancement)): boolean;
        func_200275_a(arg0: string, arg1: Internal.ICriterionInstance): Internal.Advancement$Builder;
        func_200272_a(arg0: ResourceLocation_): Internal.Advancement$Builder;
        func_192056_a(arg0: ResourceLocation_): Internal.Advancement;
        func_192057_a(arg0: Internal.PacketBuffer): void;
        func_200270_a(arg0: Internal.IRequirementsStrategy): Internal.Advancement$Builder;
        func_200271_a(arg0: Internal.AdvancementRewards$Builder): Internal.Advancement$Builder;
        static func_241043_a_(arg0: Internal.JsonObject, arg1: Internal.ConditionArrayParser): Internal.Advancement$Builder;
        func_203903_a(arg0: Internal.DisplayInfo): Internal.Advancement$Builder;
        func_203904_a(arg0: ((arg0: Internal.Advancement) => void), arg1: string): Internal.Advancement;
        toString(): string;
        func_203905_a(arg0: Internal.Advancement): Internal.Advancement$Builder;
        static func_192060_b(arg0: Internal.PacketBuffer): Internal.Advancement$Builder;
        func_203902_a(arg0: Internal.IItemProvider, arg1: Internal.ITextComponent_, arg2: Internal.ITextComponent_, arg3: ResourceLocation_, arg4: Internal.FrameType_, arg5: boolean, arg6: boolean, arg7: boolean): Internal.Advancement$Builder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Advancement$Builder_ = Advancement$Builder;
    class EndPortalTileEntity extends Internal.TileEntity {
        func_184313_a(arg0: Internal.Direction_): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EndPortalTileEntity_ = EndPortalTileEntity;
    class ServerScoreboard$Action extends Internal.Enum<Internal.ServerScoreboard$Action> {
        static valueOf(arg0: string): Internal.ServerScoreboard$Action;
        static values(): Internal.ServerScoreboard$Action[];
        static readonly REMOVE : Internal.ServerScoreboard$Action;
        static readonly CHANGE : Internal.ServerScoreboard$Action;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerScoreboard$Action_ = "change" | "remove" | ServerScoreboard$Action;
    interface ILootFunctionConsumer <T> {
        func_212841_b_(arg0: Internal.ILootFunction$IBuilder): T;
        func_212862_c_(): T;
    }
    type ILootFunctionConsumer_<T> = ILootFunctionConsumer<T>;
    interface IRecipeTransferRegistration {
        addUniversalRecipeTransferHandler(arg0: Internal.IRecipeTransferHandler<any>): void;
        getJeiHelpers(): Internal.IJeiHelpers;
        addRecipeTransferHandler(arg0: Internal.IRecipeTransferHandler<any>, arg1: ResourceLocation_): void;
        addRecipeTransferHandler<C>(arg0: Internal.Class_<C>, arg1: ResourceLocation_, arg2: number, arg3: number, arg4: number, arg5: number): void;
        addRecipeTransferHandler<C>(arg0: Internal.IRecipeTransferInfo<C>): void;
        getTransferHelper(): Internal.IRecipeTransferHandlerHelper;
    }
    type IRecipeTransferRegistration_ = IRecipeTransferRegistration;
    interface IntStream$IntMapMultiConsumer {
        accept(arg0: number, arg1: ((arg0: number) => void)): void;
    }
    type IntStream$IntMapMultiConsumer_ = ((arg0: number, arg1: ((arg0: number) => void)) => void) | IntStream$IntMapMultiConsumer;
    interface ITickableTileEntity {
        func_73660_a(): void;
    }
    type ITickableTileEntity_ = ITickableTileEntity;
    class ChestContainer extends Internal.Container {
        static func_216989_e(arg0: number, arg1: Internal.PlayerInventory): Internal.ChestContainer;
        func_85151_d(): Internal.IInventory;
        static func_216988_c(arg0: number, arg1: Internal.PlayerInventory): Internal.ChestContainer;
        func_216985_f(): number;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        static func_216986_a(arg0: number, arg1: Internal.PlayerInventory): Internal.ChestContainer;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        static func_216984_b(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IInventory): Internal.ChestContainer;
        static func_216987_b(arg0: number, arg1: Internal.PlayerInventory): Internal.ChestContainer;
        static func_216992_a(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IInventory): Internal.ChestContainer;
        static func_216990_f(arg0: number, arg1: Internal.PlayerInventory): Internal.ChestContainer;
        static func_216991_d(arg0: number, arg1: Internal.PlayerInventory): Internal.ChestContainer;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChestContainer_ = ChestContainer;
    class SaveFormat$LevelSave extends Document.Object implements Internal.AutoCloseable, Internal.ILevelSave {
        func_237296_d_(): Internal.WorldSummary;
        func_237297_e_(): Internal.DatapackCodec;
        func_237300_h_(): number;
        func_237299_g_(): void;
        func_237292_b_(): Internal.PlayerData;
        func_237298_f_(): Internal.File;
        func_237291_a_(arg0: Internal.RegistryKey<Internal.World>): Internal.File;
        func_237290_a_(arg0: string): void;
        runWorldPersistenceHooks(format: Internal.SaveFormat): void;
        func_237295_c_(): boolean;
        func_237285_a_(arg0: Internal.FolderName): java_.nio.file.Path;
        func_237284_a_(arg0: Internal.DynamicOps<Internal.INBT>, arg1: Internal.DatapackCodec): Internal.IServerConfiguration;
        getWorldDir(): java_.nio.file.Path;
        func_237282_a_(): string;
        func_237288_a_(arg0: Internal.DynamicRegistries, arg1: Internal.IServerConfiguration, arg2: Internal.CompoundNBT): void;
        func_237283_a_(arg0: Internal.IProgressUpdate): boolean;
        close(): void;
        func_237287_a_(arg0: Internal.DynamicRegistries, arg1: Internal.IServerConfiguration): void;
        get worldDir(): java_.nio.file.Path;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SaveFormat$LevelSave_ = SaveFormat$LevelSave;
    abstract class VoxelShape extends Document.Object implements Internal.VoxelShapeAccess {
        setFaces(arg0: Internal.VoxelShape[]): void;
        func_197756_d(): Internal.List<Internal.AxisAlignedBB>;
        func_197758_c(arg0: Internal.Direction$Axis_): number;
        getFaces(): Internal.VoxelShape[];
        func_197753_c(): Internal.VoxelShape;
        getShape(): Internal.VoxelShapePart;
        func_197754_a(arg0: Internal.VoxelShapes$ILineConsumer): void;
        func_197757_a(arg0: Internal.Direction$Axis_): Internal.DoubleList;
        func_197766_b(): boolean;
        func_197755_b(arg0: Internal.VoxelShapes$ILineConsumer): void;
        func_197751_a(arg0: number, arg1: number, arg2: number): Internal.VoxelShape;
        func_197760_b(arg0: Internal.Direction$Axis_, arg1: number, arg2: number): number;
        setShape(arg0: Internal.VoxelShapePart): void;
        func_197762_b(arg0: Internal.Direction$Axis_): number;
        func_197752_a(): Internal.AxisAlignedBB;
        func_212430_a(arg0: Internal.Direction$Axis_, arg1: Internal.AxisAlignedBB, arg2: number): number;
        func_212434_a(arg0: Internal.Direction_): Internal.VoxelShape;
        func_212433_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos): Internal.BlockRayTraceResult;
        toString(): string;
        field_197768_g : Internal.VoxelShapePart;
        get shape(): Internal.VoxelShapePart;
        get faces(): Internal.VoxelShape[];
        set shape(arg0: Internal.VoxelShapePart);
        set faces(arg0: Internal.VoxelShape[]);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VoxelShape_ = VoxelShape;
    class BoatEntity extends Internal.Entity {
        func_213297_N(): Internal.IPacket<any>;
        func_70104_M(): boolean;
        func_70071_h_(): void;
        func_230268_c_(arg0: Internal.LivingEntity): Vec3;
        func_184179_bs(): Internal.Entity;
        func_184232_k(arg0: Internal.Entity): void;
        func_241849_j(arg0: Internal.Entity): boolean;
        func_70057_ab(): void;
        func_184453_r(): Internal.BoatEntity$Type;
        static func_242378_a(arg0: Internal.Entity, arg1: Internal.Entity): boolean;
        func_184455_j(): Internal.Item;
        func_184451_k(): number;
        func_184457_a(arg0: number): boolean;
        func_184458_a(arg0: Internal.BoatEntity$Type_): void;
        func_203056_b(arg0: number): number;
        func_70271_g(): number;
        func_180426_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        func_70108_f(arg0: Internal.Entity): void;
        func_241845_aY(): boolean;
        func_70042_X(): number;
        func_184172_bi(): Internal.Direction;
        func_184441_l(): number;
        func_204231_K(): boolean;
        func_70268_h(): number;
        func_70267_i(): number;
        func_184448_a(arg0: number, arg1: number): number;
        func_70067_L(): boolean;
        func_184190_l(arg0: Internal.Entity): void;
        func_184445_a(arg0: boolean, arg1: boolean): void;
        func_70269_c(arg0: number): void;
        func_70266_a(arg0: number): void;
        func_70265_b(arg0: number): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_184442_a(arg0: boolean, arg1: boolean, arg2: boolean, arg3: boolean): void;
        func_184230_a(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        func_203002_i(arg0: boolean): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BoatEntity_ = BoatEntity;
    class SimpleWorldEventJS extends Internal.WorldEventJS {
        getWorld(): Internal.WorldJS;
        get world(): Internal.WorldJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SimpleWorldEventJS_ = SimpleWorldEventJS;
    class TagEventJS <T> extends Internal.EventJS {
        add(tag: ResourceLocation_, ids: any): Internal.TagEventJS$TagWrapper<T>;
        removeAll(tag: ResourceLocation_): Internal.TagEventJS$TagWrapper<T>;
        post(event: string): void;
        getType(): string;
        removeAllTagsFrom(ids: any): void;
        get(id: ResourceLocation_): Internal.TagEventJS$TagWrapper<T>;
        setGlobalPriorityList(o: any): void;
        remove(tag: ResourceLocation_, ids: any): Internal.TagEventJS$TagWrapper<T>;
        get type(): string;
        set globalPriorityList(o: any);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TagEventJS_<T> = TagEventJS<T>;
    interface ChannelHandlerContext extends Internal.AttributeMap, Internal.ChannelInboundInvoker, Internal.ChannelOutboundInvoker {
        handler(): Internal.ChannelHandler;
        read(): Internal.ChannelHandlerContext;
        fireChannelInactive(): Internal.ChannelHandlerContext;
        fireChannelReadComplete(): Internal.ChannelHandlerContext;
        fireChannelWritabilityChanged(): Internal.ChannelHandlerContext;
        channel(): io.netty.channel.Channel;
        hasAttr<T_>(arg0: Internal.AttributeKey<T_>): boolean;
        fireExceptionCaught(arg0: Internal.Throwable): Internal.ChannelHandlerContext;
        fireChannelActive(): Internal.ChannelHandlerContext;
        fireChannelRegistered(): Internal.ChannelHandlerContext;
        pipeline(): Internal.ChannelPipeline;
        fireChannelRead(arg0: any): Internal.ChannelHandlerContext;
        isRemoved(): boolean;
        flush(): Internal.ChannelHandlerContext;
        executor(): Internal.EventExecutor;
        name(): string;
        fireUserEventTriggered(arg0: any): Internal.ChannelHandlerContext;
        attr<T_>(arg0: Internal.AttributeKey<T_>): io.netty.util.Attribute<T_>;
        fireChannelUnregistered(): Internal.ChannelHandlerContext;
        alloc(): Internal.ByteBufAllocator;
    }
    type ChannelHandlerContext_ = ChannelHandlerContext;
    abstract class Clock extends Document.Object implements Internal.InstantSource {
        withZone(arg0: Internal.ZoneId): Internal.Clock;
        static tickMinutes(arg0: Internal.ZoneId): Internal.Clock;
        static tickMillis(arg0: Internal.ZoneId): Internal.Clock;
        static offset(arg0: Internal.Clock, arg1: Internal.Duration): Internal.Clock;
        getZone(): Internal.ZoneId;
        static tick(arg0: Internal.Clock, arg1: Internal.Duration): Internal.Clock;
        instant(): Internal.Instant;
        static system(arg0: Internal.ZoneId): Internal.Clock;
        hashCode(): number;
        equals(arg0: any): boolean;
        static tickSeconds(arg0: Internal.ZoneId): Internal.Clock;
        static systemDefaultZone(): Internal.Clock;
        static systemUTC(): Internal.Clock;
        static fixed(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.Clock;
        millis(): number;
        get zone(): Internal.ZoneId;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Clock_ = Clock;
    class EnderDragonEntity extends Internal.MobEntity implements Internal.IMob {
        func_174812_G(): void;
        func_195064_c(arg0: Internal.EffectInstance): boolean;
        func_184663_l(arg0: number, arg1: number, arg2: number): number;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_70636_d(): void;
        func_184670_cT(): Internal.PhaseManager;
        func_184666_a(arg0: number, arg1: number, arg2: Internal.PathPoint): Internal.Path;
        func_213403_a(arg0: Internal.EnderDragonPartEntity, arg1: Internal.DamageSource, arg2: number): boolean;
        func_184667_a(arg0: number, arg1: number[], arg2: number[]): number;
        func_184665_a(arg0: number): Vec3;
        getParts(): Internal.PartEntity<any>[];
        func_184222_aU(): boolean;
        func_213404_dT(): Internal.EnderDragonPartEntity[];
        isMultipartEntity(): boolean;
        static func_234257_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_145769_d(arg0: number): void;
        func_184664_cU(): Internal.DragonFightManager;
        func_184671_o(): number;
        func_70067_L(): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184672_a(arg0: Internal.EnderCrystalEntity, arg1: BlockPos, arg2: Internal.DamageSource): void;
        func_70974_a(arg0: number, arg1: number): number[];
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70623_bb(): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_184176_by(): Internal.SoundCategory;
        field_70991_bC : number;
        field_70994_bF : boolean;
        field_70995_bG : number;
        static readonly field_184674_a : Internal.DataParameter<number>;
        field_70988_bD : number;
        field_226525_bB_ : number;
        readonly field_70979_e : number[][];
        readonly field_70986_h : Internal.EnderDragonPartEntity;
        field_70976_f : number;
        field_70992_bH : Internal.EnderCrystalEntity;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EnderDragonEntity_ = EnderDragonEntity;
    class IDrawableAnimated$StartDirection extends Internal.Enum<Internal.IDrawableAnimated$StartDirection> {
        static valueOf(arg0: string): Internal.IDrawableAnimated$StartDirection;
        static values(): Internal.IDrawableAnimated$StartDirection[];
        static readonly TOP : Internal.IDrawableAnimated$StartDirection;
        static readonly LEFT : Internal.IDrawableAnimated$StartDirection;
        static readonly RIGHT : Internal.IDrawableAnimated$StartDirection;
        static readonly BOTTOM : Internal.IDrawableAnimated$StartDirection;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IDrawableAnimated$StartDirection_ = "top" | "bottom" | "left" | "right" | IDrawableAnimated$StartDirection;
    abstract class Format extends Document.Object implements Internal.Serializable, Internal.Cloneable {
        formatToCharacterIterator(arg0: any): Internal.AttributedCharacterIterator;
        format(arg0: any, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        format(arg0: any): string;
        clone(): any;
        parseObject(arg0: string): any;
        parseObject(arg0: string, arg1: Internal.ParsePosition): any;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Format_ = Format;
    class FOVUpdateEvent extends net.minecraftforge.eventbus.api.Event {
        getNewfov(): number;
        getListenerList(): Internal.ListenerList;
        setNewfov(arg0: number): void;
        getEntity(): Internal.PlayerEntity;
        getFov(): number;
        get listenerList(): Internal.ListenerList;
        get newfov(): number;
        get fov(): number;
        get entity(): Internal.PlayerEntity;
        set newfov(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FOVUpdateEvent_ = FOVUpdateEvent;
    class PropertyMap extends Internal.ForwardingMultimap<string, any> {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PropertyMap_ = PropertyMap;
    class TicketType <T> extends Document.Object {
        func_223184_b(): number;
        toString(): string;
        static func_223183_a<T_>(arg0: string, arg1: ((arg0: any) => boolean), arg2: number): Internal.TicketType<T_>;
        func_219487_a(): Internal.Comparator<T>;
        static func_219484_a<T_>(arg0: string, arg1: ((arg0: any) => boolean)): Internal.TicketType<T_>;
        static readonly field_219490_c : Internal.TicketType<Internal.ChunkPos>;
        static readonly field_223185_g : Internal.TicketType<number>;
        static readonly field_219492_e : Internal.TicketType<Internal.ChunkPos>;
        static readonly field_219491_d : Internal.TicketType<Internal.ChunkPos>;
        static readonly field_219494_g : Internal.TicketType<Internal.ChunkPos>;
        static readonly field_219489_b : Internal.TicketType<net.minecraft.util.Unit>;
        static readonly field_219493_f : Internal.TicketType<BlockPos>;
        static readonly field_219488_a : Internal.TicketType<net.minecraft.util.Unit>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TicketType_<T> = TicketType<T>;
    class SmithingRecipeJS extends Internal.RecipeJS {
        serialize(): void;
        create(args: Internal.ListJS): void;
        deserialize(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SmithingRecipeJS_ = SmithingRecipeJS;
    interface Wrapper {
        unwrap(): any;
    }
    type Wrapper_ = Wrapper;
    class CatalystRecipeJS extends Internal.ThermalRecipeJS {
        serialize(): void;
        secondaryMod(arg0: number): Internal.CatalystRecipeJS;
        primaryMod(arg0: number): Internal.CatalystRecipeJS;
        useChance(arg0: number): Internal.CatalystRecipeJS;
        create(arg0: Internal.ListJS): void;
        minChance(arg0: number): Internal.CatalystRecipeJS;
        deserialize(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CatalystRecipeJS_ = CatalystRecipeJS;
    interface SegmentAllocator {
        allocate(arg0: Internal.ValueLayout$OfShort, arg1: number): Internal.MemorySegment;
        allocate(arg0: Internal.ValueLayout$OfChar, arg1: string): Internal.MemorySegment;
        allocate(arg0: number, arg1: number): Internal.MemorySegment;
        allocate(arg0: Internal.MemoryLayout): Internal.MemorySegment;
        allocate(arg0: Internal.ValueLayout$OfByte, arg1: number): Internal.MemorySegment;
        allocate(arg0: number): Internal.MemorySegment;
        allocate(arg0: Internal.AddressLayout, arg1: Internal.MemorySegment): Internal.MemorySegment;
        allocate(arg0: Internal.ValueLayout$OfDouble, arg1: number): Internal.MemorySegment;
        allocate(arg0: Internal.ValueLayout$OfLong, arg1: number): Internal.MemorySegment;
        allocate(arg0: Internal.ValueLayout$OfFloat, arg1: number): Internal.MemorySegment;
        allocate(arg0: Internal.ValueLayout$OfInt, arg1: number): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfInt, arg1: number[]): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfChar, arg1: string[]): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfShort, arg1: number[]): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfByte, arg1: number[]): Internal.MemorySegment;
        allocateArray(arg0: Internal.MemoryLayout, arg1: number): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfDouble, arg1: number[]): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfLong, arg1: number[]): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfFloat, arg1: number[]): Internal.MemorySegment;
        allocateUtf8String(arg0: string): Internal.MemorySegment;
    }
    type SegmentAllocator_ = ((arg0: number, arg1: number) => Internal.MemorySegment) | SegmentAllocator;
    class JumpController extends Document.Object {
        func_75660_a(): void;
        func_75661_b(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JumpController_ = JumpController;
    class RegisterAdvancedEventJS extends Internal.JEIEventJS {
        readonly data : Internal.IAdvancedRegistration;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegisterAdvancedEventJS_ = RegisterAdvancedEventJS;
    class SensorType <U> extends Internal.ForgeRegistryEntry<Internal.SensorType<any>> {
        func_220995_a(): U;
        static readonly field_221002_f : Internal.SensorType<Internal.HurtBySensor>;
        static readonly field_242317_j : Internal.SensorType<Internal.GolemLastSeenSensor>;
        static readonly field_221003_g : Internal.SensorType<Internal.VillagerHostilesSensor>;
        static readonly field_242318_l : Internal.SensorType<Internal.PiglinBruteSpecificSensor>;
        static readonly field_221001_e : Internal.SensorType<Internal.NearestBedSensor>;
        static readonly field_234129_b_ : Internal.SensorType<Internal.WantedItemsSensor>;
        static readonly field_220998_b : Internal.SensorType<Internal.NearestLivingEntitiesSensor>;
        static readonly field_234130_l_ : Internal.SensorType<Internal.PiglinMobsSensor>;
        static readonly field_220999_c : Internal.SensorType<Internal.NearestPlayersSensor>;
        static readonly field_234132_n_ : Internal.SensorType<Internal.MateSensor>;
        static readonly field_234131_m_ : Internal.SensorType<Internal.HoglinMobsSensor>;
        static readonly field_220997_a : Internal.SensorType<Internal.DummySensor>;
        static readonly field_221004_h : Internal.SensorType<Internal.VillagerBabiesSensor>;
        static readonly field_221005_i : Internal.SensorType<Internal.SecondaryPositionSensor>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SensorType_<U> = SensorType<U>;
    interface PrivateKey extends Internal.Key, Internal.Destroyable {
    }
    type PrivateKey_ = PrivateKey;
    class CPickItemPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_210349_a(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CPickItemPacket_ = CPickItemPacket;
    abstract class AbstractFireballEntity extends Internal.DamagingProjectileEntity implements Internal.IRendersAsItem {
        func_184543_l(): Internal.ItemStack;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_213898_b(arg0: Internal.ItemStack): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractFireballEntity_ = AbstractFireballEntity;
    class CompositeByteBuf extends Internal.AbstractReferenceCountedByteBuf implements Internal.Iterable<Internal.ByteBuf> {
        markReaderIndex(): Internal.CompositeByteBuf;
        markReaderIndex(): Internal.ByteBuf;
        getByte(arg0: number): number;
        readerIndex(arg0: number): Internal.CompositeByteBuf;
        readerIndex(arg0: number): Internal.ByteBuf;
        writeZero(arg0: number): Internal.CompositeByteBuf;
        writeZero(arg0: number): Internal.ByteBuf;
        addComponent(arg0: Internal.ByteBuf): Internal.CompositeByteBuf;
        addComponent(arg0: boolean, arg1: number, arg2: Internal.ByteBuf): Internal.CompositeByteBuf;
        addComponent(arg0: boolean, arg1: Internal.ByteBuf): Internal.CompositeByteBuf;
        addComponent(arg0: number, arg1: Internal.ByteBuf): Internal.CompositeByteBuf;
        setShort(arg0: number, arg1: number): Internal.ByteBuf;
        setShort(arg0: number, arg1: number): Internal.CompositeByteBuf;
        writeFloat(arg0: number): Internal.CompositeByteBuf;
        writeFloat(arg0: number): Internal.ByteBuf;
        resetReaderIndex(): Internal.ByteBuf;
        resetReaderIndex(): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: Internal.GatheringByteChannel, arg2: number): number;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number, arg3: number): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number, arg3: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuffer): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuffer): Internal.ByteBuf;
        getBytes(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: number[]): Internal.ByteBuf;
        getBytes(arg0: number, arg1: number[]): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.OutputStream, arg2: number): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: Internal.OutputStream, arg2: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.FileChannel, arg2: number, arg3: number): number;
        unwrap(): Internal.ByteBuf;
        setDouble(arg0: number, arg1: number): Internal.ByteBuf;
        setDouble(arg0: number, arg1: number): Internal.CompositeByteBuf;
        setChar(arg0: number, arg1: number): Internal.ByteBuf;
        setChar(arg0: number, arg1: number): Internal.CompositeByteBuf;
        addComponents(arg0: number, arg1: Internal.Iterable<Internal.ByteBuf>): Internal.CompositeByteBuf;
        addComponents(arg0: boolean, arg1: Internal.Iterable<Internal.ByteBuf>): Internal.CompositeByteBuf;
        addComponents(arg0: number, arg1: Internal.ByteBuf[]): Internal.CompositeByteBuf;
        addComponents(arg0: Internal.ByteBuf[]): Internal.CompositeByteBuf;
        addComponents(arg0: boolean, arg1: Internal.ByteBuf[]): Internal.CompositeByteBuf;
        addComponents(arg0: Internal.Iterable<Internal.ByteBuf>): Internal.CompositeByteBuf;
        iterator(): Internal.Iterator<Internal.ByteBuf>;
        order(): Internal.ByteOrder;
        toByteIndex(arg0: number): number;
        writeByte(arg0: number): Internal.CompositeByteBuf;
        writeByte(arg0: number): Internal.ByteBuf;
        writeMedium(arg0: number): Internal.CompositeByteBuf;
        writeMedium(arg0: number): Internal.ByteBuf;
        nioBuffer(arg0: number, arg1: number): Internal.ByteBuffer;
        resetWriterIndex(): Internal.ByteBuf;
        resetWriterIndex(): Internal.CompositeByteBuf;
        touch(): Internal.ReferenceCounted;
        touch(): Internal.ByteBuf;
        touch(): Internal.CompositeByteBuf;
        touch(arg0: any): Internal.ByteBuf;
        touch(arg0: any): Internal.ReferenceCounted;
        touch(arg0: any): Internal.CompositeByteBuf;
        discardSomeReadBytes(): Internal.CompositeByteBuf;
        discardSomeReadBytes(): Internal.ByteBuf;
        internalComponentAtOffset(arg0: number): Internal.ByteBuf;
        writerIndex(arg0: number): Internal.CompositeByteBuf;
        writerIndex(arg0: number): Internal.ByteBuf;
        nioBufferCount(): number;
        discardReadComponents(): Internal.CompositeByteBuf;
        setInt(arg0: number, arg1: number): Internal.ByteBuf;
        setInt(arg0: number, arg1: number): Internal.CompositeByteBuf;
        setLong(arg0: number, arg1: number): Internal.ByteBuf;
        setLong(arg0: number, arg1: number): Internal.CompositeByteBuf;
        removeComponent(arg0: number): Internal.CompositeByteBuf;
        writeBytes(arg0: Internal.ByteBuffer): Internal.CompositeByteBuf;
        writeBytes(arg0: Internal.ByteBuffer): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf): Internal.CompositeByteBuf;
        writeBytes(arg0: Internal.ByteBuf): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf, arg1: number): Internal.CompositeByteBuf;
        writeBytes(arg0: Internal.ByteBuf, arg1: number): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.CompositeByteBuf;
        writeBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.ByteBuf;
        writeBytes(arg0: number[]): Internal.CompositeByteBuf;
        writeBytes(arg0: number[]): Internal.ByteBuf;
        writeBytes(arg0: number[], arg1: number, arg2: number): Internal.CompositeByteBuf;
        writeBytes(arg0: number[], arg1: number, arg2: number): Internal.ByteBuf;
        componentAtOffset(arg0: number): Internal.ByteBuf;
        setIndex(arg0: number, arg1: number): Internal.CompositeByteBuf;
        setIndex(arg0: number, arg1: number): Internal.ByteBuf;
        markWriterIndex(): Internal.ByteBuf;
        markWriterIndex(): Internal.CompositeByteBuf;
        writeShort(arg0: number): Internal.CompositeByteBuf;
        writeShort(arg0: number): Internal.ByteBuf;
        alloc(): Internal.ByteBufAllocator;
        removeComponents(arg0: number, arg1: number): Internal.CompositeByteBuf;
        writeBoolean(arg0: boolean): Internal.ByteBuf;
        writeBoolean(arg0: boolean): Internal.CompositeByteBuf;
        numComponents(): number;
        setByte(arg0: number, arg1: number): Internal.CompositeByteBuf;
        setByte(arg0: number, arg1: number): Internal.ByteBuf;
        toComponentIndex(arg0: number): number;
        decompose(arg0: number, arg1: number): Internal.List<Internal.ByteBuf>;
        retain(arg0: number): Internal.ReferenceCounted;
        retain(arg0: number): Internal.ByteBuf;
        retain(arg0: number): Internal.CompositeByteBuf;
        retain(): Internal.ByteBuf;
        retain(): Internal.CompositeByteBuf;
        retain(): Internal.ReferenceCounted;
        capacity(arg0: number): Internal.CompositeByteBuf;
        capacity(arg0: number): Internal.ByteBuf;
        capacity(): number;
        hasMemoryAddress(): boolean;
        writeLong(arg0: number): Internal.ByteBuf;
        writeLong(arg0: number): Internal.CompositeByteBuf;
        array(): number[];
        internalNioBuffer(arg0: number, arg1: number): Internal.ByteBuffer;
        internalComponent(arg0: number): Internal.ByteBuf;
        arrayOffset(): number;
        copy(arg0: number, arg1: number): Internal.ByteBuf;
        writeDouble(arg0: number): Internal.ByteBuf;
        writeDouble(arg0: number): Internal.CompositeByteBuf;
        writeInt(arg0: number): Internal.ByteBuf;
        writeInt(arg0: number): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf): Internal.ByteBuf;
        setBytes(arg0: number, arg1: number[]): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: number[]): Internal.ByteBuf;
        setBytes(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuffer): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuffer): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number, arg3: number): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number, arg3: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.FileChannel, arg2: number, arg3: number): number;
        setBytes(arg0: number, arg1: Internal.ScatteringByteChannel, arg2: number): number;
        setBytes(arg0: number, arg1: Internal.InputStream, arg2: number): number;
        maxNumComponents(): number;
        ensureWritable(arg0: number): Internal.ByteBuf;
        ensureWritable(arg0: number): Internal.CompositeByteBuf;
        setFloat(arg0: number, arg1: number): Internal.CompositeByteBuf;
        setFloat(arg0: number, arg1: number): Internal.ByteBuf;
        hasArray(): boolean;
        memoryAddress(): number;
        consolidate(): Internal.CompositeByteBuf;
        consolidate(arg0: number, arg1: number): Internal.CompositeByteBuf;
        clear(): Internal.CompositeByteBuf;
        clear(): Internal.ByteBuf;
        discardReadBytes(): Internal.ByteBuf;
        discardReadBytes(): Internal.CompositeByteBuf;
        nioBuffers(arg0: number, arg1: number): Internal.ByteBuffer[];
        nioBuffers(): Internal.ByteBuffer[];
        skipBytes(arg0: number): Internal.ByteBuf;
        skipBytes(arg0: number): Internal.CompositeByteBuf;
        writeChar(arg0: number): Internal.ByteBuf;
        writeChar(arg0: number): Internal.CompositeByteBuf;
        component(arg0: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf): Internal.CompositeByteBuf;
        readBytes(arg0: number[]): Internal.ByteBuf;
        readBytes(arg0: number[]): Internal.CompositeByteBuf;
        readBytes(arg0: number[], arg1: number, arg2: number): Internal.ByteBuf;
        readBytes(arg0: number[], arg1: number, arg2: number): Internal.CompositeByteBuf;
        readBytes(arg0: Internal.ByteBuffer): Internal.CompositeByteBuf;
        readBytes(arg0: Internal.ByteBuffer): Internal.ByteBuf;
        readBytes(arg0: Internal.OutputStream, arg1: number): Internal.CompositeByteBuf;
        readBytes(arg0: Internal.OutputStream, arg1: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number): Internal.CompositeByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.CompositeByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.ByteBuf;
        setZero(arg0: number, arg1: number): Internal.CompositeByteBuf;
        setZero(arg0: number, arg1: number): Internal.ByteBuf;
        toString(): string;
        isDirect(): boolean;
        setMedium(arg0: number, arg1: number): Internal.CompositeByteBuf;
        setMedium(arg0: number, arg1: number): Internal.ByteBuf;
        setBoolean(arg0: number, arg1: boolean): Internal.ByteBuf;
        setBoolean(arg0: number, arg1: boolean): Internal.CompositeByteBuf;
        get direct(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CompositeByteBuf_ = CompositeByteBuf;
    class SSpawnParticlePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_149227_j(): number;
        func_149222_k(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149223_i(): number;
        func_197699_j(): Internal.IParticleData;
        func_149224_h(): number;
        func_149225_f(): number;
        func_149226_e(): number;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_149221_g(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149220_d(): number;
        func_179750_b(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SSpawnParticlePacket_ = SSpawnParticlePacket;
    abstract class RectangularShape extends Document.Object implements Internal.Shape, Internal.Cloneable {
        intersects(arg0: Internal.Rectangle2D): boolean;
        getFrame(): Internal.Rectangle2D;
        getMaxX(): number;
        isEmpty(): boolean;
        getMaxY(): number;
        getWidth(): number;
        getBounds(): Internal.Rectangle;
        setFrameFromCenter(arg0: Internal.Point2D, arg1: Internal.Point2D): void;
        setFrameFromCenter(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setFrameFromDiagonal(arg0: Internal.Point2D, arg1: Internal.Point2D): void;
        setFrameFromDiagonal(arg0: number, arg1: number, arg2: number, arg3: number): void;
        getHeight(): number;
        contains(arg0: Internal.Point2D): boolean;
        contains(arg0: Internal.Rectangle2D): boolean;
        getX(): number;
        getY(): number;
        getPathIterator(arg0: Internal.AffineTransform, arg1: number): Internal.PathIterator;
        setFrame(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setFrame(arg0: Internal.Point2D, arg1: Internal.Dimension2D): void;
        setFrame(arg0: Internal.Rectangle2D): void;
        clone(): any;
        getCenterY(): number;
        getCenterX(): number;
        getMinX(): number;
        getMinY(): number;
        get centerY(): number;
        get centerX(): number;
        get maxY(): number;
        get maxX(): number;
        get empty(): boolean;
        get minY(): number;
        get minX(): number;
        get width(): number;
        get bounds(): Internal.Rectangle;
        get x(): number;
        get y(): number;
        get frame(): Internal.Rectangle2D;
        get height(): number;
        set frame(arg0: Internal.Rectangle2D);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RectangularShape_ = RectangularShape;
    class BushFoliagePlacer extends Internal.BlobFoliagePlacer {
        static readonly field_236743_c_ : Internal.Codec<Internal.BushFoliagePlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BushFoliagePlacer_ = BushFoliagePlacer;
    abstract class GuiScreenEvent$MouseDragEvent extends Internal.GuiScreenEvent$MouseInputEvent {
        getListenerList(): Internal.ListenerList;
        getMouseButton(): number;
        getDragX(): number;
        getDragY(): number;
        get dragX(): number;
        get dragY(): number;
        get listenerList(): Internal.ListenerList;
        get mouseButton(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$MouseDragEvent_ = GuiScreenEvent$MouseDragEvent;
    class UnboundedMapCodec <K, V> extends Document.Object implements Internal.BaseMapCodec<K, V>, Internal.Codec<Internal.Map<K, V>> {
        encode<T_>(arg0: Internal.Map_<K, V>, arg1: Internal.DynamicOps<T_>, arg2: T_): Internal.DataResult<T_>;
        encode(arg0: any, arg1: Internal.DynamicOps<any>, arg2: any): Internal.DataResult<any>;
        elementCodec(): Internal.Codec<V>;
        hashCode(): number;
        keyCodec(): Internal.Codec<K>;
        equals(arg0: any): boolean;
        toString(): string;
        decode<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<com.mojang.datafixers.util.Pair<Internal.Map<K, V>, T_>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type UnboundedMapCodec_<K, V> = UnboundedMapCodec<K, V>;
    interface IPackFinder {
        func_230230_a_(arg0: ((arg0: Internal.ResourcePackInfo) => void), arg1: ((arg0: string, arg1: boolean, arg2: (() => Internal.IResourcePack), arg3: Internal.IResourcePack, arg4: Internal.PackMetadataSection, arg5: Internal.ResourcePackInfo$Priority, arg6: Internal.IPackNameDecorator) => Internal.ResourcePackInfo)): void;
    }
    type IPackFinder_ = IPackFinder;
    class Event$Result extends Internal.Enum<Internal.Event$Result> {
        static valueOf(arg0: string): Internal.Event$Result;
        static values(): Internal.Event$Result[];
        static readonly DENY : Internal.Event$Result;
        static readonly DEFAULT : Internal.Event$Result;
        static readonly ALLOW : Internal.Event$Result;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Event$Result_ = "deny" | "default" | "allow" | Event$Result;
    interface IItemColor {
        getColor(arg0: Internal.ItemStack, arg1: number): number;
    }
    type IItemColor_ = IItemColor;
    abstract class Particle extends Document.Object {
        func_70541_f(arg0: number): Internal.Particle;
        func_70543_e(arg0: number): Internal.Particle;
        func_206254_h(): number;
        func_70538_b(arg0: number, arg1: number, arg2: number): void;
        func_187110_a(arg0: number, arg1: number, arg2: number): void;
        func_187114_a(arg0: number): void;
        func_225606_a_(arg0: Internal.IVertexBuilder, arg1: Internal.ActiveRenderInfo, arg2: number): void;
        shouldCull(): boolean;
        func_187108_a(arg0: Internal.AxisAlignedBB): void;
        func_189213_a(): void;
        func_187112_i(): void;
        func_187109_b(arg0: number, arg1: number, arg2: number): void;
        toString(): string;
        func_187113_k(): boolean;
        func_187116_l(): Internal.AxisAlignedBB;
        func_217558_b(): Internal.IParticleRenderType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Particle_ = Particle;
    interface ICommandSource {
        func_195039_a(): boolean;
        func_145747_a(arg0: Internal.ITextComponent_, arg1: Internal.UUID): void;
        func_195041_r_(): boolean;
        func_195040_b(): boolean;
    }
    type ICommandSource_ = ICommandSource;
    class ChestTileEntity extends Internal.LockableLootTileEntity implements Internal.IChestLid, Internal.ITickableTileEntity {
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        static func_213977_a(arg0: Internal.World, arg1: Internal.LockableTileEntity, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): number;
        func_195480_a(arg0: number): number;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        static func_195481_a(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        static func_213976_a(arg0: Internal.World, arg1: Internal.LockableTileEntity, arg2: number, arg3: number, arg4: number): number;
        func_73660_a(): void;
        func_145836_u(): void;
        func_70302_i_(): number;
        func_145842_c(arg0: number, arg1: number): boolean;
        static func_199722_a(arg0: Internal.ChestTileEntity, arg1: Internal.ChestTileEntity): void;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChestTileEntity_ = ChestTileEntity;
    class SUpdateScorePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149321_d(): string;
        func_149323_e(): number;
        func_149324_c(): string;
        func_197701_d(): Internal.ServerScoreboard$Action;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SUpdateScorePacket_ = SUpdateScorePacket;
    class FluidAttributes extends Document.Object {
        getBlock(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.FluidState): Internal.BlockState;
        getOverlayTexture(): ResourceLocation;
        getStateForPlacement(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: net.minecraftforge.fluids.FluidStack): Internal.FluidState;
        isLighterThanAir(): boolean;
        getTranslationKey(): string;
        getTranslationKey(arg0: net.minecraftforge.fluids.FluidStack): string;
        getColor(arg0: net.minecraftforge.fluids.FluidStack): number;
        getColor(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): number;
        getColor(): number;
        getFillSound(arg0: net.minecraftforge.fluids.FluidStack): Internal.SoundEvent;
        getFillSound(): Internal.SoundEvent;
        getFillSound(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): Internal.SoundEvent;
        isGaseous(arg0: net.minecraftforge.fluids.FluidStack): boolean;
        isGaseous(): boolean;
        isGaseous(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): boolean;
        getRarity(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): Internal.Rarity;
        getRarity(): Internal.Rarity;
        getRarity(arg0: net.minecraftforge.fluids.FluidStack): Internal.Rarity;
        getDensity(arg0: net.minecraftforge.fluids.FluidStack): number;
        getDensity(): number;
        getDensity(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): number;
        getEmptySound(): Internal.SoundEvent;
        getEmptySound(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): Internal.SoundEvent;
        getEmptySound(arg0: net.minecraftforge.fluids.FluidStack): Internal.SoundEvent;
        getLuminosity(arg0: net.minecraftforge.fluids.FluidStack): number;
        getLuminosity(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): number;
        getLuminosity(): number;
        getBucket(arg0: net.minecraftforge.fluids.FluidStack): Internal.ItemStack;
        doesVaporize(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: net.minecraftforge.fluids.FluidStack): boolean;
        getViscosity(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): number;
        getViscosity(): number;
        getViscosity(arg0: net.minecraftforge.fluids.FluidStack): number;
        getFlowingTexture(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): ResourceLocation;
        getFlowingTexture(): ResourceLocation;
        getFlowingTexture(arg0: net.minecraftforge.fluids.FluidStack): ResourceLocation;
        getDisplayName(arg0: net.minecraftforge.fluids.FluidStack): Internal.ITextComponent;
        canBePlacedInWorld(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: net.minecraftforge.fluids.FluidStack): boolean;
        canBePlacedInWorld(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.FluidState): boolean;
        static builder(arg0: ResourceLocation_, arg1: ResourceLocation_): Internal.FluidAttributes$Builder;
        getTextures(): Internal.Stream<ResourceLocation>;
        vaporize(arg0: Internal.PlayerEntity, arg1: Internal.World, arg2: BlockPos, arg3: net.minecraftforge.fluids.FluidStack): void;
        getTemperature(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): number;
        getTemperature(): number;
        getTemperature(arg0: net.minecraftforge.fluids.FluidStack): number;
        getStillTexture(): ResourceLocation;
        getStillTexture(arg0: net.minecraftforge.fluids.FluidStack): ResourceLocation;
        getStillTexture(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): ResourceLocation;
        static readonly BUCKET_VOLUME : 1000;
        get overlayTexture(): ResourceLocation;
        get translationKey(): string;
        get color(): number;
        get density(): number;
        get textures(): Internal.Stream<ResourceLocation>;
        get lighterThanAir(): boolean;
        get gaseous(): boolean;
        get emptySound(): Internal.SoundEvent;
        get viscosity(): number;
        get stillTexture(): ResourceLocation;
        get flowingTexture(): ResourceLocation;
        get temperature(): number;
        get luminosity(): number;
        get fillSound(): Internal.SoundEvent;
        get rarity(): Internal.Rarity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FluidAttributes_ = FluidAttributes;
    abstract class AbstractIllagerEntity extends Internal.AbstractRaiderEntity {
        func_70668_bt(): Internal.CreatureAttribute;
        func_193077_p(): Internal.AbstractIllagerEntity$ArmPose;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractIllagerEntity_ = AbstractIllagerEntity;
    class IFocus$Mode extends Internal.Enum<Internal.IFocus$Mode> {
        static valueOf(arg0: string): Internal.IFocus$Mode;
        static values(): Internal.IFocus$Mode[];
        static readonly INPUT : Internal.IFocus$Mode;
        static readonly OUTPUT : Internal.IFocus$Mode;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IFocus$Mode_ = "input" | "output" | IFocus$Mode;
    class PiglinBruteEntity extends Internal.AbstractPiglinEntity {
        func_234422_eK_(): boolean;
        func_230293_i_(arg0: Internal.ItemStack): boolean;
        func_234424_eM_(): Internal.PiglinAction;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        static func_242344_eS(): Internal.AttributeModifierMap$MutableAttribute;
        func_213375_cj(): Internal.Brain<Internal.PiglinBruteEntity>;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PiglinBruteEntity_ = PiglinBruteEntity;
    interface Collection <E> extends Internal.Iterable<E> {
        add(arg0: E): boolean;
        spliterator(): Internal.Spliterator<E>;
        containsAll(arg0: Internal.Collection<any>): boolean;
        isEmpty(): boolean;
        clear(): void;
        remove(arg0: any): boolean;
        removeIf(arg0: ((arg0: E) => boolean)): boolean;
        removeAll(arg0: Internal.Collection<any>): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<E>;
        size(): number;
        addAll(arg0: Internal.Collection<E>): boolean;
        stream(): Internal.Stream<E>;
        hashCode(): number;
        equals(arg0: any): boolean;
        toArray<T_>(arg0: T_[]): T_[];
        toArray<T_>(arg0: ((arg0: number) => T_[])): T_[];
        toArray(): any[];
        parallelStream(): Internal.Stream<E>;
        retainAll(arg0: Internal.Collection<any>): boolean;
    }
    type Collection_<E> = Collection<E>;
    class ModuleDescriptor$Provides extends Document.Object implements Internal.Comparable<Internal.ModuleDescriptor$Provides> {
        service(): string;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.ModuleDescriptor$Provides): number;
        providers(): Internal.List<string>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleDescriptor$Provides_ = ModuleDescriptor$Provides;
    interface TypeFamily {
        apply(arg0: number): Internal.Type<any>;
    }
    type TypeFamily_ = TypeFamily;
    class ImmutableMultiset$Builder <E> extends Internal.ImmutableCollection$Builder<E> {
        add(arg0: E[]): Internal.ImmutableMultiset$Builder<E>;
        add(arg0: any[]): Internal.ImmutableCollection$Builder<any>;
        add(arg0: any): Internal.ImmutableCollection$Builder<any>;
        add(arg0: E): Internal.ImmutableMultiset$Builder<E>;
        build(): Internal.ImmutableCollection<any>;
        build(): Internal.ImmutableMultiset<E>;
        addAll(arg0: Internal.Iterator<any>): Internal.ImmutableCollection$Builder<any>;
        addAll(arg0: Internal.Iterator<E>): Internal.ImmutableMultiset$Builder<E>;
        addAll(arg0: Internal.Iterable<any>): Internal.ImmutableCollection$Builder<any>;
        addAll(arg0: Internal.Iterable<E>): Internal.ImmutableMultiset$Builder<E>;
        addCopies(arg0: E, arg1: number): Internal.ImmutableMultiset$Builder<E>;
        setCount(arg0: E, arg1: number): Internal.ImmutableMultiset$Builder<E>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableMultiset$Builder_<E> = ImmutableMultiset$Builder<E>;
    abstract class PlayerEventJS extends Internal.LivingEntityEventJS {
        addGameStage(stage: string): void;
        getPlayer(): Internal.PlayerJS<any>;
        getMinecraftPlayer(): Internal.PlayerEntity;
        hasGameStage(stage: string): boolean;
        removeGameStage(stage: string): void;
        get minecraftPlayer(): Internal.PlayerEntity;
        get player(): Internal.PlayerJS<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerEventJS_ = PlayerEventJS;
    class SPlaySoundEventPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149242_d(): number;
        func_149241_e(): number;
        func_149244_c(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179746_d(): BlockPos;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlaySoundEventPacket_ = SPlaySoundEventPacket;
    class SimpleTexture extends Internal.Texture {
        func_195413_a(arg0: Internal.IResourceManager): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SimpleTexture_ = SimpleTexture;
    abstract class ForwardingMultimap <K, V> extends Internal.ForwardingObject implements Internal.Multimap<K, V> {
        containsEntry(arg0: any, arg1: any): boolean;
        asMap(): Internal.Map<K, Internal.Collection<V>>;
        keys(): Internal.Multiset<K>;
        containsKey(arg0: any): boolean;
        values(): Internal.Collection<V>;
        isEmpty(): boolean;
        clear(): void;
        replaceValues(arg0: K, arg1: Internal.Iterable<V>): Internal.Collection<V>;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): boolean;
        remove(arg0: any, arg1: any): boolean;
        removeAll(arg0: any): Internal.Collection<V>;
        entries(): Internal.Collection<Internal.Map$Entry<K, V>>;
        size(): number;
        hashCode(): number;
        putAll(arg0: Internal.Multimap<K, V>): boolean;
        putAll(arg0: K, arg1: Internal.Iterable<V>): boolean;
        equals(arg0: any): boolean;
        get(arg0: K): Internal.Collection<V>;
        keySet(): Internal.Set<K>;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ForwardingMultimap_<K, V> = ForwardingMultimap<K, V>;
    interface IAnimatedSprite {
        func_217591_a(arg0: number, arg1: number): Internal.TextureAtlasSprite;
        func_217590_a(arg0: Internal.Random): Internal.TextureAtlasSprite;
    }
    type IAnimatedSprite_ = IAnimatedSprite;
    interface ISpawnWorldInfo extends Internal.IWorldInfo {
        func_76087_c(arg0: number): void;
        func_76056_b(arg0: number): void;
        func_76058_a(arg0: number): void;
        func_241859_a(arg0: number): void;
        func_176143_a(arg0: BlockPos, arg1: number): void;
    }
    type ISpawnWorldInfo_ = ISpawnWorldInfo;
    class FireworkRocketRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_77571_b(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FireworkRocketRecipe_ = FireworkRocketRecipe;
    class PointerBuffer extends Internal.CustomBuffer<Internal.PointerBuffer> implements Internal.Comparable<Internal.PointerBuffer> {
        static allocateDirect(arg0: number): Internal.PointerBuffer;
        getFloatBuffer(arg0: number, arg1: number): Internal.FloatBuffer;
        getFloatBuffer(arg0: number): Internal.FloatBuffer;
        getStringUTF8(arg0: number): string;
        getStringUTF8(): string;
        sizeof(): number;
        getIntBuffer(arg0: number, arg1: number): Internal.IntBuffer;
        getIntBuffer(arg0: number): Internal.IntBuffer;
        getByteBuffer(arg0: number, arg1: number): Internal.ByteBuffer;
        getByteBuffer(arg0: number): Internal.ByteBuffer;
        getShortBuffer(arg0: number, arg1: number): Internal.ShortBuffer;
        getShortBuffer(arg0: number): Internal.ShortBuffer;
        putAddressOf(arg0: number, arg1: Internal.CustomBuffer<any>): Internal.PointerBuffer;
        putAddressOf(arg0: Internal.CustomBuffer<any>): Internal.PointerBuffer;
        compareTo(arg0: Internal.PointerBuffer): number;
        compareTo(arg0: any): number;
        put(arg0: Internal.IntBuffer): Internal.PointerBuffer;
        put(arg0: Internal.ShortBuffer): Internal.PointerBuffer;
        put(arg0: Internal.FloatBuffer): Internal.PointerBuffer;
        put(arg0: Internal.DoubleBuffer): Internal.PointerBuffer;
        put(arg0: Internal.LongBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.DoubleBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.FloatBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.LongBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.IntBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.ShortBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.ByteBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: number): Internal.PointerBuffer;
        static put(arg0: Internal.ByteBuffer, arg1: number): void;
        put(arg0: number): Internal.PointerBuffer;
        put(arg0: number[]): Internal.PointerBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.PointerBuffer;
        put(arg0: Internal.ByteBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.Pointer): Internal.PointerBuffer;
        put(arg0: Internal.Pointer): Internal.PointerBuffer;
        static put(arg0: Internal.ByteBuffer, arg1: number, arg2: number): void;
        getStringASCII(arg0: number): string;
        getStringASCII(): string;
        getStringUTF16(arg0: number): string;
        getStringUTF16(): string;
        getPointerBuffer(arg0: number, arg1: number): Internal.PointerBuffer;
        getPointerBuffer(arg0: number): Internal.PointerBuffer;
        hashCode(): number;
        equals(arg0: any): boolean;
        get(arg0: number[], arg1: number, arg2: number): Internal.PointerBuffer;
        static get(arg0: Internal.ByteBuffer): number;
        get(): number;
        get(arg0: number): number;
        static get(arg0: Internal.ByteBuffer, arg1: number): number;
        get(arg0: number[]): Internal.PointerBuffer;
        static create(arg0: Internal.ByteBuffer): Internal.PointerBuffer;
        static create(arg0: number, arg1: number): Internal.PointerBuffer;
        getLongBuffer(arg0: number, arg1: number): Internal.LongBuffer;
        getLongBuffer(arg0: number): Internal.LongBuffer;
        getDoubleBuffer(arg0: number): Internal.DoubleBuffer;
        getDoubleBuffer(arg0: number, arg1: number): Internal.DoubleBuffer;
        get stringASCII(): string;
        get stringUTF16(): string;
        get stringUTF8(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PointerBuffer_ = PointerBuffer;
    abstract class PatrollerEntity extends Internal.MonsterEntity {
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_213635_r(arg0: boolean): void;
        func_213634_ed(): boolean;
        func_70033_W(): number;
        func_213630_eb(): boolean;
        static func_223330_b(arg0: Internal.EntityType<Internal.PatrollerEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_213397_c(arg0: number): boolean;
        func_213636_ee(): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_213632_ea(): boolean;
        func_213638_dZ(): BlockPos;
        func_213637_dY(): boolean;
        func_213631_g(arg0: BlockPos): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PatrollerEntity_ = PatrollerEntity;
    abstract class JsonReloadListener extends Internal.ReloadListener<Internal.Map<ResourceLocation, Internal.JsonElement>> {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JsonReloadListener_ = JsonReloadListener;
    interface TemporalAmount {
        subtractFrom(arg0: Internal.Temporal): Internal.Temporal;
        get(arg0: Internal.TemporalUnit): number;
        getUnits(): Internal.List<Internal.TemporalUnit>;
        addTo(arg0: Internal.Temporal): Internal.Temporal;
    }
    type TemporalAmount_ = TemporalAmount;
    interface AbstractBlock$IPositionPredicate {
        test(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
    }
    type AbstractBlock$IPositionPredicate_ = AbstractBlock$IPositionPredicate;
    interface IntStream extends Internal.BaseStream<number, Internal.IntStream> {
        average(): Internal.OptionalDouble;
        sequential(): Internal.BaseStream<any, any>;
        sequential(): Internal.IntStream;
        takeWhile(arg0: ((arg0: number) => boolean)): Internal.IntStream;
        distinct(): Internal.IntStream;
        findFirst(): Internal.OptionalInt;
        sum(): number;
        skip(arg0: number): Internal.IntStream;
        asLongStream(): Internal.LongStream;
        allMatch(arg0: ((arg0: number) => boolean)): boolean;
        mapToObj<U_>(arg0: ((arg0: number) => U_)): Internal.Stream<U_>;
        mapMulti(arg0: ((arg0: number, arg1: ((arg0: number) => void)) => void)): Internal.IntStream;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.PrimitiveIterator$OfInt;
        asDoubleStream(): Internal.DoubleStream;
        min(): Internal.OptionalInt;
        mapToLong(arg0: ((arg0: number) => number)): Internal.LongStream;
        parallel(): Internal.BaseStream<any, any>;
        parallel(): Internal.IntStream;
        noneMatch(arg0: ((arg0: number) => boolean)): boolean;
        findAny(): Internal.OptionalInt;
        limit(arg0: number): Internal.IntStream;
        toArray(): number[];
        forEachOrdered(arg0: ((arg0: number) => void)): void;
        anyMatch(arg0: ((arg0: number) => boolean)): boolean;
        map(arg0: ((arg0: number) => number)): Internal.IntStream;
        mapToDouble(arg0: ((arg0: number) => number)): Internal.DoubleStream;
        reduce(arg0: number, arg1: ((arg0: number, arg1: number) => number)): number;
        reduce(arg0: ((arg0: number, arg1: number) => number)): Internal.OptionalInt;
        spliterator(): Internal.Spliterator$OfInt;
        spliterator(): Internal.Spliterator<any>;
        max(): Internal.OptionalInt;
        forEach(arg0: ((arg0: number) => void)): void;
        count(): number;
        dropWhile(arg0: ((arg0: number) => boolean)): Internal.IntStream;
        peek(arg0: ((arg0: number) => void)): Internal.IntStream;
        flatMap(arg0: ((arg0: number) => Internal.IntStream)): Internal.IntStream;
        filter(arg0: ((arg0: number) => boolean)): Internal.IntStream;
        sorted(): Internal.IntStream;
        boxed(): Internal.Stream<number>;
        summaryStatistics(): Internal.IntSummaryStatistics;
        collect<R_>(arg0: (() => R_), arg1: ((arg0: R_, arg1: number) => void), arg2: ((arg0: R_, arg1: R_) => void)): R_;
    }
    type IntStream_ = IntStream;
    class ClientLoggedInEventJS extends Internal.ClientEventJS {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientLoggedInEventJS_ = ClientLoggedInEventJS;
    class AbstractBlock$Properties extends Document.Object {
        func_200941_a(arg0: number): Internal.AbstractBlock$Properties;
        func_226898_c_(arg0: number): Internal.AbstractBlock$Properties;
        func_222379_b(arg0: Internal.Block): Internal.AbstractBlock$Properties;
        func_200942_a(): Internal.AbstractBlock$Properties;
        func_235852_d_(arg0: Internal.AbstractBlock$IPositionPredicate): Internal.AbstractBlock$Properties;
        func_200943_b(arg0: number): Internal.AbstractBlock$Properties;
        static func_200945_a(arg0: Internal.Material): Internal.AbstractBlock$Properties;
        func_200944_c(): Internal.AbstractBlock$Properties;
        func_200946_b(): Internal.AbstractBlock$Properties;
        func_200947_a(arg0: Internal.SoundType): Internal.AbstractBlock$Properties;
        func_200948_a(arg0: number, arg1: number): Internal.AbstractBlock$Properties;
        func_235847_c_(arg0: Internal.AbstractBlock$IPositionPredicate): Internal.AbstractBlock$Properties;
        getHarvestLevel(): number;
        static func_200949_a(arg0: Internal.Material, arg1: Internal.MaterialColor): Internal.AbstractBlock$Properties;
        func_235828_a_(arg0: Internal.AbstractBlock$IPositionPredicate): Internal.AbstractBlock$Properties;
        func_235842_b_(arg0: Internal.AbstractBlock$IPositionPredicate): Internal.AbstractBlock$Properties;
        func_235861_h_(): Internal.AbstractBlock$Properties;
        func_222380_e(): Internal.AbstractBlock$Properties;
        func_208770_d(): Internal.AbstractBlock$Properties;
        static func_200950_a(arg0: Internal.AbstractBlock): Internal.AbstractBlock$Properties;
        func_226896_b_(): Internal.AbstractBlock$Properties;
        getHarvestTool(): Internal.ToolType;
        static func_200952_a(arg0: Internal.Material, arg1: Internal.DyeColor_): Internal.AbstractBlock$Properties;
        func_235856_e_(arg0: Internal.AbstractBlock$IPositionPredicate): Internal.AbstractBlock$Properties;
        func_235827_a_(arg0: Internal.AbstractBlock$IExtendedPositionPredicate<Internal.EntityType<any>>): Internal.AbstractBlock$Properties;
        lootFrom(arg0: (() => Internal.Block)): Internal.AbstractBlock$Properties;
        func_235859_g_(): Internal.AbstractBlock$Properties;
        static func_235836_a_(arg0: Internal.Material, arg1: ((arg0: Internal.BlockState) => Internal.MaterialColor)): Internal.AbstractBlock$Properties;
        func_226897_b_(arg0: number): Internal.AbstractBlock$Properties;
        harvestTool(arg0: Internal.ToolType): Internal.AbstractBlock$Properties;
        func_235838_a_(arg0: ((arg0: Internal.BlockState) => number)): Internal.AbstractBlock$Properties;
        harvestLevel(arg0: number): Internal.AbstractBlock$Properties;
        field_200953_a : Internal.Material;
        field_200960_h : boolean;
        field_226893_j_ : number;
        field_235803_e_ : ((arg0: Internal.BlockState) => number);
        field_235806_h_ : boolean;
        field_208772_j : boolean;
        field_200959_g : number;
        field_235813_o_ : boolean;
        field_200958_f : number;
        field_200955_c : boolean;
        field_226895_m_ : boolean;
        field_235800_b_ : ((arg0: Internal.BlockState) => Internal.MaterialColor);
        field_200956_d : Internal.SoundType;
        field_200961_i : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractBlock$Properties_ = AbstractBlock$Properties;
    class SPlayEntityEffectPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179707_f(): boolean;
        func_186984_g(): boolean;
        func_149429_c(): boolean;
        func_149427_e(): number;
        func_205527_h(): boolean;
        func_149428_f(): number;
        func_180755_e(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149426_d(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlayEntityEffectPacket_ = SPlayEntityEffectPacket;
    class STBTTFontinfo$Buffer extends Internal.StructBuffer<Internal.STBTTFontinfo, Internal.STBTTFontinfo$Buffer> implements Internal.NativeResource {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type STBTTFontinfo$Buffer_ = STBTTFontinfo$Buffer;
    interface ObjectBidirectionalIterable <K> extends Internal.ObjectIterable<K> {
        iterator(): Internal.ObjectBidirectionalIterator<K>;
        iterator(): Internal.ObjectIterator<any>;
        iterator(): Internal.Iterator<any>;
    }
    type ObjectBidirectionalIterable_<K> = ObjectBidirectionalIterable<K>;
    interface ObjDoubleConsumer <T> {
        accept(arg0: T, arg1: number): void;
    }
    type ObjDoubleConsumer_<T> = ((arg0: T, arg1: number) => void) | ObjDoubleConsumer<T>;
    interface ColorResolver {
        getColor(arg0: Internal.Biome, arg1: number, arg2: number): number;
    }
    type ColorResolver_ = ColorResolver;
    class DirectMethodHandleDesc$Kind extends Internal.Enum<Internal.DirectMethodHandleDesc$Kind> {
        static valueOf(arg0: number, arg1: boolean): Internal.DirectMethodHandleDesc$Kind;
        static valueOf(arg0: string): Internal.DirectMethodHandleDesc$Kind;
        static valueOf(arg0: number): Internal.DirectMethodHandleDesc$Kind;
        static values(): Internal.DirectMethodHandleDesc$Kind[];
        static readonly INTERFACE_SPECIAL : Internal.DirectMethodHandleDesc$Kind;
        readonly refKind : number;
        static readonly SETTER : Internal.DirectMethodHandleDesc$Kind;
        static readonly SPECIAL : Internal.DirectMethodHandleDesc$Kind;
        static readonly STATIC : Internal.DirectMethodHandleDesc$Kind;
        static readonly GETTER : Internal.DirectMethodHandleDesc$Kind;
        static readonly STATIC_GETTER : Internal.DirectMethodHandleDesc$Kind;
        static readonly INTERFACE_VIRTUAL : Internal.DirectMethodHandleDesc$Kind;
        static readonly STATIC_SETTER : Internal.DirectMethodHandleDesc$Kind;
        static readonly CONSTRUCTOR : Internal.DirectMethodHandleDesc$Kind;
        readonly isInterface : boolean;
        static readonly INTERFACE_STATIC : Internal.DirectMethodHandleDesc$Kind;
        static readonly VIRTUAL : Internal.DirectMethodHandleDesc$Kind;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DirectMethodHandleDesc$Kind_ = "static" | "interface_static" | "virtual" | "interface_virtual" | "special" | "interface_special" | "constructor" | "getter" | "setter" | "static_getter" | "static_setter" | DirectMethodHandleDesc$Kind;
    interface ITickTimer {
        getValue(): number;
        getMaxValue(): number;
    }
    type ITickTimer_ = ITickTimer;
    interface IRecipeManager {
        getRecipeCatalysts(arg0: Internal.IRecipeCategory<any>, arg1: boolean): Internal.List<any>;
        getRecipeCatalysts(arg0: Internal.IRecipeCategory<any>): Internal.List<any>;
        addRecipe<T>(arg0: T, arg1: ResourceLocation_): void;
        unhideRecipeCategory(arg0: ResourceLocation_): void;
        createRecipeLayoutDrawable<T>(arg0: Internal.IRecipeCategory<T>, arg1: T, arg2: Internal.IFocus<any>): Internal.IRecipeLayoutDrawable;
        hideRecipeCategory(arg0: ResourceLocation_): void;
        getRecipeCategory(arg0: ResourceLocation_): Internal.IRecipeCategory<any>;
        getRecipeCategory(arg0: ResourceLocation_, arg1: boolean): Internal.IRecipeCategory<any>;
        unhideRecipe<T>(arg0: T, arg1: ResourceLocation_): void;
        getRecipeCategories<V>(arg0: Internal.IFocus<V>): Internal.List<Internal.IRecipeCategory<any>>;
        getRecipeCategories(): Internal.List<Internal.IRecipeCategory<any>>;
        getRecipeCategories(arg0: Internal.List<ResourceLocation>): Internal.List<Internal.IRecipeCategory<any>>;
        getRecipeCategories<V>(arg0: Internal.Collection<ResourceLocation>, arg1: Internal.IFocus<V>, arg2: boolean): Internal.List<Internal.IRecipeCategory<any>>;
        getRecipeCategories<V>(arg0: Internal.IFocus<V>, arg1: boolean): Internal.List<Internal.IRecipeCategory<any>>;
        hideRecipe<T>(arg0: T, arg1: ResourceLocation_): void;
        createFocus<V>(arg0: Internal.IFocus$Mode_, arg1: V): Internal.IFocus<V>;
        getRecipes<T>(arg0: Internal.IRecipeCategory<T>): Internal.List<T>;
        getRecipes<T, V>(arg0: Internal.IRecipeCategory<T>, arg1: Internal.IFocus<V>): Internal.List<T>;
        getRecipes<T, V>(arg0: Internal.IRecipeCategory<T>, arg1: Internal.IFocus<V>, arg2: boolean): Internal.List<T>;
    }
    type IRecipeManager_ = IRecipeManager;
    class SHeldItemChangePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149385_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SHeldItemChangePacket_ = SHeldItemChangePacket;
    class AxisRotatingBlockStateProvider extends Internal.BlockStateProvider {
        func_225574_a_(arg0: Internal.Random, arg1: BlockPos): Internal.BlockState;
        static readonly field_236807_b_ : Internal.Codec<Internal.AxisRotatingBlockStateProvider>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AxisRotatingBlockStateProvider_ = AxisRotatingBlockStateProvider;
    class ModelGenerator$Face extends Document.Object {
        uv(u0: number, v0: number, u1: number, v1: number): Internal.ModelGenerator$Face;
        toJson(): Internal.JsonObject;
        tex(t: string): Internal.ModelGenerator$Face;
        cull(d: Internal.Direction_): Internal.ModelGenerator$Face;
        cull(): Internal.ModelGenerator$Face;
        tintindex(i: number): Internal.ModelGenerator$Face;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModelGenerator$Face_ = ModelGenerator$Face;
    interface ILootFunction$IBuilder {
        func_216052_b(): Internal.ILootFunction;
    }
    type ILootFunction$IBuilder_ = ILootFunction$IBuilder;
    class RenderPlayerEvent$Post extends Internal.RenderPlayerEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderPlayerEvent$Post_ = RenderPlayerEvent$Post;
    class ClientPlayerJS extends Internal.PlayerJS<Internal.PlayerEntity> {
        getStats(): Internal.PlayerStatsJS;
        sendData(channel: string, data: Internal.CompoundNBT): void;
        paint(tag: Internal.CompoundNBT): void;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        isSelf(): boolean;
        isMiningBlock(): boolean;
        get stats(): Internal.PlayerStatsJS;
        get miningBlock(): boolean;
        get self(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientPlayerJS_ = ClientPlayerJS;
    class NativeContinuation extends Internal.IdScriptableObject implements dev.latvian.mods.rhino.Function {
        call(cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        static init(cx: Internal.Context, scope: Internal.Scriptable, sealed: boolean): void;
        getImplementation(): any;
        static equalImplementations(c1: Internal.NativeContinuation, c2: Internal.NativeContinuation): boolean;
        execIdCall(f: Internal.IdFunctionObject, cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        getClassName(): string;
        construct(cx: Internal.Context, scope: Internal.Scriptable, args: any[]): Internal.Scriptable;
        initImplementation(implementation: any): void;
        static isContinuationConstructor(f: Internal.IdFunctionObject): boolean;
        get implementation(): any;
        get className(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NativeContinuation_ = NativeContinuation;
    class AbstractArrowEntity$PickupStatus extends Internal.Enum<Internal.AbstractArrowEntity$PickupStatus> {
        static func_188795_a(arg0: number): Internal.AbstractArrowEntity$PickupStatus;
        static valueOf(arg0: string): Internal.AbstractArrowEntity$PickupStatus;
        static values(): Internal.AbstractArrowEntity$PickupStatus[];
        static readonly ALLOWED : Internal.AbstractArrowEntity$PickupStatus;
        static readonly CREATIVE_ONLY : Internal.AbstractArrowEntity$PickupStatus;
        static readonly DISALLOWED : Internal.AbstractArrowEntity$PickupStatus;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractArrowEntity$PickupStatus_ = "disallowed" | "allowed" | "creative_only" | AbstractArrowEntity$PickupStatus;
    abstract class SingleItemRecipe extends Document.Object implements Internal.IRecipe<Internal.IInventory> {
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_199560_c(): ResourceLocation;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_193358_e(): string;
        func_77571_b(): Internal.ItemStack;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SingleItemRecipe_ = SingleItemRecipe;
    class IngameGui extends Internal.AbstractGui {
        func_212910_m(): void;
        func_175179_f(): Internal.FontRenderer;
        func_175187_g(): Internal.SpectatorGui;
        func_73834_c(): number;
        func_73831_a(): void;
        func_244795_b(arg0: Internal.ITextComponent_): Internal.UUID;
        func_184046_j(): Internal.BossOverlayGui;
        func_238446_a_(arg0: Internal.MatrixStack, arg1: number): void;
        func_238445_a_(arg0: Internal.MatrixStack, arg1: number): void;
        func_238452_a_(arg0: Internal.ITextComponent_, arg1: Internal.ITextComponent_, arg2: number, arg3: number, arg4: number): void;
        func_238451_a_(arg0: Internal.ITextComponent_): void;
        func_238450_a_(arg0: Internal.ChatType_, arg1: Internal.ITextComponent_, arg2: Internal.UUID): void;
        func_181029_i(): void;
        func_238454_b_(arg0: Internal.MatrixStack, arg1: number): void;
        func_146158_b(): Internal.NewChatGui;
        func_238453_b_(arg0: Internal.MatrixStack): void;
        func_175188_a(arg0: Internal.ITextComponent_, arg1: boolean): void;
        func_175181_h(): Internal.PlayerTabOverlayGui;
        func_175177_a(): void;
        func_238455_c_(arg0: Internal.MatrixStack): void;
        field_73843_a : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IngameGui_ = IngameGui;
    interface ISafeBlockGetter {
        mfix$getSafeBlockGetter(): Internal.SafeBlockGetter;
    }
    type ISafeBlockGetter_ = ISafeBlockGetter;
    /**
    */
    abstract class Text extends Document.Object implements Internal.Iterable<Internal.Text>, Internal.Comparable<Internal.Text>, Internal.JsonSerializable, Internal.WrappedJS {
        rawCopy(): Internal.Text;
        compareTo(arg0: any): number;
        compareTo(other: Internal.Text_): number;
        hasStyle(): boolean;
        italic(value: boolean): Internal.Text;
        italic(): Internal.Text;
        static componentOf(o: any): Internal.ITextComponent;
        red(): Internal.Text;
        aqua(): Internal.Text;
        iterator(): Internal.Iterator<Internal.Text>;
        white(): Internal.Text;
        noColor(): Internal.Text;
        darkPurple(): Internal.Text;
        static join(separator: Internal.Text_, texts: Internal.Iterable<Internal.Text>): Internal.Text;
        write(buffer: Internal.PacketBuffer): void;
        obfuscated(): Internal.Text;
        obfuscated(value: boolean): Internal.Text;
        static read(buffer: Internal.PacketBuffer): Internal.Text;
        getSiblings(): Internal.List<Internal.Text>;
        bold(): Internal.Text;
        bold(value: boolean): Internal.Text;
        click(value: string): Internal.Text;
        toJson(): Internal.JsonElement;
        darkGray(): Internal.Text;
        insertion(value: string): Internal.Text;
        color(c: dev.latvian.mods.rhino.mod.util.color.Color): Internal.Text;
        yellow(): Internal.Text;
        darkBlue(): Internal.Text;
        gold(): Internal.Text;
        hover(text: any): Internal.Text;
        gray(): Internal.Text;
        hashCode(): number;
        darkRed(): Internal.Text;
        static of(o: any): Internal.Text;
        copy(): Internal.Text;
        strikethrough(value: boolean): Internal.Text;
        strikethrough(): Internal.Text;
        rawComponent(): Internal.IFormattableTextComponent;
        createStyleJson(): Internal.JsonObject;
        green(): Internal.Text;
        hasSiblings(): boolean;
        darkGreen(): Internal.Text;
        black(): Internal.Text;
        lightPurple(): Internal.Text;
        getString(): string;
        getStyleAndSiblingJson(): Internal.JsonObject;
        darkAqua(): Internal.Text;
        component(): Internal.ITextComponent;
        blue(): Internal.Text;
        equals(obj: any): boolean;
        underlined(): Internal.Text;
        underlined(value: boolean): Internal.Text;
        toString(): string;
        append(sibling: any): Internal.Text;
        createStyle(): Internal.Style;
        font(value: string): Internal.Text;
        get siblings(): Internal.List<Internal.Text>;
        get string(): string;
        get styleAndSiblingJson(): Internal.JsonObject;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Text_ = string | Text;
    class LiteralArgumentBuilder <S> extends Internal.ArgumentBuilder<S, Internal.LiteralArgumentBuilder<S>> {
        getLiteral(): string;
        build(): Internal.CommandNode<any>;
        build(): Internal.LiteralCommandNode<S>;
        static literal<S_>(arg0: string): Internal.LiteralArgumentBuilder<S_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LiteralArgumentBuilder_<S> = LiteralArgumentBuilder<S>;
    class BucketItem extends Internal.Item implements Internal.BucketItemKJS {
        getFluidKJS(): Internal.Fluid;
        func_77659_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: Hand_): Internal.ActionResult<Internal.ItemStack>;
        initCapabilities(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT): Internal.ICapabilityProvider;
        getFluid(): Internal.Fluid;
        func_180616_a(arg0: Internal.PlayerEntity, arg1: Internal.World, arg2: BlockPos, arg3: Internal.BlockRayTraceResult): boolean;
        func_203792_a(arg0: Internal.World, arg1: Internal.ItemStack, arg2: BlockPos): void;
        get fluid(): Internal.Fluid;
        get fluidKJS(): Internal.Fluid;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BucketItem_ = BucketItem;
    interface IRendersAsItem {
        func_184543_l(): Internal.ItemStack;
    }
    type IRendersAsItem_ = IRendersAsItem;
    class Object2LongEntry extends Document.Object implements Internal.Comparable<Internal.Object2LongEntry> {
        compareTo(arg0: any): number;
        compareTo(o: Internal.Object2LongEntry): number;
        readonly value : number;
        readonly key : any;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Object2LongEntry_ = Object2LongEntry;
    abstract class Line2D extends Document.Object implements Internal.Shape, Internal.Cloneable {
        getP2(): Internal.Point2D;
        static relativeCCW(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        relativeCCW(arg0: number, arg1: number): number;
        relativeCCW(arg0: Internal.Point2D): number;
        intersects(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        intersects(arg0: Internal.Rectangle2D): boolean;
        static linesIntersect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): boolean;
        static ptLineDistSq(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        ptLineDistSq(arg0: Internal.Point2D): number;
        ptLineDistSq(arg0: number, arg1: number): number;
        getX2(): number;
        getP1(): Internal.Point2D;
        getBounds(): Internal.Rectangle;
        static ptLineDist(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        ptLineDist(arg0: Internal.Point2D): number;
        ptLineDist(arg0: number, arg1: number): number;
        ptSegDistSq(arg0: Internal.Point2D): number;
        static ptSegDistSq(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        ptSegDistSq(arg0: number, arg1: number): number;
        intersectsLine(arg0: Internal.Line2D): boolean;
        intersectsLine(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        contains(arg0: Internal.Rectangle2D): boolean;
        contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        contains(arg0: number, arg1: number): boolean;
        contains(arg0: Internal.Point2D): boolean;
        getY2(): number;
        getX1(): number;
        getPathIterator(arg0: Internal.AffineTransform, arg1: number): Internal.PathIterator;
        getPathIterator(arg0: Internal.AffineTransform): Internal.PathIterator;
        static ptSegDist(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        ptSegDist(arg0: Internal.Point2D): number;
        ptSegDist(arg0: number, arg1: number): number;
        getY1(): number;
        clone(): any;
        setLine(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setLine(arg0: Internal.Point2D, arg1: Internal.Point2D): void;
        setLine(arg0: Internal.Line2D): void;
        get p1(): Internal.Point2D;
        get p2(): Internal.Point2D;
        get bounds(): Internal.Rectangle;
        get y1(): number;
        get y2(): number;
        get x1(): number;
        get x2(): number;
        set line(arg0: Internal.Line2D);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Line2D_ = Line2D;
    interface Executor {
        execute(arg0: (() => void)): void;
    }
    type Executor_ = Executor;
    class FurnaceTileEntity extends Internal.AbstractFurnaceTileEntity {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FurnaceTileEntity_ = FurnaceTileEntity;
    class ImmutableSetMultimap$Builder <K, V> extends Internal.ImmutableMultimap$Builder<K, V> {
        orderKeysBy(arg0: ((arg0: any) => boolean)): Internal.ImmutableSetMultimap$Builder<K, V>;
        orderKeysBy(arg0: ((arg0: any) => boolean)): Internal.ImmutableMultimap$Builder<any, any>;
        build(): Internal.ImmutableSetMultimap<K, V>;
        build(): Internal.ImmutableMultimap<any, any>;
        orderValuesBy(arg0: ((arg0: any) => boolean)): Internal.ImmutableMultimap$Builder<any, any>;
        orderValuesBy(arg0: ((arg0: any) => boolean)): Internal.ImmutableSetMultimap$Builder<K, V>;
        putAll(arg0: Internal.Iterable<Internal.Map$Entry<K, V>>): Internal.ImmutableSetMultimap$Builder<K, V>;
        putAll(arg0: Internal.Iterable<any>): Internal.ImmutableMultimap$Builder<any, any>;
        putAll(arg0: any, arg1: Internal.Iterable<any>): Internal.ImmutableMultimap$Builder<any, any>;
        putAll(arg0: K, arg1: Internal.Iterable<V>): Internal.ImmutableSetMultimap$Builder<K, V>;
        putAll(arg0: Internal.Multimap<any, any>): Internal.ImmutableMultimap$Builder<any, any>;
        putAll(arg0: Internal.Multimap<K, V>): Internal.ImmutableSetMultimap$Builder<K, V>;
        putAll(arg0: any, arg1: any[]): Internal.ImmutableMultimap$Builder<any, any>;
        putAll(arg0: K, arg1: V[]): Internal.ImmutableSetMultimap$Builder<K, V>;
        put(arg0: any, arg1: any): Internal.ImmutableMultimap$Builder<any, any>;
        put(arg0: K, arg1: V): Internal.ImmutableSetMultimap$Builder<K, V>;
        put(arg0: Internal.Map$Entry<any, any>): Internal.ImmutableMultimap$Builder<any, any>;
        put(arg0: Internal.Map$Entry<K, V>): Internal.ImmutableSetMultimap$Builder<K, V>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableSetMultimap$Builder_<K, V> = ImmutableSetMultimap$Builder<K, V>;
    class PackMetadataSection extends Document.Object {
        func_198962_b(): number;
        func_198963_a(): Internal.ITextComponent;
        static readonly field_198964_a : Internal.PackMetadataSectionSerializer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PackMetadataSection_ = PackMetadataSection;
    class EnderChestInventory extends Internal.Inventory {
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        func_70486_a(arg0: Internal.ListNBT): void;
        func_146031_a(arg0: Internal.EnderChestTileEntity): void;
        func_70487_g(): Internal.ListNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EnderChestInventory_ = EnderChestInventory;
    class ItemRequirement extends Document.Object {
        with(arg0: Internal.ItemRequirement): Internal.ItemRequirement;
        getRequiredItems(): Internal.List<Internal.ItemRequirement$StackRequirement>;
        static of(arg0: Internal.Entity): Internal.ItemRequirement;
        static of(arg0: Internal.BlockState, arg1: Internal.TileEntity): Internal.ItemRequirement;
        isEmpty(): boolean;
        isInvalid(): boolean;
        static validate(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        static INVALID : Internal.ItemRequirement;
        static NONE : Internal.ItemRequirement;
        get invalid(): boolean;
        get requiredItems(): Internal.List<Internal.ItemRequirement$StackRequirement>;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemRequirement_ = ItemRequirement;
    interface IRuleTestType <P> {
        codec(): Internal.Codec<P>;
    }
    type IRuleTestType_<P> = IRuleTestType<P>;
    class MateSensor extends Internal.Sensor<Internal.AgeableEntity> {
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MateSensor_ = MateSensor;
    interface BidirectionalIterator <K> extends Internal.Iterator<K> {
        previous(): K;
        hasPrevious(): boolean;
    }
    type BidirectionalIterator_<K> = BidirectionalIterator<K>;
    class RenderType$Type extends Internal.RenderType {
        func_225612_r_(): Internal.Optional<Internal.RenderType>;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        func_230041_s_(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderType$Type_ = RenderType$Type;
    class TakeoffPhase extends Internal.Phase {
        func_188660_d(): void;
        func_188659_c(): void;
        func_188652_i(): Internal.PhaseType<Internal.TakeoffPhase>;
        func_188650_g(): Vec3;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TakeoffPhase_ = TakeoffPhase;
    interface Keyable {
        keys<T>(arg0: Internal.DynamicOps<T>): Internal.Stream<T>;
    }
    type Keyable_ = Keyable;
    class Rectangle extends Internal.Rectangle2D implements Internal.Shape, Internal.Serializable {
        getLocation(): Internal.Point;
        intersects(arg0: Internal.Rectangle): boolean;
        getWidth(): number;
        inside(arg0: number, arg1: number): boolean;
        translate(arg0: number, arg1: number): void;
        getBounds(): Internal.Rectangle;
        getHeight(): number;
        setSize(arg0: number, arg1: number): void;
        setSize(arg0: java_.awt.Dimension): void;
        setLocation(arg0: Internal.Point): void;
        setLocation(arg0: number, arg1: number): void;
        intersection(arg0: Internal.Rectangle): Internal.Rectangle;
        add(arg0: number, arg1: number): void;
        add(arg0: Internal.Point): void;
        add(arg0: Internal.Rectangle): void;
        move(arg0: number, arg1: number): void;
        grow(arg0: number, arg1: number): void;
        isEmpty(): boolean;
        setRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
        reshape(arg0: number, arg1: number, arg2: number, arg3: number): void;
        union(arg0: Internal.Rectangle): Internal.Rectangle;
        setBounds(arg0: Internal.Rectangle): void;
        setBounds(arg0: number, arg1: number, arg2: number, arg3: number): void;
        getSize(): java_.awt.Dimension;
        contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        contains(arg0: Internal.Point): boolean;
        contains(arg0: number, arg1: number): boolean;
        contains(arg0: Internal.Rectangle): boolean;
        getX(): number;
        getY(): number;
        createUnion(arg0: Internal.Rectangle2D): Internal.Rectangle2D;
        outcode(arg0: number, arg1: number): number;
        equals(arg0: any): boolean;
        getBounds2D(): Internal.Rectangle2D;
        resize(arg0: number, arg1: number): void;
        toString(): string;
        createIntersection(arg0: Internal.Rectangle2D): Internal.Rectangle2D;
        x : number;
        width : number;
        y : number;
        height : number;
        get size(): java_.awt.Dimension;
        get bounds(): Internal.Rectangle;
        get location(): Internal.Point;
        get bounds2D(): Internal.Rectangle2D;
        get empty(): boolean;
        set size(arg0: java_.awt.Dimension);
        set bounds(arg0: Internal.Rectangle);
        set location(arg0: Internal.Point);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Rectangle_ = Rectangle;
    class EntityArrayList extends Internal.ArrayList<Internal.EntityJS> implements Internal.MessageSender {
        filter(filter: ((arg0: Internal.EntityJS) => boolean)): Internal.EntityArrayList;
        sendData(channel: string, data: Internal.CompoundNBT): void;
        getWorld(): Internal.WorldJS;
        setStatusMessage(message: Internal.ITextComponent_): void;
        getName(): Internal.Text;
        getDisplayName(): Internal.Text;
        getFirst(): Internal.EntityJS;
        tell(message: Internal.ITextComponent_): void;
        playSound(id: Internal.SoundEvent, volume: number, pitch: number): void;
        playSound(id: Internal.SoundEvent): void;
        runCommand(command: string): number;
        kill(): void;
        runCommandSilent(command: string): number;
        get world(): Internal.WorldJS;
        get displayName(): Internal.Text;
        get name(): Internal.Text;
        get first(): Internal.EntityJS;
        set statusMessage(message: Internal.ITextComponent_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityArrayList_ = EntityArrayList;
    interface Command <S> {
        run(arg0: Internal.CommandContext<S>): number;
    }
    type Command_<S> = ((arg0: Internal.CommandContext<S>) => number) | Command<S>;
    class GuardianEntity extends Internal.MonsterEntity {
        func_70646_bf(): number;
        func_175472_n(): boolean;
        func_175474_cn(): boolean;
        static func_234292_eK_(): Internal.AttributeModifierMap$MutableAttribute;
        func_213352_e(arg0: Vec3): void;
        static func_223329_b(arg0: Internal.EntityType<Internal.GuardianEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_175464_ck(): number;
        func_175471_a(arg0: number): number;
        func_175466_co(): Internal.LivingEntity;
        func_70648_aU(): boolean;
        func_70668_bt(): Internal.CreatureAttribute;
        func_205019_a(arg0: Internal.IWorldReader): boolean;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_70636_d(): void;
        func_175477_p(arg0: number): number;
        func_70627_aG(): number;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_175469_o(arg0: number): number;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuardianEntity_ = GuardianEntity;
    interface GameRules$IRuleEntryVisitor {
        func_223481_a<T>(arg0: Internal.GameRules$RuleKey<T>, arg1: Internal.GameRules$RuleType<T>): void;
        func_230483_c_(arg0: Internal.GameRules$RuleKey<Internal.GameRules$IntegerValue>, arg1: Internal.GameRules$RuleType<Internal.GameRules$IntegerValue>): void;
        func_230482_b_(arg0: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>, arg1: Internal.GameRules$RuleType<Internal.GameRules$BooleanValue>): void;
    }
    type GameRules$IRuleEntryVisitor_ = GameRules$IRuleEntryVisitor;
    class ChannelOption <T> extends Internal.AbstractConstant<Internal.ChannelOption<T>> {
        static valueOf<T_>(arg0: string): Internal.ChannelOption<T_>;
        static valueOf<T_>(arg0: Internal.Class_<any>, arg1: string): Internal.ChannelOption<T_>;
        static exists(arg0: string): boolean;
        static newInstance<T_>(arg0: string): Internal.ChannelOption<T_>;
        validate(arg0: Internal.ChannelOption<Internal.ChannelOption<T>>): void;
        static readonly WRITE_BUFFER_HIGH_WATER_MARK : Internal.ChannelOption<number>;
        static readonly WRITE_BUFFER_LOW_WATER_MARK : Internal.ChannelOption<number>;
        static readonly DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION : Internal.ChannelOption<boolean>;
        static readonly IP_TOS : Internal.ChannelOption<number>;
        static readonly SINGLE_EVENTEXECUTOR_PER_GROUP : Internal.ChannelOption<boolean>;
        static readonly SO_SNDBUF : Internal.ChannelOption<number>;
        static readonly IP_MULTICAST_IF : Internal.ChannelOption<Internal.NetworkInterface>;
        static readonly WRITE_BUFFER_WATER_MARK : Internal.ChannelOption<Internal.WriteBufferWaterMark>;
        static readonly TCP_NODELAY : Internal.ChannelOption<boolean>;
        static readonly SO_LINGER : Internal.ChannelOption<number>;
        static readonly SO_RCVBUF : Internal.ChannelOption<number>;
        static readonly SO_KEEPALIVE : Internal.ChannelOption<boolean>;
        static readonly ALLOCATOR : Internal.ChannelOption<Internal.ByteBufAllocator>;
        static readonly IP_MULTICAST_ADDR : Internal.ChannelOption<Internal.InetAddress>;
        static readonly IP_MULTICAST_LOOP_DISABLED : Internal.ChannelOption<boolean>;
        static readonly MESSAGE_SIZE_ESTIMATOR : Internal.ChannelOption<Internal.MessageSizeEstimator>;
        static readonly WRITE_SPIN_COUNT : Internal.ChannelOption<number>;
        static readonly SO_TIMEOUT : Internal.ChannelOption<number>;
        static readonly SO_REUSEADDR : Internal.ChannelOption<boolean>;
        static readonly CONNECT_TIMEOUT_MILLIS : Internal.ChannelOption<number>;
        static readonly ALLOW_HALF_CLOSURE : Internal.ChannelOption<boolean>;
        static readonly SO_BACKLOG : Internal.ChannelOption<number>;
        static readonly MAX_MESSAGES_PER_READ : Internal.ChannelOption<number>;
        static readonly AUTO_CLOSE : Internal.ChannelOption<boolean>;
        static readonly SO_BROADCAST : Internal.ChannelOption<boolean>;
        static readonly AUTO_READ : Internal.ChannelOption<boolean>;
        static readonly IP_MULTICAST_TTL : Internal.ChannelOption<number>;
        static readonly RCVBUF_ALLOCATOR : Internal.ChannelOption<Internal.RecvByteBufAllocator>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChannelOption_<T> = ChannelOption<T>;
    interface OpSupplier {
        create(arg0: Internal.Unit, arg1: Internal.Unit): Internal.Unit;
    }
    type OpSupplier_ = ((arg0: Internal.Unit, arg1: Internal.Unit) => Internal.Unit) | OpSupplier;
    abstract class Screen extends Internal.FocusableGui implements Internal.IScreen, Internal.IRenderable {
        renderToolTip(arg0: Internal.MatrixStack, arg1: Internal.List<((arg0: ((arg0: number, arg1: Internal.Style, arg2: number) => boolean)) => boolean)>, arg2: number, arg3: number, arg4: Internal.FontRenderer): void;
        static func_231174_t_(): boolean;
        func_238651_a_(arg0: Internal.MatrixStack, arg1: number): void;
        func_231178_ax__(): boolean;
        func_231039_at__(): Internal.List<Internal.IGuiEventListener>;
        func_238654_b_(arg0: Internal.MatrixStack, arg1: Internal.List<((arg0: ((arg0: number, arg1: Internal.Style, arg2: number) => boolean)) => boolean)>, arg2: number, arg3: number): void;
        func_230446_a_(arg0: Internal.MatrixStack): void;
        func_243308_b(arg0: Internal.MatrixStack, arg1: Internal.List<Internal.ITextComponent>, arg2: number, arg3: number): void;
        func_231159_b_(arg0: string, arg1: boolean): void;
        func_231175_as__(): void;
        static func_231153_a_(arg0: (() => void), arg1: string, arg2: string): void;
        static func_231170_j_(arg0: number): boolean;
        func_230455_a_(arg0: Internal.Style): boolean;
        func_231046_a_(arg0: number, arg1: number, arg2: number): boolean;
        renderWrappedToolTip(arg0: Internal.MatrixStack, arg1: Internal.List<Internal.ITextProperties>, arg2: number, arg3: number, arg4: Internal.FontRenderer): void;
        static func_231169_i_(arg0: number): boolean;
        func_231177_au__(): boolean;
        func_230476_a_(arg0: Internal.List<java_.nio.file.Path>): void;
        func_231151_a_(arg0: Internal.ItemStack): Internal.List<Internal.ITextComponent>;
        func_231171_q_(): Internal.ITextComponent;
        static func_231172_r_(): boolean;
        static func_231168_h_(arg0: number): boolean;
        static func_231173_s_(): boolean;
        func_231164_f_(): void;
        func_238652_a_(arg0: Internal.MatrixStack, arg1: Internal.ITextComponent_, arg2: number, arg3: number): void;
        func_231161_c_(arg0: string): void;
        func_231158_b_(arg0: Internal.Minecraft, arg1: number, arg2: number): void;
        func_231023_e_(): void;
        func_231047_b_(arg0: number, arg1: number): boolean;
        getMinecraft(): Internal.Minecraft;
        func_230430_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
        func_230480_a_<T_>(arg0: T_): T_;
        func_231152_a_(arg0: Internal.Minecraft, arg1: number, arg2: number): void;
        static func_231166_g_(arg0: number): boolean;
        func_231167_h_(): string;
        func_231165_f_(arg0: number): void;
        field_230709_l_ : number;
        field_230708_k_ : number;
        readonly field_230710_m_ : Internal.List<Internal.Widget>;
        field_230711_n_ : boolean;
        get minecraft(): Internal.Minecraft;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Screen_ = Screen;
    interface IPlantable {
        getPlantType(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.PlantType;
        getPlant(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.BlockState;
    }
    type IPlantable_ = IPlantable;
    class SUpdateBossInfoPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_186900_e(): Internal.BossInfo$Color;
        func_186910_h(): boolean;
        func_186902_b(): Internal.SUpdateBossInfoPacket$Operation;
        func_186908_a(): Internal.UUID;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186909_g(): boolean;
        func_186901_i(): boolean;
        func_186907_c(): Internal.ITextComponent;
        func_186904_f(): Internal.BossInfo$Overlay;
        func_186906_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SUpdateBossInfoPacket_ = SUpdateBossInfoPacket;
    class ArrayList <E> extends Internal.AbstractList<E> implements Internal.List<E>, Internal.RandomAccess, Internal.Cloneable, Internal.Serializable {
        removeLast(): E;
        getLast(): E;
        replaceAll(arg0: Internal.UnaryOperator<E>): void;
        remove(arg0: any): boolean;
        remove(arg0: number): E;
        addLast(arg0: E): void;
        removeAll(arg0: Internal.Collection<any>): boolean;
        iterator(): Internal.Iterator<E>;
        getFirst(): E;
        hashCode(): number;
        removeFirst(): E;
        get(arg0: number): E;
        toArray(): any[];
        toArray<T_>(arg0: T_[]): T_[];
        indexOf(arg0: any): number;
        add(arg0: number, arg1: E): void;
        add(arg0: E): boolean;
        subList(arg0: number, arg1: number): Internal.List<E>;
        trimToSize(): void;
        set(arg0: number, arg1: E): E;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: ((arg0: E) => void)): void;
        isEmpty(): boolean;
        clear(): void;
        sort(arg0: ((arg0: any) => boolean)): void;
        removeIf(arg0: ((arg0: E) => boolean)): boolean;
        lastIndexOf(arg0: any): number;
        contains(arg0: any): boolean;
        size(): number;
        addAll(arg0: number, arg1: Internal.Collection<E>): boolean;
        addAll(arg0: Internal.Collection<E>): boolean;
        equals(arg0: any): boolean;
        clone(): any;
        listIterator(arg0: number): Internal.ListIterator<E>;
        listIterator(): Internal.ListIterator<E>;
        ensureCapacity(arg0: number): void;
        addFirst(arg0: E): void;
        retainAll(arg0: Internal.Collection<any>): boolean;
        get last(): E;
        get first(): E;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ArrayList_<E> = ArrayList<E>;
    class GuiScreenEvent$MouseReleasedEvent$Post extends Internal.GuiScreenEvent$MouseReleasedEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$MouseReleasedEvent$Post_ = GuiScreenEvent$MouseReleasedEvent$Post;
    class GoalSelector extends Document.Object {
        func_85156_a(arg0: Internal.Goal): void;
        func_220886_b(arg0: Internal.Goal$Flag_): void;
        func_75776_a(arg0: number, arg1: Internal.Goal): void;
        func_75774_a(): void;
        func_220888_c(): Internal.Stream<Internal.PrioritizedGoal>;
        func_220878_a(arg0: Internal.Goal$Flag_, arg1: boolean): void;
        func_220880_a(arg0: Internal.Goal$Flag_): void;
        readonly field_220892_d : Internal.Set<Internal.PrioritizedGoal>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GoalSelector_ = GoalSelector;
    interface Stream <T> extends Internal.BaseStream<T, Internal.Stream<T>> {
        takeWhile(arg0: ((arg0: T) => boolean)): Internal.Stream<T>;
        distinct(): Internal.Stream<T>;
        findFirst(): Internal.Optional<T>;
        skip(arg0: number): Internal.Stream<T>;
        toList(): Internal.List<T>;
        allMatch(arg0: ((arg0: T) => boolean)): boolean;
        mapMultiToDouble(arg0: ((arg0: T, arg1: ((arg0: number) => void)) => void)): Internal.DoubleStream;
        mapMulti<R_>(arg0: ((arg0: T, arg1: ((arg0: R_) => void)) => void)): Internal.Stream<R_>;
        flatMapToInt(arg0: ((arg0: T) => Internal.IntStream)): Internal.IntStream;
        min(arg0: ((arg0: any) => boolean)): Internal.Optional<T>;
        flatMapToLong(arg0: ((arg0: T) => Internal.LongStream)): Internal.LongStream;
        mapToLong(arg0: ((arg0: T) => number)): Internal.LongStream;
        noneMatch(arg0: ((arg0: T) => boolean)): boolean;
        findAny(): Internal.Optional<T>;
        limit(arg0: number): Internal.Stream<T>;
        toArray(): any[];
        toArray<A_>(arg0: ((arg0: number) => A_[])): A_[];
        forEachOrdered(arg0: ((arg0: T) => void)): void;
        anyMatch(arg0: ((arg0: T) => boolean)): boolean;
        map<R_>(arg0: ((arg0: T) => R_)): Internal.Stream<R_>;
        mapToDouble(arg0: ((arg0: T) => number)): Internal.DoubleStream;
        mapMultiToLong(arg0: ((arg0: T, arg1: ((arg0: number) => void)) => void)): Internal.LongStream;
        mapMultiToInt(arg0: ((arg0: T, arg1: ((arg0: number) => void)) => void)): Internal.IntStream;
        reduce<U_>(arg0: U_, arg1: ((arg0: U_, arg1: T) => U_), arg2: Internal.BinaryOperator<U_>): U_;
        reduce(arg0: T, arg1: Internal.BinaryOperator<T>): T;
        reduce(arg0: Internal.BinaryOperator<T>): Internal.Optional<T>;
        max(arg0: ((arg0: any) => boolean)): Internal.Optional<T>;
        forEach(arg0: ((arg0: T) => void)): void;
        count(): number;
        dropWhile(arg0: ((arg0: T) => boolean)): Internal.Stream<T>;
        flatMapToDouble(arg0: ((arg0: T) => Internal.DoubleStream)): Internal.DoubleStream;
        peek(arg0: ((arg0: T) => void)): Internal.Stream<T>;
        flatMap<R_>(arg0: ((arg0: T) => Internal.Stream<R_>)): Internal.Stream<R_>;
        filter(arg0: ((arg0: T) => boolean)): Internal.Stream<T>;
        sorted(arg0: ((arg0: any) => boolean)): Internal.Stream<T>;
        sorted(): Internal.Stream<T>;
        mapToInt(arg0: ((arg0: T) => number)): Internal.IntStream;
        collect<R_>(arg0: (() => R_), arg1: ((arg0: R_, arg1: T) => void), arg2: ((arg0: R_, arg1: R_) => void)): R_;
        collect<R_, A_>(arg0: Internal.Collector<T, A_, R_>): R_;
    }
    type Stream_<T> = Stream<T>;
    class MusicDiscItem extends Internal.Item {
        func_195939_a(arg0: Internal.ItemUseContext): Internal.ActionResultType;
        func_234801_g_(): Internal.IFormattableTextComponent;
        static func_185074_a(arg0: Internal.SoundEvent): Internal.MusicDiscItem;
        func_77624_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.List<Internal.ITextComponent>, arg3: Internal.ITooltipFlag): void;
        func_195975_g(): number;
        func_185075_h(): Internal.SoundEvent;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MusicDiscItem_ = MusicDiscItem;
    interface AbstractBlock$IExtendedPositionPredicate <A> {
        test(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: A): boolean;
    }
    type AbstractBlock$IExtendedPositionPredicate_<A> = AbstractBlock$IExtendedPositionPredicate<A>;
    class MegaJungleTrunkPlacer extends Internal.GiantTrunkPlacer {
        func_230382_a_(arg0: Internal.IWorldGenerationReader, arg1: Internal.Random, arg2: number, arg3: BlockPos, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox, arg6: Internal.BaseTreeFeatureConfig): Internal.List<Internal.FoliagePlacer$Foliage>;
        static readonly field_236901_b_ : Internal.Codec<Internal.MegaJungleTrunkPlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MegaJungleTrunkPlacer_ = MegaJungleTrunkPlacer;
    class SEntityVelocityPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149409_f(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149411_d(): number;
        func_149412_c(): number;
        func_149410_e(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SEntityVelocityPacket_ = SEntityVelocityPacket;
    abstract class BlockStatePredicate extends Document.Object {
        getBlockStates(): Internal.Collection<Internal.BlockState>;
        static of(blocks: any): Internal.BlockStatePredicate;
        check(arg0: Internal.BlockState): boolean;
        static parse(s: string): Internal.BlockStatePredicate;
        getBlocks(): Internal.Collection<Internal.Block>;
        getBlockIds(): Internal.Set<ResourceLocation>;
        static readonly AIR_ID : ResourceLocation;
        get blocks(): Internal.Collection<Internal.Block>;
        get blockStates(): Internal.Collection<Internal.BlockState>;
        get blockIds(): Internal.Set<ResourceLocation>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockStatePredicate_ = BlockStatePredicate;
    abstract class EntityEventJS extends Internal.WorldEventJS {
        getWorld(): Internal.WorldJS;
        getEntity(): Internal.EntityJS;
        get world(): Internal.WorldJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityEventJS_ = EntityEventJS;
    interface WatchEvent <T> {
        kind(): Internal.WatchEvent$Kind<T>;
        count(): number;
        context(): T;
    }
    type WatchEvent_<T> = WatchEvent<T>;
    class BanList extends Internal.UserList<Internal.GameProfile, any> {
        func_152702_a(arg0: Internal.GameProfile): boolean;
        func_152685_a(): string[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BanList_ = BanList;
    class StructureBlockTileEntity$UpdateCommand extends Internal.Enum<Internal.StructureBlockTileEntity$UpdateCommand> {
        static valueOf(arg0: string): Internal.StructureBlockTileEntity$UpdateCommand;
        static values(): Internal.StructureBlockTileEntity$UpdateCommand[];
        static readonly UPDATE_DATA : Internal.StructureBlockTileEntity$UpdateCommand;
        static readonly SAVE_AREA : Internal.StructureBlockTileEntity$UpdateCommand;
        static readonly LOAD_AREA : Internal.StructureBlockTileEntity$UpdateCommand;
        static readonly SCAN_AREA : Internal.StructureBlockTileEntity$UpdateCommand;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureBlockTileEntity$UpdateCommand_ = "update_data" | "save_area" | "load_area" | "scan_area" | StructureBlockTileEntity$UpdateCommand;
    class ServerChunkProvider extends Internal.AbstractChunkProvider {
        func_212863_j_(): Internal.WorldLightManager;
        func_212863_j_(): Internal.ServerWorldLightManager;
        func_217232_b(arg0: number, arg1: number, arg2: Internal.ChunkStatus, arg3: boolean): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_212864_k_(): Internal.IBlockReader;
        func_212864_k_(): Internal.World;
        func_217210_a(arg0: boolean): void;
        func_217230_c(arg0: Internal.Entity): void;
        func_225313_a(arg0: number, arg1: number): Internal.Chunk;
        func_212849_a_(arg0: number, arg1: number, arg2: Internal.ChunkStatus, arg3: boolean): Internal.IChunk;
        func_217216_a(arg0: Internal.Entity, arg1: Internal.IPacket<any>): void;
        func_217231_i(): Internal.PointOfInterestManager;
        func_217217_a(arg0: BlockPos): void;
        func_217218_b(arg0: Internal.Entity, arg1: Internal.IPacket<any>): void;
        func_217219_a(arg0: number): void;
        func_217234_d(): boolean;
        func_201711_g(): Internal.ChunkGenerator;
        func_217227_h(): Internal.DimensionSavedDataManager;
        close(): void;
        func_217221_a(arg0: Internal.ServerPlayerEntity): void;
        func_217226_b(arg0: Internal.Entity): void;
        func_217204_a(arg0: Internal.Entity): boolean;
        func_73148_d(): string;
        func_217202_b(arg0: number, arg1: number): Internal.IBlockReader;
        func_217228_a<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        func_217203_a(arg0: boolean, arg1: boolean): void;
        func_222866_a(arg0: BlockPos): boolean;
        func_73149_a(arg0: number, arg1: number): boolean;
        func_217229_b(): number;
        func_217201_a(arg0: Internal.LightType_, arg1: Internal.SectionPos): void;
        func_222865_a(arg0: Internal.ChunkPos): boolean;
        func_217208_a(arg0: Internal.ChunkPos): string;
        func_217222_b<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        func_217207_a(arg0: (() => boolean)): void;
        func_217206_a(arg0: Internal.ChunkPos, arg1: boolean): void;
        func_73152_e(): number;
        registerTickingTicket<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        func_241101_k_(): Internal.WorldEntitySpawner$EntityDensityManager;
        releaseTickingTicket<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        func_225314_f(): number;
        readonly field_217237_a : Internal.ChunkManager;
        readonly field_186029_c : Internal.ChunkGenerator;
        readonly field_73251_h : Internal.ServerWorld;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerChunkProvider_ = ServerChunkProvider;
    class ItemTooltipEvent extends Internal.PlayerEvent {
        getPlayer(): Internal.PlayerEntity;
        getListenerList(): Internal.ListenerList;
        getToolTip(): Internal.List<Internal.ITextComponent>;
        getItemStack(): Internal.ItemStack;
        getFlags(): Internal.ITooltipFlag;
        get itemStack(): Internal.ItemStack;
        get listenerList(): Internal.ListenerList;
        get toolTip(): Internal.List<Internal.ITextComponent>;
        get flags(): Internal.ITooltipFlag;
        get player(): Internal.PlayerEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemTooltipEvent_ = ItemTooltipEvent;
    class CodingErrorAction extends Document.Object {
        toString(): string;
        static readonly REPORT : Internal.CodingErrorAction;
        static readonly IGNORE : Internal.CodingErrorAction;
        static readonly REPLACE : Internal.CodingErrorAction;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CodingErrorAction_ = CodingErrorAction;
    class ColumnConfig extends Document.Object implements Internal.IFeatureConfig {
        func_242794_am_(): Internal.FeatureSpread;
        func_242795_b(): Internal.FeatureSpread;
        static readonly field_236465_a_ : Internal.Codec<Internal.ColumnConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ColumnConfig_ = ColumnConfig;
    class DrawHighlightEvent$HighlightEntity extends Internal.DrawHighlightEvent {
        getTarget(): Internal.RayTraceResult;
        getTarget(): Internal.EntityRayTraceResult;
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get target(): Internal.EntityRayTraceResult;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DrawHighlightEvent$HighlightEntity_ = DrawHighlightEvent$HighlightEntity;
    class BiomeAmbience$GrassColorModifier extends Internal.Enum<Internal.BiomeAmbience$GrassColorModifier> implements Internal.IStringSerializable, Internal.IExtensibleEnum {
        init(): void;
        func_241853_a(arg0: number, arg1: number, arg2: number): number;
        static valueOf(arg0: string): Internal.BiomeAmbience$GrassColorModifier;
        func_176610_l(): string;
        static values(): Internal.BiomeAmbience$GrassColorModifier[];
        static create(arg0: string, arg1: string, arg2: ((arg0: number, arg1: number, arg2: number) => number)): Internal.BiomeAmbience$GrassColorModifier;
        func_242547_b(): string;
        static func_242546_a(arg0: string): Internal.BiomeAmbience$GrassColorModifier;
        static readonly SWAMP : Internal.BiomeAmbience$GrassColorModifier;
        static readonly field_242542_d : Internal.Codec<Internal.BiomeAmbience$GrassColorModifier>;
        static readonly NONE : Internal.BiomeAmbience$GrassColorModifier;
        static readonly DARK_FOREST : Internal.BiomeAmbience$GrassColorModifier;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BiomeAmbience$GrassColorModifier_ = "none" | "dark_forest" | "swamp" | BiomeAmbience$GrassColorModifier;
    class NioEventLoopGroup extends Internal.MultithreadEventLoopGroup {
        rebuildSelectors(): void;
        setIoRatio(arg0: number): void;
        set ioRatio(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NioEventLoopGroup_ = NioEventLoopGroup;
    interface ILevelChunk {
        setEntityLoadHook(arg0: (() => void)): void;
        getEntitiesWereLoaded(): boolean;
        runEntityLoadHook(): void;
    }
    type ILevelChunk_ = ILevelChunk;
    interface DirectMethodHandleDesc extends Internal.MethodHandleDesc {
        owner(): Internal.ClassDesc;
        kind(): Internal.DirectMethodHandleDesc$Kind;
        refKind(): number;
        methodName(): string;
        isOwnerInterface(): boolean;
        lookupDescriptor(): string;
    }
    type DirectMethodHandleDesc_ = DirectMethodHandleDesc;
    interface NativeResource extends Internal.AutoCloseable {
        free(): void;
        close(): void;
    }
    type NativeResource_ = NativeResource;
    class CJigsawBlockGeneratePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_240846_d_(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_240844_b_(): BlockPos;
        func_240845_c_(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CJigsawBlockGeneratePacket_ = CJigsawBlockGeneratePacket;
    class IsoChronology extends Internal.AbstractChronology implements Internal.Serializable {
        localDateTime(arg0: Internal.TemporalAccessor): Internal.ChronoLocalDateTime<any>;
        localDateTime(arg0: Internal.TemporalAccessor): Internal.LocalDateTime;
        date(arg0: Internal.Era, arg1: number, arg2: number, arg3: number): Internal.LocalDate;
        date(arg0: Internal.Era, arg1: number, arg2: number, arg3: number): Internal.ChronoLocalDate;
        date(arg0: number, arg1: number, arg2: number): Internal.LocalDate;
        date(arg0: number, arg1: number, arg2: number): Internal.ChronoLocalDate;
        date(arg0: Internal.TemporalAccessor): Internal.LocalDate;
        date(arg0: Internal.TemporalAccessor): Internal.ChronoLocalDate;
        isIsoBased(): boolean;
        period(arg0: number, arg1: number, arg2: number): Internal.ChronoPeriod;
        period(arg0: number, arg1: number, arg2: number): Internal.Period;
        dateYearDay(arg0: number, arg1: number): Internal.LocalDate;
        dateYearDay(arg0: number, arg1: number): Internal.ChronoLocalDate;
        dateYearDay(arg0: Internal.Era, arg1: number, arg2: number): Internal.LocalDate;
        dateYearDay(arg0: Internal.Era, arg1: number, arg2: number): Internal.ChronoLocalDate;
        getCalendarType(): string;
        resolveDate(arg0: Internal.Map_<Internal.TemporalField_, number>, arg1: Internal.ResolverStyle_): Internal.LocalDate;
        resolveDate(arg0: Internal.Map_<any, any>, arg1: Internal.ResolverStyle_): Internal.ChronoLocalDate;
        isLeapYear(arg0: number): boolean;
        range(arg0: Internal.ChronoField_): Internal.ValueRange;
        dateEpochDay(arg0: number): Internal.LocalDate;
        dateEpochDay(arg0: number): Internal.ChronoLocalDate;
        getId(): string;
        dateNow(arg0: Internal.Clock): Internal.ChronoLocalDate;
        dateNow(arg0: Internal.Clock): Internal.LocalDate;
        dateNow(): Internal.LocalDate;
        dateNow(): Internal.ChronoLocalDate;
        dateNow(arg0: Internal.ZoneId): Internal.LocalDate;
        dateNow(arg0: Internal.ZoneId): Internal.ChronoLocalDate;
        eraOf(arg0: number): Internal.IsoEra;
        eraOf(arg0: number): Internal.Era;
        eras(): Internal.List<Internal.Era>;
        prolepticYear(arg0: Internal.Era, arg1: number): number;
        zonedDateTime(arg0: Internal.TemporalAccessor): Internal.ZonedDateTime;
        zonedDateTime(arg0: Internal.TemporalAccessor): Internal.ChronoZonedDateTime<any>;
        zonedDateTime(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.ChronoZonedDateTime<any>;
        zonedDateTime(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.ZonedDateTime;
        epochSecond(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.ZoneOffset): number;
        static readonly INSTANCE : Internal.IsoChronology;
        get calendarType(): string;
        get id(): string;
        get isoBased(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IsoChronology_ = IsoChronology;
    interface Enumeration <E> {
        hasMoreElements(): boolean;
        asIterator(): Internal.Iterator<E>;
        nextElement(): E;
    }
    type Enumeration_<E> = Enumeration<E>;
    class Format$Field extends Internal.AttributedCharacterIterator$Attribute {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Format$Field_ = Format$Field;
    interface ISoundEventAccessor <T> {
        func_148720_g(): T;
        func_217867_a(arg0: Internal.SoundEngine): void;
        func_148721_a(): number;
    }
    type ISoundEventAccessor_<T> = ISoundEventAccessor<T>;
    class IngredientActionFilter extends Document.Object {
        checkFilter(index: number, stack: Internal.ItemStack): boolean;
        static filterOf(o: any): Internal.IngredientActionFilter;
        copyFrom(filter: Internal.IngredientActionFilter): void;
        filterIndex : number;
        filterIngredient : Internal.IngredientJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IngredientActionFilter_ = IngredientActionFilter;
    interface IFlyingAnimal {
    }
    type IFlyingAnimal_ = IFlyingAnimal;
    class DropperTileEntity extends Internal.DispenserTileEntity {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DropperTileEntity_ = DropperTileEntity;
    class CommandEventJS extends Internal.ServerEventJS {
        getException(): Internal.Throwable;
        getParseResults(): Internal.ParseResults<Internal.CommandSource>;
        setException(exception: Internal.Throwable): void;
        setParseResults(parse: Internal.ParseResults<Internal.CommandSource>): void;
        canCancel(): boolean;
        get exception(): Internal.Throwable;
        get parseResults(): Internal.ParseResults<Internal.CommandSource>;
        set exception(exception: Internal.Throwable);
        set parseResults(parse: Internal.ParseResults<Internal.CommandSource>);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandEventJS_ = CommandEventJS;
    class ItemColors extends Document.Object implements Internal.ItemColorsExtended {
        func_199877_a(arg0: Internal.IItemColor, arg1: Internal.IItemProvider[]): void;
        getColorProvider(stack: Internal.ItemStack): Internal.IItemColor;
        func_186728_a(arg0: Internal.ItemStack, arg1: number): number;
        static func_186729_a(arg0: Internal.BlockColors): Internal.ItemColors;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemColors_ = ItemColors;
    abstract class FocusableGui extends Internal.AbstractGui implements Internal.INestedGuiEventHandler {
        func_231037_b__(arg0: boolean): void;
        func_231035_a_(arg0: Internal.IGuiEventListener): void;
        func_241217_q_(): Internal.IGuiEventListener;
        func_231041_ay__(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FocusableGui_ = FocusableGui;
    class IPBanList extends Internal.UserList<string, Internal.IPBanEntry> {
        func_152708_a(arg0: Internal.SocketAddress): boolean;
        func_152709_b(arg0: Internal.SocketAddress): Internal.IPBanEntry;
        func_199044_a(arg0: string): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IPBanList_ = IPBanList;
    class AttributeModifier$Operation extends Internal.Enum<Internal.AttributeModifier$Operation> {
        static func_220372_a(arg0: number): Internal.AttributeModifier$Operation;
        func_220371_a(): number;
        static valueOf(arg0: string): Internal.AttributeModifier$Operation;
        static values(): Internal.AttributeModifier$Operation[];
        static readonly ADDITION : Internal.AttributeModifier$Operation;
        static readonly MULTIPLY_BASE : Internal.AttributeModifier$Operation;
        static readonly MULTIPLY_TOTAL : Internal.AttributeModifier$Operation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AttributeModifier$Operation_ = "addition" | "multiply_base" | "multiply_total" | AttributeModifier$Operation;
    class InterfaceAddress extends Document.Object {
        getBroadcast(): Internal.InetAddress;
        hashCode(): number;
        equals(arg0: any): boolean;
        getNetworkPrefixLength(): number;
        getAddress(): Internal.InetAddress;
        toString(): string;
        get broadcast(): Internal.InetAddress;
        get address(): Internal.InetAddress;
        get networkPrefixLength(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InterfaceAddress_ = InterfaceAddress;
    class NetworkSystem extends Document.Object {
        func_151265_a(arg0: Internal.InetAddress, arg1: number): void;
        func_151268_b(): void;
        func_151269_c(): void;
        func_151267_d(): Internal.MinecraftServer;
        func_151270_a(): Internal.SocketAddress;
        field_151277_a : boolean;
        static readonly field_151276_c : Internal.LazyValue<Internal.NioEventLoopGroup>;
        static readonly field_181141_b : Internal.LazyValue<Internal.EpollEventLoopGroup>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NetworkSystem_ = NetworkSystem;
    abstract class IngredientAction extends Internal.IngredientActionFilter {
        toJson(): Internal.JsonObject;
        toJson(json: Internal.JsonObject): void;
        transform(arg0: Internal.ItemStack, arg1: number, arg2: Internal.CraftingInventory): Internal.ItemStack;
        static readList(buf: Internal.PacketBuffer): Internal.List<Internal.IngredientAction>;
        static writeList(buf: Internal.PacketBuffer, list: Internal.List<Internal.IngredientAction>): void;
        getType(): string;
        static getRemaining(container: Internal.CraftingInventory, index: number, ingredientActions: Internal.List<Internal.IngredientAction>): Internal.ItemStack;
        static parseList(json: Internal.JsonElement): Internal.List<Internal.IngredientAction>;
        static readonly FACTORY_MAP : {"damage":any,"custom":any,"keep":any,"replace":any};
        get type(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IngredientAction_ = IngredientAction;
    class DepthAverageConfig extends Document.Object implements Internal.IPlacementConfig {
        static readonly field_236955_a_ : Internal.Codec<Internal.DepthAverageConfig>;
        readonly field_202485_c : number;
        readonly field_202484_b : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DepthAverageConfig_ = DepthAverageConfig;
    class Products$P10 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P10_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> = Products$P10<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>;
    class NoiseSettings extends Document.Object {
        func_236169_a_(): number;
        func_236176_g_(): number;
        func_236171_b_(): Internal.ScalingSettings;
        func_236172_c_(): Internal.SlideSettings;
        func_236173_d_(): Internal.SlideSettings;
        func_236181_l_(): boolean;
        func_236179_j_(): boolean;
        func_236174_e_(): number;
        func_236178_i_(): boolean;
        func_236175_f_(): number;
        func_236180_k_(): boolean;
        func_236177_h_(): number;
        static readonly field_236156_a_ : Internal.Codec<Internal.NoiseSettings>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NoiseSettings_ = NoiseSettings;
    class OffsetDateTime extends Document.Object implements Internal.Temporal, Internal.TemporalAdjuster, Internal.Comparable<Internal.OffsetDateTime>, Internal.Serializable {
        plusHours(arg0: number): Internal.OffsetDateTime;
        isEqual(arg0: Internal.OffsetDateTime): boolean;
        toLocalTime(): Internal.LocalTime;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.OffsetDateTime): number;
        withOffsetSameLocal(arg0: Internal.ZoneOffset): Internal.OffsetDateTime;
        getDayOfWeek(): Internal.DayOfWeek;
        plusSeconds(arg0: number): Internal.OffsetDateTime;
        getMinute(): number;
        static from(arg0: Internal.TemporalAccessor): Internal.OffsetDateTime;
        getMonth(): Internal.Month;
        plusNanos(arg0: number): Internal.OffsetDateTime;
        atZoneSameInstant(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        withHour(arg0: number): Internal.OffsetDateTime;
        plusMonths(arg0: number): Internal.OffsetDateTime;
        plusYears(arg0: number): Internal.OffsetDateTime;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.OffsetDateTime;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        minusNanos(arg0: number): Internal.OffsetDateTime;
        getNano(): number;
        format(arg0: Internal.DateTimeFormatter): string;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isSupported(arg0: Internal.TemporalField): boolean;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.OffsetDateTime;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.OffsetDateTime;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        getYear(): number;
        toEpochSecond(): number;
        toLocalDateTime(): Internal.LocalDateTime;
        withDayOfMonth(arg0: number): Internal.OffsetDateTime;
        withMonth(arg0: number): Internal.OffsetDateTime;
        isAfter(arg0: Internal.OffsetDateTime): boolean;
        static ofInstant(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.OffsetDateTime;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.OffsetDateTime;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.OffsetDateTime;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        toOffsetTime(): Internal.OffsetTime;
        minusHours(arg0: number): Internal.OffsetDateTime;
        getOffset(): Internal.ZoneOffset;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        withYear(arg0: number): Internal.OffsetDateTime;
        plusMinutes(arg0: number): Internal.OffsetDateTime;
        minusMinutes(arg0: number): Internal.OffsetDateTime;
        plusDays(arg0: number): Internal.OffsetDateTime;
        atZoneSimilarLocal(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        hashCode(): number;
        static now(arg0: Internal.Clock): Internal.OffsetDateTime;
        static now(arg0: Internal.ZoneId): Internal.OffsetDateTime;
        static now(): Internal.OffsetDateTime;
        static of(arg0: Internal.LocalDateTime, arg1: Internal.ZoneOffset): Internal.OffsetDateTime;
        static of(arg0: Internal.LocalDate, arg1: Internal.LocalTime, arg2: Internal.ZoneOffset): Internal.OffsetDateTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.ZoneOffset): Internal.OffsetDateTime;
        get(arg0: Internal.TemporalField): number;
        getDayOfYear(): number;
        plusWeeks(arg0: number): Internal.OffsetDateTime;
        getHour(): number;
        withMinute(arg0: number): Internal.OffsetDateTime;
        getMonthValue(): number;
        toZonedDateTime(): Internal.ZonedDateTime;
        minusYears(arg0: number): Internal.OffsetDateTime;
        minusWeeks(arg0: number): Internal.OffsetDateTime;
        withDayOfYear(arg0: number): Internal.OffsetDateTime;
        static parse(arg0: Internal.CharSequence): Internal.OffsetDateTime;
        static parse(arg0: Internal.CharSequence, arg1: Internal.DateTimeFormatter): Internal.OffsetDateTime;
        toInstant(): Internal.Instant;
        isBefore(arg0: Internal.OffsetDateTime): boolean;
        minusDays(arg0: number): Internal.OffsetDateTime;
        withNano(arg0: number): Internal.OffsetDateTime;
        getLong(arg0: Internal.TemporalField): number;
        minusMonths(arg0: number): Internal.OffsetDateTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.OffsetDateTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.OffsetDateTime;
        with(arg0: ((arg0: Internal.Temporal) => Internal.Temporal)): Internal.Temporal;
        toLocalDate(): Internal.LocalDate;
        withOffsetSameInstant(arg0: Internal.ZoneOffset): Internal.OffsetDateTime;
        equals(arg0: any): boolean;
        getSecond(): number;
        static timeLineOrder(): Internal.Comparator<Internal.OffsetDateTime>;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        toString(): string;
        getDayOfMonth(): number;
        minusSeconds(arg0: number): Internal.OffsetDateTime;
        withSecond(arg0: number): Internal.OffsetDateTime;
        static readonly MIN : Internal.OffsetDateTime;
        static readonly MAX : Internal.OffsetDateTime;
        get dayOfWeek(): Internal.DayOfWeek;
        get month(): Internal.Month;
        get offset(): Internal.ZoneOffset;
        get hour(): number;
        get year(): number;
        get dayOfYear(): number;
        get dayOfMonth(): number;
        get monthValue(): number;
        get nano(): number;
        get minute(): number;
        get second(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OffsetDateTime_ = OffsetDateTime;
    class ShulkerEntity extends Internal.GolemEntity implements Internal.IMob {
        func_70646_bf(): number;
        func_184691_a(arg0: number): void;
        func_184693_dc(): number;
        func_70071_h_(): void;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_70636_d(): void;
        func_184688_a(arg0: number): number;
        func_190769_dn(): Internal.DyeColor;
        func_184692_dd(): BlockPos;
        func_180426_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        func_184684_db(): number;
        func_70108_f(arg0: Internal.Entity): void;
        func_241845_aY(): boolean;
        func_70107_b(arg0: number, arg1: number, arg2: number): void;
        func_213315_a(arg0: Internal.MoverType_, arg1: Vec3): void;
        static func_234300_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_184699_da(): BlockPos;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184697_de(): boolean;
        func_70642_aH(): void;
        func_184694_g(arg0: BlockPos): void;
        func_184696_cZ(): Internal.Direction;
        func_70111_Y(): number;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_184649_cE(): number;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_184176_by(): Internal.SoundCategory;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShulkerEntity_ = ShulkerEntity;
    interface ResourceLocationAccess {
        setPath(arg0: string): void;
        setNamespace(arg0: string): void;
    }
    type ResourceLocationAccess_ = ResourceLocationAccess;
    interface IForgeContainerType <T> {
        create(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PacketBuffer): T;
    }
    type IForgeContainerType_<T> = IForgeContainerType<T>;
    class Random extends Document.Object implements Internal.RandomGenerator, Internal.Serializable {
        nextFloat(): number;
        longs(arg0: number): Internal.LongStream;
        longs(arg0: number, arg1: number): Internal.LongStream;
        longs(arg0: number, arg1: number, arg2: number): Internal.LongStream;
        longs(): Internal.LongStream;
        doubles(arg0: number): Internal.DoubleStream;
        doubles(arg0: number, arg1: number, arg2: number): Internal.DoubleStream;
        doubles(arg0: number, arg1: number): Internal.DoubleStream;
        doubles(): Internal.DoubleStream;
        ints(arg0: number): Internal.IntStream;
        ints(): Internal.IntStream;
        ints(arg0: number, arg1: number, arg2: number): Internal.IntStream;
        ints(arg0: number, arg1: number): Internal.IntStream;
        static from(arg0: Internal.RandomGenerator): Internal.Random;
        nextBoolean(): boolean;
        nextInt(): number;
        nextInt(arg0: number): number;
        nextLong(): number;
        setSeed(arg0: number): void;
        nextGaussian(): number;
        nextDouble(): number;
        nextBytes(arg0: number[]): void;
        set seed(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Random_ = Random;
    class ClippingHelper extends Document.Object implements Internal.FrustumExtended {
        func_228952_a_(arg0: number, arg1: number, arg2: number): void;
        func_228953_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        func_228957_a_(box: Internal.AxisAlignedBB): boolean;
        fastAabbTest(minX: number, minY: number, minZ: number, maxX: number, maxY: number, maxZ: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClippingHelper_ = ClippingHelper;
    interface EyeOfEnderData {
        setLocateTaskOngoing(arg0: boolean): void;
    }
    type EyeOfEnderData_ = EyeOfEnderData;
    class TreeSet <E> extends Internal.AbstractSet<E> implements Internal.NavigableSet<E>, Internal.Cloneable, Internal.Serializable {
        headSet(arg0: E, arg1: boolean): Internal.NavigableSet<E>;
        headSet(arg0: E): Internal.SortedSet<E>;
        descendingIterator(): Internal.Iterator<E>;
        descendingSet(): Internal.NavigableSet<E>;
        pollLast(): E;
        remove(arg0: any): boolean;
        addLast(arg0: E): void;
        iterator(): Internal.Iterator<E>;
        subSet(arg0: E, arg1: boolean, arg2: E, arg3: boolean): Internal.NavigableSet<E>;
        subSet(arg0: E, arg1: E): Internal.SortedSet<E>;
        floor(arg0: E): E;
        tailSet(arg0: E, arg1: boolean): Internal.NavigableSet<E>;
        tailSet(arg0: E): Internal.SortedSet<E>;
        add(arg0: E): boolean;
        ceiling(arg0: E): E;
        last(): E;
        spliterator(): Internal.Spliterator<E>;
        lower(arg0: E): E;
        isEmpty(): boolean;
        clear(): void;
        comparator(): Internal.Comparator<E>;
        contains(arg0: any): boolean;
        size(): number;
        addAll(arg0: Internal.Collection<E>): boolean;
        clone(): any;
        pollFirst(): E;
        addFirst(arg0: E): void;
        first(): E;
        higher(arg0: E): E;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TreeSet_<E> = TreeSet<E>;
    interface UnionLayout extends Internal.GroupLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.GroupLayout;
        withName(arg0: string): Internal.UnionLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.GroupLayout;
        withoutName(): Internal.UnionLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.UnionLayout;
        withByteAlignment(arg0: number): Internal.GroupLayout;
    }
    type UnionLayout_ = UnionLayout;
    interface ISubtypeInterpreter extends Internal.IIngredientSubtypeInterpreter<Internal.ItemStack>, Internal.Function<Internal.ItemStack, string> {
        apply(arg0: any): any;
        apply(arg0: any, arg1: Internal.UidContext_): string;
        apply(arg0: Internal.ItemStack, arg1: Internal.UidContext_): string;
        apply(arg0: Internal.ItemStack): string;
    }
    type ISubtypeInterpreter_ = ((arg0: Internal.ItemStack) => string) | ISubtypeInterpreter;
    class SChangeGameStatePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_241776_b_(): Internal.SChangeGameStatePacket$State;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149137_d(): number;
        static readonly field_241769_f_ : Internal.SChangeGameStatePacket$State;
        static readonly field_241768_e_ : Internal.SChangeGameStatePacket$State;
        static readonly field_241770_g_ : Internal.SChangeGameStatePacket$State;
        static readonly field_241775_l_ : Internal.SChangeGameStatePacket$State;
        static readonly field_241764_a_ : Internal.SChangeGameStatePacket$State;
        static readonly field_241767_d_ : Internal.SChangeGameStatePacket$State;
        static readonly field_241765_b_ : Internal.SChangeGameStatePacket$State;
        static readonly field_241766_c_ : Internal.SChangeGameStatePacket$State;
        static readonly field_241772_i_ : Internal.SChangeGameStatePacket$State;
        static readonly field_241771_h_ : Internal.SChangeGameStatePacket$State;
        static readonly field_241774_k_ : Internal.SChangeGameStatePacket$State;
        static readonly field_241773_j_ : Internal.SChangeGameStatePacket$State;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SChangeGameStatePacket_ = SChangeGameStatePacket;
    interface LongSet extends Internal.LongCollection, Internal.Set<number> {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.LongIterator;
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        remove(arg0: number): boolean;
    }
    type LongSet_ = LongSet;
    abstract class StructurePiece extends Document.Object {
        func_74877_c(): number;
        func_230383_a_(arg0: Internal.ISeedReader, arg1: Internal.StructureManager, arg2: Internal.ChunkGenerator, arg3: Internal.Random, arg4: Internal.MutableBoundingBox, arg5: Internal.ChunkPos, arg6: BlockPos): boolean;
        func_186164_a(arg0: Internal.Direction_): void;
        func_74874_b(): Internal.MutableBoundingBox;
        func_214810_a(arg0: Internal.ChunkPos, arg1: number): boolean;
        static func_197528_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.BlockState): Internal.BlockState;
        func_214807_k(): Internal.IStructurePieceType;
        static func_74883_a(arg0: Internal.List<Internal.StructurePiece>, arg1: Internal.MutableBoundingBox): Internal.StructurePiece;
        func_143010_b(): Internal.CompoundNBT;
        func_186165_e(): Internal.Direction;
        func_181138_a(arg0: number, arg1: number, arg2: number): void;
        func_74861_a(arg0: Internal.StructurePiece, arg1: Internal.List<Internal.StructurePiece>, arg2: Internal.Random): void;
        func_214809_Y_(): Internal.Rotation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructurePiece_ = StructurePiece;
    class ItemOverrideList extends Document.Object {
        func_239290_a_(arg0: Internal.IBakedModel, arg1: Internal.ItemStack, arg2: Internal.ClientWorld, arg3: Internal.LivingEntity): Internal.IBakedModel;
        getOverrides(): Internal.ImmutableList<Internal.ItemOverride>;
        static readonly field_188022_a : Internal.ItemOverrideList;
        get overrides(): Internal.ImmutableList<Internal.ItemOverride>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemOverrideList_ = ItemOverrideList;
    class SPlayerDiggingPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_225375_b(): Internal.BlockState;
        func_225374_c(): BlockPos;
        func_225376_d(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_225377_e(): Internal.CPlayerDiggingPacket$Action;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlayerDiggingPacket_ = SPlayerDiggingPacket;
    class AccessControlContext extends Document.Object {
        checkPermission(arg0: Internal.Permission): void;
        hashCode(): number;
        equals(arg0: any): boolean;
        getDomainCombiner(): Internal.DomainCombiner;
        get domainCombiner(): Internal.DomainCombiner;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AccessControlContext_ = AccessControlContext;
    class UseAction extends Internal.Enum<Internal.UseAction> {
        static valueOf(arg0: string): Internal.UseAction;
        static values(): Internal.UseAction[];
        static readonly BLOCK : Internal.UseAction;
        static readonly EAT : Internal.UseAction;
        static readonly BOW : Internal.UseAction;
        static readonly NONE : Internal.UseAction;
        static readonly DRINK : Internal.UseAction;
        static readonly SPEAR : Internal.UseAction;
        static readonly CROSSBOW : Internal.UseAction;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type UseAction_ = "none" | "eat" | "drink" | "block" | "bow" | "spear" | "crossbow" | UseAction;
    class ServerPlayerDataJS extends Internal.PlayerDataJS<Internal.ServerPlayerEntity, Internal.ServerPlayerJS> {
        getServer(): Internal.ServerJS;
        getPlayer(): Internal.PlayerJS<any>;
        getPlayer(): Internal.ServerPlayerJS;
        getMinecraftPlayer(): Internal.PlayerEntity;
        getMinecraftPlayer(): Internal.ServerPlayerEntity;
        getName(): string;
        getProfile(): Internal.GameProfile;
        hasClientMod(): boolean;
        getId(): Internal.UUID;
        getOverworld(): Internal.WorldJS;
        get server(): Internal.ServerJS;
        get minecraftPlayer(): Internal.ServerPlayerEntity;
        get profile(): Internal.GameProfile;
        get name(): string;
        get id(): Internal.UUID;
        get overworld(): Internal.WorldJS;
        get player(): Internal.ServerPlayerJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerPlayerDataJS_ = ServerPlayerDataJS;
    class ChunkPos extends Document.Object {
        func_226661_a_(arg0: Internal.ChunkPos): number;
        func_206849_h(): BlockPos;
        static func_222243_a(arg0: Internal.ChunkPos, arg1: number): Internal.Stream<Internal.ChunkPos>;
        static func_222239_a(arg0: Internal.ChunkPos, arg1: Internal.ChunkPos): Internal.Stream<Internal.ChunkPos>;
        func_222242_i(): number;
        func_222240_j(): number;
        func_180332_e(): number;
        func_180334_c(): number;
        func_180333_d(): number;
        func_222241_h(): number;
        func_180330_f(): number;
        hashCode(): number;
        equals(arg0: any): boolean;
        static func_212578_a(arg0: number): number;
        func_201841_a(): number;
        toString(): string;
        static func_77272_a(arg0: number, arg1: number): number;
        static func_212579_b(arg0: number): number;
        func_222238_k(): number;
        readonly field_77276_a : number;
        readonly field_77275_b : number;
        static readonly field_222244_a : 8053132401351752;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkPos_ = ChunkPos;
    class AtlasTexture$SheetData extends Document.Object implements Internal.SheetDataAccessor {
        getHeight(): number;
        getWidth(): number;
        get width(): number;
        get height(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AtlasTexture$SheetData_ = AtlasTexture$SheetData;
    class STeamsPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_149312_c(): string;
        func_186975_j(): string;
        func_149310_g(): Internal.Collection<string>;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_200537_f(): Internal.TextFormatting;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149307_h(): number;
        func_149308_i(): number;
        func_179814_i(): string;
        func_207508_j(): Internal.ITextComponent;
        func_149306_d(): Internal.ITextComponent;
        func_207507_i(): Internal.ITextComponent;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type STeamsPacket_ = STeamsPacket;
    interface ICollisionReader extends Internal.IBlockReader {
        func_226663_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.ISelectionContext): boolean;
        func_226666_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.Stream<Internal.VoxelShape>;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_226664_a_(arg0: Internal.AxisAlignedBB): boolean;
        func_241457_a_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: ((arg0: Internal.BlockState, arg1: BlockPos) => boolean)): Internal.Stream<Internal.VoxelShape>;
        func_226668_i_(arg0: Internal.Entity): boolean;
        func_225522_c_(arg0: number, arg1: number): Internal.IBlockReader;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: ((arg0: Internal.Entity) => boolean)): Internal.Stream<Internal.VoxelShape>;
        func_226665_a__(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): boolean;
        func_234865_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: ((arg0: Internal.Entity) => boolean)): boolean;
        func_226669_j_(arg0: Internal.Entity): boolean;
        func_242405_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: ((arg0: Internal.BlockState, arg1: BlockPos) => boolean)): boolean;
        func_234867_d_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: ((arg0: Internal.Entity) => boolean)): Internal.Stream<Internal.VoxelShape>;
        func_175723_af(): Internal.WorldBorder;
    }
    type ICollisionReader_ = ICollisionReader;
    class BlockStateMatchRuleTest extends Internal.RuleTest {
        func_215181_a(arg0: Internal.BlockState, arg1: Internal.Random): boolean;
        static readonly field_237079_a_ : Internal.Codec<Internal.BlockStateMatchRuleTest>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockStateMatchRuleTest_ = BlockStateMatchRuleTest;
    interface ITeleporter {
        getPortalInfo(arg0: Internal.Entity, arg1: Internal.ServerWorld, arg2: ((arg0: Internal.ServerWorld) => Internal.PortalInfo)): Internal.PortalInfo;
        isVanilla(): boolean;
        playTeleportSound(arg0: Internal.ServerPlayerEntity, arg1: Internal.ServerWorld, arg2: Internal.ServerWorld): boolean;
        placeEntity(arg0: Internal.Entity, arg1: Internal.ServerWorld, arg2: Internal.ServerWorld, arg3: number, arg4: ((arg0: boolean) => Internal.Entity)): Internal.Entity;
    }
    type ITeleporter_ = ITeleporter;
    abstract class BiomeProvider extends Document.Object implements Internal.BiomeManager$IBiomeReader {
        func_230321_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: ((arg0: Internal.Biome) => boolean), arg6: Internal.Random, arg7: boolean): BlockPos;
        func_225531_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: ((arg0: Internal.Biome) => boolean), arg5: Internal.Random): BlockPos;
        func_235203_c_(): Internal.List<Internal.Biome>;
        func_225530_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.Set<Internal.Biome>;
        func_230320_a_(arg0: number): Internal.BiomeProvider;
        func_205004_a(arg0: Internal.Structure<any>): boolean;
        func_205706_b(): Internal.Set<Internal.BlockState>;
        static readonly field_235202_a_ : Internal.Codec<Internal.BiomeProvider>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BiomeProvider_ = BiomeProvider;
    interface IGlyph {
        func_223276_c_(): number;
        func_223275_b_(): number;
        getAdvance(): number;
        func_223274_a_(arg0: boolean): number;
        func_223273_a_(): number;
    }
    type IGlyph_ = IGlyph;
    class CResourcePackStatusPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CResourcePackStatusPacket_ = CResourcePackStatusPacket;
    class SpawnReason extends Internal.Enum<Internal.SpawnReason> {
        static valueOf(arg0: string): Internal.SpawnReason;
        static values(): Internal.SpawnReason[];
        static readonly CONVERSION : Internal.SpawnReason;
        static readonly STRUCTURE : Internal.SpawnReason;
        static readonly BUCKET : Internal.SpawnReason;
        static readonly DISPENSER : Internal.SpawnReason;
        static readonly SPAWNER : Internal.SpawnReason;
        static readonly EVENT : Internal.SpawnReason;
        static readonly MOB_SUMMONED : Internal.SpawnReason;
        static readonly NATURAL : Internal.SpawnReason;
        static readonly SPAWN_EGG : Internal.SpawnReason;
        static readonly PATROL : Internal.SpawnReason;
        static readonly CHUNK_GENERATION : Internal.SpawnReason;
        static readonly BREEDING : Internal.SpawnReason;
        static readonly REINFORCEMENT : Internal.SpawnReason;
        static readonly COMMAND : Internal.SpawnReason;
        static readonly TRIGGERED : Internal.SpawnReason;
        static readonly JOCKEY : Internal.SpawnReason;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpawnReason_ = "natural" | "chunk_generation" | "spawner" | "structure" | "breeding" | "mob_summoned" | "jockey" | "event" | "conversion" | "reinforcement" | "triggered" | "bucket" | "spawn_egg" | "command" | "dispenser" | "patrol" | SpawnReason;
    interface ISnooperInfo {
        func_70000_a(arg0: Internal.Snooper): void;
    }
    type ISnooperInfo_ = ISnooperInfo;
    class CQueryTileEntityNBTPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_211716_b(): number;
        func_211717_c(): BlockPos;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CQueryTileEntityNBTPacket_ = CQueryTileEntityNBTPacket;
    interface LongComparator extends Internal.Comparator<number> {
        compare(arg0: number, arg1: number): number;
        compare(arg0: number, arg1: number): number;
        compare(arg0: any, arg1: any): number;
    }
    type LongComparator_ = ((arg0: number, arg1: number) => number) | LongComparator;
    interface IntSet extends Internal.IntCollection, Internal.Set<number> {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.IntIterator;
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        remove(arg0: number): boolean;
    }
    type IntSet_ = IntSet;
    interface SequencedCollection <E> extends Internal.Collection<E> {
        addLast(arg0: E): void;
        getFirst(): E;
        removeFirst(): E;
        removeLast(): E;
        getLast(): E;
        reversed(): Internal.SequencedCollection<E>;
        addFirst(arg0: E): void;
    }
    type SequencedCollection_<E> = SequencedCollection<E>;
    interface ILevelSave {
        runWorldPersistenceHooks(arg0: Internal.SaveFormat): void;
    }
    type ILevelSave_ = ILevelSave;
    class PlayerTabOverlayGui extends Internal.AbstractGui {
        func_175244_b(arg0: Internal.ITextComponent_): void;
        func_175246_a(arg0: boolean): void;
        func_175248_a(arg0: Internal.ITextComponent_): void;
        func_181030_a(): void;
        func_200262_a(arg0: Internal.NetworkPlayerInfo): Internal.ITextComponent;
        func_238523_a_(arg0: Internal.MatrixStack, arg1: number, arg2: Internal.Scoreboard, arg3: Internal.ScoreObjective): void;
        field_175254_k : boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerTabOverlayGui_ = PlayerTabOverlayGui;
    class ImmutableSetMultimap <K, V> extends Internal.ImmutableMultimap<K, V> implements Internal.SetMultimap<K, V> {
        static flatteningToImmutableSetMultimap<T_, K_, V_>(arg0: ((arg0: T_) => K_), arg1: ((arg0: T_) => Internal.Stream<V_>)): Internal.Collector<T_, any, Internal.ImmutableSetMultimap<K_, V_>>;
        inverse(): Internal.ImmutableSetMultimap<V, K>;
        inverse(): Internal.ImmutableMultimap<any, any>;
        removeAll(arg0: any): Internal.ImmutableSet<V>;
        removeAll(arg0: any): Internal.Set<any>;
        removeAll(arg0: any): Internal.Collection<any>;
        removeAll(arg0: any): Internal.ImmutableCollection<any>;
        entries(): Internal.ImmutableSet<Internal.Map$Entry<K, V>>;
        entries(): Internal.ImmutableCollection<any>;
        entries(): Internal.Set<any>;
        entries(): Internal.Collection<any>;
        static of<K_, V_>(): Internal.ImmutableSetMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_): Internal.ImmutableSetMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_, arg6: K_, arg7: V_): Internal.ImmutableSetMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_): Internal.ImmutableSetMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_, arg6: K_, arg7: V_, arg8: K_, arg9: V_): Internal.ImmutableSetMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_): Internal.ImmutableSetMultimap<K_, V_>;
        get(arg0: any): Internal.Set<any>;
        get(arg0: any): Internal.ImmutableCollection<any>;
        get(arg0: any): Internal.Collection<any>;
        get(arg0: K): Internal.ImmutableSet<V>;
        static builder<K_, V_>(): Internal.ImmutableSetMultimap$Builder<K_, V_>;
        static copyOf<K_, V_>(arg0: Internal.Iterable<Internal.Map$Entry<K_, V_>>): Internal.ImmutableSetMultimap<K_, V_>;
        static copyOf<K_, V_>(arg0: Internal.Multimap<K_, V_>): Internal.ImmutableSetMultimap<K_, V_>;
        replaceValues(arg0: K, arg1: Internal.Iterable<V>): Internal.ImmutableSet<V>;
        replaceValues(arg0: any, arg1: Internal.Iterable<any>): Internal.Collection<any>;
        replaceValues(arg0: any, arg1: Internal.Iterable<any>): Internal.Set<any>;
        replaceValues(arg0: any, arg1: Internal.Iterable<any>): Internal.ImmutableCollection<any>;
        static toImmutableSetMultimap<T_, K_, V_>(arg0: ((arg0: T_) => K_), arg1: ((arg0: T_) => V_)): Internal.Collector<T_, any, Internal.ImmutableSetMultimap<K_, V_>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableSetMultimap_<K, V> = ImmutableSetMultimap<K, V>;
    class CMarkRecipeSeenPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_244321_b(): ResourceLocation;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CMarkRecipeSeenPacket_ = CMarkRecipeSeenPacket;
    interface Set <E> extends Internal.Collection<E> {
        add(arg0: E): boolean;
        spliterator(): Internal.Spliterator<E>;
        containsAll(arg0: Internal.Collection<any>): boolean;
        isEmpty(): boolean;
        clear(): void;
        remove(arg0: any): boolean;
        removeAll(arg0: Internal.Collection<any>): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<E>;
        size(): number;
        addAll(arg0: Internal.Collection<E>): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        toArray(): any[];
        toArray<T_>(arg0: T_[]): T_[];
        retainAll(arg0: Internal.Collection<any>): boolean;
    }
    type Set_<E> = Set<E>;
    class TypeToken$TypeSet extends Internal.ForwardingSet<Internal.TypeToken<T>> implements Internal.Serializable {
        interfaces(): Internal.TypeToken$TypeSet<>;
        classes(): Internal.TypeToken$TypeSet<>;
        rawTypes(): Internal.Set<Internal.Class<Internal.TypeToken<T>>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TypeToken$TypeSet_ = TypeToken$TypeSet;
    class GuiScreenEvent$InitGuiEvent$Post extends Internal.GuiScreenEvent$InitGuiEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$InitGuiEvent$Post_ = GuiScreenEvent$InitGuiEvent$Post;
    class PlayerInventory extends Document.Object implements Internal.IInventory, Internal.INameable {
        func_70304_b(arg0: number): Internal.ItemStack;
        func_174888_l(): void;
        func_201571_a(arg0: Internal.RecipeItemHelper): void;
        func_191971_c(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_70429_k(): void;
        func_70445_o(): Internal.ItemStack;
        func_191975_a(arg0: Internal.World, arg1: Internal.ItemStack): void;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_234564_a_(arg0: ((arg0: Internal.ItemStack) => boolean), arg1: number, arg2: Internal.IInventory): number;
        func_194014_c(arg0: Internal.ItemStack): number;
        func_199712_a(arg0: Internal.ITag<Internal.Item>): boolean;
        func_70302_i_(): number;
        func_184433_k(): number;
        func_70440_f(arg0: number): Internal.ItemStack;
        func_184438_a(arg0: Internal.BlockState): number;
        func_70443_b(arg0: Internal.ListNBT): void;
        func_184437_d(arg0: Internal.ItemStack): void;
        static func_184435_e(arg0: number): boolean;
        func_70442_a(arg0: Internal.ListNBT): Internal.ListNBT;
        func_184434_a(arg0: Internal.ItemStack): void;
        func_184430_d(arg0: number): void;
        func_70447_i(): number;
        func_70448_g(): Internal.ItemStack;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_70296_d(): void;
        func_194015_p(): number;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_234563_a_(arg0: Internal.DamageSource, arg1: number): void;
        func_70436_m(): void;
        func_70441_a(arg0: Internal.ItemStack): boolean;
        func_184429_b(arg0: Internal.ItemStack): number;
        func_70437_b(arg0: Internal.ItemStack): void;
        static func_70451_h(): number;
        func_70432_d(arg0: Internal.ItemStack): number;
        func_70455_b(arg0: Internal.PlayerInventory): void;
        func_70431_c(arg0: Internal.ItemStack): boolean;
        func_191420_l(): boolean;
        func_200200_C_(): Internal.ITextComponent;
        func_195409_a(arg0: number): void;
        readonly field_70458_d : Internal.PlayerEntity;
        readonly field_70460_b : Internal.NonNullList<Internal.ItemStack>;
        readonly field_70462_a : Internal.NonNullList<Internal.ItemStack>;
        readonly field_184439_c : Internal.NonNullList<Internal.ItemStack>;
        field_70461_c : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerInventory_ = PlayerInventory;
    class PlayerStatsJS extends Document.Object {
        getPlayer(): Internal.PlayerJS<any>;
        getPlayTime(): number;
        getWalkDistance(): number;
        getDamageAbsorbed(): number;
        getCrouchDistance(): number;
        getDamageDealt_absorbed(): number;
        getItemsPickedUp(item: Internal.Item): number;
        getFishCaught(): number;
        getDeaths(): number;
        getSwimDistance(): number;
        getItemsCrafted(item: Internal.Item): number;
        getBlocksMined(block: Internal.Block): number;
        getDamageDealt_resisted(): number;
        getPlayerKills(): number;
        get(id: ResourceLocation_): number;
        getTimeSinceDeath(): number;
        getDamageBlocked_by_shield(): number;
        getTimeCrouchTime(): number;
        getKilled(entity: Internal.EntityType<any>): number;
        getDamageTaken(): number;
        add(id: ResourceLocation_, value: number): void;
        set(id: ResourceLocation_, value: number): void;
        getItemsDropped(item: Internal.Item): number;
        getJumps(): number;
        getDamageResisted(): number;
        getAnimalsBred(): number;
        getItemsBroken(item: Internal.Item): number;
        getMobKills(): number;
        getSprintDistance(): number;
        getTimeSinceRest(): number;
        getKilledBy(entity: Internal.EntityType<any>): number;
        getDamageDealt(): number;
        getItemsUsed(item: Internal.Item): number;
        get playerKills(): number;
        get animalsBred(): number;
        get walkDistance(): number;
        get damageDealt_resisted(): number;
        get crouchDistance(): number;
        get damageAbsorbed(): number;
        get damageResisted(): number;
        get jumps(): number;
        get damageDealt_absorbed(): number;
        get timeSinceDeath(): number;
        get timeCrouchTime(): number;
        get damageBlocked_by_shield(): number;
        get fishCaught(): number;
        get mobKills(): number;
        get sprintDistance(): number;
        get timeSinceRest(): number;
        get swimDistance(): number;
        get playTime(): number;
        get deaths(): number;
        get damageDealt(): number;
        get player(): Internal.PlayerJS<any>;
        get damageTaken(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerStatsJS_ = PlayerStatsJS;
    class PlayerAdvancements extends Document.Object {
        func_192750_a(arg0: Internal.Advancement, arg1: string): boolean;
        func_192739_a(arg0: Internal.ServerPlayerEntity): void;
        func_192749_b(): void;
        func_194220_a(arg0: Internal.Advancement): void;
        func_192747_a(arg0: Internal.Advancement): Internal.AdvancementProgress;
        func_192741_b(arg0: Internal.ServerPlayerEntity): void;
        constant$zni000$visibility(arg0: number): number;
        func_240918_a_(arg0: Internal.AdvancementManager): void;
        func_192744_b(arg0: Internal.Advancement, arg1: string): boolean;
        func_192745_a(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerAdvancements_ = PlayerAdvancements;
    class SpawnerMinecartEntity extends Internal.AbstractMinecartEntity {
        func_180457_u(): Internal.BlockState;
        func_184264_v(): Internal.AbstractMinecartEntity$Type;
        func_184213_bq(): boolean;
        func_70071_h_(): void;
        func_70103_a(arg0: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SpawnerMinecartEntity_ = SpawnerMinecartEntity;
    class EmptyJigsawPiece extends Internal.JigsawPiece {
        func_214852_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_): Internal.MutableBoundingBox;
        func_214853_a(): Internal.IJigsawDeserializer<any>;
        func_230378_a_(arg0: Internal.TemplateManager, arg1: Internal.ISeedReader, arg2: Internal.StructureManager, arg3: Internal.ChunkGenerator, arg4: BlockPos, arg5: BlockPos, arg6: Internal.Rotation_, arg7: Internal.MutableBoundingBox, arg8: Internal.Random, arg9: boolean): boolean;
        toString(): string;
        func_214849_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_, arg3: Internal.Random): Internal.List<Internal.Template$BlockInfo>;
        static readonly field_236814_a_ : Internal.Codec<Internal.EmptyJigsawPiece>;
        static readonly field_214856_a : Internal.EmptyJigsawPiece;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EmptyJigsawPiece_ = EmptyJigsawPiece;
    interface Long2ObjectMap$FastEntrySet <V> extends Internal.ObjectSet<Internal.Long2ObjectMap$Entry<V>> {
        fastForEach(arg0: ((arg0: Internal.Long2ObjectMap$Entry<V>) => void)): void;
        fastIterator(): Internal.ObjectIterator<Internal.Long2ObjectMap$Entry<V>>;
    }
    type Long2ObjectMap$FastEntrySet_<V> = Long2ObjectMap$FastEntrySet<V>;
    interface DoubleSupplier {
        getAsDouble(): number;
    }
    type DoubleSupplier_ = (() => number) | DoubleSupplier;
    class MathContext extends Document.Object implements Internal.Serializable {
        getRoundingMode(): Internal.RoundingMode;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        getPrecision(): number;
        static readonly DECIMAL128 : Internal.MathContext;
        static readonly DECIMAL64 : Internal.MathContext;
        static readonly DECIMAL32 : Internal.MathContext;
        static readonly UNLIMITED : Internal.MathContext;
        get roundingMode(): Internal.RoundingMode;
        get precision(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MathContext_ = MathContext;
    interface Function13 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.Function4<T10, T11, T12, T13, R>>;
        curry12(): Internal.Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Internal.Function<T13, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function6<T8, T9, T10, T11, T12, T13, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function5<T9, T10, T11, T12, T13, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function8<T6, T7, T8, T9, T10, T11, T12, T13, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function7<T7, T8, T9, T10, T11, T12, T13, R>>;
        curry10(): Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Internal.Function3<T11, T12, T13, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function10<T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R>>;
        curry11(): Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Internal.BiFunction<T12, T13, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function9<T5, T6, T7, T8, T9, T10, T11, T12, T13, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function11<T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R>>;
        curry(): Internal.Function<T1, Internal.Function12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R>>;
    }
    type Function13_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R> = Function13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R>;
    class OptionalDynamic <T> extends Internal.DynamicLike<T> {
        asLongStreamOpt(): Internal.DataResult<Internal.LongStream>;
        getElementGeneric(arg0: T): Internal.DataResult<T>;
        asByteBufferOpt(): Internal.DataResult<Internal.ByteBuffer>;
        orElseEmptyMap(): Internal.Dynamic<T>;
        orElseEmptyList(): Internal.Dynamic<T>;
        asStreamOpt(): Internal.DataResult<Internal.Stream<Internal.Dynamic<T>>>;
        asNumber(): Internal.DataResult<Internal.Number>;
        asMapOpt(): Internal.DataResult<Internal.Stream<com.mojang.datafixers.util.Pair<Internal.Dynamic<T>, Internal.Dynamic<T>>>>;
        getGeneric(arg0: T): Internal.DataResult<T>;
        decode<A_>(arg0: Internal.Decoder<A_>): Internal.DataResult<com.mojang.datafixers.util.Pair<A_, T>>;
        asIntStreamOpt(): Internal.DataResult<Internal.IntStream>;
        flatMap<U_>(arg0: ((arg0: Internal.Dynamic<T>) => Internal.DataResult<U_>)): Internal.DataResult<U_>;
        result(): Internal.Optional<Internal.Dynamic<T>>;
        into<V_>(arg0: ((arg0: Internal.Dynamic<T>) => V_)): Internal.DataResult<V_>;
        getElement(arg0: string): Internal.DataResult<T>;
        get(): Internal.DataResult<Internal.Dynamic<T>>;
        get(arg0: string): Internal.OptionalDynamic<T>;
        asString(): Internal.DataResult<string>;
        map<U_>(arg0: ((arg0: Internal.Dynamic<T>) => U_)): Internal.DataResult<U_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OptionalDynamic_<T> = OptionalDynamic<T>;
    class WorldEntitySpawner$EntityDensityManager extends Document.Object {
        func_234988_a_(): number;
        func_234995_b_(): Internal.Object2IntMap<Internal.EntityClassification>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldEntitySpawner$EntityDensityManager_ = WorldEntitySpawner$EntityDensityManager;
    class ThreadGroup extends Document.Object implements Internal.Thread$UncaughtExceptionHandler {
        setMaxPriority(arg0: number): void;
        resume(): void;
        suspend(): void;
        activeCount(): number;
        getParent(): Internal.ThreadGroup;
        getName(): string;
        isDestroyed(): boolean;
        destroy(): void;
        parentOf(arg0: Internal.ThreadGroup): boolean;
        list(): void;
        checkAccess(): void;
        setDaemon(arg0: boolean): void;
        getMaxPriority(): number;
        stop(): void;
        isDaemon(): boolean;
        interrupt(): void;
        activeGroupCount(): number;
        uncaughtException(arg0: Internal.Thread, arg1: Internal.Throwable): void;
        enumerate(arg0: Internal.ThreadGroup[]): number;
        enumerate(arg0: Internal.ThreadGroup[], arg1: boolean): number;
        enumerate(arg0: Internal.Thread[]): number;
        enumerate(arg0: Internal.Thread[], arg1: boolean): number;
        toString(): string;
        get parent(): Internal.ThreadGroup;
        get destroyed(): boolean;
        get maxPriority(): number;
        get name(): string;
        get daemon(): boolean;
        set maxPriority(arg0: number);
        set daemon(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ThreadGroup_ = ThreadGroup;
    class ItemOverride extends Document.Object {
        func_188026_a(): ResourceLocation;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemOverride_ = ItemOverride;
    interface IEntityRenderer <T, M> {
        func_217764_d(): M;
        func_110775_a(arg0: T): ResourceLocation;
    }
    type IEntityRenderer_<T, M> = IEntityRenderer<T, M>;
    class ServerPlayerJS extends Internal.PlayerJS<Internal.ServerPlayerEntity> {
        setCreativeMode(mode: boolean): void;
        isAdvancementDone(id: ResourceLocation_): boolean;
        getStats(): Internal.PlayerStatsJS;
        sendData(channel: string, data: Internal.CompoundNBT): void;
        getHasClientMod(): boolean;
        unlockAdvancement(id: ResourceLocation_): void;
        setSpawnLocation(c: Internal.BlockContainerJS): void;
        paint(renderer: Internal.CompoundNBT): void;
        getSpawnLocation(): Internal.BlockContainerJS;
        setGameMode(mode: string): void;
        revokeAdvancement(id: ResourceLocation_): void;
        ban(banner: string, reason: string, expiresInMillis: number): void;
        isMiningBlock(): boolean;
        setSelectedSlot(index: number): void;
        kick(): void;
        kick(reason: Internal.ITextComponent_): void;
        setMouseItem(item: Internal.ItemStackJS_): void;
        isOP(): boolean;
        isOp(): boolean;
        readonly server : Internal.ServerJS;
        get spawnLocation(): Internal.BlockContainerJS;
        get oP(): boolean;
        get op(): boolean;
        get stats(): Internal.PlayerStatsJS;
        get miningBlock(): boolean;
        get hasClientMod(): boolean;
        set spawnLocation(c: Internal.BlockContainerJS);
        set selectedSlot(index: number);
        set mouseItem(item: Internal.ItemStackJS_);
        set creativeMode(mode: boolean);
        set gameMode(mode: string);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerPlayerJS_ = ServerPlayerJS;
    class Rotations extends Document.Object {
        equals(arg0: any): boolean;
        func_179416_c(): number;
        func_179415_b(): number;
        func_179413_d(): number;
        func_179414_a(): Internal.ListNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Rotations_ = Rotations;
    interface ObjectBidirectionalIterator <K> extends Internal.ObjectIterator<K>, Internal.BidirectionalIterator<K> {
        back(arg0: number): number;
        skip(arg0: number): number;
    }
    type ObjectBidirectionalIterator_<K> = ObjectBidirectionalIterator<K>;
    class Alternative$Builder extends Document.Object implements Internal.ILootCondition$IBuilder {
        build(): Internal.ILootCondition;
        func_216297_a(arg0: (() => Internal.ILootCondition)): Internal.Alternative$Builder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Alternative$Builder_ = Alternative$Builder;
    class Region extends Document.Object implements Internal.IBlockReader, Internal.ICollisionReader {
        func_225522_c_(arg0: number, arg1: number): Internal.IBlockReader;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: ((arg0: Internal.Entity) => boolean)): Internal.Stream<Internal.VoxelShape>;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_234867_d_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: ((arg0: Internal.Entity) => boolean)): Internal.Stream<Internal.VoxelShape>;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
        func_175723_af(): Internal.WorldBorder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Region_ = Region;
    class Block extends Internal.AbstractBlock implements Internal.IItemProvider, Internal.IForgeBlock, Internal.BlockColorSettings<any> {
        func_235333_g_(): Internal.IFormattableTextComponent;
        useSmoothColorBlending(arg0: Internal.IBlockDisplayReader, arg1: any, arg2: BlockPos): boolean;
        useSmoothColorBlending(view: Internal.IBlockDisplayReader, state: Internal.BlockState, pos: BlockPos): boolean;
        func_149653_t(arg0: Internal.BlockState): boolean;
        static func_208062_a(arg0: Internal.VoxelShape): boolean;
        func_176199_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Entity): void;
        func_149659_a(arg0: Internal.Explosion): boolean;
        getHarvestLevel(arg0: Internal.BlockState): number;
        func_181623_g(): boolean;
        func_149638_a(): number;
        getTags(): Internal.Set<ResourceLocation>;
        func_200123_i(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        func_185473_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.BlockState): Internal.ItemStack;
        static func_196263_a(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.IWorld, arg3: BlockPos, arg4: number): void;
        static func_220077_a(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.TileEntity, arg4: Internal.Entity, arg5: Internal.ItemStack): Internal.List<Internal.ItemStack>;
        static func_220075_c(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos): void;
        static func_220054_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.TileEntity, arg4: Internal.Entity, arg5: Internal.ItemStack): void;
        func_196258_a(arg0: Internal.BlockItemUseContext): Internal.BlockState;
        static func_220073_a(arg0: Internal.Block): boolean;
        func_208618_m(): number;
        func_149666_a(arg0: Internal.ItemGroup, arg1: Internal.NonNullList<Internal.ItemStack>): void;
        func_235332_a_(arg0: Internal.Block): boolean;
        getHarvestTool(arg0: Internal.BlockState): Internal.ToolType;
        func_180652_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Explosion): void;
        static func_199601_a(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.World, arg3: BlockPos): Internal.BlockState;
        canSustainPlant(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_, arg4: Internal.IPlantable): boolean;
        func_180637_b(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: number): void;
        func_180658_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Entity, arg3: number): void;
        static func_180635_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.ItemStack): void;
        func_180633_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.LivingEntity, arg4: Internal.ItemStack): void;
        func_176224_k(arg0: Internal.World, arg1: BlockPos): void;
        getIdKJS(): string;
        static func_149634_a(arg0: Internal.Item): Internal.Block;
        static func_196246_j(arg0: Internal.BlockState): number;
        func_190948_a(arg0: Internal.ItemStack, arg1: Internal.IBlockReader, arg2: Internal.List<Internal.ITextComponent>, arg3: Internal.ITooltipFlag): void;
        static func_208061_a(arg0: Internal.VoxelShape, arg1: Internal.Direction_): boolean;
        func_176216_a(arg0: Internal.IBlockReader, arg1: Internal.Entity): void;
        func_208619_r(): boolean;
        func_176223_P(): Internal.BlockState;
        func_149739_a(): string;
        static func_220055_a(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        func_203417_a(arg0: Internal.ITag<Internal.Block>): boolean;
        static func_196257_b(arg0: number): Internal.BlockState;
        static func_220070_a(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.TileEntity): Internal.List<Internal.ItemStack>;
        func_176194_O(): Internal.StateContainer<Internal.Block, Internal.BlockState>;
        func_226892_n_(): number;
        static func_208617_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        func_176208_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.PlayerEntity): void;
        static func_176225_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        func_226891_m_(): number;
        func_220072_p(arg0: Internal.BlockState): Internal.SoundType;
        func_180655_c(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Random): void;
        func_180657_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.TileEntity, arg5: Internal.ItemStack): void;
        static func_199770_b(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos): Internal.BlockState;
        func_176206_d(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState): void;
        static func_220059_a(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: Internal.TileEntity): void;
        static func_220064_c(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        static func_241468_a_(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.IWorld, arg3: BlockPos, arg4: number, arg5: number): void;
        toString(): string;
        func_199767_j(): Internal.Item;
        static readonly field_176229_d : Internal.ObjectIntIdentityMap<Internal.BlockState>;
        field_149770_b : string;
        get tags(): Internal.Set<ResourceLocation>;
        get idKJS(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Block_ = Block;
    interface BlittableVertexType <T> extends Internal.BufferVertexType<T> {
        createBufferWriter(arg0: Internal.VertexBufferView, arg1: boolean): T;
    }
    type BlittableVertexType_<T> = BlittableVertexType<T>;
    interface IChatFilter {
        func_244434_b(): void;
        func_244433_a(arg0: Internal.List<string>): Internal.CompletableFuture<Internal.Optional<Internal.List<string>>>;
        func_244432_a(arg0: string): Internal.CompletableFuture<Internal.Optional<string>>;
        func_244800_a(): void;
    }
    type IChatFilter_ = IChatFilter;
    class PlayerRenderer extends Internal.LivingRenderer<Internal.AbstractClientPlayerEntity, any> {
        func_229146_b_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: Internal.AbstractClientPlayerEntity): void;
        func_225627_b_(arg0: Internal.Entity, arg1: number): Vec3;
        func_225627_b_(arg0: Internal.AbstractClientPlayerEntity, arg1: number): Vec3;
        func_110775_a(arg0: Internal.AbstractClientPlayerEntity): ResourceLocation;
        func_110775_a(arg0: Internal.Entity): ResourceLocation;
        func_225623_a_(arg0: Internal.Entity, arg1: number, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer, arg5: number): void;
        func_225623_a_(arg0: Internal.LivingEntity, arg1: number, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer, arg5: number): void;
        func_225623_a_(arg0: Internal.AbstractClientPlayerEntity, arg1: number, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer, arg5: number): void;
        func_229144_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: Internal.AbstractClientPlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerRenderer_ = PlayerRenderer;
    interface SessionEventListener {
        onStartGameSession(arg0: Internal.GameSession): void;
        onLeaveGameSession(arg0: Internal.GameSession): void;
    }
    type SessionEventListener_ = SessionEventListener;
    interface IJigsawDeserializer <P> {
        codec(): Internal.Codec<P>;
    }
    type IJigsawDeserializer_<P> = IJigsawDeserializer<P>;
    class ParseResults <S> extends Document.Object {
        getExceptions(): Internal.Map<Internal.CommandNode<S>, Internal.CommandSyntaxException>;
        getReader(): Internal.ImmutableStringReader;
        getContext(): Internal.CommandContextBuilder<S>;
        get reader(): Internal.ImmutableStringReader;
        get context(): Internal.CommandContextBuilder<S>;
        get exceptions(): Internal.Map<Internal.CommandNode<S>, Internal.CommandSyntaxException>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ParseResults_<S> = ParseResults<S>;
    interface Int2IntMap$Entry extends Internal.Map$Entry<number, number> {
        getKey(): any;
        getKey(): number;
        getValue(): any;
        getValue(): number;
        getIntKey(): number;
        getIntValue(): number;
        setValue(arg0: number): number;
        setValue(arg0: any): any;
        setValue(arg0: number): number;
    }
    type Int2IntMap$Entry_ = Int2IntMap$Entry;
    abstract class AbstractMultimap <K, V> extends Document.Object implements Internal.Multimap<K, V> {
        containsEntry(arg0: any, arg1: any): boolean;
        asMap(): Internal.Map<K, Internal.Collection<V>>;
        keys(): Internal.Multiset<K>;
        values(): Internal.Collection<V>;
        isEmpty(): boolean;
        replaceValues(arg0: K, arg1: Internal.Iterable<V>): Internal.Collection<V>;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): boolean;
        remove(arg0: any, arg1: any): boolean;
        entries(): Internal.Collection<Internal.Map$Entry<K, V>>;
        hashCode(): number;
        putAll(arg0: K, arg1: Internal.Iterable<V>): boolean;
        putAll(arg0: Internal.Multimap<K, V>): boolean;
        equals(arg0: any): boolean;
        toString(): string;
        keySet(): Internal.Set<K>;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractMultimap_<K, V> = AbstractMultimap<K, V>;
    class ChunkWatchEvent extends net.minecraftforge.eventbus.api.Event {
        getWorld(): Internal.ServerWorld;
        getPlayer(): Internal.ServerPlayerEntity;
        getListenerList(): Internal.ListenerList;
        getPos(): Internal.ChunkPos;
        get world(): Internal.ServerWorld;
        get listenerList(): Internal.ListenerList;
        get pos(): Internal.ChunkPos;
        get player(): Internal.ServerPlayerEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkWatchEvent_ = ChunkWatchEvent;
    interface ISeedReader extends Internal.IServerWorld {
        func_241827_a(arg0: Internal.SectionPos, arg1: Internal.Structure<any>): Internal.Stream<Internal.StructureStart<any>>;
        func_72905_C(): number;
    }
    type ISeedReader_ = ISeedReader;
    class FixedUnit extends Internal.Unit {
        sub(with_: Internal.Unit): Internal.Unit;
        mod(with_: Internal.Unit): Internal.Unit;
        mul(with_: Internal.Unit): Internal.Unit;
        log(): Internal.Unit;
        log1p(): Internal.Unit;
        log10(): Internal.Unit;
        cos(): Internal.Unit;
        deg(): Internal.Unit;
        atan(): Internal.Unit;
        div(with_: Internal.Unit): Internal.Unit;
        neg(): Internal.Unit;
        shiftLeft(with_: Internal.Unit): Internal.Unit;
        min(with_: Internal.Unit): Internal.Unit;
        rad(): Internal.Unit;
        sqrt(): Internal.Unit;
        static of(value: number): Internal.FixedUnit;
        get(): number;
        pow(with_: Internal.Unit): Internal.Unit;
        sin(): Internal.Unit;
        floor(): Internal.Unit;
        isFixed(): boolean;
        sq(): Internal.Unit;
        atan2(with_: Internal.Unit): Internal.Unit;
        add(with_: Internal.Unit): Internal.Unit;
        tan(): Internal.Unit;
        newValue(v: number): Internal.Unit;
        max(with_: Internal.Unit): Internal.Unit;
        ceil(): Internal.Unit;
        shiftRight(with_: Internal.Unit): Internal.Unit;
        abs(): Internal.Unit;
        append(sb: Internal.StringBuilder): void;
        static readonly ZERO : Internal.FixedUnit;
        static readonly ONE : Internal.FixedUnit;
        static readonly POS_INFINITY : Internal.FixedUnit;
        static readonly NEG_INFINITY : Internal.FixedUnit;
        static readonly NAN : Internal.FixedUnit;
        get fixed(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FixedUnit_ = FixedUnit;
    class IRenderTypeBuffer$Impl extends Document.Object implements Internal.IRenderTypeBuffer {
        func_228462_a_(arg0: Internal.RenderType): void;
        func_228461_a_(): void;
        getBuffer(arg0: Internal.RenderType): Internal.IVertexBuilder;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type IRenderTypeBuffer$Impl_ = IRenderTypeBuffer$Impl;
    class Point extends Internal.Point2D implements Internal.Serializable {
        move(arg0: number, arg1: number): void;
        getLocation(): Internal.Point;
        getX(): number;
        getY(): number;
        setLocation(arg0: Internal.Point): void;
        setLocation(arg0: number, arg1: number): void;
        setLocation(arg0: number, arg1: number): void;
        equals(arg0: any): boolean;
        toString(): string;
        translate(arg0: number, arg1: number): void;
        x : number;
        y : number;
        get location(): Internal.Point;
        set location(arg0: Internal.Point);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Point_ = Point;
    interface IModBusEvent {
    }
    type IModBusEvent_ = IModBusEvent;
    class NativeJavaClass extends Internal.NativeJavaObject implements dev.latvian.mods.rhino.Function {
        call(cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        hasInstance(value: Internal.Scriptable): boolean;
        get(name: string, start: Internal.Scriptable): any;
        getIds(): any[];
        toString(): string;
        has(name: string, start: Internal.Scriptable): boolean;
        getClassName(): string;
        construct(cx: Internal.Context, scope: Internal.Scriptable, args: any[]): Internal.Scriptable;
        getClassObject(): Internal.Class<any>;
        put(name: string, start: Internal.Scriptable, value: any): void;
        getDefaultValue(hint: Internal.Class_<any>): any;
        get classObject(): Internal.Class<any>;
        get ids(): any[];
        get className(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type NativeJavaClass_ = NativeJavaClass;
    abstract class AbstractFurnaceTileEntity extends Internal.LockableTileEntity implements Internal.ISidedInventory, Internal.IRecipeHolder, Internal.IRecipeHelperPopulator, Internal.ITickableTileEntity, Internal.Duck {
        func_70304_b(arg0: number): Internal.ItemStack;
        setRecipe(arg0: Internal.AbstractCookingRecipe): void;
        func_194018_a(arg0: Internal.RecipeItemHelper): void;
        func_174888_l(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        static func_214001_f(): Internal.Map<Internal.Item, number>;
        func_73660_a(): void;
        func_70302_i_(): number;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        getRecipe(): Internal.AbstractCookingRecipe;
        func_235645_d_(arg0: Internal.PlayerEntity): void;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_235640_a_(arg0: Internal.World, arg1: Vec3): Internal.List<Internal.IRecipe<any>>;
        func_201560_d(arg0: Internal.PlayerEntity): void;
        setFailedMatch(arg0: Internal.ItemStack): void;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        getFailedMatch(): Internal.ItemStack;
        func_180463_a(arg0: Internal.Direction_): number[];
        func_180461_b(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        func_180462_a(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        func_193056_a(arg0: Internal.IRecipe<any>): void;
        func_191420_l(): boolean;
        static func_213991_b(arg0: Internal.ItemStack): boolean;
        func_193055_i(): Internal.IRecipe<any>;
        field_214021_m : number;
        field_214020_l : number;
        get failedMatch(): Internal.ItemStack;
        get recipe(): Internal.AbstractCookingRecipe;
        set failedMatch(arg0: Internal.ItemStack);
        set recipe(arg0: Internal.AbstractCookingRecipe);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractFurnaceTileEntity_ = AbstractFurnaceTileEntity;
    class ForestFlowerBlockStateProvider extends Internal.BlockStateProvider {
        func_225574_a_(arg0: Internal.Random, arg1: BlockPos): Internal.BlockState;
        static readonly field_236801_b_ : Internal.Codec<Internal.ForestFlowerBlockStateProvider>;
        static readonly field_236802_c_ : Internal.ForestFlowerBlockStateProvider;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ForestFlowerBlockStateProvider_ = ForestFlowerBlockStateProvider;
    interface ObjIntConsumer <T> {
        accept(arg0: T, arg1: number): void;
    }
    type ObjIntConsumer_<T> = ((arg0: T, arg1: number) => void) | ObjIntConsumer<T>;
    class StructureSpawnListGatherEvent extends net.minecraftforge.eventbus.api.Event {
        setInsideOnly(arg0: boolean): void;
        getListenerList(): Internal.ListenerList;
        removeEntitySpawn(arg0: Internal.EntityClassification_, arg1: Internal.MobSpawnInfo$Spawners): void;
        isInsideOnly(): boolean;
        addEntitySpawns(arg0: Internal.EntityClassification_, arg1: Internal.List<Internal.MobSpawnInfo$Spawners>): void;
        getStructure(): Internal.Structure<any>;
        addEntitySpawn(arg0: Internal.EntityClassification_, arg1: Internal.MobSpawnInfo$Spawners): void;
        getEntitySpawns(arg0: Internal.EntityClassification_): Internal.List<Internal.MobSpawnInfo$Spawners>;
        getEntitySpawns(): Internal.Map<Internal.EntityClassification, Internal.List<Internal.MobSpawnInfo$Spawners>>;
        get entitySpawns(): Internal.Map<Internal.EntityClassification, Internal.List<Internal.MobSpawnInfo$Spawners>>;
        get listenerList(): Internal.ListenerList;
        get insideOnly(): boolean;
        get structure(): Internal.Structure<any>;
        set insideOnly(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureSpawnListGatherEvent_ = StructureSpawnListGatherEvent;
    abstract class AxisRotation extends Internal.Enum<Internal.AxisRotation> {
        static valueOf(arg0: string): Internal.AxisRotation;
        func_197517_a(arg0: number, arg1: number, arg2: number, arg3: Internal.Direction$Axis_): number;
        static values(): Internal.AxisRotation[];
        static func_197516_a(arg0: Internal.Direction$Axis_, arg1: Internal.Direction$Axis_): Internal.AxisRotation;
        func_197514_a(): Internal.AxisRotation;
        func_197513_a(arg0: Internal.Direction$Axis_): Internal.Direction$Axis;
        static readonly BACKWARD : Internal.AxisRotation;
        static readonly field_197521_d : Internal.Direction$Axis[];
        static readonly FORWARD : Internal.AxisRotation;
        static readonly NONE : Internal.AxisRotation;
        static readonly field_197522_e : Internal.AxisRotation[];
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AxisRotation_ = "none" | "forward" | "backward" | AxisRotation;
    abstract class UnmodifiableIterator <E> extends Document.Object implements Internal.Iterator<E> {
        remove(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type UnmodifiableIterator_<E> = UnmodifiableIterator<E>;
    abstract class Phase extends Document.Object implements Internal.IPhase {
        func_221113_a(arg0: Internal.DamageSource, arg1: number): number;
        func_188660_d(): void;
        func_188658_e(): void;
        func_188659_c(): void;
        func_188657_b(): void;
        func_188653_h(): number;
        func_188654_a(): boolean;
        func_188651_f(): number;
        func_188650_g(): Vec3;
        func_188655_a(arg0: Internal.EnderCrystalEntity, arg1: BlockPos, arg2: Internal.DamageSource, arg3: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Phase_ = Phase;
    class ParrotEntity extends Internal.ShoulderRidingEntity implements Internal.IFlyingAnimal {
        static func_234212_a_(arg0: Internal.World, arg1: Internal.Random): Internal.SoundEvent;
        func_70104_M(): boolean;
        func_192002_a(): boolean;
        static func_192006_b(arg0: Internal.World, arg1: Internal.Entity): boolean;
        func_184639_G(): Internal.SoundEvent;
        static func_223317_c(arg0: Internal.EntityType<Internal.ParrotEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_191997_m(arg0: number): void;
        func_70636_d(): void;
        func_70631_g_(): boolean;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        static func_234213_eS_(): Internal.AttributeModifierMap$MutableAttribute;
        func_191987_a(arg0: BlockPos, arg1: boolean): void;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_192004_dr(): boolean;
        func_191998_ds(): number;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_241205_ce_(): Vec3;
        func_70878_b(arg0: Internal.AnimalEntity): boolean;
        static func_192000_b(arg0: Internal.Random): number;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        func_184176_by(): Internal.SoundCategory;
        field_192010_bD : number;
        field_192011_bE : number;
        field_192008_bB : number;
        field_192009_bC : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ParrotEntity_ = ParrotEntity;
    class PlayerEvent$TabListNameFormat extends Internal.PlayerEvent {
        getListenerList(): Internal.ListenerList;
        getDisplayName(): Internal.ITextComponent;
        setDisplayName(arg0: Internal.ITextComponent_): void;
        get listenerList(): Internal.ListenerList;
        get displayName(): Internal.ITextComponent;
        set displayName(arg0: Internal.ITextComponent_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerEvent$TabListNameFormat_ = PlayerEvent$TabListNameFormat;
    class RayTraceResult$Type extends Internal.Enum<Internal.RayTraceResult$Type> {
        static valueOf(arg0: string): Internal.RayTraceResult$Type;
        static values(): Internal.RayTraceResult$Type[];
        static readonly ENTITY : Internal.RayTraceResult$Type;
        static readonly MISS : Internal.RayTraceResult$Type;
        static readonly BLOCK : Internal.RayTraceResult$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RayTraceResult$Type_ = "miss" | "block" | "entity" | RayTraceResult$Type;
    interface ValueLayout$OfShort extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfShort;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfShort;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.ValueLayout$OfShort;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfShort;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfShort_ = ValueLayout$OfShort;
    abstract class FluidStackJS extends Document.Object implements Internal.WrappedJS, Internal.Copyable {
        nbt(nbt: Internal.CompoundNBT): Internal.FluidStackJS;
        getNbt(): Internal.CompoundNBT;
        getChance(): number;
        getId(): string;
        getTags(): Internal.Collection<ResourceLocation>;
        toNBT(): Internal.CompoundNBT;
        setChance(c: number): void;
        hashCode(): number;
        static of(o: any): Internal.FluidStackJS;
        static of(o: any, amount: number, nbt: Internal.CompoundNBT): Internal.FluidStackJS;
        withAmount(amount: number): Internal.FluidStackJS;
        copy(): Internal.Copyable;
        copy(): Internal.FluidStackJS;
        withChance(c: number): Internal.FluidStackJS;
        setAmount(arg0: number): void;
        getAmount(): number;
        withNBT(nbt: Internal.CompoundNBT): Internal.FluidStackJS;
        amount(amount: number): Internal.FluidStackJS;
        hasTag(tag: ResourceLocation_): boolean;
        isEmpty(): boolean;
        hasChance(): boolean;
        strongEquals(o: any): boolean;
        toJson(): Internal.JsonObject;
        getFluidStack(): Internal.FluidStack;
        equals(o: any): boolean;
        static fromJson(e: Internal.JsonElement): Internal.FluidStackJS;
        getFluid(): Internal.Fluid;
        toString(): string;
        removeChance(): void;
        setNbt(arg0: Internal.CompoundNBT): void;
        get chance(): number;
        get fluidStack(): Internal.FluidStack;
        get fluid(): Internal.Fluid;
        get id(): string;
        get tags(): Internal.Collection<ResourceLocation>;
        get empty(): boolean;
        set chance(c: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FluidStackJS_ = FluidStackJS;
    interface Matrix4fExtended {
        rotate(arg0: Internal.Quaternion): void;
        transformVecZ(arg0: number, arg1: number, arg2: number): number;
        transformVecY(arg0: number, arg1: number, arg2: number): number;
        transformVecX(arg0: number, arg1: number, arg2: number): number;
        translate(arg0: number, arg1: number, arg2: number): void;
    }
    type Matrix4fExtended_ = Matrix4fExtended;
    abstract class Goal extends Document.Object {
        func_220685_C_(): boolean;
        func_75246_d(): void;
        func_75250_a(): boolean;
        func_75249_e(): void;
        func_75253_b(): boolean;
        toString(): string;
        func_75251_c(): void;
        func_220684_a(arg0: Internal.EnumSet<Internal.Goal$Flag>): void;
        func_220686_i(): Internal.EnumSet<Internal.Goal$Flag>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Goal_ = Goal;
    interface IVertexProducer {
        pipe(arg0: net.minecraftforge.client.model.pipeline.IVertexConsumer): void;
    }
    type IVertexProducer_ = IVertexProducer;
    class ModuleDescriptor$Exports$Modifier extends Internal.Enum<Internal.ModuleDescriptor$Exports$Modifier> {
        static valueOf(arg0: string): Internal.ModuleDescriptor$Exports$Modifier;
        static values(): Internal.ModuleDescriptor$Exports$Modifier[];
        static readonly SYNTHETIC : Internal.ModuleDescriptor$Exports$Modifier;
        static readonly MANDATED : Internal.ModuleDescriptor$Exports$Modifier;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ModuleDescriptor$Exports$Modifier_ = "synthetic" | "mandated" | ModuleDescriptor$Exports$Modifier;
    abstract class AbstractInt2IntFunction extends Document.Object implements Internal.Int2IntFunction, Internal.Serializable {
        defaultReturnValue(arg0: number): void;
        defaultReturnValue(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractInt2IntFunction_ = AbstractInt2IntFunction;
    class DragonFireballEntity extends Internal.DamagingProjectileEntity {
        func_70067_L(): boolean;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DragonFireballEntity_ = DragonFireballEntity;
    interface ChunkStatusListener {
        onChunkRemoved(arg0: number, arg1: number): void;
        onChunkAdded(arg0: number, arg1: number): void;
    }
    type ChunkStatusListener_ = ChunkStatusListener;
    interface ChannelPipeline extends Internal.ChannelInboundInvoker, Internal.ChannelOutboundInvoker, Internal.Iterable<Internal.Map$Entry<string, Internal.ChannelHandler>> {
        fireChannelWritabilityChanged(): Internal.ChannelPipeline;
        channel(): io.netty.channel.Channel;
        replace<T_>(arg0: Internal.Class_<T_>, arg1: string, arg2: Internal.ChannelHandler): T_;
        replace(arg0: string, arg1: string, arg2: Internal.ChannelHandler): Internal.ChannelHandler;
        replace(arg0: Internal.ChannelHandler, arg1: string, arg2: Internal.ChannelHandler): Internal.ChannelPipeline;
        fireExceptionCaught(arg0: Internal.Throwable): Internal.ChannelPipeline;
        fireChannelActive(): Internal.ChannelPipeline;
        removeLast(): Internal.ChannelHandler;
        remove(arg0: string): Internal.ChannelHandler;
        remove<T_>(arg0: Internal.Class_<T_>): T_;
        remove(arg0: Internal.ChannelHandler): Internal.ChannelPipeline;
        addLast(arg0: Internal.EventExecutorGroup, arg1: string, arg2: Internal.ChannelHandler): Internal.ChannelPipeline;
        addLast(arg0: string, arg1: Internal.ChannelHandler): Internal.ChannelPipeline;
        addLast(arg0: Internal.EventExecutorGroup, arg1: Internal.ChannelHandler[]): Internal.ChannelPipeline;
        addLast(arg0: Internal.ChannelHandler[]): Internal.ChannelPipeline;
        addAfter(arg0: Internal.EventExecutorGroup, arg1: string, arg2: string, arg3: Internal.ChannelHandler): Internal.ChannelPipeline;
        addAfter(arg0: string, arg1: string, arg2: Internal.ChannelHandler): Internal.ChannelPipeline;
        flush(): Internal.ChannelPipeline;
        removeFirst(): Internal.ChannelHandler;
        get<T_>(arg0: Internal.Class_<T_>): T_;
        get(arg0: string): Internal.ChannelHandler;
        context(arg0: string): Internal.ChannelHandlerContext;
        context(arg0: Internal.ChannelHandler): Internal.ChannelHandlerContext;
        context(arg0: Internal.Class_<Internal.ChannelHandler_>): Internal.ChannelHandlerContext;
        firstContext(): Internal.ChannelHandlerContext;
        fireChannelInactive(): Internal.ChannelPipeline;
        last(): Internal.ChannelHandler;
        fireChannelReadComplete(): Internal.ChannelPipeline;
        fireChannelRegistered(): Internal.ChannelPipeline;
        addBefore(arg0: string, arg1: string, arg2: Internal.ChannelHandler): Internal.ChannelPipeline;
        addBefore(arg0: Internal.EventExecutorGroup, arg1: string, arg2: string, arg3: Internal.ChannelHandler): Internal.ChannelPipeline;
        fireChannelRead(arg0: any): Internal.ChannelPipeline;
        names(): Internal.List<string>;
        toMap(): Internal.Map<string, Internal.ChannelHandler>;
        fireUserEventTriggered(arg0: any): Internal.ChannelPipeline;
        lastContext(): Internal.ChannelHandlerContext;
        fireChannelUnregistered(): Internal.ChannelPipeline;
        addFirst(arg0: Internal.EventExecutorGroup, arg1: Internal.ChannelHandler[]): Internal.ChannelPipeline;
        addFirst(arg0: Internal.ChannelHandler[]): Internal.ChannelPipeline;
        addFirst(arg0: Internal.EventExecutorGroup, arg1: string, arg2: Internal.ChannelHandler): Internal.ChannelPipeline;
        addFirst(arg0: string, arg1: Internal.ChannelHandler): Internal.ChannelPipeline;
        first(): Internal.ChannelHandler;
    }
    type ChannelPipeline_ = ChannelPipeline;
    class SEntityTeleportPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_149450_g(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149451_c(): number;
        func_149447_h(): number;
        func_179697_g(): boolean;
        func_186983_c(): number;
        func_186981_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_186982_b(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SEntityTeleportPacket_ = SEntityTeleportPacket;
    abstract class SurfaceBuilder <C> extends Internal.ForgeRegistryEntry<Internal.SurfaceBuilder<any>> {
        func_205610_a_(arg0: Internal.Random, arg1: Internal.IChunk, arg2: Internal.Biome, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.BlockState, arg8: Internal.BlockState, arg9: number, arg10: number, arg11: C): void;
        func_237202_d_(): Internal.Codec<Internal.ConfiguredSurfaceBuilder<C>>;
        func_242929_a(arg0: C): Internal.ConfiguredSurfaceBuilder<C>;
        func_205548_a(arg0: number): void;
        static readonly field_215397_H : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215398_I : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215399_J : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_237191_af_ : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215393_D : Internal.SurfaceBuilderConfig;
        static readonly field_215425_v : Internal.SurfaceBuilderConfig;
        static readonly field_215394_E : Internal.SurfaceBuilderConfig;
        static readonly field_237185_P_ : Internal.SurfaceBuilderConfig;
        static readonly field_215395_F : Internal.SurfaceBuilderConfig;
        static readonly field_215423_t : Internal.SurfaceBuilderConfig;
        static readonly field_215396_G : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215424_u : Internal.SurfaceBuilderConfig;
        static readonly field_237186_Q_ : Internal.SurfaceBuilderConfig;
        static readonly field_237187_R_ : Internal.SurfaceBuilderConfig;
        static readonly field_215402_M : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215401_L : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215404_O : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215403_N : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215406_Q : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215405_P : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_237189_ad_ : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_237184_N_ : Internal.SurfaceBuilderConfig;
        static readonly field_215407_R : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215429_z : Internal.SurfaceBuilderConfig;
        static readonly field_215390_A : Internal.SurfaceBuilderConfig;
        static readonly field_215391_B : Internal.SurfaceBuilderConfig;
        static readonly field_215427_x : Internal.SurfaceBuilderConfig;
        static readonly field_215392_C : Internal.SurfaceBuilderConfig;
        static readonly field_215428_y : Internal.SurfaceBuilderConfig;
        static readonly field_237190_ae_ : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215400_K : Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SurfaceBuilder_<C> = SurfaceBuilder<C>;
    abstract class AbstractLong2ObjectSortedMap <V> extends Internal.AbstractLong2ObjectMap<V> implements Internal.Long2ObjectSortedMap<V> {
        values(): Internal.Collection<any>;
        values(): Internal.ObjectCollection<V>;
        keySet(): Internal.Set<any>;
        keySet(): Internal.LongSet;
        keySet(): Internal.LongSortedSet;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractLong2ObjectSortedMap_<V> = AbstractLong2ObjectSortedMap<V>;
    class BlastFurnaceTileEntity extends Internal.AbstractFurnaceTileEntity {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlastFurnaceTileEntity_ = BlastFurnaceTileEntity;
    class ShieldRecipes extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShieldRecipes_ = ShieldRecipes;
    interface ISubtypeManager {
        getSubtypeInfo(arg0: Internal.ItemStack): string;
        getSubtypeInfo(arg0: Internal.ItemStack, arg1: Internal.UidContext_): string;
        getSubtypeInfo(arg0: net.minecraftforge.fluids.FluidStack, arg1: Internal.UidContext_): string;
    }
    type ISubtypeManager_ = ISubtypeManager;
    class BlobReplacementConfig extends Document.Object implements Internal.IFeatureConfig {
        func_242823_b(): Internal.FeatureSpread;
        static readonly field_242817_a : Internal.Codec<Internal.BlobReplacementConfig>;
        readonly field_242818_b : Internal.BlockState;
        readonly field_242819_c : Internal.BlockState;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlobReplacementConfig_ = BlobReplacementConfig;
    interface IForgeRegistryEntry <V> {
        getRegistryType(): Internal.Class<V>;
        getRegistryName(): ResourceLocation;
        setRegistryName(arg0: ResourceLocation_): V;
    }
    type IForgeRegistryEntry_<V> = IForgeRegistryEntry<V>;
    abstract class ImmutableMap <K, V> extends Document.Object implements Internal.Map<K, V>, Internal.Serializable {
        getOrDefault(arg0: any, arg1: V): V;
        computeIfAbsent(arg0: K, arg1: ((arg0: K) => V)): V;
        values(): Internal.ImmutableCollection<V>;
        values(): Internal.Collection<any>;
        replace(arg0: K, arg1: V): V;
        replace(arg0: K, arg1: V, arg2: V): boolean;
        replaceAll(arg0: ((arg0: K, arg1: V) => V)): void;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): V;
        remove(arg0: any, arg1: any): boolean;
        remove(arg0: any): V;
        compute(arg0: K, arg1: ((arg0: K, arg1: V) => V)): V;
        static toImmutableMap<T_, K_, V_>(arg0: ((arg0: T_) => K_), arg1: ((arg0: T_) => V_)): Internal.Collector<T_, any, Internal.ImmutableMap<K_, V_>>;
        static toImmutableMap<T_, K_, V_>(arg0: ((arg0: T_) => K_), arg1: ((arg0: T_) => V_), arg2: Internal.BinaryOperator<V_>): Internal.Collector<T_, any, Internal.ImmutableMap<K_, V_>>;
        hashCode(): number;
        putAll(arg0: Internal.Map_<K, V>): void;
        merge(arg0: K, arg1: V, arg2: ((arg0: V, arg1: V) => V)): V;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_): Internal.ImmutableMap<K_, V_>;
        static of<K_, V_>(): Internal.ImmutableMap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_): Internal.ImmutableMap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_): Internal.ImmutableMap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_, arg6: K_, arg7: V_): Internal.ImmutableMap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_, arg6: K_, arg7: V_, arg8: K_, arg9: V_): Internal.ImmutableMap<K_, V_>;
        get(arg0: any): V;
        static builder<K_, V_>(): Internal.ImmutableMap$Builder<K_, V_>;
        keySet(): Internal.ImmutableSet<K>;
        keySet(): Internal.Set<any>;
        entrySet(): Internal.Set<any>;
        entrySet(): Internal.ImmutableSet<Internal.Map$Entry<K, V>>;
        containsKey(arg0: any): boolean;
        isEmpty(): boolean;
        clear(): void;
        static copyOf<K_, V_>(arg0: Internal.Iterable<Internal.Map$Entry<K_, V_>>): Internal.ImmutableMap<K_, V_>;
        static copyOf<K_, V_>(arg0: Internal.Map_<K_, V_>): Internal.ImmutableMap<K_, V_>;
        asMultimap(): Internal.ImmutableSetMultimap<K, V>;
        computeIfPresent(arg0: K, arg1: ((arg0: K, arg1: V) => V)): V;
        equals(arg0: any): boolean;
        toString(): string;
        putIfAbsent(arg0: K, arg1: V): V;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ImmutableMap_<K, V> = ImmutableMap<K, V>;
    class PointOfInterestManager$Status extends Internal.Enum<Internal.PointOfInterestManager$Status> {
        static valueOf(arg0: string): Internal.PointOfInterestManager$Status;
        static values(): Internal.PointOfInterestManager$Status[];
        func_221035_a(): Internal.Predicate<Internal.PointOfInterest>;
        static readonly IS_OCCUPIED : Internal.PointOfInterestManager$Status;
        static readonly HAS_SPACE : Internal.PointOfInterestManager$Status;
        static readonly ANY : Internal.PointOfInterestManager$Status;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PointOfInterestManager$Status_ = "has_space" | "is_occupied" | "any" | PointOfInterestManager$Status;
    class Products$P14 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P14_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> = Products$P14<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>;
    interface Function5 <T1, T2, T3, T4, T5, R> {
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5): R;
        curry3(): Internal.Function3<T1, T2, T3, Internal.BiFunction<T4, T5, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function<T5, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function3<T3, T4, T5, R>>;
        curry(): Internal.Function<T1, Internal.Function4<T2, T3, T4, T5, R>>;
    }
    type Function5_<T1, T2, T3, T4, T5, R> = Function5<T1, T2, T3, T4, T5, R>;
    abstract class Type$TypeError extends Document.Object {
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Type$TypeError_ = Type$TypeError;
    abstract class LootEntry$Builder <T> extends Document.Object implements Internal.ILootConditionConsumer<T> {
        func_216081_b(): Internal.LootEntry;
        func_216080_a(arg0: Internal.LootEntry$Builder<any>): Internal.AlternativesLootEntry$Builder;
        func_212840_b_(arg0: (() => Internal.ILootCondition)): any;
        func_212840_b_(arg0: (() => Internal.ILootCondition)): T;
        func_212862_c_(): T;
        func_212862_c_(): any;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootEntry$Builder_<T> = LootEntry$Builder<T>;
    class ShaderInstance extends Document.Object implements Internal.IShaderManager, Internal.AutoCloseable {
        static func_216543_a(arg0: Internal.JsonObject): Internal.JSONBlendingMode;
        static func_216542_a(arg0: Internal.IResourceManager, arg1: Internal.ShaderLoader$ShaderType_, arg2: string): Internal.ShaderLoader;
        func_216544_e(): void;
        func_216537_a(arg0: string, arg1: (() => number)): void;
        func_216535_f(): void;
        func_147985_d(): void;
        func_216538_b(arg0: string): Internal.ShaderDefault;
        func_216539_a(arg0: string): Internal.ShaderUniform;
        func_147986_h(): number;
        func_147989_e(): Internal.ShaderLoader;
        close(): void;
        func_147994_f(): Internal.ShaderLoader;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShaderInstance_ = ShaderInstance;
    interface VertexBufferView {
        ensureBufferCapacity(arg0: number): boolean;
        flush(arg0: number, arg1: Internal.BufferVertexFormat): void;
        getWriterPosition(): number;
        getVertexFormat(): Internal.BufferVertexFormat;
        getDirectBuffer(): Internal.ByteBuffer;
    }
    type VertexBufferView_ = VertexBufferView;
    class StateContainer <O, S> extends Document.Object implements Internal.ICache {
        static func_241487_a_<S_, T_>(arg0: Internal.MapCodec<S_>, arg1: (() => S_), arg2: string, arg3: Internal.Property<T_>): Internal.MapCodec<S_>;
        func_177621_b(): S;
        func_177622_c(): O;
        func_177623_d(): Internal.Collection<Internal.Property<any>>;
        handler$zze000$getPropertyHeadInjected(arg0: string, arg1: Internal.CallbackInfoReturnable<any>): void;
        persistAndClearCache(): void;
        func_177619_a(): Internal.ImmutableList<S>;
        toString(): string;
        handler$zze000$initReturnInjected(arg0: ((arg0: any) => any), arg1: any, arg2: Internal.StateContainer$IFactory<any, any>, arg3: Internal.Map_<any, any>, arg4: Internal.CallbackInfo): void;
        func_185920_a(arg0: string): Internal.Property<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StateContainer_<O, S> = StateContainer<O, S>;
    class HopperTileEntity extends Internal.LockableLootTileEntity implements Internal.IHopper, Internal.ITickableTileEntity {
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_174914_o(): boolean;
        func_96108_aC(): number;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        getLastUpdateTime(): number;
        func_73660_a(): void;
        static func_145893_b(arg0: Internal.World, arg1: number, arg2: number, arg3: number): Internal.IInventory;
        static func_200115_c(arg0: Internal.IHopper): Internal.List<Internal.ItemEntity>;
        static func_145891_a(arg0: Internal.IHopper): boolean;
        func_70302_i_(): number;
        static func_200114_a(arg0: Internal.IInventory, arg1: Internal.ItemEntity): boolean;
        static func_174918_a(arg0: Internal.IInventory, arg1: Internal.IInventory, arg2: Internal.ItemStack, arg3: Internal.Direction_): Internal.ItemStack;
        func_200113_a(arg0: Internal.Entity): void;
        static func_145884_b(arg0: Internal.IHopper): Internal.IInventory;
        func_145896_c(arg0: number): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_96109_aB(): number;
        static func_195484_a(arg0: Internal.World, arg1: BlockPos): Internal.IInventory;
        func_96107_aA(): number;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        get lastUpdateTime(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type HopperTileEntity_ = HopperTileEntity;
    class Schema extends Document.Object {
        types(): Internal.Set<string>;
        getParent(): Internal.Schema;
        registerBlockEntities(arg0: Internal.Schema): Internal.Map<string, Internal.Supplier<Internal.TypeTemplate>>;
        registerSimple(arg0: Internal.Map_<string, Internal.Supplier_<Internal.TypeTemplate_>>, arg1: string): void;
        resolveTemplate(arg0: string): Internal.TypeTemplate;
        getTypeRaw(arg0: Internal.DSL$TypeReference): Internal.Type<any>;
        registerType(arg0: boolean, arg1: Internal.DSL$TypeReference, arg2: (() => Internal.TypeTemplate)): void;
        registerEntities(arg0: Internal.Schema): Internal.Map<string, Internal.Supplier<Internal.TypeTemplate>>;
        findChoiceType(arg0: Internal.DSL$TypeReference): Internal.TaggedChoice$TaggedChoiceType<any>;
        getVersionKey(): number;
        getType(arg0: Internal.DSL$TypeReference): Internal.Type<any>;
        registerTypes(arg0: Internal.Schema, arg1: Internal.Map_<string, Internal.Supplier_<Internal.TypeTemplate_>>, arg2: Internal.Map_<string, Internal.Supplier_<Internal.TypeTemplate_>>): void;
        id(arg0: string): Internal.TypeTemplate;
        getChoiceType(arg0: Internal.DSL$TypeReference, arg1: string): Internal.Type<any>;
        register(arg0: Internal.Map_<string, Internal.Supplier_<Internal.TypeTemplate_>>, arg1: string, arg2: (() => Internal.TypeTemplate)): void;
        register(arg0: Internal.Map_<string, Internal.Supplier_<Internal.TypeTemplate_>>, arg1: string, arg2: ((arg0: string) => Internal.TypeTemplate)): void;
        get parent(): Internal.Schema;
        get versionKey(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Schema_ = Schema;
    interface IIngredientFilter {
        setFilterText(arg0: string): void;
        getFilterText(): string;
        getFilteredIngredients(): Internal.ImmutableList<any>;
    }
    type IIngredientFilter_ = IIngredientFilter;
    abstract class VarHandle extends Document.Object implements Internal.Constable {
        toMethodHandle(arg0: Internal.VarHandle$AccessMode_): Internal.MethodHandle;
        coordinateTypes(): Internal.List<Internal.Class<any>>;
        weakCompareAndSetPlain(arg0: any[]): boolean;
        getVolatile(arg0: any[]): any;
        getAndBitwiseXor(arg0: any[]): any;
        static storeStoreFence(): void;
        compareAndExchange(arg0: any[]): any;
        static fullFence(): void;
        getAndSetRelease(arg0: any[]): any;
        getAcquire(arg0: any[]): any;
        getAndBitwiseAnd(arg0: any[]): any;
        accessModeType(arg0: Internal.VarHandle$AccessMode_): Internal.MethodType;
        getAndBitwiseOr(arg0: any[]): any;
        static acquireFence(): void;
        hasInvokeExactBehavior(): boolean;
        describeConstable(): Internal.Optional<Internal.VarHandle$VarHandleDesc>;
        getAndBitwiseOrRelease(arg0: any[]): any;
        getAndSetAcquire(arg0: any[]): any;
        getOpaque(arg0: any[]): any;
        varType(): Internal.Class<any>;
        getAndBitwiseXorAcquire(arg0: any[]): any;
        getAndBitwiseAndRelease(arg0: any[]): any;
        getAndBitwiseOrAcquire(arg0: any[]): any;
        setVolatile(arg0: any[]): void;
        get(arg0: any[]): any;
        static releaseFence(): void;
        getAndAdd(arg0: any[]): any;
        getAndSet(arg0: any[]): any;
        weakCompareAndSetAcquire(arg0: any[]): boolean;
        set(arg0: any[]): void;
        weakCompareAndSetRelease(arg0: any[]): boolean;
        weakCompareAndSet(arg0: any[]): boolean;
        static loadLoadFence(): void;
        getAndAddRelease(arg0: any[]): any;
        getAndAddAcquire(arg0: any[]): any;
        setOpaque(arg0: any[]): void;
        isAccessModeSupported(arg0: Internal.VarHandle$AccessMode_): boolean;
        compareAndExchangeRelease(arg0: any[]): any;
        compareAndSet(arg0: any[]): boolean;
        compareAndExchangeAcquire(arg0: any[]): any;
        getAndBitwiseXorRelease(arg0: any[]): any;
        withInvokeBehavior(): Internal.VarHandle;
        setRelease(arg0: any[]): void;
        toString(): string;
        withInvokeExactBehavior(): Internal.VarHandle;
        getAndBitwiseAndAcquire(arg0: any[]): any;
        set opaque(arg0: any[]);
        set release(arg0: any[]);
        set volatile(arg0: any[]);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type VarHandle_ = VarHandle;
    abstract class BlockStateProvider extends Document.Object {
        func_225574_a_(arg0: Internal.Random, arg1: BlockPos): Internal.BlockState;
        static readonly field_236796_a_ : Internal.Codec<Internal.BlockStateProvider>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockStateProvider_ = BlockStateProvider;
    class SalmonEntity extends Internal.AbstractGroupFishEntity {
        func_203704_dv(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SalmonEntity_ = SalmonEntity;
    class WriteBufferWaterMark extends Document.Object {
        high(): number;
        low(): number;
        toString(): string;
        static readonly DEFAULT : Internal.WriteBufferWaterMark;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WriteBufferWaterMark_ = WriteBufferWaterMark;
    interface IWorld extends Internal.IBiomeReader, Internal.IDayTimeReader {
        func_175649_E(arg0: BlockPos): Internal.DifficultyInstance;
        func_241851_ab(): number;
        func_234938_ad_(): number;
        func_195594_a(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_201674_k(): Internal.Random;
        func_72912_H(): Internal.IWorldInfo;
        func_230547_a_(arg0: BlockPos, arg1: Internal.Block): void;
        func_175659_aa(): Internal.Difficulty;
        func_205220_G_(): Internal.ITickList<Internal.Block>;
        func_184133_a(arg0: Internal.PlayerEntity, arg1: BlockPos, arg2: Internal.SoundEvent, arg3: Internal.SoundCategory_, arg4: number, arg5: number): void;
        func_217379_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_217378_a(arg0: Internal.PlayerEntity, arg1: number, arg2: BlockPos, arg3: number): void;
        func_72863_F(): Internal.AbstractChunkProvider;
        func_217354_b(arg0: number, arg1: number): boolean;
        func_205219_F_(): Internal.ITickList<Internal.Fluid>;
    }
    type IWorld_ = IWorld;
    class MutableBoundingBox extends Document.Object {
        static func_175899_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.MutableBoundingBox;
        func_78880_d(): number;
        func_175898_b(arg0: Vec3i): boolean;
        func_78882_c(): number;
        func_175896_b(): Vec3i;
        func_215127_b(arg0: number, arg1: number, arg2: number): Internal.MutableBoundingBox;
        func_78884_a(arg0: Internal.MutableBoundingBox): boolean;
        static func_175897_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: Internal.Direction_): Internal.MutableBoundingBox;
        func_78883_b(): number;
        func_78885_a(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        func_78886_a(arg0: number, arg1: number, arg2: number): void;
        static func_78887_a(): Internal.MutableBoundingBox;
        func_78888_b(arg0: Internal.MutableBoundingBox): void;
        func_151535_h(): Internal.IntArrayNBT;
        static func_236990_b_(): Internal.MutableBoundingBox;
        toString(): string;
        func_236989_a_(arg0: Vec3i): void;
        func_215126_f(): Vec3i;
        field_78895_b : number;
        field_78893_d : number;
        field_78897_a : number;
        field_78892_f : number;
        field_78896_c : number;
        field_78894_e : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MutableBoundingBox_ = MutableBoundingBox;
    interface Lock {
        lockInterruptibly(): void;
        unlock(): void;
        newCondition(): Internal.Condition;
        lock(): void;
        tryLock(): boolean;
        tryLock(arg0: number, arg1: Internal.TimeUnit_): boolean;
    }
    type Lock_ = Lock;
    interface RecipeFilter extends Internal.Predicate<Internal.RecipeJS> {
        test(arg0: Internal.RecipeJS): boolean;
        test(arg0: any): boolean;
    }
    type RecipeFilter_ = ((arg0: Internal.RecipeJS) => boolean) | RecipeFilter;
    class BiomeContainer extends Document.Object implements Internal.BiomeManager$IBiomeReader {
        func_225526_b_(biomeX: number, biomeY: number, biomeZ: number): Internal.Biome;
        func_227055_a_(): number[];
        static readonly field_227049_a_ : 1024;
        static readonly field_227051_c_ : 63;
        static readonly field_227050_b_ : 3;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BiomeContainer_ = BiomeContainer;
    class MutableUnit extends Internal.Unit {
        set(v: number): void;
        get(): number;
        append(sb: Internal.StringBuilder): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MutableUnit_ = MutableUnit;
    class SaveFormat extends Document.Object implements Internal.SaveFormatAccessor {
        func_197712_e(): java_.nio.file.Path;
        func_207742_d(arg0: string): boolean;
        invokeReadLevelData(arg0: Internal.File, arg1: ((arg0: any, arg1: any) => any)): any;
        func_237274_c_(arg0: string): Internal.SaveFormat$LevelSave;
        func_215781_c(): java_.nio.file.Path;
        func_75799_b(): Internal.List<Internal.WorldSummary>;
        static func_237269_a_(arg0: java_.nio.file.Path): Internal.SaveFormat;
        func_90033_f(arg0: string): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SaveFormat_ = SaveFormat;
    interface SuggestionProvider <S> {
        getSuggestions(arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
    }
    type SuggestionProvider_<S> = ((arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder) => Internal.CompletableFuture<Internal.Suggestions>) | SuggestionProvider<S>;
    class FastMap <Value> extends Document.Object {
        with<T_>(oldIndex: number, prop: Internal.Property<T_>, value: T_): Value;
        getKey(keyIndex: number): Internal.FastMapKey<any>;
        getValue(stateIndex: number, key: any): Internal.Comparable<any>;
        getValue<T_>(stateIndex: number, property: Internal.Property<T_>): T_;
        getIndexOf(state: Internal.Map_<Internal.Property_<any>, Internal.Comparable_<any>>): number;
        numProperties(): number;
        getPropertySet(): Internal.ImmutableSet<Internal.Property<any>>;
        withUnsafe<T_>(globalTableIndex: number, property: Internal.Property<T_>, newValue: any): Value;
        getEntry(propertyIndex: number, stateIndex: number): Internal.Map$Entry<Internal.Property<any>, Internal.Comparable<any>>;
        isSingleState(): boolean;
        get propertySet(): Internal.ImmutableSet<Internal.Property<any>>;
        get singleState(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FastMap_<Value> = FastMap<Value>;
    interface LootTablesKJS {
        applyKJS0(map: Internal.Map_<ResourceLocation_, Internal.JsonElement_>, action: ((arg0: ResourceLocation, arg1: Internal.JsonElement) => void)): void;
    }
    type LootTablesKJS_ = LootTablesKJS;
    class LootContext extends Document.Object {
        func_227501_a_(arg0: Internal.ILootCondition): boolean;
        getLootingModifier(): number;
        func_227503_b_(arg0: Internal.ILootCondition): void;
        func_227502_a_(arg0: ResourceLocation_): Internal.LootTable;
        getQueriedLootTableId(): ResourceLocation;
        func_216032_b(): Internal.Random;
        func_216031_c<T_>(arg0: Internal.LootParameter<T_>): T_;
        func_216033_a(arg0: Internal.LootParameter<any>): boolean;
        func_186490_b(arg0: Internal.LootTable): void;
        func_216034_a(arg0: ResourceLocation_, arg1: ((arg0: Internal.ItemStack) => void)): void;
        func_202879_g(): Internal.ServerWorld;
        setQueriedLootTableId(arg0: ResourceLocation_): void;
        func_186496_a(arg0: Internal.LootTable): boolean;
        func_186491_f(): number;
        func_227504_b_(arg0: ResourceLocation_): Internal.ILootCondition;
        get lootingModifier(): number;
        get queriedLootTableId(): ResourceLocation;
        set queriedLootTableId(arg0: ResourceLocation_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootContext_ = LootContext;
    abstract class StructBuffer <T, SELF> extends Internal.CustomBuffer<SELF> implements Internal.Iterable<T> {
        iterator(): Internal.Iterator<T>;
        sizeof(): number;
        spliterator(): Internal.Spliterator<T>;
        stream(): Internal.Stream<T>;
        forEach(arg0: ((arg0: T) => void)): void;
        get(arg0: number, arg1: T): SELF;
        get(arg0: T): SELF;
        get(arg0: number): T;
        get(): T;
        parallelStream(): Internal.Stream<T>;
        put(arg0: number, arg1: T): SELF;
        put(arg0: T): SELF;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructBuffer_<T, SELF> = StructBuffer<T, SELF>;
    /**
    */
    interface IngredientJS extends Internal.JsonSerializable, Internal.WrappedJS, Internal.Copyable {
        getItemIds(): Internal.Set<string>;
        anyStackMatches(ingredient: Internal.IngredientJS_): boolean;
        test(arg0: Internal.ItemStackJS_): boolean;
        testVanillaItem(item: Internal.Item): boolean;
        getStacks(): Internal.Set<Internal.ItemStackJS>;
        getVanillaItems(): Internal.Set<Internal.Item>;
        isEmpty(): boolean;
        isInvalidRecipeIngredient(): boolean;
        asIngredientStack(): Internal.IngredientStackJS;
        getVanillaPredicate(): Internal.Predicate<Internal.ItemStack>;
        filter(filter: Internal.IngredientJS_): Internal.IngredientJS;
        createVanillaIngredient(): Internal.Ingredient;
        toJson(): Internal.JsonElement;
        not(): Internal.IngredientJS;
        withCount(count: number): Internal.IngredientJS;
        unwrapStackIngredient(): Internal.List<Internal.IngredientJS>;
        getFirst(): Internal.ItemStackJS;
        testVanilla(stack: Internal.ItemStack): boolean;
        x(c: number): Internal.IngredientJS;
        copy(): Internal.IngredientJS;
        copy(): Internal.Copyable;
        getCount(): number;
    }
    type IngredientJS_ = string | object | Internal.ItemStackJS_ | ((arg0: Internal.ItemStackJS) => boolean) | IngredientJS;
    interface ISearchTree <T> {
        func_194038_a(arg0: string): Internal.List<T>;
    }
    type ISearchTree_<T> = ISearchTree<T>;
    interface IModIdHelper {
        isDisplayingModNameEnabled(): boolean;
        addModNameToIngredientTooltip<T>(arg0: Internal.List<Internal.ITextComponent>, arg1: T, arg2: Internal.IIngredientHelper<T>): Internal.List<Internal.ITextComponent>;
        getFormattedModNameForModId(arg0: string): string;
        getModNameForModId(arg0: string): string;
    }
    type IModIdHelper_ = IModIdHelper;
    class Matrix4f extends Document.Object implements Internal.Matrix4fExtended {
        multiplyBackward(arg0: Internal.Matrix4f): void;
        rotate(quaternion: Internal.Quaternion): void;
        translate(x: number, y: number, z: number): void;
        func_226600_c_(): boolean;
        static func_226593_a_(arg0: number, arg1: number, arg2: number): Internal.Matrix4f;
        static func_195876_a(arg0: number, arg1: number, arg2: number, arg3: number): Internal.Matrix4f;
        hashCode(): number;
        func_226591_a_(): void;
        func_226595_a_(arg0: Internal.Matrix4f): void;
        func_195879_b(buf: Internal.FloatBuffer): void;
        static func_195877_a(arg0: number, arg1: number, arg2: number, arg3: number): Internal.Matrix4f;
        func_226597_a_(arg0: Internal.Vector3f): void;
        func_226598_b_(): number;
        add(arg0: Internal.Matrix4f): void;
        set(arg0: Internal.Matrix4f): void;
        setTranslation(arg0: number, arg1: number, arg2: number): void;
        func_226601_d_(): Internal.Matrix4f;
        func_226602_e_(): void;
        func_226592_a_(arg0: number): void;
        equals(arg0: any): boolean;
        func_226596_a_(arg0: Internal.Quaternion): void;
        transformVecZ(x: number, y: number, z: number): number;
        toString(): string;
        transformVecY(x: number, y: number, z: number): number;
        transformVecX(x: number, y: number, z: number): number;
        static func_226599_b_(arg0: number, arg1: number, arg2: number): Internal.Matrix4f;
        field_226576_b_ : number;
        field_226590_p_ : number;
        field_226589_o_ : number;
        field_226575_a_ : number;
        field_226588_n_ : number;
        field_226579_e_ : number;
        field_226587_m_ : number;
        field_226578_d_ : number;
        field_226577_c_ : number;
        field_226584_j_ : number;
        field_226583_i_ : number;
        field_226585_k_ : number;
        field_226586_l_ : number;
        field_226580_f_ : number;
        field_226582_h_ : number;
        field_226581_g_ : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Matrix4f_ = Matrix4f;
    class Sound extends Document.Object implements Internal.ISoundEventAccessor<Internal.Sound> {
        func_188723_h(): boolean;
        func_188719_a(): ResourceLocation;
        func_148720_g(): any;
        func_148720_g(): Internal.Sound;
        func_204257_i(): boolean;
        func_188725_d(): number;
        func_188722_g(): Internal.Sound$Type;
        func_217867_a(arg0: Internal.SoundEngine): void;
        func_188721_b(): ResourceLocation;
        toString(): string;
        func_206255_j(): number;
        func_188724_c(): number;
        func_148721_a(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Sound_ = Sound;
    abstract class ForgeRegistryEntry <V> extends Document.Object implements Internal.IForgeRegistryEntry<V> {
        getRegistryType(): Internal.Class<V>;
        getRegistryName(): ResourceLocation;
        setRegistryName(arg0: string, arg1: string): V;
        setRegistryName(arg0: ResourceLocation_): V;
        setRegistryName(arg0: ResourceLocation_): any;
        setRegistryName(arg0: string): V;
        readonly delegate : Internal.IRegistryDelegate<V>;
        get registryType(): Internal.Class<V>;
        get registryName(): ResourceLocation;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ForgeRegistryEntry_<V> = ForgeRegistryEntry<V>;
    interface IForgeResourcePack {
        isHidden(): boolean;
    }
    type IForgeResourcePack_ = IForgeResourcePack;
    interface IScreenHandler <T> extends Internal.Function<T, Internal.IGuiProperties> {
        apply(arg0: T): Internal.IGuiProperties;
        apply(arg0: any): any;
    }
    type IScreenHandler_<T> = ((arg0: T) => Internal.IGuiProperties) | IScreenHandler<T>;
    interface IDrawableAnimated extends Internal.IDrawable {
    }
    type IDrawableAnimated_ = IDrawableAnimated;
    abstract class DelegatingDynamicOps <T> extends Document.Object implements Internal.DynamicOps<T> {
        createLong(arg0: number): T;
        createIntList(arg0: Internal.IntStream): T;
        listBuilder(): Internal.ListBuilder<T>;
        createDouble(arg0: number): T;
        createLongList(arg0: Internal.LongStream): T;
        createShort(arg0: number): T;
        mergeToList(arg0: T, arg1: Internal.List<T>): Internal.DataResult<T>;
        mergeToList(arg0: T, arg1: T): Internal.DataResult<T>;
        getByteBuffer(arg0: T): Internal.DataResult<Internal.ByteBuffer>;
        createByteList(arg0: Internal.ByteBuffer): T;
        remove(arg0: T, arg1: string): T;
        createBoolean(arg0: boolean): T;
        empty(): T;
        getMapValues(arg0: T): Internal.DataResult<Internal.Stream<com.mojang.datafixers.util.Pair<T, T>>>;
        mergeToMap(arg0: T, arg1: Internal.MapLike<T>): Internal.DataResult<T>;
        mergeToMap(arg0: T, arg1: T, arg2: T): Internal.DataResult<T>;
        getIntStream(arg0: T): Internal.DataResult<Internal.IntStream>;
        getList(arg0: T): Internal.DataResult<Internal.Consumer<Internal.Consumer<T>>>;
        getLongStream(arg0: T): Internal.DataResult<Internal.LongStream>;
        getMapEntries(arg0: T): Internal.DataResult<Internal.Consumer<Internal.BiConsumer<T, T>>>;
        getBooleanValue(arg0: T): Internal.DataResult<boolean>;
        getStream(arg0: T): Internal.DataResult<Internal.Stream<T>>;
        createNumeric(arg0: Internal.Number): T;
        getStringValue(arg0: T): Internal.DataResult<string>;
        createList(arg0: Internal.Stream<T>): T;
        createString(arg0: string): T;
        convertTo<U_>(arg0: Internal.DynamicOps<U_>, arg1: T): U_;
        createMap(arg0: Internal.Stream<com.mojang.datafixers.util.Pair<T, T>>): T;
        mapBuilder(): Internal.RecordBuilder<T>;
        getMap(arg0: T): Internal.DataResult<Internal.MapLike<T>>;
        createByte(arg0: number): T;
        createFloat(arg0: number): T;
        createInt(arg0: number): T;
        compressMaps(): boolean;
        getNumberValue(arg0: T): Internal.DataResult<Internal.Number>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DelegatingDynamicOps_<T> = DelegatingDynamicOps<T>;
    class PlainFlowerBlockStateProvider extends Internal.BlockStateProvider {
        func_225574_a_(arg0: Internal.Random, arg1: BlockPos): Internal.BlockState;
        static readonly field_236804_b_ : Internal.Codec<Internal.PlainFlowerBlockStateProvider>;
        static readonly field_236805_c_ : Internal.PlainFlowerBlockStateProvider;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlainFlowerBlockStateProvider_ = PlainFlowerBlockStateProvider;
    class MemoryStack extends Internal.Pointer$Default implements Internal.AutoCloseable {
        static stackASCIISafe(arg0: Internal.CharSequence): Internal.ByteBuffer;
        static stackASCIISafe(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        getPointerAddress(): number;
        static stackASCII(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        static stackASCII(arg0: Internal.CharSequence): Internal.ByteBuffer;
        static stackMallocLong(arg0: number): Internal.LongBuffer;
        static stackGet(): Internal.MemoryStack;
        ASCII(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        ASCII(arg0: Internal.CharSequence): Internal.ByteBuffer;
        static stackPop(): Internal.MemoryStack;
        static stackMallocDouble(arg0: number): Internal.DoubleBuffer;
        static stackBytes(arg0: number): Internal.ByteBuffer;
        static stackBytes(arg0: number, arg1: number): Internal.ByteBuffer;
        static stackBytes(arg0: number, arg1: number, arg2: number): Internal.ByteBuffer;
        static stackBytes(arg0: number[]): Internal.ByteBuffer;
        static stackBytes(arg0: number, arg1: number, arg2: number, arg3: number): Internal.ByteBuffer;
        static stackMallocPointer(arg0: number): Internal.PointerBuffer;
        static create(arg0: number): Internal.MemoryStack;
        static create(arg0: Internal.ByteBuffer): Internal.MemoryStack;
        static create(): Internal.MemoryStack;
        static stackLongs(arg0: number, arg1: number, arg2: number, arg3: number): Internal.LongBuffer;
        static stackLongs(arg0: number[]): Internal.LongBuffer;
        static stackLongs(arg0: number, arg1: number, arg2: number): Internal.LongBuffer;
        static stackLongs(arg0: number, arg1: number): Internal.LongBuffer;
        static stackLongs(arg0: number): Internal.LongBuffer;
        static stackDoubles(arg0: number, arg1: number, arg2: number, arg3: number): Internal.DoubleBuffer;
        static stackDoubles(arg0: number[]): Internal.DoubleBuffer;
        static stackDoubles(arg0: number): Internal.DoubleBuffer;
        static stackDoubles(arg0: number, arg1: number, arg2: number): Internal.DoubleBuffer;
        static stackDoubles(arg0: number, arg1: number): Internal.DoubleBuffer;
        mallocPointer(arg0: number): Internal.PointerBuffer;
        callocDouble(arg0: number): Internal.DoubleBuffer;
        pointers(arg0: number): Internal.PointerBuffer;
        pointers(arg0: number, arg1: number): Internal.PointerBuffer;
        pointers(arg0: number, arg1: number, arg2: number, arg3: number): Internal.PointerBuffer;
        pointers(arg0: Internal.Pointer, arg1: Internal.Pointer, arg2: Internal.Pointer): Internal.PointerBuffer;
        pointers(arg0: Internal.Buffer): Internal.PointerBuffer;
        pointers(arg0: Internal.Pointer[]): Internal.PointerBuffer;
        pointers(arg0: Internal.Pointer, arg1: Internal.Pointer, arg2: Internal.Pointer, arg3: Internal.Pointer): Internal.PointerBuffer;
        pointers(arg0: Internal.Pointer): Internal.PointerBuffer;
        pointers(arg0: Internal.Pointer, arg1: Internal.Pointer): Internal.PointerBuffer;
        pointers(arg0: number, arg1: number, arg2: number): Internal.PointerBuffer;
        pointers(arg0: number[]): Internal.PointerBuffer;
        pointers(arg0: Internal.Buffer[]): Internal.PointerBuffer;
        pointers(arg0: Internal.Buffer, arg1: Internal.Buffer, arg2: Internal.Buffer, arg3: Internal.Buffer): Internal.PointerBuffer;
        pointers(arg0: Internal.Buffer, arg1: Internal.Buffer, arg2: Internal.Buffer): Internal.PointerBuffer;
        pointers(arg0: Internal.Buffer, arg1: Internal.Buffer): Internal.PointerBuffer;
        static stackMallocFloat(arg0: number): Internal.FloatBuffer;
        callocPointer(arg0: number): Internal.PointerBuffer;
        nmalloc(arg0: number, arg1: number): number;
        nmalloc(arg0: number): number;
        static stackUTF16(arg0: Internal.CharSequence): Internal.ByteBuffer;
        static stackUTF16(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        callocInt(arg0: number): Internal.IntBuffer;
        floats(arg0: number): Internal.FloatBuffer;
        floats(arg0: number[]): Internal.FloatBuffer;
        floats(arg0: number, arg1: number, arg2: number): Internal.FloatBuffer;
        floats(arg0: number, arg1: number): Internal.FloatBuffer;
        floats(arg0: number, arg1: number, arg2: number, arg3: number): Internal.FloatBuffer;
        static stackMallocShort(arg0: number): Internal.ShortBuffer;
        setPointer(arg0: number): void;
        static stackMallocInt(arg0: number): Internal.IntBuffer;
        push(): Internal.MemoryStack;
        static stackCallocLong(arg0: number): Internal.LongBuffer;
        getFrameIndex(): number;
        nUTF16(arg0: Internal.CharSequence, arg1: boolean): number;
        doubles(arg0: number, arg1: number): Internal.DoubleBuffer;
        doubles(arg0: number): Internal.DoubleBuffer;
        doubles(arg0: number[]): Internal.DoubleBuffer;
        doubles(arg0: number, arg1: number, arg2: number, arg3: number): Internal.DoubleBuffer;
        doubles(arg0: number, arg1: number, arg2: number): Internal.DoubleBuffer;
        mallocFloat(arg0: number): Internal.FloatBuffer;
        UTF8(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        UTF8(arg0: Internal.CharSequence): Internal.ByteBuffer;
        nUTF16Safe(arg0: Internal.CharSequence, arg1: boolean): number;
        static stackCallocShort(arg0: number): Internal.ShortBuffer;
        callocFloat(arg0: number): Internal.FloatBuffer;
        static ncreate(arg0: number, arg1: number): Internal.MemoryStack;
        UTF16(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        UTF16(arg0: Internal.CharSequence): Internal.ByteBuffer;
        callocLong(arg0: number): Internal.LongBuffer;
        ASCIISafe(arg0: Internal.CharSequence): Internal.ByteBuffer;
        ASCIISafe(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        static stackPush(): Internal.MemoryStack;
        static stackMalloc(arg0: number): Internal.ByteBuffer;
        UTF8Safe(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        UTF8Safe(arg0: Internal.CharSequence): Internal.ByteBuffer;
        callocShort(arg0: number): Internal.ShortBuffer;
        static stackUTF8Safe(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        static stackUTF8Safe(arg0: Internal.CharSequence): Internal.ByteBuffer;
        static stackCalloc(arg0: number): Internal.ByteBuffer;
        ncalloc(arg0: number, arg1: number, arg2: number): number;
        nUTF8(arg0: Internal.CharSequence, arg1: boolean): number;
        nUTF8Safe(arg0: Internal.CharSequence, arg1: boolean): number;
        calloc(arg0: number, arg1: number): Internal.ByteBuffer;
        calloc(arg0: number): Internal.ByteBuffer;
        mallocInt(arg0: number): Internal.IntBuffer;
        static stackShorts(arg0: number, arg1: number): Internal.ShortBuffer;
        static stackShorts(arg0: number, arg1: number, arg2: number): Internal.ShortBuffer;
        static stackShorts(arg0: number, arg1: number, arg2: number, arg3: number): Internal.ShortBuffer;
        static stackShorts(arg0: number): Internal.ShortBuffer;
        static stackShorts(arg0: number[]): Internal.ShortBuffer;
        static stackCallocInt(arg0: number): Internal.IntBuffer;
        static stackCallocDouble(arg0: number): Internal.DoubleBuffer;
        mallocLong(arg0: number): Internal.LongBuffer;
        pop(): Internal.MemoryStack;
        static stackUTF16Safe(arg0: Internal.CharSequence): Internal.ByteBuffer;
        static stackUTF16Safe(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        longs(arg0: number[]): Internal.LongBuffer;
        longs(arg0: number, arg1: number): Internal.LongBuffer;
        longs(arg0: number): Internal.LongBuffer;
        longs(arg0: number, arg1: number, arg2: number, arg3: number): Internal.LongBuffer;
        longs(arg0: number, arg1: number, arg2: number): Internal.LongBuffer;
        UTF16Safe(arg0: Internal.CharSequence): Internal.ByteBuffer;
        UTF16Safe(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        ints(arg0: number, arg1: number, arg2: number): Internal.IntBuffer;
        ints(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IntBuffer;
        ints(arg0: number[]): Internal.IntBuffer;
        ints(arg0: number, arg1: number): Internal.IntBuffer;
        ints(arg0: number): Internal.IntBuffer;
        static stackPointers(arg0: Internal.Pointer, arg1: Internal.Pointer): Internal.PointerBuffer;
        static stackPointers(arg0: number, arg1: number, arg2: number, arg3: number): Internal.PointerBuffer;
        static stackPointers(arg0: number, arg1: number, arg2: number): Internal.PointerBuffer;
        static stackPointers(arg0: number, arg1: number): Internal.PointerBuffer;
        static stackPointers(arg0: number): Internal.PointerBuffer;
        static stackPointers(arg0: Internal.Pointer, arg1: Internal.Pointer, arg2: Internal.Pointer, arg3: Internal.Pointer): Internal.PointerBuffer;
        static stackPointers(arg0: Internal.Pointer): Internal.PointerBuffer;
        static stackPointers(arg0: Internal.Pointer[]): Internal.PointerBuffer;
        static stackPointers(arg0: number[]): Internal.PointerBuffer;
        static stackPointers(arg0: Internal.Pointer, arg1: Internal.Pointer, arg2: Internal.Pointer): Internal.PointerBuffer;
        static nstackCalloc(arg0: number, arg1: number, arg2: number): number;
        getAddress(): number;
        shorts(arg0: number, arg1: number, arg2: number, arg3: number): Internal.ShortBuffer;
        shorts(arg0: number, arg1: number, arg2: number): Internal.ShortBuffer;
        shorts(arg0: number): Internal.ShortBuffer;
        shorts(arg0: number[]): Internal.ShortBuffer;
        shorts(arg0: number, arg1: number): Internal.ShortBuffer;
        close(): void;
        nASCIISafe(arg0: Internal.CharSequence, arg1: boolean): number;
        malloc(arg0: number, arg1: number): Internal.ByteBuffer;
        malloc(arg0: number): Internal.ByteBuffer;
        mallocShort(arg0: number): Internal.ShortBuffer;
        static nstackMalloc(arg0: number): number;
        static nstackMalloc(arg0: number, arg1: number): number;
        static stackFloats(arg0: number, arg1: number, arg2: number): Internal.FloatBuffer;
        static stackFloats(arg0: number[]): Internal.FloatBuffer;
        static stackFloats(arg0: number, arg1: number): Internal.FloatBuffer;
        static stackFloats(arg0: number): Internal.FloatBuffer;
        static stackFloats(arg0: number, arg1: number, arg2: number, arg3: number): Internal.FloatBuffer;
        static stackCallocFloat(arg0: number): Internal.FloatBuffer;
        static stackUTF8(arg0: Internal.CharSequence): Internal.ByteBuffer;
        static stackUTF8(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        getPointer(): number;
        nASCII(arg0: Internal.CharSequence, arg1: boolean): number;
        getSize(): number;
        mallocDouble(arg0: number): Internal.DoubleBuffer;
        static stackInts(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IntBuffer;
        static stackInts(arg0: number, arg1: number, arg2: number): Internal.IntBuffer;
        static stackInts(arg0: number, arg1: number): Internal.IntBuffer;
        static stackInts(arg0: number[]): Internal.IntBuffer;
        static stackInts(arg0: number): Internal.IntBuffer;
        bytes(arg0: number, arg1: number, arg2: number): Internal.ByteBuffer;
        bytes(arg0: number[]): Internal.ByteBuffer;
        bytes(arg0: number, arg1: number, arg2: number, arg3: number): Internal.ByteBuffer;
        bytes(arg0: number): Internal.ByteBuffer;
        bytes(arg0: number, arg1: number): Internal.ByteBuffer;
        static stackCallocPointer(arg0: number): Internal.PointerBuffer;
        get pointerAddress(): number;
        get frameIndex(): number;
        get pointer(): number;
        get address(): number;
        get size(): number;
        set pointer(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MemoryStack_ = MemoryStack;
    class CLockDifficultyPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218776_b(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CLockDifficultyPacket_ = CLockDifficultyPacket;
    abstract class FlowersFeature <U> extends Internal.Feature<U> {
        func_225560_a_(arg0: U): number;
        func_241855_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos, arg4: U): boolean;
        func_225562_b_(arg0: Internal.Random, arg1: BlockPos, arg2: U): Internal.BlockState;
        func_225561_a_(arg0: Internal.Random, arg1: BlockPos, arg2: U): BlockPos;
        func_225559_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: U): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FlowersFeature_<U> = FlowersFeature<U>;
    class EntityViewRenderEvent$RenderFogEvent extends Internal.EntityViewRenderEvent$FogEvent {
        getListenerList(): Internal.ListenerList;
        getFarPlaneDistance(): number;
        getType(): Internal.FogRenderer$FogType;
        hasResult(): boolean;
        get farPlaneDistance(): number;
        get listenerList(): Internal.ListenerList;
        get type(): Internal.FogRenderer$FogType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityViewRenderEvent$RenderFogEvent_ = EntityViewRenderEvent$RenderFogEvent;
    class ChannelInboundHandlerAdapter extends Internal.ChannelHandlerAdapter implements Internal.ChannelInboundHandler {
        channelInactive(arg0: Internal.ChannelHandlerContext): void;
        channelUnregistered(arg0: Internal.ChannelHandlerContext): void;
        channelReadComplete(arg0: Internal.ChannelHandlerContext): void;
        channelActive(arg0: Internal.ChannelHandlerContext): void;
        exceptionCaught(arg0: Internal.ChannelHandlerContext, arg1: Internal.Throwable): void;
        userEventTriggered(arg0: Internal.ChannelHandlerContext, arg1: any): void;
        channelRegistered(arg0: Internal.ChannelHandlerContext): void;
        channelRead(arg0: Internal.ChannelHandlerContext, arg1: any): void;
        channelWritabilityChanged(arg0: Internal.ChannelHandlerContext): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChannelInboundHandlerAdapter_ = ChannelInboundHandlerAdapter;
    class SMerchantOffersPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_218734_e(): number;
        func_223477_g(): boolean;
        func_218735_f(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218732_b(): number;
        func_218731_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218733_c(): Internal.MerchantOffers;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SMerchantOffersPacket_ = SMerchantOffersPacket;
    class GolemLastSeenSensor extends Internal.Sensor<Internal.LivingEntity> {
        static func_242312_a(arg0: Internal.LivingEntity): void;
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        static func_242313_b(arg0: Internal.LivingEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GolemLastSeenSensor_ = GolemLastSeenSensor;
    abstract class AbstractRepairContainer extends Internal.Container {
        func_82848_d(): void;
        func_75130_a(arg0: Internal.IInventory): void;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractRepairContainer_ = AbstractRepairContainer;
    class AbstractBlock$OffsetType extends Internal.Enum<Internal.AbstractBlock$OffsetType> {
        static valueOf(arg0: string): Internal.AbstractBlock$OffsetType;
        static values(): Internal.AbstractBlock$OffsetType[];
        static readonly XZ : Internal.AbstractBlock$OffsetType;
        static readonly XYZ : Internal.AbstractBlock$OffsetType;
        static readonly NONE : Internal.AbstractBlock$OffsetType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractBlock$OffsetType_ = "none" | "xz" | "xyz" | AbstractBlock$OffsetType;
    interface ILootGenerator {
        func_216188_a(arg0: ((arg0: Internal.ItemStack) => void), arg1: Internal.LootContext): void;
        func_186361_a(arg0: number): number;
    }
    type ILootGenerator_ = ILootGenerator;
    class PhantomEntity extends Internal.FlyingEntity implements Internal.IMob {
        func_203034_a(arg0: number): void;
        func_70668_bt(): Internal.CreatureAttribute;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70071_h_(): void;
        func_70636_d(): void;
        func_70112_a(arg0: number): boolean;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_203032_dq(): number;
        func_184176_by(): Internal.SoundCategory;
        func_213358_a(arg0: Internal.EntityType<any>): boolean;
        func_213305_a(arg0: Internal.Pose_): Internal.EntitySize;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PhantomEntity_ = PhantomEntity;
    abstract class ContainerMinecartEntity extends Internal.AbstractMinecartEntity implements Internal.IInventory, Internal.INamedContainerProvider {
        func_184289_a(arg0: ResourceLocation_, arg1: number): void;
        func_70304_b(arg0: number): Internal.ItemStack;
        createMenu(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity): Internal.Container;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_174888_l(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        func_184288_f(arg0: Internal.PlayerEntity): void;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_174820_d(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        remove(arg0: boolean): void;
        changeDimension(arg0: Internal.ServerWorld, arg1: Internal.ITeleporter): Internal.Entity;
        func_191420_l(): boolean;
        func_94095_a(arg0: Internal.DamageSource): void;
        dropContentsWhenDead(arg0: boolean): void;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_70296_d(): void;
        func_184230_a(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ContainerMinecartEntity_ = ContainerMinecartEntity;
    class EnchantingTableTileEntity extends Internal.TileEntity implements Internal.INameable, Internal.ITickableTileEntity {
        func_200200_C_(): Internal.ITextComponent;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT): void;
        func_189515_b(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        func_200229_a(arg0: Internal.ITextComponent_): void;
        func_200201_e(): Internal.ITextComponent;
        func_73660_a(): void;
        field_195529_l : number;
        field_195524_g : number;
        field_195523_f : number;
        field_195526_i : number;
        field_195531_n : number;
        field_195525_h : number;
        field_195530_m : number;
        field_195522_a : number;
        field_195528_k : number;
        field_195527_j : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EnchantingTableTileEntity_ = EnchantingTableTileEntity;
    class AssetJsonGenerator extends Internal.JsonGenerator {
        multipartState(id: ResourceLocation_, consumer: ((arg0: Internal.MultipartBlockStateGenerator) => void)): void;
        blockState(id: ResourceLocation_, consumer: ((arg0: Internal.VariantBlockStateGenerator) => void)): void;
        blockModel(id: ResourceLocation_, consumer: ((arg0: Internal.ModelGenerator) => void)): void;
        itemModel(id: ResourceLocation_, consumer: ((arg0: Internal.ModelGenerator) => void)): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AssetJsonGenerator_ = AssetJsonGenerator;
    class PaintingSpriteUploader extends Internal.SpriteUploader {
        func_215286_b(): Internal.TextureAtlasSprite;
        func_215285_a(arg0: Internal.PaintingType): Internal.TextureAtlasSprite;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PaintingSpriteUploader_ = PaintingSpriteUploader;
    class Duration extends Document.Object implements Internal.TemporalAmount, Internal.Comparable<Internal.Duration>, Internal.Serializable {
        negated(): Internal.Duration;
        plusHours(arg0: number): Internal.Duration;
        isPositive(): boolean;
        compareTo(arg0: Internal.Duration): number;
        compareTo(arg0: any): number;
        multipliedBy(arg0: number): Internal.Duration;
        plusSeconds(arg0: number): Internal.Duration;
        toMillis(): number;
        static from(arg0: Internal.TemporalAmount): Internal.Duration;
        plusNanos(arg0: number): Internal.Duration;
        static ofMinutes(arg0: number): Internal.Duration;
        static between(arg0: Internal.Temporal, arg1: Internal.Temporal): Internal.Duration;
        static ofSeconds(arg0: number, arg1: number): Internal.Duration;
        static ofSeconds(arg0: number): Internal.Duration;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.Duration;
        minusNanos(arg0: number): Internal.Duration;
        getNano(): number;
        toMillisPart(): number;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Duration;
        plus(arg0: Internal.Duration): Internal.Duration;
        toMinutesPart(): number;
        toNanos(): number;
        toMinutes(): number;
        toHours(): number;
        plusMillis(arg0: number): Internal.Duration;
        subtractFrom(arg0: Internal.Temporal): Internal.Temporal;
        toSecondsPart(): number;
        static ofMillis(arg0: number): Internal.Duration;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Duration;
        minus(arg0: Internal.Duration): Internal.Duration;
        minusHours(arg0: number): Internal.Duration;
        withSeconds(arg0: number): Internal.Duration;
        minusMillis(arg0: number): Internal.Duration;
        plusMinutes(arg0: number): Internal.Duration;
        toSeconds(): number;
        dividedBy(arg0: number): Internal.Duration;
        dividedBy(arg0: Internal.Duration): number;
        minusMinutes(arg0: number): Internal.Duration;
        plusDays(arg0: number): Internal.Duration;
        hashCode(): number;
        static of(arg0: number, arg1: Internal.TemporalUnit): Internal.Duration;
        get(arg0: Internal.TemporalUnit): number;
        isZero(): boolean;
        toDays(): number;
        toNanosPart(): number;
        isNegative(): boolean;
        static ofDays(arg0: number): Internal.Duration;
        static parse(arg0: Internal.CharSequence): Internal.Duration;
        minusDays(arg0: number): Internal.Duration;
        toHoursPart(): number;
        toDaysPart(): number;
        static ofNanos(arg0: number): Internal.Duration;
        getSeconds(): number;
        abs(): Internal.Duration;
        static ofHours(arg0: number): Internal.Duration;
        withNanos(arg0: number): Internal.Duration;
        equals(arg0: any): boolean;
        getUnits(): Internal.List<Internal.TemporalUnit>;
        addTo(arg0: Internal.Temporal): Internal.Temporal;
        toString(): string;
        minusSeconds(arg0: number): Internal.Duration;
        static readonly ZERO : Internal.Duration;
        get zero(): boolean;
        get negative(): boolean;
        get seconds(): number;
        get nano(): number;
        get positive(): boolean;
        get units(): Internal.List<Internal.TemporalUnit>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Duration_ = Duration;
    class WeightedBlockStateProvider extends Internal.BlockStateProvider {
        func_225574_a_(arg0: Internal.Random, arg1: BlockPos): Internal.BlockState;
        func_227407_a_(arg0: Internal.BlockState, arg1: number): Internal.WeightedBlockStateProvider;
        static readonly field_236811_b_ : Internal.Codec<Internal.WeightedBlockStateProvider>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WeightedBlockStateProvider_ = WeightedBlockStateProvider;
    class CUseEntityPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_149565_c(): Internal.CUseEntityPacket$Action;
        func_149564_a(arg0: Internal.World): Internal.Entity;
        func_186994_b(): Hand;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_241792_e_(): boolean;
        func_179712_b(): Vec3;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CUseEntityPacket_ = CUseEntityPacket;
    abstract class AbstractChronology extends Document.Object implements Internal.Chronology {
        resolveDate(arg0: Internal.Map_<Internal.TemporalField_, number>, arg1: Internal.ResolverStyle_): Internal.ChronoLocalDate;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.Chronology): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractChronology_ = AbstractChronology;
    abstract class Struct extends Internal.Pointer$Default {
        sizeof(): number;
        isNull(arg0: number): boolean;
        clear(): void;
        free(): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Struct_ = Struct;
    interface IRecipeHelperPopulator {
        func_194018_a(arg0: Internal.RecipeItemHelper): void;
    }
    type IRecipeHelperPopulator_ = IRecipeHelperPopulator;
    class Agent extends Document.Object {
        getVersion(): number;
        getName(): string;
        toString(): string;
        static readonly SCROLLS : Internal.Agent;
        static readonly MINECRAFT : Internal.Agent;
        get name(): string;
        get version(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Agent_ = Agent;
    class TickEvent$Phase extends Internal.Enum<Internal.TickEvent$Phase> {
        static valueOf(arg0: string): Internal.TickEvent$Phase;
        static values(): Internal.TickEvent$Phase[];
        static readonly START : Internal.TickEvent$Phase;
        static readonly END : Internal.TickEvent$Phase;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TickEvent$Phase_ = "start" | "end" | TickEvent$Phase;
    interface Decoder$Boxed <A> {
        decoder(): Internal.Decoder<A>;
        decode<T>(arg0: Internal.Dynamic<T>): Internal.DataResult<com.mojang.datafixers.util.Pair<A, T>>;
    }
    type Decoder$Boxed_<A> = Decoder$Boxed<A>;
    class GuiScreenEvent$KeyboardCharTypedEvent extends Internal.GuiScreenEvent {
        getListenerList(): Internal.ListenerList;
        getCodePoint(): string;
        getModifiers(): number;
        get listenerList(): Internal.ListenerList;
        get modifiers(): number;
        get codePoint(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$KeyboardCharTypedEvent_ = GuiScreenEvent$KeyboardCharTypedEvent;
    class ServerStatusResponse extends Document.Object {
        invalidateJson(): void;
        func_151317_a(): Internal.ITextComponent;
        getForgeData(): Internal.FMLStatusPing;
        func_151316_d(): string;
        func_151319_a(arg0: Internal.ServerStatusResponse$Players): void;
        func_151318_b(): Internal.ServerStatusResponse$Players;
        func_151322_c(): Internal.ServerStatusResponse$Version;
        func_151315_a(arg0: Internal.ITextComponent_): void;
        func_151320_a(arg0: string): void;
        setForgeData(arg0: Internal.FMLStatusPing): void;
        getJson(): string;
        func_151321_a(arg0: Internal.ServerStatusResponse$Version): void;
        get json(): string;
        get forgeData(): Internal.FMLStatusPing;
        set forgeData(arg0: Internal.FMLStatusPing);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerStatusResponse_ = ServerStatusResponse;
    class DataResult$PartialResult <R> extends Document.Object {
        flatMap<R2_>(arg0: ((arg0: R) => Internal.DataResult$PartialResult<R2_>)): Internal.DataResult$PartialResult<R2_>;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        message(): string;
        map<R2_>(arg0: ((arg0: R) => R2_)): Internal.DataResult$PartialResult<R2_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DataResult$PartialResult_<R> = DataResult$PartialResult<R>;
    class AdvancementJS extends Document.Object {
        hasDisplay(): boolean;
        getChildren(): Internal.Set<Internal.AdvancementJS>;
        getParent(): Internal.AdvancementJS;
        getTitle(): Internal.Text;
        hashCode(): number;
        equals(o: any): boolean;
        getId(): ResourceLocation;
        toString(): string;
        id(): ResourceLocation;
        addChild(a: Internal.AdvancementJS): void;
        getDescription(): Internal.Text;
        getDisplayText(): Internal.Text;
        readonly advancement : Internal.Advancement;
        get parent(): Internal.AdvancementJS;
        get displayText(): Internal.Text;
        get children(): Internal.Set<Internal.AdvancementJS>;
        get description(): Internal.Text;
        get title(): Internal.Text;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AdvancementJS_ = AdvancementJS;
    class WorldgenAddEventJSForge extends Internal.WorldgenAddEventJS {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldgenAddEventJSForge_ = WorldgenAddEventJSForge;
    interface IResourcePack extends Internal.AutoCloseable, Internal.IForgeResourcePack {
        func_195762_a(): string;
        func_195761_a(arg0: Internal.ResourcePackType_, arg1: ResourceLocation_): Internal.InputStream;
        func_195760_a<T_>(arg0: Internal.IMetadataSectionSerializer<T_>): T_;
        func_225637_a_(arg0: Internal.ResourcePackType_, arg1: string, arg2: string, arg3: number, arg4: ((arg0: string) => boolean)): Internal.Collection<ResourceLocation>;
        func_195764_b(arg0: Internal.ResourcePackType_, arg1: ResourceLocation_): boolean;
        func_195763_b(arg0: string): Internal.InputStream;
        func_195759_a(arg0: Internal.ResourcePackType_): Internal.Set<string>;
        close(): void;
    }
    type IResourcePack_ = IResourcePack;
    class DifficultyInstance extends Document.Object {
        func_180170_c(): number;
        func_203095_a(): Internal.Difficulty;
        func_180168_b(): number;
        func_193845_a(arg0: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DifficultyInstance_ = DifficultyInstance;
    class RewriteResult <A, B> extends Document.Object {
        view(): Internal.View<A, B>;
        compose<C_>(arg0: Internal.RewriteResult<C_, A>): Internal.RewriteResult<C_, B>;
        hashCode(): number;
        equals(arg0: any): boolean;
        static create<A_, B_>(arg0: Internal.View<A_, B_>, arg1: Internal.BitSet): Internal.RewriteResult<A_, B_>;
        recData(): Internal.BitSet;
        toString(): string;
        static nop<A_>(arg0: Internal.Type<A_>): Internal.RewriteResult<A_, A_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RewriteResult_<A, B> = RewriteResult<A, B>;
    abstract class Rectangle2D extends Internal.RectangularShape {
        add(arg0: number, arg1: number): void;
        add(arg0: Internal.Rectangle2D): void;
        add(arg0: Internal.Point2D): void;
        static intersect(arg0: Internal.Rectangle2D, arg1: Internal.Rectangle2D, arg2: Internal.Rectangle2D): void;
        intersects(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        setRect(arg0: Internal.Rectangle2D): void;
        setRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
        static union(arg0: Internal.Rectangle2D, arg1: Internal.Rectangle2D, arg2: Internal.Rectangle2D): void;
        intersectsLine(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        intersectsLine(arg0: Internal.Line2D): boolean;
        contains(arg0: number, arg1: number): boolean;
        contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        getPathIterator(arg0: Internal.AffineTransform): Internal.PathIterator;
        getPathIterator(arg0: Internal.AffineTransform, arg1: number): Internal.PathIterator;
        setFrame(arg0: number, arg1: number, arg2: number, arg3: number): void;
        createUnion(arg0: Internal.Rectangle2D): Internal.Rectangle2D;
        hashCode(): number;
        outcode(arg0: number, arg1: number): number;
        outcode(arg0: Internal.Point2D): number;
        equals(arg0: any): boolean;
        getBounds2D(): Internal.Rectangle2D;
        createIntersection(arg0: Internal.Rectangle2D): Internal.Rectangle2D;
        static readonly OUT_TOP : 2;
        static readonly OUT_RIGHT : 4;
        static readonly OUT_BOTTOM : 8;
        static readonly OUT_LEFT : 1;
        get bounds2D(): Internal.Rectangle2D;
        set rect(arg0: Internal.Rectangle2D);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Rectangle2D_ = Rectangle2D;
    class Item$Properties extends Document.Object {
        func_200919_a(arg0: Internal.Item): Internal.Item$Properties;
        func_200918_c(arg0: number): Internal.Item$Properties;
        func_208103_a(arg0: Internal.Rarity_): Internal.Item$Properties;
        func_200917_a(arg0: number): Internal.Item$Properties;
        func_234689_a_(): Internal.Item$Properties;
        func_221540_a(arg0: Internal.Food): Internal.Item$Properties;
        func_200915_b(arg0: number): Internal.Item$Properties;
        func_200916_a(arg0: Internal.ItemGroup): Internal.Item$Properties;
        setNoRepair(): Internal.Item$Properties;
        addToolType(arg0: Internal.ToolType, arg1: number): Internal.Item$Properties;
        setISTER(arg0: (() => (() => Internal.ItemStackTileEntityRenderer))): Internal.Item$Properties;
        set iSTER(arg0: (() => (() => Internal.ItemStackTileEntityRenderer)));
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Item$Properties_ = Item$Properties;
    abstract class World extends Internal.CapabilityProvider<Internal.World> implements Internal.IWorld, Internal.AutoCloseable, Internal.IForgeWorld, Internal.ExtendedWorld, Internal.LevelKJS {
        func_175666_e(arg0: BlockPos, arg1: Internal.Block): void;
        func_225523_d_(): Internal.BiomeManager;
        func_72912_H(): Internal.IWorldInfo;
        func_72819_i(arg0: number): number;
        func_175647_a<T_>(arg0: Internal.Class_<T_>, arg1: Internal.AxisAlignedBB, arg2: ((arg0: T_) => boolean)): Internal.List<T_>;
        func_217404_b(arg0: Internal.IParticleData, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        func_72966_v(): void;
        func_184148_a(arg0: Internal.PlayerEntity, arg1: number, arg2: number, arg3: number, arg4: Internal.SoundEvent, arg5: Internal.SoundCategory_, arg6: number, arg7: number): void;
        func_217400_a(arg0: BlockPos, arg1: Internal.Entity): boolean;
        func_180502_D(arg0: BlockPos): boolean;
        func_175726_f(arg0: BlockPos): Internal.Chunk;
        func_82737_E(): number;
        func_234925_Z_(): boolean;
        func_72882_A(): void;
        func_92088_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.CompoundNBT): void;
        func_195593_d(arg0: BlockPos, arg1: Internal.Block): void;
        func_230315_m_(): Internal.DimensionType;
        func_184133_a(arg0: Internal.PlayerEntity, arg1: BlockPos, arg2: Internal.SoundEvent, arg3: Internal.SoundCategory_, arg4: number, arg5: number): void;
        func_201676_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_217393_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.BlockState): void;
        func_82736_K(): Internal.GameRules;
        func_234923_W_(): Internal.RegistryKey<Internal.World>;
        func_217395_y(): number;
        func_201674_k(): Internal.Random;
        func_175669_a(arg0: number, arg1: BlockPos, arg2: number): void;
        func_241211_a_(arg0: BlockPos, arg1: Internal.BlockState, arg2: number, arg3: number): boolean;
        func_175646_b(arg0: BlockPos, arg1: Internal.TileEntity): void;
        static func_217405_b(arg0: number): boolean;
        func_73046_m(): Internal.MinecraftServer;
        func_195590_a(arg0: Internal.IParticleData, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        func_72929_e(arg0: number): number;
        func_217383_a(arg0: number, arg1: number, arg2: number, arg3: number): BlockPos;
        close(): void;
        func_147442_i(arg0: number): void;
        func_73045_a(arg0: number): Internal.Entity;
        func_175649_E(arg0: BlockPos): Internal.DifficultyInstance;
        func_72827_u(): string;
        func_72891_a(arg0: boolean, arg1: boolean): void;
        func_175687_A(arg0: BlockPos): number;
        func_195594_a(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_175695_a(arg0: BlockPos, arg1: Internal.Block, arg2: Internal.Direction_): void;
        func_217390_a(arg0: ((arg0: Internal.Entity) => void), arg1: Internal.Entity): void;
        func_72914_a(arg0: Internal.CrashReport): Internal.CrashReportCategory;
        func_175713_t(arg0: BlockPos): void;
        func_184134_a(arg0: number, arg1: number, arg2: number, arg3: Internal.SoundEvent, arg4: Internal.SoundCategory_, arg5: number, arg6: number, arg7: boolean): void;
        func_217398_a(arg0: Internal.Entity, arg1: number, arg2: number, arg3: number, arg4: number, arg5: boolean, arg6: Internal.Explosion$Mode_): Internal.Explosion;
        func_226690_K_(): boolean;
        func_175676_y(arg0: BlockPos): number;
        func_217375_a(arg0: BlockPos, arg1: ((arg0: Internal.BlockState) => boolean)): boolean;
        func_184138_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.BlockState, arg3: number): void;
        func_205772_D(): Internal.ITagCollectionSupplier;
        func_217394_a<T_>(arg0: Internal.EntityType<T_>, arg1: Internal.AxisAlignedBB, arg2: ((arg0: T_) => boolean)): Internal.List<T_>;
        func_175660_a(arg0: Internal.PlayerEntity, arg1: BlockPos): boolean;
        func_225316_b<T_>(arg0: Internal.Class_<T_>, arg1: Internal.AxisAlignedBB, arg2: ((arg0: T_) => boolean)): Internal.List<T_>;
        func_225524_e_(): Internal.WorldLightManager;
        setCustomLightHandler(arg0: Internal.VariableBlockLightHandler): void;
        func_175641_c(arg0: BlockPos, arg1: Internal.Block, arg2: number, arg3: number): void;
        func_96441_U(): Internal.Scoreboard;
        markAndNotifyBlock(arg0: BlockPos, arg1: Internal.Chunk, arg2: Internal.BlockState, arg3: Internal.BlockState, arg4: number, arg5: number): void;
        func_217406_a(arg0: string): Internal.MapData;
        func_175690_a(arg0: BlockPos, arg1: Internal.TileEntity): void;
        func_217384_a(arg0: Internal.PlayerEntity, arg1: Internal.Entity, arg2: Internal.SoundEvent, arg3: Internal.SoundCategory_, arg4: number, arg5: number): void;
        func_195588_v(arg0: BlockPos): boolean;
        static func_175701_a(arg0: BlockPos): boolean;
        increaseMaxEntityRadius(arg0: number): number;
        getCustomLightHandler(): Internal.VariableBlockLightHandler;
        func_175709_b(arg0: BlockPos, arg1: Internal.Direction_): boolean;
        func_72820_D(): number;
        func_217391_K(): void;
        static func_189509_E(arg0: BlockPos): boolean;
        func_217402_u(): boolean;
        func_234924_Y_(): Internal.Supplier<Internal.IProfiler>;
        static func_234935_k_(arg0: BlockPos): boolean;
        func_181545_F(): number;
        func_175657_ab(): number;
        getMaxEntityRadius(): number;
        func_175656_a(arg0: BlockPos, arg1: Internal.BlockState): boolean;
        func_241212_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity, arg3: number): boolean;
        func_72896_J(): boolean;
        func_184135_a(arg0: Internal.IPacket<any>): void;
        func_217353_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus, arg3: boolean): Internal.IChunk;
        func_225522_c_(arg0: number, arg1: number): Internal.IBlockReader;
        func_72960_a(arg0: Internal.Entity, arg1: number): void;
        func_201670_d(): boolean;
        func_175727_C(arg0: BlockPos): boolean;
        func_225319_b(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.BlockState): void;
        func_217399_a(arg0: Internal.MapData): void;
        func_212866_a_(arg0: number, arg1: number): Internal.Chunk;
        func_212866_a_(arg0: number, arg1: number): Internal.IChunk;
        func_72911_I(): boolean;
        func_217381_Z(): Internal.IProfiler;
        func_195589_b(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_217385_a(arg0: Internal.Entity, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.Explosion$Mode_): Internal.Explosion;
        func_190524_a(arg0: BlockPos, arg1: Internal.Block, arg2: BlockPos): void;
        func_175640_z(arg0: BlockPos): boolean;
        func_175700_a(arg0: Internal.TileEntity): boolean;
        func_72894_k(arg0: number): void;
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
        func_199532_z(): Internal.RecipeManager;
        func_147448_a(arg0: Internal.Collection<Internal.TileEntity>): void;
        func_175674_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: ((arg0: Internal.Entity) => boolean)): Internal.List<Internal.Entity>;
        func_230546_a_(arg0: Internal.Entity, arg1: Internal.DamageSource, arg2: Internal.ExplosionContext, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: Internal.Explosion$Mode_): Internal.Explosion;
        func_175651_c(arg0: BlockPos, arg1: Internal.Direction_): number;
        func_234929_a_(arg0: BlockPos, arg1: Internal.Entity, arg2: Internal.Direction_): boolean;
        func_72867_j(arg0: number): number;
        func_225605_c_(arg0: number): void;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_180501_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: number): boolean;
        func_217377_a(arg0: BlockPos, arg1: boolean): boolean;
        func_175715_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_175723_af(): Internal.WorldBorder;
        func_72935_r(): boolean;
        restoringBlockSnapshots : boolean;
        static readonly field_234918_g_ : Internal.RegistryKey<Internal.World>;
        field_73004_o : number;
        field_73003_n : number;
        static readonly field_234917_f_ : Internal.Codec<Internal.RegistryKey<Internal.World>>;
        field_73018_p : number;
        field_73017_q : number;
        readonly field_73012_v : Internal.Random;
        static readonly field_234919_h_ : Internal.RegistryKey<Internal.World>;
        capturedBlockSnapshots : Internal.ArrayList<Internal.BlockSnapshot>;
        readonly field_147482_g : Internal.List<Internal.TileEntity>;
        readonly field_175730_i : Internal.List<Internal.TileEntity>;
        readonly field_72995_K : boolean;
        static readonly field_234920_i_ : Internal.RegistryKey<Internal.World>;
        captureBlockSnapshots : boolean;
        get customLightHandler(): Internal.VariableBlockLightHandler;
        get maxEntityRadius(): number;
        set customLightHandler(arg0: Internal.VariableBlockLightHandler);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type World_ = World;
    class GossipType extends Internal.Enum<Internal.GossipType> {
        static valueOf(arg0: string): Internal.GossipType;
        static func_220929_a(arg0: string): Internal.GossipType;
        static values(): Internal.GossipType[];
        static readonly MINOR_NEGATIVE : Internal.GossipType;
        readonly field_220933_i : number;
        readonly field_220934_j : number;
        static readonly MAJOR_NEGATIVE : Internal.GossipType;
        static readonly MAJOR_POSITIVE : Internal.GossipType;
        readonly field_220935_k : number;
        static readonly MINOR_POSITIVE : Internal.GossipType;
        static readonly TRADING : Internal.GossipType;
        readonly field_220931_g : string;
        readonly field_220932_h : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GossipType_ = "major_negative" | "minor_negative" | "minor_positive" | "major_positive" | "trading" | GossipType;
    class BlockRightClickEventJS extends Internal.PlayerEventJS {
        getBlock(): Internal.BlockContainerJS;
        getHand(): Hand;
        getItem(): Internal.ItemStackJS;
        getFacing(): Internal.Direction;
        getEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get item(): Internal.ItemStackJS;
        get facing(): Internal.Direction;
        get block(): Internal.BlockContainerJS;
        get entity(): Internal.EntityJS;
        get hand(): Hand;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockRightClickEventJS_ = BlockRightClickEventJS;
    abstract class AbstractList <E> extends Internal.AbstractCollection<E> implements Internal.List<E> {
        add(arg0: number, arg1: E): void;
        add(arg0: E): boolean;
        subList(arg0: number, arg1: number): Internal.List<E>;
        set(arg0: number, arg1: E): E;
        clear(): void;
        remove(arg0: number): E;
        lastIndexOf(arg0: any): number;
        iterator(): Internal.Iterator<E>;
        addAll(arg0: number, arg1: Internal.Collection<E>): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        get(arg0: number): E;
        listIterator(): Internal.ListIterator<E>;
        listIterator(arg0: number): Internal.ListIterator<E>;
        indexOf(arg0: any): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractList_<E> = AbstractList<E>;
    abstract class ItemGroup extends Document.Object {
        func_192394_m(): boolean;
        func_78023_l(): boolean;
        func_199783_b(arg0: string): Internal.ItemGroup;
        setBackgroundImage(arg0: ResourceLocation_): Internal.ItemGroup;
        func_111229_a(arg0: Internal.EnchantmentType[]): Internal.ItemGroup;
        func_111226_a(arg0: Internal.EnchantmentType_): boolean;
        func_78018_a(arg0: Internal.NonNullList<Internal.ItemStack>): void;
        func_78016_d(): Internal.ItemStack;
        getSlotColor(): number;
        func_78015_f(): string;
        func_111225_m(): Internal.EnchantmentType[];
        getTabsImage(): ResourceLocation;
        func_78019_g(): boolean;
        func_78017_i(): boolean;
        func_78014_h(): Internal.ItemGroup;
        getLabelColor(): number;
        getSearchbarWidth(): number;
        func_200300_c(): string;
        func_242392_c(): Internal.ITextComponent;
        static getGroupCountSafe(): number;
        hasSearchBar(): boolean;
        func_78021_a(): number;
        func_151244_d(): Internal.ItemStack;
        getBackgroundImage(): ResourceLocation;
        func_78020_k(): number;
        func_78022_j(): Internal.ItemGroup;
        func_78025_a(arg0: string): Internal.ItemGroup;
        getTabPage(): number;
        static readonly field_78028_d : Internal.ItemGroup;
        static readonly field_78026_f : Internal.ItemGroup;
        static readonly field_78029_e : Internal.ItemGroup;
        static readonly field_78027_g : Internal.ItemGroup;
        static readonly field_192395_m : Internal.ItemGroup;
        static readonly field_78040_i : Internal.ItemGroup;
        static readonly field_78039_h : Internal.ItemGroup;
        static readonly field_78037_j : Internal.ItemGroup;
        static readonly field_78035_l : Internal.ItemGroup;
        static readonly field_78038_k : Internal.ItemGroup;
        static readonly field_78036_m : Internal.ItemGroup;
        static readonly field_78031_c : Internal.ItemGroup;
        static field_78032_a : Internal.ItemGroup[];
        static readonly field_78030_b : Internal.ItemGroup;
        get tabsImage(): ResourceLocation;
        get slotColor(): number;
        get backgroundImage(): ResourceLocation;
        get tabPage(): number;
        get searchbarWidth(): number;
        get groupCountSafe(): number;
        get labelColor(): number;
        set backgroundImage(arg0: ResourceLocation_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemGroup_ = ItemGroup;
    class SimpleCommandExceptionType extends Document.Object implements Internal.CommandExceptionType {
        createWithContext(arg0: Internal.ImmutableStringReader): Internal.CommandSyntaxException;
        create(): Internal.CommandSyntaxException;
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SimpleCommandExceptionType_ = SimpleCommandExceptionType;
    class PlaySoundAtEntityEvent extends Internal.EntityEvent {
        getVolume(): number;
        getListenerList(): Internal.ListenerList;
        getPitch(): number;
        setCategory(arg0: Internal.SoundCategory_): void;
        getCategory(): Internal.SoundCategory;
        setPitch(arg0: number): void;
        setSound(arg0: Internal.SoundEvent): void;
        getDefaultVolume(): number;
        setVolume(arg0: number): void;
        isCancelable(): boolean;
        getDefaultPitch(): number;
        getSound(): Internal.SoundEvent;
        get volume(): number;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        get sound(): Internal.SoundEvent;
        get defaultPitch(): number;
        get pitch(): number;
        get defaultVolume(): number;
        get category(): Internal.SoundCategory;
        set volume(arg0: number);
        set sound(arg0: Internal.SoundEvent);
        set pitch(arg0: number);
        set category(arg0: Internal.SoundCategory_);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlaySoundAtEntityEvent_ = PlaySoundAtEntityEvent;
    class AccessibleObject extends Document.Object implements Internal.AnnotatedElement {
        trySetAccessible(): boolean;
        isAccessible(): boolean;
        static setAccessible(arg0: Internal.AccessibleObject[], arg1: boolean): void;
        setAccessible(arg0: boolean): void;
        getAnnotationsByType<T_>(arg0: Internal.Class_<T_>): T_[];
        getDeclaredAnnotationsByType<T_>(arg0: Internal.Class_<T_>): T_[];
        getAnnotation<T_>(arg0: Internal.Class_<T_>): T_;
        isAnnotationPresent(arg0: Internal.Class_<Internal.Annotation_>): boolean;
        canAccess(arg0: any): boolean;
        getDeclaredAnnotation<T_>(arg0: Internal.Class_<T_>): T_;
        getAnnotations(): Internal.Annotation[];
        getDeclaredAnnotations(): Internal.Annotation[];
        get accessible(): boolean;
        get declaredAnnotations(): Internal.Annotation[];
        get annotations(): Internal.Annotation[];
        set accessible(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AccessibleObject_ = AccessibleObject;
    interface Object2IntFunction <K> extends it.unimi.dsi.fastutil.Function<K, number>, Internal.ToIntFunction<K> {
        getInt(arg0: any): number;
        defaultReturnValue(): number;
        defaultReturnValue(arg0: number): void;
        applyAsInt(arg0: K): number;
        removeInt(arg0: any): number;
        get(arg0: any): any;
        get(arg0: any): number;
        put(arg0: any, arg1: any): any;
        put(arg0: K, arg1: number): number;
        put(arg0: K, arg1: number): number;
        remove(arg0: any): number;
        remove(arg0: any): any;
    }
    type Object2IntFunction_<K> = ((arg0: any) => number) | Object2IntFunction<K>;
    class MinecartEntity extends Internal.AbstractMinecartEntity {
        func_184264_v(): Internal.AbstractMinecartEntity$Type;
        func_96095_a(arg0: number, arg1: number, arg2: number, arg3: boolean): void;
        func_184230_a(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MinecartEntity_ = MinecartEntity;
    class CEditBookPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_210346_a(): Internal.ItemStack;
        func_210345_b(): boolean;
        func_244708_d(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CEditBookPacket_ = CEditBookPacket;
    abstract class TreeDecorator extends Document.Object {
        func_225576_a_(arg0: Internal.ISeedReader, arg1: Internal.Random, arg2: Internal.List<BlockPos>, arg3: Internal.List<BlockPos>, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox): void;
        static readonly field_236874_c_ : Internal.Codec<Internal.TreeDecorator>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TreeDecorator_ = TreeDecorator;
    class ClientWorld$ClientWorldInfo extends Document.Object implements Internal.ISpawnWorldInfo {
        func_239157_a_(arg0: boolean): void;
        func_82574_x(): Internal.GameRules;
        func_76079_c(): number;
        func_239158_b_(arg0: number): void;
        func_241860_d(): number;
        func_76061_m(): boolean;
        func_76087_c(arg0: number): void;
        func_76075_d(): number;
        func_76074_e(): number;
        func_76073_f(): number;
        func_176130_y(): Internal.Difficulty;
        func_76056_b(arg0: number): void;
        func_76058_a(arg0: number): void;
        func_239159_f_(): number;
        func_76084_b(arg0: boolean): void;
        func_241859_a(arg0: number): void;
        func_176143_a(arg0: BlockPos, arg1: number): void;
        func_176123_z(): boolean;
        func_239156_a_(arg0: Internal.Difficulty_): void;
        func_239155_a_(arg0: number): void;
        func_82573_f(): number;
        func_76059_o(): boolean;
        func_239160_g_(): number;
        func_85118_a(arg0: Internal.CrashReportCategory): void;
        func_76093_s(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientWorld$ClientWorldInfo_ = ClientWorld$ClientWorldInfo;
    class MinecraftProfileTexture$Type extends Internal.Enum<Internal.MinecraftProfileTexture$Type> {
        static valueOf(arg0: string): Internal.MinecraftProfileTexture$Type;
        static values(): Internal.MinecraftProfileTexture$Type[];
        static readonly ELYTRA : Internal.MinecraftProfileTexture$Type;
        static readonly SKIN : Internal.MinecraftProfileTexture$Type;
        static readonly CAPE : Internal.MinecraftProfileTexture$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MinecraftProfileTexture$Type_ = "skin" | "cape" | "elytra" | MinecraftProfileTexture$Type;
    class TwoFeatureChoiceConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_227286_b_ : (() => Internal.ConfiguredFeature<any, any>);
        static readonly field_236579_a_ : Internal.Codec<Internal.TwoFeatureChoiceConfig>;
        readonly field_227285_a_ : (() => Internal.ConfiguredFeature<any, any>);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TwoFeatureChoiceConfig_ = TwoFeatureChoiceConfig;
    abstract class LootEventJS extends Internal.EventJS {
        modify(id: ResourceLocation_, b: ((arg0: Internal.LootBuilder) => void)): void;
        removeAll(): void;
        getType(): string;
        getDirectory(): string;
        addJson(id: ResourceLocation_, json: Internal.JsonObject): void;
        get type(): string;
        get directory(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LootEventJS_ = LootEventJS;
    class CoderResult extends Document.Object {
        static malformedForLength(arg0: number): Internal.CoderResult;
        isMalformed(): boolean;
        isError(): boolean;
        static unmappableForLength(arg0: number): Internal.CoderResult;
        isOverflow(): boolean;
        isUnmappable(): boolean;
        isUnderflow(): boolean;
        length(): number;
        toString(): string;
        throwException(): void;
        static readonly OVERFLOW : Internal.CoderResult;
        static readonly UNDERFLOW : Internal.CoderResult;
        get underflow(): boolean;
        get overflow(): boolean;
        get error(): boolean;
        get unmappable(): boolean;
        get malformed(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CoderResult_ = CoderResult;
    class ScriptFileInfo extends Document.Object {
        getPackMode(): string;
        getProperty(s: string, def: string): string;
        getPriority(): number;
        isIgnored(): boolean;
        preload(source: ((arg0: Internal.ScriptFileInfo) => Internal.InputStream)): Internal.Throwable;
        readonly file : string;
        readonly location : string;
        readonly id : ResourceLocation;
        readonly pack : Internal.ScriptPackInfo;
        get ignored(): boolean;
        get packMode(): string;
        get priority(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScriptFileInfo_ = ScriptFileInfo;
    interface IGuiEventListener {
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_231046_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231044_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212927_b(arg0: number, arg1: number): void;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231049_c__(arg0: boolean): boolean;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_231047_b_(arg0: number, arg1: number): boolean;
        func_231048_c_(arg0: number, arg1: number, arg2: number): boolean;
    }
    type IGuiEventListener_ = IGuiEventListener;
    interface CommandExceptionType {
    }
    type CommandExceptionType_ = CommandExceptionType;
    class Products$P9 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Products$P9_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9> = Products$P9<F, T1, T2, T3, T4, T5, T6, T7, T8, T9>;
    class PlantType extends Document.Object {
        getName(): string;
        static get(arg0: string): Internal.PlantType;
        static readonly BEACH : Internal.PlantType;
        static readonly CAVE : Internal.PlantType;
        static readonly NETHER : Internal.PlantType;
        static readonly PLAINS : Internal.PlantType;
        static readonly DESERT : Internal.PlantType;
        static readonly WATER : Internal.PlantType;
        static readonly CROP : Internal.PlantType;
        get name(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlantType_ = PlantType;
    class ArgumentCommandNode <S, T> extends Internal.CommandNode<S> {
        getName(): string;
        listSuggestions(arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        createBuilder(): Internal.ArgumentBuilder<any, any>;
        createBuilder(): Internal.RequiredArgumentBuilder<S, Internal.CommandNode<S>>;
        getType(): Internal.ArgumentType<Internal.CommandNode<S>>;
        isValidInput(arg0: string): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        getExamples(): Internal.Collection<string>;
        getUsageText(): string;
        toString(): string;
        getCustomSuggestions(): Internal.SuggestionProvider<S>;
        parse(arg0: Internal.StringReader, arg1: Internal.CommandContextBuilder<S>): void;
        get customSuggestions(): Internal.SuggestionProvider<S>;
        get examples(): Internal.Collection<string>;
        get name(): string;
        get usageText(): string;
        get type(): Internal.ArgumentType<Internal.CommandNode<S>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ArgumentCommandNode_<S, T> = ArgumentCommandNode<S, T>;
    class Exception extends Internal.Throwable {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Exception_ = Exception;
    class ZoneOffset extends Internal.ZoneId implements Internal.TemporalAccessor, Internal.TemporalAdjuster, Internal.Comparable<Internal.ZoneOffset>, Internal.Serializable {
        getTotalSeconds(): number;
        static ofHoursMinutes(arg0: number, arg1: number): Internal.ZoneOffset;
        normalized(): Internal.ZoneId;
        query<R_>(arg0: ((arg0: Internal.TemporalAccessor) => R_)): R_;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        getId(): string;
        isSupported(arg0: Internal.TemporalField): boolean;
        compareTo(arg0: Internal.ZoneOffset): number;
        compareTo(arg0: any): number;
        getLong(arg0: Internal.TemporalField): number;
        static ofHours(arg0: number): Internal.ZoneOffset;
        hashCode(): number;
        static of(arg0: string): Internal.ZoneOffset;
        equals(arg0: any): boolean;
        get(arg0: Internal.TemporalField): number;
        static from(arg0: Internal.TemporalAccessor): Internal.ZoneOffset;
        toString(): string;
        getRules(): Internal.ZoneRules;
        static ofHoursMinutesSeconds(arg0: number, arg1: number, arg2: number): Internal.ZoneOffset;
        static ofTotalSeconds(arg0: number): Internal.ZoneOffset;
        static readonly MIN : Internal.ZoneOffset;
        static readonly UTC : Internal.ZoneOffset;
        static readonly MAX : Internal.ZoneOffset;
        get totalSeconds(): number;
        get rules(): Internal.ZoneRules;
        get id(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ZoneOffset_ = ZoneOffset;
    interface PublicKey extends Internal.Key {
    }
    type PublicKey_ = PublicKey;
    class EntityDataManager$DataEntry <T> extends Document.Object {
        func_187210_a(arg0: T): void;
        func_187209_c(): boolean;
        func_187206_b(): T;
        func_187208_a(arg0: boolean): void;
        func_187205_a(): Internal.DataParameter<T>;
        func_192735_d(): Internal.EntityDataManager$DataEntry<T>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityDataManager$DataEntry_<T> = EntityDataManager$DataEntry<T>;
    class GameRules$BooleanValue extends Internal.GameRules$RuleValue<Internal.GameRules$BooleanValue> implements Internal.GameRulesAccessor$BooleanValue, Internal.GameRulesAccessor$BooleanValueSimple {
        func_223557_c(): number;
        func_230313_a_(arg0: Internal.GameRules$BooleanValue, arg1: Internal.MinecraftServer): void;
        func_230313_a_(arg0: Internal.GameRules$RuleValue<any>, arg1: Internal.MinecraftServer): void;
        static invokeCreateArchitectury_$md$cf0726$0(arg0: boolean, arg1: ((arg0: any, arg1: any) => void)): Internal.GameRules$RuleType<any>;
        static invokeCreateArchitectury_$md$cf0726$1(arg0: boolean): Internal.GameRules$RuleType<any>;
        func_223570_a(arg0: boolean, arg1: Internal.MinecraftServer): void;
        func_223552_b(): string;
        func_223572_a(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameRules$BooleanValue_ = GameRules$BooleanValue;
    class PathType extends Internal.Enum<Internal.PathType> {
        static valueOf(arg0: string): Internal.PathType;
        static values(): Internal.PathType[];
        static readonly LAND : Internal.PathType;
        static readonly AIR : Internal.PathType;
        static readonly WATER : Internal.PathType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PathType_ = "land" | "water" | "air" | PathType;
    class ScoreObjective extends Document.Object {
        func_199866_a(arg0: Internal.ScoreCriteria$RenderType_): void;
        func_96680_c(): Internal.ScoreCriteria;
        func_96682_a(): Internal.Scoreboard;
        func_199864_a(arg0: Internal.ITextComponent_): void;
        func_96678_d(): Internal.ITextComponent;
        func_197890_e(): Internal.ITextComponent;
        func_199865_f(): Internal.ScoreCriteria$RenderType;
        func_96679_b(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ScoreObjective_ = ScoreObjective;
    interface Long2ObjectSortedMap <V> extends Internal.Long2ObjectMap<V>, Internal.SortedMap<number, V> {
        long2ObjectEntrySet(): Internal.ObjectSet<any>;
        long2ObjectEntrySet(): Internal.ObjectSortedSet<Internal.Long2ObjectMap$Entry<V>>;
        comparator(): Internal.LongComparator;
        comparator(): Internal.Comparator;
        firstLongKey(): number;
        entrySet(): Internal.ObjectSortedSet<Internal.Map$Entry<number, V>>;
        entrySet(): Internal.ObjectSet<any>;
        entrySet(): Internal.Set<any>;
        firstKey(): any;
        firstKey(): number;
        subMap(arg0: number, arg1: number): Internal.Long2ObjectSortedMap<V>;
        subMap(arg0: number, arg1: number): Internal.Long2ObjectSortedMap<V>;
        subMap(arg0: any, arg1: any): Internal.SortedMap<any, any>;
        values(): Internal.ObjectCollection<V>;
        values(): Internal.Collection<any>;
        lastKey(): number;
        lastKey(): any;
        lastLongKey(): number;
        headMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        headMap(arg0: any): Internal.SortedMap<any, any>;
        headMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        keySet(): Internal.Set<any>;
        keySet(): Internal.LongSortedSet;
        keySet(): Internal.LongSet;
        tailMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        tailMap(arg0: any): Internal.SortedMap<any, any>;
        tailMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
    }
    type Long2ObjectSortedMap_<V> = Long2ObjectSortedMap<V>;
    interface LongSortedSet extends Internal.LongSet, Internal.SortedSet<number>, Internal.LongBidirectionalIterable {
        tailSet(arg0: number): Internal.LongSortedSet;
        tailSet(arg0: number): Internal.LongSortedSet;
        tailSet(arg0: any): Internal.SortedSet<any>;
        comparator(): Internal.Comparator;
        comparator(): Internal.LongComparator;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.LongIterator;
        iterator(): Internal.LongBidirectionalIterator;
        iterator(arg0: number): Internal.LongBidirectionalIterator;
        last(): number;
        last(): any;
        headSet(arg0: number): Internal.LongSortedSet;
        headSet(arg0: any): Internal.SortedSet<any>;
        headSet(arg0: number): Internal.LongSortedSet;
        firstLong(): number;
        subSet(arg0: any, arg1: any): Internal.SortedSet<any>;
        subSet(arg0: number, arg1: number): Internal.LongSortedSet;
        subSet(arg0: number, arg1: number): Internal.LongSortedSet;
        lastLong(): number;
        first(): any;
        first(): number;
    }
    type LongSortedSet_ = LongSortedSet;
    class RenderLayer extends Internal.Enum<Internal.RenderLayer> {
        static valueOf(arg0: string): Internal.RenderLayer;
        static fromRenderType(arg0: Internal.RenderType): Internal.RenderLayer;
        static values(): Internal.RenderLayer[];
        static readonly CUTOUT : Internal.RenderLayer;
        static readonly SOLID : Internal.RenderLayer;
        static readonly TRANSPARENT : Internal.RenderLayer;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderLayer_ = "solid" | "cutout" | "transparent" | RenderLayer;
    abstract class ForwardingObject extends Document.Object {
        toString(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ForwardingObject_ = ForwardingObject;
    class BlockPlaceEventJS extends Internal.EntityEventJS {
        getBlock(): Internal.BlockContainerJS;
        getWorld(): Internal.WorldJS;
        getEntity(): Internal.EntityJS;
        canCancel(): boolean;
        get world(): Internal.WorldJS;
        get block(): Internal.BlockContainerJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockPlaceEventJS_ = BlockPlaceEventJS;
    abstract class PathNavigator extends Document.Object {
        func_75499_g(): void;
        func_189566_q(): Internal.NodeProcessor;
        func_179680_a(arg0: BlockPos, arg1: number): Internal.Path;
        func_75501_e(): void;
        func_75500_f(): boolean;
        func_212239_d(arg0: boolean): void;
        func_220970_c(arg0: BlockPos): void;
        func_75505_d(): Internal.Path;
        func_241390_a_(arg0: Internal.Set<BlockPos>, arg1: number): Internal.Path;
        func_225466_a(arg0: number, arg1: number, arg2: number, arg3: number): Internal.Path;
        func_226337_n_(): boolean;
        func_225463_a(arg0: Internal.Stream<BlockPos>, arg1: number): Internal.Path;
        func_188554_j(): void;
        func_75492_a(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        func_75484_a(arg0: Internal.Path, arg1: number): boolean;
        func_188553_i(): boolean;
        func_212238_t(): boolean;
        func_75494_a(arg0: Internal.Entity, arg1: number): Internal.Path;
        func_75497_a(arg0: Internal.Entity, arg1: number): boolean;
        func_226335_a_(arg0: number): void;
        func_226336_g_(): void;
        func_244428_t(): boolean;
        func_188555_b(arg0: BlockPos): boolean;
        func_208485_j(): BlockPos;
        func_75489_a(arg0: number): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PathNavigator_ = PathNavigator;
    class LivingSpawnEvent extends Internal.LivingEvent {
        getX(): number;
        getWorld(): Internal.IWorld;
        getListenerList(): Internal.ListenerList;
        getY(): number;
        getZ(): number;
        get world(): Internal.IWorld;
        get listenerList(): Internal.ListenerList;
        get x(): number;
        get y(): number;
        get z(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingSpawnEvent_ = LivingSpawnEvent;
    class ChunkRenderData extends Document.Object {
        getMesh(pass: Internal.BlockRenderPass_): Internal.ChunkMeshData;
        getOcclusionData(): Internal.SetVisibility;
        setMesh(pass: Internal.BlockRenderPass_, data: Internal.ChunkMeshData): void;
        getAnimatedSprites(): Internal.List<Internal.TextureAtlasSprite>;
        isEmpty(): boolean;
        getGlobalBlockEntities(): Internal.Collection<Internal.TileEntity>;
        getMeshSize(): number;
        getBlockEntities(): Internal.Collection<Internal.TileEntity>;
        copyAndReplaceMesh(replacements: Internal.Map_<Internal.BlockRenderPass_, Internal.ChunkMeshData_>): Internal.ChunkRenderData;
        getFacesWithData(): number;
        getBounds(): Internal.ChunkRenderBounds;
        static readonly ABSENT : Internal.ChunkRenderData;
        static readonly EMPTY : Internal.ChunkRenderData;
        get occlusionData(): Internal.SetVisibility;
        get globalBlockEntities(): Internal.Collection<Internal.TileEntity>;
        get bounds(): Internal.ChunkRenderBounds;
        get animatedSprites(): Internal.List<Internal.TextureAtlasSprite>;
        get facesWithData(): number;
        get meshSize(): number;
        get blockEntities(): Internal.Collection<Internal.TileEntity>;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChunkRenderData_ = ChunkRenderData;
    class EnderChestTileEntity extends Internal.TileEntity implements Internal.IChestLid, Internal.ITickableTileEntity {
        func_145842_c(arg0: number, arg1: number): boolean;
        func_145843_s(): void;
        func_145969_a(): void;
        func_195480_a(arg0: number): number;
        func_73660_a(): void;
        func_145970_b(): void;
        func_145971_a(arg0: Internal.PlayerEntity): boolean;
        field_145972_a : number;
        field_145975_i : number;
        field_145973_j : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EnderChestTileEntity_ = EnderChestTileEntity;
    class Ingredient extends Document.Object implements Internal.Predicate<Internal.ItemStack>, Internal.IngredientKJS {
        test(arg0: any): boolean;
        test(arg0: Internal.ItemStack): boolean;
        func_199564_a(arg0: Internal.PacketBuffer): void;
        static func_199802_a(arg0: Internal.JsonElement): Internal.Ingredient;
        static func_199803_a(arg0: Internal.JsonObject): Internal.Ingredient$IItemList;
        func_193365_a(): Internal.ItemStack[];
        isVanilla(): boolean;
        static func_193369_a(arg0: Internal.ItemStack[]): Internal.Ingredient;
        static func_199804_a(arg0: Internal.IItemProvider[]): Internal.Ingredient;
        static func_199805_a(arg0: Internal.ITag<Internal.Item>): Internal.Ingredient;
        func_200304_c(): Internal.JsonElement;
        func_194139_b(): Internal.IntList;
        static func_209357_a(arg0: Internal.Stream<Internal.Ingredient$IItemList>): Internal.Ingredient;
        func_203189_d(): boolean;
        getSerializer(): Internal.IIngredientSerializer<Internal.Ingredient>;
        static invalidateAll(): void;
        static merge(arg0: Internal.Collection<Internal.Ingredient>): Internal.Ingredient;
        static func_234819_a_(arg0: Internal.Stream<Internal.ItemStack>): Internal.Ingredient;
        isSimple(): boolean;
        static func_199566_b(arg0: Internal.PacketBuffer): Internal.Ingredient;
        getItemsKJS(): Internal.ItemStack[];
        static readonly field_193370_a : Internal.Ingredient;
        get serializer(): Internal.IIngredientSerializer<Internal.Ingredient>;
        get itemsKJS(): Internal.ItemStack[];
        get simple(): boolean;
        get vanilla(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Ingredient_ = Ingredient;
    interface IForgeEffectInstance {
        renderInventoryEffect(arg0: Internal.DisplayEffectsScreen<any>, arg1: Internal.MatrixStack, arg2: number, arg3: number, arg4: number): void;
        shouldRenderHUD(): boolean;
        writeCurativeItems(arg0: Internal.CompoundNBT): void;
        getEffectInstance(): Internal.EffectInstance;
        setCurativeItems(arg0: Internal.List<Internal.ItemStack>): void;
        addCurativeItem(arg0: Internal.ItemStack): void;
        shouldRenderInvText(): boolean;
        shouldRender(): boolean;
        isCurativeItem(arg0: Internal.ItemStack): boolean;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        renderHUDEffect(arg0: Internal.AbstractGui, arg1: Internal.MatrixStack, arg2: number, arg3: number, arg4: number, arg5: number): void;
    }
    type IForgeEffectInstance_ = IForgeEffectInstance;
    class SoundCategory extends Internal.Enum<Internal.SoundCategory> {
        static valueOf(arg0: string): Internal.SoundCategory;
        static values(): Internal.SoundCategory[];
        func_187948_a(): string;
        static readonly RECORDS : Internal.SoundCategory;
        static readonly MUSIC : Internal.SoundCategory;
        static readonly MASTER : Internal.SoundCategory;
        static readonly HOSTILE : Internal.SoundCategory;
        static readonly PLAYERS : Internal.SoundCategory;
        static readonly VOICE : Internal.SoundCategory;
        static readonly WEATHER : Internal.SoundCategory;
        static readonly BLOCKS : Internal.SoundCategory;
        static readonly AMBIENT : Internal.SoundCategory;
        static readonly NEUTRAL : Internal.SoundCategory;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SoundCategory_ = "master" | "music" | "records" | "weather" | "blocks" | "hostile" | "neutral" | "players" | "ambient" | "voice" | SoundCategory;
    class WitherSkullEntity extends Internal.DamagingProjectileEntity {
        func_70027_ad(): boolean;
        func_70067_L(): boolean;
        func_180428_a(arg0: Internal.Explosion, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.FluidState, arg5: number): number;
        func_82342_d(): boolean;
        func_82343_e(arg0: boolean): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WitherSkullEntity_ = WitherSkullEntity;
    class MoodSoundAmbience extends Document.Object {
        func_235039_d_(): number;
        func_235032_a_(): Internal.SoundEvent;
        func_235037_c_(): number;
        func_235035_b_(): number;
        static readonly field_235027_b_ : Internal.MoodSoundAmbience;
        static readonly field_235026_a_ : Internal.Codec<Internal.MoodSoundAmbience>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type MoodSoundAmbience_ = MoodSoundAmbience;
    class DataPackEventJS extends Internal.ServerEventJS {
        add(id: ResourceLocation_, content: string): void;
        addJson(id: ResourceLocation_, json: any): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DataPackEventJS_ = DataPackEventJS;
    class File extends Document.Object implements Internal.Serializable, Internal.Comparable<Internal.File> {
        getUsableSpace(): number;
        static listRoots(): Internal.File[];
        renameTo(arg0: Internal.File): boolean;
        getName(): string;
        setExecutable(arg0: boolean, arg1: boolean): boolean;
        setExecutable(arg0: boolean): boolean;
        canRead(): boolean;
        getCanonicalFile(): Internal.File;
        compareTo(arg0: Internal.File): number;
        compareTo(arg0: any): number;
        delete(): boolean;
        setReadable(arg0: boolean, arg1: boolean): boolean;
        setReadable(arg0: boolean): boolean;
        getTotalSpace(): number;
        hashCode(): number;
        getParentFile(): Internal.File;
        getPath(): string;
        getAbsoluteFile(): Internal.File;
        listFiles(arg0: ((arg0: Internal.File) => boolean)): Internal.File[];
        listFiles(arg0: ((arg0: Internal.File, arg1: string) => boolean)): Internal.File[];
        listFiles(): Internal.File[];
        mkdir(): boolean;
        deleteOnExit(): void;
        canExecute(): boolean;
        getCanonicalPath(): string;
        toURL(): Internal.URL;
        getParent(): string;
        setWritable(arg0: boolean): boolean;
        setWritable(arg0: boolean, arg1: boolean): boolean;
        isFile(): boolean;
        getAbsolutePath(): string;
        toURI(): Internal.URI;
        getFreeSpace(): number;
        length(): number;
        canWrite(): boolean;
        static createTempFile(arg0: string, arg1: string): Internal.File;
        static createTempFile(arg0: string, arg1: string, arg2: Internal.File): Internal.File;
        list(): string[];
        list(arg0: ((arg0: Internal.File, arg1: string) => boolean)): string[];
        isHidden(): boolean;
        toPath(): java_.nio.file.Path;
        mkdirs(): boolean;
        equals(arg0: any): boolean;
        exists(): boolean;
        isAbsolute(): boolean;
        toString(): string;
        lastModified(): number;
        createNewFile(): boolean;
        setLastModified(arg0: number): boolean;
        isDirectory(): boolean;
        setReadOnly(): boolean;
        static readonly pathSeparator : ";";
        static readonly pathSeparatorChar : ";";
        static readonly separatorChar : "\\";
        static readonly separator : "\\";
        get parent(): string;
        get parentFile(): Internal.File;
        get hidden(): boolean;
        get freeSpace(): number;
        get usableSpace(): number;
        get totalSpace(): number;
        get canonicalFile(): Internal.File;
        get directory(): boolean;
        get path(): string;
        get absoluteFile(): Internal.File;
        get file(): boolean;
        get absolute(): boolean;
        get name(): string;
        get canonicalPath(): string;
        get absolutePath(): string;
        set readable(arg0: boolean);
        set executable(arg0: boolean);
        set writable(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type File_ = File;
    interface PlayerContainerAccessor {
        getCraftResult(): Internal.CraftResultInventory;
        getCraftMatrix(): Internal.CraftingInventory;
    }
    type PlayerContainerAccessor_ = PlayerContainerAccessor;
    interface ITaskExecutor <Msg> extends Internal.AutoCloseable {
        func_213141_a<Source_>(arg0: ((arg0: Internal.ITaskExecutor<Source_>) => Msg)): Internal.CompletableFuture<Source_>;
        func_213142_bd(): string;
        func_212871_a_(arg0: Msg): void;
        func_233528_c_<Source_>(arg0: ((arg0: Internal.ITaskExecutor<Internal.Either<Source_, Internal.Exception>>) => Msg)): Internal.CompletableFuture<Source_>;
        close(): void;
    }
    type ITaskExecutor_<Msg> = ITaskExecutor<Msg>;
    class EpollEventLoopGroup extends Internal.MultithreadEventLoopGroup {
        setIoRatio(arg0: number): void;
        set ioRatio(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EpollEventLoopGroup_ = EpollEventLoopGroup;
    class ShipwreckConfig extends Document.Object implements Internal.IFeatureConfig {
        readonly field_204753_a : boolean;
        static readonly field_236634_a_ : Internal.Codec<Internal.ShipwreckConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShipwreckConfig_ = ShipwreckConfig;
    class LivingEvent$LivingVisibilityEvent extends Internal.LivingEvent {
        getLookingEntity(): Internal.Entity;
        getListenerList(): Internal.ListenerList;
        getVisibilityModifier(): number;
        modifyVisibility(arg0: number): void;
        get visibilityModifier(): number;
        get listenerList(): Internal.ListenerList;
        get lookingEntity(): Internal.Entity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingEvent$LivingVisibilityEvent_ = LivingEvent$LivingVisibilityEvent;
    class SCooldownPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186922_b(): number;
        func_186920_a(): Internal.Item;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SCooldownPacket_ = SCooldownPacket;
    class EntityRayTraceResult extends Internal.RayTraceResult {
        func_216348_a(): Internal.Entity;
        func_216346_c(): Internal.RayTraceResult$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EntityRayTraceResult_ = EntityRayTraceResult;
    interface Decoder$Simple <A> {
        decoder(): Internal.Decoder<A>;
        decode<T>(arg0: Internal.Dynamic<T>): Internal.DataResult<A>;
    }
    type Decoder$Simple_<A> = Decoder$Simple<A>;
    interface ExtendedVertexFormat {
        embeddium$getExtendedElements(): any[];
    }
    type ExtendedVertexFormat_ = ExtendedVertexFormat;
    interface PrimitiveIterator$OfDouble extends Internal.PrimitiveIterator<number, Internal.DoubleConsumer> {
        next(): any;
        next(): number;
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
        forEachRemaining(arg0: ((arg0: number) => void)): void;
        nextDouble(): number;
    }
    type PrimitiveIterator$OfDouble_ = PrimitiveIterator$OfDouble;
    class ServerEventJS extends Internal.EventJS {
        getServer(): Internal.ServerJS;
        get server(): Internal.ServerJS;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ServerEventJS_ = ServerEventJS;
    class Biome$Climate extends Document.Object {
        field_242462_d : Internal.Biome$TemperatureModifier;
        field_242461_c : number;
        static readonly field_242459_a : Internal.MapCodec<Internal.Biome$Climate>;
        field_242463_e : number;
        field_242460_b : Internal.Biome$RainType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Biome$Climate_ = Biome$Climate;
    interface ICloudRenderHandler {
        render(arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft, arg5: number, arg6: number, arg7: number): void;
    }
    type ICloudRenderHandler_ = ((arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft, arg5: number, arg6: number, arg7: number) => void) | ICloudRenderHandler;
    class SUnloadChunkPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186941_b(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_186940_a(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SUnloadChunkPacket_ = SUnloadChunkPacket;
    abstract class AbstractHorseEntity extends Internal.AnimalEntity implements Internal.IInventoryChangedListener, Internal.IJumpingMount, Internal.IEquipable {
        func_184779_b(arg0: Internal.UUID): void;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        func_110215_cj(): number;
        func_174820_d(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70071_h_(): void;
        func_230268_c_(arg0: Internal.LivingEntity): Vec3;
        func_184179_bs(): Internal.Entity;
        func_110205_ce(): boolean;
        func_184232_k(arg0: Internal.Entity): void;
        func_110209_cd(): boolean;
        func_230266_a_(arg0: Internal.SoundCategory_): void;
        func_184775_b(arg0: number): void;
        func_110201_q(arg0: number): number;
        func_70641_bl(): number;
        func_110199_f(arg0: Internal.PlayerEntity): void;
        func_241395_b_(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack): Internal.ActionResultType;
        func_110246_bZ(): boolean;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_70103_a(arg0: number): void;
        func_110255_k(arg0: boolean): void;
        func_184780_dh(): Internal.UUID;
        func_110234_j(arg0: boolean): void;
        func_110226_cD(): void;
        func_230277_fr_(): boolean;
        func_110238_s(arg0: number): void;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_110219_q(arg0: boolean): void;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_110248_bS(): boolean;
        func_110263_g(arg0: Internal.PlayerEntity): boolean;
        func_70617_f_(): boolean;
        func_70104_M(): boolean;
        func_110198_t(arg0: number): number;
        func_82171_bF(): boolean;
        func_230264_L__(): boolean;
        func_110242_l(arg0: boolean): void;
        func_213352_e(arg0: Vec3): void;
        func_110223_p(arg0: number): number;
        func_184776_b(): boolean;
        func_110227_p(arg0: boolean): void;
        func_110252_cg(): number;
        func_70636_d(): void;
        func_110206_u(arg0: number): void;
        func_190684_dE(): boolean;
        func_190676_dC(): number;
        func_230276_fq_(): boolean;
        func_76316_a(arg0: Internal.IInventory): void;
        func_190682_f(arg0: Internal.ItemStack): boolean;
        func_184777_r_(): void;
        func_110204_cc(): boolean;
        static func_234237_fg_(): Internal.AttributeModifierMap$MutableAttribute;
        func_110258_o(arg0: number): number;
        func_110257_ck(): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_70878_b(arg0: Internal.AnimalEntity): boolean;
        func_70627_aG(): number;
        func_190687_dF(): void;
        field_110278_bp : number;
        field_110279_bq : number;
        field_110296_bG : Internal.Inventory;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractHorseEntity_ = AbstractHorseEntity;
    class BlockLootEventJS extends Internal.LootEventJS {
        addSimpleBlock(blocks: Internal.BlockStatePredicate): void;
        addSimpleBlock(blocks: Internal.BlockStatePredicate, item: Internal.ItemStack): void;
        build(blocks: Internal.BlockStatePredicate, b: ((arg0: Internal.LootBuilder) => void)): void;
        getType(): string;
        addBlock(blocks: Internal.BlockStatePredicate, b: ((arg0: Internal.LootBuilder) => void)): void;
        getDirectory(): string;
        modifyBlock(blocks: Internal.BlockStatePredicate, b: ((arg0: Internal.LootBuilder) => void)): void;
        get type(): string;
        get directory(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockLootEventJS_ = BlockLootEventJS;
    class GameProfile extends Document.Object {
        getName(): string;
        isLegacy(): boolean;
        hashCode(): number;
        getProperties(): Internal.PropertyMap;
        equals(arg0: any): boolean;
        getId(): Internal.UUID;
        toString(): string;
        isComplete(): boolean;
        get legacy(): boolean;
        get name(): string;
        get id(): Internal.UUID;
        get complete(): boolean;
        get properties(): Internal.PropertyMap;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GameProfile_ = GameProfile;
    interface ITextProperties {
        func_230439_a_<T>(arg0: Internal.ITextProperties$IStyledTextAcceptor<T>, arg1: Internal.Style): Internal.Optional<T>;
        func_230438_a_<T>(arg0: Internal.ITextProperties$ITextAcceptor<T>): Internal.Optional<T>;
        getString(): string;
    }
    type ITextProperties_ = ITextProperties;
    class SPlayerPositionLookPacket$Flags extends Internal.Enum<Internal.SPlayerPositionLookPacket$Flags> {
        static valueOf(arg0: string): Internal.SPlayerPositionLookPacket$Flags;
        static values(): Internal.SPlayerPositionLookPacket$Flags[];
        static func_187040_a(arg0: Internal.Set<Internal.SPlayerPositionLookPacket$Flags>): number;
        static func_187044_a(arg0: number): Internal.Set<Internal.SPlayerPositionLookPacket$Flags>;
        static readonly Y_ROT : Internal.SPlayerPositionLookPacket$Flags;
        static readonly X_ROT : Internal.SPlayerPositionLookPacket$Flags;
        static readonly X : Internal.SPlayerPositionLookPacket$Flags;
        static readonly Y : Internal.SPlayerPositionLookPacket$Flags;
        static readonly Z : Internal.SPlayerPositionLookPacket$Flags;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SPlayerPositionLookPacket$Flags_ = "x" | "y" | "z" | "y_rot" | "x_rot" | SPlayerPositionLookPacket$Flags;
    class BatEntity extends Internal.AmbientEntity {
        func_82235_h(): boolean;
        func_70104_M(): boolean;
        static func_223369_b(arg0: Internal.EntityType<Internal.BatEntity>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        static func_234175_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70071_h_(): void;
        func_184639_G(): Internal.SoundEvent;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_82236_f(arg0: boolean): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_145773_az(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BatEntity_ = BatEntity;
    class BlockBuilder extends Internal.BuilderBase {
        suffocating(b: boolean): Internal.BlockBuilder;
        noItem(): Internal.BlockBuilder;
        waterlogged(): Internal.BlockBuilder;
        color(index: number, c: number): Internal.BlockBuilder;
        textureAll(tex: string): Internal.BlockBuilder;
        getBuilderType(): string;
        tagBlockAndItem(tag: string): Internal.BlockBuilder;
        box(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number, scale16: boolean): Internal.BlockBuilder;
        box(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number): Internal.BlockBuilder;
        viewBlocking(b: boolean): Internal.BlockBuilder;
        type(t: Internal.BlockType): Internal.BlockBuilder;
        transparent(b: boolean): Internal.BlockBuilder;
        fullBlock(f: boolean): Internal.BlockBuilder;
        createProperties(): Internal.AbstractBlock$Properties;
        notSolid(): Internal.BlockBuilder;
        noCollission(): Internal.BlockBuilder;
        unbreakable(): Internal.BlockBuilder;
        requiresTool(f: boolean): Internal.BlockBuilder;
        model(m: string): Internal.BlockBuilder;
        tag(tag: string): Internal.BlockBuilder;
        renderType(l: string): Internal.BlockBuilder;
        jumpFactor(f: number): Internal.BlockBuilder;
        createShape(): Internal.VoxelShape;
        defaultCutout(): Internal.BlockBuilder;
        item(i: ((arg0: Internal.BlockItemBuilder) => void)): Internal.BlockBuilder;
        opaque(o: boolean): Internal.BlockBuilder;
        randomTick(randomTickCallback: ((arg0: Internal.RandomTickCallbackJS) => void)): Internal.BlockBuilder;
        texture(tex: string): Internal.BlockBuilder;
        texture(id: string, tex: string): Internal.BlockBuilder;
        noDrops(): Internal.BlockBuilder;
        speedFactor(f: number): Internal.BlockBuilder;
        noValidSpawns(b: boolean): Internal.BlockBuilder;
        resistance(r: number): Internal.BlockBuilder;
        lightLevel(light: number): Internal.BlockBuilder;
        hardness(h: number): Internal.BlockBuilder;
        defaultTranslucent(): Internal.BlockBuilder;
        material(m: Internal.MaterialJS): Internal.BlockBuilder;
        shapeCube(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number): Internal.BlockBuilder;
        slipperiness(f: number): Internal.BlockBuilder;
        redstoneConductor(b: boolean): Internal.BlockBuilder;
        harvestTool(tool: ToolType, level: number): Internal.BlockBuilder;
        textureSide(direction: Internal.Direction_, tex: string): Internal.BlockBuilder;
        readonly textures : Internal.JsonObject;
        defaultTags : Internal.Set<string>;
        static current : Internal.BlockBuilder;
        lootTable : ((arg0: Internal.LootBuilder) => void);
        modelJson : Internal.JsonObject;
        blockstateJson : Internal.JsonObject;
        block : Internal.Block;
        customShape : Internal.List<Internal.AxisAlignedBB>;
        itemBuilder : Internal.BlockItemBuilder;
        harvestLevel : number;
        randomTickCallback : ((arg0: Internal.RandomTickCallbackJS) => void);
        get builderType(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockBuilder_ = BlockBuilder;
    interface IRecipeSerializer <T> extends Internal.IForgeRegistryEntry<Internal.IRecipeSerializer<any>> {
        func_199425_a_(arg0: ResourceLocation_, arg1: Internal.JsonObject): T;
        func_199426_a_(arg0: ResourceLocation_, arg1: Internal.PacketBuffer): T;
        func_199427_a_(arg0: Internal.PacketBuffer, arg1: T): void;
    }
    type IRecipeSerializer_<T> = IRecipeSerializer<T>;
    class BlockIDPredicate extends Document.Object implements Internal.BlockPredicate {
        getBlockProperties(): Internal.List<Internal.BlockIDPredicate$PropertyObject>;
        with(key: string, value: string): Internal.BlockIDPredicate;
        checkState(state: Internal.BlockState): boolean;
        toString(): string;
        check(b: Internal.BlockContainerJS): boolean;
        getBlockState(): Internal.BlockState;
        get blockState(): Internal.BlockState;
        get blockProperties(): Internal.List<Internal.BlockIDPredicate$PropertyObject>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BlockIDPredicate_ = BlockIDPredicate;
    class TopSolidWithNoiseConfig extends Document.Object implements Internal.IPlacementConfig {
        readonly field_204630_a : number;
        readonly field_204631_b : number;
        readonly field_214727_c : number;
        static readonly field_236978_a_ : Internal.Codec<Internal.TopSolidWithNoiseConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TopSolidWithNoiseConfig_ = TopSolidWithNoiseConfig;
    interface VoxelShapePart$IFaceConsumer {
        consume(arg0: Internal.Direction_, arg1: number, arg2: number, arg3: number): void;
    }
    type VoxelShapePart$IFaceConsumer_ = VoxelShapePart$IFaceConsumer;
    abstract class ShoulderRidingEntity extends Internal.TameableEntity {
        func_213439_d(arg0: Internal.ServerPlayerEntity): boolean;
        func_70071_h_(): void;
        func_191995_du(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ShoulderRidingEntity_ = ShoulderRidingEntity;
    class ResolverStyle extends Internal.Enum<Internal.ResolverStyle> {
        static valueOf(arg0: string): Internal.ResolverStyle;
        static values(): Internal.ResolverStyle[];
        static readonly STRICT : Internal.ResolverStyle;
        static readonly LENIENT : Internal.ResolverStyle;
        static readonly SMART : Internal.ResolverStyle;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ResolverStyle_ = "strict" | "smart" | "lenient" | ResolverStyle;
    class StructureDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_223454_a(arg0: Internal.MutableBoundingBox, arg1: Internal.List<Internal.MutableBoundingBox>, arg2: Internal.List<boolean>, arg3: Internal.DimensionType): void;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureDebugRenderer_ = StructureDebugRenderer;
    class CommandStorage extends Document.Object {
        func_227488_a_(arg0: ResourceLocation_): Internal.CompoundNBT;
        func_227489_a_(arg0: ResourceLocation_, arg1: Internal.CompoundNBT): void;
        func_227484_a_(): Internal.Stream<ResourceLocation>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CommandStorage_ = CommandStorage;
    interface BufferVertexFormat {
        getStride(): number;
    }
    type BufferVertexFormat_ = BufferVertexFormat;
    class CountingMap extends Document.Object {
        add(key: any, value: number): number;
        getSize(): number;
        set(key: any, value: number): number;
        getValues(): Internal.Collection<number>;
        getEntries(): Internal.List<Internal.Object2LongEntry>;
        forEach(forEach: ((arg0: Internal.Object2LongEntry) => void)): void;
        get(key: any): number;
        clear(): void;
        getTotalCount(): number;
        getKeys(): Internal.Set<any>;
        get entries(): Internal.List<Internal.Object2LongEntry>;
        get size(): number;
        get keys(): Internal.Set<any>;
        get values(): Internal.Collection<number>;
        get totalCount(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CountingMap_ = CountingMap;
    class CallbackInfo extends Document.Object implements Internal.Cancellable {
        cancel(): void;
        static getCallInfoClassName(arg0: org.objectweb.asm.Type): string;
        isCancelled(): boolean;
        isCancellable(): boolean;
        getId(): string;
        toString(): string;
        get cancelled(): boolean;
        get id(): string;
        get cancellable(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type CallbackInfo_ = CallbackInfo;
    class RandomValueRange extends Document.Object implements Internal.IRandomRange, Internal.JsonSerializableKJS {
        func_186512_b(): number;
        func_215830_a(): ResourceLocation;
        static func_215837_a(arg0: number, arg1: number): Internal.RandomValueRange;
        func_186510_a(arg0: number): boolean;
        func_186511_a(arg0: Internal.Random): number;
        func_186507_b(arg0: Internal.Random): number;
        toJsonKJS(): Internal.JsonElement;
        func_186509_a(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RandomValueRange_ = RandomValueRange;
    interface INBTType <T> {
        func_225651_c_(): boolean;
        func_225649_b_(arg0: Internal.DataInput, arg1: number, arg2: Internal.NBTSizeTracker): T;
        func_225650_b_(): string;
        func_225648_a_(): string;
    }
    type INBTType_<T> = INBTType<T>;
    abstract class GuiScreenEvent$KeyboardKeyPressedEvent extends Internal.GuiScreenEvent$KeyboardKeyEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$KeyboardKeyPressedEvent_ = GuiScreenEvent$KeyboardKeyPressedEvent;
    class ClientPlayNetHandler extends Document.Object implements Internal.IClientPlayNetHandler {
        func_200232_a(arg0: Internal.SPlayerLookPacket): void;
        func_225312_a(arg0: Internal.SPlayerDiggingPacket): void;
        func_175104_a(arg0: string): Internal.NetworkPlayerInfo;
        func_217273_a(arg0: Internal.SMerchantOffersPacket): void;
        func_211523_k(): Internal.NBTQueryManager;
        func_239164_m_(): Internal.Set<Internal.RegistryKey<Internal.World>>;
        func_147250_a(arg0: Internal.SUpdateScorePacket): void;
        func_147296_c(): void;
        func_147277_a(arg0: Internal.SPlaySoundEventPacket): void;
        func_147235_a(arg0: Internal.SSpawnObjectPacket): void;
        func_147254_a(arg0: Internal.SDisplayObjectivePacket): void;
        func_194307_a(arg0: Internal.SPlaceGhostRecipePacket): void;
        func_147231_a(arg0: Internal.ITextComponent_): void;
        func_147273_a(arg0: Internal.SUpdateTileEntityPacket): void;
        func_217266_a(arg0: Internal.SSpawnMovingSoundEffectPacket): void;
        func_199724_l(): Internal.ITagCollectionSupplier;
        func_184328_a(arg0: Internal.SSetPassengersPacket): void;
        func_147239_a(arg0: Internal.SConfirmTransactionPacket): void;
        func_175098_a(arg0: Internal.SCombatPacket): void;
        func_184324_a(arg0: Internal.SCooldownPacket): void;
        func_195513_b(): Internal.ClientSuggestionProvider;
        func_175094_a(arg0: Internal.SCameraPacket): void;
        func_147261_a(arg0: Internal.SBlockActionPacket): void;
        func_147288_a(arg0: Internal.SSpawnPaintingPacket): void;
        func_147246_a(arg0: Internal.SCollectItemPacket): void;
        func_147280_a(arg0: Internal.SRespawnPacket): void;
        func_147242_a(arg0: Internal.SEntityEquipmentPacket): void;
        func_147284_a(arg0: Internal.SEntityMetadataPacket): void;
        func_175101_a(arg0: Internal.SServerDifficultyPacket): void;
        func_211522_a(arg0: Internal.SQueryNBTResponsePacket): void;
        func_217272_a(arg0: Internal.SOpenWindowPacket): void;
        func_175105_e(): Internal.GameProfile;
        func_147276_a(arg0: Internal.SCloseWindowPacket): void;
        func_147234_a(arg0: Internal.SChangeBlockPacket): void;
        func_147291_a(arg0: Internal.SScoreboardObjectivePacket): void;
        func_147257_a(arg0: Internal.SHeldItemChangePacket): void;
        func_147295_a(arg0: Internal.SSetExperiencePacket): void;
        func_147272_a(arg0: Internal.SKeepAlivePacket): void;
        func_147253_a(arg0: Internal.SDisconnectPacket): void;
        func_191982_f(): Internal.ClientAdvancementManager;
        func_195510_a(arg0: Internal.STabCompletePacket): void;
        func_184327_a(arg0: Internal.SPlaySoundEffectPacket): void;
        func_147238_a(arg0: Internal.SDestroyEntitiesPacket): void;
        func_244695_f(): Internal.Collection<Internal.UUID>;
        func_184323_a(arg0: Internal.SMoveVehiclePacket): void;
        func_217269_a(arg0: Internal.SUpdateLightPacket): void;
        func_175093_a(arg0: Internal.SWorldBorderPacket): void;
        func_199723_a(arg0: Internal.STagsListPacket): void;
        func_147264_a(arg0: Internal.SMapDataPacket): void;
        func_147260_a(arg0: Internal.SPlayEntityEffectPacket): void;
        func_147287_a(arg0: Internal.SMultiBlockChangePacket): void;
        func_195514_j(): Internal.ClientWorld;
        func_217277_l(): Internal.UUID;
        func_147268_a(arg0: Internal.SOpenSignMenuPacket): void;
        func_147245_a(arg0: Internal.SWindowPropertyPacket): void;
        func_147283_a(arg0: Internal.SExplosionPacket): void;
        func_147241_a(arg0: Internal.SWindowItemsPacket): void;
        func_175102_a(arg0: Internal.UUID): Internal.NetworkPlayerInfo;
        func_230488_a_(arg0: Internal.SWorldSpawnChangedPacket): void;
        func_147249_a(arg0: Internal.SUpdateHealthPacket): void;
        func_217271_a(arg0: Internal.SOpenHorseWindowPacket): void;
        func_175106_d(): Internal.Collection<Internal.NetworkPlayerInfo>;
        func_239165_n_(): Internal.DynamicRegistries;
        func_184330_a(arg0: Internal.SPlayerPositionLookPacket): void;
        func_199526_e(): Internal.RecipeManager;
        func_147275_a(arg0: Internal.SEntityTeleportPacket): void;
        func_147298_b(): Internal.NetworkManager;
        func_147279_a(arg0: Internal.SAnimateHandPacket): void;
        func_147237_a(arg0: Internal.SSpawnPlayerPacket): void;
        func_147256_a(arg0: Internal.SPlayerListItemPacket): void;
        func_147290_a(arg0: Internal.SEntityPropertiesPacket): void;
        func_147252_a(arg0: Internal.SChangeGameStatePacket): void;
        func_147294_a(arg0: Internal.SAnimateBlockBreakPacket): void;
        func_195511_a(arg0: Internal.SCommandListPacket): void;
        func_184326_a(arg0: Internal.SUnloadChunkPacket): void;
        func_191981_a(arg0: Internal.SAdvancementInfoPacket): void;
        func_194022_a(arg0: Internal.SSelectAdvancementsTabPacket): void;
        func_175096_a(arg0: Internal.SPlayerListHeaderFooterPacket): void;
        func_217268_a(arg0: Internal.SOpenBookWindowPacket): void;
        func_147263_a(arg0: Internal.SChunkDataPacket): void;
        func_147240_a(arg0: Internal.SCustomPayloadPlayPacket): void;
        func_147286_a(arg0: Internal.SSpawnExperienceOrbPacket): void;
        func_195515_i(): Internal.CommandDispatcher<Internal.ISuggestionProvider>;
        func_147267_a(arg0: Internal.SEntityHeadLookPacket): void;
        func_147244_a(arg0: Internal.SEntityVelocityPacket): void;
        func_147282_a(arg0: Internal.SJoinGamePacket): void;
        func_217270_a(arg0: Internal.SUpdateViewDistancePacket): void;
        func_147251_a(arg0: Internal.SChatPacket): void;
        func_147297_a(arg0: Internal.IPacket<any>): void;
        func_147236_a(arg0: Internal.SEntityStatusPacket): void;
        func_147259_a(arg0: Internal.SEntityPacket): void;
        func_147270_a(arg0: Internal.SPlayerAbilitiesPacket): void;
        func_147293_a(arg0: Internal.SStatisticsPacket): void;
        func_199525_a(arg0: Internal.SUpdateRecipesPacket): void;
        func_195512_a(arg0: Internal.SStopSoundPacket): void;
        func_184329_a(arg0: Internal.SPlaySoundPacket): void;
        func_184325_a(arg0: Internal.SUpdateBossInfoPacket): void;
        func_175099_a(arg0: Internal.STitlePacket): void;
        func_191980_a(arg0: Internal.SRecipeBookPacket): void;
        func_175095_a(arg0: Internal.SSendResourcePackPacket): void;
        func_217267_a(arg0: Internal.SUpdateChunkPositionPacket): void;
        func_147285_a(arg0: Internal.SUpdateTimePacket): void;
        func_147262_a(arg0: Internal.SRemoveEntityEffectPacket): void;
        func_147266_a(arg0: Internal.SSetSlotPacket): void;
        func_147289_a(arg0: Internal.SSpawnParticlePacket): void;
        func_147247_a(arg0: Internal.STeamsPacket): void;
        func_147281_a(arg0: Internal.SSpawnMobPacket): void;
        func_147243_a(arg0: Internal.SMountEntityPacket): void;
        field_217287_m : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientPlayNetHandler_ = ClientPlayNetHandler;
    class OptionalLong extends Document.Object {
        isEmpty(): boolean;
        isPresent(): boolean;
        orElse(arg0: number): number;
        orElseThrow<X_>(arg0: (() => X_)): number;
        orElseThrow(): number;
        static empty(): Internal.OptionalLong;
        getAsLong(): number;
        orElseGet(arg0: (() => number)): number;
        stream(): Internal.LongStream;
        hashCode(): number;
        ifPresentOrElse(arg0: ((arg0: number) => void), arg1: (() => void)): void;
        ifPresent(arg0: ((arg0: number) => void)): void;
        static of(arg0: number): Internal.OptionalLong;
        equals(arg0: any): boolean;
        toString(): string;
        get asLong(): number;
        get present(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type OptionalLong_ = OptionalLong;
    interface WatchService extends Internal.Closeable {
        take(): Internal.WatchKey;
        poll(arg0: number, arg1: Internal.TimeUnit_): Internal.WatchKey;
        poll(): Internal.WatchKey;
        close(): void;
    }
    type WatchService_ = WatchService;
    interface BlockEntityPredicateDataCheck {
        checkData(arg0: Internal.CompoundNBT): boolean;
    }
    type BlockEntityPredicateDataCheck_ = ((arg0: Internal.CompoundNBT) => boolean) | BlockEntityPredicateDataCheck;
    class LockCode extends Document.Object {
        func_180157_a(arg0: Internal.CompoundNBT): void;
        func_219964_a(arg0: Internal.ItemStack): boolean;
        static func_180158_b(arg0: Internal.CompoundNBT): Internal.LockCode;
        static readonly field_180162_a : Internal.LockCode;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LockCode_ = LockCode;
    class RenderPlayerEvent$Pre extends Internal.RenderPlayerEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RenderPlayerEvent$Pre_ = RenderPlayerEvent$Pre;
    abstract class LayerRenderer <T, M> extends Document.Object {
        func_225628_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: T, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        func_215332_c(): M;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LayerRenderer_<T, M> = LayerRenderer<T, M>;
    class StageChangeEvent extends Document.Object {
        getStage(): string;
        getPlayer(): Internal.PlayerEntity;
        getPlayerStages(): Internal.Stages;
        get stage(): string;
        get playerStages(): Internal.Stages;
        get player(): Internal.PlayerEntity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StageChangeEvent_ = StageChangeEvent;
    class Provider$Service extends Document.Object {
        getAttribute(arg0: string): string;
        getType(): string;
        getAlgorithm(): string;
        getProvider(): Internal.Provider;
        newInstance(arg0: any): any;
        toString(): string;
        getClassName(): string;
        supportsParameter(arg0: any): boolean;
        get provider(): Internal.Provider;
        get className(): string;
        get type(): string;
        get algorithm(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Provider$Service_ = Provider$Service;
    class WailaRenderEvent$Post extends Internal.WailaRenderEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WailaRenderEvent$Post_ = WailaRenderEvent$Post;
    class URI extends Document.Object implements Internal.Comparable<Internal.URI>, Internal.Serializable {
        toASCIIString(): string;
        resolve(arg0: string): Internal.URI;
        resolve(arg0: Internal.URI): Internal.URI;
        isOpaque(): boolean;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.URI): number;
        getRawAuthority(): string;
        hashCode(): number;
        normalize(): Internal.URI;
        getPath(): string;
        static create(arg0: string): Internal.URI;
        relativize(arg0: Internal.URI): Internal.URI;
        getQuery(): string;
        getHost(): string;
        toURL(): Internal.URL;
        getScheme(): string;
        getAuthority(): string;
        getRawFragment(): string;
        getRawUserInfo(): string;
        parseServerAuthority(): Internal.URI;
        getRawSchemeSpecificPart(): string;
        getRawQuery(): string;
        getPort(): number;
        equals(arg0: any): boolean;
        isAbsolute(): boolean;
        toString(): string;
        getFragment(): string;
        getRawPath(): string;
        getUserInfo(): string;
        getSchemeSpecificPart(): string;
        get rawFragment(): string;
        get userInfo(): string;
        get opaque(): boolean;
        get scheme(): string;
        get query(): string;
        get schemeSpecificPart(): string;
        get rawUserInfo(): string;
        get path(): string;
        get fragment(): string;
        get rawPath(): string;
        get rawSchemeSpecificPart(): string;
        get port(): number;
        get rawAuthority(): string;
        get absolute(): boolean;
        get authority(): string;
        get host(): string;
        get rawQuery(): string;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type URI_ = URI;
    abstract class StructureStart <C> extends Document.Object {
        func_186161_c(): Internal.List<Internal.StructurePiece>;
        handler$znl000$resetReference(arg0: Internal.ISeedReader, arg1: Internal.StructureManager, arg2: Internal.ChunkGenerator, arg3: Internal.Random, arg4: Internal.MutableBoundingBox, arg5: Internal.ChunkPos, arg6: Internal.CallbackInfo): void;
        func_212687_g(): boolean;
        func_214627_k(): Internal.Structure<any>;
        func_212685_h(): void;
        func_230364_a_(arg0: Internal.DynamicRegistries, arg1: Internal.ChunkGenerator, arg2: Internal.TemplateManager, arg3: number, arg4: number, arg5: Internal.Biome, arg6: C): void;
        func_204294_a(): BlockPos;
        func_143021_a(arg0: number, arg1: number): Internal.CompoundNBT;
        func_227457_j_(): number;
        handler$znl000$injectReference(arg0: Internal.ISeedReader, arg1: Internal.StructureManager, arg2: Internal.ChunkGenerator, arg3: Internal.Random, arg4: Internal.MutableBoundingBox, arg5: Internal.ChunkPos, arg6: Internal.CallbackInfo): void;
        func_75069_d(): boolean;
        func_230366_a_(arg0: Internal.ISeedReader, arg1: Internal.StructureManager, arg2: Internal.ChunkGenerator, arg3: Internal.Random, arg4: Internal.MutableBoundingBox, arg5: Internal.ChunkPos): void;
        func_75071_a(): Internal.MutableBoundingBox;
        func_143019_e(): number;
        func_143018_f(): number;
        static readonly field_214630_a : Internal.StructureStart<any>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type StructureStart_<C> = StructureStart<C>;
    class EndNBT extends Document.Object implements Internal.INBT {
        func_74737_b(): Internal.EndNBT;
        func_74737_b(): Internal.INBT;
        func_74732_a(): number;
        func_74734_a(arg0: Internal.DataOutput): void;
        toString(): string;
        func_225647_b_(): Internal.INBTType<Internal.EndNBT>;
        func_199850_a(arg0: string, arg1: number): Internal.ITextComponent;
        static readonly field_229685_a_ : Internal.INBTType<Internal.EndNBT>;
        static readonly field_229686_b_ : Internal.EndNBT;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EndNBT_ = EndNBT;
    class TopSolidRangeConfig extends Document.Object implements Internal.IPlacementConfig {
        readonly field_242813_c : number;
        readonly field_242814_d : number;
        readonly field_242815_e : number;
        static readonly field_236985_a_ : Internal.Codec<Internal.TopSolidRangeConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TopSolidRangeConfig_ = TopSolidRangeConfig;
    class RegisterVanillaCategoryExtensionsEventJS extends Internal.JEIEventJS {
        readonly data : Internal.IVanillaCategoryExtensionRegistration;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type RegisterVanillaCategoryExtensionsEventJS_ = RegisterVanillaCategoryExtensionsEventJS;
    class Thread extends Document.Object implements Internal.Runnable {
        setName(arg0: string): void;
        getThreadGroup(): Internal.ThreadGroup;
        getName(): string;
        static getAllStackTraces(): Internal.Map<Internal.Thread, Internal.StackTraceElement[]>;
        static startVirtualThread(arg0: (() => void)): Internal.Thread;
        static onSpinWait(): void;
        getId(): number;
        run(): void;
        setContextClassLoader(arg0: Internal.ClassLoader): void;
        static sleep(arg0: number, arg1: number): void;
        static sleep(arg0: Internal.Duration): void;
        static sleep(arg0: number): void;
        threadId(): number;
        static ofVirtual(): Internal.Thread$Builder$OfVirtual;
        getStackTrace(): Internal.StackTraceElement[];
        isDaemon(): boolean;
        static yield(): void;
        interrupt(): void;
        static enumerate(arg0: Internal.Thread[]): number;
        join(arg0: number): void;
        join(arg0: number, arg1: number): void;
        join(): void;
        join(arg0: Internal.Duration): boolean;
        static ofPlatform(): Internal.Thread$Builder$OfPlatform;
        resume(): void;
        suspend(): void;
        static activeCount(): number;
        static currentThread(): Internal.Thread;
        setUncaughtExceptionHandler(arg0: ((arg0: Internal.Thread, arg1: Internal.Throwable) => void)): void;
        isInterrupted(): boolean;
        static dumpStack(): void;
        static setDefaultUncaughtExceptionHandler(arg0: ((arg0: Internal.Thread, arg1: Internal.Throwable) => void)): void;
        start(): void;
        static interrupted(): boolean;
        getUncaughtExceptionHandler(): Internal.Thread$UncaughtExceptionHandler;
        checkAccess(): void;
        static getDefaultUncaughtExceptionHandler(): Internal.Thread$UncaughtExceptionHandler;
        isAlive(): boolean;
        setDaemon(arg0: boolean): void;
        static holdsLock(arg0: any): boolean;
        getState(): Internal.Thread$State;
        stop(): void;
        getContextClassLoader(): Internal.ClassLoader;
        getPriority(): number;
        countStackFrames(): number;
        toString(): string;
        isVirtual(): boolean;
        setPriority(arg0: number): void;
        static readonly MIN_PRIORITY : 1;
        static readonly MAX_PRIORITY : 10;
        static readonly NORM_PRIORITY : 5;
        get allStackTraces(): Internal.Map<Internal.Thread, Internal.StackTraceElement[]>;
        get virtual(): boolean;
        get alive(): boolean;
        get priority(): number;
        get uncaughtExceptionHandler(): Internal.Thread$UncaughtExceptionHandler;
        get daemon(): boolean;
        get defaultUncaughtExceptionHandler(): Internal.Thread$UncaughtExceptionHandler;
        get threadGroup(): Internal.ThreadGroup;
        get contextClassLoader(): Internal.ClassLoader;
        get name(): string;
        get id(): number;
        get stackTrace(): Internal.StackTraceElement[];
        get state(): Internal.Thread$State;
        set defaultUncaughtExceptionHandler(arg0: ((arg0: Internal.Thread, arg1: Internal.Throwable) => void));
        set contextClassLoader(arg0: Internal.ClassLoader);
        set name(arg0: string);
        set priority(arg0: number);
        set uncaughtExceptionHandler(arg0: ((arg0: Internal.Thread, arg1: Internal.Throwable) => void));
        set daemon(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Thread_ = Thread;
    interface ListIterator <E> extends Internal.Iterator<E> {
        next(): E;
        add(arg0: E): void;
        set(arg0: E): void;
        previous(): E;
        hasPrevious(): boolean;
        hasNext(): boolean;
        nextIndex(): number;
        previousIndex(): number;
        remove(): void;
    }
    type ListIterator_<E> = ListIterator<E>;
    class Field extends Internal.AccessibleObject implements Internal.Member {
        setByte(arg0: any, arg1: number): void;
        getByte(arg0: any): number;
        getName(): string;
        isSynthetic(): boolean;
        getDouble(arg0: any): number;
        setShort(arg0: any, arg1: number): void;
        getFloat(arg0: any): number;
        getDeclaredAnnotations(): Internal.Annotation[];
        setDouble(arg0: any, arg1: number): void;
        setChar(arg0: any, arg1: string): void;
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        getDeclaringClass(): Internal.Class<any>;
        getAnnotationsByType<T_>(arg0: Internal.Class_<T_>): T_[];
        hashCode(): number;
        toGenericString(): string;
        get(arg0: any): any;
        getBoolean(arg0: any): boolean;
        getGenericType(): java_.lang.reflect.Type;
        getModifiers(): number;
        getAnnotatedType(): Internal.AnnotatedType;
        setFloat(arg0: any, arg1: number): void;
        set(arg0: any, arg1: any): void;
        setAccessible(arg0: boolean): void;
        getShort(arg0: any): number;
        setInt(arg0: any, arg1: number): void;
        getLong(arg0: any): number;
        getInt(arg0: any): number;
        getChar(arg0: any): string;
        setLong(arg0: any, arg1: number): void;
        getType(): Internal.Class<any>;
        getAnnotation<T_>(arg0: Internal.Class_<T_>): T_;
        equals(arg0: any): boolean;
        toString(): string;
        isEnumConstant(): boolean;
        setBoolean(arg0: any, arg1: boolean): void;
        get synthetic(): boolean;
        get declaredAnnotations(): Internal.Annotation[];
        get annotatedType(): Internal.AnnotatedType;
        get enumConstant(): boolean;
        get name(): string;
        get genericType(): java_.lang.reflect.Type;
        get modifiers(): number;
        get type(): Internal.Class<any>;
        get declaringClass(): Internal.Class<any>;
        set accessible(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Field_ = Field;
    abstract class AbstractRaiderEntity extends Internal.PatrollerEntity {
        func_213657_el(): boolean;
        func_213651_a(arg0: number): void;
        func_213660_a(arg0: number, arg1: boolean): void;
        func_213661_eo(): number;
        func_213653_b(arg0: number): void;
        func_213652_a(arg0: Internal.Raid): void;
        func_213386_a(arg0: Internal.IServerWorld, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT): Internal.ILivingEntityData;
        func_213644_t(arg0: boolean): void;
        func_213655_u(arg0: boolean): void;
        func_213634_ed(): boolean;
        func_213658_ej(): boolean;
        func_213656_en(): boolean;
        func_213397_c(arg0: number): boolean;
        func_213392_I(): boolean;
        func_213654_dW(): Internal.SoundEvent;
        func_70645_a(arg0: Internal.DamageSource): void;
        func_213281_b(arg0: Internal.CompoundNBT): void;
        func_213663_ek(): Internal.Raid;
        func_70636_d(): void;
        func_213642_em(): number;
        func_70037_a(arg0: Internal.CompoundNBT): void;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractRaiderEntity_ = AbstractRaiderEntity;
    class WorldSettingsImport <T> extends Internal.DelegatingDynamicOps<T> {
        static func_244336_a<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.WorldSettingsImport$IResourceAccess, arg2: Internal.DynamicRegistries$Impl): Internal.WorldSettingsImport<T_>;
        static func_244335_a<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.IResourceManager, arg2: Internal.DynamicRegistries$Impl): Internal.WorldSettingsImport<T_>;
        func_241797_a_<E_>(arg0: Internal.SimpleRegistry<E_>, arg1: Internal.RegistryKey<Internal.Registry<E_>>, arg2: Internal.Codec<E_>): Internal.DataResult<Internal.SimpleRegistry<E_>>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type WorldSettingsImport_<T> = WorldSettingsImport<T>;
    class TaggedChoice$TaggedChoiceType <K> extends Internal.Type<com.mojang.datafixers.util.Pair<K, any>> {
        all(arg0: Internal.TypeRewriteRule, arg1: boolean, arg2: boolean): Internal.RewriteResult<com.mojang.datafixers.util.Pair<K, any>, any>;
        types(): Internal.Map<K, Internal.Type<any>>;
        getName(): string;
        findTypeInChildren<FT_, FR_>(arg0: Internal.Type<FT_>, arg1: Internal.Type<FR_>, arg2: Internal.Type$TypeMatcher<FT_, FR_>, arg3: boolean): Internal.Either<Internal.TypedOptic<com.mojang.datafixers.util.Pair<K, any>, any, FT_, FR_>, Internal.Type$FieldNotFoundException>;
        updateMu(arg0: Internal.RecursiveTypeFamily): Internal.Type<any>;
        one(arg0: Internal.TypeRewriteRule): Internal.Optional<Internal.RewriteResult<com.mojang.datafixers.util.Pair<K, any>, any>>;
        point(arg0: Internal.DynamicOps<any>): Internal.Optional<com.mojang.datafixers.util.Pair<K, any>>;
        point(arg0: Internal.DynamicOps<any>, arg1: K, arg2: any): Internal.Optional<Internal.Typed<com.mojang.datafixers.util.Pair<K, any>>>;
        findChoiceType(arg0: string, arg1: number): Internal.Optional<Internal.TaggedChoice$TaggedChoiceType<any>>;
        static elementResult<K_, FT_, FR_>(arg0: K_, arg1: Internal.TaggedChoice$TaggedChoiceType<K_>, arg2: Internal.RewriteResult<FT_, FR_>): Internal.RewriteResult<com.mojang.datafixers.util.Pair<K_, any>, com.mojang.datafixers.util.Pair<K_, any>>;
        getKeyType(): Internal.Type<K>;
        hashCode(): number;
        equals(arg0: any, arg1: boolean, arg2: boolean): boolean;
        toString(): string;
        buildTemplate(): Internal.TypeTemplate;
        findFieldTypeOpt(arg0: string): Internal.Optional<Internal.Type<any>>;
        hasType(arg0: K): boolean;
        findCheckedType(arg0: number): Internal.Optional<Internal.Type<any>>;
        get name(): string;
        get keyType(): Internal.Type<K>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TaggedChoice$TaggedChoiceType_<K> = TaggedChoice$TaggedChoiceType<K>;
    interface K1 {
    }
    type K1_ = K1;
    class EndGatewayConfig extends Document.Object implements Internal.IFeatureConfig {
        func_214701_c(): boolean;
        static func_214702_a(arg0: BlockPos, arg1: boolean): Internal.EndGatewayConfig;
        func_214700_b(): Internal.Optional<BlockPos>;
        static func_214698_a(): Internal.EndGatewayConfig;
        static readonly field_236522_a_ : Internal.Codec<Internal.EndGatewayConfig>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EndGatewayConfig_ = EndGatewayConfig;
    interface GenericFutureListener <F> extends Internal.EventListener {
        operationComplete(arg0: F): void;
    }
    type GenericFutureListener_<F> = GenericFutureListener<F>;
    class ClientPlayerEntity extends Internal.AbstractClientPlayerEntity {
        func_228353_F_(): boolean;
        func_225609_n_(arg0: boolean): boolean;
        func_184602_cy(): void;
        func_70071_h_(): void;
        func_184587_cr(): boolean;
        func_71004_bE(): void;
        func_184839_n(arg0: number): void;
        func_228355_a_(arg0: boolean): void;
        func_213826_a(arg0: Internal.JigsawTileEntity): void;
        func_71053_j(): void;
        func_175163_u(): void;
        func_189807_a(arg0: Internal.StructureBlockTileEntity): void;
        func_184609_a(arg0: Hand_): void;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_71150_b(arg0: number): void;
        func_71152_a(arg0: number, arg1: number, arg2: number): void;
        func_213453_ef(): boolean;
        func_184814_a(arg0: Internal.ItemStack, arg1: Hand_): void;
        func_195050_f(arg0: number): number;
        func_146105_b(arg0: Internal.ITextComponent_, arg1: boolean): void;
        func_233575_bb_(): void;
        func_145747_a(arg0: Internal.ITextComponent_, arg1: Internal.UUID): void;
        func_70103_a(arg0: number): void;
        func_184838_M(): boolean;
        func_146107_m(): Internal.StatisticsManager;
        func_70098_U(): void;
        func_175159_q(): void;
        func_204231_K(): boolean;
        func_110317_t(): boolean;
        func_230490_cK_(): boolean;
        func_175141_a(arg0: Internal.SignTileEntity): void;
        func_175144_cb(): boolean;
        func_71165_d(arg0: string): void;
        func_70031_b(arg0: boolean): void;
        func_71016_p(): void;
        func_142021_k(): string;
        func_228354_I_(): boolean;
        func_195046_g(arg0: number): number;
        func_184600_cs(): Hand;
        func_241843_o(arg0: number): Vec3;
        func_70691_i(arg0: number): void;
        func_213823_a(arg0: Internal.SoundEvent, arg1: Internal.SoundCategory_, arg2: number, arg3: number): void;
        func_239206_w_(): number;
        func_184205_a(arg0: Internal.Entity, arg1: boolean): boolean;
        func_70636_d(): void;
        updateSyncFields(arg0: Internal.ClientPlayerEntity): void;
        func_110319_bJ(): number;
        func_70626_be(): void;
        func_70613_aW(): boolean;
        func_193103_a(arg0: Internal.IRecipe<any>): void;
        func_189809_N(): boolean;
        func_175158_f(arg0: string): void;
        func_184809_a(arg0: Internal.CommandBlockLogic): void;
        func_184598_c(arg0: Hand_): void;
        handler$bbd000$noSwimmingWithHeavyBootsOn(arg0: Internal.CallbackInfoReturnable<any>): void;
        func_184596_c(arg0: Internal.Effect): Internal.EffectInstance;
        func_225608_bj_(): boolean;
        func_184185_a(arg0: Internal.SoundEvent, arg1: number, arg2: number): void;
        func_213315_a(arg0: Internal.MoverType_, arg1: Vec3): void;
        func_230269_aK_(): boolean;
        func_203719_J(): number;
        func_199507_B(): Internal.ClientRecipeBook;
        func_71047_c(arg0: Internal.Entity): void;
        func_71009_b(arg0: Internal.Entity): void;
        func_230491_ea_(): boolean;
        func_70097_a(arg0: Internal.DamageSource, arg1: number): boolean;
        func_184824_a(arg0: Internal.CommandBlockTileEntity): void;
        readonly field_71174_a : Internal.ClientPlayNetHandler;
        field_71080_cy : number;
        field_71157_e : number;
        field_71155_g : number;
        field_71164_i : number;
        field_71158_b : Internal.MovementInput;
        field_71154_f : number;
        field_71163_h : number;
        field_71086_bY : number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ClientPlayerEntity_ = ClientPlayerEntity;
    class ItemCameraTransforms$TransformType extends Internal.Enum<Internal.ItemCameraTransforms$TransformType> {
        static valueOf(arg0: string): Internal.ItemCameraTransforms$TransformType;
        static values(): Internal.ItemCameraTransforms$TransformType[];
        func_241716_a_(): boolean;
        static readonly HEAD : Internal.ItemCameraTransforms$TransformType;
        static readonly THIRD_PERSON_LEFT_HAND : Internal.ItemCameraTransforms$TransformType;
        static readonly THIRD_PERSON_RIGHT_HAND : Internal.ItemCameraTransforms$TransformType;
        static readonly FIRST_PERSON_RIGHT_HAND : Internal.ItemCameraTransforms$TransformType;
        static readonly GROUND : Internal.ItemCameraTransforms$TransformType;
        static readonly FIRST_PERSON_LEFT_HAND : Internal.ItemCameraTransforms$TransformType;
        static readonly FIXED : Internal.ItemCameraTransforms$TransformType;
        static readonly GUI : Internal.ItemCameraTransforms$TransformType;
        static readonly NONE : Internal.ItemCameraTransforms$TransformType;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ItemCameraTransforms$TransformType_ = "none" | "third_person_left_hand" | "third_person_right_hand" | "first_person_left_hand" | "first_person_right_hand" | "head" | "gui" | "ground" | "fixed" | ItemCameraTransforms$TransformType;
    class BeehiveTreeDecorator extends Internal.TreeDecorator {
        func_225576_a_(arg0: Internal.ISeedReader, arg1: Internal.Random, arg2: Internal.List<BlockPos>, arg3: Internal.List<BlockPos>, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox): void;
        static readonly field_236863_a_ : Internal.Codec<Internal.BeehiveTreeDecorator>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type BeehiveTreeDecorator_ = BeehiveTreeDecorator;
    interface ChannelOutboundBuffer$MessageProcessor {
        processMessage(arg0: any): boolean;
    }
    type ChannelOutboundBuffer$MessageProcessor_ = ChannelOutboundBuffer$MessageProcessor;
    interface IForgeMinecraft {
        getSelf(): Internal.Minecraft;
        popGuiLayer(): void;
        pushGuiLayer(arg0: Internal.Screen): void;
    }
    type IForgeMinecraft_ = IForgeMinecraft;
    interface ShortCollection extends Internal.Collection<number>, Internal.ShortIterable {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        add(arg0: number): boolean;
        toShortArray(): number[];
        toShortArray(arg0: number[]): number[];
        removeAll(arg0: Internal.ShortCollection): boolean;
        contains(arg0: any): boolean;
        contains(arg0: number): boolean;
        iterator(): Internal.ShortIterator;
        iterator(): Internal.Iterator<any>;
        addAll(arg0: Internal.ShortCollection): boolean;
        containsAll(arg0: Internal.ShortCollection): boolean;
        toArray(arg0: number[]): number[];
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.ShortCollection): boolean;
        removeIf(arg0: ((arg0: number) => boolean)): boolean;
        removeIf(arg0: ((arg0: number) => boolean)): boolean;
    }
    type ShortCollection_ = ShortCollection;
    class DatapackCodec extends Document.Object {
        addModPacks(arg0: Internal.List<string>): void;
        func_234884_a_(): Internal.List<string>;
        func_234887_b_(): Internal.List<string>;
        static readonly field_234881_b_ : Internal.Codec<Internal.DatapackCodec>;
        static readonly field_234880_a_ : Internal.DatapackCodec;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type DatapackCodec_ = DatapackCodec;
    class TickEvent$ClientTickEvent extends Internal.TickEvent {
        getListenerList(): Internal.ListenerList;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TickEvent$ClientTickEvent_ = TickEvent$ClientTickEvent;
    interface Multimap <K, V> {
        containsEntry(arg0: any, arg1: any): boolean;
        asMap(): Internal.Map<K, Internal.Collection<V>>;
        keys(): Internal.Multiset<K>;
        containsKey(arg0: any): boolean;
        forEach(arg0: ((arg0: K, arg1: V) => void)): void;
        values(): Internal.Collection<V>;
        isEmpty(): boolean;
        clear(): void;
        replaceValues(arg0: K, arg1: Internal.Iterable<V>): Internal.Collection<V>;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): boolean;
        remove(arg0: any, arg1: any): boolean;
        removeAll(arg0: any): Internal.Collection<V>;
        entries(): Internal.Collection<Internal.Map$Entry<K, V>>;
        size(): number;
        hashCode(): number;
        putAll(arg0: K, arg1: Internal.Iterable<V>): boolean;
        putAll(arg0: Internal.Multimap<K, V>): boolean;
        equals(arg0: any): boolean;
        get(arg0: K): Internal.Collection<V>;
        keySet(): Internal.Set<K>;
    }
    type Multimap_<K, V> = Multimap<K, V>;
    class PlayerData extends Document.Object {
        func_237334_a_(): string[];
        func_237335_a_(arg0: Internal.PlayerEntity): void;
        func_237336_b_(arg0: Internal.PlayerEntity): Internal.CompoundNBT;
        getPlayerDataFolder(): Internal.File;
        get playerDataFolder(): Internal.File;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type PlayerData_ = PlayerData;
    class ColumnBlockPlacer extends Internal.BlockPlacer {
        func_225567_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.Random): void;
        static readonly field_236439_b_ : Internal.Codec<Internal.ColumnBlockPlacer>;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ColumnBlockPlacer_ = ColumnBlockPlacer;
    interface ICrossbowUser extends Internal.IRangedAttackMob {
        func_70638_az(): Internal.LivingEntity;
        func_213671_a(arg0: boolean): void;
        func_230283_U__(): void;
        func_234279_a_(arg0: Internal.LivingEntity, arg1: Internal.LivingEntity, arg2: Internal.ProjectileEntity, arg3: number, arg4: number): void;
        func_234280_a_(arg0: Internal.LivingEntity, arg1: Vec3, arg2: number): Internal.Vector3f;
        func_234281_b_(arg0: Internal.LivingEntity, arg1: number): void;
        func_230284_a_(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: Internal.ProjectileEntity, arg3: number): void;
    }
    type ICrossbowUser_ = ICrossbowUser;
    class LivingPackSizeEvent extends Internal.LivingEvent {
        getListenerList(): Internal.ListenerList;
        setMaxPackSize(arg0: number): void;
        hasResult(): boolean;
        getMaxPackSize(): number;
        get maxPackSize(): number;
        get listenerList(): Internal.ListenerList;
        set maxPackSize(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type LivingPackSizeEvent_ = LivingPackSizeEvent;
    class InputEvent$MouseInputEvent extends Internal.InputEvent {
        getButton(): number;
        getListenerList(): Internal.ListenerList;
        getMods(): number;
        getAction(): number;
        get button(): number;
        get mods(): number;
        get listenerList(): Internal.ListenerList;
        get action(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type InputEvent$MouseInputEvent_ = InputEvent$MouseInputEvent;
    class ChatLine <T> extends Document.Object {
        func_74540_b(): number;
        func_238169_a_(): T;
        func_74539_c(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ChatLine_<T> = ChatLine<T>;
    class GuiScreenEvent$KeyboardKeyReleasedEvent$Pre extends Internal.GuiScreenEvent$KeyboardKeyReleasedEvent {
        getListenerList(): Internal.ListenerList;
        isCancelable(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type GuiScreenEvent$KeyboardKeyReleasedEvent$Pre_ = GuiScreenEvent$KeyboardKeyReleasedEvent$Pre;
    class JsonPrimitive extends Internal.JsonElement {
        getAsFloat(): number;
        getAsBigInteger(): Internal.BigInteger;
        getAsByte(): number;
        getAsBigDecimal(): Internal.BigDecimal;
        getAsNumber(): Internal.Number;
        getAsCharacter(): string;
        getAsString(): string;
        getAsDouble(): number;
        getAsInt(): number;
        getAsLong(): number;
        isBoolean(): boolean;
        isNumber(): boolean;
        getAsBoolean(): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        isString(): boolean;
        getAsShort(): number;
        get asByte(): number;
        get asBigInteger(): Internal.BigInteger;
        get asCharacter(): string;
        get string(): boolean;
        get asNumber(): Internal.Number;
        get asBigDecimal(): Internal.BigDecimal;
        get asFloat(): number;
        get asLong(): number;
        get asInt(): number;
        get number(): boolean;
        get boolean(): boolean;
        get asShort(): number;
        get asDouble(): number;
        get asString(): string;
        get asBoolean(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type JsonPrimitive_ = JsonPrimitive;
    class STitlePacket$Type extends Internal.Enum<Internal.STitlePacket$Type> {
        static valueOf(arg0: string): Internal.STitlePacket$Type;
        static values(): Internal.STitlePacket$Type[];
        static readonly ACTIONBAR : Internal.STitlePacket$Type;
        static readonly TIMES : Internal.STitlePacket$Type;
        static readonly TITLE : Internal.STitlePacket$Type;
        static readonly RESET : Internal.STitlePacket$Type;
        static readonly SUBTITLE : Internal.STitlePacket$Type;
        static readonly CLEAR : Internal.STitlePacket$Type;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type STitlePacket$Type_ = "title" | "subtitle" | "actionbar" | "times" | "clear" | "reset" | STitlePacket$Type;
    class Hashtable <K, V> extends Internal.Dictionary<K, V> implements Internal.Map<K, V>, Internal.Cloneable, Internal.Serializable {
        getOrDefault(arg0: any, arg1: V): V;
        keys(): Internal.Enumeration<K>;
        computeIfAbsent(arg0: K, arg1: ((arg0: K) => V)): V;
        values(): Internal.Collection<V>;
        replace(arg0: K, arg1: V, arg2: V): boolean;
        replace(arg0: K, arg1: V): V;
        replaceAll(arg0: ((arg0: K, arg1: V) => V)): void;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): V;
        remove(arg0: any, arg1: any): boolean;
        remove(arg0: any): V;
        compute(arg0: K, arg1: ((arg0: K, arg1: V) => V)): V;
        hashCode(): number;
        putAll(arg0: Internal.Map_<K, V>): void;
        merge(arg0: K, arg1: V, arg2: ((arg0: V, arg1: V) => V)): V;
        get(arg0: any): V;
        keySet(): Internal.Set<K>;
        entrySet(): Internal.Set<Internal.Map$Entry<K, V>>;
        containsKey(arg0: any): boolean;
        forEach(arg0: ((arg0: K, arg1: V) => void)): void;
        isEmpty(): boolean;
        clear(): void;
        contains(arg0: any): boolean;
        computeIfPresent(arg0: K, arg1: ((arg0: K, arg1: V) => V)): V;
        size(): number;
        elements(): Internal.Enumeration<V>;
        equals(arg0: any): boolean;
        clone(): any;
        toString(): string;
        putIfAbsent(arg0: K, arg1: V): V;
        get empty(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Hashtable_<K, V> = Hashtable<K, V>;
    class EnderPearlEntity extends Internal.ProjectileItemEntity {
        func_70071_h_(): void;
        changeDimension(arg0: Internal.ServerWorld, arg1: Internal.ITeleporter): Internal.Entity;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type EnderPearlEntity_ = EnderPearlEntity;
    abstract class AbstractInterruptibleChannel extends Document.Object implements Internal.Channel, Internal.InterruptibleChannel {
        isOpen(): boolean;
        close(): void;
        get open(): boolean;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractInterruptibleChannel_ = AbstractInterruptibleChannel;
    class ExperienceBottleEntity extends Internal.ProjectileItemEntity {
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type ExperienceBottleEntity_ = ExperienceBottleEntity;
    abstract class AbstractBlock extends Internal.ForgeRegistryEntry<Internal.Block> implements Internal.BlockKJS {
        func_225534_a_(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.Random): void;
        func_176211_b(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
        func_220068_i(): ResourceLocation;
        setMaterialKJS(arg0: Internal.Material): void;
        func_185471_a(arg0: Internal.BlockState, arg1: Internal.Mirror_): Internal.BlockState;
        func_220052_b(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos): Internal.INamedContainerProvider;
        func_149645_b(arg0: Internal.BlockState): Internal.BlockRenderType;
        func_220071_b(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.ISelectionContext): Internal.VoxelShape;
        setExplosionResistanceKJS(arg0: number): void;
        setJumpFactorKJS(arg0: number): void;
        func_196270_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity): void;
        func_225541_a_(arg0: Internal.BlockState, arg1: Internal.Fluid): boolean;
        func_225542_b_(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.Random): void;
        func_180656_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
        func_196253_a(arg0: Internal.BlockState, arg1: Internal.BlockItemUseContext): boolean;
        setSoundTypeKJS(arg0: Internal.SoundType): void;
        func_230322_a_(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.ISelectionContext): Internal.VoxelShape;
        func_200122_a(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.Direction_): boolean;
        func_149744_f(arg0: Internal.BlockState): boolean;
        func_176218_Q(): Internal.AbstractBlock$OffsetType;
        getBlockBuilderKJS(): Internal.BlockBuilder;
        func_220082_b(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.BlockState, arg4: boolean): void;
        func_196248_b(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: number, arg4: number): void;
        func_220080_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        func_209900_a(arg0: Internal.BlockState, arg1: BlockPos): number;
        func_230335_e_(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        func_196260_a(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        func_180647_a(arg0: Internal.BlockState, arg1: Internal.PlayerEntity, arg2: Internal.IBlockReader, arg3: BlockPos): number;
        func_149656_h(arg0: Internal.BlockState): Internal.PushReaction;
        func_220069_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Block, arg4: BlockPos, arg5: boolean): void;
        func_196262_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Entity): void;
        func_204507_t(arg0: Internal.BlockState): Internal.FluidState;
        func_149740_M(arg0: Internal.BlockState): boolean;
        func_220076_a(arg0: Internal.BlockState, arg1: Internal.LootContext$Builder): Internal.List<Internal.ItemStack>;
        func_180641_l(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos): number;
        func_220053_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.ISelectionContext): Internal.VoxelShape;
        func_189539_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: number, arg4: number): boolean;
        setFrictionKJS(arg0: number): void;
        setHasCollisionKJS(arg0: boolean): void;
        func_225533_a_(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity, arg4: Hand_, arg5: Internal.BlockRayTraceResult): Internal.ActionResultType;
        func_200011_d(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        func_220074_n(arg0: Internal.BlockState): boolean;
        func_196271_a(arg0: Internal.BlockState, arg1: Internal.Direction_, arg2: Internal.BlockState, arg3: Internal.IWorld, arg4: BlockPos, arg5: BlockPos): Internal.BlockState;
        setIsRandomlyTickingKJS(arg0: boolean): void;
        func_199600_g(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        func_196243_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.BlockState, arg4: boolean): void;
        func_220066_a(arg0: Internal.World, arg1: Internal.BlockState, arg2: Internal.BlockRayTraceResult, arg3: Internal.ProjectileEntity): void;
        func_196266_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.PathType_): boolean;
        func_220062_a(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.ItemStack): void;
        func_196247_c(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        func_185499_a(arg0: Internal.BlockState, arg1: Internal.Rotation_): Internal.BlockState;
        setSpeedFactorKJS(arg0: number): void;
        setBlockBuilderKJS(b: Internal.BlockBuilder): void;
        func_235695_q_(): boolean;
        func_199767_j(): Internal.Item;
        func_235697_s_(): Internal.MaterialColor;
        readonly field_149764_J : Internal.Material;
        readonly field_235684_aB_ : Internal.AbstractBlock$Properties;
        get blockBuilderKJS(): Internal.BlockBuilder;
        set jumpFactorKJS(arg0: number);
        set isRandomlyTickingKJS(arg0: boolean);
        set blockBuilderKJS(b: Internal.BlockBuilder);
        set frictionKJS(arg0: number);
        set hasCollisionKJS(arg0: boolean);
        set materialKJS(arg0: Internal.Material);
        set speedFactorKJS(arg0: number);
        set soundTypeKJS(arg0: Internal.SoundType);
        set explosionResistanceKJS(arg0: number);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type AbstractBlock_ = AbstractBlock;
    class TutorialSteps extends Internal.Enum<Internal.TutorialSteps> {
        func_193309_a(arg0: Internal.Tutorial): Internal.ITutorialStep;
        func_193308_a(): string;
        static func_193307_a(arg0: string): Internal.TutorialSteps;
        static valueOf(arg0: string): Internal.TutorialSteps;
        static values(): Internal.TutorialSteps[];
        static readonly PUNCH_TREE : Internal.TutorialSteps;
        static readonly MOVEMENT : Internal.TutorialSteps;
        static readonly FIND_TREE : Internal.TutorialSteps;
        static readonly OPEN_INVENTORY : Internal.TutorialSteps;
        static readonly NONE : Internal.TutorialSteps;
        static readonly CRAFT_PLANKS : Internal.TutorialSteps;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type TutorialSteps_ = "movement" | "find_tree" | "punch_tree" | "open_inventory" | "craft_planks" | "none" | TutorialSteps;
}
declare namespace io.netty.util {
    interface Attribute <T> {
        set(arg0: T): void;
        compareAndSet(arg0: T, arg1: T): boolean;
        get(): T;
        setIfAbsent(arg0: T): T;
        getAndSet(arg0: T): T;
        key(): Internal.AttributeKey<T>;
        remove(): void;
        getAndRemove(): T;
    }
    type Attribute_<T> = Attribute<T>;
}
declare namespace net.minecraftforge.eventbus.api {
    class Event extends Document.Object {
        setCanceled(arg0: boolean): void;
        getListenerList(): Internal.ListenerList;
        isCanceled(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        getResult(): Internal.Event$Result;
        hasResult(): boolean;
        isCancelable(): boolean;
        getPhase(): Internal.EventPriority;
        setPhase(arg0: Internal.EventPriority_): void;
        get result(): Internal.Event$Result;
        get phase(): Internal.EventPriority;
        get canceled(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        set phase(arg0: Internal.EventPriority_);
        set result(arg0: Internal.Event$Result_);
        set canceled(arg0: boolean);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Event_ = Event;
}
declare namespace dev.latvian.mods.rhino.mod.util.color {
    interface Color extends Internal.SpecialEquality {
        getRgbKJS(): number;
        getHexKJS(): string;
        getArgbKJS(): number;
        createTextColorKJS(): Internal.Color;
        getFireworkColorKJS(): number;
        getSerializeKJS(): string;
        specialEquals(o: any, shallow: boolean): boolean;
    }
    type Color_ = Color;
}
declare namespace net.minecraftforge.fluids {
    class FluidStack extends Document.Object {
        getRawFluid(): Internal.Fluid;
        getOrCreateChildTag(arg0: string): Internal.CompoundNBT;
        getChildTag(arg0: string): Internal.CompoundNBT;
        containsFluid(arg0: net.minecraftforge.fluids.FluidStack): boolean;
        static readFromPacket(arg0: Internal.PacketBuffer): net.minecraftforge.fluids.FluidStack;
        hashCode(): number;
        setTag(arg0: Internal.CompoundNBT): void;
        copy(): net.minecraftforge.fluids.FluidStack;
        setAmount(arg0: number): void;
        isFluidEqual(arg0: net.minecraftforge.fluids.FluidStack): boolean;
        isFluidEqual(arg0: Internal.ItemStack): boolean;
        writeToNBT(arg0: Internal.CompoundNBT): Internal.CompoundNBT;
        getAmount(): number;
        removeChildTag(arg0: string): void;
        isFluidStackIdentical(arg0: net.minecraftforge.fluids.FluidStack): boolean;
        grow(arg0: number): void;
        hasTag(): boolean;
        static loadFluidStackFromNBT(arg0: Internal.CompoundNBT): net.minecraftforge.fluids.FluidStack;
        shrink(arg0: number): void;
        getTranslationKey(): string;
        isEmpty(): boolean;
        getTag(): Internal.CompoundNBT;
        getDisplayName(): Internal.ITextComponent;
        getOrCreateTag(): Internal.CompoundNBT;
        writeToPacket(arg0: Internal.PacketBuffer): void;
        equals(arg0: any): boolean;
        getFluid(): Internal.Fluid;
        static areFluidStackTagsEqual(arg0: net.minecraftforge.fluids.FluidStack, arg1: net.minecraftforge.fluids.FluidStack): boolean;
        static readonly CODEC : Internal.Codec<net.minecraftforge.fluids.FluidStack>;
        static readonly EMPTY : net.minecraftforge.fluids.FluidStack;
        get orCreateTag(): Internal.CompoundNBT;
        get rawFluid(): Internal.Fluid;
        get amount(): number;
        get translationKey(): string;
        get displayName(): Internal.ITextComponent;
        get fluid(): Internal.Fluid;
        get tag(): Internal.CompoundNBT;
        get empty(): boolean;
        set amount(arg0: number);
        set tag(arg0: Internal.CompoundNBT);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type FluidStack_ = FluidStack;
}
declare namespace org.objectweb.asm {
    class Type extends Document.Object {
        static getDescriptor(arg0: Internal.Class_<any>): string;
        getDescriptor(): string;
        getElementType(): org.objectweb.asm.Type;
        static getArgumentTypes(arg0: Internal.Method): org.objectweb.asm.Type[];
        getArgumentTypes(): org.objectweb.asm.Type[];
        static getArgumentTypes(arg0: string): org.objectweb.asm.Type[];
        static getArgumentsAndReturnSizes(arg0: string): number;
        getArgumentsAndReturnSizes(): number;
        getArgumentCount(): number;
        static getArgumentCount(arg0: string): number;
        getDimensions(): number;
        getSort(): number;
        getSize(): number;
        static getMethodDescriptor(arg0: org.objectweb.asm.Type, arg1: org.objectweb.asm.Type[]): string;
        static getMethodDescriptor(arg0: Internal.Method): string;
        static getReturnType(arg0: string): org.objectweb.asm.Type;
        static getReturnType(arg0: Internal.Method): org.objectweb.asm.Type;
        getReturnType(): org.objectweb.asm.Type;
        static getInternalName(arg0: Internal.Class_<any>): string;
        getInternalName(): string;
        static getType(arg0: string): org.objectweb.asm.Type;
        static getType(arg0: Internal.Class_<any>): org.objectweb.asm.Type;
        static getType(arg0: Internal.Method): org.objectweb.asm.Type;
        static getType(arg0: Internal.Constructor<any>): org.objectweb.asm.Type;
        hashCode(): number;
        equals(arg0: any): boolean;
        static getConstructorDescriptor(arg0: Internal.Constructor<any>): string;
        static getObjectType(arg0: string): org.objectweb.asm.Type;
        static getMethodType(arg0: org.objectweb.asm.Type, arg1: org.objectweb.asm.Type[]): org.objectweb.asm.Type;
        static getMethodType(arg0: string): org.objectweb.asm.Type;
        toString(): string;
        getClassName(): string;
        getOpcode(arg0: number): number;
        static readonly CHAR_TYPE : org.objectweb.asm.Type;
        static readonly FLOAT : 6;
        static readonly DOUBLE_TYPE : org.objectweb.asm.Type;
        static readonly ARRAY : 9;
        static readonly LONG_TYPE : org.objectweb.asm.Type;
        static readonly BYTE_TYPE : org.objectweb.asm.Type;
        static readonly CHAR : 2;
        static readonly VOID_TYPE : org.objectweb.asm.Type;
        static readonly OBJECT : 10;
        static readonly BOOLEAN_TYPE : org.objectweb.asm.Type;
        static readonly FLOAT_TYPE : org.objectweb.asm.Type;
        static readonly BOOLEAN : 1;
        static readonly INT : 5;
        static readonly SHORT : 4;
        static readonly BYTE : 3;
        static readonly METHOD : 11;
        static readonly SHORT_TYPE : org.objectweb.asm.Type;
        static readonly DOUBLE : 8;
        static readonly VOID : 0;
        static readonly LONG : 7;
        static readonly INT_TYPE : org.objectweb.asm.Type;
        get argumentsAndReturnSizes(): number;
        get argumentCount(): number;
        get internalName(): string;
        get size(): number;
        get className(): string;
        get descriptor(): string;
        get argumentTypes(): org.objectweb.asm.Type[];
        get sort(): number;
        get elementType(): org.objectweb.asm.Type;
        get returnType(): org.objectweb.asm.Type;
        get dimensions(): number;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Type_ = Type;
}
declare namespace io.netty.util.concurrent {
    interface Future <V> extends Internal.Future<V> {
        cancel(arg0: boolean): boolean;
        removeListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>[]): io.netty.util.concurrent.Future<V>;
        getNow(): V;
        cause(): Internal.Throwable;
        awaitUninterruptibly(): io.netty.util.concurrent.Future<V>;
        awaitUninterruptibly(arg0: number): boolean;
        awaitUninterruptibly(arg0: number, arg1: Internal.TimeUnit_): boolean;
        removeListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>): io.netty.util.concurrent.Future<V>;
        sync(): io.netty.util.concurrent.Future<V>;
        syncUninterruptibly(): io.netty.util.concurrent.Future<V>;
        isCancellable(): boolean;
        await(arg0: number): boolean;
        await(arg0: number, arg1: Internal.TimeUnit_): boolean;
        await(): io.netty.util.concurrent.Future<V>;
        addListeners(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>[]): io.netty.util.concurrent.Future<V>;
        addListener(arg0: Internal.GenericFutureListener<io.netty.util.concurrent.Future<V>>): io.netty.util.concurrent.Future<V>;
        isSuccess(): boolean;
    }
    type Future_<V> = Future<V>;
}
declare namespace java_.awt {
    class Dimension extends Internal.Dimension2D implements Internal.Serializable {
        getHeight(): number;
        getSize(): java_.awt.Dimension;
        setSize(arg0: java_.awt.Dimension): void;
        setSize(arg0: number, arg1: number): void;
        setSize(arg0: number, arg1: number): void;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        getWidth(): number;
        width : number;
        height : number;
        get size(): java_.awt.Dimension;
        set size(arg0: java_.awt.Dimension);
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Dimension_ = Dimension;
}
declare namespace net.minecraftforge.client.model.pipeline {
    interface IVertexConsumer {
        setQuadOrientation(arg0: Internal.Direction_): void;
        setTexture(arg0: Internal.TextureAtlasSprite): void;
        setApplyDiffuseLighting(arg0: boolean): void;
        setQuadTint(arg0: number): void;
        getVertexFormat(): Internal.VertexFormat;
        put(arg0: number, arg1: number[]): void;
    }
    type IVertexConsumer_ = IVertexConsumer;
}
declare namespace java_.util.concurrent {
    interface ScheduledFuture <V> extends Internal.Delayed, Internal.Future<V> {
    }
    type ScheduledFuture_<V> = ScheduledFuture<V>;
    interface Callable <V> {
        call(): V;
    }
    type Callable_<V> = (() => V) | Callable<V>;
}
declare namespace org.apache.logging.log4j.message {
    interface Message extends Internal.Serializable {
        getParameters(): any[];
        getFormattedMessage(): string;
        getFormat(): string;
        getThrowable(): Internal.Throwable;
    }
    type Message_ = Message;
}
declare namespace org.apache.logging.log4j.util {
    interface Supplier <T> {
        get(): T;
    }
    type Supplier_<T> = Supplier<T>;
}
declare namespace io.netty.channel {
    interface Channel extends Internal.AttributeMap, Internal.ChannelOutboundInvoker, Internal.Comparable<io.netty.channel.Channel> {
        parent(): io.netty.channel.Channel;
        metadata(): Internal.ChannelMetadata;
        read(): io.netty.channel.Channel;
        bytesBeforeUnwritable(): number;
        eventLoop(): Internal.EventLoop;
        isWritable(): boolean;
        isActive(): boolean;
        unsafe(): Internal.Channel$Unsafe;
        pipeline(): Internal.ChannelPipeline;
        isOpen(): boolean;
        flush(): io.netty.channel.Channel;
        closeFuture(): Internal.ChannelFuture;
        localAddress(): Internal.SocketAddress;
        isRegistered(): boolean;
        id(): Internal.ChannelId;
        bytesBeforeWritable(): number;
        alloc(): Internal.ByteBufAllocator;
        config(): Internal.ChannelConfig;
        remoteAddress(): Internal.SocketAddress;
    }
    type Channel_ = Channel;
}
declare namespace net.minecraftforge.client.event.sound {
    class SoundEvent extends net.minecraftforge.eventbus.api.Event {
        getManager(): Internal.SoundEngine;
        getListenerList(): Internal.ListenerList;
        get manager(): Internal.SoundEngine;
        get listenerList(): Internal.ListenerList;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type SoundEvent_ = SoundEvent;
}
declare namespace dev.latvian.mods.rhino {
    interface Function extends Internal.Scriptable, Internal.Callable {
        call(arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Scriptable, arg3: any[]): any;
        construct(arg0: Internal.Context, arg1: Internal.Scriptable, arg2: any[]): Internal.Scriptable;
    }
    type Function_ = Function;
}
declare namespace dev.latvian.mods.rhino.util {
    interface MapLike <K, T> extends Internal.CustomJavaObjectWrapper {
        wrapAsJavaObject(cx: Internal.Context, scope: Internal.Scriptable, staticType: Internal.Class_<any>): Internal.Scriptable;
        containsKeyML(key: K): boolean;
        removeML(key: K): void;
        keysML(): Internal.Collection<K>;
        clearML(): void;
        getML(arg0: K): T;
        putML(key: K, value: T): void;
    }
    type MapLike_<K, T> = MapLike<K, T>;
}
declare namespace java_.lang.reflect {
    interface Type {
        getTypeName(): string;
    }
    type Type_ = Type;
}
declare namespace com.mojang.datafixers.util {
    class Pair <F, S> extends Document.Object implements Internal.App<Internal.Pair$Mu<S>, F> {
        mapFirst<F2_>(arg0: ((arg0: Internal.Pair$Mu<S>) => F2_)): com.mojang.datafixers.util.Pair<F2_, S>;
        swap(): com.mojang.datafixers.util.Pair<S, Internal.Pair$Mu<S>>;
        static unbox<F_, S_>(arg0: Internal.App<Internal.Pair$Mu<S_>, F_>): com.mojang.datafixers.util.Pair<F_, S_>;
        getFirst(): Internal.Pair$Mu<S>;
        hashCode(): number;
        static toMap<F_, S_>(): Internal.Collector<com.mojang.datafixers.util.Pair<F_, S_>, any, Internal.Map<F_, S_>>;
        static of<F_, S_>(arg0: F_, arg1: S_): com.mojang.datafixers.util.Pair<F_, S_>;
        equals(arg0: any): boolean;
        getSecond(): S;
        toString(): string;
        mapSecond<S2_>(arg0: ((arg0: S) => S2_)): com.mojang.datafixers.util.Pair<Internal.Pair$Mu<S>, S2_>;
        get first(): Internal.Pair$Mu<S>;
        get second(): S;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Pair_<F, S> = Pair<F, S>;
    class Unit extends Internal.Enum<com.mojang.datafixers.util.Unit> {
        static valueOf(arg0: string): com.mojang.datafixers.util.Unit;
        static values(): com.mojang.datafixers.util.Unit[];
        toString(): string;
        static readonly INSTANCE : com.mojang.datafixers.util.Unit;
        /**
         * Internal constructor, this means that it's not valid and you will get an error if you use it.
         */
        protected constructor();
    }
    type Unit_ = "instance" | Unit;
}
declare namespace Document {
    class RecipeHolder {
        readonly minecraft: Document.MinecraftRecipes;
    }
    class Object {
        getClass(): Internal.Class<Document.Object>;
        wait(arg0: number): void;
        wait(arg0: number, arg1): void;
        wait(): void;
        hashCode(): number;
        notifyAll(): void;
        equals(arg0: any): boolean;
        toString(): string;
        notify(): void;
        get class(): Internal.Class<Document.Object>;
    }
    class MinecraftRecipes {
        /**
        * Adds a smelting recipe to Minecraft.
        * Used by Furnaces.
        */
        smelting(output: dev.latvian.kubejs.item.ItemStackJS, input): Internal.CookingRecipeJS;
        /**
        * Adds a smelting recipe to Minecraft.
        * Used by Smokers.
        */
        smoking(output: dev.latvian.kubejs.item.ItemStackJS, input): Internal.CookingRecipeJS;
        /**
        * Adds a smelting recipe to Minecraft.
        * Used by Blast Furnaces.
        */
        blasting(output: dev.latvian.kubejs.item.ItemStackJS, input): Internal.CookingRecipeJS;
        /**
        * Adds a shaped crafting recipe.
        */
        crafting_shaped(output: dev.latvian.kubejs.item.ItemStackJS, pattern): Internal.ShapedRecipeJS;
        /**
        * Adds a shapeless crafting recipe.
        */
        crafting_shapeless(output: dev.latvian.kubejs.item.ItemStackJS, inputs): Internal.ShapelessRecipeJS;
        /**
        * Adds a smelting recipe to Minecraft.
        * Used by Campfire.
        */
        camefire_cooking(output: dev.latvian.kubejs.item.ItemStackJS, input): Internal.CookingRecipeJS;
        /**
        * Adds a stonecutting recipe.
        */
        stonecutting(output: dev.latvian.kubejs.item.ItemStackJS, inputs): Internal.StonecuttingRecipeJS;
        /**
        * Adds a smithing recipe.
        */
        smithing(output: dev.latvian.kubejs.item.ItemStackJS, base): Internal.SmithingRecipeJS;
    }
}
declare namespace Type {
}
declare namespace TSDoc {
}
declare namespace stub.probejs {
    class recipeHolder {
        readonly minecraft : stub.probejs.minecraft
        readonly kubejs : stub.probejs.kubejs
        readonly thermal : stub.probejs.thermal
        readonly custommachinery : stub.probejs.custommachinery
    }
    class minecraft {
        stonecutting(...args: object): Internal.StonecuttingRecipeJS
        crafting_shaped(...args: object): Internal.ShapedRecipeJS
        smithing(...args: object): Internal.SmithingRecipeJS
        crafting_shapeless(...args: object): Internal.ShapelessRecipeJS
        smoking(...args: object): Internal.CookingRecipeJS
        smelting(...args: object): Internal.CookingRecipeJS
        blasting(...args: object): Internal.CookingRecipeJS
        campfire_cooking(...args: object): Internal.CookingRecipeJS
    }
    class kubejs {
        shapeless(...args: object): Internal.ShapelessRecipeJS
        shaped(...args: object): Internal.ShapedRecipeJS
    }
    class thermal {
        rock_gen(...args: object): Internal.RockGenMappingRecipeJS
        chiller(...args: object): Internal.BasicThermalRecipeJS
        insolator_catalyst(...args: object): Internal.CatalystRecipeJS
        insolator(...args: object): Internal.InsolatorRecipeJS
        potion_diffuser_boost(...args: object): Internal.PotionDiffuserBoostRecipeJS
        centrifuge(...args: object): Internal.BasicThermalRecipeJS
        stirling_fuel(...args: object): Internal.FuelRecipeJS
        lapidary_fuel(...args: object): Internal.FuelRecipeJS
        tree_extractor_boost(...args: object): Internal.TreeExtractorBoostRecipeJS
        press(...args: object): Internal.BasicThermalRecipeJS
        crucible(...args: object): Internal.BasicThermalRecipeJS
        sawmill(...args: object): Internal.BasicThermalRecipeJS
        pulverizer(...args: object): Internal.BasicThermalRecipeJS
        smelter(...args: object): Internal.BasicThermalRecipeJS
        pulverizer_catalyst(...args: object): Internal.CatalystRecipeJS
        smelter_catalyst(...args: object): Internal.CatalystRecipeJS
        furnace(...args: object): Internal.BasicThermalRecipeJS
        pyrolyzer(...args: object): Internal.BasicThermalRecipeJS
        fisher_boost(...args: object): Internal.FisherBoostRecipeJS
        compression_fuel(...args: object): Internal.FuelRecipeJS
        brewer(...args: object): Internal.BasicThermalRecipeJS
        magmatic_fuel(...args: object): Internal.FuelRecipeJS
        refinery(...args: object): Internal.BasicThermalRecipeJS
        tree_extractor(...args: object): Internal.TreeExtractorMappingRecipeJS
        numismatic_fuel(...args: object): Internal.FuelRecipeJS
        bottler(...args: object): Internal.BasicThermalRecipeJS
    }
    class custommachinery {
        custom_machine(...args: object): Internal.CustomMachineJSRecipeBuilder
    }
}
