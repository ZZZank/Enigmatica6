/// <reference path="./special.d.ts" />
/**
*/
declare class ResourceLocation extends Document.Object implements Internal.Comparable<ResourceLocation>, Internal.ResourceLocationAccess, Internal.SpecialEquality {
    setPath(arg0: string): void;
    static func_208304_a(arg0: string): ResourceLocation;
    static func_217856_c(arg0: string): boolean;
    handler$ban000$hashCodeHeadInjected(arg0: Internal.CallbackInfoReturnable<any>): void;
    compareTo(arg0: ResourceLocation_): number;
    compareTo(arg0: any): number;
    handler$ban000$hashCodeReturnInjected(arg0: Internal.CallbackInfoReturnable<any>): void;
    static func_217855_b(arg0: string): boolean;
    compareNamespaced(arg0: ResourceLocation_): number;
    static func_195824_a(arg0: string): boolean;
    static func_195826_a(arg0: Internal.StringReader): ResourceLocation;
    static func_240909_b_(arg0: string): boolean;
    setNamespace(arg0: string): void;
    func_110623_a(): string;
    static func_195828_a(arg0: string, arg1: string): ResourceLocation;
    specialEquals(o: any, shallow: boolean): boolean;
    func_110624_b(): string;
    static readonly field_240908_a_: Internal.Codec<ResourceLocation>;
    set path(arg0: string);
    set namespace(arg0: string);
    constructor(arg0: string, arg1: string);
    constructor(arg0: string);
}
type ResourceLocation_ = string | ResourceLocation;
declare class Vec3i extends Document.Object implements Internal.Comparable<Vec3i> {
    func_218138_a(arg0: Internal.IPosition, arg1: boolean): number;
    func_177981_b(arg0: number): Vec3i;
    func_218137_a(arg0: Internal.IPosition, arg1: number): boolean;
    func_229422_x_(): string;
    func_177956_o(): number;
    func_177958_n(): number;
    func_243648_a(arg0: Internal.Direction$Axis_): number;
    compareTo(arg0: any): number;
    compareTo(arg0: Vec3i): number;
    func_218140_a(arg0: number, arg1: number, arg2: number, arg3: boolean): number;
    func_177952_p(): number;
    func_218141_a(arg0: Vec3i, arg1: number): boolean;
    func_218139_n(arg0: Vec3i): number;
    func_177955_d(arg0: Vec3i): Vec3i;
    func_177979_c(arg0: number): Vec3i;
    func_177951_i(arg0: Vec3i): number;
    func_177967_a(arg0: Internal.Direction_, arg1: number): Vec3i;
    func_177977_b(): Vec3i;
    func_177984_a(): Vec3i;
    static readonly field_239781_c_: Internal.Codec<Vec3i>;
    static readonly field_177959_e: Vec3i;
    constructor(arg0: number, arg1: number, arg2: number);
    constructor(arg0: number, arg1: number, arg2: number);
}
type Vec3i_ = Vec3i;
declare interface Color {
    static rgba(r: number, g: number, b: number, a: number): dev.latvian.mods.rhino.mod.util.color.Color;
    static of(o: any): dev.latvian.mods.rhino.mod.util.color.Color;
    static createMapped(o: any, ...names: string[]): dev.latvian.mods.rhino.mod.util.color.Color;
    readonly BLUE_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly GOLD: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly GRAY: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly MAGENTA_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly BLUE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly DARK_AQUA: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly TEXT: {"dark_red":Internal.TextFormatting,"green":Internal.TextFormatting,"underline":Internal.TextFormatting,"dark_green":Internal.TextFormatting,"black":Internal.TextFormatting,"yellow":Internal.TextFormatting,"bold":Internal.TextFormatting,"italic":Internal.TextFormatting,"dark_blue":Internal.TextFormatting,"dark_purple":Internal.TextFormatting,"gold":Internal.TextFormatting,"red":Internal.TextFormatting,"aqua":Internal.TextFormatting,"gray":Internal.TextFormatting,"light_purple":Internal.TextFormatting,"blue":Internal.TextFormatting,"white":Internal.TextFormatting,"dark_aqua":Internal.TextFormatting,"dark_gray":Internal.TextFormatting,"reset":Internal.TextFormatting,"strikethrough":Internal.TextFormatting,"obfuscated":Internal.TextFormatting};
    readonly DYE: {"magenta":Internal.DyeColor,"pink":Internal.DyeColor,"green":Internal.DyeColor,"lime":Internal.DyeColor,"light_gray":Internal.DyeColor,"yellow":Internal.DyeColor,"black":Internal.DyeColor,"light_blue":Internal.DyeColor,"brown":Internal.DyeColor,"cyan":Internal.DyeColor,"orange":Internal.DyeColor,"red":Internal.DyeColor,"gray":Internal.DyeColor,"white":Internal.DyeColor,"blue":Internal.DyeColor,"purple":Internal.DyeColor};
    readonly WHITE_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly DARK_RED: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly LIGHT_PURPLE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly BROWN_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly BLACK: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly GRAY_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly NONE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly LIGHT_BLUE_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly AQUA: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly WHITE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly LIGHT_GRAY_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly BLACK_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly RED_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly PURPLE_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly GREEN_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly PINK_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly DARK_BLUE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly GREEN: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly CYAN_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly RED: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly DARK_PURPLE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly ORANGE_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly YELLOW_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly DARK_GREEN: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly YELLOW: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly LIME_DYE: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly DARK_GRAY: dev.latvian.mods.rhino.mod.util.color.Color;
    readonly MAP: {"":Internal.NoColor,"light_blue_dye":Internal.DyeColor,"BLUE_DYE":Internal.DyeColor,"purple_dye":Internal.DyeColor,"dark_red":Internal.TextFormatting,"lightGrayDye":Internal.DyeColor,"DARK_AQUA":Internal.TextFormatting,"none":Internal.NoColor,"green_dye":Internal.DyeColor,"blackDye":Internal.DyeColor,"dark_blue":Internal.TextFormatting,"red":Internal.TextFormatting,"pink_dye":Internal.DyeColor,"aqua":Internal.TextFormatting,"white":Internal.TextFormatting,"WHITE_DYE":Internal.DyeColor,"dark_gray":Internal.TextFormatting,"LIGHT_PURPLE":Internal.TextFormatting,"BROWN_DYE":Internal.DyeColor,"BLACK":Internal.TextFormatting,"darkPurple":Internal.TextFormatting,"NONE":Internal.NoColor,"LIGHT_BLUE_DYE":Internal.DyeColor,"AQUA":Internal.TextFormatting,"lightBlueDye":Internal.DyeColor,"limeDye":Internal.DyeColor,"PURPLE_DYE":Internal.DyeColor,"GREEN_DYE":Internal.DyeColor,"magenta_dye":Internal.DyeColor,"-":Internal.NoColor,"lime_dye":Internal.DyeColor,"yellowDye":Internal.DyeColor,"grayDye":Internal.DyeColor,"purpleDye":Internal.DyeColor,"DARK_PURPLE":Internal.TextFormatting,"ORANGE_DYE":Internal.DyeColor,"darkGray":Internal.TextFormatting,"brownDye":Internal.DyeColor,"YELLOW":Internal.TextFormatting,"LIME_DYE":Internal.DyeColor,"blueDye":Internal.DyeColor,"white_dye":Internal.DyeColor,"pinkDye":Internal.DyeColor,"blue_dye":Internal.DyeColor,"cyanDye":Internal.DyeColor,"GOLD":Internal.TextFormatting,"GRAY":Internal.TextFormatting,"MAGENTA_DYE":Internal.DyeColor,"BLUE":Internal.TextFormatting,"yellow":Internal.TextFormatting,"darkBlue":Internal.TextFormatting,"transparent":Internal.NoColor,"orange_dye":Internal.DyeColor,"red_dye":Internal.DyeColor,"dark_purple":Internal.TextFormatting,"gold":Internal.TextFormatting,"gray":Internal.TextFormatting,"light_purple":Internal.TextFormatting,"darkRed":Internal.TextFormatting,"greenDye":Internal.DyeColor,"DARK_RED":Internal.TextFormatting,"redDye":Internal.DyeColor,"GRAY_DYE":Internal.DyeColor,"orangeDye":Internal.DyeColor,"yellow_dye":Internal.DyeColor,"black_dye":Internal.DyeColor,"magentaDye":Internal.DyeColor,"WHITE":Internal.TextFormatting,"green":Internal.TextFormatting,"LIGHT_GRAY_DYE":Internal.DyeColor,"BLACK_DYE":Internal.DyeColor,"darkGreen":Internal.TextFormatting,"RED_DYE":Internal.DyeColor,"dark_green":Internal.TextFormatting,"black":Internal.TextFormatting,"lightPurple":Internal.TextFormatting,"PINK_DYE":Internal.DyeColor,"DARK_BLUE":Internal.TextFormatting,"GREEN":Internal.TextFormatting,"darkAqua":Internal.TextFormatting,"gray_dye":Internal.DyeColor,"CYAN_DYE":Internal.DyeColor,"RED":Internal.TextFormatting,"brown_dye":Internal.DyeColor,"cyan_dye":Internal.DyeColor,"blue":Internal.TextFormatting,"whiteDye":Internal.DyeColor,"dark_aqua":Internal.TextFormatting,"YELLOW_DYE":Internal.DyeColor,"DARK_GREEN":Internal.TextFormatting,"DARK_GRAY":Internal.TextFormatting};
}
type Color_ = Color;
declare const Color: Color;
declare class EquipmentSlot extends Internal.Enum<EquipmentSlot> {
    func_188454_b(): number;
    static func_220318_a(arg0: Internal.EquipmentSlotType$Group_, arg1: number): EquipmentSlot;
    static valueOf(arg0: string): EquipmentSlot;
    static values(): EquipmentSlot[];
    static func_188451_a(arg0: string): EquipmentSlot;
    func_188452_c(): number;
    func_188450_d(): string;
    func_188453_a(): Internal.EquipmentSlotType$Group;
    static readonly CHEST: EquipmentSlot;
    static readonly HEAD: EquipmentSlot;
    static readonly OFFHAND: EquipmentSlot;
    static readonly MAINHAND: EquipmentSlot;
    static readonly LEGS: EquipmentSlot;
    static readonly FEET: EquipmentSlot;
}
type EquipmentSlot_ = "mainhand" | "offhand" | "feet" | "legs" | "chest" | "head" | EquipmentSlot;
declare class JavaMath extends Document.Object {
    static multiplyFull(arg0: number, arg1: number): number;
    static copySign(arg0: number, arg1: number): number;
    static copySign(arg0: number, arg1: number): number;
    static log1p(arg0: number): number;
    static expm1(arg0: number): number;
    static cos(arg0: number): number;
    static rint(arg0: number): number;
    static atan(arg0: number): number;
    static ceilDiv(arg0: number, arg1: number): number;
    static ceilDiv(arg0: number, arg1: number): number;
    static ceilDiv(arg0: number, arg1: number): number;
    static nextUp(arg0: number): number;
    static nextUp(arg0: number): number;
    static sqrt(arg0: number): number;
    static ceilDivExact(arg0: number, arg1: number): number;
    static ceilDivExact(arg0: number, arg1: number): number;
    static decrementExact(arg0: number): number;
    static decrementExact(arg0: number): number;
    static absExact(arg0: number): number;
    static absExact(arg0: number): number;
    static exp(arg0: number): number;
    static clamp(arg0: number, arg1: number, arg2: number): number;
    static clamp(arg0: number, arg1: number, arg2: number): number;
    static clamp(arg0: number, arg1: number, arg2: number): number;
    static clamp(arg0: number, arg1: number, arg2: number): number;
    static atan2(arg0: number, arg1: number): number;
    static signum(arg0: number): number;
    static signum(arg0: number): number;
    static tan(arg0: number): number;
    static floorDivExact(arg0: number, arg1: number): number;
    static floorDivExact(arg0: number, arg1: number): number;
    static sinh(arg0: number): number;
    static toDegrees(arg0: number): number;
    static acos(arg0: number): number;
    static ceil(arg0: number): number;
    static divideExact(arg0: number, arg1: number): number;
    static divideExact(arg0: number, arg1: number): number;
    static getExponent(arg0: number): number;
    static getExponent(arg0: number): number;
    static addExact(arg0: number, arg1: number): number;
    static addExact(arg0: number, arg1: number): number;
    static multiplyHigh(arg0: number, arg1: number): number;
    static ulp(arg0: number): number;
    static ulp(arg0: number): number;
    static scalb(arg0: number, arg1: number): number;
    static scalb(arg0: number, arg1: number): number;
    static floorMod(arg0: number, arg1: number): number;
    static floorMod(arg0: number, arg1: number): number;
    static floorMod(arg0: number, arg1: number): number;
    static log(arg0: number): number;
    static log10(arg0: number): number;
    static nextAfter(arg0: number, arg1: number): number;
    static nextAfter(arg0: number, arg1: number): number;
    static multiplyExact(arg0: number, arg1: number): number;
    static multiplyExact(arg0: number, arg1: number): number;
    static multiplyExact(arg0: number, arg1: number): number;
    static cbrt(arg0: number): number;
    static random(): number;
    static tanh(arg0: number): number;
    static min(arg0: number, arg1: number): number;
    static min(arg0: number, arg1: number): number;
    static min(arg0: number, arg1: number): number;
    static min(arg0: number, arg1: number): number;
    static negateExact(arg0: number): number;
    static negateExact(arg0: number): number;
    static hypot(arg0: number, arg1: number): number;
    static pow(arg0: number, arg1: number): number;
    static sin(arg0: number): number;
    static unsignedMultiplyHigh(arg0: number, arg1: number): number;
    static floor(arg0: number): number;
    static subtractExact(arg0: number, arg1: number): number;
    static subtractExact(arg0: number, arg1: number): number;
    static ceilMod(arg0: number, arg1: number): number;
    static ceilMod(arg0: number, arg1: number): number;
    static ceilMod(arg0: number, arg1: number): number;
    static max(arg0: number, arg1: number): number;
    static max(arg0: number, arg1: number): number;
    static max(arg0: number, arg1: number): number;
    static max(arg0: number, arg1: number): number;
    static toIntExact(arg0: number): number;
    static nextDown(arg0: number): number;
    static nextDown(arg0: number): number;
    static toRadians(arg0: number): number;
    static cosh(arg0: number): number;
    static IEEEremainder(arg0: number, arg1: number): number;
    static abs(arg0: number): number;
    static abs(arg0: number): number;
    static abs(arg0: number): number;
    static abs(arg0: number): number;
    static round(arg0: number): number;
    static round(arg0: number): number;
    static floorDiv(arg0: number, arg1: number): number;
    static floorDiv(arg0: number, arg1: number): number;
    static floorDiv(arg0: number, arg1: number): number;
    static incrementExact(arg0: number): number;
    static incrementExact(arg0: number): number;
    static asin(arg0: number): number;
    static fma(arg0: number, arg1: number, arg2: number): number;
    static fma(arg0: number, arg1: number, arg2: number): number;
    static readonly E: 2.718281828459045;
    static readonly PI: 3.141592653589793;
    static readonly TAU: 6.283185307179586;
}
type JavaMath_ = JavaMath;
declare class PonderInputWindowElement extends Internal.AnimatedOverlayElement {
    rightClick(): PonderInputWindowElement;
    withItem(arg0: Internal.ItemStack): PonderInputWindowElement;
    whileSneaking(): PonderInputWindowElement;
    leftClick(): PonderInputWindowElement;
    scroll(): PonderInputWindowElement;
    clone(): any;
    clone(): PonderInputWindowElement;
    showing(arg0: PonderIcons): PonderInputWindowElement;
    withWrench(): PonderInputWindowElement;
    whileCTRL(): PonderInputWindowElement;
    constructor(arg0: Vec3, arg1: PonderPointing);
}
type PonderInputWindowElement_ = PonderInputWindowElement;
declare class Hand extends Internal.Enum<Hand> {
    static valueOf(arg0: string): Hand;
    static values(): Hand[];
    static readonly MAIN_HAND: Hand;
    static readonly OFF_HAND: Hand;
}
type Hand_ = "main_hand" | "off_hand" | Hand;
declare class block extends Document.Object {
    static getMaterial(): Internal.Map<string, Internal.MaterialJS>;
    static getTaggedIds(tag: ResourceLocation_): Internal.List<string>;
    static getBlock(id: ResourceLocation_): Internal.Block;
    static custom(predicate: Internal.BlockPredicate_): Internal.BlockPredicate;
    static getTypeList(): Internal.List<string>;
    static getFacing(): Internal.Map<string, Internal.Direction>;
    static id(id: ResourceLocation_, properties: Internal.Map_<string, any>): Internal.BlockIDPredicate;
    static id(id: ResourceLocation_): Internal.BlockIDPredicate;
    static entity(id: ResourceLocation_): Internal.BlockEntityPredicate;
    get material(): Internal.Map<string, Internal.MaterialJS>;
    get typeList(): Internal.List<string>;
    get facing(): Internal.Map<string, Internal.Direction>;
    constructor();
}
type block_ = block;
declare class fluid extends Document.Object {
    static lava(): Internal.FluidStackJS;
    static lava(amount: number): Internal.FluidStackJS;
    static getType(id: ResourceLocation_): Internal.Fluid;
    static getEmpty(): Internal.FluidStackJS;
    static of(o: Internal.FluidStackJS_): Internal.FluidStackJS;
    static of(o: Internal.FluidStackJS_, amount: number, nbt: Internal.CompoundNBT_): Internal.FluidStackJS;
    static of(o: Internal.FluidStackJS_, nbt: Internal.CompoundNBT_): Internal.FluidStackJS;
    static of(o: Internal.FluidStackJS_, amount: number): Internal.FluidStackJS;
    static exists(id: ResourceLocation_): boolean;
    static getTypes(): Internal.List<string>;
    static water(): Internal.FluidStackJS;
    static water(amount: number): Internal.FluidStackJS;
    static readonly LAVA_ID: ResourceLocation;
    static readonly WATER_ID: ResourceLocation;
    get types(): Internal.List<string>;
    get empty(): Internal.FluidStackJS;
    constructor();
}
type fluid_ = fluid;
declare class NBTIO extends Document.Object {
    static read(file: string): any;
    static read(file: Internal.File): Internal.MapJS;
    static write(file: string, nbt: any): void;
    static write(file: Internal.File, nbt: any): void;
    constructor();
}
type NBTIO_ = NBTIO;
declare class Item extends Document.Object {
    static clearListCache(): void;
    static getList(): Internal.ListJS;
    static getEmpty(): Internal.ItemStackJS;
    static of(in_: Internal.ItemStackJS_, count: number, nbt: Internal.CompoundNBT_): Internal.ItemStackJS;
    static of(in_: Internal.ItemStackJS_, tag: Internal.CompoundNBT_): Internal.ItemStackJS;
    static of(in_: Internal.ItemStackJS_, count: number): Internal.ItemStackJS;
    static of(in_: Internal.ItemStackJS_): Internal.ItemStackJS;
    static getTypeList(): Internal.ListJS;
    static findGroup(id: string): Internal.ItemGroup;
    static isItem(o: any): boolean;
    static getItem(id: ResourceLocation_): Internal.Item;
    static exists(id: ResourceLocation_): boolean;
    static withChance(in_: Internal.ItemStackJS_, c: number): Internal.ItemStackJS;
    static fireworks(properties: Internal.Map_<string, any>): Internal.FireworksJS;
    static withNBT(in_: Internal.ItemStackJS_, nbt: Internal.CompoundNBT_): Internal.ItemStackJS;
    get typeList(): Internal.ListJS;
    get list(): Internal.ListJS;
    get empty(): Internal.ItemStackJS;
    constructor();
}
type Item_ = Item;
declare class BlockPos extends Vec3i {
    func_241872_a(arg0: Internal.Direction$Axis_, arg1: number): BlockPos;
    static func_239588_b_(arg0: BlockPos, arg1: number, arg2: number, arg3: number): Internal.Stream<BlockPos>;
    func_177971_a(arg0: Vec3i): BlockPos;
    static func_239583_a_(arg0: BlockPos, arg1: number, arg2: number, arg3: number): Internal.Iterable<BlockPos>;
    static func_239585_a_(arg0: Internal.Random, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.Iterable<BlockPos>;
    static func_239581_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<BlockPos>;
    static func_229383_a_(arg0: Internal.MutableBoundingBox): Internal.Stream<BlockPos>;
    func_177968_d(): BlockPos;
    static func_218288_f(arg0: number): number;
    func_177965_g(arg0: number): BlockPos;
    static func_218287_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.Stream<BlockPos>;
    static func_218283_e(arg0: number): BlockPos;
    func_177985_f(arg0: number): BlockPos;
    func_190942_a(arg0: Internal.Rotation_): BlockPos;
    static func_191531_b(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.Iterable<BlockPos>;
    static func_218289_a(arg0: number, arg1: Internal.Direction_): number;
    func_177967_a(arg0: Internal.Direction_, arg1: number): BlockPos;
    func_177964_d(arg0: number): BlockPos;
    static func_218281_b(arg0: BlockPos, arg1: BlockPos): Internal.Stream<BlockPos>;
    static func_218282_d(arg0: number): number;
    func_177963_a(arg0: number, arg1: number, arg2: number): BlockPos;
    func_177984_a(): BlockPos;
    func_177981_b(arg0: number): BlockPos;
    func_177982_a(arg0: number, arg1: number, arg2: number): BlockPos;
    static func_218291_a(arg0: number, arg1: number, arg2: number, arg3: number): number;
    static func_218290_b(arg0: number): number;
    func_239590_i_(): Internal.BlockPos$Mutable;
    func_185334_h(): BlockPos;
    static func_239584_a_(arg0: BlockPos, arg1: number, arg2: number, arg3: Internal.Predicate_<BlockPos_>): Internal.Optional<BlockPos>;
    func_177955_d(arg0: Vec3i): BlockPos;
    func_177979_c(arg0: number): BlockPos;
    func_177978_c(): BlockPos;
    func_177976_e(): BlockPos;
    static func_243514_a(arg0: BlockPos, arg1: number, arg2: Internal.Direction_, arg3: Internal.Direction_): Internal.Iterable<Internal.BlockPos$Mutable>;
    func_177974_f(): BlockPos;
    func_177977_b(): BlockPos;
    static func_218278_a(arg0: BlockPos, arg1: BlockPos): Internal.Iterable<BlockPos>;
    func_177972_a(arg0: Internal.Direction_): BlockPos;
    static func_218274_c(arg0: number): number;
    static func_218276_a(arg0: number, arg1: number, arg2: number): number;
    func_177973_b(arg0: Vec3i): BlockPos;
    func_218275_a(): number;
    func_177970_e(arg0: number): BlockPos;
    static readonly field_177992_a: BlockPos;
    static readonly field_239578_a_: Internal.Codec<BlockPos>;
    constructor(arg0: Vec3i);
    constructor(arg0: Internal.IPosition);
    constructor(arg0: Vec3);
    constructor(arg0: number, arg1: number, arg2: number);
    constructor(arg0: number, arg1: number, arg2: number);
}
type BlockPos_ = BlockPos;
declare class text extends Document.Object {
    static green(text: any): Internal.Text;
    static string(text: any): Internal.Text;
    static darkGreen(text: any): Internal.Text;
    static lightPurple(text: any): Internal.Text;
    static yellow(text: any): Internal.Text;
    static black(text: any): Internal.Text;
    static darkBlue(text: any): Internal.Text;
    static translate(key: string, ...objects: any[]): Internal.Text;
    static translate(key: string): Internal.Text;
    static darkAqua(text: any): Internal.Text;
    static gold(text: any): Internal.Text;
    static red(text: any): Internal.Text;
    static aqua(text: any): Internal.Text;
    static gray(text: any): Internal.Text;
    static white(text: any): Internal.Text;
    static blue(text: any): Internal.Text;
    static darkRed(text: any): Internal.Text;
    static keybind(keybind: string): Internal.Text;
    static of(object: any): Internal.Text;
    static darkGray(text: any): Internal.Text;
    static darkPurple(text: any): Internal.Text;
    static join(separator: Internal.Text_, texts: Internal.Iterable_<Internal.Text_>): Internal.Text;
    constructor();
}
type text_ = text;
declare class PonderPointing extends Internal.Enum<PonderPointing> implements Internal.IStringSerializable {
    getCombinedDirection(arg0: Internal.Direction_): Internal.Direction;
    getXRotation(): number;
    func_176610_l(): string;
    static valueOf(arg0: string): PonderPointing;
    static values(): PonderPointing[];
    static readonly DOWN: PonderPointing;
    static readonly LEFT: PonderPointing;
    static readonly RIGHT: PonderPointing;
    static readonly UP: PonderPointing;
    get xRotation(): number;
}
type PonderPointing_ = "up" | "left" | "down" | "right" | PonderPointing;
declare class JsonIO extends Document.Object {
    static read(file: string): Internal.MapJS;
    static read(file: Internal.File): Internal.MapJS;
    static write(file: string, json: any): void;
    static write(file: Internal.File, json: any): void;
    constructor();
}
type JsonIO_ = JsonIO;
declare interface AABB {
    static ofBlock(pos: BlockPos): Internal.AxisAlignedBB;
    static ofSize(x: number, y: number, z: number): Internal.AxisAlignedBB;
    static of(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number): Internal.AxisAlignedBB;
    static wrap(o: any): Internal.AxisAlignedBB;
    static ofBlocks(pos1: BlockPos, pos2: BlockPos): Internal.AxisAlignedBB;
    readonly CUBE: Internal.AxisAlignedBB;
    readonly EMPTY: Internal.AxisAlignedBB;
}
type AABB_ = AABB;
declare const AABB: AABB;
declare class ingredient extends Document.Object {
    static customNBT(in_: Internal.IngredientJS_, predicate: Internal.Predicate_<Internal.CompoundNBT_>): Internal.IngredientJS;
    static getAll(): Internal.IngredientJS;
    static matchAny(objects: any): Internal.IngredientJS;
    static isIngredient(o: any): boolean;
    static custom(in_: Internal.IngredientJS_, predicate: Internal.Predicate_<Internal.ItemStackJS_>): Internal.IngredientJS;
    static custom(predicate: Internal.Predicate_<Internal.ItemStackJS_>): Internal.IngredientJS;
    static of(object: any, count: number): Internal.IngredientJS;
    static of(object: any): Internal.IngredientJS;
    static registerCustomIngredientAction(id: string, callback: Internal.CustomIngredientActionCallback_): void;
    static getNone(): Internal.IngredientJS;
    get all(): Internal.IngredientJS;
    get none(): Internal.IngredientJS;
    constructor();
}
type ingredient_ = ingredient;
declare class ParrotElement extends Internal.AnimatedSceneElement {
    getRotation(): Vec3;
    static create(arg0: Vec3, arg1: java_.util.function_.Supplier_<Internal.ParrotElement$ParrotPose_>): ParrotElement;
    setPositionOffset(arg0: Vec3, arg1: boolean): void;
    setRotation(arg0: Vec3, arg1: boolean): void;
    setPose(arg0: Internal.ParrotElement$ParrotPose): void;
    getPositionOffset(): Vec3;
    get rotation(): Vec3;
    get positionOffset(): Vec3;
    set pose(arg0: Internal.ParrotElement$ParrotPose);
}
type ParrotElement_ = ParrotElement;
declare class utils extends Document.Object {
    static getSystemTime(): number;
    static getWorld(world: Internal.World): Internal.WorldJS;
    static listOrSelf(o: any): Internal.ListJS;
    static getStat(id: ResourceLocation_): Internal.Stat<ResourceLocation>;
    static parseDouble(object: any, def: number): number;
    static getToolType(id: string): ToolType;
    static emptyList<T_>(): Internal.List<T_>;
    static getRandom(): Internal.Random;
    static randomOf(random: Internal.Random, objects: Internal.Collection<any>): any;
    static getClientWorld(): Internal.WorldJS;
    static emptyMap<K_, V_>(): Internal.Map<K_, V_>;
    static copy(o: any): any;
    static id(namespace: string, path: string): ResourceLocation;
    static id(id: ResourceLocation_): ResourceLocation;
    static listOf(o: any): Internal.ListJS;
    static rollChestLoot(id: ResourceLocation_): Internal.ListJS;
    static rollChestLoot(id: ResourceLocation_, entity: Internal.EntityJS): Internal.ListJS;
    static getServer(): Internal.ServerJS;
    static newCountingMap(): Internal.CountingMap;
    static createConsole(name: string): Internal.ConsoleJS;
    static newMap(): Internal.MapJS;
    static newList(): Internal.ListJS;
    static parseInt(object: any, def: number): number;
    static isWrapped(o: any): boolean;
    static regex(s: any): Internal.Pattern;
    static regex(pattern: string, flags: number): Internal.Pattern;
    static newRandom(seed: number): Internal.Random;
    static queueIO(runnable: Internal.Runnable_): void;
    static mapOf(o: any): Internal.MapJS;
    static getSound(id: ResourceLocation_): Internal.SoundEvent;
    get random(): Internal.Random;
    get server(): Internal.ServerJS;
    get clientWorld(): Internal.WorldJS;
    get systemTime(): number;
    constructor();
}
type utils_ = utils;
declare class JsonUtils extends Document.Object {
    static toPrettyString(json: Internal.JsonElement): string;
    static toString(json: Internal.JsonElement): string;
    static copy(json: Internal.JsonElement): Internal.JsonElement;
    static parse(string: string): any;
    constructor();
}
type JsonUtils_ = JsonUtils;
declare class Result extends Document.Object {
    static success(): Result;
    static error(arg0: Internal.Text_): Result;
}
type Result_ = Result;
declare class CarvingGenerationStep extends Internal.Enum<CarvingGenerationStep> implements Internal.IStringSerializable {
    static func_236075_a_(arg0: string): CarvingGenerationStep;
    func_176610_l(): string;
    func_222671_a(): string;
    static valueOf(arg0: string): CarvingGenerationStep;
    static values(): CarvingGenerationStep[];
    static readonly LIQUID: CarvingGenerationStep;
    static readonly AIR: CarvingGenerationStep;
    static readonly field_236074_c_: Internal.Codec<CarvingGenerationStep>;
}
type CarvingGenerationStep_ = "air" | "liquid" | CarvingGenerationStep;
declare class PonderIcons extends Document.Object implements Internal.IScreenRenderable {
    bind(): void;
    asStencil(): Internal.DelegatedStencilElement;
    draw(arg0: Internal.MatrixStack, arg1: Internal.AbstractGui, arg2: number, arg3: number): void;
    draw(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number): void;
    draw(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
    static readonly I_RESPECT_NBT: PonderIcons;
    static readonly I_3x3: PonderIcons;
    static readonly I_INSERTED: PonderIcons;
    static readonly I_CONFIG_SAVE: PonderIcons;
    static readonly I_FOLLOW_DIAGONAL: PonderIcons;
    static readonly I_FX_SURFACE_OFF: PonderIcons;
    static readonly I_CART_ROTATE: PonderIcons;
    static readonly I_DONT_REPLACE: PonderIcons;
    static readonly I_FX_SURFACE_ON: PonderIcons;
    static readonly I_TUNNEL_RANDOMIZE: PonderIcons;
    static readonly I_MTD_SLOW_MODE: PonderIcons;
    static readonly I_ADD_INVERTED_ATTRIBUTE: PonderIcons;
    static readonly I_TOOL_DEPLOY: PonderIcons;
    static readonly I_ROTATE_CCW: PonderIcons;
    static readonly I_PATTERN_SOLID: PonderIcons;
    static readonly I_CLEAR: PonderIcons;
    static readonly I_WHITELIST_AND: PonderIcons;
    static readonly I_REPLACE_EMPTY: PonderIcons;
    static readonly I_CONFIRM: PonderIcons;
    static readonly I_PATTERN_CHANCE_75: PonderIcons;
    static readonly I_WHITELIST_NOT: PonderIcons;
    static readonly I_MTD_CLOSE: PonderIcons;
    static readonly I_PAUSE: PonderIcons;
    static readonly I_PRIORITY_VERY_HIGH: PonderIcons;
    static readonly I_TRASH: PonderIcons;
    static readonly I_MOVE_PLACE_RETURNED: PonderIcons;
    static readonly I_OPEN_FOLDER: PonderIcons;
    static readonly I_DICE: PonderIcons;
    static readonly I_SKIP_TILES: PonderIcons;
    static readonly I_MTD_SCAN: PonderIcons;
    static readonly I_CONFIG_DISCARD: PonderIcons;
    static readonly I_PLACE: PonderIcons;
    static readonly I_TOOL_ROTATE: PonderIcons;
    static readonly I_RMB: PonderIcons;
    static readonly I_TUNNEL_FORCED_ROUND_ROBIN: PonderIcons;
    static readonly I_WHITELIST: PonderIcons;
    static readonly I_FLIP: PonderIcons;
    static readonly I_ROTATE_PLACE: PonderIcons;
    static readonly I_PLACEMENT_SETTINGS: PonderIcons;
    static readonly I_REFRESH: PonderIcons;
    static readonly I_FILL: PonderIcons;
    static readonly I_FX_BLEND: PonderIcons;
    static readonly I_SKIP_MISSING: PonderIcons;
    static readonly I_CONFIG_OPEN: PonderIcons;
    static readonly I_PATTERN_CHANCE_50: PonderIcons;
    static readonly I_PRIORITY_HIGH: PonderIcons;
    static readonly I_CART_ROTATE_PAUSED: PonderIcons;
    static readonly I_TUNNEL_ROUND_ROBIN: PonderIcons;
    static readonly ICON_ATLAS: ResourceLocation;
    static readonly I_CONFIG_PREV: PonderIcons;
    static readonly I_TUNNEL_PREFER_NEAREST: PonderIcons;
    static readonly I_MTD_USER_MODE: PonderIcons;
    static readonly I_WHITELIST_OR: PonderIcons;
    static readonly I_ARM_FORCED_ROUND_ROBIN: PonderIcons;
    static readonly I_CONFIG_LOCKED: PonderIcons;
    static readonly I_TUNNEL_FORCED_SPLIT: PonderIcons;
    static readonly I_BLACKLIST: PonderIcons;
    static readonly I_REPLACE_SOLID: PonderIcons;
    static readonly I_REPLACE: PonderIcons;
    static readonly I_FX_FIELD_ON: PonderIcons;
    static readonly I_ROTATE_NEVER_PLACE: PonderIcons;
    static readonly I_TOOL_MOVE_XZ: PonderIcons;
    static readonly I_FX_FIELD_OFF: PonderIcons;
    static readonly I_PLAY: PonderIcons;
    static readonly I_MOVE_NEVER_PLACE: PonderIcons;
    static readonly I_FLATTEN: PonderIcons;
    static readonly I_SCROLL: PonderIcons;
    static readonly I_MTD_RIGHT: PonderIcons;
    static readonly I_NONE: PonderIcons;
    static readonly I_TUNNEL_SYNCHRONIZE: PonderIcons;
    static readonly I_PRIORITY_VERY_LOW: PonderIcons;
    static readonly I_TOOL_MIRROR: PonderIcons;
    static readonly I_TUNNEL_SPLIT: PonderIcons;
    static readonly I_FX_BLEND_OFF: PonderIcons;
    static readonly I_CART_ROTATE_LOCKED: PonderIcons;
    static readonly I_PRIORITY_LOW: PonderIcons;
    static readonly I_CONFIG_BACK: PonderIcons;
    static readonly I_MTD_REPLAY: PonderIcons;
    static readonly I_DISABLE: PonderIcons;
    static readonly I_CONFIG_NEXT: PonderIcons;
    static readonly I_CONFIG_UNLOCKED: PonderIcons;
    static readonly I_TOOL_MOVE_Y: PonderIcons;
    static readonly I_PASSIVE: PonderIcons;
    static readonly I_MOVE_PLACE: PonderIcons;
    static readonly I_ADD: PonderIcons;
    static readonly I_MTD_LEFT: PonderIcons;
    static readonly I_PATTERN_CHECKERED_INVERSED: PonderIcons;
    static readonly I_ATTACHED: PonderIcons;
    static readonly I_ROTATE_PLACE_RETURNED: PonderIcons;
    static readonly I_SCHEMATIC: PonderIcons;
    static readonly I_CENTERED: PonderIcons;
    static readonly I_PATTERN_CHANCE_25: PonderIcons;
    static readonly I_PATTERN_CHECKERED: PonderIcons;
    static readonly I_STOP: PonderIcons;
    static readonly I_ARM_ROUND_ROBIN: PonderIcons;
    static readonly I_ACTIVE: PonderIcons;
    static readonly I_LMB: PonderIcons;
    static readonly I_MINUTE_HAND_FIRST: PonderIcons;
    static readonly I_ARM_PREFER_FIRST: PonderIcons;
    static readonly I_HOUR_HAND_FIRST: PonderIcons;
    static readonly I_IGNORE_NBT: PonderIcons;
    static readonly I_OVERLAY: PonderIcons;
    static readonly I_TARGET: PonderIcons;
    static readonly I_FOLLOW_MATERIAL: PonderIcons;
    static readonly I_TOOLBOX: PonderIcons;
    static readonly I_HOUR_HAND_FIRST_24: PonderIcons;
    static readonly I_CONFIG_RESET: PonderIcons;
    static readonly I_REPLACE_ANY: PonderIcons;
    constructor(arg0: number, arg1: number);
}
type PonderIcons_ = PonderIcons;
declare class Platform extends Document.Object {
    static isDevelopmentEnvironment(): boolean;
    static isClientEnvironment(): boolean;
    static getName(): string;
    static getInfo(modID: string): Internal.PlatformWrapper$ModInfo;
    static getMods(): Internal.Map<string, Internal.PlatformWrapper$ModInfo>;
    static getList(): Internal.Set<string>;
    static isForge(): boolean;
    static getModVersion(): string;
    static isLoaded(modId: string): boolean;
    static getMcVersion(): string;
    static isFabric(): boolean;
    get mods(): Internal.Map<string, Internal.PlatformWrapper$ModInfo>;
    get modVersion(): string;
    get developmentEnvironment(): boolean;
    get forge(): boolean;
    get fabric(): boolean;
    get mcVersion(): string;
    get clientEnvironment(): boolean;
    get name(): string;
    get list(): Internal.Set<string>;
    constructor();
}
type Platform_ = Platform;
declare class ToolType extends Document.Object {
    static create(forgeName: string, fabricTag: java_.util.function_.Supplier_<Internal.ITag_<Internal.Item_>>): ToolType;
    static byName(forgeName: string): ToolType;
    readonly fabricTag: java_.util.function_.Supplier<Internal.ITag<Internal.Item>>;
    readonly forgeName: string;
    static readonly PICKAXE: ToolType;
    static readonly SHOVEL: ToolType;
    static readonly AXE: ToolType;
    static readonly HOE: ToolType;
}
type ToolType_ = ToolType;
declare class Vec3 extends Document.Object implements Internal.IPosition {
    func_72444_a(arg0: Vec3): Vec3;
    func_216370_a(arg0: Internal.Direction$Axis_): number;
    static func_237490_a_(arg0: Vec3i, arg1: number): Vec3;
    static func_237491_b_(arg0: Vec3i): Vec3;
    static func_237492_c_(arg0: Vec3i): Vec3;
    func_216371_e(): Vec3;
    func_237488_a_(arg0: Internal.IPosition, arg1: number): boolean;
    func_216372_d(arg0: number, arg1: number, arg2: number): Vec3;
    func_197746_a(arg0: Internal.EnumSet<Internal.Direction$Axis>): Vec3;
    func_242988_c(arg0: number): Vec3;
    func_216369_h(arg0: Vec3): Vec3;
    func_178788_d(arg0: Vec3): Vec3;
    func_178787_e(arg0: Vec3): Vec3;
    func_178789_a(arg0: number): Vec3;
    func_178786_a(arg0: number, arg1: number, arg2: number): Vec3;
    func_178785_b(arg0: number): Vec3;
    func_72430_b(arg0: Vec3): number;
    func_72431_c(arg0: Vec3): Vec3;
    func_72432_b(): Vec3;
    func_186678_a(arg0: number): Vec3;
    func_72433_c(): number;
    func_82615_a(): number;
    static func_237487_a_(arg0: number): Vec3;
    func_72436_e(arg0: Vec3): number;
    static func_237489_a_(arg0: Vec3i): Vec3;
    func_82616_c(): number;
    func_82617_b(): number;
    func_72438_d(arg0: Vec3): number;
    static func_189986_a(arg0: number, arg1: number): Vec3;
    func_189985_c(): number;
    func_186679_c(arg0: number, arg1: number, arg2: number): number;
    static func_189984_a(arg0: Internal.Vector2f): Vec3;
    func_72441_c(arg0: number, arg1: number, arg2: number): Vec3;
    readonly field_72450_a: number;
    static readonly field_186680_a: Vec3;
    readonly field_72448_b: number;
    readonly field_72449_c: number;
    constructor(arg0: number, arg1: number, arg2: number);
    constructor(arg0: Internal.Vector3f);
}
type Vec3_ = Vec3;
declare class PonderPalette extends Internal.Enum<PonderPalette> {
    getColorObject(): com.simibubi.create.foundation.utility.Color;
    static valueOf(arg0: string): PonderPalette;
    static values(): PonderPalette[];
    getColor(): number;
    static readonly RED: PonderPalette;
    static readonly WHITE: PonderPalette;
    static readonly INPUT: PonderPalette;
    static readonly MEDIUM: PonderPalette;
    static readonly BLUE: PonderPalette;
    static readonly OUTPUT: PonderPalette;
    static readonly SLOW: PonderPalette;
    static readonly BLACK: PonderPalette;
    static readonly FAST: PonderPalette;
    static readonly GREEN: PonderPalette;
    get colorObject(): com.simibubi.create.foundation.utility.Color;
    get color(): number;
}
type PonderPalette_ = "white" | "black" | "red" | "green" | "blue" | "slow" | "medium" | "fast" | "input" | "output" | PonderPalette;
declare interface uuid {
    static digits(sb: Internal.StringBuilder, val: number, digits: number): void;
    static toString(id: Internal.UUID): string;
    static fromString(o: any): Internal.UUID;
}
type uuid_ = uuid;
declare const uuid: uuid;
declare interface NBT {
    static longArrayTag(v: number[]): Internal.INBT;
    static byteArrayTag(v: number[]): Internal.INBT;
    static b(v: number): Internal.INBT;
    static fromTag(t: Internal.INBT): any;
    static listTag(): Internal.INBT;
    static d(v: number): Internal.INBT;
    static f(v: number): Internal.INBT;
    static compoundTag(): Internal.INBT;
    static toTag(v: any): Internal.INBT;
    static i(v: number): Internal.INBT;
    static shortTag(v: number): Internal.INBT;
    static l(v: number): Internal.INBT;
    static floatTag(v: number): Internal.INBT;
    static s(v: number): Internal.INBT;
    static la(v: number[]): Internal.INBT;
    static longTag(v: number): Internal.INBT;
    static intArrayTag(v: number[]): Internal.INBT;
    static ia(v: number[]): Internal.INBT;
    static intTag(v: number): Internal.INBT;
    static doubleTag(v: number): Internal.INBT;
    static byteTag(v: number): Internal.INBT;
    static stringTag(v: string): Internal.INBT;
    static ba(v: number[]): Internal.INBT;
}
type NBT_ = NBT;
declare const NBT: NBT;
declare interface Facing {
    readonly ALL: {"east":Internal.Direction,"south":Internal.Direction,"north":Internal.Direction,"west":Internal.Direction,"up":Internal.Direction,"down":Internal.Direction};
    readonly DOWN: Internal.Direction;
    readonly south: Internal.Direction;
    readonly north: Internal.Direction;
    readonly WEST: Internal.Direction;
    readonly down: Internal.Direction;
    readonly east: Internal.Direction;
    readonly NORTH: Internal.Direction;
    readonly west: Internal.Direction;
    readonly up: Internal.Direction;
    readonly UP: Internal.Direction;
    readonly SOUTH: Internal.Direction;
    readonly EAST: Internal.Direction;
}
type Facing_ = Facing;
declare const Facing: Facing;
declare class BiomeDictionary extends Document.Object {
    static getBiomeType(o: any): Internal.BiomeDictionary$Type;
    static printTags(biome: ResourceLocation_): void;
    static printBiomes(type: Internal.BiomeDictionary$Type): void;
    static addTypes(biomes: ResourceLocation[], tags: Internal.BiomeDictionary$Type[]): void;
    constructor();
}
type BiomeDictionary_ = BiomeDictionary;
declare class Rarity extends Document.Object {
    static readonly RARE: Rarity;
    static readonly EPIC: Rarity;
    static readonly UNCOMMON: Rarity;
    static readonly COMMON: Rarity;
    readonly rarity: Internal.Rarity;
}
type Rarity_ = Rarity;
declare class DecorationGenerationStep extends Internal.Enum<DecorationGenerationStep> {
    static valueOf(arg0: string): DecorationGenerationStep;
    static values(): DecorationGenerationStep[];
    static readonly RAW_GENERATION: DecorationGenerationStep;
    static readonly UNDERGROUND_STRUCTURES: DecorationGenerationStep;
    static readonly LOCAL_MODIFICATIONS: DecorationGenerationStep;
    static readonly TOP_LAYER_MODIFICATION: DecorationGenerationStep;
    static readonly UNDERGROUND_DECORATION: DecorationGenerationStep;
    static readonly LAKES: DecorationGenerationStep;
    static readonly SURFACE_STRUCTURES: DecorationGenerationStep;
    static readonly STRONGHOLDS: DecorationGenerationStep;
    static readonly VEGETAL_DECORATION: DecorationGenerationStep;
    static readonly UNDERGROUND_ORES: DecorationGenerationStep;
}
type DecorationGenerationStep_ = "raw_generation" | "lakes" | "local_modifications" | "underground_structures" | "surface_structures" | "strongholds" | "underground_ores" | "underground_decoration" | "vegetal_decoration" | "top_layer_modification" | DecorationGenerationStep;
declare namespace net.minecraft.client.resources {
    class Language extends Document.Object implements Internal.Language, Internal.Comparable<net.minecraft.client.resources.Language> {
        getName(): string;
        getRegion(): string;
        func_135035_b(): boolean;
        getJavaLocale(): Internal.Locale;
        compareTo(arg0: net.minecraft.client.resources.Language): number;
        compareTo(arg0: any): number;
        getCode(): string;
        get code(): string;
        get javaLocale(): Internal.Locale;
        get name(): string;
        get region(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: string, arg2: string, arg3: boolean);
    }
    type Language_ = Language;
}
declare namespace fr.frinn.custommachinery.common.integration.kubejs.function_ {
    interface RecipeFunction extends Internal.Function<fr.frinn.custommachinery.common.integration.kubejs.function_.Context, Result> {
    }
    type RecipeFunction_ = RecipeFunction;
    class Context extends Document.Object {
        getRemainingTime(): number;
        getTile(): Internal.MachineTile;
        getMachine(): Internal.MachineJS;
        get machine(): Internal.MachineJS;
        get tile(): Internal.MachineTile;
        get remainingTime(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
    }
    type Context_ = Context;
}
declare namespace vazkii.botania.mixin {
    interface AccessorAbstractFurnaceTileEntity {
        botania_canSmelt(arg0: Internal.IRecipe<any>): boolean;
        getRecipeType(): Internal.IRecipeType<Internal.AbstractCookingRecipe>;
        setBurnTime(arg0: number): void;
        getBurnTime(): number;
        setCookTime(arg0: number): void;
        getCurrentCookTime(): number;
        getCookTimeTotal(): number;
    }
    type AccessorAbstractFurnaceTileEntity_ = AccessorAbstractFurnaceTileEntity;
}
declare namespace net.minecraft.client.gui.widget.button {
    class Button extends Internal.AbstractButton implements Internal.ButtonAccessor {
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212927_b(arg0: number, arg1: number): void;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        setOnPress(arg0: Internal.Button$IPressable_): void;
        func_231042_a_(arg0: string, arg1: number): boolean;
        static readonly field_238486_s_: Internal.Button$ITooltip;
        field_230697_t_: Internal.Button$IPressable;
        set onPress(arg0: Internal.Button$IPressable_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.ITextComponent, arg5: Internal.Button$IPressable);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.ITextComponent, arg5: Internal.Button$IPressable, arg6: Internal.Button$ITooltip);
    }
    type Button_ = Button;
}
declare namespace Internal {
    class StrayEntity extends Internal.AbstractSkeletonEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        static func_223327_b(arg0: Internal.EntityType_<Internal.StrayEntity_>, arg1: Internal.IServerWorld_, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.StrayEntity>, arg1: Internal.World);
    }
    type StrayEntity_ = StrayEntity;
    class RPConfig$KeyBindings extends Document.Object implements Internal.ConfigData {
        validatePostLoad(): void;
        dismount(): boolean;
        secondarySprint(): boolean;
        toggleNarrator: boolean;
        standaloneModifiersDoNotConflictWithCombinations: boolean;
        toggleDebugInfo: boolean;
        doubleTapSprintingWhileFlying: boolean;
        toggleGUI: boolean;
        pause: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RPConfig$KeyBindings_ = RPConfig$KeyBindings;
    class Commands extends Document.Object {
        func_197051_a(arg0: Internal.ServerPlayerEntity): void;
        static func_242986_b(): void;
        static func_227481_a_<S_>(arg0: Internal.ParseResults<S_>): Internal.CommandSyntaxException;
        static func_197056_a<T_>(arg0: string, arg1: Internal.ArgumentType_<T_>): Internal.RequiredArgumentBuilder<Internal.CommandSource, T_>;
        func_197054_a(): Internal.CommandDispatcher<Internal.CommandSource>;
        func_197059_a(arg0: Internal.CommandSource, arg1: string): number;
        static func_197057_a(arg0: string): Internal.LiteralArgumentBuilder<Internal.CommandSource>;
        static func_212590_a(arg0: Internal.Commands$IParser_): Internal.Predicate<string>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Commands$EnvironmentType);
    }
    type Commands_ = Commands;
    class ClonedChunkSection extends Document.Object {
        init(pos: Internal.SectionPos): void;
        getBlockPalette(): Internal.ClonedPalette<Internal.BlockState>;
        getPosition(): Internal.SectionPos;
        getBlockEntity(x: number, y: number, z: number): Internal.TileEntity;
        acquireReference(): void;
        getBiomeForNoiseGen(x: number, y: number, z: number): Internal.Biome;
        getBlockData(): Internal.BitArray;
        getLastUsedTimestamp(): number;
        getBackingCache(): Internal.ClonedChunkSectionCache;
        getLightLevel(type: Internal.LightType_, x: number, y: number, z: number): number;
        setLastUsedTimestamp(timestamp: number): void;
        getBlockState(x: number, y: number, z: number): Internal.BlockState;
        releaseReference(): boolean;
        get lastUsedTimestamp(): number;
        get backingCache(): Internal.ClonedChunkSectionCache;
        get position(): Internal.SectionPos;
        get blockPalette(): Internal.ClonedPalette<Internal.BlockState>;
        get blockData(): Internal.BitArray;
        set lastUsedTimestamp(timestamp: number);
    }
    type ClonedChunkSection_ = ClonedChunkSection;
    class StringBuilder extends Internal.AbstractStringBuilder implements Internal.Appendable, Internal.Serializable, Internal.Comparable<Internal.StringBuilder>, Internal.CharSequence {
        deleteCharAt(arg0: number): Internal.StringBuilder;
        appendCodePoint(arg0: number): Internal.StringBuilder;
        repeat(arg0: Internal.CharSequence, arg1: number): Internal.StringBuilder;
        repeat(arg0: number, arg1: number): Internal.StringBuilder;
        isEmpty(): boolean;
        replace(arg0: number, arg1: number, arg2: string): Internal.StringBuilder;
        insert(arg0: number, arg1: Internal.CharSequence): Internal.StringBuilder;
        insert(arg0: number, arg1: string): Internal.StringBuilder;
        insert(arg0: number, arg1: string[]): Internal.StringBuilder;
        insert(arg0: number, arg1: any): Internal.StringBuilder;
        insert(arg0: number, arg1: string[], arg2: number, arg3: number): Internal.StringBuilder;
        insert(arg0: number, arg1: number): Internal.StringBuilder;
        insert(arg0: number, arg1: number): Internal.StringBuilder;
        insert(arg0: number, arg1: number): Internal.StringBuilder;
        insert(arg0: number, arg1: number): Internal.StringBuilder;
        insert(arg0: number, arg1: string): Internal.StringBuilder;
        insert(arg0: number, arg1: boolean): Internal.StringBuilder;
        insert(arg0: number, arg1: Internal.CharSequence, arg2: number, arg3: number): Internal.StringBuilder;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.StringBuilder): number;
        reverse(): Internal.StringBuilder;
        delete(arg0: number, arg1: number): Internal.StringBuilder;
        append(arg0: Internal.StringBuffer): Internal.StringBuilder;
        append(arg0: Internal.CharSequence): Internal.StringBuilder;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.StringBuilder;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: string[]): Internal.StringBuilder;
        append(arg0: string): Internal.StringBuilder;
        append(arg0: any): Internal.StringBuilder;
        append(arg0: string): Internal.Appendable;
        append(arg0: string): Internal.StringBuilder;
        append(arg0: number): Internal.StringBuilder;
        append(arg0: number): Internal.StringBuilder;
        append(arg0: number): Internal.StringBuilder;
        append(arg0: number): Internal.StringBuilder;
        append(arg0: boolean): Internal.StringBuilder;
        append(arg0: string[], arg1: number, arg2: number): Internal.StringBuilder;
        get empty(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CharSequence);
        constructor(arg0: string);
        constructor(arg0: number);
        constructor();
    }
    type StringBuilder_ = StringBuilder;
    abstract class CustomBuffer <SELF> extends Internal.Pointer$Default {
        address(arg0: number): number;
        compact(): SELF;
        sizeof(): number;
        address0(): number;
        hasRemaining(): boolean;
        clear(): SELF;
        duplicate(): SELF;
        remaining(): number;
        put(arg0: SELF): SELF;
        capacity(): number;
        rewind(): SELF;
        slice(): SELF;
        slice(arg0: number, arg1: number): SELF;
        limit(): number;
        limit(arg0: number): SELF;
        reset(): SELF;
        position(): number;
        position(arg0: number): SELF;
        free(): void;
        flip(): SELF;
        mark(): SELF;
    }
    type CustomBuffer_<SELF> = CustomBuffer<SELF>;
    class BoostHelper extends Document.Object {
        func_233621_b_(arg0: Internal.CompoundNBT_): void;
        func_233620_b_(): boolean;
        func_233619_a_(arg0: boolean): void;
        func_233618_a_(arg0: Internal.CompoundNBT_): void;
        func_233616_a_(): void;
        func_233617_a_(arg0: Internal.Random): boolean;
        field_233610_a_: boolean;
        field_233612_c_: number;
        field_233611_b_: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityDataManager, arg1: Internal.DataParameter<number>, arg2: Internal.DataParameter<boolean>);
    }
    type BoostHelper_ = BoostHelper;
    interface IClientPlayNetHandler extends Internal.INetHandler {
        func_200232_a(arg0: Internal.SPlayerLookPacket): void;
        func_225312_a(arg0: Internal.SPlayerDiggingPacket): void;
        func_217273_a(arg0: Internal.SMerchantOffersPacket): void;
        func_230488_a_(arg0: Internal.SWorldSpawnChangedPacket): void;
        func_147249_a(arg0: Internal.SUpdateHealthPacket): void;
        func_217271_a(arg0: Internal.SOpenHorseWindowPacket): void;
        func_184330_a(arg0: Internal.SPlayerPositionLookPacket): void;
        func_147250_a(arg0: Internal.SUpdateScorePacket): void;
        func_147275_a(arg0: Internal.SEntityTeleportPacket): void;
        func_147277_a(arg0: Internal.SPlaySoundEventPacket): void;
        func_147279_a(arg0: Internal.SAnimateHandPacket): void;
        func_147237_a(arg0: Internal.SSpawnPlayerPacket): void;
        func_147256_a(arg0: Internal.SPlayerListItemPacket): void;
        func_147290_a(arg0: Internal.SEntityPropertiesPacket): void;
        func_147235_a(arg0: Internal.SSpawnObjectPacket): void;
        func_147254_a(arg0: Internal.SDisplayObjectivePacket): void;
        func_194307_a(arg0: Internal.SPlaceGhostRecipePacket): void;
        func_147252_a(arg0: Internal.SChangeGameStatePacket): void;
        func_147294_a(arg0: Internal.SAnimateBlockBreakPacket): void;
        func_147273_a(arg0: Internal.SUpdateTileEntityPacket): void;
        func_195511_a(arg0: Internal.SCommandListPacket): void;
        func_217266_a(arg0: Internal.SSpawnMovingSoundEffectPacket): void;
        func_184328_a(arg0: Internal.SSetPassengersPacket): void;
        func_147239_a(arg0: Internal.SConfirmTransactionPacket): void;
        func_184326_a(arg0: Internal.SUnloadChunkPacket): void;
        func_191981_a(arg0: Internal.SAdvancementInfoPacket): void;
        func_194022_a(arg0: Internal.SSelectAdvancementsTabPacket): void;
        func_175098_a(arg0: Internal.SCombatPacket): void;
        func_184324_a(arg0: Internal.SCooldownPacket): void;
        func_175096_a(arg0: Internal.SPlayerListHeaderFooterPacket): void;
        func_217268_a(arg0: Internal.SOpenBookWindowPacket): void;
        func_175094_a(arg0: Internal.SCameraPacket): void;
        func_147263_a(arg0: Internal.SChunkDataPacket): void;
        func_147240_a(arg0: Internal.SCustomPayloadPlayPacket): void;
        func_147261_a(arg0: Internal.SBlockActionPacket): void;
        func_147286_a(arg0: Internal.SSpawnExperienceOrbPacket): void;
        func_147288_a(arg0: Internal.SSpawnPaintingPacket): void;
        func_147267_a(arg0: Internal.SEntityHeadLookPacket): void;
        func_147246_a(arg0: Internal.SCollectItemPacket): void;
        func_147280_a(arg0: Internal.SRespawnPacket): void;
        func_147244_a(arg0: Internal.SEntityVelocityPacket): void;
        func_147282_a(arg0: Internal.SJoinGamePacket): void;
        func_147242_a(arg0: Internal.SEntityEquipmentPacket): void;
        func_147284_a(arg0: Internal.SEntityMetadataPacket): void;
        func_175101_a(arg0: Internal.SServerDifficultyPacket): void;
        func_211522_a(arg0: Internal.SQueryNBTResponsePacket): void;
        func_217272_a(arg0: Internal.SOpenWindowPacket): void;
        func_217270_a(arg0: Internal.SUpdateViewDistancePacket): void;
        func_147251_a(arg0: Internal.SChatPacket): void;
        func_147276_a(arg0: Internal.SCloseWindowPacket): void;
        func_147259_a(arg0: Internal.SEntityPacket): void;
        func_147236_a(arg0: Internal.SEntityStatusPacket): void;
        func_147257_a(arg0: Internal.SHeldItemChangePacket): void;
        func_147291_a(arg0: Internal.SScoreboardObjectivePacket): void;
        func_147234_a(arg0: Internal.SChangeBlockPacket): void;
        func_147270_a(arg0: Internal.SPlayerAbilitiesPacket): void;
        func_147293_a(arg0: Internal.SStatisticsPacket): void;
        func_199525_a(arg0: Internal.SUpdateRecipesPacket): void;
        func_147272_a(arg0: Internal.SKeepAlivePacket): void;
        func_147295_a(arg0: Internal.SSetExperiencePacket): void;
        func_147253_a(arg0: Internal.SDisconnectPacket): void;
        func_195510_a(arg0: Internal.STabCompletePacket): void;
        func_195512_a(arg0: Internal.SStopSoundPacket): void;
        func_184329_a(arg0: Internal.SPlaySoundPacket): void;
        func_184327_a(arg0: Internal.SPlaySoundEffectPacket): void;
        func_147238_a(arg0: Internal.SDestroyEntitiesPacket): void;
        func_184325_a(arg0: Internal.SUpdateBossInfoPacket): void;
        func_175099_a(arg0: Internal.STitlePacket): void;
        func_191980_a(arg0: Internal.SRecipeBookPacket): void;
        func_184323_a(arg0: Internal.SMoveVehiclePacket): void;
        func_175095_a(arg0: Internal.SSendResourcePackPacket): void;
        func_217269_a(arg0: Internal.SUpdateLightPacket): void;
        func_217267_a(arg0: Internal.SUpdateChunkPositionPacket): void;
        func_175093_a(arg0: Internal.SWorldBorderPacket): void;
        func_147262_a(arg0: Internal.SRemoveEntityEffectPacket): void;
        func_147285_a(arg0: Internal.SUpdateTimePacket): void;
        func_199723_a(arg0: Internal.STagsListPacket): void;
        func_147264_a(arg0: Internal.SMapDataPacket): void;
        func_147260_a(arg0: Internal.SPlayEntityEffectPacket): void;
        func_147287_a(arg0: Internal.SMultiBlockChangePacket): void;
        func_147266_a(arg0: Internal.SSetSlotPacket): void;
        func_147289_a(arg0: Internal.SSpawnParticlePacket): void;
        func_147268_a(arg0: Internal.SOpenSignMenuPacket): void;
        func_147247_a(arg0: Internal.STeamsPacket): void;
        func_147245_a(arg0: Internal.SWindowPropertyPacket): void;
        func_147281_a(arg0: Internal.SSpawnMobPacket): void;
        func_147243_a(arg0: Internal.SMountEntityPacket): void;
        func_147283_a(arg0: Internal.SExplosionPacket): void;
        func_147241_a(arg0: Internal.SWindowItemsPacket): void;
    }
    type IClientPlayNetHandler_ = IClientPlayNetHandler;
    class CTabCompletePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_197709_a(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_197707_b(): string;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: string);
    }
    type CTabCompletePacket_ = CTabCompletePacket;
    interface IImmersiveConnectable extends Internal.ILocalHandlerProvider {
        connectCable(arg0: Internal.WireType, arg1: Internal.ConnectionPoint, arg2: Internal.IImmersiveConnectable, arg3: Internal.ConnectionPoint): void;
        getPosition(): BlockPos;
        removeCable(arg0: Internal.Connection, arg1: Internal.ConnectionPoint): void;
        getTargetedPoint(arg0: Internal.TargetingInfo, arg1: Vec3i): Internal.ConnectionPoint;
        getInternalConnections(): Internal.Iterable<Internal.Connection>;
        getConnectionPoints(): Internal.Collection<Internal.ConnectionPoint>;
        getConnectionMaster(arg0: Internal.WireType, arg1: Internal.TargetingInfo): BlockPos;
        canConnect(): boolean;
        getIgnored(other: Internal.IImmersiveConnectable): Internal.Set<BlockPos>;
        isProxy(): boolean;
        getConnectionOffset(arg0: Internal.Connection, arg1: Internal.ConnectionPoint): Vec3;
        canConnectCable(arg0: Internal.WireType, arg1: Internal.ConnectionPoint, arg2: Vec3i): boolean;
    }
    type IImmersiveConnectable_ = IImmersiveConnectable;
    class CQueryEntityNBTPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_211720_c(): number;
        func_211721_b(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number);
    }
    type CQueryEntityNBTPacket_ = CQueryEntityNBTPacket;
    class ClonedChunkSectionCache extends Document.Object {
        cleanup(): void;
        release(section: Internal.ClonedChunkSection): void;
        invalidate(x: number, y: number, z: number): void;
        acquire(x: number, y: number, z: number): Internal.ClonedChunkSection;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(world: Internal.World);
    }
    type ClonedChunkSectionCache_ = ClonedChunkSectionCache;
    class PropertyChangeEvent extends Internal.EventObject {
        setPropagationId(arg0: any): void;
        getPropagationId(): any;
        getOldValue(): any;
        getNewValue(): any;
        getPropertyName(): string;
        get newValue(): any;
        get propertyName(): string;
        get oldValue(): any;
        get propagationId(): any;
        set propagationId(arg0: any);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: string, arg2: any, arg3: any);
    }
    type PropertyChangeEvent_ = PropertyChangeEvent;
    class StarlightReceiverRitualPedestal extends Internal.SimpleTransmissionReceiver<Internal.TileRitualPedestal> {
        getTransmissionConsumptionMultiplier(): number;
        markDirty(arg0: Internal.World): void;
        syncTileData(arg0: Internal.World, arg1: Internal.TileRitualPedestal): boolean;
        onTransmissionTick(arg0: Internal.World, arg1: number, arg2: Internal.IWeakConstellation): void;
        needsTransmissionUpdate(): boolean;
        notifyLink(arg0: Internal.World, arg1: BlockPos): void;
        notifyUnlink(arg0: Internal.World, arg1: BlockPos): boolean;
        queryNext(arg0: Internal.WorldNetworkHandler): Internal.List<Internal.NodeConnection<Internal.IPrismTransmissionNode>>;
        getChannelingTrait(): Internal.IMinorConstellation;
        getTransmissionProperties(): Internal.CrystalAttributes;
        getTileClass(): Internal.Class<Internal.TileRitualPedestal>;
        getTransmissionThroughputMultiplier(): number;
        postLoad(arg0: Internal.IWorld): void;
        getChannelingType(): Internal.IWeakConstellation;
        get tileClass(): Internal.Class<Internal.TileRitualPedestal>;
        get channelingType(): Internal.IWeakConstellation;
        get channelingTrait(): Internal.IMinorConstellation;
        get transmissionConsumptionMultiplier(): number;
        get transmissionProperties(): Internal.CrystalAttributes;
        get transmissionThroughputMultiplier(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: BlockPos);
    }
    type StarlightReceiverRitualPedestal_ = StarlightReceiverRitualPedestal;
    class SpawnReason extends Internal.Enum<Internal.SpawnReason> {
        static valueOf(arg0: string): Internal.SpawnReason;
        static values(): Internal.SpawnReason[];
        static readonly CONVERSION: Internal.SpawnReason;
        static readonly STRUCTURE: Internal.SpawnReason;
        static readonly BUCKET: Internal.SpawnReason;
        static readonly DISPENSER: Internal.SpawnReason;
        static readonly SPAWNER: Internal.SpawnReason;
        static readonly EVENT: Internal.SpawnReason;
        static readonly MOB_SUMMONED: Internal.SpawnReason;
        static readonly NATURAL: Internal.SpawnReason;
        static readonly SPAWN_EGG: Internal.SpawnReason;
        static readonly PATROL: Internal.SpawnReason;
        static readonly CHUNK_GENERATION: Internal.SpawnReason;
        static readonly BREEDING: Internal.SpawnReason;
        static readonly REINFORCEMENT: Internal.SpawnReason;
        static readonly COMMAND: Internal.SpawnReason;
        static readonly TRIGGERED: Internal.SpawnReason;
        static readonly JOCKEY: Internal.SpawnReason;
    }
    type SpawnReason_ = "natural" | "chunk_generation" | "spawner" | "structure" | "breeding" | "mob_summoned" | "jockey" | "event" | "conversion" | "reinforcement" | "triggered" | "bucket" | "spawn_egg" | "command" | "dispenser" | "patrol" | SpawnReason;
    class ZombieHorseEntity extends Internal.AbstractHorseEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        static func_234256_eJ_(): Internal.AttributeModifierMap$MutableAttribute;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ZombieHorseEntity>, arg1: Internal.World);
    }
    type ZombieHorseEntity_ = ZombieHorseEntity;
    abstract class SingleItemRecipe extends Document.Object implements Internal.IRecipe<Internal.IInventory> {
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_199560_c(): ResourceLocation;
        func_192399_d(): boolean;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        func_77571_b(): Internal.ItemStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IRecipeType<any>, arg1: Internal.IRecipeSerializer<any>, arg2: ResourceLocation, arg3: string, arg4: Internal.Ingredient, arg5: Internal.ItemStack);
    }
    type SingleItemRecipe_ = SingleItemRecipe;
    abstract class RenderType extends Internal.RenderState {
        static func_230168_b_(arg0: ResourceLocation_, arg1: boolean): Internal.RenderType;
        static func_239264_a_(arg0: ResourceLocation_, arg1: number): Internal.RenderType;
        static func_230167_a_(arg0: ResourceLocation_, arg1: boolean): Internal.RenderType;
        static func_228634_a_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228630_a_(arg0: number): Internal.RenderType;
        static func_228639_c_(): Internal.RenderType;
        static func_228638_b_(arg0: ResourceLocation_): Internal.RenderType;
        static func_239269_g_(): Internal.RenderType;
        static func_228644_e_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228652_i_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228653_j_(): Internal.RenderType;
        static func_241715_r_(): Internal.RenderType;
        static func_239265_a_(arg0: ResourceLocation_, arg1: Internal.RenderState$CullState): Internal.RenderType;
        static func_228648_g_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228649_h_(): Internal.RenderType;
        func_228665_s_(): boolean;
        static func_228637_a_(arg0: ResourceLocation_, arg1: boolean): Internal.RenderType;
        static func_228633_a_(arg0: string, arg1: Internal.VertexFormat, arg2: number, arg3: number, arg4: boolean, arg5: boolean, arg6: Internal.RenderType$State): Internal.RenderType$Type;
        static func_239266_b_(arg0: ResourceLocation_, arg1: boolean): Internal.RenderType;
        static func_228642_d_(arg0: ResourceLocation_): Internal.RenderType;
        func_225612_r_(): Internal.Optional<Internal.RenderType>;
        static func_228643_e_(): Internal.RenderType;
        static func_228654_j_(arg0: ResourceLocation_): Internal.RenderType;
        func_230041_s_(): boolean;
        static func_228655_k_(): Internal.RenderType;
        func_228664_q_(): number;
        static func_228647_g_(): Internal.RenderType;
        static func_228646_f_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228651_i_(): Internal.RenderType;
        static func_228650_h_(arg0: ResourceLocation_): Internal.RenderType;
        func_228662_o_(): number;
        static func_228636_a_(arg0: ResourceLocation_, arg1: number, arg2: number): Internal.RenderType;
        static func_239274_p_(): Internal.RenderType;
        func_228663_p_(): Internal.VertexFormat;
        static func_228660_m_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228632_a_(arg0: string, arg1: Internal.VertexFormat, arg2: number, arg3: number, arg4: Internal.RenderType$State): Internal.RenderType$Type;
        static func_228661_n_(): Internal.List<any>;
        static func_228657_l_(): Internal.RenderType;
        static func_228640_c_(arg0: ResourceLocation_): Internal.RenderType;
        static func_239270_k_(): Internal.RenderType;
        static func_243501_m(): Internal.RenderType;
        static func_228641_d_(): Internal.RenderType;
        func_230169_u_(): Internal.Optional<Internal.RenderType>;
        static func_239271_l_(): Internal.RenderType;
        static func_228656_k_(arg0: ResourceLocation_): Internal.RenderType;
        static func_239263_a_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228645_f_(): Internal.RenderType;
        static func_239273_n_(): Internal.RenderType;
        static func_239267_e_(arg0: ResourceLocation_): Internal.RenderType;
        static func_239268_f_(arg0: ResourceLocation_): Internal.RenderType;
        func_228631_a_(arg0: Internal.BufferBuilder, arg1: number, arg2: number, arg3: number): void;
        static func_239272_l_(arg0: ResourceLocation_): Internal.RenderType;
        static func_228659_m_(): Internal.RenderType;
        static func_228658_l_(arg0: ResourceLocation_): Internal.RenderType;
        static readonly field_228614_Q_: Internal.RenderType$Type;
        readonly field_228629_af_: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.VertexFormat, arg2: number, arg3: number, arg4: boolean, arg5: boolean, arg6: Internal.Runnable, arg7: Internal.Runnable);
    }
    type RenderType_ = RenderType;
    class SphereReplaceConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_242809_d: number;
        readonly field_202434_d: Internal.List<Internal.BlockState>;
        static readonly field_236516_a_: Internal.Codec<Internal.SphereReplaceConfig>;
        readonly field_202432_b: Internal.FeatureSpread;
        readonly field_214693_a: Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockState, arg1: Internal.FeatureSpread, arg2: number, arg3: Internal.List<Internal.BlockState>);
    }
    type SphereReplaceConfig_ = SphereReplaceConfig;
    class SoundSource extends Document.Object {
        func_216425_a(arg0: boolean): void;
        func_216422_a(arg0: number): void;
        func_216423_c(arg0: number): void;
        func_216436_b(): void;
        func_216420_a(arg0: Vec3): void;
        func_216430_b(arg0: number): void;
        func_216432_b(arg0: boolean): void;
        func_216433_a(arg0: Internal.IAudioStream): void;
        func_216419_h(): void;
        func_216429_a(arg0: Internal.AudioStreamBuffer): void;
        func_216438_c(): void;
        func_216418_f(): void;
        func_216435_g(): boolean;
        func_216437_e(): void;
        func_216434_i(): void;
        func_216439_d(): void;
    }
    type SoundSource_ = SoundSource;
    class BlobFoliagePlacer extends Internal.FoliagePlacer {
        static readonly field_236738_a_: Internal.Codec<Internal.BlobFoliagePlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FeatureSpread, arg1: Internal.FeatureSpread, arg2: number);
    }
    type BlobFoliagePlacer_ = BlobFoliagePlacer;
    class EmptyJigsawPiece extends Internal.JigsawPiece {
        static readonly field_236814_a_: Internal.Codec<Internal.EmptyJigsawPiece>;
        static readonly field_214856_a: Internal.EmptyJigsawPiece;
    }
    type EmptyJigsawPiece_ = EmptyJigsawPiece;
    interface IForgeResourcePack {
        isHidden(): boolean;
    }
    type IForgeResourcePack_ = IForgeResourcePack;
    interface ChannelPromise extends Internal.ChannelFuture, Internal.Promise<void> {
        unvoid(): Internal.ChannelPromise;
        removeListeners(...arg0: Internal.GenericFutureListener<Internal.Future<void>>[]): Internal.ChannelPromise;
        channel(): Internal.Channel;
        awaitUninterruptibly(): Internal.ChannelPromise;
        removeListener(arg0: Internal.GenericFutureListener_<Internal.Future_<void>>): Internal.ChannelPromise;
        sync(): Internal.ChannelPromise;
        setSuccess(arg0: void): Internal.ChannelPromise;
        setSuccess(): Internal.ChannelPromise;
        setFailure(arg0: Internal.Throwable): Internal.ChannelPromise;
        trySuccess(): boolean;
        syncUninterruptibly(): Internal.ChannelPromise;
        await(): Internal.ChannelPromise;
        addListeners(...arg0: Internal.GenericFutureListener<Internal.Future<void>>[]): Internal.ChannelPromise;
        addListener(arg0: Internal.GenericFutureListener_<Internal.Future_<void>>): Internal.ChannelPromise;
    }
    type ChannelPromise_ = ChannelPromise;
    interface NewChatGuiAccess {
        callAddMessage(arg0: Internal.ITextComponent_, arg1: number): void;
        callRemoveById(arg0: number): void;
    }
    type NewChatGuiAccess_ = NewChatGuiAccess;
    interface EntityAccessor {
        getRandom(): Internal.Random;
        getFirstTick(): boolean;
    }
    type EntityAccessor_ = EntityAccessor;
    class FlamingSittingPhase extends Internal.SittingPhase {
        func_188663_j(): void;
        func_188652_i(): Internal.PhaseType<Internal.FlamingSittingPhase>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type FlamingSittingPhase_ = FlamingSittingPhase;
    class Context extends Document.Object {
        static throwAsScriptRuntimeEx(e: Internal.Throwable): Internal.RuntimeException;
        isSealed(): boolean;
        isGeneratingDebugChanged(): boolean;
        callFunctionWithContinuations(function_: Internal.Callable_, scope: Internal.Scriptable, args: any[]): any;
        getClassShutterSetter(): Internal.Context$ClassShutterSetter;
        executeScriptWithContinuations(script: Internal.Script_, scope: Internal.Scriptable): any;
        createClassLoader(parent: Internal.ClassLoader): Internal.GeneratedClassLoader;
        static getDebuggableView(script: Internal.Script_): Internal.DebuggableScript;
        getApplicationClassLoader(): Internal.ClassLoader;
        evaluateReader(scope: Internal.Scriptable, in_: Internal.Reader, sourceName: string, lineno: number, securityDomain: any): any;
        getTypeWrappers(): Internal.TypeWrappers;
        static javaToJS(value: any, scope: Internal.Scriptable): any;
        compileReader(in_: Internal.Reader, sourceName: string, lineno: number, securityDomain: any): Internal.Script;
        static toBoolean(value: any): boolean;
        getDebugger(): Internal.Debugger;
        removeActivationName(name: string): void;
        setDebugger(debugger_: Internal.Debugger, contextData: any): void;
        captureContinuation(): Internal.ContinuationPending;
        resumeContinuation(continuation: any, scope: Internal.Scriptable, functionResult: any): any;
        static enter(): Internal.Context;
        static reportRuntimeError0(messageId: string): Internal.EvaluatorException;
        static reportRuntimeError1(messageId: string, arg1: any): Internal.EvaluatorException;
        isActivationNeeded(name: string): boolean;
        static reportRuntimeError2(messageId: string, arg1: any, arg2: any): Internal.EvaluatorException;
        setGeneratingSource(generatingSource: boolean): void;
        static reportRuntimeError3(messageId: string, arg1: any, arg2: any, arg3: any): Internal.EvaluatorException;
        static reportRuntimeError(message: string, sourceName: string, lineno: number, lineSource: string, lineOffset: number): Internal.EvaluatorException;
        static reportRuntimeError(message: string): Internal.EvaluatorException;
        getInstructionObserverThreshold(): number;
        hasTypeWrappers(): boolean;
        getThreadLocal(key: any): any;
        removePropertyChangeListener(l: Internal.PropertyChangeListener_): void;
        static getUndefinedValue(): any;
        putThreadLocal(key: any, value: any): void;
        setClassShutter(shutter: Internal.ClassShutter_): void;
        static exit(): void;
        setGeneratingDebug(generatingDebug: boolean): void;
        setInstructionObserverThreshold(threshold: number): void;
        getElements(object: Internal.Scriptable): any[];
        static reportRuntimeError4(messageId: string, arg1: any, arg2: any, arg3: any, arg4: any): Internal.EvaluatorException;
        hasFeature(featureIndex: number): boolean;
        initSafeStandardObjects(scope: Internal.ScriptableObject, sealed: boolean): Internal.ScriptableObject;
        initSafeStandardObjects(): Internal.ScriptableObject;
        initSafeStandardObjects(scope: Internal.ScriptableObject): Internal.Scriptable;
        static toNumber(value: any): number;
        setLocale(loc: Internal.Locale): Internal.Locale;
        initStandardObjects(scope: Internal.ScriptableObject, sealed: boolean): Internal.ScriptableObject;
        initStandardObjects(): Internal.ScriptableObject;
        initStandardObjects(scope: Internal.ScriptableObject): Internal.Scriptable;
        isStrictMode(): boolean;
        setApplicationClassLoader(loader: Internal.ClassLoader): void;
        getWrapFactory(): Internal.WrapFactory;
        setGenerateObserverCount(generateObserverCount: boolean): void;
        seal(sealKey: any): void;
        setWrapFactory(wrapFactory: Internal.WrapFactory): void;
        evaluateString(scope: Internal.Scriptable, source: string, sourceName: string, lineno: number, securityDomain: any): any;
        setSecurityController(controller: Internal.SecurityController): void;
        compileFunction(scope: Internal.Scriptable, source: string, sourceName: string, lineno: number, securityDomain: any): dev.latvian.mods.rhino.Function;
        getClassShutter(): Internal.ClassShutter;
        setErrorReporter(reporter: Internal.ErrorReporter): Internal.ErrorReporter;
        newObject(scope: Internal.Scriptable): Internal.Scriptable;
        newObject(scope: Internal.Scriptable, constructorName: string): Internal.Scriptable;
        newObject(scope: Internal.Scriptable, constructorName: string, args: any[]): Internal.Scriptable;
        static jsToJava(value: any, desiredType: Internal.Class<any>): any;
        static toObject(value: any, scope: Internal.Scriptable): Internal.Scriptable;
        static getSourcePositionFromStack(linep: number[]): string;
        addPropertyChangeListener(l: Internal.PropertyChangeListener_): void;
        static reportWarning(message: string): void;
        static reportWarning(message: string, sourceName: string, lineno: number, lineSource: string, lineOffset: number): void;
        static reportWarning(message: string, t: Internal.Throwable): void;
        setLanguageVersion(version: number): void;
        stringIsCompilableUnit(source: string): boolean;
        removeThreadLocal(key: any): void;
        static getCurrentContext(): Internal.Context;
        newArray(scope: Internal.Scriptable, length: number): Internal.Scriptable;
        newArray(scope: Internal.Scriptable, elements: any[]): Internal.Scriptable;
        static reportError(message: string): void;
        static reportError(message: string, sourceName: string, lineno: number, lineSource: string, lineOffset: number): void;
        isGeneratingSource(): boolean;
        getFactory(): Internal.ContextFactory;
        getDebuggerContextData(): any;
        isGeneratingDebug(): boolean;
        getErrorReporter(): Internal.ErrorReporter;
        static call(factory: Internal.ContextFactory, callable: Internal.Callable_, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        getMaximumInterpreterStackDepth(): number;
        setMaximumInterpreterStackDepth(max: number): void;
        addActivationName(name: string): void;
        compileString(source: string, sourceName: string, lineno: number, securityDomain: any): Internal.Script;
        static toString(value: any): string;
        unseal(sealKey: any): void;
        getLocale(): Internal.Locale;
        static getContext(): Internal.Context;
        static enterWithNewFactory(): Internal.Context;
        getImplementationVersion(): string;
        static readonly FEATURE_INTEGER_WITHOUT_DECIMAL_PLACE: 18;
        static readonly FEATURE_ENHANCED_JAVA_ACCESS: 13;
        static readonly FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER: 3;
        static readonly FEATURE_DYNAMIC_SCOPE: 7;
        static readonly FEATURE_LITTLE_ENDIAN: 19;
        static readonly FEATURE_THREAD_SAFE_OBJECTS: 17;
        generateObserverCount: boolean;
        static readonly FEATURE_STRICT_MODE: 11;
        static readonly FEATURE_WARNING_AS_ERROR: 12;
        static readonly FEATURE_STRICT_EVAL: 9;
        static readonly FEATURE_LOCATION_INFORMATION_IN_ERROR: 10;
        static readonly errorReporterProperty: "error reporter";
        static readonly FEATURE_V8_EXTENSIONS: 14;
        static readonly FEATURE_STRICT_VARS: 8;
        static readonly FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME: 2;
        static readonly FEATURE_PARENT_PROTO_PROPERTIES: 5;
        static readonly languageVersionProperty: "language version";
        static readonly emptyArgs: any[];
        get factory(): Internal.ContextFactory;
        get undefinedValue(): any;
        get implementationVersion(): string;
        get currentContext(): Internal.Context;
        get sealed(): boolean;
        get debugger(): Internal.Debugger;
        get strictMode(): boolean;
        get debuggerContextData(): any;
        get maximumInterpreterStackDepth(): number;
        get locale(): Internal.Locale;
        get typeWrappers(): Internal.TypeWrappers;
        get classShutterSetter(): Internal.Context$ClassShutterSetter;
        get generatingDebug(): boolean;
        get errorReporter(): Internal.ErrorReporter;
        get generatingDebugChanged(): boolean;
        get applicationClassLoader(): Internal.ClassLoader;
        get wrapFactory(): Internal.WrapFactory;
        get context(): Internal.Context;
        get instructionObserverThreshold(): number;
        get classShutter(): Internal.ClassShutter;
        get generatingSource(): boolean;
        set generatingDebug(generatingDebug: boolean);
        set errorReporter(reporter: Internal.ErrorReporter);
        set languageVersion(version: number);
        set applicationClassLoader(loader: Internal.ClassLoader);
        set wrapFactory(wrapFactory: Internal.WrapFactory);
        set maximumInterpreterStackDepth(max: number);
        set securityController(controller: Internal.SecurityController);
        set locale(loc: Internal.Locale);
        set instructionObserverThreshold(threshold: number);
        set classShutter(shutter: Internal.ClassShutter_);
        set generatingSource(generatingSource: boolean);
    }
    type Context_ = Context;
    class MainWindow extends Document.Object implements Internal.AutoCloseable, Internal.WindowAccessor {
        func_227800_b_(): boolean;
        func_198105_m(): number;
        func_198083_n(): number;
        setFramebufferHeight(arg0: number): void;
        func_198087_p(): number;
        func_227798_a_(): number;
        func_198106_d(): Internal.Optional<Internal.VideoMode>;
        func_198082_x(): number;
        func_216521_a(arg0: number, arg1: boolean): number;
        func_216525_a(arg0: number): void;
        func_216526_a(arg0: number): void;
        func_216523_b(arg0: boolean): void;
        func_224797_a(arg0: Internal.Optional<Internal.VideoMode>): void;
        func_198107_o(): number;
        func_227802_e_(): void;
        func_230148_b_(arg0: string): void;
        func_198109_k(): number;
        func_198100_s(): number;
        close(): void;
        setFramebufferWidth(arg0: number): void;
        func_198092_i(): number;
        func_198097_f(): void;
        func_198091_l(): number;
        func_198113_j(): boolean;
        func_198077_g(): void;
        func_224798_d(arg0: boolean): void;
        func_216529_a(arg0: Internal.InputStream, arg1: Internal.InputStream): void;
        func_224796_s(): Internal.Monitor;
        func_198099_q(): number;
        func_227799_a_(arg0: string): void;
        func_198079_r(): number;
        static func_211162_a(arg0: Internal.BiConsumer_<number, string>): void;
        func_198084_a(arg0: number, arg1: number): void;
        func_227801_c_(): void;
        set framebufferWidth(arg0: number);
        set framebufferHeight(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IWindowEventListener, arg1: any, arg2: any, arg3: string, arg4: string);
    }
    type MainWindow_ = MainWindow;
    class PlayerEvent$StartTracking extends Internal.PlayerEvent {
        getTarget(): Internal.Entity;
        get target(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.Entity);
    }
    type PlayerEvent$StartTracking_ = PlayerEvent$StartTracking;
    class CSetDifficultyPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218773_b(): Internal.Difficulty;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Difficulty);
    }
    type CSetDifficultyPacket_ = CSetDifficultyPacket;
    abstract class World extends Internal.CapabilityProvider<Internal.World> implements Internal.IWorld, Internal.AutoCloseable, Internal.IForgeWorld, Internal.ExtendedWorld, Internal.LevelKJS {
        func_175666_e(arg0: BlockPos, arg1: Internal.Block_): void;
        func_201696_r(arg0: BlockPos): number;
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        func_226666_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.Stream<Internal.VoxelShape>;
        func_225523_d_(): Internal.BiomeManager;
        func_72819_i(arg0: number): number;
        func_225604_a_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_217404_b(arg0: Internal.IParticleData, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        func_72966_v(): void;
        redirect$bna000$redirectTick(arg0: Internal.ITickableTileEntity_): void;
        func_217344_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        func_175726_f(arg0: BlockPos): Internal.Chunk;
        func_226669_j_(arg0: Internal.Entity): boolean;
        func_82737_E(): number;
        func_234925_Z_(): boolean;
        func_72882_A(): void;
        func_234939_c_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_230487_a_(arg0: Internal.Direction_, arg1: boolean): number;
        func_92088_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.CompoundNBT_): void;
        func_230315_m_(): Internal.DimensionType;
        func_184133_a(arg0: Internal.PlayerEntity, arg1: BlockPos, arg2: Internal.SoundEvent_, arg3: Internal.SoundCategory_, arg4: number, arg5: number): void;
        func_217370_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity): Internal.PlayerEntity;
        getAnyChunkImmediately(arg0: number, arg1: number): Internal.IChunk;
        func_217393_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.BlockState): void;
        func_217378_a(arg0: Internal.PlayerEntity, arg1: number, arg2: BlockPos, arg3: number): void;
        func_82736_K(): Internal.GameRules;
        func_217395_y(): number;
        func_201674_k(): Internal.Random;
        func_175627_a(arg0: BlockPos, arg1: Internal.Direction_): number;
        static func_217405_b(arg0: number): boolean;
        func_195590_a(arg0: Internal.IParticleData, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        func_217360_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        func_217383_a(arg0: number, arg1: number, arg2: number, arg3: number): BlockPos;
        func_72929_e(arg0: number): number;
        close(): void;
        func_147442_i(arg0: number): void;
        func_175649_E(arg0: BlockPos): Internal.DifficultyInstance;
        func_175687_A(arg0: BlockPos): number;
        func_225525_a_(arg0: BlockPos, arg1: Internal.ColorResolver_): number;
        func_175713_t(arg0: BlockPos): void;
        func_184134_a(arg0: number, arg1: number, arg2: number, arg3: Internal.SoundEvent_, arg4: Internal.SoundCategory_, arg5: number, arg6: number, arg7: boolean): void;
        func_175676_y(arg0: BlockPos): number;
        func_226665_a__(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): boolean;
        func_217371_b(arg0: Internal.UUID): Internal.PlayerEntity;
        func_217394_a<T_>(arg0: Internal.EntityType_<T_>, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<T_>): Internal.List<T_>;
        func_217379_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_234865_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        setCustomLightHandler(arg0: Internal.VariableBlockLightHandler): void;
        func_190525_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Predicate_<Internal.Entity_>): Internal.PlayerEntity;
        increaseMaxEntityRadius(arg0: number): number;
        func_217391_K(): void;
        func_217402_u(): boolean;
        func_241851_ab(): number;
        func_175656_a(arg0: BlockPos, arg1: Internal.BlockState): boolean;
        func_241212_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity, arg3: number): boolean;
        func_72896_J(): boolean;
        func_217353_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus_, arg3: boolean): Internal.IChunk;
        func_225522_c_(arg0: number, arg1: number): Internal.IBlockReader;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_72960_a(arg0: Internal.Entity, arg1: number): void;
        func_201670_d(): boolean;
        func_175727_C(arg0: BlockPos): boolean;
        func_217376_c(arg0: Internal.Entity): boolean;
        func_242405_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): boolean;
        func_217399_a(arg0: Internal.MapData): void;
        func_175667_e(arg0: BlockPos): boolean;
        func_241828_r(): Internal.DynamicRegistries;
        func_226660_f_(arg0: BlockPos): boolean;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_72911_I(): boolean;
        func_217381_Z(): Internal.IProfiler;
        func_190524_a(arg0: BlockPos, arg1: Internal.Block_, arg2: BlockPos): void;
        func_201671_F(arg0: BlockPos): boolean;
        func_217366_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): Internal.PlayerEntity;
        func_72863_F(): Internal.AbstractChunkProvider;
        getPartEntities(): Internal.Collection<Internal.PartEntity<any>>;
        func_199532_z(): Internal.RecipeManager;
        func_201572_C(): number;
        func_147448_a(arg0: Internal.Collection<Internal.TileEntity>): void;
        handler$cmi000$solarEclipseSunBrightnessServer(arg0: Internal.CallbackInfo): void;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_230546_a_(arg0: Internal.Entity, arg1: Internal.DamageSource_, arg2: Internal.ExplosionContext, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: Internal.Explosion$Mode_): Internal.Explosion;
        func_175655_b(arg0: BlockPos, arg1: boolean): boolean;
        asKJS(): any;
        func_234929_a_(arg0: BlockPos, arg1: Internal.Entity, arg2: Internal.Direction_): boolean;
        func_242406_i(arg0: BlockPos): Internal.Optional<Internal.RegistryKey<Internal.Biome>>;
        func_225605_c_(arg0: number): void;
        func_217354_b(arg0: number, arg1: number): boolean;
        func_180501_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: number): boolean;
        func_217377_a(arg0: BlockPos, arg1: boolean): boolean;
        func_175715_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_72935_r(): boolean;
        getChunkAtImmediately(arg0: number, arg1: number): Internal.Chunk;
        func_72912_H(): Internal.IWorldInfo;
        func_175647_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<T_>): Internal.List<T_>;
        func_225521_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity): boolean;
        func_184148_a(arg0: Internal.PlayerEntity, arg1: number, arg2: number, arg3: number, arg4: Internal.SoundEvent_, arg5: Internal.SoundCategory_, arg6: number, arg7: number): void;
        func_217400_a(arg0: BlockPos, arg1: Internal.Entity): boolean;
        func_175707_a(arg0: BlockPos, arg1: BlockPos): boolean;
        func_180502_D(arg0: BlockPos): boolean;
        func_217348_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus_): Internal.IChunk;
        func_226658_a_(arg0: Internal.LightType_, arg1: BlockPos): number;
        func_195593_d(arg0: BlockPos, arg1: Internal.Block_): void;
        func_217374_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: Internal.AxisAlignedBB): Internal.List<T_>;
        func_242403_h(arg0: BlockPos): number;
        func_201676_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_175710_j(arg0: BlockPos): boolean;
        func_217359_a(arg0: Internal.EntityPredicate, arg1: number, arg2: number, arg3: number): Internal.PlayerEntity;
        func_225317_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        func_226663_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.ISelectionContext): boolean;
        func_234923_W_(): Internal.RegistryKey<Internal.World>;
        func_230547_a_(arg0: BlockPos, arg1: Internal.Block_): void;
        func_175669_a(arg0: number, arg1: BlockPos, arg2: number): void;
        func_175623_d(arg0: BlockPos): boolean;
        func_175646_b(arg0: BlockPos, arg1: Internal.TileEntity): void;
        func_241211_a_(arg0: BlockPos, arg1: Internal.BlockState, arg2: number, arg3: number): boolean;
        func_242415_f(arg0: number): number;
        func_72839_b(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.List<Internal.Entity>;
        func_73046_m(): Internal.MinecraftServer;
        func_73045_a(arg0: number): Internal.Entity;
        func_242414_af(): number;
        func_72827_u(): string;
        func_72891_a(arg0: boolean, arg1: boolean): void;
        func_195594_a(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_217390_a(arg0: Internal.Consumer_<any>, arg1: Internal.Entity): void;
        func_175695_a(arg0: BlockPos, arg1: Internal.Block_, arg2: Internal.Direction_): void;
        func_175659_aa(): Internal.Difficulty;
        func_72914_a(arg0: Internal.CrashReport): Internal.CrashReportCategory;
        func_241457_a_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): Internal.Stream<Internal.VoxelShape>;
        func_217398_a(arg0: Internal.Entity, arg1: number, arg2: number, arg3: number, arg4: number, arg5: boolean, arg6: Internal.Explosion$Mode_): Internal.Explosion;
        func_226690_K_(): boolean;
        func_217375_a(arg0: BlockPos, arg1: Internal.Predicate_<Internal.BlockState_>): boolean;
        func_184138_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.BlockState, arg3: number): void;
        func_205772_D(): Internal.ITagCollectionSupplier;
        func_217349_x(arg0: BlockPos): Internal.IChunk;
        func_175660_a(arg0: Internal.PlayerEntity, arg1: BlockPos): boolean;
        isAreaLoaded(arg0: BlockPos, arg1: number): boolean;
        func_234867_d_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_225316_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<T_>): Internal.List<T_>;
        func_225524_e_(): Internal.WorldLightManager;
        func_217298_h(arg0: BlockPos): number;
        func_175641_c(arg0: BlockPos, arg1: Internal.Block_, arg2: number, arg3: number): void;
        func_96441_U(): Internal.Scoreboard;
        markAndNotifyBlock(arg0: BlockPos, arg1: Internal.Chunk, arg2: Internal.BlockState, arg3: Internal.BlockState, arg4: number, arg5: number): void;
        func_217406_a(arg0: string): Internal.MapData;
        func_226668_i_(arg0: Internal.Entity): boolean;
        func_175690_a(arg0: BlockPos, arg1: Internal.TileEntity): void;
        func_217384_a(arg0: Internal.PlayerEntity, arg1: Internal.Entity, arg2: Internal.SoundEvent_, arg3: Internal.SoundCategory_, arg4: number, arg5: number): void;
        func_195588_v(arg0: BlockPos): boolean;
        static func_175701_a(arg0: BlockPos): boolean;
        func_217361_a<T_>(arg0: Internal.List<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number): T_;
        func_175709_b(arg0: BlockPos, arg1: Internal.Direction_): boolean;
        getCustomLightHandler(): Internal.VariableBlockLightHandler;
        func_72820_D(): number;
        static func_189509_E(arg0: BlockPos): boolean;
        func_226659_b_(arg0: BlockPos, arg1: number): number;
        func_72953_d(arg0: Internal.AxisAlignedBB): boolean;
        func_234924_Y_(): java_.util.function_.Supplier<Internal.IProfiler>;
        static func_234935_k_(arg0: BlockPos): boolean;
        func_181545_F(): number;
        func_226691_t_(arg0: BlockPos): Internal.Biome;
        func_175657_ab(): number;
        getMaxEntityRadius(): number;
        handler$zik000$getRedstonePower(arg0: BlockPos, arg1: Internal.Direction_, arg2: Internal.CallbackInfoReturnable<any>): void;
        func_184135_a(arg0: Internal.IPacket<any>): void;
        func_217372_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number): Internal.PlayerEntity;
        func_225319_b(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.BlockState): void;
        func_205219_F_(): Internal.ITickList<Internal.Fluid>;
        func_217357_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217301_I(): number;
        func_242413_ae(): number;
        handler$zik000$getStrongPower(arg0: BlockPos, arg1: Internal.CallbackInfoReturnable<any>): void;
        func_212866_a_(arg0: number, arg1: number): Internal.Chunk;
        func_212866_a_(arg0: number, arg1: number): Internal.IChunk;
        func_234938_ad_(): number;
        func_195589_b(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_217362_a(arg0: Internal.Entity, arg1: number): Internal.PlayerEntity;
        func_217385_a(arg0: Internal.Entity, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.Explosion$Mode_): Internal.Explosion;
        func_175640_z(arg0: BlockPos): boolean;
        func_175700_a(arg0: Internal.TileEntity): boolean;
        func_205220_G_(): Internal.ITickList<Internal.Block>;
        func_72894_k(arg0: number): void;
        func_205049_d(arg0: BlockPos, arg1: number): number;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_205052_D(arg0: BlockPos): number;
        func_189508_F(arg0: BlockPos): Internal.TileEntity;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_175674_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.List<Internal.Entity>;
        func_175651_c(arg0: BlockPos, arg1: Internal.Direction_): number;
        func_226664_a_(arg0: Internal.AxisAlignedBB): boolean;
        func_217373_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: Internal.AxisAlignedBB): Internal.List<Internal.PlayerEntity>;
        func_72867_j(arg0: number): number;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_225318_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        func_217358_a(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        func_217369_A(): Internal.List<Internal.PlayerEntity>;
        func_175723_af(): Internal.WorldBorder;
        restoringBlockSnapshots: boolean;
        static readonly field_234918_g_: Internal.RegistryKey<Internal.World>;
        field_73004_o: number;
        field_73003_n: number;
        static readonly field_234917_f_: Internal.Codec<Internal.RegistryKey<Internal.World>>;
        field_73018_p: number;
        field_73017_q: number;
        readonly field_73012_v: Internal.Random;
        static readonly field_234919_h_: Internal.RegistryKey<Internal.World>;
        readonly field_217407_c: Internal.Thread;
        capturedBlockSnapshots: Internal.ArrayList<Internal.BlockSnapshot>;
        readonly field_147482_g: Internal.List<Internal.TileEntity>;
        readonly field_175730_i: Internal.List<Internal.TileEntity>;
        readonly field_72995_K: boolean;
        static readonly field_234920_i_: Internal.RegistryKey<Internal.World>;
        field_147481_N: boolean;
        captureBlockSnapshots: boolean;
        get partEntities(): Internal.Collection<Internal.PartEntity<any>>;
        get customLightHandler(): Internal.VariableBlockLightHandler;
        get maxEntityRadius(): number;
        set customLightHandler(arg0: Internal.VariableBlockLightHandler);
    }
    type World_ = World;
    class BlockSnapshot extends Document.Object {
        getNbt(): Internal.CompoundNBT;
        getWorld(): Internal.IWorld;
        restore(arg0: boolean, arg1: boolean): boolean;
        restore(arg0: boolean): boolean;
        restore(): boolean;
        getPos(): BlockPos;
        getTileEntity(): Internal.TileEntity;
        restoreToLocation(arg0: Internal.IWorld, arg1: BlockPos, arg2: boolean, arg3: boolean): boolean;
        static create(arg0: Internal.RegistryKey<Internal.World>, arg1: Internal.IWorld, arg2: BlockPos): Internal.BlockSnapshot;
        static create(arg0: Internal.RegistryKey<Internal.World>, arg1: Internal.IWorld, arg2: BlockPos, arg3: number): Internal.BlockSnapshot;
        getReplacedBlock(): Internal.BlockState;
        getFlag(): number;
        getCurrentBlock(): Internal.BlockState;
        get nbt(): Internal.CompoundNBT;
        get world(): Internal.IWorld;
        get flag(): number;
        get pos(): BlockPos;
        get currentBlock(): Internal.BlockState;
        get replacedBlock(): Internal.BlockState;
        get tileEntity(): Internal.TileEntity;
    }
    type BlockSnapshot_ = BlockSnapshot;
    class MachineUpgrade extends Document.Object {
        getMachines(): Internal.List<ResourceLocation>;
        getTooltip(): Internal.ITextComponent;
        getItem(): Internal.Item;
        getMaxAmount(): number;
        getModifiers(): Internal.List<Internal.RecipeModifier>;
        static readonly CODEC: Internal.Codec<Internal.MachineUpgrade>;
        get item(): Internal.Item;
        get tooltip(): Internal.ITextComponent;
        get machines(): Internal.List<ResourceLocation>;
        get maxAmount(): number;
        get modifiers(): Internal.List<Internal.RecipeModifier>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Item, arg1: Internal.List<ResourceLocation>, arg2: Internal.List<Internal.RecipeModifier>, arg3: Internal.ITextComponent, arg4: number);
    }
    type MachineUpgrade_ = MachineUpgrade;
    class DownloadingTexture extends Internal.SimpleTexture {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File, arg1: string, arg2: ResourceLocation, arg3: boolean, arg4: Internal.Runnable);
    }
    type DownloadingTexture_ = DownloadingTexture;
    class NoiseSettings extends Document.Object {
        func_236169_a_(): number;
        func_236176_g_(): number;
        func_236171_b_(): Internal.ScalingSettings;
        func_236172_c_(): Internal.SlideSettings;
        func_236181_l_(): boolean;
        func_236173_d_(): Internal.SlideSettings;
        func_236179_j_(): boolean;
        func_236174_e_(): number;
        func_236178_i_(): boolean;
        func_236175_f_(): number;
        func_236177_h_(): number;
        func_236180_k_(): boolean;
        static readonly field_236156_a_: Internal.Codec<Internal.NoiseSettings>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.ScalingSettings, arg2: Internal.SlideSettings, arg3: Internal.SlideSettings, arg4: number, arg5: number, arg6: number, arg7: number, arg8: boolean, arg9: boolean, arg10: boolean, arg11: boolean);
    }
    type NoiseSettings_ = NoiseSettings;
    abstract class ReloadListener <T> extends Document.Object implements Internal.IFutureReloadListener {
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage_, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        func_225594_i_(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ReloadListener_<T> = ReloadListener<T>;
    class LootConditionType extends Internal.LootType<Internal.ILootCondition> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ILootSerializer<Internal.ILootCondition>);
    }
    type LootConditionType_ = LootConditionType;
    interface BlittableVertexType <T> extends Internal.BufferVertexType<T> {
        createBufferWriter(arg0: Internal.VertexBufferView, arg1: boolean): T;
        (arg0: Internal.VertexBufferView, arg1: boolean): T;
    }
    type BlittableVertexType_<T> = ((arg0: Internal.VertexBufferView, arg1: boolean)=>T) | BlittableVertexType<T>;
    class SpruceFoliagePlacer extends Internal.FoliagePlacer {
        static readonly field_236790_a_: Internal.Codec<Internal.SpruceFoliagePlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FeatureSpread, arg1: Internal.FeatureSpread, arg2: Internal.FeatureSpread);
    }
    type SpruceFoliagePlacer_ = SpruceFoliagePlacer;
    interface RecvByteBufAllocator {
        newHandle(): Internal.RecvByteBufAllocator$Handle;
        (): Internal.RecvByteBufAllocator$Handle;
    }
    type RecvByteBufAllocator_ = (()=>Internal.RecvByteBufAllocator$Handle) | RecvByteBufAllocator;
    class JobAttributes extends Document.Object implements Internal.Cloneable {
        setSidesToDefault(): void;
        getDefaultSelection(): Internal.JobAttributes$DefaultSelectionType;
        getDestination(): Internal.JobAttributes$DestinationType;
        getMaxPage(): number;
        setMultipleDocumentHandling(arg0: Internal.JobAttributes$MultipleDocumentHandlingType): void;
        setSides(arg0: Internal.JobAttributes$SidesType): void;
        getPageRanges(): number[][];
        setDestination(arg0: Internal.JobAttributes$DestinationType): void;
        getMultipleDocumentHandling(): Internal.JobAttributes$MultipleDocumentHandlingType;
        setDefaultSelection(arg0: Internal.JobAttributes$DefaultSelectionType): void;
        getDialog(): Internal.JobAttributes$DialogType;
        setFileName(arg0: string): void;
        setMultipleDocumentHandlingToDefault(): void;
        setCopies(arg0: number): void;
        setMinPage(arg0: number): void;
        setPageRanges(arg0: number[][]): void;
        setMaxPage(arg0: number): void;
        getFileName(): string;
        getCopies(): number;
        set(arg0: Internal.JobAttributes): void;
        setPrinter(arg0: string): void;
        getSides(): Internal.JobAttributes$SidesType;
        getFromPage(): number;
        getToPage(): number;
        setDialog(arg0: Internal.JobAttributes$DialogType): void;
        setToPage(arg0: number): void;
        getPrinter(): string;
        clone(): any;
        setCopiesToDefault(): void;
        setFromPage(arg0: number): void;
        getMinPage(): number;
        get fileName(): string;
        get defaultSelection(): Internal.JobAttributes$DefaultSelectionType;
        get printer(): string;
        get destination(): Internal.JobAttributes$DestinationType;
        get minPage(): number;
        get multipleDocumentHandling(): Internal.JobAttributes$MultipleDocumentHandlingType;
        get pageRanges(): number[][];
        get dialog(): Internal.JobAttributes$DialogType;
        get copies(): number;
        get fromPage(): number;
        get sides(): Internal.JobAttributes$SidesType;
        get maxPage(): number;
        get toPage(): number;
        set pageRanges(arg0: number[][]);
        set dialog(arg0: Internal.JobAttributes$DialogType);
        set fileName(arg0: string);
        set copies(arg0: number);
        set defaultSelection(arg0: Internal.JobAttributes$DefaultSelectionType);
        set fromPage(arg0: number);
        set printer(arg0: string);
        set destination(arg0: Internal.JobAttributes$DestinationType);
        set minPage(arg0: number);
        set sides(arg0: Internal.JobAttributes$SidesType);
        set multipleDocumentHandling(arg0: Internal.JobAttributes$MultipleDocumentHandlingType);
        set maxPage(arg0: number);
        set toPage(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.JobAttributes$DefaultSelectionType, arg2: Internal.JobAttributes$DestinationType, arg3: Internal.JobAttributes$DialogType, arg4: string, arg5: number, arg6: number, arg7: Internal.JobAttributes$MultipleDocumentHandlingType, arg8: number[][], arg9: string, arg10: Internal.JobAttributes$SidesType);
        constructor(arg0: Internal.JobAttributes);
    }
    type JobAttributes_ = JobAttributes;
    interface ContainerAccessor {
        getListeners(): Internal.List<Internal.IContainerListener>;
        (): Internal.List<Internal.IContainerListener>;
    }
    type ContainerAccessor_ = (()=>Internal.List<Internal.IContainerListener>) | ContainerAccessor;
    class PainterUpdatedEventJS extends Internal.ClientEventJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PainterUpdatedEventJS_ = PainterUpdatedEventJS;
    class GuiScreenEvent$MouseClickedEvent$Pre extends Internal.GuiScreenEvent$MouseClickedEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number);
    }
    type GuiScreenEvent$MouseClickedEvent$Pre_ = GuiScreenEvent$MouseClickedEvent$Pre;
    class SPlayerListItemPacket$Action extends Internal.Enum<Internal.SPlayerListItemPacket$Action> {
        static valueOf(arg0: string): Internal.SPlayerListItemPacket$Action;
        static values(): Internal.SPlayerListItemPacket$Action[];
        static readonly REMOVE_PLAYER: Internal.SPlayerListItemPacket$Action;
        static readonly UPDATE_DISPLAY_NAME: Internal.SPlayerListItemPacket$Action;
        static readonly ADD_PLAYER: Internal.SPlayerListItemPacket$Action;
        static readonly UPDATE_GAME_MODE: Internal.SPlayerListItemPacket$Action;
        static readonly UPDATE_LATENCY: Internal.SPlayerListItemPacket$Action;
    }
    type SPlayerListItemPacket$Action_ = "add_player" | "update_game_mode" | "update_latency" | "update_display_name" | "remove_player" | SPlayerListItemPacket$Action;
    interface Kind1$Mu extends Internal.K1 {
    }
    type Kind1$Mu_ = Kind1$Mu;
    class BeeDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_228964_a_(arg0: Internal.BeeDebugRenderer$Bee): void;
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: number, arg4: number): void;
        func_228966_a_(arg0: Internal.BeeDebugRenderer$Hive): void;
        func_217675_a(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type BeeDebugRenderer_ = BeeDebugRenderer;
    interface AddressLayout extends Internal.ValueLayout {
        targetLayout(): Internal.Optional<Internal.MemoryLayout>;
        withoutTargetLayout(): Internal.AddressLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.AddressLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.AddressLayout;
        withoutName(): Internal.AddressLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.AddressLayout;
        withTargetLayout(arg0: Internal.MemoryLayout): Internal.AddressLayout;
    }
    type AddressLayout_ = AddressLayout;
    class FurnatorConfig extends Internal.GeneratorConfig {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type FurnatorConfig_ = FurnatorConfig;
    class BlockModificationProperties extends Document.Object {
        setRandomlyTicking(v: boolean): void;
        setRequiresTool(v: boolean): void;
        setJumpFactor(v: number): void;
        setDestroySpeed(v: number): void;
        setHasCollision(v: boolean): void;
        setFriction(v: number): void;
        setExplosionResistance(v: number): void;
        setSpeedFactor(v: number): void;
        setLightEmission(v: number): void;
        setSoundType(v: Internal.SoundType): void;
        setMaterial(v: Internal.MaterialJS_): void;
        readonly block: Internal.BlockKJS;
        set lightEmission(v: number);
        set explosionResistance(v: number);
        set material(v: Internal.MaterialJS_);
        set destroySpeed(v: number);
        set requiresTool(v: boolean);
        set speedFactor(v: number);
        set randomlyTicking(v: boolean);
        set soundType(v: Internal.SoundType);
        set friction(v: number);
        set hasCollision(v: boolean);
        set jumpFactor(v: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(i: Internal.BlockKJS);
    }
    type BlockModificationProperties_ = BlockModificationProperties;
    class BlastFurnaceTileEntity extends Internal.AbstractFurnaceTileEntity {
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_201561_a(arg0: Internal.World, arg1: Internal.ServerPlayerEntity, arg2: Internal.IRecipe<any>): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_145818_k_(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BlastFurnaceTileEntity_ = BlastFurnaceTileEntity;
    class CSteerBoatPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_187014_b(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_187012_a(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: boolean, arg1: boolean);
    }
    type CSteerBoatPacket_ = CSteerBoatPacket;
    class View$Mu extends Document.Object implements Internal.K2 {
    }
    type View$Mu_ = View$Mu;
    abstract class GraphicsConfigTemplate extends Document.Object implements Internal.Serializable {
        isGraphicsConfigSupported(arg0: Internal.GraphicsConfiguration): boolean;
        getBestConfiguration(arg0: Internal.GraphicsConfiguration[]): Internal.GraphicsConfiguration;
        static readonly UNNECESSARY: 3;
        static readonly PREFERRED: 2;
        static readonly REQUIRED: 1;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type GraphicsConfigTemplate_ = GraphicsConfigTemplate;
    interface AccessibleTable {
        getAccessibleRowHeader(): Internal.AccessibleTable;
        getSelectedAccessibleRows(): number[];
        getAccessibleColumnHeader(): Internal.AccessibleTable;
        getAccessibleColumnDescription(arg0: number): Internal.Accessible;
        getAccessibleSummary(): Internal.Accessible;
        setAccessibleRowDescription(arg0: number, arg1: Internal.Accessible_): void;
        setAccessibleColumnHeader(arg0: Internal.AccessibleTable): void;
        getAccessibleRowDescription(arg0: number): Internal.Accessible;
        getAccessibleAt(arg0: number, arg1: number): Internal.Accessible;
        getSelectedAccessibleColumns(): number[];
        setAccessibleRowHeader(arg0: Internal.AccessibleTable): void;
        getAccessibleRowExtentAt(arg0: number, arg1: number): number;
        getAccessibleColumnCount(): number;
        setAccessibleCaption(arg0: Internal.Accessible_): void;
        getAccessibleColumnExtentAt(arg0: number, arg1: number): number;
        getAccessibleRowCount(): number;
        isAccessibleSelected(arg0: number, arg1: number): boolean;
        setAccessibleColumnDescription(arg0: number, arg1: Internal.Accessible_): void;
        isAccessibleColumnSelected(arg0: number): boolean;
        getAccessibleCaption(): Internal.Accessible;
        setAccessibleSummary(arg0: Internal.Accessible_): void;
        isAccessibleRowSelected(arg0: number): boolean;
    }
    type AccessibleTable_ = AccessibleTable;
    class BlockEvent$CropGrowEvent$Pre extends Internal.BlockEvent$CropGrowEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.World, arg1: BlockPos, arg2: Internal.BlockState);
    }
    type BlockEvent$CropGrowEvent$Pre_ = BlockEvent$CropGrowEvent$Pre;
    class BeaconTileEntity$BeamSegment extends Document.Object {
        func_177262_a(): void;
        func_177264_c(): number;
        func_177263_b(): number[];
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number[]);
    }
    type BeaconTileEntity$BeamSegment_ = BeaconTileEntity$BeamSegment;
    interface FuncSupplier$Func1 extends Internal.FuncSupplier {
        create(args: Internal.List<dev.latvian.mods.rhino.util.unit.Unit>): dev.latvian.mods.rhino.util.unit.Unit;
        create1(arg0: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        (arg0: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
    }
    type FuncSupplier$Func1_ = ((arg0: dev.latvian.mods.rhino.util.unit.Unit)=>dev.latvian.mods.rhino.util.unit.Unit) | FuncSupplier$Func1;
    class PathType extends Internal.Enum<Internal.PathType> {
        static valueOf(arg0: string): Internal.PathType;
        static values(): Internal.PathType[];
        static readonly LAND: Internal.PathType;
        static readonly AIR: Internal.PathType;
        static readonly WATER: Internal.PathType;
    }
    type PathType_ = "land" | "water" | "air" | PathType;
    class SSpawnPaintingPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_179836_c(): Internal.Direction;
        func_179837_b(): BlockPos;
        func_186895_b(): Internal.UUID;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_201063_e(): Internal.PaintingType;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_148965_c(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PaintingEntity);
    }
    type SSpawnPaintingPacket_ = SSpawnPaintingPacket;
    abstract class LayerRenderer <T, M> extends Document.Object {
        func_225628_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: T, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        func_215332_c(): M;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IEntityRenderer<T, M>);
    }
    type LayerRenderer_<T, M> = LayerRenderer<T, M>;
    class SChangeGameStatePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_241776_b_(): Internal.SChangeGameStatePacket$State;
        func_149137_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        static readonly field_241769_f_: Internal.SChangeGameStatePacket$State;
        static readonly field_241768_e_: Internal.SChangeGameStatePacket$State;
        static readonly field_241770_g_: Internal.SChangeGameStatePacket$State;
        static readonly field_241775_l_: Internal.SChangeGameStatePacket$State;
        static readonly field_241764_a_: Internal.SChangeGameStatePacket$State;
        static readonly field_241767_d_: Internal.SChangeGameStatePacket$State;
        static readonly field_241765_b_: Internal.SChangeGameStatePacket$State;
        static readonly field_241766_c_: Internal.SChangeGameStatePacket$State;
        static readonly field_241772_i_: Internal.SChangeGameStatePacket$State;
        static readonly field_241771_h_: Internal.SChangeGameStatePacket$State;
        static readonly field_241774_k_: Internal.SChangeGameStatePacket$State;
        static readonly field_241773_j_: Internal.SChangeGameStatePacket$State;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.SChangeGameStatePacket$State, arg1: number);
    }
    type SChangeGameStatePacket_ = SChangeGameStatePacket;
    interface ITooltipFlag {
        func_194127_a(): boolean;
        (): boolean;
    }
    type ITooltipFlag_ = (()=>boolean) | ITooltipFlag;
    class WorldgenAddEventJS extends Internal.StartupEventJS {
        addSpawn(p: Internal.Consumer_<Internal.AddSpawnProperties_>): void;
        addSpawn(category: Internal.EntityClassification_, spawn: string): void;
        isNotInBiomes(filter: string[]): boolean;
        addOre(p: Internal.Consumer_<Internal.AddOreProperties_>): void;
        addLake(p: Internal.Consumer_<Internal.AddLakeProperties_>): void;
        isInBiomes(filter: string[]): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type WorldgenAddEventJS_ = WorldgenAddEventJS;
    class AccessibleRole extends Internal.AccessibleBundle {
        static readonly DATE_EDITOR: Internal.AccessibleRole;
        static readonly PARAGRAPH: Internal.AccessibleRole;
        static readonly TEXT: Internal.AccessibleRole;
        static readonly ALERT: Internal.AccessibleRole;
        static readonly FONT_CHOOSER: Internal.AccessibleRole;
        static readonly GROUP_BOX: Internal.AccessibleRole;
        static readonly ROOT_PANE: Internal.AccessibleRole;
        static readonly TABLE: Internal.AccessibleRole;
        static readonly COMBO_BOX: Internal.AccessibleRole;
        static readonly SLIDER: Internal.AccessibleRole;
        static readonly PROGRESS_MONITOR: Internal.AccessibleRole;
        static readonly HYPERLINK: Internal.AccessibleRole;
        static readonly LABEL: Internal.AccessibleRole;
        static readonly PROGRESS_BAR: Internal.AccessibleRole;
        static readonly DESKTOP_ICON: Internal.AccessibleRole;
        static readonly SEPARATOR: Internal.AccessibleRole;
        static readonly MENU_ITEM: Internal.AccessibleRole;
        static readonly SCROLL_PANE: Internal.AccessibleRole;
        static readonly AWT_COMPONENT: Internal.AccessibleRole;
        static readonly MENU_BAR: Internal.AccessibleRole;
        static readonly PUSH_BUTTON: Internal.AccessibleRole;
        static readonly PAGE_TAB: Internal.AccessibleRole;
        static readonly CHECK_BOX: Internal.AccessibleRole;
        static readonly TREE: Internal.AccessibleRole;
        static readonly PASSWORD_TEXT: Internal.AccessibleRole;
        static readonly LIST: Internal.AccessibleRole;
        static readonly HTML_CONTAINER: Internal.AccessibleRole;
        static readonly OPTION_PANE: Internal.AccessibleRole;
        static readonly DESKTOP_PANE: Internal.AccessibleRole;
        static readonly HEADER: Internal.AccessibleRole;
        static readonly FRAME: Internal.AccessibleRole;
        static readonly TOOL_TIP: Internal.AccessibleRole;
        static readonly ROW_HEADER: Internal.AccessibleRole;
        static readonly SPIN_BOX: Internal.AccessibleRole;
        static readonly CANVAS: Internal.AccessibleRole;
        static readonly TOOL_BAR: Internal.AccessibleRole;
        static readonly INTERNAL_FRAME: Internal.AccessibleRole;
        static readonly LAYERED_PANE: Internal.AccessibleRole;
        static readonly PAGE_TAB_LIST: Internal.AccessibleRole;
        static readonly COLUMN_HEADER: Internal.AccessibleRole;
        static readonly ICON: Internal.AccessibleRole;
        static readonly COLOR_CHOOSER: Internal.AccessibleRole;
        static readonly VIEWPORT: Internal.AccessibleRole;
        static readonly PANEL: Internal.AccessibleRole;
        static readonly DIRECTORY_PANE: Internal.AccessibleRole;
        static readonly STATUS_BAR: Internal.AccessibleRole;
        static readonly DIALOG: Internal.AccessibleRole;
        static readonly SPLIT_PANE: Internal.AccessibleRole;
        static readonly GLASS_PANE: Internal.AccessibleRole;
        static readonly SWING_COMPONENT: Internal.AccessibleRole;
        static readonly FOOTER: Internal.AccessibleRole;
        static readonly EDITBAR: Internal.AccessibleRole;
        static readonly FILLER: Internal.AccessibleRole;
        static readonly WINDOW: Internal.AccessibleRole;
        static readonly FILE_CHOOSER: Internal.AccessibleRole;
        static readonly POPUP_MENU: Internal.AccessibleRole;
        static readonly SCROLL_BAR: Internal.AccessibleRole;
        static readonly LIST_ITEM: Internal.AccessibleRole;
        static readonly RADIO_BUTTON: Internal.AccessibleRole;
        static readonly MENU: Internal.AccessibleRole;
        static readonly UNKNOWN: Internal.AccessibleRole;
        static readonly RULER: Internal.AccessibleRole;
        static readonly TOGGLE_BUTTON: Internal.AccessibleRole;
    }
    type AccessibleRole_ = AccessibleRole;
    abstract class PainterObject extends Document.Object implements Internal.SpecialEquality {
        update(tag: Internal.CompoundNBT_): void;
        id(i: string): Internal.PainterObject;
        specialEquals(o: any, shallow: boolean): boolean;
        parent: Internal.PainterObjectStorage;
        visible: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PainterObject_ = PainterObject;
    class ServerScriptManager extends Document.Object {
        init(serverResources: Internal.DataPackRegistries): void;
        reloadScriptManager(resourceManager: Internal.IResourceManager): void;
        resourcePackList(list0: Internal.List<Internal.IResourcePack>): Internal.List<Internal.IResourcePack>;
        readonly scriptManager: Internal.ScriptManager;
        static instance: Internal.ServerScriptManager;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ServerScriptManager_ = ServerScriptManager;
    interface ChunkRenderBackend <T> {
        getRendererName(): string;
        createShaders(arg0: Internal.RenderDevice): void;
        upload(arg0: Internal.CommandList, arg1: Internal.Iterator<Internal.ChunkBuildResult<T>>): void;
        end(arg0: Internal.MatrixStack): void;
        getVertexType(): Internal.ChunkVertexType;
        getDebugStrings(): Internal.List<string>;
        getGraphicsStateType(): Internal.Class<T>;
        render(arg0: Internal.CommandList, arg1: Internal.ChunkRenderListIterator<T>, arg2: Internal.ChunkCameraContext): void;
        delete(): void;
        begin(arg0: Internal.MatrixStack): void;
    }
    type ChunkRenderBackend_<T> = ChunkRenderBackend<T>;
    class ZoneOffsetTransition extends Document.Object implements Internal.Comparable<Internal.ZoneOffsetTransition>, Internal.Serializable {
        getInstant(): Internal.Instant;
        isGap(): boolean;
        getDuration(): Internal.Duration;
        toEpochSecond(): number;
        getDateTimeAfter(): Internal.LocalDateTime;
        static of(arg0: Internal.LocalDateTime, arg1: Internal.ZoneOffset, arg2: Internal.ZoneOffset): Internal.ZoneOffsetTransition;
        isOverlap(): boolean;
        getDateTimeBefore(): Internal.LocalDateTime;
        getOffsetAfter(): Internal.ZoneOffset;
        getOffsetBefore(): Internal.ZoneOffset;
        compareTo(arg0: Internal.ZoneOffsetTransition): number;
        compareTo(arg0: any): number;
        isValidOffset(arg0: Internal.ZoneOffset): boolean;
        get duration(): Internal.Duration;
        get overlap(): boolean;
        get gap(): boolean;
        get dateTimeBefore(): Internal.LocalDateTime;
        get offsetAfter(): Internal.ZoneOffset;
        get dateTimeAfter(): Internal.LocalDateTime;
        get offsetBefore(): Internal.ZoneOffset;
        get instant(): Internal.Instant;
    }
    type ZoneOffsetTransition_ = ZoneOffsetTransition;
    class JsonWriter extends Document.Object implements Internal.Closeable, Internal.Flushable {
        setSerializeNulls(arg0: boolean): void;
        setHtmlSafe(arg0: boolean): void;
        jsonValue(arg0: string): Internal.JsonWriter;
        isLenient(): boolean;
        endArray(): Internal.JsonWriter;
        nullValue(): Internal.JsonWriter;
        setLenient(arg0: boolean): void;
        endObject(): Internal.JsonWriter;
        beginArray(): Internal.JsonWriter;
        flush(): void;
        beginObject(): Internal.JsonWriter;
        getSerializeNulls(): boolean;
        setIndent(arg0: string): void;
        name(arg0: string): Internal.JsonWriter;
        isHtmlSafe(): boolean;
        close(): void;
        value(arg0: boolean): Internal.JsonWriter;
        value(arg0: number): Internal.JsonWriter;
        value(arg0: number): Internal.JsonWriter;
        value(arg0: boolean): Internal.JsonWriter;
        value(arg0: string): Internal.JsonWriter;
        value(arg0: Internal.Number): Internal.JsonWriter;
        get serializeNulls(): boolean;
        get lenient(): boolean;
        get htmlSafe(): boolean;
        set serializeNulls(arg0: boolean);
        set indent(arg0: string);
        set lenient(arg0: boolean);
        set htmlSafe(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Writer);
    }
    type JsonWriter_ = JsonWriter;
    class RecipeList extends Document.Object {
        func_194212_c(): boolean;
        func_194214_a(arg0: Internal.RecipeBook): void;
        func_194211_e(): boolean;
        func_194213_a(arg0: Internal.IRecipe<any>): boolean;
        func_194210_a(arg0: Internal.RecipeItemHelper, arg1: number, arg2: number, arg3: Internal.RecipeBook): void;
        func_192708_c(): boolean;
        func_192711_b(): Internal.List<Internal.IRecipe<any>>;
        func_194209_a(): boolean;
        func_194208_a(arg0: boolean): Internal.List<Internal.IRecipe<any>>;
        func_194207_b(arg0: boolean): Internal.List<Internal.IRecipe<any>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.List<Internal.IRecipe<any>>);
    }
    type RecipeList_ = RecipeList;
    class ServerScoreboard$Action extends Internal.Enum<Internal.ServerScoreboard$Action> {
        static valueOf(arg0: string): Internal.ServerScoreboard$Action;
        static values(): Internal.ServerScoreboard$Action[];
        static readonly REMOVE: Internal.ServerScoreboard$Action;
        static readonly CHANGE: Internal.ServerScoreboard$Action;
    }
    type ServerScoreboard$Action_ = "change" | "remove" | ServerScoreboard$Action;
    class ParsedCommandNode <S> extends Document.Object {
        getRange(): Internal.StringRange;
        getNode(): Internal.CommandNode<S>;
        get node(): Internal.CommandNode<S>;
        get range(): Internal.StringRange;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CommandNode<S>, arg1: Internal.StringRange);
    }
    type ParsedCommandNode_<S> = ParsedCommandNode<S>;
    interface AttributeSet {
        getResolveParent(): Internal.AttributeSet;
        getAttribute(arg0: any): any;
        containsAttributes(arg0: Internal.AttributeSet): boolean;
        getAttributeNames(): Internal.Enumeration<any>;
        isEqual(arg0: Internal.AttributeSet): boolean;
        isDefined(arg0: any): boolean;
        containsAttribute(arg0: any, arg1: any): boolean;
        copyAttributes(): Internal.AttributeSet;
        getAttributeCount(): number;
    }
    type AttributeSet_ = AttributeSet;
    class Rotation extends Internal.Enum<Internal.Rotation> {
        static func_222467_b(arg0: Internal.Random): Internal.List<Internal.Rotation>;
        static valueOf(arg0: string): Internal.Rotation;
        static values(): Internal.Rotation[];
        func_235574_a_(): Internal.Orientation;
        func_185833_a(arg0: number, arg1: number): number;
        func_185830_a(arg0: Internal.Rotation_): Internal.Rotation;
        func_185831_a(arg0: Internal.Direction_): Internal.Direction;
        static func_222466_a(arg0: Internal.Random): Internal.Rotation;
        static readonly COUNTERCLOCKWISE_90: Internal.Rotation;
        static readonly CLOCKWISE_90: Internal.Rotation;
        static readonly CLOCKWISE_180: Internal.Rotation;
        static readonly NONE: Internal.Rotation;
    }
    type Rotation_ = "none" | "clockwise_90" | "clockwise_180" | "counterclockwise_90" | Rotation;
    abstract class QuestObjectBase extends Document.Object {
        deleteChildren(): void;
        readNetData(arg0: Internal.PacketBuffer): void;
        getMutableTitle(): Internal.IFormattableTextComponent;
        getTags(): Internal.Set<string>;
        getCodeString(): string;
        static getCodeString(arg0: Internal.QuestObjectBase): string;
        static getCodeString(arg0: number): string;
        writeData(arg0: Internal.CompoundNBT_): void;
        editedFromGUIOnServer(): void;
        createSubGroup(arg0: Internal.ConfigGroup): Internal.ConfigGroup;
        forceProgress(arg0: Internal.TeamData, arg1: Internal.ProgressChange): void;
        getTitle(): Internal.ITextComponent;
        getAltIcon(): Internal.Icon;
        getObjectType(): Internal.QuestObjectType;
        getPath(): string;
        clearCachedData(): void;
        getParentID(): number;
        refreshJEI(): number;
        editedFromGUI(): void;
        static parseCodeString(arg0: string): number;
        readData(arg0: Internal.CompoundNBT_): void;
        hasTag(arg0: string): boolean;
        getQuestChapter(): Internal.Chapter;
        getQuestFile(): Internal.QuestFile;
        static getID(arg0: Internal.QuestObjectBase): number;
        onEditButtonClicked(arg0: Internal.Runnable_): void;
        writeNetData(arg0: Internal.PacketBuffer): void;
        getConfig(arg0: Internal.ConfigGroup): void;
        getIcon(): Internal.Icon;
        forceProgressRaw(arg0: Internal.TeamData, arg1: Internal.ProgressChange): void;
        getAltTitle(): Internal.ITextComponent;
        static isNull(arg0: Internal.QuestObjectBase): boolean;
        deleteSelf(): void;
        static titleToID(arg0: string): Internal.Optional<string>;
        onCreated(): void;
        invalid: boolean;
        icon: Internal.ItemStack;
        static sendNotifications: Internal.Tristate;
        id: number;
        title: string;
        get path(): string;
        get codeString(): string;
        get altTitle(): Internal.ITextComponent;
        get questFile(): Internal.QuestFile;
        get parentID(): number;
        get mutableTitle(): Internal.IFormattableTextComponent;
        get tags(): Internal.Set<string>;
        get altIcon(): Internal.Icon;
        get objectType(): Internal.QuestObjectType;
        get questChapter(): Internal.Chapter;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type QuestObjectBase_ = QuestObjectBase;
    class ModuleDescriptor$Opens$Modifier extends Internal.Enum<Internal.ModuleDescriptor$Opens$Modifier> {
        static valueOf(arg0: string): Internal.ModuleDescriptor$Opens$Modifier;
        static values(): Internal.ModuleDescriptor$Opens$Modifier[];
        static readonly SYNTHETIC: Internal.ModuleDescriptor$Opens$Modifier;
        static readonly MANDATED: Internal.ModuleDescriptor$Opens$Modifier;
    }
    type ModuleDescriptor$Opens$Modifier_ = "synthetic" | "mandated" | ModuleDescriptor$Opens$Modifier;
    interface IBlockColor {
        getColor(arg0: Internal.BlockState, arg1: Internal.IBlockDisplayReader, arg2: BlockPos, arg3: number): number;
        (arg0: Internal.BlockState, arg1: Internal.IBlockDisplayReader, arg2: BlockPos, arg3: number): number;
    }
    type IBlockColor_ = ((arg0: Internal.BlockState, arg1: Internal.IBlockDisplayReader, arg2: BlockPos, arg3: number)=>number) | IBlockColor;
    interface MouseListener extends Internal.EventListener {
        mouseReleased(arg0: Internal.MouseEvent): void;
        mouseExited(arg0: Internal.MouseEvent): void;
        mouseEntered(arg0: Internal.MouseEvent): void;
        mouseClicked(arg0: Internal.MouseEvent): void;
        mousePressed(arg0: Internal.MouseEvent): void;
    }
    type MouseListener_ = MouseListener;
    interface FloatConsumer extends Internal.Consumer<number>, Internal.DoubleConsumer {
        andThen(arg0: Internal.Consumer_<number>): Internal.Consumer<number>;
        andThen(arg0: Internal.DoubleConsumer_): Internal.DoubleConsumer;
        andThen(arg0: Internal.DoubleConsumer_): Internal.FloatConsumer;
        andThen(arg0: Internal.FloatConsumer_): Internal.FloatConsumer;
        accept(arg0: any): void;
        accept(arg0: number): void;
        accept(arg0: number): void;
        accept(arg0: number): void;
        (arg0: number): void;
    }
    type FloatConsumer_ = ((arg0: number)=>void) | FloatConsumer;
    abstract class CommandBlockLogic extends Document.Object implements Internal.ICommandSource {
        func_195043_d(): Internal.ServerWorld;
        func_145759_b(arg0: Internal.CompoundNBT_): void;
        func_145756_e(): void;
        func_175573_a(arg0: boolean): void;
        func_195042_h(): Internal.CommandSource;
        func_145760_g(): number;
        func_145747_a(arg0: Internal.ITextComponent_, arg1: Internal.UUID): void;
        func_195039_a(): boolean;
        func_145755_a(arg0: Internal.World): boolean;
        func_145753_i(): string;
        func_189510_a(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        func_145749_h(): Internal.ITextComponent;
        func_207404_l(): Internal.ITextComponent;
        func_175571_m(): boolean;
        func_184167_a(arg0: number): void;
        func_210165_f(): Vec3;
        func_207405_b(arg0: Internal.ITextComponent_): void;
        func_145750_b(arg0: Internal.ITextComponent_): void;
        func_195041_r_(): boolean;
        func_145752_a(arg0: string): void;
        func_175574_a(arg0: Internal.PlayerEntity): Internal.ActionResultType;
        func_195040_b(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CommandBlockLogic_ = CommandBlockLogic;
    interface PrimitiveIterator <T, T_CONS> extends Internal.Iterator<T> {
        forEachRemaining(arg0: T_CONS): void;
        (arg0: T_CONS): void;
    }
    type PrimitiveIterator_<T, T_CONS> = ((arg0: T_CONS)=>void) | PrimitiveIterator<T, T_CONS>;
    interface IICProxyProvider {
        toNBT(arg0: Internal.IImmersiveConnectable): Internal.CompoundNBT;
        fromNBT(arg0: Internal.CompoundNBT_): Internal.IImmersiveConnectable;
        createFor(iic: Internal.IImmersiveConnectable): Internal.IImmersiveConnectable;
        create(arg0: BlockPos, arg1: Internal.Collection<Internal.Connection>, arg2: Internal.Collection<Internal.ConnectionPoint>): Internal.IImmersiveConnectable;
    }
    type IICProxyProvider_ = IICProxyProvider;
    class JigsawOrientation extends Internal.Enum<Internal.JigsawOrientation> implements Internal.IStringSerializable {
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.JigsawOrientation;
        static values(): Internal.JigsawOrientation[];
        static func_239641_a_(arg0: Internal.Direction_, arg1: Internal.Direction_): Internal.JigsawOrientation;
        func_239642_b_(): Internal.Direction;
        func_239644_c_(): Internal.Direction;
        static readonly UP_SOUTH: Internal.JigsawOrientation;
        static readonly DOWN_NORTH: Internal.JigsawOrientation;
        static readonly UP_EAST: Internal.JigsawOrientation;
        static readonly UP_NORTH: Internal.JigsawOrientation;
        static readonly NORTH_UP: Internal.JigsawOrientation;
        static readonly SOUTH_UP: Internal.JigsawOrientation;
        static readonly DOWN_EAST: Internal.JigsawOrientation;
        static readonly DOWN_WEST: Internal.JigsawOrientation;
        static readonly UP_WEST: Internal.JigsawOrientation;
        static readonly WEST_UP: Internal.JigsawOrientation;
        static readonly DOWN_SOUTH: Internal.JigsawOrientation;
        static readonly EAST_UP: Internal.JigsawOrientation;
    }
    type JigsawOrientation_ = "down_east" | "down_north" | "down_south" | "down_west" | "up_east" | "up_north" | "up_south" | "up_west" | "west_up" | "east_up" | "north_up" | "south_up" | JigsawOrientation;
    interface IGlyphInfo extends Internal.IGlyph {
        func_211200_h(): number;
        func_211578_g(): number;
        func_211579_f(): boolean;
        func_211203_b(): number;
        func_211573_a(arg0: number, arg1: number): void;
        func_223277_l_(): number;
        func_211202_a(): number;
        func_211198_f(): number;
        func_211199_g(): number;
        func_211204_i(): number;
    }
    type IGlyphInfo_ = IGlyphInfo;
    class DebugRenderer extends Document.Object {
        static func_217732_a(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number): void;
        static func_217731_a(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number): void;
        static func_217730_a(arg0: Internal.AxisAlignedBB, arg1: number, arg2: number, arg3: number, arg4: number): void;
        static func_217736_a(arg0: BlockPos, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        static func_217735_a(arg0: BlockPos, arg1: BlockPos, arg2: number, arg3: number, arg4: number, arg5: number): void;
        static func_217734_a(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: number, arg8: boolean): void;
        static func_217733_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        static func_217729_a(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        static func_217728_a(arg0: Internal.Entity, arg1: number): Internal.Optional<Internal.Entity>;
        func_229019_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer$Impl, arg2: number, arg3: number, arg4: number): void;
        func_217737_a(): void;
        func_190075_b(): boolean;
        readonly field_229017_n_: Internal.BeeDebugRenderer;
        readonly field_222927_n: Internal.RaidDebugRenderer;
        readonly field_193852_g: Internal.DebugRenderer$IDebugRenderer;
        readonly field_217740_l: Internal.DebugRenderer$IDebugRenderer;
        readonly field_188286_a: Internal.PathfindingDebugRenderer;
        readonly field_229018_q_: Internal.GameTestDebugRenderer;
        readonly field_201750_j: Internal.DebugRenderer$IDebugRenderer;
        readonly field_188287_b: Internal.DebugRenderer$IDebugRenderer;
        readonly field_201747_g: Internal.CaveDebugRenderer;
        readonly field_201748_h: Internal.StructureDebugRenderer;
        readonly field_239372_n_: Internal.VillageSectionsDebugRender;
        readonly field_190078_d: Internal.DebugRenderer$IDebugRenderer;
        readonly field_190077_c: Internal.DebugRenderer$IDebugRenderer;
        readonly field_239371_m_: Internal.PointOfInterestDebugRenderer;
        readonly field_217742_n: Internal.EntityAIDebugRenderer;
        readonly field_191325_e: Internal.DebugRenderer$IDebugRenderer;
        readonly field_191557_f: Internal.DebugRenderer$IDebugRenderer;
        readonly field_201749_i: Internal.DebugRenderer$IDebugRenderer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type DebugRenderer_ = DebugRenderer;
    interface RewardType$Provider {
        create(arg0: Internal.Quest): Internal.Reward;
        (arg0: Internal.Quest): Internal.Reward;
    }
    type RewardType$Provider_ = ((arg0: Internal.Quest)=>Internal.Reward) | RewardType$Provider;
    class LivingSpawnEvent$AllowDespawn extends Internal.LivingSpawnEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MobEntity);
    }
    type LivingSpawnEvent$AllowDespawn_ = LivingSpawnEvent$AllowDespawn;
    class EndNBT extends Document.Object implements Internal.INBT {
        func_74737_b(): Internal.INBT;
        func_74737_b(): Internal.EndNBT;
        func_150285_a_(): string;
        func_197637_c(): Internal.ITextComponent;
        func_74732_a(): number;
        func_74734_a(arg0: Internal.DataOutput): void;
        func_225647_b_(): Internal.INBTType<Internal.EndNBT>;
        func_199850_a(arg0: string, arg1: number): Internal.ITextComponent;
        static readonly field_229685_a_: Internal.INBTType<Internal.EndNBT>;
        static readonly field_229686_b_: Internal.EndNBT;
    }
    type EndNBT_ = EndNBT;
    class MoonPhase extends Internal.Enum<Internal.MoonPhase> {
        static fromWorld(arg0: Internal.IWorld): Internal.MoonPhase;
        static valueOf(arg0: string): Internal.MoonPhase;
        static values(): Internal.MoonPhase[];
        getTexture(): Internal.AbstractRenderableTexture;
        static readonly WANING_3_4: Internal.MoonPhase;
        static readonly NEW: Internal.MoonPhase;
        static readonly WANING_1_4: Internal.MoonPhase;
        static readonly WANING_1_2: Internal.MoonPhase;
        static readonly WAXING_1_4: Internal.MoonPhase;
        static readonly WAXING_1_2: Internal.MoonPhase;
        static readonly FULL: Internal.MoonPhase;
        static readonly WAXING_3_4: Internal.MoonPhase;
        get texture(): Internal.AbstractRenderableTexture;
    }
    type MoonPhase_ = "full" | "waning_3_4" | "waning_1_2" | "waning_1_4" | "new" | "waxing_1_4" | "waxing_1_2" | "waxing_3_4" | MoonPhase;
    class BitArray extends Document.Object implements Internal.PackedIntegerArrayExtended {
        func_225421_a(arg0: Internal.IntConsumer_): void;
        func_188144_b(): number;
        copyUsingPalette(out: any[], palette: Internal.ClonedPalette_<any>): void;
        func_188143_a(): number[];
        func_219789_a(arg0: number, arg1: number): number;
        func_188141_a(arg0: number, arg1: number): void;
        func_188142_a(arg0: number): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
        constructor(arg0: number, arg1: number, arg2: number[]);
    }
    type BitArray_ = BitArray;
    class FormatStyle extends Internal.Enum<Internal.FormatStyle> {
        static valueOf(arg0: string): Internal.FormatStyle;
        static values(): Internal.FormatStyle[];
        static readonly MEDIUM: Internal.FormatStyle;
        static readonly FULL: Internal.FormatStyle;
        static readonly LONG: Internal.FormatStyle;
        static readonly SHORT: Internal.FormatStyle;
    }
    type FormatStyle_ = "full" | "long" | "medium" | "short" | FormatStyle;
    class SStopSoundPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_197704_b(): Internal.SoundCategory;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_197703_a(): ResourceLocation;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: ResourceLocation, arg1: Internal.SoundCategory);
    }
    type SStopSoundPacket_ = SStopSoundPacket;
    interface Int2IntMap extends Internal.Int2IntFunction, Internal.Map<number, number> {
        getOrDefault(arg0: any, arg1: any): any;
        getOrDefault(arg0: any, arg1: number): number;
        getOrDefault(arg0: number, arg1: number): number;
        computeIfAbsentNullable(arg0: number, arg1: Internal.IntFunction_<number>): number;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<number, number>>;
        entrySet(): Internal.Set<any>;
        containsKey(arg0: number): boolean;
        containsKey(arg0: any): boolean;
        computeIfAbsent(arg0: any, arg1: Internal.Function_<any,any>): any;
        computeIfAbsent(arg0: number, arg1: Internal.Function_<number, number>): number;
        computeIfAbsent(arg0: number, arg1: Internal.IntUnaryOperator_): number;
        values(): Internal.Collection<any>;
        values(): Internal.IntCollection;
        replace(arg0: number, arg1: number): number;
        replace(arg0: number, arg1: number, arg2: number): boolean;
        replace(arg0: number, arg1: number): number;
        replace(arg0: number, arg1: number, arg2: number): boolean;
        replace(arg0: any, arg1: any): any;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        clear(): void;
        computeIfAbsentPartial(arg0: number, arg1: Internal.Int2IntFunction_): number;
        containsValue(arg0: any): boolean;
        containsValue(arg0: number): boolean;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: number): number;
        remove(arg0: any): number;
        remove(arg0: any): any;
        remove(arg0: any, arg1: any): boolean;
        remove(arg0: number, arg1: number): boolean;
        int2IntEntrySet(): Internal.ObjectSet<Internal.Int2IntMap$Entry>;
        compute(arg0: number, arg1: Internal.BiFunction_<number, number, number>): number;
        compute(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compute(arg0: number, arg1: Internal.BiFunction_<number, number, number>): number;
        defaultReturnValue(arg0: number): void;
        defaultReturnValue(): number;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, number, number>): number;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, number, number>): number;
        computeIfPresent(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        size(): number;
        merge(arg0: number, arg1: number, arg2: Internal.BiFunction_<number, number, number>): number;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        merge(arg0: number, arg1: number, arg2: Internal.BiFunction_<number, number, number>): number;
        get(arg0: any): number;
        get(arg0: any): any;
        keySet(): Internal.Set<any>;
        keySet(): Internal.IntSet;
        putIfAbsent(arg0: number, arg1: number): number;
        putIfAbsent(arg0: number, arg1: number): number;
        putIfAbsent(arg0: any, arg1: any): any;
    }
    type Int2IntMap_ = Int2IntMap;
    class ItemEntityJS extends Internal.EntityJS {
        setStatusMessage(message: Internal.ITextComponent_): void;
        setNoDespawn(): void;
        setThrower(thrower: Internal.UUID): void;
        setDefaultPickupDelay(): void;
        setPickupDelay(ticks: number): void;
        getLifespan(): number;
        setLifespan(lifespan: number): void;
        getOwner(): Internal.UUID;
        setItem(item: any): void;
        setOwner(owner: Internal.UUID): void;
        setNoPickupDelay(): void;
        setInfinitePickupDelay(): void;
        getThrower(): Internal.UUID;
        get owner(): Internal.UUID;
        get lifespan(): number;
        get thrower(): Internal.UUID;
        set owner(owner: Internal.UUID);
        set pickupDelay(ticks: number);
        set item(item: any);
        set lifespan(lifespan: number);
        set thrower(thrower: Internal.UUID);
        set statusMessage(message: Internal.ITextComponent_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(w: Internal.WorldJS, e: Internal.ItemEntity);
    }
    type ItemEntityJS_ = ItemEntityJS;
    abstract class AbstractByteBuf extends Internal.ByteBuf {
        retain(): Internal.ReferenceCounted;
        retain(arg0: number): Internal.ReferenceCounted;
        touch(arg0: any): Internal.ReferenceCounted;
        touch(): Internal.ReferenceCounted;
    }
    type AbstractByteBuf_ = AbstractByteBuf;
    class FlowingFluidBlock extends Internal.Block implements Internal.IBucketPickupHandler {
        rotate(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: Internal.Rotation_): Internal.BlockState;
        getStateAtViewpoint(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Vec3): Internal.BlockState;
        onBlockExploded(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Explosion): void;
        getBedDirection(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): Internal.Direction;
        isBed(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        canHarvestBlock(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.BlockState): boolean;
        getBedSpawnPosition(arg0: Internal.EntityType_<any>, arg1: Internal.BlockState, arg2: Internal.IWorldReader, arg3: BlockPos, arg4: number, arg5: Internal.LivingEntity): Internal.Optional<Vec3>;
        isLadder(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.LivingEntity): boolean;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState, arg1: Internal.IBlockDisplayReader, arg2: BlockPos, arg3: Internal.FluidState): boolean;
        canStickTo(arg0: Internal.BlockState, arg1: Internal.BlockState): boolean;
        onNeighborChange(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): void;
        getPickBlock(arg0: Internal.BlockState, arg1: Internal.RayTraceResult, arg2: Internal.IBlockReader, arg3: BlockPos, arg4: Internal.PlayerEntity): Internal.ItemStack;
        getWeakChanges(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        isBurning(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        canEntityDestroy(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        func_204508_a(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState): Internal.Fluid;
        hasTileEntity(arg0: Internal.BlockState): boolean;
        isPortalFrame(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getExplosionResistance(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): number;
        isScaffolding(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.LivingEntity): boolean;
        observedNeighborChange(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Block_, arg4: BlockPos): void;
        canDropFromExplosion(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): boolean;
        removedByPlayer(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity, arg4: boolean, arg5: Internal.FluidState): boolean;
        createTileEntity(arg0: Internal.BlockState, arg1: Internal.IBlockReader): Internal.TileEntity;
        isStickyBlock(arg0: Internal.BlockState): boolean;
        isFertile(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getFogColor(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity, arg4: Vec3, arg5: number): Vec3;
        getAiPathNodeType(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.MobEntity): Internal.PathNodeType;
        isSlimeBlock(arg0: Internal.BlockState): boolean;
        getLightValue(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        getFireSpreadSpeed(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
        isAir(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getToolModifiedState(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity, arg4: Internal.ItemStack, arg5: Internal.ToolType): Internal.BlockState;
        getBeaconColorMultiplier(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): number[];
        getExpDrop(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: number, arg4: number): number;
        isConduitFrame(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): boolean;
        canBeReplacedByLogs(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        addLandingEffects(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.LivingEntity, arg5: number): boolean;
        canCreatureSpawn(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.EntitySpawnPlacementRegistry$PlacementType_, arg4: Internal.EntityType_<any>): boolean;
        getSoundType(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity): Internal.SoundType;
        isToolEffective(arg0: Internal.BlockState, arg1: Internal.ToolType): boolean;
        addRunningEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Entity): boolean;
        canBeReplacedByLeaves(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        getSlipperiness(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity): number;
        getBlockStatesKJS(): Internal.List<Internal.BlockState>;
        isFlammable(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        getBlock(): Internal.Block;
        addDestroyEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.ParticleManager): boolean;
        getEnchantPowerBonus(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): number;
        setBedOccupied(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.LivingEntity, arg4: boolean): void;
        setRegistryName(arg0: ResourceLocation_): any;
        isFireSource(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        getRespawnPosition(arg0: Internal.BlockState, arg1: Internal.EntityType_<any>, arg2: Internal.IWorldReader, arg3: BlockPos, arg4: number, arg5: Internal.LivingEntity): Internal.Optional<Vec3>;
        onPlantGrow(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: BlockPos): void;
        catchFire(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Direction_, arg4: Internal.LivingEntity): void;
        canConnectRedstone(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        getFluid(): Internal.FlowingFluid;
        addHitEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: Internal.RayTraceResult, arg3: Internal.ParticleManager): boolean;
        getFlammability(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
        static readonly field_235510_c_: Internal.VoxelShape;
        static readonly field_176367_b: Internal.IntegerProperty;
        get blockStatesKJS(): Internal.List<Internal.BlockState>;
        get block(): Internal.Block;
        get fluid(): Internal.FlowingFluid;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FlowingFluid, arg1: Internal.AbstractBlock$Properties);
        constructor(arg0: java_.util.function_.Supplier<Internal.FlowingFluid>, arg1: Internal.AbstractBlock$Properties);
    }
    type FlowingFluidBlock_ = FlowingFluidBlock;
    class TickDelayedTask extends Document.Object implements Internal.Runnable {
        func_218823_a(): number;
        run(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.Runnable);
    }
    type TickDelayedTask_ = TickDelayedTask;
    interface CharacterManager$ISliceAcceptor {
        accept(arg0: Internal.Style, arg1: number, arg2: number): void;
        (arg0: Internal.Style, arg1: number, arg2: number): void;
    }
    type CharacterManager$ISliceAcceptor_ = ((arg0: Internal.Style, arg1: number, arg2: number)=>void) | CharacterManager$ISliceAcceptor;
    interface CompletionHandler <V, A> {
        failed(arg0: Internal.Throwable, arg1: A): void;
        completed(arg0: V, arg1: A): void;
    }
    type CompletionHandler_<V, A> = CompletionHandler<V, A>;
    class Matrix4f extends Document.Object implements Internal.Matrix4fExtended {
        multiplyBackward(arg0: Internal.Matrix4f): void;
        add(arg0: Internal.Matrix4f): void;
        rotate(quaternion: Internal.Quaternion): void;
        set(arg0: Internal.Matrix4f): void;
        setTranslation(arg0: number, arg1: number, arg2: number): void;
        func_226601_d_(): Internal.Matrix4f;
        func_226602_e_(): void;
        translate(x: number, y: number, z: number): void;
        func_226600_c_(): boolean;
        static func_226593_a_(arg0: number, arg1: number, arg2: number): Internal.Matrix4f;
        static func_195876_a(arg0: number, arg1: number, arg2: number, arg3: number): Internal.Matrix4f;
        func_226592_a_(arg0: number): void;
        func_226591_a_(): void;
        func_226596_a_(arg0: Internal.Quaternion): void;
        func_195879_b(buf: Internal.FloatBuffer): void;
        transformVecZ(x: number, y: number, z: number): number;
        func_226595_a_(arg0: Internal.Matrix4f): void;
        static func_195877_a(arg0: number, arg1: number, arg2: number, arg3: number): Internal.Matrix4f;
        transformVecY(x: number, y: number, z: number): number;
        transformVecX(x: number, y: number, z: number): number;
        func_226597_a_(arg0: Internal.Vector3f): void;
        func_226598_b_(): number;
        static func_226599_b_(arg0: number, arg1: number, arg2: number): Internal.Matrix4f;
        field_226576_b_: number;
        field_226590_p_: number;
        field_226589_o_: number;
        field_226575_a_: number;
        field_226588_n_: number;
        field_226579_e_: number;
        field_226587_m_: number;
        field_226578_d_: number;
        field_226577_c_: number;
        field_226584_j_: number;
        field_226583_i_: number;
        field_226585_k_: number;
        field_226586_l_: number;
        field_226580_f_: number;
        field_226582_h_: number;
        field_226581_g_: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number[]);
        constructor(arg0: Internal.Quaternion);
        constructor();
        constructor(arg0: Internal.Matrix4f);
    }
    type Matrix4f_ = Matrix4f;
    interface IRecipeManager {
        getRecipeCatalysts(arg0: Internal.IRecipeCategory<any>): Internal.List<any>;
        getRecipeCatalysts(arg0: Internal.IRecipeCategory<any>, arg1: boolean): Internal.List<any>;
        addRecipe<T>(arg0: T, arg1: ResourceLocation_): void;
        createRecipeLayoutDrawable<T>(arg0: Internal.IRecipeCategory<T>, arg1: T, arg2: Internal.IFocus<any>): Internal.IRecipeLayoutDrawable;
        unhideRecipeCategory(arg0: ResourceLocation_): void;
        hideRecipeCategory(arg0: ResourceLocation_): void;
        getRecipeCategory(arg0: ResourceLocation_, arg1: boolean): Internal.IRecipeCategory<any>;
        getRecipeCategory(arg0: ResourceLocation_): Internal.IRecipeCategory<any>;
        unhideRecipe<T>(arg0: T, arg1: ResourceLocation_): void;
        getRecipeCategories<V>(arg0: Internal.IFocus<V>): Internal.List<Internal.IRecipeCategory<any>>;
        getRecipeCategories(arg0: Internal.List<ResourceLocation>): Internal.List<Internal.IRecipeCategory<any>>;
        getRecipeCategories<V>(arg0: Internal.Collection<ResourceLocation>, arg1: Internal.IFocus<V>, arg2: boolean): Internal.List<Internal.IRecipeCategory<any>>;
        getRecipeCategories<V>(arg0: Internal.IFocus<V>, arg1: boolean): Internal.List<Internal.IRecipeCategory<any>>;
        getRecipeCategories(): Internal.List<Internal.IRecipeCategory<any>>;
        hideRecipe<T>(arg0: T, arg1: ResourceLocation_): void;
        createFocus<V>(arg0: Internal.IFocus$Mode_, arg1: V): Internal.IFocus<V>;
        getRecipes<T, V>(arg0: Internal.IRecipeCategory<T>, arg1: Internal.IFocus<V>, arg2: boolean): Internal.List<T>;
        getRecipes<T, V>(arg0: Internal.IRecipeCategory<T>, arg1: Internal.IFocus<V>): Internal.List<T>;
        getRecipes<T>(arg0: Internal.IRecipeCategory<T>): Internal.List<T>;
    }
    type IRecipeManager_ = IRecipeManager;
    class HoglinEntity extends Internal.AnimalEntity implements Internal.IMob, Internal.IFlinging {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_230290_eL_(): number;
        func_213375_cj(): Internal.Brain<Internal.HoglinEntity>;
        func_234365_eM_(): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        func_234363_eJ_(): boolean;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_234364_eK_(): boolean;
        static func_234361_c_(arg0: Internal.EntityType_<Internal.HoglinEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_234370_t_(arg0: boolean): void;
        static func_234362_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_234358_by_: number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.HoglinEntity>, arg1: Internal.World);
    }
    type HoglinEntity_ = HoglinEntity;
    class TickEvent$Phase extends Internal.Enum<Internal.TickEvent$Phase> {
        static valueOf(arg0: string): Internal.TickEvent$Phase;
        static values(): Internal.TickEvent$Phase[];
        static readonly START: Internal.TickEvent$Phase;
        static readonly END: Internal.TickEvent$Phase;
    }
    type TickEvent$Phase_ = "start" | "end" | TickEvent$Phase;
    class Component$BaselineResizeBehavior extends Internal.Enum<Internal.Component$BaselineResizeBehavior> {
        static valueOf(arg0: string): Internal.Component$BaselineResizeBehavior;
        static values(): Internal.Component$BaselineResizeBehavior[];
        static readonly OTHER: Internal.Component$BaselineResizeBehavior;
        static readonly CONSTANT_DESCENT: Internal.Component$BaselineResizeBehavior;
        static readonly CENTER_OFFSET: Internal.Component$BaselineResizeBehavior;
        static readonly CONSTANT_ASCENT: Internal.Component$BaselineResizeBehavior;
    }
    type Component$BaselineResizeBehavior_ = "constant_ascent" | "constant_descent" | "center_offset" | "other" | Component$BaselineResizeBehavior;
    interface IInventory extends Internal.IClearable {
        func_70304_b(arg0: number): Internal.ItemStack;
        func_213901_a(arg0: Internal.Item_): number;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        func_70302_i_(): number;
        func_191420_l(): boolean;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_70296_d(): void;
    }
    type IInventory_ = IInventory;
    interface ILootEntry {
        expand(arg0: Internal.LootContext, arg1: Internal.Consumer_<Internal.ILootGenerator_>): boolean;
        func_216133_a(arg0: Internal.ILootEntry_): Internal.ILootEntry;
        func_216135_b(arg0: Internal.ILootEntry_): Internal.ILootEntry;
        (arg0: Internal.LootContext, arg1: Internal.Consumer<Internal.ILootGenerator>): boolean;
    }
    type ILootEntry_ = ((arg0: Internal.LootContext, arg1: Internal.Consumer<Internal.ILootGenerator>)=>boolean) | ILootEntry;
    class RecipeBook extends Document.Object {
        func_226144_b_(arg0: ResourceLocation_): boolean;
        func_194076_e(arg0: Internal.IRecipe<any>): boolean;
        func_242141_a(arg0: Internal.RecipeBookContainer<any>): boolean;
        func_193830_f(arg0: Internal.IRecipe<any>): boolean;
        func_193824_a(arg0: Internal.RecipeBook): void;
        func_242140_a(arg0: Internal.RecipeBookStatus): void;
        func_242143_a(arg0: Internal.RecipeBookCategory_, arg1: boolean): void;
        func_242142_a(arg0: Internal.RecipeBookCategory_): boolean;
        func_194074_f(arg0: Internal.IRecipe<any>): void;
        func_242144_a(arg0: Internal.RecipeBookCategory_, arg1: boolean, arg2: boolean): void;
        func_193831_b(arg0: Internal.IRecipe<any>): void;
        func_242145_b(arg0: Internal.RecipeBookCategory_): boolean;
        func_194073_a(arg0: Internal.IRecipe<any>): void;
        func_242146_b(arg0: Internal.RecipeBookCategory_, arg1: boolean): void;
        func_242139_a(): Internal.RecipeBookStatus;
        func_193825_e(arg0: Internal.IRecipe<any>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RecipeBook_ = RecipeBook;
    class VertexFormatElement extends Document.Object {
        func_227897_a_(arg0: number, arg1: number): void;
        getElementCount(): number;
        func_177375_c(): Internal.VertexFormatElement$Usage;
        func_227898_g_(): void;
        func_177367_b(): Internal.VertexFormatElement$Type;
        func_177368_f(): number;
        func_177369_e(): number;
        get elementCount(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.VertexFormatElement$Type, arg2: Internal.VertexFormatElement$Usage, arg3: number);
    }
    type VertexFormatElement_ = VertexFormatElement;
    class Package extends Internal.NamedPackage implements Internal.AnnotatedElement {
        isSealed(arg0: Internal.URL): boolean;
        isSealed(): boolean;
        static getPackage(arg0: string): Internal.Package;
        getName(): string;
        isAnnotationPresent(arg0: Internal.Class<Internal.Annotation>): boolean;
        getSpecificationTitle(): string;
        getImplementationTitle(): string;
        isCompatibleWith(arg0: string): boolean;
        getAnnotations(): Internal.Annotation[];
        getSpecificationVendor(): string;
        getDeclaredAnnotations(): Internal.Annotation[];
        getAnnotationsByType<A_>(arg0: Internal.Class<A_>): A_[];
        getDeclaredAnnotationsByType<A_>(arg0: Internal.Class<A_>): A_[];
        getAnnotation<A_>(arg0: Internal.Class<A_>): A_;
        static getPackages(): Internal.Package[];
        getDeclaredAnnotation<A_>(arg0: Internal.Class<A_>): A_;
        getSpecificationVersion(): string;
        getImplementationVendor(): string;
        getImplementationVersion(): string;
        get specificationVendor(): string;
        get declaredAnnotations(): Internal.Annotation[];
        get specificationTitle(): string;
        get implementationVersion(): string;
        get sealed(): boolean;
        get name(): string;
        get implementationVendor(): string;
        get annotations(): Internal.Annotation[];
        get implementationTitle(): string;
        get packages(): Internal.Package[];
        get specificationVersion(): string;
    }
    type Package_ = Package;
    interface WorldSettingsImport$IResourceAccess {
        func_241879_a<E>(arg0: Internal.DynamicOps<Internal.JsonElement>, arg1: Internal.RegistryKey<Internal.Registry<E>>, arg2: Internal.RegistryKey<E>, arg3: Internal.Decoder_<E>): Internal.DataResult<Internal.Pair<E, Internal.OptionalInt>>;
        func_241880_a(arg0: Internal.RegistryKey<Internal.Registry<any>>): Internal.Collection<ResourceLocation>;
    }
    type WorldSettingsImport$IResourceAccess_ = WorldSettingsImport$IResourceAccess;
    class ForgeConfigSpec$DoubleValue extends Internal.ForgeConfigSpec$ConfigValue<number> {
    }
    type ForgeConfigSpec$DoubleValue_ = ForgeConfigSpec$DoubleValue;
    abstract class AWTEvent extends Internal.EventObject {
        setSource(arg0: any): void;
        paramString(): string;
        getID(): number;
        static readonly ADJUSTMENT_EVENT_MASK: 256;
        static readonly MOUSE_EVENT_MASK: 16;
        static readonly COMPONENT_EVENT_MASK: 1;
        static readonly PAINT_EVENT_MASK: 8192;
        static readonly INPUT_METHOD_EVENT_MASK: 2048;
        static readonly HIERARCHY_BOUNDS_EVENT_MASK: 65536;
        static readonly FOCUS_EVENT_MASK: 4;
        static readonly TEXT_EVENT_MASK: 1024;
        static readonly INVOCATION_EVENT_MASK: 16384;
        static readonly KEY_EVENT_MASK: 8;
        static readonly RESERVED_ID_MAX: 1999;
        static readonly ACTION_EVENT_MASK: 128;
        static readonly ITEM_EVENT_MASK: 512;
        static readonly CONTAINER_EVENT_MASK: 2;
        static readonly WINDOW_EVENT_MASK: 64;
        static readonly HIERARCHY_EVENT_MASK: 32768;
        static readonly WINDOW_STATE_EVENT_MASK: 262144;
        static readonly MOUSE_WHEEL_EVENT_MASK: 131072;
        static readonly MOUSE_MOTION_EVENT_MASK: 32;
        static readonly WINDOW_FOCUS_EVENT_MASK: 524288;
        get iD(): number;
        set source(arg0: any);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: number);
        constructor(arg0: java_.awt.Event);
    }
    type AWTEvent_ = AWTEvent;
    class Locale$FilteringMode extends Internal.Enum<Internal.Locale$FilteringMode> {
        static valueOf(arg0: string): Internal.Locale$FilteringMode;
        static values(): Internal.Locale$FilteringMode[];
        static readonly IGNORE_EXTENDED_RANGES: Internal.Locale$FilteringMode;
        static readonly MAP_EXTENDED_RANGES: Internal.Locale$FilteringMode;
        static readonly AUTOSELECT_FILTERING: Internal.Locale$FilteringMode;
        static readonly REJECT_EXTENDED_RANGES: Internal.Locale$FilteringMode;
        static readonly EXTENDED_FILTERING: Internal.Locale$FilteringMode;
    }
    type Locale$FilteringMode_ = "autoselect_filtering" | "extended_filtering" | "ignore_extended_ranges" | "map_extended_ranges" | "reject_extended_ranges" | Locale$FilteringMode;
    abstract class AbstractCookingRecipe extends Document.Object implements Internal.IRecipe<Internal.IInventory> {
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_222137_e(): number;
        func_222127_g(): Internal.IRecipeType<any>;
        func_199560_c(): ResourceLocation;
        func_192399_d(): boolean;
        func_222138_b(): number;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        func_77571_b(): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<Internal.ItemStack>;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IRecipeType<any>, arg1: ResourceLocation, arg2: string, arg3: Internal.Ingredient, arg4: Internal.ItemStack, arg5: number, arg6: number);
    }
    type AbstractCookingRecipe_ = AbstractCookingRecipe;
    class GuiScreenEvent$InitGuiEvent$Post extends Internal.GuiScreenEvent$InitGuiEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Screen, arg1: Internal.List<net.minecraft.client.gui.widget.Widget>, arg2: Internal.Consumer<net.minecraft.client.gui.widget.Widget>, arg3: Internal.Consumer<net.minecraft.client.gui.widget.Widget>);
        constructor();
    }
    type GuiScreenEvent$InitGuiEvent$Post_ = GuiScreenEvent$InitGuiEvent$Post;
    class LlamaEntity extends Internal.DyingChestedHorseEntity implements Internal.IRangedAttackMob {
        shouldRiderSit(): boolean;
        func_190710_o(arg0: number): void;
        func_190719_dM(): number;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_190715_a(arg0: Internal.LlamaEntity): void;
        static func_234244_fu_(): Internal.AttributeModifierMap$MutableAttribute;
        func_190709_dP(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_190712_dQ(): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_213800_eB(): boolean;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.LlamaEntity;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_190707_dL(): number;
        getParts(): Internal.PartEntity<any>[];
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_190716_dS(): Internal.LlamaEntity;
        func_190718_dR(): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        formatLoc(arg0: Vec3): string;
        func_190704_dO(): Internal.DyeColor;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.LlamaEntity>, arg1: Internal.World);
    }
    type LlamaEntity_ = LlamaEntity;
    abstract class CharMatcher extends Document.Object implements com.google.common.base.Predicate<string> {
        indexIn(arg0: Internal.CharSequence, arg1: number): number;
        indexIn(arg0: Internal.CharSequence): number;
        countIn(arg0: Internal.CharSequence): number;
        lastIndexIn(arg0: Internal.CharSequence): number;
        collapseFrom(arg0: Internal.CharSequence, arg1: string): string;
        static javaLowerCase(): Internal.CharMatcher;
        static invisible(): Internal.CharMatcher;
        static none(): Internal.CharMatcher;
        static singleWidth(): Internal.CharMatcher;
        trimAndCollapseFrom(arg0: Internal.CharSequence, arg1: string): string;
        static inRange(arg0: string, arg1: string): Internal.CharMatcher;
        trimLeadingFrom(arg0: Internal.CharSequence): string;
        static forPredicate(arg0: com.google.common.base.Predicate<string>): Internal.CharMatcher;
        and(arg0: Internal.CharMatcher): Internal.CharMatcher;
        and(arg0: Internal.Predicate_<string>): Internal.Predicate<string>;
        static javaDigit(): Internal.CharMatcher;
        matchesNoneOf(arg0: Internal.CharSequence): boolean;
        retainFrom(arg0: Internal.CharSequence): string;
        static javaIsoControl(): Internal.CharMatcher;
        static ascii(): Internal.CharMatcher;
        static digit(): Internal.CharMatcher;
        replaceFrom(arg0: Internal.CharSequence, arg1: string): string;
        replaceFrom(arg0: Internal.CharSequence, arg1: Internal.CharSequence): string;
        or(arg0: Internal.CharMatcher): Internal.CharMatcher;
        or(arg0: Internal.Predicate_<string>): Internal.Predicate<string>;
        test(arg0: string): boolean;
        apply(arg0: string): boolean;
        apply(arg0: any): boolean;
        static anyOf(arg0: Internal.CharSequence): Internal.CharMatcher;
        static breakingWhitespace(): Internal.CharMatcher;
        static is(arg0: string): Internal.CharMatcher;
        static noneOf(arg0: Internal.CharSequence): Internal.CharMatcher;
        trimTrailingFrom(arg0: Internal.CharSequence): string;
        static any(): Internal.CharMatcher;
        matches(arg0: string): boolean;
        matchesAnyOf(arg0: Internal.CharSequence): boolean;
        trimFrom(arg0: Internal.CharSequence): string;
        static isNot(arg0: string): Internal.CharMatcher;
        static javaUpperCase(): Internal.CharMatcher;
        negate(): Internal.CharMatcher;
        negate(): Internal.Predicate<any>;
        static javaLetterOrDigit(): Internal.CharMatcher;
        matchesAllOf(arg0: Internal.CharSequence): boolean;
        removeFrom(arg0: Internal.CharSequence): string;
        precomputed(): Internal.CharMatcher;
        static whitespace(): Internal.CharMatcher;
        static javaLetter(): Internal.CharMatcher;
        static readonly JAVA_DIGIT: Internal.CharMatcher;
        static readonly BREAKING_WHITESPACE: Internal.CharMatcher;
        static readonly JAVA_LETTER_OR_DIGIT: Internal.CharMatcher;
        static readonly JAVA_LOWER_CASE: Internal.CharMatcher;
        static readonly ASCII: Internal.CharMatcher;
        static readonly JAVA_ISO_CONTROL: Internal.CharMatcher;
        static readonly ANY: Internal.CharMatcher;
        static readonly DIGIT: Internal.CharMatcher;
        static readonly INVISIBLE: Internal.CharMatcher;
        static readonly SINGLE_WIDTH: Internal.CharMatcher;
        static readonly WHITESPACE: Internal.CharMatcher;
        static readonly JAVA_UPPER_CASE: Internal.CharMatcher;
        static readonly JAVA_LETTER: Internal.CharMatcher;
        static readonly NONE: Internal.CharMatcher;
    }
    type CharMatcher_ = CharMatcher;
    abstract class BufferStrategy extends Document.Object {
        contentsRestored(): boolean;
        contentsLost(): boolean;
        getDrawGraphics(): Internal.Graphics;
        show(): void;
        dispose(): void;
        getCapabilities(): Internal.BufferCapabilities;
        get capabilities(): Internal.BufferCapabilities;
        get drawGraphics(): Internal.Graphics;
    }
    type BufferStrategy_ = BufferStrategy;
    class Raster extends Document.Object {
        createChild(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number[]): Internal.Raster;
        getSampleFloat(arg0: number, arg1: number, arg2: number): number;
        getNumDataElements(): number;
        createTranslatedChild(arg0: number, arg1: number): Internal.Raster;
        getNumBands(): number;
        getWidth(): number;
        static createWritableRaster(arg0: Internal.SampleModel, arg1: Internal.Point): Internal.WritableRaster;
        static createWritableRaster(arg0: Internal.SampleModel, arg1: Internal.DataBuffer, arg2: Internal.Point): Internal.WritableRaster;
        getBounds(): Internal.Rectangle;
        getSampleModel(): Internal.SampleModel;
        getHeight(): number;
        static createRaster(arg0: Internal.SampleModel, arg1: Internal.DataBuffer, arg2: Internal.Point): Internal.Raster;
        getTransferType(): number;
        getPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): number[];
        getPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): number[];
        getPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): number[];
        getSampleDouble(arg0: number, arg1: number, arg2: number): number;
        getParent(): Internal.Raster;
        static createBandedRaster(arg0: Internal.DataBuffer, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: number[], arg6: Internal.Point): Internal.WritableRaster;
        static createBandedRaster(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Point): Internal.WritableRaster;
        static createBandedRaster(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: number[], arg6: Internal.Point): Internal.WritableRaster;
        getDataBuffer(): Internal.DataBuffer;
        getSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[]): number[];
        getSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[]): number[];
        getSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[]): number[];
        getPixel(arg0: number, arg1: number, arg2: number[]): number[];
        getPixel(arg0: number, arg1: number, arg2: number[]): number[];
        getPixel(arg0: number, arg1: number, arg2: number[]): number[];
        static createPackedRaster(arg0: Internal.DataBuffer, arg1: number, arg2: number, arg3: number, arg4: Internal.Point): Internal.WritableRaster;
        static createPackedRaster(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: Internal.Point): Internal.WritableRaster;
        static createPackedRaster(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.Point): Internal.WritableRaster;
        static createPackedRaster(arg0: Internal.DataBuffer, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: Internal.Point): Internal.WritableRaster;
        createCompatibleWritableRaster(arg0: number, arg1: number, arg2: number, arg3: number): Internal.WritableRaster;
        createCompatibleWritableRaster(arg0: Internal.Rectangle): Internal.WritableRaster;
        createCompatibleWritableRaster(arg0: number, arg1: number): Internal.WritableRaster;
        createCompatibleWritableRaster(): Internal.WritableRaster;
        getSampleModelTranslateX(): number;
        getSampleModelTranslateY(): number;
        getDataElements(arg0: number, arg1: number, arg2: number, arg3: number, arg4: any): any;
        getDataElements(arg0: number, arg1: number, arg2: any): any;
        static createInterleavedRaster(arg0: Internal.DataBuffer, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: Internal.Point): Internal.WritableRaster;
        static createInterleavedRaster(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Point): Internal.WritableRaster;
        static createInterleavedRaster(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: Internal.Point): Internal.WritableRaster;
        getMinX(): number;
        getSample(arg0: number, arg1: number, arg2: number): number;
        getMinY(): number;
        get parent(): Internal.Raster;
        get dataBuffer(): Internal.DataBuffer;
        get numDataElements(): number;
        get numBands(): number;
        get minY(): number;
        get minX(): number;
        get width(): number;
        get bounds(): Internal.Rectangle;
        get transferType(): number;
        get sampleModelTranslateX(): number;
        get sampleModel(): Internal.SampleModel;
        get height(): number;
        get sampleModelTranslateY(): number;
    }
    type Raster_ = Raster;
    class RenderType$State extends Document.Object {
        static func_228694_a_(): Internal.RenderType$State$Builder;
        readonly field_228677_a_: Internal.RenderState$TextureState;
        readonly field_228693_q_: Internal.ImmutableList<Internal.RenderState>;
    }
    type RenderType$State_ = RenderType$State;
    class BufferBuilder$State extends Document.Object {
    }
    type BufferBuilder$State_ = BufferBuilder$State;
    class ChunkPrimerTickList <T> extends Document.Object implements Internal.ITickList<T> {
        func_205362_a(arg0: BlockPos, arg1: T, arg2: number, arg3: Internal.TickPriority_): void;
        func_205361_b(arg0: BlockPos, arg1: T): boolean;
        func_205360_a(arg0: BlockPos, arg1: T, arg2: number): void;
        func_205381_a(arg0: Internal.ITickList<T>, arg1: Internal.Function_<BlockPos_, T>): void;
        func_205359_a(arg0: BlockPos, arg1: T): boolean;
        func_205379_a(): Internal.ListNBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Predicate<T>, arg1: Internal.ChunkPos);
        constructor(arg0: Internal.Predicate<T>, arg1: Internal.ChunkPos, arg2: Internal.ListNBT);
    }
    type ChunkPrimerTickList_<T> = ChunkPrimerTickList<T>;
    class OutlineLayerBuffer extends Document.Object implements Internal.IRenderTypeBuffer {
        func_228472_a_(arg0: number, arg1: number, arg2: number, arg3: number): void;
        getBuffer(arg0: Internal.RenderType): Internal.IVertexBuilder;
        func_228471_a_(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IRenderTypeBuffer$Impl);
    }
    type OutlineLayerBuffer_ = OutlineLayerBuffer;
    interface ISidedInventory extends Internal.IInventory {
        func_180463_a(arg0: Internal.Direction_): number[];
        func_180462_a(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        func_180461_b(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
    }
    type ISidedInventory_ = ISidedInventory;
    class BorderStatus extends Internal.Enum<Internal.BorderStatus> {
        func_177766_a(): number;
        static valueOf(arg0: string): Internal.BorderStatus;
        static values(): Internal.BorderStatus[];
        static readonly GROWING: Internal.BorderStatus;
        static readonly SHRINKING: Internal.BorderStatus;
        static readonly STATIONARY: Internal.BorderStatus;
    }
    type BorderStatus_ = "growing" | "shrinking" | "stationary" | BorderStatus;
    class ModifierType extends Internal.Enum<Internal.ModifierType> {
        static fromVanillaAttributeOperation(arg0: Internal.AttributeModifier$Operation_): Internal.ModifierType;
        static valueOf(arg0: string): Internal.ModifierType;
        static values(): Internal.ModifierType[];
        getUnlocalizedModifierName(arg0: boolean): string;
        getUnlocalizedModifierName(arg0: number): string;
        stringifyValue(arg0: number): string;
        getVanillaAttributeOperation(): Internal.AttributeModifier$Operation;
        static readonly ADDED_MULTIPLY: Internal.ModifierType;
        static readonly STACKING_MULTIPLY: Internal.ModifierType;
        static readonly ADDITION: Internal.ModifierType;
        get vanillaAttributeOperation(): Internal.AttributeModifier$Operation;
    }
    type ModifierType_ = "addition" | "added_multiply" | "stacking_multiply" | ModifierType;
    class EnumUpgrade extends Internal.Enum<Internal.EnumUpgrade> {
        getItemName(arg0: number): string;
        getName(): string;
        static valueOf(arg0: string): Internal.EnumUpgrade;
        static values(): Internal.EnumUpgrade[];
        isDepLoaded(): boolean;
        getItem(): Internal.Item;
        getItem(arg0: number): Internal.Item;
        static from(arg0: Internal.ItemStack): Internal.EnumUpgrade;
        getItemStack(arg0: number): Internal.ItemStack;
        getItemStack(): Internal.ItemStack;
        getMaxTier(): number;
        static readonly CREATIVE: Internal.EnumUpgrade;
        static readonly THAUMCRAFT: Internal.EnumUpgrade;
        static readonly CHARGING: Internal.EnumUpgrade;
        static readonly SPEED: Internal.EnumUpgrade;
        static readonly INVENTORY: Internal.EnumUpgrade;
        static readonly MINIGUN: Internal.EnumUpgrade;
        static readonly ITEM_LIFE: Internal.EnumUpgrade;
        static readonly BLOCK_TRACKER: Internal.EnumUpgrade;
        static readonly SEARCH: Internal.EnumUpgrade;
        static readonly ARMOR: Internal.EnumUpgrade;
        static readonly VOLUME: Internal.EnumUpgrade;
        static readonly DISPENSER: Internal.EnumUpgrade;
        static readonly ENTITY_TRACKER: Internal.EnumUpgrade;
        static readonly AIR_CONDITIONING: Internal.EnumUpgrade;
        static readonly FLIPPERS: Internal.EnumUpgrade;
        static readonly JUMPING: Internal.EnumUpgrade;
        static readonly MAGNET: Internal.EnumUpgrade;
        static readonly JET_BOOTS: Internal.EnumUpgrade;
        static readonly RADIATION_SHIELDING: Internal.EnumUpgrade;
        static readonly COORDINATE_TRACKER: Internal.EnumUpgrade;
        static readonly SCUBA: Internal.EnumUpgrade;
        static readonly SECURITY: Internal.EnumUpgrade;
        static readonly STANDBY: Internal.EnumUpgrade;
        static readonly NIGHT_VISION: Internal.EnumUpgrade;
        static readonly RANGE: Internal.EnumUpgrade;
        get depLoaded(): boolean;
        get item(): Internal.Item;
        get itemStack(): Internal.ItemStack;
        get maxTier(): number;
        get name(): string;
    }
    type EnumUpgrade_ = "volume" | "dispenser" | "item_life" | "entity_tracker" | "block_tracker" | "speed" | "search" | "coordinate_tracker" | "range" | "security" | "magnet" | "thaumcraft" | "charging" | "armor" | "jet_boots" | "night_vision" | "scuba" | "creative" | "air_conditioning" | "inventory" | "jumping" | "flippers" | "standby" | "minigun" | "radiation_shielding" | EnumUpgrade;
    class Logo extends Document.Object {
        static read(arg0: Internal.Configuration): Internal.Logo;
        draw(arg0: Internal.ExtendedMenuScreen, arg1: Internal.MatrixStack): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: ResourceLocation, arg7: Internal.AnchorPoint);
    }
    type Logo_ = Logo;
    class RayTraceResult$Type extends Internal.Enum<Internal.RayTraceResult$Type> {
        static valueOf(arg0: string): Internal.RayTraceResult$Type;
        static values(): Internal.RayTraceResult$Type[];
        static readonly ENTITY: Internal.RayTraceResult$Type;
        static readonly MISS: Internal.RayTraceResult$Type;
        static readonly BLOCK: Internal.RayTraceResult$Type;
    }
    type RayTraceResult$Type_ = "miss" | "block" | "entity" | RayTraceResult$Type;
    class Products$P12 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function12_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>, arg4: Internal.App<F, T5>, arg5: Internal.App<F, T6>, arg6: Internal.App<F, T7>, arg7: Internal.App<F, T8>, arg8: Internal.App<F, T9>, arg9: Internal.App<F, T10>, arg10: Internal.App<F, T11>, arg11: Internal.App<F, T12>);
    }
    type Products$P12_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> = Products$P12<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>;
    interface DragSourceListener extends Internal.EventListener {
        dragEnter(arg0: Internal.DragSourceDragEvent): void;
        dragDropEnd(arg0: Internal.DragSourceDropEvent): void;
        dropActionChanged(arg0: Internal.DragSourceDragEvent): void;
        dragOver(arg0: Internal.DragSourceDragEvent): void;
        dragExit(arg0: Internal.DragSourceEvent): void;
    }
    type DragSourceListener_ = DragSourceListener;
    class PotionSpriteUploader extends Internal.SpriteUploader {
        func_215288_a(arg0: Internal.Effect_): Internal.TextureAtlasSprite;
        func_225594_i_(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TextureManager);
    }
    type PotionSpriteUploader_ = PotionSpriteUploader;
    class AbstractMinecartEntity$Type extends Internal.Enum<Internal.AbstractMinecartEntity$Type> {
        static valueOf(arg0: string): Internal.AbstractMinecartEntity$Type;
        static values(): Internal.AbstractMinecartEntity$Type[];
        static readonly CHEST: Internal.AbstractMinecartEntity$Type;
        static readonly FURNACE: Internal.AbstractMinecartEntity$Type;
        static readonly RIDEABLE: Internal.AbstractMinecartEntity$Type;
        static readonly COMMAND_BLOCK: Internal.AbstractMinecartEntity$Type;
        static readonly TNT: Internal.AbstractMinecartEntity$Type;
        static readonly SPAWNER: Internal.AbstractMinecartEntity$Type;
        static readonly HOPPER: Internal.AbstractMinecartEntity$Type;
    }
    type AbstractMinecartEntity$Type_ = "rideable" | "chest" | "furnace" | "tnt" | "spawner" | "hopper" | "command_block" | AbstractMinecartEntity$Type;
    class InputContext extends Document.Object {
        isCompositionEnabled(): boolean;
        setCharacterSubsets(arg0: any[]): void;
        dispatchEvent(arg0: Internal.AWTEvent): void;
        setCompositionEnabled(arg0: boolean): void;
        endComposition(): void;
        reconvert(): void;
        removeNotify(arg0: Internal.Component): void;
        getInputMethodControlObject(): any;
        dispose(): void;
        selectInputMethod(arg0: Internal.Locale): boolean;
        static getInstance(): Internal.InputContext;
        getLocale(): Internal.Locale;
        get inputMethodControlObject(): any;
        get compositionEnabled(): boolean;
        get instance(): Internal.InputContext;
        get locale(): Internal.Locale;
        set compositionEnabled(arg0: boolean);
        set characterSubsets(arg0: any[]);
    }
    type InputContext_ = InputContext;
    class GameSettings extends Document.Object {
        func_178878_a(arg0: Internal.PlayerModelPart_, arg1: boolean): void;
        func_178876_d(): Internal.Set<Internal.PlayerModelPart>;
        func_178877_a(arg0: Internal.PlayerModelPart_): void;
        func_74300_a(): void;
        func_82879_c(): void;
        func_216841_b(arg0: number): number;
        func_216840_a(arg0: number): number;
        func_216839_a(arg0: number): number;
        func_243229_a(arg0: Internal.PointOfView_): void;
        func_243230_g(): Internal.PointOfView;
        func_216842_e(): Internal.CloudOption;
        func_186711_a(arg0: Internal.SoundCategory_): number;
        func_186712_a(arg0: Internal.SoundCategory_, arg1: number): void;
        func_181148_f(): boolean;
        func_74303_b(): void;
        func_198014_a(arg0: Internal.KeyBinding, arg1: Internal.InputMappings$Input): void;
        func_198017_a(arg0: Internal.ResourcePackList): void;
        field_74319_N: boolean;
        field_243227_aN: number;
        field_74334_X: number;
        field_244794_ae: boolean;
        field_74362_aa: Internal.ParticleStatus;
        readonly field_74322_I: Internal.KeyBinding;
        readonly field_228046_af_: Internal.KeyBinding;
        readonly field_151447_Z: Internal.KeyBinding;
        field_96694_H: number;
        field_74338_d: boolean;
        field_80005_w: boolean;
        field_85185_A: boolean;
        field_74358_q: boolean;
        field_151442_I: number;
        field_92119_C: number;
        field_211842_aO: boolean;
        field_74330_P: boolean;
        readonly field_178883_an: Internal.KeyBinding;
        field_228044_Y_: boolean;
        field_244601_E: boolean;
        field_186717_N: boolean;
        readonly field_74368_y: Internal.KeyBinding;
        field_183018_l: Internal.List<string>;
        field_74333_Y: number;
        field_74318_M: Internal.Difficulty;
        field_238331_l_: number;
        readonly field_74321_H: Internal.KeyBinding;
        field_74363_ab: string;
        field_193631_S: Internal.TutorialSteps;
        field_96693_G: number;
        readonly field_193630_aq: Internal.KeyBinding;
        field_74326_T: boolean;
        readonly field_151445_Q: Internal.KeyBinding;
        field_74353_u: boolean;
        field_74357_r: number;
        field_198018_T: boolean;
        field_151453_l: Internal.List<string>;
        readonly field_186718_X: Internal.KeyBinding;
        field_74345_l: Internal.CloudOption;
        readonly field_152395_am: Internal.KeyBinding;
        readonly field_151458_ab: Internal.KeyBinding;
        field_238330_f_: Internal.GraphicsFanciness;
        readonly field_74314_A: Internal.KeyBinding;
        field_74341_c: number;
        readonly field_74310_D: Internal.KeyBinding;
        field_198019_u: string;
        field_74348_k: Internal.AmbientOcclusionStatus;
        field_74344_o: boolean;
        field_74332_R: string;
        field_74324_K: Internal.KeyBinding[];
        field_74336_f: boolean;
        readonly field_244602_au: Internal.KeyBinding;
        field_216844_T: boolean;
        field_96692_F: number;
        field_225307_E: boolean;
        field_181657_aC: boolean;
        field_82881_y: boolean;
        field_74329_Q: boolean;
        field_243226_aM: number;
        field_238332_z_: number;
        field_208033_V: number;
        field_74352_v: boolean;
        field_92117_D: boolean;
        readonly field_74313_G: Internal.KeyBinding;
        readonly field_194146_ao: Internal.KeyBinding;
        readonly field_151456_ac: Internal.KeyBinding[];
        field_228045_Z_: boolean;
        field_178879_v: boolean;
        field_216845_l: number;
        field_209231_W: number;
        field_181151_V: boolean;
        readonly field_74366_z: Internal.KeyBinding;
        field_74335_Z: number;
        field_230152_Z_: boolean;
        field_238329_c_: number;
        field_241568_aS_: boolean;
        field_192571_R: Internal.NarratorStatus;
        field_205217_U: number;
        field_186715_A: Internal.HandSide;
        readonly field_193629_ap: Internal.KeyBinding;
        field_183509_X: boolean;
        readonly field_74323_J: Internal.KeyBinding;
        field_216843_O: boolean;
        readonly field_151457_aa: Internal.KeyBinding;
        field_74350_i: number;
        readonly field_151444_V: Internal.KeyBinding;
        field_82882_x: boolean;
        field_96691_E: number;
        readonly field_74351_w: Internal.KeyBinding;
        field_74359_p: boolean;
        field_74355_t: boolean;
        field_92118_B: number;
        readonly field_74370_x: Internal.KeyBinding;
        readonly field_74316_C: Internal.KeyBinding;
        readonly field_74312_F: Internal.KeyBinding;
        field_74343_n: Internal.ChatVisibility;
        field_151451_c: number;
        field_189989_R: boolean;
        field_186716_M: Internal.AttackIndicatorStatus;
        field_181150_U: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft, arg1: Internal.File);
    }
    type GameSettings_ = GameSettings;
    class IngredientActionFilter extends Document.Object {
        checkFilter(index: number, stack: Internal.ItemStack): boolean;
        static filterOf(o: any): Internal.IngredientActionFilter;
        copyFrom(filter: Internal.IngredientActionFilter): void;
        filterIndex: number;
        filterIngredient: Internal.IngredientJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type IngredientActionFilter_ = IngredientActionFilter;
    abstract class TileReceiverBase <T> extends Internal.TileNetwork<T> implements Internal.IStarlightReceiver<T>, Internal.LinkableTileEntity {
        requestModelDataUpdate(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        provideEndpoint(arg0: BlockPos): Internal.CompoundNBT;
        doesAcceptLinks(): boolean;
        tryUnlink(arg0: Internal.PlayerEntity, arg1: BlockPos): boolean;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        onEntityLinkCreate(arg0: Internal.PlayerEntity, arg1: Internal.LivingEntity): void;
        tryLinkEntity(arg0: Internal.PlayerEntity, arg1: Internal.LivingEntity): boolean;
        tryLinkBlock(arg0: Internal.PlayerEntity, arg1: BlockPos): boolean;
        getLinkWorld(): Internal.World;
        onSelect(arg0: Internal.PlayerEntity): boolean;
        getLinkedPositions(): Internal.List<BlockPos>;
        onBlockLinkCreate(arg0: Internal.PlayerEntity, arg1: BlockPos): void;
        provideTransmissionNode(arg0: BlockPos): Internal.CompoundNBT;
        provideTransmissionNode(arg0: BlockPos): Internal.IPrismTransmissionNode;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getTrPos(): BlockPos;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        getTrWorld(): Internal.World;
        onLoad(): void;
        getNode(): Internal.CompoundNBT;
        getUnLocalizedDisplayName(): string;
        getLinkPos(): BlockPos;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get trPos(): BlockPos;
        get node(): Internal.CompoundNBT;
        get linkedPositions(): Internal.List<BlockPos>;
        get modelData(): Internal.IModelData;
        get linkWorld(): Internal.World;
        get linkPos(): BlockPos;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get unLocalizedDisplayName(): string;
        get trWorld(): Internal.World;
        get tileEntity(): Internal.TileEntity;
    }
    type TileReceiverBase_<T> = TileReceiverBase<T>;
    class LandingApproachPhase extends Internal.Phase {
        func_188652_i(): Internal.PhaseType<Internal.LandingApproachPhase>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type LandingApproachPhase_ = LandingApproachPhase;
    class BlockContainerJS extends Document.Object implements Internal.SpecialEquality {
        getWorld(): Internal.WorldJS;
        spawnFireworks(fireworks: Internal.FireworksJS): void;
        getBiomeId(): string;
        getItem(): Internal.ItemStackJS;
        getTags(): Internal.Collection<ResourceLocation>;
        getUp(): Internal.BlockContainerJS;
        getId(): string;
        clearCache(): void;
        getCanSeeSky(): boolean;
        getEast(): Internal.BlockContainerJS;
        getNorth(): Internal.BlockContainerJS;
        getPos(): BlockPos;
        setEntityData(tag: Internal.CompoundNBT_): void;
        getDimension(): string;
        mergeEntityData(tag: Internal.CompoundNBT_): void;
        getEntityId(): string;
        getInventory(facing: Internal.Direction_): Internal.InventoryJS;
        getLight(): number;
        getWest(): Internal.BlockContainerJS;
        getPlayersInRadius(radius: number): Internal.EntityArrayList;
        getPlayersInRadius(): Internal.EntityArrayList;
        set(id: ResourceLocation_): void;
        set(id: ResourceLocation_, properties: Internal.Map_<any, any>, flags: number): void;
        set(id: ResourceLocation_, properties: Internal.Map_<any, any>): void;
        hasTag(tag: ResourceLocation_): boolean;
        offset(x: number, y: number, z: number): Internal.BlockContainerJS;
        offset(f: Internal.Direction_, d: number): Internal.BlockContainerJS;
        offset(f: Internal.Direction_): Internal.BlockContainerJS;
        getDown(): Internal.BlockContainerJS;
        getProperties(): Internal.Map<string, string>;
        createExplosion(): Internal.ExplosionJS;
        setBlockState(state: Internal.BlockState, flags: number): void;
        getEntity(): Internal.TileEntity;
        createEntity(id: ResourceLocation_): Internal.EntityJS;
        getMaterial(): Internal.MaterialJS;
        getSouth(): Internal.BlockContainerJS;
        spawnLightning(effectOnly: boolean): void;
        spawnLightning(effectOnly: boolean, player: Internal.EntityJS): void;
        getLevel(): Internal.WorldJS;
        getX(): number;
        getY(): number;
        getZ(): number;
        getEntityData(): Internal.CompoundNBT;
        getBlockState(): Internal.BlockState;
        specialEquals(o: any, shallow: boolean): boolean;
        readonly minecraftLevel: Internal.World;
        get blockState(): Internal.BlockState;
        get biomeId(): string;
        get south(): Internal.BlockContainerJS;
        get playersInRadius(): Internal.EntityArrayList;
        get north(): Internal.BlockContainerJS;
        get down(): Internal.BlockContainerJS;
        get east(): Internal.BlockContainerJS;
        get world(): Internal.WorldJS;
        get pos(): BlockPos;
        get west(): Internal.BlockContainerJS;
        get up(): Internal.BlockContainerJS;
        get id(): string;
        get dimension(): string;
        get item(): Internal.ItemStackJS;
        get level(): Internal.WorldJS;
        get canSeeSky(): boolean;
        get entityId(): string;
        get tags(): Internal.Collection<ResourceLocation>;
        get material(): Internal.MaterialJS;
        get light(): number;
        get x(): number;
        get y(): number;
        get z(): number;
        get properties(): Internal.Map<string, string>;
        get entity(): Internal.TileEntity;
        get entityData(): Internal.CompoundNBT;
        set entityData(tag: Internal.CompoundNBT_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(w: Internal.World, p: BlockPos);
    }
    type BlockContainerJS_ = BlockContainerJS;
    class GameRules$IntegerValue extends Internal.GameRules$RuleValue<Internal.GameRules$IntegerValue> implements Internal.GameRulesAccessor$IntegerValue, Internal.GameRulesAccessor$IntegerValueSimple {
        static invokeCreateArchitectury_$md$e571c7$0(arg0: number, arg1: Internal.BiConsumer_<any,any>): Internal.GameRules$RuleType<any>;
        func_230313_a_(arg0: Internal.GameRules$IntegerValue, arg1: Internal.MinecraftServer): void;
        func_223560_a(): number;
        func_234909_b_(arg0: string): boolean;
        static invokeCreateArchitectury_$md$e571c7$1(arg0: number): Internal.GameRules$RuleType<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.GameRules$RuleType<Internal.GameRules$IntegerValue>, arg1: number);
    }
    type GameRules$IntegerValue_ = GameRules$IntegerValue;
    interface Channel$Unsafe {
        disconnect(arg0: Internal.ChannelPromise): void;
        deregister(arg0: Internal.ChannelPromise): void;
        recvBufAllocHandle(): Internal.RecvByteBufAllocator$Handle;
        closeForcibly(): void;
        beginRead(): void;
        bind(arg0: Internal.SocketAddress, arg1: Internal.ChannelPromise): void;
        voidPromise(): Internal.ChannelPromise;
        flush(): void;
        localAddress(): Internal.SocketAddress;
        outboundBuffer(): Internal.ChannelOutboundBuffer;
        close(arg0: Internal.ChannelPromise): void;
        write(arg0: any, arg1: Internal.ChannelPromise): void;
        remoteAddress(): Internal.SocketAddress;
        connect(arg0: Internal.SocketAddress, arg1: Internal.SocketAddress, arg2: Internal.ChannelPromise): void;
        register(arg0: Internal.EventLoop_, arg1: Internal.ChannelPromise): void;
    }
    type Channel$Unsafe_ = Channel$Unsafe;
    class SAdvancementInfoPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_192603_a(): Internal.Map<ResourceLocation, Internal.Advancement$Builder>;
        func_192602_d(): boolean;
        func_192604_c(): Internal.Map<ResourceLocation, Internal.AdvancementProgress>;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_192600_b(): Internal.Set<ResourceLocation>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: boolean, arg1: Internal.Collection<Internal.Advancement>, arg2: Internal.Set<ResourceLocation>, arg3: Internal.Map<ResourceLocation, Internal.AdvancementProgress>);
    }
    type SAdvancementInfoPacket_ = SAdvancementInfoPacket;
    interface Encoder <A> {
        encode<T>(arg0: A, arg1: Internal.DynamicOps<T>, arg2: T): Internal.DataResult<T>;
        flatComap<B>(arg0: Internal.Function_<B, Internal.DataResult_<A>>): Internal.Encoder<B>;
        comap<B>(arg0: Internal.Function_<B, A>): Internal.Encoder<B>;
        fieldOf(arg0: string): Internal.MapEncoder<A>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Encoder<A>;
        encodeStart<T>(arg0: Internal.DynamicOps<T>, arg1: A): Internal.DataResult<T>;
        (arg0: A, arg1: Internal.DynamicOps<T>, arg2: T): Internal.DataResult<T>;
    }
    type Encoder_<A> = ((arg0: A, arg1: Internal.DynamicOps<T>, arg2: T)=>Internal.DataResult<T>) | Encoder<A>;
    class RecipeModifier$OPERATION extends Internal.Enum<Internal.RecipeModifier$OPERATION> {
        static valueOf(arg0: string): Internal.RecipeModifier$OPERATION;
        static values(): Internal.RecipeModifier$OPERATION[];
        static value(arg0: string): Internal.RecipeModifier$OPERATION;
        static readonly MULTIPLICATION: Internal.RecipeModifier$OPERATION;
        static readonly ADDITION: Internal.RecipeModifier$OPERATION;
    }
    type RecipeModifier$OPERATION_ = "addition" | "multiplication" | RecipeModifier$OPERATION;
    class InputEvent$MouseScrollEvent extends net.minecraftforge.client.event.InputEvent {
        isMiddleDown(): boolean;
        getMouseY(): number;
        getMouseX(): number;
        getScrollDelta(): number;
        isRightDown(): boolean;
        isLeftDown(): boolean;
        get mouseX(): number;
        get middleDown(): boolean;
        get scrollDelta(): number;
        get mouseY(): number;
        get leftDown(): boolean;
        get rightDown(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: boolean, arg2: boolean, arg3: boolean, arg4: number, arg5: number);
    }
    type InputEvent$MouseScrollEvent_ = InputEvent$MouseScrollEvent;
    interface AccessorAbstractSpawner {
        botania_isActivated(): boolean;
        getSpawnData(): Internal.WeightedSpawnerEntity;
        setMobRotation(arg0: number): void;
        getSpawnRange(): number;
        setSpawnDelay(arg0: number): void;
        getSpawnDelay(): number;
        getMaxNearbyEntities(): number;
        getSpawnCount(): number;
        getMobRotation(): number;
        botania_resetTimer(): void;
        setPrevMobRotation(arg0: number): void;
    }
    type AccessorAbstractSpawner_ = AccessorAbstractSpawner;
    interface IInteractionChecker {
        canPlayerUse(arg0: Internal.PlayerEntity): boolean;
        (arg0: Internal.PlayerEntity): boolean;
    }
    type IInteractionChecker_ = ((arg0: Internal.PlayerEntity)=>boolean) | IInteractionChecker;
    class SecondaryPositionSensor extends Internal.Sensor<Internal.VillagerEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SecondaryPositionSensor_ = SecondaryPositionSensor;
    interface IBlockHolder {
        setHeldBlock(arg0: Internal.BlockState, arg1: number): boolean;
        setHeldBlock(arg0: Internal.BlockState): boolean;
        getHeldBlock(): Internal.BlockState;
        getHeldBlock(arg0: number): Internal.BlockState;
    }
    type IBlockHolder_ = IBlockHolder;
    interface ClientboundSectionBlocksUpdatePacketFTBC {
        getPositionsFTBC(): number[];
        getSectionPosFTBC(): Internal.SectionPos;
    }
    type ClientboundSectionBlocksUpdatePacketFTBC_ = ClientboundSectionBlocksUpdatePacketFTBC;
    class JungleFoliagePlacer extends Internal.FoliagePlacer {
        static readonly field_236774_a_: Internal.Codec<Internal.JungleFoliagePlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FeatureSpread, arg1: Internal.FeatureSpread, arg2: number);
    }
    type JungleFoliagePlacer_ = JungleFoliagePlacer;
    class ModuleLayer extends Document.Object {
        findModule(arg0: string): Internal.Optional<Internal.Module>;
        static defineModulesWithManyLoaders(arg0: java_.lang.module.Configuration, arg1: Internal.List<Internal.ModuleLayer>, arg2: Internal.ClassLoader): Internal.ModuleLayer$Controller;
        defineModulesWithManyLoaders(arg0: java_.lang.module.Configuration, arg1: Internal.ClassLoader): Internal.ModuleLayer;
        findLoader(arg0: string): Internal.ClassLoader;
        configuration(): java_.lang.module.Configuration;
        static defineModulesWithOneLoader(arg0: java_.lang.module.Configuration, arg1: Internal.List<Internal.ModuleLayer>, arg2: Internal.ClassLoader): Internal.ModuleLayer$Controller;
        defineModulesWithOneLoader(arg0: java_.lang.module.Configuration, arg1: Internal.ClassLoader): Internal.ModuleLayer;
        static boot(): Internal.ModuleLayer;
        modules(): Internal.Set<Internal.Module>;
        defineModules(arg0: java_.lang.module.Configuration, arg1: Internal.Function_<string, Internal.ClassLoader_>): Internal.ModuleLayer;
        static defineModules(arg0: java_.lang.module.Configuration, arg1: Internal.List<Internal.ModuleLayer>, arg2: Internal.Function_<string, Internal.ClassLoader_>): Internal.ModuleLayer$Controller;
        parents(): Internal.List<Internal.ModuleLayer>;
        static empty(): Internal.ModuleLayer;
    }
    type ModuleLayer_ = ModuleLayer;
    class TypeWrappers extends Document.Object {
        removeAll(): void;
        getWrapperFactory(target: Internal.Class<any>, from: any): Internal.TypeWrapperFactory<any>;
        register<T_>(target: Internal.Class<T_>, factory: Internal.TypeWrapperFactory_<T_>): void;
        register<T_>(target: Internal.Class<T_>, validator: Internal.Predicate_<any>, factory: Internal.TypeWrapperFactory_<T_>): void;
        register<F_, T_>(id: string, from: Internal.Class<F_>, to: Internal.Class<T_>, factory: Internal.Function_<F_, T_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TypeWrappers_ = TypeWrappers;
    interface IChemicalStackIngredient <CHEMICAL, STACK> extends Internal.InputIngredient<STACK> {
        getIngredientInfo(): Internal.ChemicalIngredientInfo<CHEMICAL, STACK>;
        testType(arg0: CHEMICAL): boolean;
    }
    type IChemicalStackIngredient_<CHEMICAL, STACK> = IChemicalStackIngredient<CHEMICAL, STACK>;
    class KeyCompressor <T> extends Document.Object {
        decompress(arg0: number): T;
        size(): number;
        compress(arg0: T): number;
        compress(arg0: string): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DynamicOps<T>, arg1: Internal.Stream<T>);
    }
    type KeyCompressor_<T> = KeyCompressor<T>;
    abstract class AbstractFireballEntity extends Internal.DamagingProjectileEntity implements Internal.IRendersAsItem {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_184543_l(): Internal.ItemStack;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213898_b(arg0: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.AbstractFireballEntity>, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number, arg5: Internal.World);
        constructor(arg0: Internal.EntityType<Internal.AbstractFireballEntity>, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.World);
        constructor(arg0: Internal.EntityType<Internal.AbstractFireballEntity>, arg1: Internal.World);
    }
    type AbstractFireballEntity_ = AbstractFireballEntity;
    class ModelManager extends Internal.ReloadListener<Internal.ModelBakery> implements Internal.AutoCloseable {
        getModel(arg0: ResourceLocation_): Internal.IBakedModel;
        func_229355_a_(arg0: number): void;
        func_174954_c(): Internal.BlockModelShapes;
        getResourceType(): Internal.IResourceType;
        func_225594_i_(): string;
        func_229356_a_(arg0: ResourceLocation_): Internal.AtlasTexture;
        func_174953_a(arg0: Internal.ModelResourceLocation): Internal.IBakedModel;
        func_174951_a(): Internal.IBakedModel;
        func_224742_a(arg0: Internal.BlockState, arg1: Internal.BlockState): boolean;
        close(): void;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TextureManager, arg1: Internal.BlockColors, arg2: number);
    }
    type ModelManager_ = ModelManager;
    interface IBiomeReader extends Internal.IEntityReader, Internal.IWorldReader, Internal.IWorldGenerationReader {
        func_241828_r(): Internal.DynamicRegistries;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_242406_i(arg0: BlockPos): Internal.Optional<Internal.RegistryKey<Internal.Biome>>;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
        (): Internal.DynamicRegistries;
    }
    type IBiomeReader_ = (()=>Internal.DynamicRegistries) | IBiomeReader;
    abstract class Selection extends Document.Object implements Internal.Predicate<BlockPos> {
        add(arg0: Internal.Selection): Internal.Selection;
        getCenter(): Vec3;
        or(arg0: Internal.Predicate_<BlockPos_>): Internal.Predicate<BlockPos>;
        test(arg0: BlockPos): boolean;
        and(arg0: Internal.Predicate_<BlockPos_>): Internal.Predicate<BlockPos>;
        negate(): Internal.Predicate<BlockPos>;
        forEach(arg0: Internal.Consumer_<BlockPos_>): void;
        static of(arg0: Internal.MutableBoundingBox): Internal.Selection;
        makeOutline(arg0: Internal.Outliner): Internal.Outline$OutlineParams;
        makeOutline(arg0: Internal.Outliner, arg1: any): Internal.Outline$OutlineParams;
        copy(): Internal.Selection;
        substract(arg0: Internal.Selection): Internal.Selection;
        get center(): Vec3;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Selection_ = Selection;
    interface IJoint {
        getParent(): Internal.Optional<Internal.IJoint>;
        getInvBindPose(): Internal.TransformationMatrix;
    }
    type IJoint_ = IJoint;
    class StatType <T> extends Internal.ForgeRegistryEntry<Internal.StatType<any>> implements Internal.Iterable<Internal.Stat<T>> {
        func_199080_a(): Internal.Registry<Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>>;
        iterator(): Internal.Iterator<Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>>>;
        spliterator(): Internal.Spliterator<Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>>;
        forEach(arg0: Internal.Consumer_<Internal.Stat_<Internal.Stat_<Internal.Stat_<Internal.Stat_<T>>>>>): void;
        func_199077_a(arg0: Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>, arg1: Internal.IStatFormatter_): Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>>;
        func_242170_d(): Internal.ITextComponent;
        func_199076_b(arg0: Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>): Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>>;
        setRegistryName(arg0: ResourceLocation_): any;
        func_199078_c(): string;
        func_199079_a(arg0: Internal.Stat<Internal.Stat<Internal.Stat<Internal.Stat<T>>>>): boolean;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Registry<T>);
    }
    type StatType_<T> = Registry.minecraft.stat_type | StatType<T>;
    interface Logger {
        getName(): string;
        log(level: Internal.Level, marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        log(level: Internal.Level, message: org.apache.logging.log4j.message.Message): void;
        log(level: Internal.Level, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        log(level: Internal.Level, marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        log(level: Internal.Level, message: any, throwable: Internal.Throwable): void;
        log(level: Internal.Level, message: any): void;
        log(level: Internal.Level, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        log(level: Internal.Level, message: Internal.CharSequence): void;
        log(level: Internal.Level, messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        log(level: Internal.Level, messageSupplier: Internal.MessageSupplier_): void;
        log(level: Internal.Level, marker: Internal.Marker, message: Internal.CharSequence): void;
        log(level: Internal.Level, marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        log(level: Internal.Level, marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_): void;
        log(level: Internal.Level, marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        log(level: Internal.Level, marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, ...params: any[]): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string): void;
        log(level: Internal.Level, marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        log(level: Internal.Level, marker: Internal.Marker, message: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        log(level: Internal.Level, message: string, p0: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        log(level: Internal.Level, message: string, p0: any, p1: any, p2: any, p3: any): void;
        log(level: Internal.Level, messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        log(level: Internal.Level, messageSupplier: Internal.Supplier_<any>): void;
        log(level: Internal.Level, message: string, throwable: Internal.Throwable): void;
        log(level: Internal.Level, message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        log(level: Internal.Level, message: string, ...params: any[]): void;
        log(level: Internal.Level, message: string): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        log(level: Internal.Level, marker: Internal.Marker, message: string, p0: any): void;
        logMessage(level: Internal.Level, marker: Internal.Marker, fqcn: string, location: Internal.StackTraceElement, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        atWarn(): Internal.LogBuilder;
        atInfo(): Internal.LogBuilder;
        isWarnEnabled(): boolean;
        isWarnEnabled(marker: Internal.Marker): boolean;
        error(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        error(marker: Internal.Marker, message: string, p0: any): void;
        error(messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        error(messageSupplier: Internal.Supplier_<any>): void;
        error(message: string, throwable: Internal.Throwable): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        error(message: any, throwable: Internal.Throwable): void;
        error(message: any): void;
        error(message: Internal.CharSequence, throwable: Internal.Throwable): void;
        error(message: Internal.CharSequence): void;
        error(message: string): void;
        error(message: string, ...params: any[]): void;
        error(message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any): void;
        error(message: string, p0: any, p1: any, p2: any): void;
        error(message: string, p0: any, p1: any): void;
        error(message: string, p0: any): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        error(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        error(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        error(marker: Internal.Marker, message: Internal.CharSequence): void;
        error(marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        error(marker: Internal.Marker, message: any): void;
        error(marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        error(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        error(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        error(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        error(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_): void;
        error(marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>): void;
        error(marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        error(message: org.apache.logging.log4j.message.Message): void;
        error(message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        error(messageSupplier: Internal.MessageSupplier_): void;
        error(messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        error(marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        error(marker: Internal.Marker, message: string, ...params: any[]): void;
        error(marker: Internal.Marker, message: string): void;
        error(marker: Internal.Marker, message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        fatal(message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        fatal(messageSupplier: Internal.MessageSupplier_): void;
        fatal(messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        fatal(message: org.apache.logging.log4j.message.Message): void;
        fatal(marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        fatal(marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>): void;
        fatal(message: string, ...params: any[]): void;
        fatal(message: string): void;
        fatal(message: any, throwable: Internal.Throwable): void;
        fatal(message: any): void;
        fatal(message: Internal.CharSequence, throwable: Internal.Throwable): void;
        fatal(message: Internal.CharSequence): void;
        fatal(marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        fatal(marker: Internal.Marker, message: Internal.CharSequence): void;
        fatal(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        fatal(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_): void;
        fatal(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        fatal(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        fatal(marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        fatal(marker: Internal.Marker, message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        fatal(marker: Internal.Marker, message: string, ...params: any[]): void;
        fatal(marker: Internal.Marker, message: string): void;
        fatal(marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        fatal(marker: Internal.Marker, message: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any): void;
        fatal(message: string, p0: any, p1: any, p2: any): void;
        fatal(message: string, p0: any, p1: any): void;
        fatal(message: string, p0: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        fatal(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any): void;
        fatal(messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        fatal(messageSupplier: Internal.Supplier_<any>): void;
        fatal(message: string, throwable: Internal.Throwable): void;
        fatal(message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        fatal(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        printf(level: Internal.Level, marker: Internal.Marker, format: string, ...params: any[]): void;
        printf(level: Internal.Level, format: string, ...params: any[]): void;
        throwing<T>(throwable: T): T;
        throwing<T>(level: Internal.Level, throwable: T): T;
        atTrace(): Internal.LogBuilder;
        trace(marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        trace(marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>): void;
        trace(marker: Internal.Marker, message: string, ...params: any[]): void;
        trace(marker: Internal.Marker, message: string): void;
        trace(marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        trace(messageSupplier: Internal.MessageSupplier_): void;
        trace(message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        trace(message: org.apache.logging.log4j.message.Message): void;
        trace(messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        trace(marker: Internal.Marker, message: any): void;
        trace(marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, message: Internal.CharSequence): void;
        trace(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        trace(message: string, p0: any, p1: any, p2: any, p3: any): void;
        trace(message: string, p0: any, p1: any, p2: any): void;
        trace(message: string, p0: any, p1: any): void;
        trace(message: string, p0: any): void;
        trace(message: any, throwable: Internal.Throwable): void;
        trace(message: string): void;
        trace(message: string, ...params: any[]): void;
        trace(message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        trace(message: any): void;
        trace(message: Internal.CharSequence, throwable: Internal.Throwable): void;
        trace(message: Internal.CharSequence): void;
        trace(messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        trace(marker: Internal.Marker, message: string, p0: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any): void;
        trace(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        trace(message: string, throwable: Internal.Throwable): void;
        trace(messageSupplier: Internal.Supplier_<any>): void;
        isInfoEnabled(): boolean;
        isInfoEnabled(marker: Internal.Marker): boolean;
        traceEntry(...paramSuppliers: Internal.Supplier<any>[]): Internal.EntryMessage;
        traceEntry(format: string, ...paramSuppliers: Internal.Supplier<any>[]): Internal.EntryMessage;
        traceEntry(message: org.apache.logging.log4j.message.Message): Internal.EntryMessage;
        traceEntry(): Internal.EntryMessage;
        traceEntry(format: string, ...params: any[]): Internal.EntryMessage;
        isErrorEnabled(): boolean;
        isErrorEnabled(marker: Internal.Marker): boolean;
        isTraceEnabled(marker: Internal.Marker): boolean;
        isTraceEnabled(): boolean;
        atLevel(level: Internal.Level): Internal.LogBuilder;
        info(marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        info(message: org.apache.logging.log4j.message.Message): void;
        info(message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        info(marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>): void;
        info(marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        info(marker: Internal.Marker, message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        info(message: any, throwable: Internal.Throwable): void;
        info(message: any): void;
        info(message: Internal.CharSequence, throwable: Internal.Throwable): void;
        info(message: Internal.CharSequence): void;
        info(messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        info(messageSupplier: Internal.MessageSupplier_): void;
        info(marker: Internal.Marker, message: Internal.CharSequence): void;
        info(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        info(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_): void;
        info(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        info(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        info(marker: Internal.Marker, message: string, ...params: any[]): void;
        info(marker: Internal.Marker, message: string): void;
        info(marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        info(marker: Internal.Marker, message: any): void;
        info(marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        info(message: string, p0: any, p1: any, p2: any): void;
        info(message: string, p0: any, p1: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        info(message: string, p0: any, p1: any, p2: any, p3: any): void;
        info(messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        info(messageSupplier: Internal.Supplier_<any>): void;
        info(message: string, throwable: Internal.Throwable): void;
        info(message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        info(message: string, ...params: any[]): void;
        info(message: string): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        info(marker: Internal.Marker, message: string, p0: any, p1: any): void;
        info(marker: Internal.Marker, message: string, p0: any): void;
        info(message: string, p0: any): void;
        always(): Internal.LogBuilder;
        catching(level: Internal.Level, throwable: Internal.Throwable): void;
        catching(throwable: Internal.Throwable): void;
        getMessageFactory<MF>(): MF;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        debug(messageSupplier: Internal.Supplier_<any>): void;
        debug(messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        debug(marker: Internal.Marker, message: string, p0: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        debug(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        debug(message: string, p0: any): void;
        debug(message: string, p0: any, p1: any): void;
        debug(message: string, p0: any, p1: any, p2: any): void;
        debug(message: string, p0: any, p1: any, p2: any, p3: any): void;
        debug(marker: Internal.Marker, message: string, ...params: any[]): void;
        debug(marker: Internal.Marker, message: string): void;
        debug(marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        debug(marker: Internal.Marker, message: any): void;
        debug(marker: Internal.Marker, message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        debug(marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        debug(marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>): void;
        debug(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        debug(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        debug(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_): void;
        debug(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        debug(marker: Internal.Marker, message: Internal.CharSequence): void;
        debug(marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        debug(message: string): void;
        debug(message: any, throwable: Internal.Throwable): void;
        debug(message: any): void;
        debug(message: Internal.CharSequence, throwable: Internal.Throwable): void;
        debug(message: string, ...params: any[]): void;
        debug(message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        debug(message: string, throwable: Internal.Throwable): void;
        debug(messageSupplier: Internal.MessageSupplier_): void;
        debug(message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        debug(message: org.apache.logging.log4j.message.Message): void;
        debug(marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        debug(messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        debug(message: Internal.CharSequence): void;
        atError(): Internal.LogBuilder;
        atFatal(): Internal.LogBuilder;
        traceExit<R>(format: string, result: R): R;
        traceExit<R>(result: R): R;
        traceExit(): void;
        traceExit(message: Internal.EntryMessage): void;
        traceExit<R>(message: Internal.EntryMessage, result: R): R;
        traceExit<R>(message: org.apache.logging.log4j.message.Message, result: R): R;
        isFatalEnabled(marker: Internal.Marker): boolean;
        isFatalEnabled(): boolean;
        getLevel(): Internal.Level;
        warn(message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        warn(message: string, ...params: any[]): void;
        warn(marker: Internal.Marker, message: string, p0: any): void;
        warn(messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any): void;
        warn(messageSupplier: Internal.Supplier_<any>): void;
        warn(message: string, throwable: Internal.Throwable): void;
        warn(message: Internal.CharSequence, throwable: Internal.Throwable): void;
        warn(message: Internal.CharSequence): void;
        warn(messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        warn(messageSupplier: Internal.MessageSupplier_): void;
        warn(message: any): void;
        warn(message: any, throwable: Internal.Throwable): void;
        warn(message: string): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any): void;
        warn(message: string, p0: any, p1: any, p2: any): void;
        warn(message: string, p0: any, p1: any): void;
        warn(message: string, p0: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        warn(marker: Internal.Marker, message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        warn(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_): void;
        warn(marker: Internal.Marker, messageSupplier: Internal.MessageSupplier_, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, message: Internal.CharSequence): void;
        warn(marker: Internal.Marker, message: Internal.CharSequence, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, message: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        warn(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        warn(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message): void;
        warn(marker: Internal.Marker, message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, message: string, ...params: any[]): void;
        warn(marker: Internal.Marker, message: string, ...paramSuppliers: Internal.Supplier<any>[]): void;
        warn(marker: Internal.Marker, message: string, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>): void;
        warn(message: org.apache.logging.log4j.message.Message): void;
        warn(marker: Internal.Marker, messageSupplier: Internal.Supplier_<any>, throwable: Internal.Throwable): void;
        warn(message: org.apache.logging.log4j.message.Message, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, message: any, throwable: Internal.Throwable): void;
        warn(marker: Internal.Marker, message: string): void;
        entry(): void;
        entry(...params: any[]): void;
        exit(): void;
        exit<R>(result: R): R;
        isEnabled(level: Internal.Level, marker: Internal.Marker): boolean;
        isEnabled(level: Internal.Level): boolean;
        isDebugEnabled(): boolean;
        isDebugEnabled(marker: Internal.Marker): boolean;
        atDebug(): Internal.LogBuilder;
    }
    type Logger_ = Logger;
    class FirstPersonRenderer extends Document.Object implements Internal.AccessorFirstPersonRenderer {
        func_228401_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: number, arg4: number, arg5: Internal.HandSide_): void;
        func_187460_a(arg0: Hand_): void;
        botania_transformFirstPerson(arg0: Internal.MatrixStack, arg1: Internal.HandSide_, arg2: number): void;
        func_228397_a_(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: Internal.ItemCameraTransforms$TransformType_, arg3: boolean, arg4: Internal.MatrixStack, arg5: Internal.IRenderTypeBuffer_, arg6: number): void;
        botania_transformSideFirstPerson(arg0: Internal.MatrixStack, arg1: Internal.HandSide_, arg2: number): void;
        func_78441_a(): void;
        func_228396_a_(arg0: number, arg1: Internal.MatrixStack, arg2: Internal.IRenderTypeBuffer$Impl, arg3: Internal.ClientPlayerEntity, arg4: number): void;
        handler$cek000$renderItem(arg0: Internal.AbstractClientPlayerEntity, arg1: number, arg2: number, arg3: Hand_, arg4: number, arg5: Internal.ItemStack, arg6: number, arg7: Internal.MatrixStack, arg8: Internal.IRenderTypeBuffer_, arg9: number, arg10: Internal.CallbackInfo): void;
        field_187467_d: Internal.ItemStack;
        field_187468_e: Internal.ItemStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type FirstPersonRenderer_ = FirstPersonRenderer;
    class SkullTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity {
        requestModelDataUpdate(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_73660_a(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        static func_174884_b(arg0: Internal.GameProfile): Internal.GameProfile;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        func_195485_a(arg0: Internal.GameProfile): void;
        func_184295_a(arg0: number): number;
        func_152108_a(): Internal.GameProfile;
        static func_184294_a(arg0: Internal.MinecraftSessionService): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        static func_184293_a(arg0: Internal.PlayerProfileCache): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SkullTileEntity_ = SkullTileEntity;
    interface IComparatorInputComponent extends Internal.IMachineComponent {
        getComparatorInput(): number;
        (): number;
    }
    type IComparatorInputComponent_ = (()=>number) | IComparatorInputComponent;
    class DropTargetEvent extends Internal.EventObject {
        getDropTargetContext(): Internal.DropTargetContext;
        get dropTargetContext(): Internal.DropTargetContext;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DropTargetContext);
    }
    type DropTargetEvent_ = DropTargetEvent;
    class CookingRecipeJS extends Internal.RecipeJS {
        xp(xp: number): Internal.CookingRecipeJS;
        cookingTime(time: number): Internal.CookingRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CookingRecipeJS_ = CookingRecipeJS;
    interface DoubleStream extends Internal.BaseStream<number, Internal.DoubleStream> {
        average(): Internal.OptionalDouble;
        sequential(): Internal.BaseStream<any, any>;
        sequential(): Internal.DoubleStream;
        takeWhile(arg0: Internal.DoublePredicate_): Internal.DoubleStream;
        distinct(): Internal.DoubleStream;
        findFirst(): Internal.OptionalDouble;
        sum(): number;
        skip(arg0: number): Internal.DoubleStream;
        allMatch(arg0: Internal.DoublePredicate_): boolean;
        mapToObj<U_>(arg0: Internal.DoubleFunction_<U_>): Internal.Stream<U_>;
        mapMulti(arg0: Internal.DoubleStream$DoubleMapMultiConsumer_): Internal.DoubleStream;
        iterator(): Internal.PrimitiveIterator$OfDouble;
        iterator(): Internal.Iterator<any>;
        min(): Internal.OptionalDouble;
        mapToLong(arg0: Internal.DoubleToLongFunction_): Internal.LongStream;
        parallel(): Internal.DoubleStream;
        parallel(): Internal.BaseStream<any, any>;
        noneMatch(arg0: Internal.DoublePredicate_): boolean;
        findAny(): Internal.OptionalDouble;
        limit(arg0: number): Internal.DoubleStream;
        toArray(): number[];
        forEachOrdered(arg0: Internal.DoubleConsumer_): void;
        anyMatch(arg0: Internal.DoublePredicate_): boolean;
        map(arg0: Internal.DoubleUnaryOperator_): Internal.DoubleStream;
        reduce(arg0: number, arg1: Internal.DoubleBinaryOperator_): number;
        reduce(arg0: Internal.DoubleBinaryOperator_): Internal.OptionalDouble;
        spliterator(): Internal.Spliterator<any>;
        spliterator(): Internal.Spliterator$OfDouble;
        max(): Internal.OptionalDouble;
        forEach(arg0: Internal.DoubleConsumer_): void;
        count(): number;
        dropWhile(arg0: Internal.DoublePredicate_): Internal.DoubleStream;
        peek(arg0: Internal.DoubleConsumer_): Internal.DoubleStream;
        flatMap(arg0: Internal.DoubleFunction_<Internal.DoubleStream_>): Internal.DoubleStream;
        filter(arg0: Internal.DoublePredicate_): Internal.DoubleStream;
        sorted(): Internal.DoubleStream;
        boxed(): Internal.Stream<number>;
        summaryStatistics(): Internal.DoubleSummaryStatistics;
        mapToInt(arg0: Internal.DoubleToIntFunction_): Internal.IntStream;
        collect<R_>(arg0: java_.util.function_.Supplier_<R_>, arg1: Internal.ObjDoubleConsumer_<R_>, arg2: Internal.BiConsumer_<R_, R_>): R_;
    }
    type DoubleStream_ = DoubleStream;
    class IPBanEntry extends Internal.BanEntry<string> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.JsonObject);
        constructor(arg0: string, arg1: Internal.Date, arg2: string, arg3: Internal.Date, arg4: string);
        constructor(arg0: string);
    }
    type IPBanEntry_ = IPBanEntry;
    interface IVertexConsumer extends Internal.IVertexBuilder {
        func_225582_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_227847_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_225592_i_(): Internal.VertexFormatElement;
        func_181667_k(): void;
        func_225587_b_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225589_a_(arg0: number, arg1: number): void;
        func_225585_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225590_a_(arg0: number, arg1: number): void;
        func_225586_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IVertexBuilder;
        func_225591_a_(arg0: number, arg1: number): void;
        func_225583_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225584_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
    }
    type IVertexConsumer_ = IVertexConsumer;
    class ItemOverride extends Document.Object {
        func_188026_a(): ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.Map<ResourceLocation, number>);
    }
    type ItemOverride_ = ItemOverride;
    interface FuncSupplier {
        create(arg0: Internal.List<dev.latvian.mods.rhino.util.unit.Unit>): dev.latvian.mods.rhino.util.unit.Unit;
        (arg0: Internal.List<dev.latvian.mods.rhino.util.unit.Unit>): dev.latvian.mods.rhino.util.unit.Unit;
    }
    type FuncSupplier_ = ((arg0: Internal.List<dev.latvian.mods.rhino.util.unit.Unit>)=>dev.latvian.mods.rhino.util.unit.Unit) | FuncSupplier;
    interface IWorld extends Internal.IBiomeReader, Internal.IDayTimeReader {
        func_241851_ab(): number;
        func_175649_E(arg0: BlockPos): Internal.DifficultyInstance;
        func_234938_ad_(): number;
        func_195594_a(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_201674_k(): Internal.Random;
        func_72912_H(): Internal.IWorldInfo;
        func_230547_a_(arg0: BlockPos, arg1: Internal.Block_): void;
        func_175659_aa(): Internal.Difficulty;
        func_205220_G_(): Internal.ITickList<Internal.Block>;
        func_184133_a(arg0: Internal.PlayerEntity, arg1: BlockPos, arg2: Internal.SoundEvent_, arg3: Internal.SoundCategory_, arg4: number, arg5: number): void;
        func_217379_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_217354_b(arg0: number, arg1: number): boolean;
        func_217378_a(arg0: Internal.PlayerEntity, arg1: number, arg2: BlockPos, arg3: number): void;
        func_72863_F(): Internal.AbstractChunkProvider;
        func_205219_F_(): Internal.ITickList<Internal.Fluid>;
    }
    type IWorld_ = IWorld;
    class SSetSlotPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_149173_d(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149175_c(): number;
        func_149174_e(): Internal.ItemStack;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: Internal.ItemStack);
    }
    type SSetSlotPacket_ = SSetSlotPacket;
    class ModelGenerator extends Document.Object {
        parent(s: string): void;
        toJson(): Internal.JsonObject;
        textures(json: Internal.JsonObject): void;
        texture(name: string, texture: string): void;
        element(consumer: Internal.Consumer_<Internal.ModelGenerator$Element_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ModelGenerator_ = ModelGenerator;
    class Minecraft extends Internal.RecursiveEventLoop<Internal.Runnable> implements Internal.ISnooperInfo, Internal.IWindowEventListener, Internal.IForgeMinecraft, Internal.MinecraftAccess, Internal.AccessorMinecraft {
        func_195551_G(): Internal.IResourceManager;
        func_71398_f(): void;
        static func_238181_a_(arg0: Internal.SaveFormat$LevelSave, arg1: Internal.DynamicRegistries$Impl, arg2: Internal.IResourceManager, arg3: Internal.DatapackCodec): Internal.IServerConfiguration;
        func_213239_aq(): Internal.IProfiler;
        func_189648_am(): boolean;
        func_238189_a_(arg0: Internal.DynamicRegistries$Impl, arg1: Internal.Function_<Internal.SaveFormat$LevelSave_, Internal.DatapackCodec_>, arg2: Internal.Function4_<Internal.SaveFormat$LevelSave_, Internal.DynamicRegistries$Impl_, Internal.IResourceManager_, Internal.DatapackCodec_, Internal.IServerConfiguration_>, arg3: boolean, arg4: Internal.SaveFormat$LevelSave): Internal.Minecraft$PackManager;
        func_241558_U_(): Internal.GPUWarning;
        func_110437_J(): Internal.Proxy;
        func_228019_au_(): Internal.RenderTypeBuffers;
        func_135016_M(): Internal.LanguageManager;
        getFontManager(): Internal.FontResourceManager;
        func_213263_ao(): Internal.PaintingSpriteUploader;
        func_213248_ap(): Internal.PotionSpriteUploader;
        func_175606_aa(): Internal.Entity;
        func_175598_ae(): Internal.EntityRendererManager;
        func_233528_c_<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Internal.Either_<Source_, Internal.Exception_>>, Internal.Runnable_>): Internal.CompletableFuture<Source_>;
        func_71356_B(): boolean;
        func_71405_e(): void;
        func_213237_g(): Internal.CompletableFuture<void>;
        static func_71379_u(): boolean;
        func_241562_c_(arg0: Internal.Screen): void;
        func_230151_c_(): boolean;
        static func_71375_t(): boolean;
        pushGuiLayer(arg0: Internal.Screen): void;
        func_181539_aj(): Internal.FrameTimer;
        func_147108_a(arg0: Internal.Screen): void;
        func_238192_a_(arg0: string, arg1: Internal.WorldSettings, arg2: Internal.DynamicRegistries$Impl, arg3: Internal.DimensionGeneratorSettings): void;
        func_147111_S(): boolean;
        func_184126_aj(): Internal.DataFixer;
        func_71387_A(): boolean;
        func_175600_c(): string;
        func_228025_l_(): boolean;
        redirect$cff000$fixUpdateURLs(arg0: Internal.Framebuffer, arg1: number, arg2: number, arg3: number, arg4: number): void;
        getSelf(): Internal.Minecraft;
        func_193989_ak(): number;
        popGuiLayer(): void;
        func_241216_b_(): void;
        func_238216_r_(): boolean;
        func_71401_C(): Internal.IntegratedServer;
        func_213245_w(): Internal.CompletableFuture<void>;
        func_195544_aj(): boolean;
        func_110434_K(): Internal.TextureManager;
        func_213269_at(): Internal.Splashes;
        func_228020_b_(arg0: number): void;
        func_184125_al(): Internal.BlockColors;
        func_147104_D(): Internal.ServerData;
        func_193986_ar(): void;
        func_211821_e(): boolean;
        func_238198_a_(arg0: Internal.UUID): boolean;
        func_181540_al(): boolean;
        func_152342_ad(): Internal.SkinManager;
        func_195548_H(): Internal.ResourcePackList;
        func_181535_r(): Internal.MusicTicker;
        func_175599_af(): Internal.ItemRenderer;
        func_184119_a(arg0: Internal.ItemStack, arg1: Internal.TileEntity): Internal.ItemStack;
        func_193033_an(): Internal.ToastGui;
        func_213226_a(): void;
        func_213268_a(arg0: Internal.LoadingGui): void;
        func_71396_d(arg0: Internal.CrashReport): Internal.CrashReport;
        static func_228009_a_(arg0: Internal.LanguageManager, arg1: string, arg2: Internal.GameSettings, arg3: Internal.CrashReport): void;
        func_238191_a_(arg0: string): void;
        func_99999_d(): void;
        func_175607_a(arg0: Internal.Entity): void;
        func_213250_au(): Internal.LoadingGui;
        func_175602_ab(): Internal.BlockRendererDispatcher;
        func_181037_M(): Internal.PropertyMap;
        func_184123_d(): string;
        func_228015_a_(arg0: ResourceLocation_): Internal.Function<ResourceLocation, Internal.TextureAtlasSprite>;
        func_71385_j(arg0: boolean): void;
        func_213229_ar(): Internal.MinecraftGame;
        func_213253_a<T_>(arg0: Internal.SearchTreeManager$Key<T_>): Internal.IMutableSearchTree<T_>;
        static func_71410_x(): Internal.Minecraft;
        func_70000_a(arg0: Internal.Snooper): void;
        func_213254_o(): void;
        func_152347_ac(): Internal.MinecraftSessionService;
        func_195541_I(): Internal.DownloadingPackFinder;
        func_238206_b_(arg0: Internal.Entity): boolean;
        func_71403_a(arg0: Internal.ClientWorld): void;
        func_228018_at_(): Internal.MainWindow;
        func_230150_b_(): void;
        func_244599_aA(): Internal.FilterManager;
        func_243208_a(arg0: Internal.Throwable, arg1: Internal.ITextComponent_): void;
        func_195549_J(): Internal.File;
        static func_238218_y_(): boolean;
        func_147113_T(): boolean;
        func_71407_l(): void;
        func_175597_ag(): Internal.FirstPersonRenderer;
        func_213170_ax(): Internal.Thread;
        getItemColors(): Internal.ItemColors;
        static func_71377_b(arg0: Internal.CrashReport): void;
        func_213228_a(arg0: boolean): void;
        func_71351_a(arg0: Internal.ServerData): void;
        func_213141_a<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Source_>, Internal.Runnable_>): Internal.CompletableFuture<Source_>;
        func_147114_u(): Internal.ClientPlayNetHandler;
        func_238178_U_(): Internal.BackgroundMusicSelector;
        func_238217_s_(): boolean;
        static func_71382_s(): boolean;
        getSearchTreeManager(): Internal.SearchTreeManager;
        func_110432_I(): Internal.Session;
        func_184121_ak(): number;
        func_71378_E(): Internal.Snooper;
        func_213231_b(arg0: Internal.Screen): void;
        func_193032_ao(): Internal.Tutorial;
        func_209506_al(): Internal.ModelManager;
        func_181537_a(arg0: boolean): void;
        func_147118_V(): Internal.SoundHandler;
        func_71400_g(): void;
        func_71355_q(): boolean;
        func_147110_a(): Internal.Framebuffer;
        func_71404_a(arg0: Internal.CrashReport): void;
        getRenderPartialTicksPaused(): number;
        func_199403_al(): Internal.CreativeSettings;
        static func_238180_a_(arg0: Internal.SaveFormat$LevelSave): Internal.DatapackCodec;
        func_71359_d(): Internal.SaveFormat;
        func_228017_as_(): boolean;
        readonly field_71452_i: Internal.ParticleManager;
        field_228004_B_: boolean;
        static readonly field_211502_b: ResourceLocation;
        field_228005_C_: boolean;
        static readonly field_142025_a: false;
        field_175612_E: boolean;
        field_175618_aM: Internal.BlockRendererDispatcher;
        field_193034_aS: Internal.ToastGui;
        field_193996_ah: number;
        field_175622_Z: Internal.Entity;
        field_147125_j: Internal.Entity;
        static readonly field_71464_q: ResourceLocation;
        readonly field_71460_t: Internal.GameRenderer;
        field_71462_r: Internal.Screen;
        readonly field_184132_p: Internal.DebugRenderer;
        readonly field_71446_o: Internal.TextureManager;
        readonly field_71466_p: Internal.FontRenderer;
        readonly field_195559_v: Internal.KeyboardListener;
        readonly field_71412_D: Internal.File;
        readonly field_71417_B: Internal.MouseHelper;
        field_71441_e: Internal.ClientWorld;
        field_213279_p: Internal.LoadingGui;
        readonly field_211501_aD: Internal.FontResourceManager;
        field_71442_b: Internal.PlayerController;
        static field_71444_a: number[];
        static readonly field_238177_c_: ResourceLocation;
        field_71476_x: Internal.RayTraceResult;
        field_71454_w: boolean;
        readonly field_71456_v: Internal.IngameGui;
        readonly field_71474_y: Internal.GameSettings;
        readonly field_181542_y: Internal.FrameTimer;
        field_71439_g: Internal.ClientPlayerEntity;
        readonly field_71438_f: Internal.WorldRenderer;
        field_71426_K: string;
        get itemColors(): Internal.ItemColors;
        get fontManager(): Internal.FontResourceManager;
        get searchTreeManager(): Internal.SearchTreeManager;
        get self(): Internal.Minecraft;
        get renderPartialTicksPaused(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
    }
    type Minecraft_ = Minecraft;
    abstract class Reward extends Internal.QuestObjectBase {
        addMouseOverText(arg0: Internal.TooltipList): void;
        addTitleInMouseOverText(): boolean;
        getIngredient(): any;
        getExcludeFromClaimAll(): boolean;
        getType(): Internal.RewardType;
        automatedClaimPost(arg0: Internal.TileEntity, arg1: Internal.UUID, arg2: Internal.ServerPlayerEntity): void;
        claimAutomated(arg0: Internal.TileEntity, arg1: Internal.UUID, arg2: Internal.ServerPlayerEntity, arg3: boolean): Internal.Optional<Internal.ItemStack>;
        onButtonClicked(arg0: Internal.Button, arg1: boolean): void;
        getAutoClaimType(): Internal.RewardAutoClaim;
        isTeamReward(): boolean;
        claim(arg0: Internal.ServerPlayerEntity, arg1: boolean): void;
        automatedClaimPre(arg0: Internal.TileEntity, arg1: Internal.List<Internal.ItemStack>, arg2: Internal.Random, arg3: Internal.UUID, arg4: Internal.ServerPlayerEntity): boolean;
        getButtonText(): string;
        autoclaim: Internal.RewardAutoClaim;
        team: Internal.Tristate;
        quest: Internal.Quest;
        get buttonText(): string;
        get ingredient(): any;
        get teamReward(): boolean;
        get type(): Internal.RewardType;
        get excludeFromClaimAll(): boolean;
        get autoClaimType(): Internal.RewardAutoClaim;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Quest);
    }
    type Reward_ = Reward;
    abstract class GuiScreenEvent$MouseReleasedEvent extends Internal.GuiScreenEvent$MouseInputEvent {
        getButton(): number;
        get button(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number);
    }
    type GuiScreenEvent$MouseReleasedEvent_ = GuiScreenEvent$MouseReleasedEvent;
    abstract class AbstractObject2IntMap <K> extends Internal.AbstractObject2IntFunction<K> implements Internal.Object2IntMap<K>, Internal.Serializable {
        getOrDefault(arg0: any, arg1: number): number;
        getOrDefault(arg0: any, arg1: number): number;
        getOrDefault(arg0: any, arg1: any): any;
        computeIfAbsent(arg0: K, arg1: Internal.Function_<K, number>): number;
        values(): Internal.IntCollection;
        values(): Internal.Collection<any>;
        replace(arg0: K, arg1: number): number;
        replace(arg0: K, arg1: number, arg2: number): boolean;
        replace(arg0: K, arg1: number, arg2: number): boolean;
        replace(arg0: K, arg1: number): number;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        replaceAll(arg0: Internal.BiFunction_<K, number, number>): void;
        andThen<V_>(arg0: Internal.Function_<number, V_>): Internal.Function<K, V_>;
        put(arg0: any, arg1: any): any;
        put(arg0: K, arg1: number): number;
        put(arg0: K, arg1: number): number;
        remove(arg0: any): number;
        remove(arg0: any): any;
        remove(arg0: any, arg1: any): boolean;
        remove(arg0: any, arg1: number): boolean;
        containsValue(arg0: number): boolean;
        containsValue(arg0: any): boolean;
        mergeInt(arg0: K, arg1: number, arg2: Internal.BiFunction_<number, number, number>): number;
        compute(arg0: K, arg1: Internal.BiFunction_<K, number, number>): number;
        merge(arg0: K, arg1: number, arg2: Internal.BiFunction_<number, number, number>): number;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        get(arg0: any): any;
        get(arg0: any): number;
        putAll(arg0: Internal.Map_<K, number>): void;
        computeInt(arg0: K, arg1: Internal.BiFunction_<K, number, number>): number;
        keySet(): Internal.ObjectSet<K>;
        keySet(): Internal.Set<any>;
        object2IntEntrySet(): Internal.ObjectSet<Internal.Object2IntMap$Entry<K>>;
        computeIntIfAbsentPartial(arg0: K, arg1: Internal.Object2IntFunction_<K>): number;
        applyAsInt(arg0: K): number;
        removeInt(arg0: any): number;
        entrySet(): Internal.Set<any>;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<K, number>>;
        apply(arg0: K): number;
        forEach(arg0: Internal.BiConsumer_<K, number>): void;
        clear(): void;
        isEmpty(): boolean;
        computeIfPresent(arg0: K, arg1: Internal.BiFunction_<K, number, number>): number;
        computeIntIfAbsent(arg0: K, arg1: Internal.ToIntFunction_<K>): number;
        compose<V_>(arg0: Internal.Function_<V_, K>): Internal.Function<V_, number>;
        computeIntIfPresent(arg0: K, arg1: Internal.BiFunction_<K, number, number>): number;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: K, arg1: number): number;
        putIfAbsent(arg0: K, arg1: number): number;
        get empty(): boolean;
    }
    type AbstractObject2IntMap_<K> = AbstractObject2IntMap<K>;
    class MenuItem extends Internal.MenuComponent implements Internal.Accessible {
        setShortcut(arg0: Internal.MenuShortcut): void;
        getListeners<T_>(arg0: Internal.Class<T_>): T_[];
        getLabel(): string;
        deleteShortcut(): void;
        addActionListener(arg0: Internal.ActionListener_): void;
        setActionCommand(arg0: string): void;
        getShortcut(): Internal.MenuShortcut;
        setEnabled(arg0: boolean): void;
        paramString(): string;
        removeActionListener(arg0: Internal.ActionListener_): void;
        addNotify(): void;
        disable(): void;
        enable(arg0: boolean): void;
        enable(): void;
        isEnabled(): boolean;
        getActionListeners(): Internal.ActionListener[];
        setLabel(arg0: string): void;
        getActionCommand(): string;
        get actionCommand(): string;
        get shortcut(): Internal.MenuShortcut;
        get actionListeners(): Internal.ActionListener[];
        get label(): string;
        get enabled(): boolean;
        set actionCommand(arg0: string);
        set shortcut(arg0: Internal.MenuShortcut);
        set label(arg0: string);
        set enabled(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.MenuShortcut);
        constructor(arg0: string);
        constructor();
    }
    type MenuItem_ = MenuItem;
    interface JsonSerializableKJS {
        toJsonKJS(): Internal.JsonElement;
        (): Internal.JsonElement;
    }
    type JsonSerializableKJS_ = (()=>Internal.JsonElement) | JsonSerializableKJS;
    abstract class Dictionary <K, V> extends Document.Object {
        size(): number;
        keys(): Internal.Enumeration<K>;
        elements(): Internal.Enumeration<V>;
        get(arg0: any): V;
        isEmpty(): boolean;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        get empty(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Dictionary_<K, V> = Dictionary<K, V>;
    class FilterManager extends Document.Object {
        func_244645_a(arg0: Internal.NetworkPlayerInfo): void;
        func_244646_a(arg0: Internal.UUID): void;
        func_244797_a(arg0: string): Internal.UUID;
        func_244644_a(): Internal.Set<Internal.UUID>;
        func_244648_c(arg0: Internal.UUID): boolean;
        func_244756_c(arg0: Internal.UUID): boolean;
        func_244647_b(arg0: Internal.UUID): void;
        func_244757_e(arg0: Internal.UUID): boolean;
        func_244649_d(arg0: Internal.UUID): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft, arg1: any);
    }
    type FilterManager_ = FilterManager;
    class SSpawnPlayerPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148945_j(): number;
        func_148941_i(): number;
        func_186899_f(): number;
        func_186897_e(): number;
        func_179819_c(): Internal.UUID;
        func_186898_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_148943_d(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity);
    }
    type SSpawnPlayerPacket_ = SSpawnPlayerPacket;
    interface ObjectIterable <K> extends Internal.Iterable<K> {
        iterator(): Internal.ObjectIterator<K>;
        iterator(): Internal.Iterator<any>;
        (): Internal.ObjectIterator<K>;
    }
    type ObjectIterable_<K> = (()=>Internal.ObjectIterator<K>) | ObjectIterable<K>;
    class AddLakeProperties extends Document.Object {
        setWorldgenLayer(id: string): void;
        setBlock(id: string): void;
        chance: number;
        retrogen: number;
        readonly biomes: Internal.WorldgenEntryList;
        _block: Internal.BlockState;
        _worldgenLayer: DecorationGenerationStep;
        set block(id: string);
        set worldgenLayer(id: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AddLakeProperties_ = AddLakeProperties;
    interface TileAreaOfInfluence {
        getEffectColor(): java_.awt.Color;
        getEffectPosition(): Internal.Vector3;
        getEffectOriginPosition(): BlockPos;
        providesEffect(): boolean;
        getDimension(): Internal.RegistryKey<Internal.World>;
        getRadius(): number;
    }
    type TileAreaOfInfluence_ = TileAreaOfInfluence;
    class WritingMode extends Internal.Enum<Internal.WritingMode> {
        static valueOf(arg0: string): Internal.WritingMode;
        static values(): Internal.WritingMode[];
        static readonly REPLACE: Internal.WritingMode;
        static readonly APPEND: Internal.WritingMode;
    }
    type WritingMode_ = "replace" | "append" | WritingMode;
    class CopyName$Source extends Internal.Enum<Internal.CopyName$Source> {
        static valueOf(arg0: string): Internal.CopyName$Source;
        static values(): Internal.CopyName$Source[];
        static func_216235_a(arg0: string): Internal.CopyName$Source;
        static readonly KILLER_PLAYER: Internal.CopyName$Source;
        readonly field_216236_e: string;
        readonly field_216237_f: Internal.LootParameter<any>;
        static readonly KILLER: Internal.CopyName$Source;
        static readonly BLOCK_ENTITY: Internal.CopyName$Source;
        static readonly THIS: Internal.CopyName$Source;
    }
    type CopyName$Source_ = "this" | "killer" | "killer_player" | "block_entity" | CopyName$Source;
    interface MapLike <T> {
        entries(): Internal.Stream<Internal.Pair<T, T>>;
        get(arg0: T): T;
        get(arg0: string): T;
    }
    type MapLike_<T> = MapLike<T>;
    class ChapterGroup extends Internal.QuestObject {
        isDefaultGroup(): boolean;
        getIndex(): number;
        getFirstVisibleChapter(arg0: Internal.TeamData): Internal.Chapter;
        getVisibleChapters(arg0: Internal.TeamData): Internal.List<Internal.Chapter>;
        readonly file: Internal.QuestFile;
        readonly chapters: Internal.List<Internal.Chapter>;
        guiCollapsed: boolean;
        get defaultGroup(): boolean;
        get index(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.QuestFile);
    }
    type ChapterGroup_ = ChapterGroup;
    class LocatableEventAnnounce$LocatableEvent extends Internal.Enum<Internal.LocatableEventAnnounce$LocatableEvent> {
        static valueOf(arg0: string): Internal.LocatableEventAnnounce$LocatableEvent;
        static values(): Internal.LocatableEventAnnounce$LocatableEvent[];
        static readonly REGISTER: Internal.LocatableEventAnnounce$LocatableEvent;
        static readonly UNREGISTER: Internal.LocatableEventAnnounce$LocatableEvent;
    }
    type LocatableEventAnnounce$LocatableEvent_ = "register" | "unregister" | LocatableEventAnnounce$LocatableEvent;
    class SoundCategory extends Internal.Enum<Internal.SoundCategory> {
        static valueOf(arg0: string): Internal.SoundCategory;
        static values(): Internal.SoundCategory[];
        func_187948_a(): string;
        static readonly RECORDS: Internal.SoundCategory;
        static readonly MUSIC: Internal.SoundCategory;
        static readonly MASTER: Internal.SoundCategory;
        static readonly HOSTILE: Internal.SoundCategory;
        static readonly PLAYERS: Internal.SoundCategory;
        static readonly VOICE: Internal.SoundCategory;
        static readonly WEATHER: Internal.SoundCategory;
        static readonly BLOCKS: Internal.SoundCategory;
        static readonly AMBIENT: Internal.SoundCategory;
        static readonly NEUTRAL: Internal.SoundCategory;
    }
    type SoundCategory_ = "master" | "music" | "records" | "weather" | "blocks" | "hostile" | "neutral" | "players" | "ambient" | "voice" | SoundCategory;
    class DataResult <R> extends Document.Object implements Internal.App<Internal.DataResult$Mu, R> {
        apply2<R2_, S_>(arg0: Internal.BiFunction_<R, R2_, S_>, arg1: Internal.DataResult<R2_>): Internal.DataResult<S_>;
        apply3<R2_, R3_, S_>(arg0: Internal.Function3_<R, R2_, R3_, S_>, arg1: Internal.DataResult<R2_>, arg2: Internal.DataResult<R3_>): Internal.DataResult<S_>;
        static instance(): Internal.DataResult$Instance;
        setPartial(arg0: R): Internal.DataResult<R>;
        setPartial(arg0: java_.util.function_.Supplier_<R>): Internal.DataResult<R>;
        addLifecycle(arg0: Internal.Lifecycle): Internal.DataResult<R>;
        static partialGet<K_, V_>(arg0: Internal.Function_<K_, V_>, arg1: java_.util.function_.Supplier_<string>): Internal.Function<K_, Internal.DataResult<V_>>;
        static error<R_>(arg0: string, arg1: R_): Internal.DataResult<R_>;
        error(): Internal.Optional<Internal.DataResult$PartialResult<R>>;
        static error<R_>(arg0: string, arg1: R_, arg2: Internal.Lifecycle): Internal.DataResult<R_>;
        static error<R_>(arg0: string): Internal.DataResult<R_>;
        static error<R_>(arg0: string, arg1: Internal.Lifecycle): Internal.DataResult<R_>;
        apply2stable<R2_, S_>(arg0: Internal.BiFunction_<R, R2_, S_>, arg1: Internal.DataResult<R2_>): Internal.DataResult<S_>;
        promotePartial(arg0: Internal.Consumer_<string>): Internal.DataResult<R>;
        ap<R2_>(arg0: Internal.DataResult<Internal.Function<R, R2_>>): Internal.DataResult<R2_>;
        lifecycle(): Internal.Lifecycle;
        flatMap<R2_>(arg0: Internal.Function_<R, Internal.DataResult_<R2_>>): Internal.DataResult<R2_>;
        result(): Internal.Optional<R>;
        mapError(arg0: Internal.UnaryOperator<string>): Internal.DataResult<R>;
        setLifecycle(arg0: Internal.Lifecycle): Internal.DataResult<R>;
        static success<R_>(arg0: R_): Internal.DataResult<R_>;
        static success<R_>(arg0: R_, arg1: Internal.Lifecycle): Internal.DataResult<R_>;
        static unbox<R_>(arg0: Internal.App<Internal.DataResult$Mu, R_>): Internal.DataResult<R_>;
        getOrThrow(arg0: boolean, arg1: Internal.Consumer_<string>): R;
        get(): Internal.Either<R, Internal.DataResult$PartialResult<R>>;
        map<T_>(arg0: Internal.Function_<R, T_>): Internal.DataResult<T_>;
        resultOrPartial(arg0: Internal.Consumer_<string>): Internal.Optional<R>;
        set partial(arg0: R);
    }
    type DataResult_<R> = DataResult<R>;
    class RenderState$TexturingState extends Internal.RenderState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Runnable, arg2: Internal.Runnable);
    }
    type RenderState$TexturingState_ = RenderState$TexturingState;
    class DragSource extends Document.Object implements Internal.Serializable {
        removeDragSourceListener(arg0: Internal.DragSourceListener): void;
        getListeners<T_>(arg0: Internal.Class<T_>): T_[];
        createDefaultDragGestureRecognizer(arg0: Internal.Component, arg1: number, arg2: Internal.DragGestureListener_): Internal.DragGestureRecognizer;
        createDragGestureRecognizer<T_>(arg0: Internal.Class<T_>, arg1: Internal.Component, arg2: number, arg3: Internal.DragGestureListener_): T_;
        static isDragImageSupported(): boolean;
        addDragSourceMotionListener(arg0: Internal.DragSourceMotionListener_): void;
        getDragSourceMotionListeners(): Internal.DragSourceMotionListener[];
        addDragSourceListener(arg0: Internal.DragSourceListener): void;
        removeDragSourceMotionListener(arg0: Internal.DragSourceMotionListener_): void;
        static getDefaultDragSource(): Internal.DragSource;
        getFlavorMap(): Internal.FlavorMap;
        static getDragThreshold(): number;
        startDrag(arg0: Internal.DragGestureEvent, arg1: Internal.Cursor, arg2: Internal.Image, arg3: Internal.Point, arg4: Internal.Transferable, arg5: Internal.DragSourceListener, arg6: Internal.FlavorMap): void;
        startDrag(arg0: Internal.DragGestureEvent, arg1: Internal.Cursor, arg2: Internal.Transferable, arg3: Internal.DragSourceListener, arg4: Internal.FlavorMap): void;
        startDrag(arg0: Internal.DragGestureEvent, arg1: Internal.Cursor, arg2: Internal.Image, arg3: Internal.Point, arg4: Internal.Transferable, arg5: Internal.DragSourceListener): void;
        startDrag(arg0: Internal.DragGestureEvent, arg1: Internal.Cursor, arg2: Internal.Transferable, arg3: Internal.DragSourceListener): void;
        getDragSourceListeners(): Internal.DragSourceListener[];
        static readonly DefaultCopyNoDrop: Internal.Cursor;
        static readonly DefaultMoveNoDrop: Internal.Cursor;
        static readonly DefaultMoveDrop: Internal.Cursor;
        static readonly DefaultLinkDrop: Internal.Cursor;
        static readonly DefaultLinkNoDrop: Internal.Cursor;
        static readonly DefaultCopyDrop: Internal.Cursor;
        get dragImageSupported(): boolean;
        get dragSourceMotionListeners(): Internal.DragSourceMotionListener[];
        get flavorMap(): Internal.FlavorMap;
        get dragThreshold(): number;
        get defaultDragSource(): Internal.DragSource;
        get dragSourceListeners(): Internal.DragSourceListener[];
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type DragSource_ = DragSource;
    class ItemAndGasToItemRecipeJS extends Internal.MekanismRecipeJS {
        inputGas(arg0: any): Internal.ItemAndGasToItemRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ItemAndGasToItemRecipeJS_ = ItemAndGasToItemRecipeJS;
    class ClearFileCacheEvent extends net.minecraftforge.eventbus.api.Event {
        getFile(): Internal.QuestFile;
        static readonly EVENT: me.shedaniel.architectury.event.Event<Internal.Consumer<Internal.ClearFileCacheEvent>>;
        get file(): Internal.QuestFile;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.QuestFile);
        constructor();
    }
    type ClearFileCacheEvent_ = ClearFileCacheEvent;
    interface ConfigParser <C> {
        getFormat(): Internal.ConfigFormat<C>;
        parse(arg0: Internal.Path, arg1: Internal.FileNotFoundAction_): C;
        parse(arg0: Internal.File, arg1: Internal.Config, arg2: Internal.ParsingMode_, arg3: Internal.FileNotFoundAction_, arg4: Internal.Charset): void;
        parse(arg0: Internal.File, arg1: Internal.Config, arg2: Internal.ParsingMode_, arg3: Internal.FileNotFoundAction_): void;
        parse(arg0: Internal.File, arg1: Internal.FileNotFoundAction_, arg2: Internal.Charset): C;
        parse(arg0: Internal.URL, arg1: Internal.Config, arg2: Internal.ParsingMode_): void;
        parse(arg0: Internal.URL): C;
        parse(arg0: Internal.Path, arg1: Internal.Config, arg2: Internal.ParsingMode_, arg3: Internal.FileNotFoundAction_, arg4: Internal.Charset): void;
        parse(arg0: Internal.Path, arg1: Internal.Config, arg2: Internal.ParsingMode_, arg3: Internal.FileNotFoundAction_): void;
        parse(arg0: Internal.Path, arg1: Internal.FileNotFoundAction_, arg2: Internal.Charset): C;
        parse(arg0: string, arg1: Internal.Config, arg2: Internal.ParsingMode_): void;
        parse(arg0: string): C;
        parse(arg0: Internal.Reader, arg1: Internal.Config, arg2: Internal.ParsingMode_): void;
        parse(arg0: Internal.Reader): C;
        parse(arg0: Internal.File, arg1: Internal.FileNotFoundAction_): C;
        parse(arg0: Internal.InputStream, arg1: Internal.Config, arg2: Internal.ParsingMode_, arg3: Internal.Charset): void;
        parse(arg0: Internal.InputStream, arg1: Internal.Config, arg2: Internal.ParsingMode_): void;
        parse(arg0: Internal.InputStream, arg1: Internal.Charset): C;
        parse(arg0: Internal.InputStream): C;
    }
    type ConfigParser_<C> = ConfigParser<C>;
    abstract class AbstractSet <E> extends Internal.AbstractCollection<E> implements Internal.Set<E> {
        spliterator(): Internal.Spliterator<E>;
        stream(): Internal.Stream<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<E>;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
    }
    type AbstractSet_<E> = AbstractSet<E>;
    class Task$Status extends Internal.Enum<Internal.Task$Status> {
        static valueOf(arg0: string): Internal.Task$Status;
        static values(): Internal.Task$Status[];
        static readonly RUNNING: Internal.Task$Status;
        static readonly STOPPED: Internal.Task$Status;
    }
    type Task$Status_ = "stopped" | "running" | Task$Status;
    class BiomeManager extends Document.Object implements Internal.BiomeManagerFTBC, Internal.AccessorBiomeManager {
        getZoomer(): Internal.IBiomeMagnifier;
        func_235198_a_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_235199_a_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        getBiomeZoomSeedFTBC(): number;
        func_226836_a_(arg0: BlockPos): Internal.Biome;
        func_226835_a_(arg0: Internal.BiomeProvider): Internal.BiomeManager;
        func_235201_b_(arg0: BlockPos): Internal.Biome;
        static func_235200_a_(arg0: number): number;
        readonly field_226833_b_: number;
        get biomeZoomSeedFTBC(): number;
        get zoomer(): Internal.IBiomeMagnifier;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BiomeManager$IBiomeReader, arg1: number, arg2: Internal.IBiomeMagnifier);
    }
    type BiomeManager_ = BiomeManager;
    class BlockEvent$NeighborNotifyEvent extends Internal.BlockEvent {
        getForceRedstoneUpdate(): boolean;
        getNotifiedSides(): Internal.EnumSet<Internal.Direction>;
        get notifiedSides(): Internal.EnumSet<Internal.Direction>;
        get forceRedstoneUpdate(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.World, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.EnumSet<Internal.Direction>, arg4: boolean);
    }
    type BlockEvent$NeighborNotifyEvent_ = BlockEvent$NeighborNotifyEvent;
    interface IDying {
        isDying(): boolean;
        formatLoc(arg0: Vec3): string;
        dyingInteract(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
    }
    type IDying_ = IDying;
    interface ReadableByteChannel extends java_.nio.channels.Channel {
        read(arg0: Internal.ByteBuffer): number;
        (arg0: Internal.ByteBuffer): number;
    }
    type ReadableByteChannel_ = ((arg0: Internal.ByteBuffer)=>number) | ReadableByteChannel;
    interface Function <T, R> {
        compose<V>(arg0: Internal.Function_<V, T>): Internal.Function<V, R>;
        apply(arg0: T): R;
        andThen<V>(arg0: Internal.Function_<R, V>): Internal.Function<T, V>;
        (arg0: T): R;
    }
    type Function_<T, R> = ((arg0: T)=>R) | Function<T, R>;
    class TooltipOverlayEvent$Render extends Internal.TooltipOverlayEvent {
        matrixStack: Internal.MatrixStack;
        x: number;
        y: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemStack, arg1: number, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.FoodValues, arg5: Internal.FoodValues);
        constructor();
    }
    type TooltipOverlayEvent$Render_ = TooltipOverlayEvent$Render;
    class TagMatchRuleTest extends Internal.RuleTest {
        static readonly field_237161_a_: Internal.Codec<Internal.TagMatchRuleTest>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ITag<Internal.Block>);
    }
    type TagMatchRuleTest_ = TagMatchRuleTest;
    class TeamRank extends Internal.Enum<Internal.TeamRank> implements Internal.IStringSerializable {
        isAlly(): boolean;
        getPower(): number;
        isNone(): boolean;
        isEnemy(): boolean;
        isInvited(): boolean;
        isOwner(): boolean;
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.TeamRank;
        static values(): Internal.TeamRank[];
        is(arg0: Internal.TeamRank_): boolean;
        isMember(): boolean;
        isOfficer(): boolean;
        static readonly OWNER: Internal.TeamRank;
        static readonly INVITED: Internal.TeamRank;
        static readonly ALLY: Internal.TeamRank;
        static readonly NAME_MAP: Internal.NameMap<Internal.TeamRank>;
        static readonly ENEMY: Internal.TeamRank;
        static readonly OFFICER: Internal.TeamRank;
        static readonly VALUES: Internal.TeamRank[];
        static readonly NONE: Internal.TeamRank;
        static readonly MEMBER: Internal.TeamRank;
        get owner(): boolean;
        get ally(): boolean;
        get officer(): boolean;
        get invited(): boolean;
        get member(): boolean;
        get enemy(): boolean;
        get power(): number;
        get none(): boolean;
    }
    type TeamRank_ = "enemy" | "none" | "ally" | "invited" | "member" | "officer" | "owner" | TeamRank;
    class PackMetadataSection extends Document.Object {
        func_198962_b(): number;
        func_198963_a(): Internal.ITextComponent;
        static readonly field_198964_a: Internal.PackMetadataSectionSerializer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ITextComponent, arg1: number);
    }
    type PackMetadataSection_ = PackMetadataSection;
    class LootTableEntry extends Document.Object implements Internal.FunctionContainer, Internal.ConditionContainer {
        enchantWithLevels(levels: Internal.IRandomRange, treasure: boolean): Internal.FunctionContainer;
        nbt(tag: Internal.CompoundNBT_): Internal.FunctionContainer;
        damage(damage: Internal.IRandomRange): Internal.FunctionContainer;
        killedByPlayer(): Internal.ConditionContainer;
        survivesExplosion(): Internal.ConditionContainer;
        randomChance(chance: number): Internal.ConditionContainer;
        addFunction(arg0: Internal.JsonObject): Internal.FunctionContainer;
        addFunction(o: Internal.JsonObject): Internal.LootTableEntry;
        count(count: Internal.IRandomRange): Internal.FunctionContainer;
        weight(weight: number): Internal.LootTableEntry;
        addConditionalFunction(func: Internal.Consumer_<Internal.ConditionalFunction_>): Internal.FunctionContainer;
        addCondition(o: Internal.JsonObject): Internal.LootTableEntry;
        addCondition(arg0: Internal.JsonObject): Internal.ConditionContainer;
        quality(quality: number): Internal.LootTableEntry;
        lootingEnchant(count: Internal.IRandomRange, limit: number): Internal.FunctionContainer;
        lootTable(table: ResourceLocation_, seed: number): Internal.FunctionContainer;
        entityScores(entity: Internal.LootContext$EntityTarget_, scores: Internal.Map_<string, any>): Internal.ConditionContainer;
        copyName(source: Internal.CopyName$Source_): Internal.FunctionContainer;
        name(name: Internal.Text_, entity: Internal.LootContext$EntityTarget_): Internal.FunctionContainer;
        name(name: Internal.Text_): Internal.FunctionContainer;
        randomChanceWithLooting(chance: number, multiplier: number): Internal.ConditionContainer;
        furnaceSmelt(): Internal.FunctionContainer;
        enchantRandomly(enchantments: ResourceLocation[]): Internal.FunctionContainer;
        entityProperties(entity: Internal.LootContext$EntityTarget_, properties: Internal.JsonObject): Internal.ConditionContainer;
        readonly json: Internal.JsonObject;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(o: Internal.JsonObject);
    }
    type LootTableEntry_ = LootTableEntry;
    class SSpawnMobPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_186891_e(): number;
        func_186893_g(): number;
        func_186892_f(): number;
        func_149031_k(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149025_e(): number;
        func_149024_d(): number;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149026_i(): number;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149030_m(): number;
        func_149033_j(): number;
        func_149032_n(): number;
        func_149028_l(): number;
        func_186890_c(): Internal.UUID;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity);
    }
    type SSpawnMobPacket_ = SSpawnMobPacket;
    /**
    */
    interface ITextComponent extends Internal.Message, Internal.ITextProperties {
        func_230439_a_<T_>(arg0: Internal.ITextProperties$IStyledTextAcceptor_<T_>, arg1: Internal.Style): Internal.Optional<T_>;
        func_212636_a(arg0: number): string;
        func_230438_a_<T_>(arg0: Internal.ITextProperties$ITextAcceptor_<T_>): Internal.Optional<T_>;
        func_230531_f_(): Internal.IFormattableTextComponent;
        func_230532_e_(): Internal.IFormattableTextComponent;
        func_150253_a(): Internal.List<Internal.ITextComponent>;
        getString(): string;
        func_241878_f(): Internal.IReorderingProcessor;
        func_230534_b_<T_>(arg0: Internal.ITextProperties$IStyledTextAcceptor_<T_>, arg1: Internal.Style): Internal.Optional<T_>;
        func_150256_b(): Internal.Style;
        func_150261_e(): string;
        func_230533_b_<T_>(arg0: Internal.ITextProperties$ITextAcceptor_<T_>): Internal.Optional<T_>;
    }
    type ITextComponent_ = string | object | Internal.Text_ | ITextComponent;
    abstract class Stages extends Document.Object {
        add(stage: string): boolean;
        getAll(): Internal.Collection<string>;
        set(stage: string, enabled: boolean): boolean;
        static added(event: Internal.Consumer_<Internal.StageChangeEvent_>): void;
        static invokeAdded(stages: Internal.Stages, stage: string): void;
        replace(stages: Internal.Collection<string>): void;
        clear(): boolean;
        toggle(stage: string): boolean;
        addNoUpdate(arg0: string): boolean;
        sync(): void;
        remove(stage: string): boolean;
        static removed(event: Internal.Consumer_<Internal.StageChangeEvent_>): void;
        getList(): Internal.Collection<string>;
        static get(player: Internal.PlayerEntity): Internal.Stages;
        static invokeRemoved(stages: Internal.Stages, stage: string): void;
        static overrideCreation(event: Internal.Consumer_<Internal.StageCreationEvent_>): void;
        has(stage: string): boolean;
        removeNoUpdate(arg0: string): boolean;
        readonly player: Internal.PlayerEntity;
        get all(): Internal.Collection<string>;
        get list(): Internal.Collection<string>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(p: Internal.PlayerEntity);
    }
    type Stages_ = Stages;
    class NoiseChunkGenerator extends Internal.ChunkGenerator {
        func_222552_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): number;
        func_222548_a(arg0: number[], arg1: number, arg2: number): void;
        func_236088_a_(arg0: number, arg1: Internal.RegistryKey<Internal.DimensionSettings>): boolean;
        func_236095_c_(arg0: number, arg1: number): number;
        readonly field_236083_v_: Internal.SimplexNoiseGenerator;
        readonly field_236084_w_: number;
        static readonly field_236081_j_: number[];
        static readonly field_236079_d_: Internal.Codec<Internal.NoiseChunkGenerator>;
        readonly field_222566_m: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BiomeProvider, arg1: number, arg2: java_.util.function_.Supplier<Internal.DimensionSettings>);
    }
    type NoiseChunkGenerator_ = NoiseChunkGenerator;
    interface IForgeModelTransform {
        getPartTransformation(arg0: any): Internal.TransformationMatrix;
    }
    type IForgeModelTransform_ = IForgeModelTransform;
    interface JsonDeserializer <T> {
        deserialize(arg0: Internal.JsonElement, arg1: Internal.Type, arg2: Internal.JsonDeserializationContext_): T;
        (arg0: Internal.JsonElement, arg1: Internal.Type, arg2: Internal.JsonDeserializationContext): T;
    }
    type JsonDeserializer_<T> = ((arg0: Internal.JsonElement, arg1: Internal.Type, arg2: Internal.JsonDeserializationContext)=>T) | JsonDeserializer<T>;
    class CClickWindowPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_149543_e(): number;
        func_149544_d(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186993_f(): Internal.ClickType;
        func_149548_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149546_g(): Internal.ItemStack;
        func_149547_f(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number, arg3: Internal.ClickType, arg4: Internal.ItemStack, arg5: number);
    }
    type CClickWindowPacket_ = CClickWindowPacket;
    interface Spliterator <T> {
        trySplit(): Internal.Spliterator<T>;
        tryAdvance(arg0: Internal.Consumer_<T>): boolean;
        characteristics(): number;
        getComparator(): Internal.Comparator<T>;
        getExactSizeIfKnown(): number;
        estimateSize(): number;
        hasCharacteristics(arg0: number): boolean;
        forEachRemaining(arg0: Internal.Consumer_<T>): void;
    }
    type Spliterator_<T> = Spliterator<T>;
    interface ExistingFileHelper$IResourceType {
        getSuffix(): string;
        getPrefix(): string;
        getPackType(): Internal.ResourcePackType;
    }
    type ExistingFileHelper$IResourceType_ = ExistingFileHelper$IResourceType;
    class Suggestion extends Document.Object implements Internal.Comparable<Internal.Suggestion> {
        expand(arg0: string, arg1: Internal.StringRange): Internal.Suggestion;
        getTooltip(): Internal.Message;
        apply(arg0: string): string;
        getRange(): Internal.StringRange;
        getText(): string;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.Suggestion): number;
        compareToIgnoreCase(arg0: Internal.Suggestion): number;
        get tooltip(): Internal.Message;
        get range(): Internal.StringRange;
        get text(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.StringRange, arg1: string);
        constructor(arg0: Internal.StringRange, arg1: string, arg2: Internal.Message);
    }
    type Suggestion_ = Suggestion;
    class AdvancementJS extends Document.Object {
        hasDisplay(): boolean;
        getChildren(): Internal.Set<Internal.AdvancementJS>;
        getParent(): Internal.AdvancementJS;
        getTitle(): Internal.Text;
        getId(): ResourceLocation;
        id(): ResourceLocation;
        getDisplayText(): Internal.Text;
        addChild(a: Internal.AdvancementJS): void;
        getDescription(): Internal.Text;
        readonly advancement: Internal.Advancement;
        get parent(): Internal.AdvancementJS;
        get displayText(): Internal.Text;
        get children(): Internal.Set<Internal.AdvancementJS>;
        get description(): Internal.Text;
        get title(): Internal.Text;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(a: Internal.Advancement);
    }
    type AdvancementJS_ = AdvancementJS;
    class VertexFormat extends Document.Object implements Internal.ExtendedVertexFormat, Internal.BufferVertexFormat {
        func_227895_d_(): void;
        embeddium$getExtendedElements(): any[];
        hasColor(): boolean;
        getStride(): number;
        hasPosition(): boolean;
        hasNormal(): boolean;
        func_227894_c_(): Internal.ImmutableList<Internal.VertexFormatElement>;
        getOffset(arg0: number): number;
        func_227892_a_(arg0: number): void;
        hasUV(arg0: number): boolean;
        func_177338_f(): number;
        func_181719_f(): number;
        get stride(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ImmutableList<Internal.VertexFormatElement>);
    }
    type VertexFormat_ = VertexFormat;
    class Connection extends Document.Object {
        getPoint(pos: number, from: Internal.ConnectionPoint): Vec3;
        getEndA(): Internal.ConnectionPoint;
        getEndB(): Internal.ConnectionPoint;
        getContainingNet(global: Internal.GlobalWireNetwork): Internal.LocalWireNetwork;
        generateCatenaryData(world: Internal.World): void;
        generateCatenaryData(vecA: Vec3, vecB: Vec3): void;
        hasCatenaryData(): boolean;
        getEndFor(pos: BlockPos): Internal.ConnectionPoint;
        getOtherEnd(known: Internal.ConnectionPoint): Internal.ConnectionPoint;
        getCatenaryData(): Internal.Connection$CatenaryData;
        isEnd(p: Internal.ConnectionPoint): boolean;
        getEnds(): Internal.ConnectionPoint[];
        isInternal(): boolean;
        getSlope(pos: number, from: Internal.ConnectionPoint): number;
        toNBT(): Internal.CompoundNBT;
        isPositiveEnd(p: Internal.ConnectionPoint): boolean;
        transformPosition(pos: number, from: Internal.ConnectionPoint): number;
        readonly type: Internal.WireType;
        get catenaryData(): Internal.Connection$CatenaryData;
        get internal(): boolean;
        get ends(): Internal.ConnectionPoint[];
        get endB(): Internal.ConnectionPoint;
        get endA(): Internal.ConnectionPoint;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(nbt: Internal.CompoundNBT);
        constructor(pos: BlockPos, idA: number, idB: number);
        constructor(type: Internal.WireType, endA: Internal.ConnectionPoint, endB: Internal.ConnectionPoint);
    }
    type Connection_ = Connection;
    abstract class AbstractClientPlayerEntity extends Internal.PlayerEntity {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_184834_t(): ResourceLocation;
        static func_110304_a(arg0: ResourceLocation_, arg1: string): Internal.DownloadingTexture;
        func_184833_s(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_110306_p(): ResourceLocation;
        func_110303_q(): ResourceLocation;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        func_175155_b(): Internal.NetworkPlayerInfo;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        static func_110311_f(arg0: string): ResourceLocation;
        func_175154_l(): string;
        getEntity(): Internal.Entity;
        func_175156_o(): number;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_152123_o(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_152122_n(): boolean;
        getClassification(arg0: boolean): Internal.EntityClassification;
        readonly field_213837_d: Internal.ClientWorld;
        field_175157_a: Internal.NetworkPlayerInfo;
        field_184836_b: number;
        field_184835_a: number;
        field_184837_c: number;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ClientWorld, arg1: Internal.GameProfile);
    }
    type AbstractClientPlayerEntity_ = AbstractClientPlayerEntity;
    class TraderLlamaEntity extends Internal.LlamaEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        formatLoc(arg0: Vec3): string;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.TraderLlamaEntity>, arg1: Internal.World);
    }
    type TraderLlamaEntity_ = TraderLlamaEntity;
    interface IGenericEvent <T> {
        getGenericType(): Internal.Type;
        (): Internal.Type;
    }
    type IGenericEvent_<T> = (()=>Internal.Type) | IGenericEvent<T>;
    interface IBucketPickupHandler {
        func_204508_a(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState): Internal.Fluid;
        (arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState): Internal.Fluid;
    }
    type IBucketPickupHandler_ = ((arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState)=>Internal.Fluid) | IBucketPickupHandler;
    interface FunctionContainer {
        lootingEnchant(count: Internal.IRandomRange, limit: number): Internal.FunctionContainer;
        enchantWithLevels(levels: Internal.IRandomRange, treasure: boolean): Internal.FunctionContainer;
        nbt(tag: Internal.CompoundNBT_): Internal.FunctionContainer;
        damage(damage: Internal.IRandomRange): Internal.FunctionContainer;
        lootTable(table: ResourceLocation_, seed: number): Internal.FunctionContainer;
        copyName(source: Internal.CopyName$Source_): Internal.FunctionContainer;
        addFunction(arg0: Internal.JsonObject): Internal.FunctionContainer;
        count(count: Internal.IRandomRange): Internal.FunctionContainer;
        name(name: Internal.Text_, entity: Internal.LootContext$EntityTarget_): Internal.FunctionContainer;
        name(name: Internal.Text_): Internal.FunctionContainer;
        furnaceSmelt(): Internal.FunctionContainer;
        addConditionalFunction(func: Internal.Consumer_<Internal.ConditionalFunction_>): Internal.FunctionContainer;
        enchantRandomly(enchantments: ResourceLocation[]): Internal.FunctionContainer;
        (arg0: Internal.JsonObject): Internal.FunctionContainer;
    }
    type FunctionContainer_ = ((arg0: Internal.JsonObject)=>Internal.FunctionContainer) | FunctionContainer;
    interface ICache {
        persistAndClearCache(): void;
        (): void;
    }
    type ICache_ = (()=>void) | ICache;
    class LongConfig extends Internal.NumberConfig<number> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(mn: number, mx: number);
    }
    type LongConfig_ = LongConfig;
    class PonderChapter extends Document.Object implements Internal.IScreenRenderable {
        addTagsToChapter(...arg0: Internal.PonderTag[]): Internal.PonderChapter;
        getTitle(): string;
        static of(arg0: ResourceLocation_): Internal.PonderChapter;
        getId(): ResourceLocation;
        draw(arg0: Internal.MatrixStack, arg1: Internal.AbstractGui, arg2: number, arg3: number): void;
        draw(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        get id(): ResourceLocation;
        get title(): string;
    }
    type PonderChapter_ = PonderChapter;
    class Products$P5 <F, T1, T2, T3, T4, T5> extends Document.Object {
        t4(): Internal.App<F, T4>;
        t5(): Internal.App<F, T5>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function5_<T1, T2, T3, T4, T5, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function5<T1, T2, T3, T4, T5, R_>>): Internal.App<F, R_>;
        and<T6_, T7_>(arg0: Internal.Products$P2<F, T6_, T7_>): Internal.Products$P7<F, T1, T2, T3, T4, T5, T6_, T7_>;
        and<T6_, T7_, T8_>(arg0: Internal.Products$P3<F, T6_, T7_, T8_>): Internal.Products$P8<F, T1, T2, T3, T4, T5, T6_, T7_, T8_>;
        and<T6_>(arg0: Internal.App<F, T6_>): Internal.Products$P6<F, T1, T2, T3, T4, T5, T6_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        t3(): Internal.App<F, T3>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>, arg4: Internal.App<F, T5>);
    }
    type Products$P5_<F, T1, T2, T3, T4, T5> = Products$P5<F, T1, T2, T3, T4, T5>;
    interface WindowListener extends Internal.EventListener {
        windowDeactivated(arg0: Internal.WindowEvent): void;
        windowClosed(arg0: Internal.WindowEvent): void;
        windowOpened(arg0: Internal.WindowEvent): void;
        windowActivated(arg0: Internal.WindowEvent): void;
        windowClosing(arg0: Internal.WindowEvent): void;
        windowDeiconified(arg0: Internal.WindowEvent): void;
        windowIconified(arg0: Internal.WindowEvent): void;
    }
    type WindowListener_ = WindowListener;
    class BiomeLoadingEvent extends net.minecraftforge.eventbus.api.Event {
        getEffects(): Internal.BiomeAmbience;
        getSpawns(): Internal.MobSpawnInfoBuilder;
        getClimate(): Internal.Biome$Climate;
        getDepth(): number;
        getName(): ResourceLocation;
        getScale(): number;
        setCategory(arg0: Internal.Biome$Category_): void;
        setScale(arg0: number): void;
        getGeneration(): Internal.BiomeGenerationSettingsBuilder;
        getCategory(): Internal.Biome$Category;
        setDepth(arg0: number): void;
        setClimate(arg0: Internal.Biome$Climate): void;
        setEffects(arg0: Internal.BiomeAmbience): void;
        spawns: Internal.MobSpawnInfoBuilder;
        get generation(): Internal.BiomeGenerationSettingsBuilder;
        get effects(): Internal.BiomeAmbience;
        get depth(): number;
        get name(): ResourceLocation;
        get scale(): number;
        get climate(): Internal.Biome$Climate;
        get category(): Internal.Biome$Category;
        set effects(arg0: Internal.BiomeAmbience);
        set depth(arg0: number);
        set scale(arg0: number);
        set climate(arg0: Internal.Biome$Climate);
        set category(arg0: Internal.Biome$Category_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.Biome$Climate, arg2: Internal.Biome$Category, arg3: number, arg4: number, arg5: Internal.BiomeAmbience, arg6: Internal.BiomeGenerationSettingsBuilder, arg7: Internal.MobSpawnInfoBuilder);
        constructor();
    }
    type BiomeLoadingEvent_ = BiomeLoadingEvent;
    class PrivacyMode extends Internal.Enum<Internal.PrivacyMode> implements Internal.IStringSerializable {
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.PrivacyMode;
        static values(): Internal.PrivacyMode[];
        static readonly NAME_MAP: Internal.NameMap<Internal.PrivacyMode>;
        readonly name: string;
        static readonly PUBLIC: Internal.PrivacyMode;
        static readonly VALUES: Internal.PrivacyMode[];
        static readonly ALLIES: Internal.PrivacyMode;
        static readonly PRIVATE: Internal.PrivacyMode;
    }
    type PrivacyMode_ = "allies" | "private" | "public" | PrivacyMode;
    class SalmonEntity extends Internal.AbstractGroupFishEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.SalmonEntity>, arg1: Internal.World);
    }
    type SalmonEntity_ = SalmonEntity;
    class BedTileEntity extends Internal.TileEntity {
        requestModelDataUpdate(): void;
        func_193048_a(): Internal.DyeColor;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        func_193052_a(arg0: Internal.DyeColor_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.DyeColor);
    }
    type BedTileEntity_ = BedTileEntity;
    interface WatchEvent <T> {
        kind(): Internal.WatchEvent$Kind<T>;
        count(): number;
        context(): T;
    }
    type WatchEvent_<T> = WatchEvent<T>;
    class PandaEntity extends Internal.AnimalEntity {
        shouldRiderSit(): boolean;
        func_213553_r(arg0: boolean): void;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_213591_x(arg0: number): number;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213556_dX(): boolean;
        func_213569_ek(): boolean;
        func_213539_dW(): boolean;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_213541_b(arg0: Internal.PandaEntity$Gene_): void;
        func_213589_a(arg0: Internal.PandaEntity$Gene_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213545_a(arg0: Internal.PandaEntity, arg1: Internal.PandaEntity): void;
        func_213544_dV(): number;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_213567_dY(): boolean;
        func_213590_ei(): Internal.PandaEntity$Gene;
        func_213564_eh(): boolean;
        func_213549_ef(): Internal.PandaEntity$Gene;
        func_213585_ee(): number;
        func_213537_eq(): boolean;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_213554_ep(): void;
        func_213534_t(arg0: boolean): void;
        getParts(): Internal.PartEntity<any>[];
        func_213576_v(arg0: boolean): void;
        func_213588_r(arg0: number): void;
        func_213562_s(arg0: number): void;
        func_213583_w(arg0: number): number;
        hasCooldown(): boolean;
        func_213542_s(arg0: boolean): void;
        func_213561_v(arg0: number): number;
        static func_234204_eW_(): Internal.AttributeModifierMap$MutableAttribute;
        func_213581_u(arg0: boolean): void;
        isMultipartEntity(): boolean;
        func_213582_en(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        func_213566_eo(): boolean;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_213536_eg(): Internal.PandaEntity$Gene;
        func_213584_ej(): boolean;
        func_213578_dZ(): boolean;
        func_213557_el(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        field_213608_bz: number;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.PandaEntity>, arg1: Internal.World);
    }
    type PandaEntity_ = PandaEntity;
    interface Multiset$Entry <E> {
        getElement(): E;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        getCount(): number;
    }
    type Multiset$Entry_<E> = Multiset$Entry<E>;
    class Connection$CatenaryData extends Document.Object {
        getSlope(pos: number): number;
        getPoint(pos: number): Vec3;
        getOffsetY(): number;
        getScale(): number;
        isVertical(): boolean;
        getVecA(): Vec3;
        getDeltaZ(): number;
        getDeltaY(): number;
        getDeltaX(): number;
        getDelta(): Vec3;
        getOffsetX(): number;
        getHorLength(): number;
        get offsetX(): number;
        get offsetY(): number;
        get deltaZ(): number;
        get deltaX(): number;
        get deltaY(): number;
        get delta(): Vec3;
        get horLength(): number;
        get scale(): number;
        get vertical(): boolean;
        get vecA(): Vec3;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(isVertical: boolean, offsetX: number, offsetY: number, scale: number, delta: Vec3, horLength: number, vecA: Vec3);
        constructor(old: Internal.Connection$CatenaryData, reverse: boolean, otherEndAVec: Vec3);
    }
    type Connection$CatenaryData_ = Connection$CatenaryData;
    interface Int2IntMap$Entry extends Internal.Map$Entry<number, number> {
        getIntKey(): number;
        getKey(): any;
        getKey(): number;
        getValue(): number;
        getValue(): any;
        getIntValue(): number;
        setValue(arg0: any): any;
        setValue(arg0: number): number;
        setValue(arg0: number): number;
    }
    type Int2IntMap$Entry_ = Int2IntMap$Entry;
    class SPlaySoundEventPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149241_e(): number;
        func_149242_d(): number;
        func_149244_c(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179746_d(): BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: BlockPos, arg2: number, arg3: boolean);
    }
    type SPlaySoundEventPacket_ = SPlaySoundEventPacket;
    class STeamsPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_149312_c(): string;
        func_186975_j(): string;
        func_149310_g(): Internal.Collection<string>;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_200537_f(): Internal.TextFormatting;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149307_h(): number;
        func_149308_i(): number;
        func_179814_i(): string;
        func_207508_j(): Internal.ITextComponent;
        func_149306_d(): Internal.ITextComponent;
        func_207507_i(): Internal.ITextComponent;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ScorePlayerTeam, arg1: Internal.Collection<string>, arg2: number);
        constructor(arg0: Internal.ScorePlayerTeam, arg1: number);
        constructor();
    }
    type STeamsPacket_ = STeamsPacket;
    interface Attribute <T> {
        set(arg0: T): void;
        compareAndSet(arg0: T, arg1: T): boolean;
        setIfAbsent(arg0: T): T;
        get(): T;
        getAndSet(arg0: T): T;
        getAndRemove(): T;
        key(): Internal.AttributeKey<T>;
        remove(): void;
    }
    type Attribute_<T> = Attribute<T>;
    abstract class StringValueData <T> extends Document.Object {
        getValueAsComponent(): Internal.ITextComponent;
        getValue(): T;
        setValueFromString(arg0: string): void;
        setValue(arg0: T): void;
        getValueAsString(): string;
        readonly filter: Internal.ItemStack;
        get valueAsComponent(): Internal.ITextComponent;
        get valueAsString(): string;
        get value(): T;
        set valueFromString(arg0: string);
        set value(arg0: T);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemStack);
    }
    type StringValueData_<T> = StringValueData<T>;
    interface Button$ITooltip {
        onTooltip(arg0: net.minecraft.client.gui.widget.button.Button, arg1: Internal.MatrixStack, arg2: number, arg3: number): void;
        (arg0: net.minecraft.client.gui.widget.button.Button, arg1: Internal.MatrixStack, arg2: number, arg3: number): void;
    }
    type Button$ITooltip_ = ((arg0: net.minecraft.client.gui.widget.button.Button, arg1: Internal.MatrixStack, arg2: number, arg3: number)=>void) | Button$ITooltip;
    interface BiomeAmbience$GrassColorModifier$ColorModifier {
        modifyGrassColor(arg0: number, arg1: number, arg2: number): number;
        (arg0: number, arg1: number, arg2: number): number;
    }
    type BiomeAmbience$GrassColorModifier$ColorModifier_ = ((arg0: number, arg1: number, arg2: number)=>number) | BiomeAmbience$GrassColorModifier$ColorModifier;
    interface IConfig <V> {
        reload(): void;
        (): void;
    }
    type IConfig_<V> = (()=>void) | IConfig<V>;
    interface VoxelShapeAccess {
        setFaces(arg0: Internal.VoxelShape[]): void;
        getFaces(): Internal.VoxelShape[];
        getShape(): Internal.VoxelShapePart;
        setShape(arg0: Internal.VoxelShapePart): void;
    }
    type VoxelShapeAccess_ = VoxelShapeAccess;
    class Products$P15 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function15_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>, arg4: Internal.App<F, T5>, arg5: Internal.App<F, T6>, arg6: Internal.App<F, T7>, arg7: Internal.App<F, T8>, arg8: Internal.App<F, T9>, arg9: Internal.App<F, T10>, arg10: Internal.App<F, T11>, arg11: Internal.App<F, T12>, arg12: Internal.App<F, T13>, arg13: Internal.App<F, T14>, arg14: Internal.App<F, T15>);
    }
    type Products$P15_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> = Products$P15<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>;
    class SurfaceBuilderConfig extends Document.Object implements Internal.ISurfaceBuilderConfig {
        func_204108_a(): Internal.BlockState;
        func_204109_b(): Internal.BlockState;
        func_204110_c(): Internal.BlockState;
        static readonly field_237203_a_: Internal.Codec<Internal.SurfaceBuilderConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.BlockState);
    }
    type SurfaceBuilderConfig_ = SurfaceBuilderConfig;
    class ButtonManager extends Internal.JsonReloadListener {
        getButtons(): Internal.Collection<Internal.JsonButton>;
        func_225594_i_(): string;
        static readonly GSON: Internal.Gson;
        get buttons(): Internal.Collection<Internal.JsonButton>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ButtonManager_ = ButtonManager;
    class WitherSkullEntity extends Internal.DamagingProjectileEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_82342_d(): boolean;
        func_82343_e(arg0: boolean): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number);
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number);
        constructor(arg0: Internal.EntityType<Internal.WitherSkullEntity>, arg1: Internal.World);
    }
    type WitherSkullEntity_ = WitherSkullEntity;
    class EnumConfig <E> extends Internal.ConfigWithVariants<E> {
        getIteration(v: E, next: boolean): E;
        readonly nameMap: Internal.NameMap<E>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(nm: Internal.NameMap<E>);
    }
    type EnumConfig_<E> = EnumConfig<E>;
    class ConstellationEffectProperties extends Document.Object {
        multiplyEffectAmplifier(arg0: number): void;
        getSize(): number;
        setCorrupted(arg0: boolean): void;
        isCorrupted(): boolean;
        multiplyPotency(arg0: number): void;
        getEffectAmplifier(): number;
        getPotency(): number;
        multiplySize(arg0: number): void;
        get corrupted(): boolean;
        get potency(): number;
        get size(): number;
        get effectAmplifier(): number;
        set corrupted(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type ConstellationEffectProperties_ = ConstellationEffectProperties;
    interface BlockColorsExtended {
        getColorProvider(arg0: Internal.BlockState): Internal.IBlockColor;
        (arg0: Internal.BlockState): Internal.IBlockColor;
    }
    type BlockColorsExtended_ = ((arg0: Internal.BlockState)=>Internal.IBlockColor) | BlockColorsExtended;
    class WorldSlice extends Document.Object implements Internal.IBlockDisplayReader, Internal.BiomeManager$IBiomeReader {
        func_217301_I(): number;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        static getLocalBlockIndex(x: number, y: number, z: number): number;
        static prepare(world: Internal.World, origin: Internal.SectionPos, sectionCache: Internal.ClonedChunkSectionCache): Internal.ChunkRenderContext;
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        getBlockStateRelative(x: number, y: number, z: number): Internal.BlockState;
        static getLocalChunkIndex(x: number, z: number): number;
        func_226660_f_(pos: BlockPos): boolean;
        getBlockEntity(x: number, y: number, z: number): Internal.TileEntity;
        func_225524_e_(): Internal.WorldLightManager;
        func_217298_h(arg0: BlockPos): number;
        func_175625_s(pos: BlockPos): Internal.TileEntity;
        func_180495_p(pos: BlockPos): Internal.BlockState;
        func_201572_C(): number;
        func_226659_b_(pos: BlockPos, ambientDarkness: number): number;
        static getLocalSectionIndex(x: number, y: number, z: number): number;
        func_226658_a_(type: Internal.LightType_, pos: BlockPos): number;
        getOrigin(): Internal.SectionPos;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_225526_b_(x: number, y: number, z: number): Internal.Biome;
        func_230487_a_(direction: Internal.Direction_, shaded: boolean): number;
        func_225525_a_(pos: BlockPos, resolver: Internal.ColorResolver_): number;
        copyData(context: Internal.ChunkRenderContext): void;
        func_242403_h(arg0: BlockPos): number;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        func_204610_c(pos: BlockPos): Internal.FluidState;
        getBlockState(x: number, y: number, z: number): Internal.BlockState;
        get origin(): Internal.SectionPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(world: Internal.World);
    }
    type WorldSlice_ = WorldSlice;
    class AbstractBlock$OffsetType extends Internal.Enum<Internal.AbstractBlock$OffsetType> {
        static valueOf(arg0: string): Internal.AbstractBlock$OffsetType;
        static values(): Internal.AbstractBlock$OffsetType[];
        static readonly XZ: Internal.AbstractBlock$OffsetType;
        static readonly XYZ: Internal.AbstractBlock$OffsetType;
        static readonly NONE: Internal.AbstractBlock$OffsetType;
    }
    type AbstractBlock$OffsetType_ = "none" | "xz" | "xyz" | AbstractBlock$OffsetType;
    class TooltipFlag extends Internal.Enum<Internal.TooltipFlag> {
        static valueOf(arg0: string): Internal.TooltipFlag;
        static values(): Internal.TooltipFlag[];
        static fromVanilla(arg0: Internal.ITooltipFlag_): Internal.TooltipFlag;
        static readonly DETAILED: Internal.TooltipFlag;
        static readonly NORMAL: Internal.TooltipFlag;
        static readonly ADVANCED: Internal.TooltipFlag;
    }
    type TooltipFlag_ = "normal" | "advanced" | "detailed" | TooltipFlag;
    interface DynamicFunction$Callback {
        call(arg0: any[]): any;
        (arg0: any[]): any;
    }
    type DynamicFunction$Callback_ = ((arg0: any[])=>any) | DynamicFunction$Callback;
    abstract class SurfaceBuilder <C> extends Internal.ForgeRegistryEntry<Internal.SurfaceBuilder<any>> {
        func_205610_a_(arg0: Internal.Random, arg1: Internal.IChunk, arg2: Internal.Biome_, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.BlockState, arg8: Internal.BlockState, arg9: number, arg10: number, arg11: C): void;
        func_237202_d_(): Internal.Codec<Internal.ConfiguredSurfaceBuilder<C>>;
        setRegistryName(arg0: ResourceLocation_): any;
        func_242929_a(arg0: C): Internal.ConfiguredSurfaceBuilder<C>;
        func_205548_a(arg0: number): void;
        static readonly field_215397_H: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215398_I: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215399_J: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_237191_af_: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215393_D: Internal.SurfaceBuilderConfig;
        static readonly field_215425_v: Internal.SurfaceBuilderConfig;
        static readonly field_215394_E: Internal.SurfaceBuilderConfig;
        static readonly field_237185_P_: Internal.SurfaceBuilderConfig;
        static readonly field_215395_F: Internal.SurfaceBuilderConfig;
        static readonly field_215423_t: Internal.SurfaceBuilderConfig;
        static readonly field_215396_G: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215424_u: Internal.SurfaceBuilderConfig;
        static readonly field_237186_Q_: Internal.SurfaceBuilderConfig;
        static readonly field_237187_R_: Internal.SurfaceBuilderConfig;
        static readonly field_215402_M: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215401_L: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215404_O: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215403_N: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215406_Q: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215405_P: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_237189_ad_: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_237184_N_: Internal.SurfaceBuilderConfig;
        static readonly field_215407_R: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215429_z: Internal.SurfaceBuilderConfig;
        static readonly field_215390_A: Internal.SurfaceBuilderConfig;
        static readonly field_215391_B: Internal.SurfaceBuilderConfig;
        static readonly field_215427_x: Internal.SurfaceBuilderConfig;
        static readonly field_215392_C: Internal.SurfaceBuilderConfig;
        static readonly field_215428_y: Internal.SurfaceBuilderConfig;
        static readonly field_237190_ae_: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        static readonly field_215400_K: Internal.SurfaceBuilder<Internal.SurfaceBuilderConfig>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<C>);
    }
    type SurfaceBuilder_<C> = Registry.minecraft.worldgen$surface_builder | SurfaceBuilder<C>;
    interface IForgeTileEntity extends Internal.ICapabilitySerializable<Internal.CompoundNBT> {
        requestModelDataUpdate(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getTileData(): Internal.CompoundNBT;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        onChunkUnloaded(): void;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        (): Internal.CompoundNBT;
    }
    type IForgeTileEntity_ = (()=>Internal.CompoundNBT) | IForgeTileEntity;
    interface FamilyOptic <A, B> {
        apply(arg0: number): Internal.OpticParts<A, B>;
        (arg0: number): Internal.OpticParts<A, B>;
    }
    type FamilyOptic_<A, B> = ((arg0: number)=>Internal.OpticParts<A, B>) | FamilyOptic<A, B>;
    abstract class Image extends Document.Object {
        setAccelerationPriority(arg0: number): void;
        getScaledInstance(arg0: number, arg1: number, arg2: number): Internal.Image;
        getHeight(arg0: Internal.ImageObserver_): number;
        getProperty(arg0: string, arg1: Internal.ImageObserver_): any;
        flush(): void;
        getSource(): Internal.ImageProducer;
        getAccelerationPriority(): number;
        getGraphics(): Internal.Graphics;
        getCapabilities(arg0: Internal.GraphicsConfiguration): Internal.ImageCapabilities;
        getWidth(arg0: Internal.ImageObserver_): number;
        static readonly SCALE_DEFAULT: 1;
        static readonly UndefinedProperty: any;
        static readonly SCALE_FAST: 2;
        static readonly SCALE_AREA_AVERAGING: 16;
        static readonly SCALE_SMOOTH: 4;
        static readonly SCALE_REPLICATE: 8;
        get accelerationPriority(): number;
        get source(): Internal.ImageProducer;
        get graphics(): Internal.Graphics;
        set accelerationPriority(arg0: number);
    }
    type Image_ = Image;
    interface GroupPrincipal extends Internal.UserPrincipal {
    }
    type GroupPrincipal_ = GroupPrincipal;
    class Products$P11 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function11_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>, arg4: Internal.App<F, T5>, arg5: Internal.App<F, T6>, arg6: Internal.App<F, T7>, arg7: Internal.App<F, T8>, arg8: Internal.App<F, T9>, arg9: Internal.App<F, T10>, arg10: Internal.App<F, T11>);
    }
    type Products$P11_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> = Products$P11<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>;
    interface IRecipe <C> {
        func_77572_b(arg0: C): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: C): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_199560_c(): ResourceLocation;
        func_192399_d(): boolean;
        func_77569_a(arg0: C, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        func_77571_b(): Internal.ItemStack;
    }
    type IRecipe_<C> = IRecipe<C>;
    class WandererTradesEvent extends net.minecraftforge.eventbus.api.Event {
        getGenericTrades(): Internal.List<Internal.VillagerTrades$ITrade>;
        getRareTrades(): Internal.List<Internal.VillagerTrades$ITrade>;
        get genericTrades(): Internal.List<Internal.VillagerTrades$ITrade>;
        get rareTrades(): Internal.List<Internal.VillagerTrades$ITrade>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.List<Internal.VillagerTrades$ITrade>, arg1: Internal.List<Internal.VillagerTrades$ITrade>);
    }
    type WandererTradesEvent_ = WandererTradesEvent;
    interface AsKJS {
        asKJS(): any;
        (): any;
    }
    type AsKJS_ = (()=>any) | AsKJS;
    class AccessibleRelationSet extends Document.Object {
        add(arg0: Internal.AccessibleRelation): boolean;
        contains(arg0: string): boolean;
        size(): number;
        addAll(arg0: Internal.AccessibleRelation[]): void;
        get(arg0: string): Internal.AccessibleRelation;
        toArray(): Internal.AccessibleRelation[];
        clear(): void;
        remove(arg0: Internal.AccessibleRelation): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.AccessibleRelation[]);
    }
    type AccessibleRelationSet_ = AccessibleRelationSet;
    class TagsUpdatedEvent extends net.minecraftforge.eventbus.api.Event {
        getTagManager(): Internal.ITagCollectionSupplier;
        get tagManager(): Internal.ITagCollectionSupplier;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ITagCollectionSupplier);
    }
    type TagsUpdatedEvent_ = TagsUpdatedEvent;
    abstract class Panel extends Internal.Widget {
        closeGui(openPrevScreen: boolean): void;
        closeGui(): void;
        getContentHeight(): number;
        drawWidget(matrixStack: Internal.MatrixStack, theme: Internal.Theme, widget: Internal.Widget, index: number, x: number, y: number, w: number, h: number): void;
        run(): void;
        isDefaultScrollVertical(): boolean;
        openAfter(runnable: Internal.Runnable_): Internal.Runnable;
        align(layout: Internal.WidgetLayout_): number;
        closeContextMenu(): void;
        isMouseOverAnyWidget(): boolean;
        getScrollX(): number;
        getContentWidth(): number;
        getScrollY(): number;
        drawBackground(matrixStack: Internal.MatrixStack, theme: Internal.Theme, x: number, y: number, w: number, h: number): void;
        setOffset(flag: boolean): void;
        openGuiLater(): void;
        clearWidgets(): void;
        drawOffsetBackground(matrixStack: Internal.MatrixStack, theme: Internal.Theme, x: number, y: number, w: number, h: number): void;
        getScrollStep(): number;
        add(widget: Internal.Widget): void;
        setScrollStep(s: number): void;
        getWidget(index: number): Internal.Widget;
        openGui(): void;
        movePanelScroll(dx: number, dy: number): boolean;
        setOnlyInteractWithWidgetsInside(value: boolean): void;
        setOnlyRenderWidgetsInside(value: boolean): void;
        getOnlyInteractWithWidgetsInside(): boolean;
        getOnlyRenderWidgetsInside(): boolean;
        addWidgets(): void;
        openContextMenu(panel: Internal.Panel): void;
        addAll(list: Internal.Iterable_<Internal.Widget_>): void;
        scrollPanel(scroll: number): boolean;
        refreshWidgets(): void;
        isOffset(): boolean;
        alignWidgets(): void;
        setScrollX(scroll: number): void;
        setScrollY(scroll: number): void;
        attachedScrollbar: Internal.PanelScrollBar;
        contentWidthExtra: number;
        readonly widgets: Internal.List<Internal.Widget>;
        contentHeightExtra: number;
        get defaultScrollVertical(): boolean;
        get onlyInteractWithWidgetsInside(): boolean;
        get contentWidth(): number;
        get offset(): boolean;
        get onlyRenderWidgetsInside(): boolean;
        get mouseOverAnyWidget(): boolean;
        get scrollY(): number;
        get scrollStep(): number;
        get scrollX(): number;
        get contentHeight(): number;
        set onlyInteractWithWidgetsInside(value: boolean);
        set offset(flag: boolean);
        set onlyRenderWidgetsInside(value: boolean);
        set scrollY(scroll: number);
        set scrollStep(s: number);
        set scrollX(scroll: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(panel: Internal.Panel);
    }
    type Panel_ = Panel;
    interface IdFunctionCall {
        execIdCall(arg0: Internal.IdFunctionObject, arg1: Internal.Context, arg2: Internal.Scriptable, arg3: Internal.Scriptable, arg4: any[]): any;
        (arg0: Internal.IdFunctionObject, arg1: Internal.Context, arg2: Internal.Scriptable, arg3: Internal.Scriptable, arg4: any[]): any;
    }
    type IdFunctionCall_ = ((arg0: Internal.IdFunctionObject, arg1: Internal.Context, arg2: Internal.Scriptable, arg3: Internal.Scriptable, arg4: any[])=>any) | IdFunctionCall;
    class ExperienceBottleEntity extends Internal.ProjectileItemEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity);
        constructor(arg0: Internal.EntityType<Internal.ExperienceBottleEntity>, arg1: Internal.World);
    }
    type ExperienceBottleEntity_ = ExperienceBottleEntity;
    class GossipType extends Internal.Enum<Internal.GossipType> {
        static valueOf(arg0: string): Internal.GossipType;
        static func_220929_a(arg0: string): Internal.GossipType;
        static values(): Internal.GossipType[];
        static readonly MINOR_NEGATIVE: Internal.GossipType;
        readonly field_220933_i: number;
        readonly field_220934_j: number;
        static readonly MAJOR_NEGATIVE: Internal.GossipType;
        static readonly MAJOR_POSITIVE: Internal.GossipType;
        readonly field_220935_k: number;
        static readonly MINOR_POSITIVE: Internal.GossipType;
        static readonly TRADING: Internal.GossipType;
        readonly field_220931_g: string;
        readonly field_220932_h: number;
    }
    type GossipType_ = "major_negative" | "minor_negative" | "minor_positive" | "major_positive" | "trading" | GossipType;
    class ArgumentCommandNode <S, T> extends Internal.CommandNode<S> {
        createBuilder(): Internal.ArgumentBuilder<any, any>;
        createBuilder(): Internal.RequiredArgumentBuilder<S, Internal.CommandNode<S>>;
        isValidInput(arg0: string): boolean;
        getType(): Internal.ArgumentType<Internal.CommandNode<S>>;
        getCustomSuggestions(): Internal.SuggestionProvider<S>;
        get customSuggestions(): Internal.SuggestionProvider<S>;
        get type(): Internal.ArgumentType<Internal.CommandNode<S>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.ArgumentType<T>, arg2: Internal.Command<S>, arg3: Internal.Predicate<S>, arg4: Internal.CommandNode<S>, arg5: Internal.RedirectModifier<S>, arg6: boolean, arg7: Internal.SuggestionProvider<S>);
    }
    type ArgumentCommandNode_<S, T> = ArgumentCommandNode<S, T>;
    class ScriptType extends Internal.Enum<Internal.ScriptType> {
        isServer(): boolean;
        static valueOf(name: string): Internal.ScriptType;
        static of(world: Internal.IWorldReader): Internal.ScriptType;
        static values(): Internal.ScriptType[];
        isClient(): boolean;
        getLogFile(): Internal.Path;
        readonly console: Internal.ConsoleJS;
        readonly manager: java_.util.function_.Supplier<Internal.ScriptManager>;
        static readonly SERVER: Internal.ScriptType;
        readonly executor: Internal.ExecutorService;
        readonly warnings: Internal.List<string>;
        readonly name: string;
        static readonly STARTUP: Internal.ScriptType;
        static readonly CLIENT: Internal.ScriptType;
        readonly errors: Internal.List<string>;
        get server(): boolean;
        get logFile(): Internal.Path;
        get client(): boolean;
    }
    type ScriptType_ = "startup" | "server" | "client" | ScriptType;
    class Inventory extends Document.Object implements Internal.IInventory, Internal.IRecipeHelperPopulator {
        func_213901_a(arg0: Internal.Item_): number;
        func_70304_b(arg0: number): Internal.ItemStack;
        func_194018_a(arg0: Internal.RecipeItemHelper): void;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_174888_l(): void;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        func_233541_b_(arg0: Internal.ItemStack): boolean;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        func_110134_a(arg0: Internal.IInventoryChangedListener_): void;
        func_110132_b(arg0: Internal.IInventoryChangedListener_): void;
        func_223374_a(arg0: Internal.Item_, arg1: number): Internal.ItemStack;
        func_174894_a(arg0: Internal.ItemStack): Internal.ItemStack;
        func_70302_i_(): number;
        func_191420_l(): boolean;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        func_70486_a(arg0: Internal.ListNBT): void;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_70296_d(): void;
        func_233543_f_(): Internal.List<Internal.ItemStack>;
        func_70487_g(): Internal.ListNBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
        constructor(arg0: Internal.ItemStack[]);
    }
    type Inventory_ = Inventory;
    class PacketDistributor$PacketTarget extends Document.Object {
        getDirection(): Internal.NetworkDirection;
        send(arg0: Internal.IPacket<any>): void;
        get direction(): Internal.NetworkDirection;
    }
    type PacketDistributor$PacketTarget_ = PacketDistributor$PacketTarget;
    class ClientWorld$ClientWorldInfo extends Document.Object implements Internal.ISpawnWorldInfo, Internal.SkyblockWorldInfo {
        func_239157_a_(arg0: boolean): void;
        func_82574_x(): Internal.GameRules;
        func_76079_c(): number;
        func_239158_b_(arg0: number): void;
        func_76074_e(): number;
        func_76075_d(): number;
        func_76073_f(): number;
        markGardenOfGlass(): void;
        func_76056_b(arg0: number): void;
        func_76058_a(arg0: number): void;
        func_241859_a(arg0: number): void;
        func_176123_z(): boolean;
        func_239155_a_(arg0: number): void;
        func_82573_f(): number;
        func_85118_a(arg0: Internal.CrashReportCategory): void;
        isGardenOfGlass(): boolean;
        func_241860_d(): number;
        func_76061_m(): boolean;
        func_76087_c(arg0: number): void;
        func_176130_y(): Internal.Difficulty;
        func_239159_f_(): number;
        func_76084_b(arg0: boolean): void;
        func_176143_a(arg0: BlockPos, arg1: number): void;
        func_239156_a_(arg0: Internal.Difficulty_): void;
        func_76059_o(): boolean;
        func_239160_g_(): number;
        func_76093_s(): boolean;
        get gardenOfGlass(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Difficulty, arg1: boolean, arg2: boolean);
    }
    type ClientWorld$ClientWorldInfo_ = ClientWorld$ClientWorldInfo;
    class FluidStack extends Document.Object {
        removeChildTag(arg0: string): void;
        getRawFluid(): Internal.Fluid;
        isFluidStackIdentical(arg0: Internal.FluidStack): boolean;
        grow(arg0: number): void;
        hasTag(): boolean;
        static loadFluidStackFromNBT(arg0: Internal.CompoundNBT_): Internal.FluidStack;
        shrink(arg0: number): void;
        getTranslationKey(): string;
        isEmpty(): boolean;
        getOrCreateChildTag(arg0: string): Internal.CompoundNBT;
        getTag(): Internal.CompoundNBT;
        getChildTag(arg0: string): Internal.CompoundNBT;
        static readFromPacket(arg0: Internal.PacketBuffer): Internal.FluidStack;
        containsFluid(arg0: Internal.FluidStack): boolean;
        getOrCreateTag(): Internal.CompoundNBT;
        writeToPacket(arg0: Internal.PacketBuffer): void;
        getDisplayName(): Internal.ITextComponent;
        getFluid(): Internal.Fluid;
        setTag(arg0: Internal.CompoundNBT_): void;
        static areFluidStackTagsEqual(arg0: Internal.FluidStack, arg1: Internal.FluidStack): boolean;
        copy(): Internal.FluidStack;
        setAmount(arg0: number): void;
        writeToNBT(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        isFluidEqual(arg0: Internal.FluidStack): boolean;
        isFluidEqual(arg0: Internal.ItemStack): boolean;
        getAmount(): number;
        static readonly CODEC: Internal.Codec<Internal.FluidStack>;
        static readonly EMPTY: Internal.FluidStack;
        get orCreateTag(): Internal.CompoundNBT;
        get rawFluid(): Internal.Fluid;
        get amount(): number;
        get translationKey(): string;
        get displayName(): Internal.ITextComponent;
        get fluid(): Internal.Fluid;
        get tag(): Internal.CompoundNBT;
        get empty(): boolean;
        set amount(arg0: number);
        set tag(arg0: Internal.CompoundNBT_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FluidStack, arg1: number);
        constructor(arg0: Internal.Fluid, arg1: number, arg2: Internal.CompoundNBT);
        constructor(arg0: Internal.Fluid, arg1: number);
    }
    type FluidStack_ = FluidStack;
    class InfusionStack extends Internal.ChemicalStack<Internal.InfuseType> {
        static readFromNBT(arg0: Internal.CompoundNBT_): Internal.InfusionStack;
        static readFromPacket(arg0: Internal.PacketBuffer): Internal.InfusionStack;
        copy(): Internal.InfusionStack;
        copy(): Internal.ChemicalStack<any>;
        static readonly EMPTY: Internal.InfusionStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IInfuseTypeProvider, arg1: number);
        constructor(arg0: Internal.InfusionStack, arg1: number);
    }
    type InfusionStack_ = InfusionStack;
    interface AccessorCreeperEntity {
        setTimeSinceIgnited(arg0: number): void;
        (arg0: number): void;
    }
    type AccessorCreeperEntity_ = ((arg0: number)=>void) | AccessorCreeperEntity;
    class UnitStorage extends Document.Object {
        addConstant(name: string, val: number): void;
        addFunc(name: string, func: Internal.FuncSupplier_): void;
        createFunc(name: string, args: Internal.List<dev.latvian.mods.rhino.util.unit.Unit>): dev.latvian.mods.rhino.util.unit.Unit;
        addOp(name: string, op: Internal.OpSupplier_): void;
        getConstant(name: string): Internal.ConstantUnit;
        setVariable(key: string, unit: dev.latvian.mods.rhino.util.unit.Unit): void;
        getVariableVersion(): number;
        addFunc2(name: string, func: Internal.FuncSupplier$Func2_): void;
        addFunc1(name: string, func: Internal.FuncSupplier$Func1_): void;
        parse(string: string): dev.latvian.mods.rhino.util.unit.Unit;
        createOp(name: string, unit: dev.latvian.mods.rhino.util.unit.Unit, with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        getVariable(key: string): dev.latvian.mods.rhino.util.unit.Unit;
        clearVariables(): void;
        get variableVersion(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type UnitStorage_ = UnitStorage;
    class BotanyPotsCropRecipeJS extends Internal.RecipeJS {
        displayBlock(b: string): Internal.BotanyPotsCropRecipeJS;
        growthTicks(t: number): Internal.BotanyPotsCropRecipeJS;
        categories(c: string[]): Internal.BotanyPotsCropRecipeJS;
        readonly maxRolls: Internal.List<number>;
        readonly minRolls: Internal.List<number>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BotanyPotsCropRecipeJS_ = BotanyPotsCropRecipeJS;
    class AttackingSittingPhase extends Internal.SittingPhase {
        func_188652_i(): Internal.PhaseType<Internal.AttackingSittingPhase>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type AttackingSittingPhase_ = AttackingSittingPhase;
    class VersionData extends Document.Object {
        func_237328_e_(): boolean;
        func_237326_c_(): string;
        func_237327_d_(): number;
        func_237325_b_(): number;
        static func_237324_a_(arg0: Internal.Dynamic<any>): Internal.VersionData;
        func_237323_a_(): number;
        readonly field_237321_d_: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: string, arg3: number, arg4: boolean);
    }
    type VersionData_ = VersionData;
    interface ImageConsumer {
        imageComplete(arg0: number): void;
        setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.ColorModel, arg5: number[], arg6: number, arg7: number): void;
        setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.ColorModel, arg5: number[], arg6: number, arg7: number): void;
        setProperties(arg0: Internal.Hashtable<any, any>): void;
        setDimensions(arg0: number, arg1: number): void;
        setHints(arg0: number): void;
        setColorModel(arg0: Internal.ColorModel): void;
    }
    type ImageConsumer_ = ImageConsumer;
    interface ICitadelDataEntity {
        setCitadelEntityData(arg0: Internal.CompoundNBT_): void;
        getCitadelEntityData(): Internal.CompoundNBT;
    }
    type ICitadelDataEntity_ = ICitadelDataEntity;
    class ISound$AttenuationType extends Internal.Enum<Internal.ISound$AttenuationType> {
        static valueOf(arg0: string): Internal.ISound$AttenuationType;
        static values(): Internal.ISound$AttenuationType[];
        static readonly NONE: Internal.ISound$AttenuationType;
        static readonly LINEAR: Internal.ISound$AttenuationType;
    }
    type ISound$AttenuationType_ = "none" | "linear" | ISound$AttenuationType;
    abstract class IdScriptableObject extends Internal.ScriptableObject implements Internal.IdFunctionCall {
        exportAsJSClass(maxPrototypeId: number, scope: Internal.Scriptable, sealed: boolean): Internal.IdFunctionObject;
        hasPrototypeMap(): boolean;
        initPrototypeConstructor(f: Internal.IdFunctionObject): void;
        initPrototypeMethod(tag: any, id: number, propertyName: string, functionName: string, arity: number): Internal.IdFunctionObject;
        initPrototypeMethod(tag: any, id: number, name: string, arity: number): Internal.IdFunctionObject;
        initPrototypeMethod(tag: any, id: number, key: Internal.Symbol, functionName: string, arity: number): Internal.IdFunctionObject;
        activatePrototypeMap(maxPrototypeId: number): void;
        initPrototypeValue(id: number, name: string, value: any, attributes: number): void;
        initPrototypeValue(id: number, key: Internal.Symbol, value: any, attributes: number): void;
        execIdCall(f: Internal.IdFunctionObject, cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(scope: Internal.Scriptable, prototype: Internal.Scriptable);
    }
    type IdScriptableObject_ = IdScriptableObject;
    interface Set <E> extends Internal.Collection<E> {
        add(arg0: E): boolean;
        spliterator(): Internal.Spliterator<E>;
        containsAll(arg0: Internal.Collection<any>): boolean;
        isEmpty(): boolean;
        clear(): void;
        remove(arg0: any): boolean;
        removeAll(arg0: Internal.Collection<any>): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<E>;
        size(): number;
        addAll(arg0: Internal.Collection<E>): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
        toArray(): any[];
        toArray<T_>(arg0: T_[]): T_[];
        retainAll(arg0: Internal.Collection<any>): boolean;
    }
    type Set_<E> = Set<E>;
    class RequiredArgumentBuilder <S, T> extends Internal.ArgumentBuilder<S, Internal.RequiredArgumentBuilder<S, T>> {
        suggests(arg0: Internal.SuggestionProvider_<S>): Internal.RequiredArgumentBuilder<S, Internal.RequiredArgumentBuilder<S, Internal.RequiredArgumentBuilder<S, T>>>;
        static argument<S_, T_>(arg0: string, arg1: Internal.ArgumentType_<T_>): Internal.RequiredArgumentBuilder<S_, T_>;
        getName(): string;
        build(): Internal.ArgumentCommandNode<S, Internal.RequiredArgumentBuilder<S, Internal.RequiredArgumentBuilder<S, T>>>;
        build(): Internal.CommandNode<any>;
        getType(): Internal.ArgumentType<Internal.RequiredArgumentBuilder<S, Internal.RequiredArgumentBuilder<S, T>>>;
        getSuggestionsProvider(): Internal.SuggestionProvider<S>;
        get suggestionsProvider(): Internal.SuggestionProvider<S>;
        get name(): string;
        get type(): Internal.ArgumentType<Internal.RequiredArgumentBuilder<S, Internal.RequiredArgumentBuilder<S, T>>>;
    }
    type RequiredArgumentBuilder_<S, T> = RequiredArgumentBuilder<S, T>;
    interface EyeOfEnderAccess {
        setLife(arg0: number): void;
        (arg0: number): void;
    }
    type EyeOfEnderAccess_ = ((arg0: number)=>void) | EyeOfEnderAccess;
    class PonderScene extends Document.Object {
        getWorld(): Internal.PonderWorld;
        fadeOut(): void;
        resolve<E_>(arg0: Internal.ElementLink<E_>): E_;
        registerText(arg0: string): java_.util.function_.Supplier<string>;
        getSceneProgress(): number;
        getBaseWorldSection(): Internal.WorldSectionElement;
        getId(): ResourceLocation;
        renderOverlay(arg0: Internal.PonderUI, arg1: Internal.MatrixStack, arg2: number): void;
        getBounds(): Internal.MutableBoundingBox;
        setPointOfInterest(arg0: Vec3): void;
        getTitle(): string;
        forEachVisible<T_>(arg0: Internal.Class<T_>, arg1: Internal.Consumer_<T_>): void;
        runWith<E_>(arg0: Internal.ElementLink<E_>, arg1: Internal.Consumer_<E_>): void;
        addToSceneTime(arg0: number): void;
        builder(): Internal.SceneBuilder;
        rayTraceScene(arg0: Vec3, arg1: Vec3): com.simibubi.create.foundation.utility.Pair<Internal.ItemStack, BlockPos>;
        linkElement<E_>(arg0: E_, arg1: Internal.ElementLink<E_>): void;
        renderScene(arg0: Internal.SuperRenderTypeBuffer, arg1: Internal.MatrixStack, arg2: number): void;
        getPointOfInterest(): Vec3;
        getTransform(): Internal.PonderScene$SceneTransform;
        setFinished(arg0: boolean): void;
        forEach(arg0: Internal.Consumer_<Internal.PonderElement_>): void;
        forEach<T_>(arg0: Internal.Class<T_>, arg1: Internal.Consumer_<T_>): void;
        seekToTime(arg0: number): void;
        tick(): void;
        getString(arg0: string): string;
        isFinished(): boolean;
        getOutliner(): Internal.Outliner;
        markKeyframe(arg0: number): void;
        forEachWorldEntity<T_>(arg0: Internal.Class<T_>, arg1: Internal.Consumer_<T_>): void;
        stopCounting(): void;
        applyTo<E_, F_>(arg0: Internal.ElementLink<E_>, arg1: Internal.Function_<E_, F_>): F_;
        getSceneBuildingUtil(): Internal.SceneBuildingUtil;
        getNamespace(): string;
        deselect(): void;
        getElements(): Internal.Set<Internal.PonderElement>;
        reset(): void;
        addElement(arg0: Internal.PonderElement): void;
        begin(): void;
        static readonly TITLE_KEY: "header";
        get outliner(): Internal.Outliner;
        get sceneBuildingUtil(): Internal.SceneBuildingUtil;
        get baseWorldSection(): Internal.WorldSectionElement;
        get finished(): boolean;
        get title(): string;
        get transform(): Internal.PonderScene$SceneTransform;
        get world(): Internal.PonderWorld;
        get pointOfInterest(): Vec3;
        get elements(): Internal.Set<Internal.PonderElement>;
        get bounds(): Internal.MutableBoundingBox;
        get namespace(): string;
        get id(): ResourceLocation;
        get sceneProgress(): number;
        set pointOfInterest(arg0: Vec3);
        set finished(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PonderWorld, arg1: string, arg2: ResourceLocation, arg3: Internal.Collection<Internal.PonderTag>);
    }
    type PonderScene_ = PonderScene;
    class LerpedFloat extends Document.Object {
        getChaseTarget(): number;
        tickChaser(): void;
        forceNextSync(): void;
        static linear(): Internal.LerpedFloat;
        settled(): boolean;
        startWithValue(arg0: number): Internal.LerpedFloat;
        updateChaseSpeed(arg0: number): boolean;
        chase(arg0: number, arg1: number, arg2: Internal.LerpedFloat$Chaser_): Internal.LerpedFloat;
        readNBT(arg0: Internal.CompoundNBT_, arg1: boolean): void;
        updateChaseTarget(arg0: number): void;
        static angular(): Internal.LerpedFloat;
        writeNBT(): Internal.CompoundNBT;
        getValue(arg0: number): number;
        getValue(): number;
        setValue(arg0: number): void;
        get chaseTarget(): number;
        get value(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
    }
    type LerpedFloat_ = LerpedFloat;
    class ToolDefinitionData extends Document.Object {
        static read(arg0: Internal.PacketBuffer): Internal.ToolDefinitionData;
        buildStatMultipliers(arg0: Internal.ModifierStatsBuilder): void;
        getStartingSlots(arg0: Internal.SlotType): number;
        getBaseStat(arg0: Internal.FloatToolStat): number;
        getTraits(): Internal.List<Internal.ModifierEntry>;
        write(arg0: Internal.PacketBuffer): void;
        buildSlots(arg0: Internal.ModDataNBT): void;
        getAllBaseStats(): Internal.Set<Internal.FloatToolStat>;
        getBonus(arg0: Internal.FloatToolStat): number;
        getParts(): Internal.List<Internal.PartRequirement>;
        getMultiplier(arg0: Internal.FloatToolStat): number;
        static readonly EMPTY: Internal.ToolDefinitionData;
        get traits(): Internal.List<Internal.ModifierEntry>;
        get allBaseStats(): Internal.Set<Internal.FloatToolStat>;
        get parts(): Internal.List<Internal.PartRequirement>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.List<Internal.PartRequirement>, arg1: any, arg2: any, arg3: Internal.List<Internal.ModifierEntry>);
    }
    type ToolDefinitionData_ = ToolDefinitionData;
    class WidgetType extends Internal.Enum<Internal.WidgetType> {
        static valueOf(name: string): Internal.WidgetType;
        static values(): Internal.WidgetType[];
        static mouseOver(mouseOver: boolean): Internal.WidgetType;
        static readonly DISABLED: Internal.WidgetType;
        static readonly MOUSE_OVER: Internal.WidgetType;
        static readonly NORMAL: Internal.WidgetType;
    }
    type WidgetType_ = "normal" | "mouse_over" | "disabled" | WidgetType;
    class SeaGrassFeature extends Internal.Feature<Internal.ProbabilityConfig> {
        func_241855_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos, arg4: Internal.ProbabilityConfig): boolean;
        setRegistryName(arg0: ResourceLocation_): any;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<Internal.ProbabilityConfig>);
    }
    type SeaGrassFeature_ = SeaGrassFeature;
    interface Function10 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.Function<T10, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function3<T8, T9, T10, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.BiFunction<T9, T10, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function5<T6, T7, T8, T9, T10, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function4<T7, T8, T9, T10, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function7<T4, T5, T6, T7, T8, T9, T10, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function6<T5, T6, T7, T8, T9, T10, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function8<T3, T4, T5, T6, T7, T8, T9, T10, R>>;
        curry(): Internal.Function<T1, Internal.Function9<T2, T3, T4, T5, T6, T7, T8, T9, T10, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10): R;
    }
    type Function10_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10)=>R) | Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>;
    class SawmillRecipeJS extends Internal.IERecipeJS {
        stripping: Internal.List<boolean>;
        hasStripped: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SawmillRecipeJS_ = SawmillRecipeJS;
    class ClippingHelper extends Document.Object implements Internal.FrustumExtended {
        func_228952_a_(arg0: number, arg1: number, arg2: number): void;
        func_228953_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        func_228957_a_(box: Internal.AxisAlignedBB): boolean;
        fastAabbTest(minX: number, minY: number, minZ: number, maxX: number, maxY: number, maxZ: number): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Matrix4f, arg1: Internal.Matrix4f);
    }
    type ClippingHelper_ = ClippingHelper;
    interface LivingEntityAccessor {
        callJumpInLiquid(arg0: Internal.ITag<Internal.Fluid>): void;
        (arg0: Internal.ITag<Internal.Fluid>): void;
    }
    type LivingEntityAccessor_ = ((arg0: Internal.ITag<Internal.Fluid>)=>void) | LivingEntityAccessor;
    interface ItemTooltipEventJS$StaticTooltipHandlerFromJS {
        accept(arg0: Internal.ItemStackJS_, arg1: boolean, arg2: Internal.List<any>): void;
        (arg0: Internal.ItemStackJS, arg1: boolean, arg2: Internal.List<any>): void;
    }
    type ItemTooltipEventJS$StaticTooltipHandlerFromJS_ = ((arg0: Internal.ItemStackJS, arg1: boolean, arg2: Internal.List<any>)=>void) | ItemTooltipEventJS$StaticTooltipHandlerFromJS;
    abstract class Dimension2D extends Document.Object implements Internal.Cloneable {
        getHeight(): number;
        setSize(arg0: number, arg1: number): void;
        setSize(arg0: Internal.Dimension2D): void;
        clone(): any;
        getWidth(): number;
        get width(): number;
        get height(): number;
        set size(arg0: Internal.Dimension2D);
    }
    type Dimension2D_ = Dimension2D;
    abstract class CollectionNBT <T> extends Internal.AbstractList<T> implements Internal.INBT, Internal.ListLike<any> {
        removeLast(): T;
        getLast(): T;
        replaceAll(arg0: Internal.UnaryOperator<T>): void;
        getLL(index: number): any;
        remove(arg0: number): any;
        remove(arg0: number): T;
        addLast(arg0: T): void;
        func_150285_a_(): string;
        func_197637_c(): Internal.ITextComponent;
        stream(): Internal.Stream<T>;
        getFirst(): T;
        func_218660_b(arg0: number, arg1: Internal.INBT): boolean;
        removeFirst(): T;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        func_225647_b_(): Internal.INBTType<any>;
        parallelStream(): Internal.Stream<T>;
        func_199850_a(arg0: string, arg1: number): Internal.ITextComponent;
        clearLL(): void;
        add(arg0: number, arg1: T): void;
        set(arg0: number, arg1: any): any;
        set(arg0: number, arg1: T): T;
        spliterator(): Internal.Spliterator<T>;
        forEach(arg0: Internal.Consumer_<T>): void;
        setLL(index: number, value: any): void;
        removeLL(index: number): void;
        sort(arg0: Internal.Comparator<T>): void;
        removeIf(arg0: Internal.Predicate_<T>): boolean;
        wrapAsJavaObject(cx: Internal.Context, scope: Internal.Scriptable, staticType: Internal.Class<any>): Internal.Scriptable;
        func_74737_b(): Internal.INBT;
        func_74732_a(): number;
        func_230528_d__(): number;
        func_74734_a(arg0: Internal.DataOutput): void;
        sizeLL(): number;
        func_218659_a(arg0: number, arg1: Internal.INBT): boolean;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<T>;
        addFirst(arg0: T): void;
        get last(): T;
        get first(): T;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CollectionNBT_<T> = CollectionNBT<T>;
    class RayTraceContext$FluidMode extends Internal.Enum<Internal.RayTraceContext$FluidMode> {
        func_222248_a(arg0: Internal.FluidState): boolean;
        static valueOf(arg0: string): Internal.RayTraceContext$FluidMode;
        static values(): Internal.RayTraceContext$FluidMode[];
        static readonly SOURCE_ONLY: Internal.RayTraceContext$FluidMode;
        static readonly NONE: Internal.RayTraceContext$FluidMode;
        static readonly ANY: Internal.RayTraceContext$FluidMode;
    }
    type RayTraceContext$FluidMode_ = "none" | "source_only" | "any" | RayTraceContext$FluidMode;
    interface VillagerEntityAccessor {
        callUpdateSpecialPrices(arg0: Internal.PlayerEntity): void;
        (arg0: Internal.PlayerEntity): void;
    }
    type VillagerEntityAccessor_ = ((arg0: Internal.PlayerEntity)=>void) | VillagerEntityAccessor;
    class MinecraftProfileTexture extends Document.Object {
        getUrl(): string;
        getMetadata(arg0: string): string;
        getHash(): string;
        static readonly PROFILE_TEXTURE_COUNT: 3;
        get url(): string;
        get hash(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Map<string, string>);
    }
    type MinecraftProfileTexture_ = MinecraftProfileTexture;
    class InventoryJS extends Document.Object {
        getBlock(world: Internal.WorldJS): Internal.BlockContainerJS;
        set(slot: number, item: Internal.ItemStack): void;
        countNonEmpty(): number;
        countNonEmpty(ingredient: Internal.IngredientJS_): number;
        markDirty(): void;
        count(ingredient: Internal.IngredientJS_): number;
        count(): number;
        isEmpty(): boolean;
        clear(ingredient: Internal.IngredientJS_): void;
        clear(): void;
        isItemValid(slot: number, item: Internal.ItemStack): boolean;
        insert(slot: number, item: Internal.ItemStack, simulate: boolean): Internal.ItemStackJS;
        getWidth(): number;
        getHeight(): number;
        getSize(): number;
        extract(slot: number, amount: number, simulate: boolean): Internal.ItemStackJS;
        find(ingredient: Internal.IngredientJS_): number;
        find(): number;
        getSlotLimit(slot: number): number;
        get(slot: number): Internal.ItemStackJS;
        readonly minecraftInventory: Internal.ItemHandler;
        get size(): number;
        get width(): number;
        get empty(): boolean;
        get height(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(h: Internal.IInventory);
        constructor(h: Internal.ItemHandler);
    }
    type InventoryJS_ = InventoryJS;
    class PointOfInterestDebugRenderer$BrainInfo extends Document.Object {
        func_217746_a(): Internal.UUID;
        readonly field_217747_a: Internal.UUID;
        readonly field_217752_f: Internal.List<string>;
        readonly field_239360_q_: Internal.Set<BlockPos>;
        readonly field_217748_b: number;
        readonly field_223456_i: boolean;
        readonly field_217753_g: Internal.List<string>;
        readonly field_217749_c: string;
        readonly field_223457_m: Internal.List<string>;
        readonly field_217754_h: Internal.Set<BlockPos>;
        readonly field_239349_f_: number;
        readonly field_217750_d: Internal.IPosition;
        readonly field_217751_e: Internal.List<string>;
        readonly field_222930_g: net.minecraft.pathfinding.Path;
        readonly field_222928_d: string;
        readonly field_239350_g_: number;
        readonly field_222929_e: number;
        readonly field_223455_g: string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.UUID, arg1: number, arg2: string, arg3: string, arg4: number, arg5: number, arg6: number, arg7: Internal.IPosition, arg8: string, arg9: net.minecraft.pathfinding.Path, arg10: boolean);
    }
    type PointOfInterestDebugRenderer$BrainInfo_ = PointOfInterestDebugRenderer$BrainInfo;
    class ItemCameraTransforms$TransformType extends Internal.Enum<Internal.ItemCameraTransforms$TransformType> {
        static valueOf(arg0: string): Internal.ItemCameraTransforms$TransformType;
        static values(): Internal.ItemCameraTransforms$TransformType[];
        func_241716_a_(): boolean;
        static readonly HEAD: Internal.ItemCameraTransforms$TransformType;
        static readonly THIRD_PERSON_LEFT_HAND: Internal.ItemCameraTransforms$TransformType;
        static readonly THIRD_PERSON_RIGHT_HAND: Internal.ItemCameraTransforms$TransformType;
        static readonly FIRST_PERSON_RIGHT_HAND: Internal.ItemCameraTransforms$TransformType;
        static readonly GROUND: Internal.ItemCameraTransforms$TransformType;
        static readonly FIRST_PERSON_LEFT_HAND: Internal.ItemCameraTransforms$TransformType;
        static readonly FIXED: Internal.ItemCameraTransforms$TransformType;
        static readonly GUI: Internal.ItemCameraTransforms$TransformType;
        static readonly NONE: Internal.ItemCameraTransforms$TransformType;
    }
    type ItemCameraTransforms$TransformType_ = "none" | "third_person_left_hand" | "third_person_right_hand" | "first_person_left_hand" | "first_person_right_hand" | "head" | "gui" | "ground" | "fixed" | ItemCameraTransforms$TransformType;
    class RPConfig$PacketSizeLimits extends Document.Object {
        maxClientCustomPayloadPacketSize: number;
        maxCompressedPacketSize: number;
        maxNBTCompoundTagPacketSize: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RPConfig$PacketSizeLimits_ = RPConfig$PacketSizeLimits;
    class Pair <F, S> extends Document.Object implements Internal.App<Internal.Pair$Mu<S>, F> {
        mapFirst<F2_>(arg0: Internal.Function_<Internal.Pair$Mu_<S>, F2_>): Internal.Pair<F2_, S>;
        swap(): Internal.Pair<S, Internal.Pair$Mu<S>>;
        static unbox<F_, S_>(arg0: Internal.App<Internal.Pair$Mu<S_>, F_>): Internal.Pair<F_, S_>;
        getFirst(): Internal.Pair$Mu<S>;
        static toMap<F_, S_>(): Internal.Collector<Internal.Pair<F_, S_>, any, Internal.Map<F_, S_>>;
        static of<F_, S_>(arg0: F_, arg1: S_): Internal.Pair<F_, S_>;
        getSecond(): S;
        mapSecond<S2_>(arg0: Internal.Function_<S, S2_>): Internal.Pair<Internal.Pair$Mu<S>, S2_>;
        get first(): Internal.Pair$Mu<S>;
        get second(): S;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: F, arg1: S);
    }
    type Pair_<F, S> = Pair<F, S>;
    class ExperienceOrbEntity extends Internal.Entity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_70528_g(): number;
        getEntity(): Internal.Entity;
        static func_70527_a(arg0: number): number;
        asKJS(): any;
        func_70526_d(): number;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213281_b(arg0: Internal.CompoundNBT_): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70037_a(arg0: Internal.CompoundNBT_): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_70531_b: number;
        field_70533_a: number;
        field_70532_c: number;
        field_70530_e: number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: number);
        constructor(arg0: Internal.EntityType<Internal.ExperienceOrbEntity>, arg1: Internal.World);
    }
    type ExperienceOrbEntity_ = ExperienceOrbEntity;
    interface ReadWriteLockable {
        getLock(): Internal.ReadWriteLock;
        read(arg0: Internal.Runnable_): void;
        read<T>(arg0: java_.util.function_.Supplier_<T>): T;
        lock<T>(arg0: java_.util.function_.Supplier_<Internal.Lock_>, arg1: java_.util.function_.Supplier_<T>): T;
        write(arg0: Internal.Runnable_): void;
        write<T>(arg0: java_.util.function_.Supplier_<T>): T;
        (): Internal.ReadWriteLock;
    }
    type ReadWriteLockable_ = (()=>Internal.ReadWriteLock) | ReadWriteLockable;
    class NearestBedSensor extends Internal.Sensor<Internal.MobEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type NearestBedSensor_ = NearestBedSensor;
    interface ListBuilder <T> {
        withErrorsFrom(arg0: Internal.DataResult<any>): Internal.ListBuilder<T>;
        add(arg0: T): Internal.ListBuilder<T>;
        add<E>(arg0: E, arg1: Internal.Encoder_<E>): Internal.ListBuilder<T>;
        add(arg0: Internal.DataResult<T>): Internal.ListBuilder<T>;
        mapError(arg0: Internal.UnaryOperator<string>): Internal.ListBuilder<T>;
        ops(): Internal.DynamicOps<T>;
        build(arg0: Internal.DataResult<T>): Internal.DataResult<T>;
        build(arg0: T): Internal.DataResult<T>;
        addAll<E>(arg0: Internal.Iterable_<E>, arg1: Internal.Encoder_<E>): Internal.ListBuilder<T>;
    }
    type ListBuilder_<T> = ListBuilder<T>;
    interface IntToLongFunction {
        applyAsLong(arg0: number): number;
        (arg0: number): number;
    }
    type IntToLongFunction_ = ((arg0: number)=>number) | IntToLongFunction;
    interface IFluidTank {
        getFluid(): Internal.FluidStack;
        fill(arg0: Internal.FluidStack, arg1: Internal.IFluidHandler$FluidAction_): number;
        getFluidAmount(): number;
        isFluidValid(arg0: Internal.FluidStack): boolean;
        drain(arg0: number, arg1: Internal.IFluidHandler$FluidAction_): Internal.FluidStack;
        drain(arg0: Internal.FluidStack, arg1: Internal.IFluidHandler$FluidAction_): Internal.FluidStack;
        getCapacity(): number;
    }
    type IFluidTank_ = IFluidTank;
    class Direction$Plane extends Internal.Enum<Internal.Direction$Plane> implements Internal.Iterable<Internal.Direction>, Internal.Predicate<Internal.Direction> {
        iterator(): Internal.Iterator<Internal.Direction>;
        or(arg0: Internal.Predicate_<Internal.Direction_>): Internal.Predicate<Internal.Direction>;
        func_239636_a_(): Internal.Stream<Internal.Direction>;
        test(arg0: Internal.Direction_): boolean;
        test(arg0: any): boolean;
        spliterator(): Internal.Spliterator<Internal.Direction>;
        and(arg0: Internal.Predicate_<Internal.Direction_>): Internal.Predicate<Internal.Direction>;
        negate(): Internal.Predicate<Internal.Direction>;
        forEach(arg0: Internal.Consumer_<Internal.Direction_>): void;
        static valueOf(arg0: string): Internal.Direction$Plane;
        static values(): Internal.Direction$Plane[];
        func_179518_a(arg0: Internal.Random): Internal.Direction;
        func_244803_b(arg0: Internal.Random): Internal.Direction$Axis;
        static readonly VERTICAL: Internal.Direction$Plane;
        static readonly HORIZONTAL: Internal.Direction$Plane;
    }
    type Direction$Plane_ = "horizontal" | "vertical" | Direction$Plane;
    class RandomTickEvent$Fluid extends Internal.RandomTickEvent {
        getState(): Internal.FluidState;
        get state(): Internal.FluidState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.FluidState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Random);
    }
    type RandomTickEvent$Fluid_ = RandomTickEvent$Fluid;
    class DataJsonGenerator extends Internal.JsonGenerator {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(m: Internal.Map<ResourceLocation, Internal.JsonElement>);
    }
    type DataJsonGenerator_ = DataJsonGenerator;
    interface EyeOfEnderData {
        setLocateTaskOngoing(arg0: boolean): void;
        (arg0: boolean): void;
    }
    type EyeOfEnderData_ = ((arg0: boolean)=>void) | EyeOfEnderData;
    class QuestProgressEventData <T> extends Document.Object {
        withObject<N_>(arg0: N_): Internal.QuestProgressEventData<N_>;
        readonly teamData: Internal.TeamData;
        readonly onlineMembers: Internal.List<Internal.ServerPlayerEntity>;
        readonly notifiedPlayers: Internal.List<Internal.ServerPlayerEntity>;
        readonly time: Internal.Date;
        readonly object: T;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Date, arg1: Internal.TeamData, arg2: T, arg3: Internal.List<Internal.ServerPlayerEntity>, arg4: Internal.List<Internal.ServerPlayerEntity>);
    }
    type QuestProgressEventData_<T> = QuestProgressEventData<T>;
    abstract class Enum <E> extends Document.Object implements Internal.Constable, Internal.Comparable<E>, Internal.Serializable {
        getDeclaringClass(): Internal.Class<E>;
        static valueOf<T_>(arg0: Internal.Class<T_>, arg1: string): T_;
        name(): string;
        compareTo(arg0: any): number;
        compareTo(arg0: E): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<E>>;
        ordinal(): number;
        get declaringClass(): Internal.Class<E>;
    }
    type Enum_<E> = Enum<E>;
    class GlVertexFormat <T> extends Document.Object implements Internal.BufferVertexFormat {
        getStride(): number;
        getAttribute(name: T): Internal.GlVertexAttribute;
        getAttributesArray(): Internal.GlVertexAttribute[];
        static builder<T_>(type: Internal.Class<T_>, stride: number): Internal.GlVertexFormat$Builder<T_>;
        get attributesArray(): Internal.GlVertexAttribute[];
        get stride(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(attributeEnum: Internal.Class<T>, attributesKeyed: any, stride: number);
    }
    type GlVertexFormat_<T> = GlVertexFormat<T>;
    interface ILocatable {
        getLocatableSerial(): number;
        (): number;
    }
    type ILocatable_ = (()=>number) | ILocatable;
    class RabbitEntity extends Internal.AnimalEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_175529_r(arg0: number): void;
        func_70619_bc(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        static func_234224_eJ_(): Internal.AttributeModifierMap$MutableAttribute;
        func_184770_cZ(): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_175521_o(arg0: number): number;
        static func_223321_c(arg0: Internal.EntityType_<Internal.RabbitEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_175531_cl(): number;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_175515_b(arg0: number): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.RabbitEntity;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.RabbitEntity>, arg1: Internal.World);
    }
    type RabbitEntity_ = RabbitEntity;
    class KnownClientPlayer extends Document.Object implements Internal.Comparable<Internal.KnownClientPlayer> {
        isValid(): boolean;
        getExtraData(): Internal.CompoundNBT;
        getProfile(): Internal.GameProfile;
        update(arg0: Internal.KnownClientPlayer): void;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.KnownClientPlayer): number;
        write(arg0: Internal.PacketBuffer): void;
        isInternalTeam(): boolean;
        teamId: Internal.UUID;
        name: string;
        online: boolean;
        readonly uuid: Internal.UUID;
        get valid(): boolean;
        get internalTeam(): boolean;
        get extraData(): Internal.CompoundNBT;
        get profile(): Internal.GameProfile;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PlayerTeam);
        constructor(arg0: Internal.PacketBuffer);
    }
    type KnownClientPlayer_ = KnownClientPlayer;
    class PortalInfo extends Document.Object {
        readonly field_222505_a: Vec3;
        readonly field_222506_b: Vec3;
        readonly field_242960_c: number;
        readonly field_242961_d: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Vec3, arg1: Vec3, arg2: number, arg3: number);
    }
    type PortalInfo_ = PortalInfo;
    class RemoveJEIRecipesEvent extends Internal.EventJS {
        yeet(category: ResourceLocation_, recipesToYeet: ResourceLocation[]): void;
        getCategories(): Internal.Collection<Internal.IRecipeCategory<any>>;
        getCategoryIds(): Internal.Collection<ResourceLocation>;
        remove(category: ResourceLocation_, recipesToRemove: ResourceLocation[]): void;
        get categoryIds(): Internal.Collection<ResourceLocation>;
        get categories(): Internal.Collection<Internal.IRecipeCategory<any>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(r: Internal.IJeiRuntime);
    }
    type RemoveJEIRecipesEvent_ = RemoveJEIRecipesEvent;
    abstract class MobEntity extends Internal.LivingEntity implements Internal.AccessorMobEntity {
        func_70638_az(): Internal.LivingEntity;
        func_82227_f(arg0: boolean): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_233663_d_(arg0: EquipmentSlot_): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_184641_n(arg0: boolean): void;
        func_70656_aK(): void;
        func_70605_aq(): Internal.MovementController;
        func_110163_bv(): void;
        func_110162_b(arg0: Internal.Entity, arg1: boolean): void;
        func_213397_c(arg0: number): boolean;
        func_98053_h(arg0: boolean): void;
        func_70641_bl(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_233659_b_(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_184638_cS(): boolean;
        func_110166_bE(): Internal.Entity;
        static func_223315_a(arg0: Internal.EntityType_<Internal.MobEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_184643_a(arg0: Internal.PathNodeType_): number;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_213384_dI(): BlockPos;
        func_213380_a(arg0: Internal.IWorld, arg1: Internal.SpawnReason_): boolean;
        func_213386_a(arg0: Internal.IServerWorld_, arg1: Internal.DifficultyInstance, arg2: Internal.SpawnReason_, arg3: Internal.ILivingEntityData, arg4: Internal.CompoundNBT_): Internal.ILivingEntityData;
        func_175448_a(arg0: Internal.ItemStack): boolean;
        func_204209_c(arg0: number): boolean;
        botania_getAmbientSound(): Internal.SoundEvent;
        func_233665_g_(arg0: Internal.ItemStack): boolean;
        canRiderInteract(): boolean;
        static func_184636_a(arg0: EquipmentSlot_, arg1: number): Internal.Item;
        func_191989_p(arg0: number): void;
        func_213394_dL(): boolean;
        func_70671_ap(): Internal.LookController;
        func_70625_a(arg0: Internal.Entity, arg1: number, arg2: number): void;
        func_110160_i(arg0: boolean, arg1: boolean): void;
        func_213398_dR(): boolean;
        func_205019_a(arg0: Internal.IWorldReader): boolean;
        static func_233666_p_(): Internal.AttributeModifierMap$MutableAttribute;
        func_70642_aH(): void;
        func_184649_cE(): number;
        func_98052_bS(): boolean;
        func_110165_bF(): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_213383_dH(): boolean;
        shouldRiderSit(): boolean;
        func_175446_cd(): boolean;
        func_70646_bf(): number;
        func_213390_a(arg0: BlockPos, arg1: number): void;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_94061_f(arg0: boolean): void;
        func_82171_bF(): boolean;
        func_230293_i_(arg0: Internal.ItemStack): boolean;
        func_70615_aA(): void;
        func_70661_as(): Internal.PathNavigator;
        func_230280_a_(arg0: Internal.ShootableItem): boolean;
        func_184646_p(arg0: number): void;
        static func_184648_b(arg0: EquipmentSlot_, arg1: Internal.ItemStack): boolean;
        func_233660_b_(arg0: Internal.PathNodeType_): boolean;
        func_104002_bU(): boolean;
        setDeathLootTable(arg0: ResourceLocation_): void;
        static func_184640_d(arg0: Internal.ItemStack): EquipmentSlot;
        func_184642_a(arg0: EquipmentSlot_, arg1: number): void;
        getParts(): Internal.PartEntity<any>[];
        func_70657_f(arg0: number): void;
        func_184644_a(arg0: Internal.PathNodeType_, arg1: number): void;
        func_70635_at(): Internal.EntitySenses;
        hasCooldown(): boolean;
        func_213396_dB(): number;
        func_70683_ar(): Internal.JumpController;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_213381_d(arg0: number): void;
        getEntity(): Internal.Entity;
        func_213391_dJ(): number;
        asKJS(): any;
        func_213389_a(arg0: BlockPos): boolean;
        func_213392_I(): boolean;
        func_110167_bD(): boolean;
        func_233656_b_<T_>(arg0: Internal.EntityType_<T_>, arg1: boolean): T_;
        func_70624_b(arg0: Internal.LivingEntity): void;
        func_184652_a(arg0: Internal.PlayerEntity): boolean;
        func_213395_q(arg0: boolean): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70627_aG(): number;
        field_110170_bx: Internal.CompoundNBT;
        readonly field_184656_bv: Internal.NonNullList<Internal.ItemStack>;
        readonly field_82174_bp: number[];
        readonly field_184655_bs: number[];
        field_184659_bA: ResourceLocation;
        readonly field_184657_bw: Internal.NonNullList<Internal.ItemStack>;
        field_70699_by: Internal.PathNavigator;
        field_70757_a: number;
        field_70728_aV: number;
        field_70765_h: Internal.MovementController;
        field_70749_g: Internal.LookController;
        readonly field_70714_bg: Internal.GoalSelector;
        readonly field_70715_bh: Internal.GoalSelector;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        set deathLootTable(arg0: ResourceLocation_);
    }
    type MobEntity_ = MobEntity;
    class CraftingInventory extends Document.Object implements Internal.IInventory, Internal.IRecipeHelperPopulator, Internal.CraftingContainerAccess {
        func_213901_a(arg0: Internal.Item_): number;
        func_70304_b(arg0: number): Internal.ItemStack;
        func_194018_a(arg0: Internal.RecipeItemHelper): void;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_174888_l(): void;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        func_174923_h(): number;
        func_174922_i(): number;
        func_70302_i_(): number;
        func_191420_l(): boolean;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        setItems(arg0: Internal.NonNullList<any>): void;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_70296_d(): void;
        field_70466_a: Internal.NonNullList<Internal.ItemStack>;
        readonly field_70465_c: Internal.Container;
        set items(arg0: Internal.NonNullList<any>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Container, arg1: number, arg2: number);
    }
    type CraftingInventory_ = CraftingInventory;
    class Dimension extends Internal.Dimension2D implements Internal.Serializable {
        getSize(): Internal.Dimension;
        setSize(arg0: Internal.Dimension): void;
        setSize(arg0: number, arg1: number): void;
        width: number;
        height: number;
        get size(): Internal.Dimension;
        set size(arg0: Internal.Dimension);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Dimension);
        constructor();
        constructor(arg0: number, arg1: number);
    }
    type Dimension_ = Dimension;
    interface IMutableSearchTree <T> extends Internal.ISearchTree<T> {
        func_217872_a(arg0: T): void;
        func_194040_a(): void;
        func_217871_a(): void;
    }
    type IMutableSearchTree_<T> = IMutableSearchTree<T>;
    class ElderGuardianEntity extends Internal.GuardianEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        static func_234283_m_(): Internal.AttributeModifierMap$MutableAttribute;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        static readonly field_213629_b: 2.35;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ElderGuardianEntity>, arg1: Internal.World);
    }
    type ElderGuardianEntity_ = ElderGuardianEntity;
    interface AccessorLivingEntity {
        setActiveItemStackUseCount(arg0: number): void;
        (arg0: number): void;
    }
    type AccessorLivingEntity_ = ((arg0: number)=>void) | AccessorLivingEntity;
    class LootParameterSet extends Document.Object {
        func_216277_a(): Internal.Set<Internal.LootParameter<any>>;
        func_216276_b(): Internal.Set<Internal.LootParameter<any>>;
        func_227556_a_(arg0: Internal.ValidationTracker, arg1: Internal.IParameterized): void;
    }
    type LootParameterSet_ = LootParameterSet;
    interface ObjectSortedSet <K> extends Internal.ObjectSet<K>, Internal.SortedSet<K>, Internal.ObjectBidirectionalIterable<K> {
        tailSet(arg0: any): Internal.SortedSet<any>;
        tailSet(arg0: K): Internal.ObjectSortedSet<K>;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.ObjectIterator<any>;
        iterator(): Internal.ObjectBidirectionalIterator<K>;
        iterator(arg0: K): Internal.ObjectBidirectionalIterator<K>;
        headSet(arg0: K): Internal.ObjectSortedSet<K>;
        headSet(arg0: any): Internal.SortedSet<any>;
        subSet(arg0: any, arg1: any): Internal.SortedSet<any>;
        subSet(arg0: K, arg1: K): Internal.ObjectSortedSet<K>;
    }
    type ObjectSortedSet_<K> = ObjectSortedSet<K>;
    class StandardLevel extends Internal.Enum<Internal.StandardLevel> {
        static getStandardLevel(intLevel: number): Internal.StandardLevel;
        static valueOf(name: string): Internal.StandardLevel;
        static values(): Internal.StandardLevel[];
        intLevel(): number;
        static readonly TRACE: Internal.StandardLevel;
        static readonly ALL: Internal.StandardLevel;
        static readonly ERROR: Internal.StandardLevel;
        static readonly INFO: Internal.StandardLevel;
        static readonly FATAL: Internal.StandardLevel;
        static readonly DEBUG: Internal.StandardLevel;
        static readonly OFF: Internal.StandardLevel;
        static readonly WARN: Internal.StandardLevel;
    }
    type StandardLevel_ = "off" | "fatal" | "error" | "warn" | "info" | "debug" | "trace" | "all" | StandardLevel;
    class ItemRequirement$ItemUseType extends Internal.Enum<Internal.ItemRequirement$ItemUseType> {
        static valueOf(arg0: string): Internal.ItemRequirement$ItemUseType;
        static values(): Internal.ItemRequirement$ItemUseType[];
        static readonly CONSUME: Internal.ItemRequirement$ItemUseType;
        static readonly DAMAGE: Internal.ItemRequirement$ItemUseType;
    }
    type ItemRequirement$ItemUseType_ = "consume" | "damage" | ItemRequirement$ItemUseType;
    abstract class ForwardingSet <E> extends Internal.ForwardingCollection<E> implements Internal.Set<E> {
        spliterator(): Internal.Spliterator<E>;
        stream(): Internal.Stream<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<E>;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
    }
    type ForwardingSet_<E> = ForwardingSet<E>;
    class MenuShortcut extends Document.Object implements Internal.Serializable {
        getKey(): number;
        usesShiftModifier(): boolean;
        equals(arg0: Internal.MenuShortcut): boolean;
        get key(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
        constructor(arg0: number, arg1: boolean);
    }
    type MenuShortcut_ = MenuShortcut;
    interface IComponentVariant {
        getId(): ResourceLocation;
        (): ResourceLocation;
    }
    type IComponentVariant_ = (()=>ResourceLocation) | IComponentVariant;
    class TickEvent$WorldTickEvent extends Internal.TickEvent {
        readonly world: Internal.World;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LogicalSide, arg1: Internal.TickEvent$Phase, arg2: Internal.World);
        constructor();
    }
    type TickEvent$WorldTickEvent_ = TickEvent$WorldTickEvent;
    class WorldEvent extends net.minecraftforge.eventbus.api.Event implements Internal.EventHandlerImplCommon$WorldEventAttachment {
        getWorld(): Internal.IWorld;
        architectury$getAttachedLevel(): Internal.IWorld;
        architectury$attachLevel(level: Internal.IWorld): void;
        get world(): Internal.IWorld;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.IWorld);
    }
    type WorldEvent_ = WorldEvent;
    interface ITagCollection <T> {
        func_232973_a_(arg0: Internal.ITag<T>): ResourceLocation;
        func_199910_a(arg0: ResourceLocation_): Internal.ITag<T>;
        func_199913_a(arg0: T): Internal.Collection<ResourceLocation>;
        func_232975_b_(arg0: Internal.ITag<T>): ResourceLocation;
        func_241834_b(arg0: ResourceLocation_): Internal.ITag<T>;
        func_241833_a(): Internal.Map<ResourceLocation, Internal.ITag<T>>;
        func_242203_a(arg0: Internal.PacketBuffer, arg1: Internal.DefaultedRegistry<T>): void;
        func_199908_a(): Internal.Collection<ResourceLocation>;
    }
    type ITagCollection_<T> = ITagCollection<T>;
    class DynamicTexture extends Internal.Texture {
        func_195414_e(): Internal.NativeImage;
        func_110564_a(): void;
        func_195415_a(arg0: Internal.NativeImage): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.NativeImage);
        constructor(arg0: number, arg1: number, arg2: boolean);
    }
    type DynamicTexture_ = DynamicTexture;
    class CachedBlockInfo extends Document.Object {
        func_196960_c(): Internal.IWorldReader;
        static func_177510_a(arg0: Internal.Predicate_<Internal.BlockState_>): Internal.Predicate<Internal.CachedBlockInfo>;
        func_177509_a(): Internal.BlockState;
        func_177507_b(): Internal.TileEntity;
        func_177508_d(): BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: boolean);
    }
    type CachedBlockInfo_ = CachedBlockInfo;
    class MaterialColor extends Document.Object {
        func_151643_b(arg0: number): number;
        static readonly field_76281_a: Internal.MaterialColor[];
        static readonly field_151658_d: Internal.MaterialColor;
        static readonly field_151656_f: Internal.MaterialColor;
        static readonly field_151646_E: Internal.MaterialColor;
        static readonly field_241543_af_: Internal.MaterialColor;
        static readonly field_151675_r: Internal.MaterialColor;
        static readonly field_151677_p: Internal.MaterialColor;
        static readonly field_151673_t: Internal.MaterialColor;
        static readonly field_151671_v: Internal.MaterialColor;
        static readonly field_193572_X: Internal.MaterialColor;
        static readonly field_197656_x: Internal.MaterialColor;
        static readonly field_193574_Z: Internal.MaterialColor;
        static readonly field_151648_G: Internal.MaterialColor;
        static readonly field_193562_N: Internal.MaterialColor;
        static readonly field_193564_P: Internal.MaterialColor;
        static readonly field_241542_ae_: Internal.MaterialColor;
        static readonly field_151652_H: Internal.MaterialColor;
        static readonly field_193565_Q: Internal.MaterialColor;
        static readonly field_197655_T: Internal.MaterialColor;
        static readonly field_151654_J: Internal.MaterialColor;
        static readonly field_151668_h: Internal.MaterialColor;
        static readonly field_151666_j: Internal.MaterialColor;
        static readonly field_151664_l: Internal.MaterialColor;
        static readonly field_151662_n: Internal.MaterialColor;
        static readonly field_193567_S: Internal.MaterialColor;
        static readonly field_241540_ac_: Internal.MaterialColor;
        static readonly field_193570_V: Internal.MaterialColor;
        static readonly field_151650_B: Internal.MaterialColor;
        static readonly field_151660_b: Internal.MaterialColor;
        static readonly field_151678_z: Internal.MaterialColor;
        readonly field_76290_q: number;
        static readonly field_151649_A: Internal.MaterialColor;
        static readonly field_151645_D: Internal.MaterialColor;
        static readonly field_151676_q: Internal.MaterialColor;
        static readonly field_151674_s: Internal.MaterialColor;
        static readonly field_151672_u: Internal.MaterialColor;
        static readonly field_151670_w: Internal.MaterialColor;
        static readonly field_193571_W: Internal.MaterialColor;
        static readonly field_151647_F: Internal.MaterialColor;
        static readonly field_151659_e: Internal.MaterialColor;
        static readonly field_151657_g: Internal.MaterialColor;
        static readonly field_193573_Y: Internal.MaterialColor;
        static readonly field_193560_ab: Internal.MaterialColor;
        static readonly field_241539_ab_: Internal.MaterialColor;
        static readonly field_193561_M: Internal.MaterialColor;
        static readonly field_193563_O: Internal.MaterialColor;
        static readonly field_241545_ah_: Internal.MaterialColor;
        static readonly field_151653_I: Internal.MaterialColor;
        static readonly field_241541_ad_: Internal.MaterialColor;
        static readonly field_193559_aa: Internal.MaterialColor;
        static readonly field_193566_R: Internal.MaterialColor;
        static readonly field_241544_ag_: Internal.MaterialColor;
        static readonly field_151655_K: Internal.MaterialColor;
        static readonly field_151669_i: Internal.MaterialColor;
        static readonly field_151667_k: Internal.MaterialColor;
        static readonly field_151665_m: Internal.MaterialColor;
        static readonly field_151663_o: Internal.MaterialColor;
        static readonly field_193568_T: Internal.MaterialColor;
        static readonly field_151651_C: Internal.MaterialColor;
        static readonly field_151661_c: Internal.MaterialColor;
        static readonly field_151679_y: Internal.MaterialColor;
        readonly field_76291_p: number;
    }
    type MaterialColor_ = MaterialColor;
    /**
    */
    interface Map <K, V> {
        getOrDefault(arg0: any, arg1: V): V;
        computeIfAbsent(arg0: K, arg1: Internal.Function_<K, V>): V;
        values(): Internal.Collection<V>;
        replace(arg0: K, arg1: V, arg2: V): boolean;
        replace(arg0: K, arg1: V): V;
        replaceAll(arg0: Internal.BiFunction_<K, V, V>): void;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): V;
        remove(arg0: any, arg1: any): boolean;
        remove(arg0: any): V;
        compute(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        hashCode(): number;
        putAll(arg0: Internal.Map_<K, V>): void;
        merge(arg0: K, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        get(arg0: any): V;
        keySet(): Internal.Set<K>;
        entrySet(): Internal.Set<Internal.Map$Entry<K, V>>;
        containsKey(arg0: any): boolean;
        forEach(arg0: Internal.BiConsumer_<K, V>): void;
        isEmpty(): boolean;
        clear(): void;
        computeIfPresent(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        size(): number;
        equals(arg0: any): boolean;
        putIfAbsent(arg0: K, arg1: V): V;
    }
    type Map_<K, V> = {[key in K]: V} | Map<K, V>;
    class OcelotEntity extends Internal.AnimalEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_70619_bc(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        static func_234201_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        static func_223319_c(arg0: Internal.EntityType_<Internal.OcelotEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.OcelotEntity;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        static field_195402_bB: Internal.Ingredient;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.OcelotEntity>, arg1: Internal.World);
    }
    type OcelotEntity_ = OcelotEntity;
    class Painter extends Document.Object {
        getObject(key: string): Internal.PainterObject;
        clear(): void;
        paint(root: Internal.CompoundNBT_): void;
        setVariable(key: string, variable: dev.latvian.mods.rhino.util.unit.Unit): void;
        make(type: string): Internal.PainterObject;
        readonly unitStorage: Internal.UnitStorage;
        static readonly LEFT: -1;
        static readonly RANDOM: Internal.Random;
        static readonly DRAW_INGAME: 1;
        static readonly INSTANCE: Internal.Painter;
        static readonly BOTTOM: 1;
        readonly screenHeightUnit: Internal.MutableUnit;
        static readonly DRAW_GUI: 2;
        static readonly CENTER: 0;
        readonly screenWidthUnit: Internal.MutableUnit;
        static readonly DRAW_ALWAYS: 0;
        static readonly TOP: -1;
        readonly mouseXUnit: Internal.MutableUnit;
        readonly mouseYUnit: Internal.MutableUnit;
        readonly deltaUnit: Internal.MutableUnit;
        static readonly RIGHT: 1;
    }
    type Painter_ = Painter;
    class SEntityStatusPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149161_a(arg0: Internal.World): Internal.Entity;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149160_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity, arg1: number);
    }
    type SEntityStatusPacket_ = SEntityStatusPacket;
    abstract class Team extends Internal.TeamBase {
        msg(arg0: Internal.ServerPlayerEntity, arg1: string): number;
        settings(arg0: Internal.CommandSource, arg1: Internal.TeamProperty<any>, arg2: string): number;
        serializeNBT(): Internal.SNBTCompoundTag;
        getOnlineMembers(): Internal.List<Internal.ServerPlayerEntity>;
        sendMessage(arg0: Internal.UUID, arg1: Internal.ITextComponent_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        getOwner(): Internal.UUID;
        getOnlineRanked(arg0: Internal.TeamRank_): Internal.List<Internal.ServerPlayerEntity>;
        denyInvite(arg0: Internal.CommandSource): number;
        info(arg0: Internal.CommandSource): number;
        readonly manager: Internal.TeamManager;
        get owner(): Internal.UUID;
        get onlineMembers(): Internal.List<Internal.ServerPlayerEntity>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TeamManager);
    }
    type Team_ = Team;
    class Score extends Document.Object {
        func_96652_c(): number;
        func_178815_a(arg0: boolean): void;
        func_96647_c(arg0: number): void;
        func_96649_a(arg0: number): void;
        func_96645_d(): Internal.ScoreObjective;
        func_96648_a(): void;
        func_197891_c(): void;
        func_96650_f(): Internal.Scoreboard;
        func_96653_e(): string;
        func_178816_g(): boolean;
        static readonly field_96658_a: Internal.Comparator<Internal.Score>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Scoreboard, arg1: Internal.ScoreObjective, arg2: string);
    }
    type Score_ = Score;
    interface IResourceManagerReloadListener extends Internal.IFutureReloadListener {
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage_, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        getResourceType(): Internal.IResourceType;
        (arg0: Internal.IResourceManager): void;
    }
    type IResourceManagerReloadListener_ = ((arg0: Internal.IResourceManager)=>void) | IResourceManagerReloadListener;
    class StructureFeature <FC, F> extends Document.Object {
        func_242771_a(arg0: Internal.DynamicRegistries, arg1: Internal.ChunkGenerator, arg2: Internal.BiomeProvider, arg3: Internal.TemplateManager, arg4: number, arg5: Internal.ChunkPos, arg6: Internal.Biome_, arg7: number, arg8: Internal.StructureSeparationSettings): Internal.StructureStart<any>;
        static readonly field_244391_b_: Internal.Codec<java_.util.function_.Supplier<Internal.StructureFeature<any, any>>>;
        readonly field_236268_b_: F;
        static readonly field_236267_a_: Internal.Codec<Internal.StructureFeature<any, any>>;
        readonly field_236269_c_: FC;
        static readonly field_242770_c: Internal.Codec<Internal.List<java_.util.function_.Supplier<Internal.StructureFeature<any, any>>>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: F, arg1: FC);
    }
    type StructureFeature_<FC, F> = StructureFeature<FC, F>;
    class StarConnection extends Internal.BiDiPair<Internal.StarLocation, Internal.StarLocation> {
        readonly from: Internal.StarLocation;
        readonly to: Internal.StarLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.StarLocation, arg1: Internal.StarLocation);
    }
    type StarConnection_ = StarConnection;
    abstract class ValueBoxTransform extends Document.Object {
        transform(arg0: Internal.BlockState, arg1: Internal.MatrixStack): void;
        testHit(arg0: Internal.BlockState, arg1: Vec3): boolean;
        shouldRender(arg0: Internal.BlockState): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ValueBoxTransform_ = ValueBoxTransform;
    interface ILootCondition extends Internal.IParameterized, Internal.Predicate<Internal.LootContext> {
        func_230419_b_(): Internal.LootConditionType;
        (): Internal.LootConditionType;
    }
    type ILootCondition_ = (()=>Internal.LootConditionType) | ILootCondition;
    class WorldRenderer extends Document.Object implements Internal.IResourceManagerReloadListener, Internal.AutoCloseable, Internal.WorldRendererAccess, Internal.AccessorWorldRenderer, Internal.WorldRendererExtended {
        func_224746_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.BlockState): void;
        func_72734_e(): void;
        func_195461_a(arg0: Internal.IParticleData, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        func_180439_a(arg0: Internal.PlayerEntity, arg1: number, arg2: BlockPos, arg3: number): void;
        func_72732_a(arg0: Internal.ClientWorld): void;
        handler$bam000$renderLevel(ci: Internal.CallbackInfo): void;
        func_228429_a_(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.Entity, arg3: number, arg4: number, arg5: number, arg6: BlockPos, arg7: Internal.BlockState): void;
        handler$cag001$renderSky(arg0: Internal.MatrixStack, arg1: number, arg2: Internal.CallbackInfo): void;
        func_228426_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: boolean, arg4: Internal.ActiveRenderInfo, arg5: Internal.GameRenderer, arg6: Internal.LightTexture, arg7: Internal.Matrix4f): void;
        func_184376_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.BlockState, arg4: number): void;
        handler$ceg000$afterTESRRender(matrixStackIn: Internal.MatrixStack, partialTicks: number, finishTimeNano: number, drawBlockOutline: boolean, activeRenderInfoIn: Internal.ActiveRenderInfo, gameRendererIn: Internal.GameRenderer, lightmapIn: Internal.LightTexture, projectionIn: Internal.Matrix4f, ci: Internal.CallbackInfo): void;
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage_, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        func_174966_b(): void;
        func_228436_a_(arg0: Internal.ActiveRenderInfo): void;
        func_228448_p_(): Internal.Framebuffer;
        func_72728_f(): void;
        localvar$bam000$modifyPoseStack(poseStack: Internal.MatrixStack): Internal.MatrixStack;
        func_195471_b(arg0: Internal.IParticleData, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.Particle;
        func_239230_s_(): Internal.Framebuffer;
        getSkyVBO(): Internal.VertexBuffer;
        func_239232_u_(): Internal.Framebuffer;
        func_239231_t_(): Internal.Framebuffer;
        func_72720_a(arg0: number, arg1: number): void;
        func_180440_a(arg0: number, arg1: BlockPos, arg2: number): void;
        func_228425_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number): void;
        localvar$bam000$modifyPartialTicks(partialTicks: number): number;
        static func_228421_a_(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): number;
        static func_228431_a_(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.VoxelShape, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        func_215328_b(arg0: number, arg1: number, arg2: number): void;
        func_195462_a(arg0: Internal.IParticleData, arg1: boolean, arg2: boolean, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): void;
        func_215321_a(x: number, y: number, z: number): void;
        func_181023_a(arg0: Internal.Collection<Internal.TileEntity>, arg1: Internal.Collection<Internal.TileEntity>): void;
        func_147585_a(minX: number, minY: number, minZ: number, maxX: number, maxY: number, maxZ: number): void;
        func_72735_c(): string;
        func_72712_a(): void;
        func_184377_a(arg0: Internal.SoundEvent_, arg1: BlockPos): void;
        static func_228428_a_(matrices: Internal.MatrixStack, vertexConsumer: Internal.IVertexBuilder, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, red: number, green: number, blue: number, alpha: number, xAxisRed: number, yAxisGreen: number, zAxisBlue: number): void;
        func_228424_a_(arg0: Internal.MatrixStack, arg1: number): void;
        static func_228430_a_(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.AxisAlignedBB, arg3: number, arg4: number, arg5: number, arg6: number): void;
        getResourceType(): Internal.IResourceType;
        static func_228420_a_(arg0: Internal.IBlockDisplayReader, arg1: Internal.BlockState, arg2: BlockPos): number;
        static func_189693_b(arg0: Internal.BufferBuilder, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number): void;
        close(): void;
        getSodiumWorldRenderer(): Internal.SodiumWorldRenderer;
        func_239228_q_(): Internal.Framebuffer;
        func_239229_r_(): Internal.Framebuffer;
        getStarVBO(): Internal.VertexBuffer;
        func_225594_i_(): string;
        func_174979_m(): void;
        playRecord(arg0: Internal.SoundEvent_, arg1: BlockPos, arg2: Internal.MusicDiscItem): void;
        static func_228445_b_(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.VoxelShape, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        func_180441_b(arg0: number, arg1: BlockPos, arg2: number): void;
        func_72723_d(): string;
        func_195469_b(arg0: Internal.IParticleData, arg1: boolean, arg2: boolean, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.Particle;
        func_184382_g(): number;
        static func_228427_a_(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number): void;
        callRenderHitOutline(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.Entity, arg3: number, arg4: number, arg5: number, arg6: BlockPos, arg7: Internal.BlockState): void;
        func_174975_c(): void;
        handler$chk000$playRecord(arg0: Internal.SoundEvent_, arg1: BlockPos, arg2: Internal.MusicDiscItem, arg3: Internal.CallbackInfo): void;
        getSkyVertexFormat(): Internal.VertexFormat;
        func_184384_n(): boolean;
        readonly field_147593_P: Internal.Map<BlockPos, Internal.ISound>;
        field_175008_n: Internal.ViewFrustum;
        field_175001_U: Internal.ClippingHelper;
        static readonly field_200006_a: Internal.Direction[];
        readonly field_228415_m_: Internal.RenderTypeBuffers;
        readonly field_72738_E: Internal.Int2ObjectMap<Internal.DestroyBlockProgress>;
        readonly field_228407_B_: Internal.Long2ObjectMap<Internal.SortedSet<Internal.DestroyBlockProgress>>;
        readonly field_175003_W: Internal.Tuple3d;
        get sodiumWorldRenderer(): Internal.SodiumWorldRenderer;
        get skyVertexFormat(): Internal.VertexFormat;
        get skyVBO(): Internal.VertexBuffer;
        get starVBO(): Internal.VertexBuffer;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft, arg1: Internal.RenderTypeBuffers);
    }
    type WorldRenderer_ = WorldRenderer;
    interface DoubleConsumer {
        andThen(arg0: Internal.DoubleConsumer_): Internal.DoubleConsumer;
        accept(arg0: number): void;
        (arg0: number): void;
    }
    type DoubleConsumer_ = ((arg0: number)=>void) | DoubleConsumer;
    class Teleporter extends Document.Object implements Internal.ITeleporter {
        getPortalInfo(arg0: Internal.Entity, arg1: Internal.ServerWorld, arg2: Internal.Function_<Internal.ServerWorld_, Internal.PortalInfo_>): Internal.PortalInfo;
        func_242956_a(arg0: BlockPos, arg1: Internal.Direction$Axis_): Internal.Optional<Internal.TeleportationRepositioner$Result>;
        isVanilla(): boolean;
        func_242957_a(arg0: BlockPos, arg1: boolean): Internal.Optional<Internal.TeleportationRepositioner$Result>;
        playTeleportSound(arg0: Internal.ServerPlayerEntity, arg1: Internal.ServerWorld, arg2: Internal.ServerWorld): boolean;
        placeEntity(arg0: Internal.Entity, arg1: Internal.ServerWorld, arg2: Internal.ServerWorld, arg3: number, arg4: Internal.Function_<boolean, Internal.Entity_>): Internal.Entity;
        get vanilla(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ServerWorld);
    }
    type Teleporter_ = Teleporter;
    class FireworkStarRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        static readonly field_196215_d: {};
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type FireworkStarRecipe_ = FireworkStarRecipe;
    interface ITutorialStep {
        func_193251_c(): void;
        func_193252_a(arg0: Internal.ItemStack): void;
        func_195870_a(arg0: number, arg1: number): void;
        func_193246_a(arg0: Internal.ClientWorld, arg1: Internal.RayTraceResult): void;
        func_193247_a(arg0: Internal.MovementInput): void;
        func_193245_a(): void;
        func_193248_b(): void;
        func_193250_a(arg0: Internal.ClientWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: number): void;
    }
    type ITutorialStep_ = ITutorialStep;
    interface BiMap <K, V> extends Internal.Map<K, V> {
        inverse(): Internal.BiMap<V, K>;
        forcePut(arg0: K, arg1: V): V;
        putAll(arg0: Internal.Map_<K, V>): void;
        values(): Internal.Collection<any>;
        values(): Internal.Set<V>;
        put(arg0: K, arg1: V): V;
    }
    type BiMap_<K, V> = BiMap<K, V>;
    interface IntCollection extends Internal.Collection<number>, Internal.IntIterable {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        add(arg0: number): boolean;
        removeAll(arg0: Internal.IntCollection): boolean;
        contains(arg0: any): boolean;
        contains(arg0: number): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.IntIterator;
        addAll(arg0: Internal.IntCollection): boolean;
        toIntArray(): number[];
        toIntArray(arg0: number[]): number[];
        containsAll(arg0: Internal.IntCollection): boolean;
        toArray(arg0: number[]): number[];
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.IntCollection): boolean;
        removeIf(arg0: Internal.IntPredicate_): boolean;
        removeIf(arg0: Internal.Predicate_<number>): boolean;
    }
    type IntCollection_ = IntCollection;
    class Gas extends Internal.Chemical<Internal.Gas> implements Internal.IGasProvider {
        static readFromNBT(arg0: Internal.CompoundNBT_): Internal.Gas;
        getName(): string;
        getStack(arg0: number): Internal.GasStack;
        getStack(arg0: number): Internal.ChemicalStack<any>;
        setRegistryName(arg0: ResourceLocation_): any;
        static getFromRegistry(arg0: ResourceLocation_): Internal.Gas;
        get name(): string;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
    }
    type Gas_ = Registry.mekanism.gas | Gas;
    class PistonTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity, Internal.IBlockHolder {
        func_212363_d(): Internal.Direction;
        func_211146_k(): number;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_195508_a(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        getHeldBlock(): Internal.BlockState;
        getHeldBlock(arg0: number): Internal.BlockState;
        func_73660_a(): void;
        func_174928_c(arg0: number): number;
        func_174929_b(arg0: number): number;
        func_145860_a(arg0: number): number;
        func_195509_h(): Internal.Direction;
        func_174926_d(arg0: number): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        requestModelDataUpdate(): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        setHeldBlock(arg0: Internal.BlockState): boolean;
        setHeldBlock(arg0: Internal.BlockState, arg1: number): boolean;
        getModelData(): Internal.IModelData;
        func_145868_b(): boolean;
        func_145867_d(): boolean;
        onLoad(): void;
        func_145866_f(): void;
        func_200230_i(): Internal.BlockState;
        handler$zjm002$tick(arg0: Internal.CallbackInfo): void;
        get modelData(): Internal.IModelData;
        get heldBlock(): Internal.BlockState;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        set heldBlock(arg0: Internal.BlockState);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.BlockState, arg1: Internal.Direction, arg2: boolean, arg3: boolean);
    }
    type PistonTileEntity_ = PistonTileEntity;
    class WorldSummary extends Document.Object implements Internal.Comparable<Internal.WorldSummary> {
        func_75783_h(): boolean;
        func_75788_b(): string;
        func_75785_d(): boolean;
        func_237312_c_(): Internal.File;
        func_75784_e(): number;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.WorldSummary): number;
        func_75789_g(): boolean;
        func_75790_f(): Internal.GameType;
        func_237313_j_(): Internal.IFormattableTextComponent;
        func_237314_k_(): Internal.VersionData;
        func_186355_l(): boolean;
        func_75786_a(): string;
        func_186356_m(): boolean;
        func_237315_o_(): boolean;
        func_237316_p_(): Internal.ITextComponent;
        func_197731_n(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.WorldSettings, arg1: Internal.VersionData, arg2: string, arg3: boolean, arg4: boolean, arg5: Internal.File);
    }
    type WorldSummary_ = WorldSummary;
    class LecternContainer extends Internal.Container {
        func_217016_e(): Internal.ItemStack;
        func_217017_f(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
        constructor(arg0: number, arg1: Internal.IInventory, arg2: Internal.IIntArray);
    }
    type LecternContainer_ = LecternContainer;
    class Proxy$Type extends Internal.Enum<Internal.Proxy$Type> {
        static valueOf(arg0: string): Internal.Proxy$Type;
        static values(): Internal.Proxy$Type[];
        static readonly SOCKS: Internal.Proxy$Type;
        static readonly HTTP: Internal.Proxy$Type;
        static readonly DIRECT: Internal.Proxy$Type;
    }
    type Proxy$Type_ = "direct" | "http" | "socks" | Proxy$Type;
    class PageAttributes extends Document.Object implements Internal.Cloneable {
        setOrientationRequestedToDefault(): void;
        getOrientationRequested(): Internal.PageAttributes$OrientationRequestedType;
        getMedia(): Internal.PageAttributes$MediaType;
        set(arg0: Internal.PageAttributes): void;
        getOrigin(): Internal.PageAttributes$OriginType;
        setOrigin(arg0: Internal.PageAttributes$OriginType): void;
        setPrintQualityToDefault(): void;
        getColor(): Internal.PageAttributes$ColorType;
        setOrientationRequested(arg0: number): void;
        setOrientationRequested(arg0: Internal.PageAttributes$OrientationRequestedType): void;
        setPrinterResolutionToDefault(): void;
        setPrintQuality(arg0: Internal.PageAttributes$PrintQualityType): void;
        setPrintQuality(arg0: number): void;
        getPrintQuality(): Internal.PageAttributes$PrintQualityType;
        setMediaToDefault(): void;
        setColor(arg0: Internal.PageAttributes$ColorType): void;
        getPrinterResolution(): number[];
        clone(): any;
        setMedia(arg0: Internal.PageAttributes$MediaType): void;
        setPrinterResolution(arg0: number[]): void;
        setPrinterResolution(arg0: number): void;
        get color(): Internal.PageAttributes$ColorType;
        get orientationRequested(): Internal.PageAttributes$OrientationRequestedType;
        get origin(): Internal.PageAttributes$OriginType;
        get printerResolution(): number[];
        get printQuality(): Internal.PageAttributes$PrintQualityType;
        get media(): Internal.PageAttributes$MediaType;
        set color(arg0: Internal.PageAttributes$ColorType);
        set orientationRequested(arg0: Internal.PageAttributes$OrientationRequestedType);
        set printerResolution(arg0: number[]);
        set origin(arg0: Internal.PageAttributes$OriginType);
        set printQuality(arg0: Internal.PageAttributes$PrintQualityType);
        set media(arg0: Internal.PageAttributes$MediaType);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PageAttributes$ColorType, arg1: Internal.PageAttributes$MediaType, arg2: Internal.PageAttributes$OrientationRequestedType, arg3: Internal.PageAttributes$OriginType, arg4: Internal.PageAttributes$PrintQualityType, arg5: number[]);
        constructor(arg0: Internal.PageAttributes);
        constructor();
    }
    type PageAttributes_ = PageAttributes;
    class BlockColors extends Document.Object implements Internal.BlockColorsExtended {
        func_228054_a_(arg0: Internal.BlockState, arg1: Internal.IBlockDisplayReader, arg2: BlockPos, arg3: number): number;
        func_189991_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos): number;
        getColorProvider(state: Internal.BlockState): Internal.IBlockColor;
        func_225310_a(arg0: Internal.Block_): Internal.Set<Internal.Property<any>>;
        func_186722_a(arg0: Internal.IBlockColor_, ...arg1: Internal.Block[]): void;
        static func_186723_a(): Internal.BlockColors;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BlockColors_ = BlockColors;
    class WorldEvent$Save extends Internal.WorldEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IWorld);
        constructor();
    }
    type WorldEvent$Save_ = WorldEvent$Save;
    abstract class TypeAdapter <T> extends Document.Object {
        toJson(arg0: T): string;
        toJson(arg0: Internal.Writer, arg1: T): void;
        read(arg0: Internal.JsonReader): T;
        toJsonTree(arg0: T): Internal.JsonElement;
        fromJson(arg0: Internal.Reader): T;
        fromJson(arg0: string): T;
        nullSafe(): Internal.TypeAdapter<T>;
        write(arg0: Internal.JsonWriter, arg1: T): void;
        fromJsonTree(arg0: Internal.JsonElement): T;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TypeAdapter_<T> = TypeAdapter<T>;
    class NamespacedNBT extends Document.Object implements Internal.INamespacedNBTReadOnly {
        getCompound(arg0: ResourceLocation_): Internal.CompoundNBT;
        static readFromNBT(arg0: Internal.CompoundNBT_): Internal.NamespacedNBT;
        putInt(arg0: ResourceLocation_, arg1: number): void;
        putString(arg0: ResourceLocation_, arg1: string): void;
        getString(arg0: ResourceLocation_): string;
        getFloat(arg0: ResourceLocation_): number;
        copyFrom(arg0: Internal.CompoundNBT_): void;
        put(arg0: ResourceLocation_, arg1: Internal.INBT): void;
        remove(arg0: ResourceLocation_): void;
        getInt(arg0: ResourceLocation_): number;
        putFloat(arg0: ResourceLocation_, arg1: number): void;
        contains(arg0: ResourceLocation_, arg1: number): boolean;
        getCopy(): Internal.CompoundNBT;
        get<T_>(arg0: ResourceLocation_, arg1: Internal.BiFunction_<Internal.CompoundNBT_, string, T_>): T_;
        get(arg0: ResourceLocation_): Internal.INBT;
        getBoolean(arg0: ResourceLocation_): boolean;
        putBoolean(arg0: ResourceLocation_, arg1: boolean): void;
        get copy(): Internal.CompoundNBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type NamespacedNBT_ = NamespacedNBT;
    class SignTileEntity extends Internal.TileEntity implements Internal.IGlowable {
        func_212365_a(arg0: number, arg1: Internal.ITextComponent_): void;
        func_212366_a(arg0: number): Internal.ITextComponent;
        func_214068_a(arg0: Internal.DyeColor_): boolean;
        handler$bpi000$writeGlowing(arg0: Internal.CompoundNBT_, arg1: Internal.CallbackInfoReturnable<any>): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_214066_f(): Internal.DyeColor;
        setGlowing(arg0: boolean): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_174882_b(arg0: Internal.PlayerEntity): boolean;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        func_145913_a(arg0: boolean): void;
        func_145914_a(): boolean;
        isGlowing(): boolean;
        func_242686_a(arg0: number, arg1: Internal.Function_<Internal.ITextComponent_, Internal.IReorderingProcessor_>): Internal.IReorderingProcessor;
        func_145911_b(): Internal.PlayerEntity;
        func_145912_a(arg0: Internal.PlayerEntity): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        requestModelDataUpdate(): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_195539_a(arg0: Internal.ServerPlayerEntity): Internal.CommandSource;
        getModelData(): Internal.IModelData;
        handler$bpi000$readGlowing(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_, arg2: Internal.CallbackInfo): void;
        onLoad(): void;
        field_145916_j: boolean;
        readonly field_145915_a: Internal.ITextComponent[];
        get modelData(): Internal.IModelData;
        get glowing(): boolean;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        set glowing(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SignTileEntity_ = SignTileEntity;
    interface MouseWheelListener extends Internal.EventListener {
        mouseWheelMoved(arg0: Internal.MouseWheelEvent): void;
        (arg0: Internal.MouseWheelEvent): void;
    }
    type MouseWheelListener_ = ((arg0: Internal.MouseWheelEvent)=>void) | MouseWheelListener;
    interface ISoundEventListener {
        func_184067_a(arg0: Internal.ISound, arg1: Internal.SoundEventAccessor): void;
        (arg0: Internal.ISound, arg1: Internal.SoundEventAccessor): void;
    }
    type ISoundEventListener_ = ((arg0: Internal.ISound, arg1: Internal.SoundEventAccessor)=>void) | ISoundEventListener;
    class TinkerDataCapability$TinkerDataKey <T> extends Document.Object {
        static of<T_>(arg0: ResourceLocation_): Internal.TinkerDataCapability$TinkerDataKey<T_>;
    }
    type TinkerDataCapability$TinkerDataKey_<T> = TinkerDataCapability$TinkerDataKey<T>;
    abstract class GlBuffer extends Internal.GlObject {
        getUsageHint(): Internal.GlBufferUsage;
        static readonly NULL_BUFFER_ID: 0;
        get usageHint(): Internal.GlBufferUsage;
    }
    type GlBuffer_ = GlBuffer;
    abstract class FileStore extends Document.Object {
        getTotalSpace(): number;
        getAttribute(arg0: string): any;
        getUsableSpace(): number;
        isReadOnly(): boolean;
        getBlockSize(): number;
        supportsFileAttributeView(arg0: string): boolean;
        supportsFileAttributeView(arg0: Internal.Class<Internal.FileAttributeView>): boolean;
        name(): string;
        type(): string;
        getUnallocatedSpace(): number;
        getFileStoreAttributeView<V_>(arg0: Internal.Class<V_>): V_;
        get unallocatedSpace(): number;
        get readOnly(): boolean;
        get totalSpace(): number;
        get usableSpace(): number;
        get blockSize(): number;
    }
    type FileStore_ = FileStore;
    interface Table <R, C, V> {
        cellSet(): Internal.Set<Internal.Table$Cell<R, C, V>>;
        values(): Internal.Collection<V>;
        column(arg0: C): Internal.Map<R, V>;
        isEmpty(): boolean;
        clear(): void;
        containsValue(arg0: any): boolean;
        put(arg0: R, arg1: C, arg2: V): V;
        remove(arg0: any, arg1: any): V;
        columnMap(): Internal.Map<C, Internal.Map<R, V>>;
        contains(arg0: any, arg1: any): boolean;
        containsColumn(arg0: any): boolean;
        size(): number;
        columnKeySet(): Internal.Set<C>;
        hashCode(): number;
        putAll(arg0: Internal.Table<R, C, V>): void;
        equals(arg0: any): boolean;
        get(arg0: any, arg1: any): V;
        rowMap(): Internal.Map<R, Internal.Map<C, V>>;
        rowKeySet(): Internal.Set<R>;
        row(arg0: R): Internal.Map<C, V>;
        containsRow(arg0: any): boolean;
    }
    type Table_<R, C, V> = Table<R, C, V>;
    class SnowGolemEntity extends Internal.GolemEntity implements Internal.IShearable, Internal.IRangedAttackMob, Internal.IForgeShearable {
        shouldRiderSit(): boolean;
        static func_234226_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_230262_K__(): boolean;
        func_184747_a(arg0: boolean): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        onSheared(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack, arg2: Internal.World, arg3: BlockPos, arg4: number): Internal.List<Internal.ItemStack>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_184748_o(): boolean;
        func_230263_a_(arg0: Internal.SoundCategory_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        isShearable(arg0: Internal.ItemStack, arg1: Internal.World, arg2: BlockPos): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.SnowGolemEntity>, arg1: Internal.World);
    }
    type SnowGolemEntity_ = SnowGolemEntity;
    class GuiScreenEvent$MouseDragEvent$Post extends Internal.GuiScreenEvent$MouseDragEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number);
    }
    type GuiScreenEvent$MouseDragEvent$Post_ = GuiScreenEvent$MouseDragEvent$Post;
    class ForgeConfigSpec$Range <V> extends Document.Object implements Internal.Predicate<any> {
        getClazz(): Internal.Class<V>;
        or(arg0: Internal.Predicate_<any>): Internal.Predicate<any>;
        correct(arg0: any, arg1: any): any;
        getMin(): V;
        test(arg0: any): boolean;
        and(arg0: Internal.Predicate_<any>): Internal.Predicate<any>;
        negate(): Internal.Predicate<any>;
        getMax(): V;
        get min(): V;
        get max(): V;
        get clazz(): Internal.Class<V>;
    }
    type ForgeConfigSpec$Range_<V> = ForgeConfigSpec$Range<V>;
    class PufferfishEntity extends Internal.AbstractFishEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_203714_a(arg0: number): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_203715_dA(): number;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.PufferfishEntity>, arg1: Internal.World);
    }
    type PufferfishEntity_ = PufferfishEntity;
    class SUnloadChunkPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186941_b(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_186940_a(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number);
    }
    type SUnloadChunkPacket_ = SUnloadChunkPacket;
    class Long2ObjectLinkedOpenHashMap <V> extends Internal.AbstractLong2ObjectSortedMap<V> implements Internal.Serializable, Internal.Cloneable, Internal.Hash {
        long2ObjectEntrySet(): Internal.Long2ObjectSortedMap$FastSortedEntrySet<V>;
        long2ObjectEntrySet(): Internal.ObjectSet<any>;
        long2ObjectEntrySet(): Internal.ObjectSortedSet<any>;
        getOrDefault(arg0: number, arg1: V): V;
        getOrDefault(arg0: any, arg1: V): V;
        sequencedKeySet(): Internal.SequencedSet<number>;
        computeIfAbsent(arg0: number, arg1: Internal.LongFunction_<V>): V;
        computeIfAbsent(arg0: any, arg1: Internal.Function_<any,any>): any;
        computeIfAbsent(arg0: number, arg1: Internal.Function_<number, V>): V;
        values(): Internal.Collection<any>;
        values(): Internal.ObjectCollection<V>;
        putAndMoveToLast(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        getAndMoveToLast(arg0: number): V;
        computeIfAbsentPartial(arg0: number, arg1: Internal.Long2ObjectFunction_<V>): V;
        replaceAll(arg0: Internal.BiFunction_<number, V, V>): void;
        removeLast(): V;
        andThen<V_>(arg0: Internal.Function_<V, V_>): Internal.Function<number, V_>;
        put(arg0: number, arg1: V): V;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        remove(arg0: number): V;
        remove(arg0: any): V;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        compute(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        pollFirstEntry(): Internal.Map$Entry<number, V>;
        putAndMoveToFirst(arg0: number, arg1: V): V;
        getAndMoveToFirst(arg0: number): V;
        trim(arg0: number): boolean;
        trim(): boolean;
        removeFirst(): V;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        get(arg0: number): V;
        get(arg0: any): V;
        lastKey(): any;
        lastKey(): number;
        firstEntry(): Internal.Map$Entry<number, V>;
        putFirst(arg0: number, arg1: V): V;
        keySet(): Internal.Set<any>;
        keySet(): Internal.LongSet;
        putLast(arg0: number, arg1: V): V;
        entrySet(): Internal.ObjectSortedSet<Internal.Map$Entry<number, V>>;
        entrySet(): Internal.ObjectSet<any>;
        entrySet(): Internal.Set<any>;
        apply(arg0: number): V;
        apply(arg0: number): V;
        forEach(arg0: Internal.BiConsumer_<number, V>): void;
        containsKey(arg0: any): boolean;
        subMap(arg0: number, arg1: number): Internal.Long2ObjectSortedMap<V>;
        subMap(arg0: number, arg1: number): Internal.Long2ObjectSortedMap<V>;
        subMap(arg0: any, arg1: any): Internal.SortedMap<any, any>;
        sequencedValues(): Internal.SequencedCollection<V>;
        pollLastEntry(): Internal.Map$Entry<number, V>;
        comparator(): Internal.Comparator<any>;
        lastEntry(): Internal.Map$Entry<number, V>;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compose<V_>(arg0: Internal.Function_<V_, number>): Internal.Function<V_, V>;
        firstKey(): any;
        firstKey(): number;
        clone(): any;
        clone(): Internal.Long2ObjectLinkedOpenHashMap<V>;
        headMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        headMap(arg0: any): Internal.SortedMap<any, any>;
        headMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        sequencedEntrySet(): Internal.SequencedSet<Internal.Map$Entry<number, V>>;
        putIfAbsent(arg0: number, arg1: V): V;
        putIfAbsent(arg0: number, arg1: V): V;
        putIfAbsent(arg0: any, arg1: any): any;
        reversed(): Internal.SortedMap<number, V>;
        reversed(): Internal.SequencedMap<any, any>;
        tailMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        tailMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        tailMap(arg0: any): Internal.SortedMap<any, any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<number, V>);
        constructor(arg0: Internal.Long2ObjectMap<V>, arg1: number);
        constructor(arg0: Internal.Long2ObjectMap<V>);
        constructor(arg0: number[], arg1: V[], arg2: number);
        constructor(arg0: number[], arg1: V[]);
        constructor(arg0: number, arg1: number);
        constructor(arg0: number);
        constructor();
        constructor(arg0: Internal.Map<number, V>, arg1: number);
    }
    type Long2ObjectLinkedOpenHashMap_<V> = Long2ObjectLinkedOpenHashMap<V>;
    class ActiveRenderInfo extends Document.Object implements Internal.ActiveRenderInfoInvokerMixin {
        func_227996_l_(): Internal.Vector3f;
        func_227995_f_(): Internal.Quaternion;
        func_216777_e(): number;
        func_216771_k(): Internal.FluidState;
        func_216778_f(): number;
        func_216786_h(): boolean;
        func_216781_o(): void;
        getBlockAtCamera(): Internal.BlockState;
        func_227997_m_(): Internal.Vector3f;
        func_216780_d(): BlockPos;
        func_216772_a(arg0: Internal.IBlockReader, arg1: Internal.Entity, arg2: boolean, arg3: boolean, arg4: number): void;
        func_216783_a(): void;
        setAnglesInternal(arg0: number, arg1: number): void;
        func_216785_c(): Vec3;
        func_216770_i(): boolean;
        func_216773_g(): Internal.Entity;
        func_216779_a(arg0: number): number;
        callMove(arg0: number, arg1: number, arg2: number): void;
        func_216782_a(arg0: number, arg1: number, arg2: number): void;
        get blockAtCamera(): Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ActiveRenderInfo_ = ActiveRenderInfo;
    interface IRecipeLayoutDrawable extends Internal.IRecipeLayout {
        isMouseOver(arg0: number, arg1: number): boolean;
        drawOverlays(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        getIngredientUnderMouse(arg0: number, arg1: number): any;
        drawRecipe(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        setPosition(arg0: number, arg1: number): void;
    }
    type IRecipeLayoutDrawable_ = IRecipeLayoutDrawable;
    class SheepEntity extends Internal.AnimalEntity implements Internal.IShearable, Internal.IForgeShearable {
        shouldRiderSit(): boolean;
        func_175509_cj(): Internal.DyeColor;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_230263_a_(arg0: Internal.SoundCategory_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        static func_175510_a(arg0: Internal.Random): Internal.DyeColor;
        static func_175513_a(arg0: Internal.DyeColor_): number[];
        func_175512_b(arg0: Internal.DyeColor_): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.SheepEntity;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        func_230262_K__(): boolean;
        onSheared(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack, arg2: Internal.World, arg3: BlockPos, arg4: number): Internal.List<Internal.ItemStack>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_184647_J(): ResourceLocation;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_70893_e(arg0: boolean): void;
        isShearable(arg0: Internal.ItemStack, arg1: Internal.World, arg2: BlockPos): boolean;
        func_70890_k(arg0: number): number;
        handler$zig000$onSheared(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack, arg2: Internal.World, arg3: BlockPos, arg4: number, arg5: Internal.CallbackInfoReturnable<any>): void;
        static func_234225_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70894_j(arg0: number): number;
        constant$zig000$onSheared(arg0: number, arg1: Internal.PlayerEntity, arg2: Internal.ItemStack, arg3: Internal.World, arg4: BlockPos, arg5: number): number;
        func_70892_o(): boolean;
        getClassification(arg0: boolean): Internal.EntityClassification;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.SheepEntity>, arg1: Internal.World);
    }
    type SheepEntity_ = SheepEntity;
    interface SkyblockWorldInfo {
        isGardenOfGlass(): boolean;
        markGardenOfGlass(): void;
    }
    type SkyblockWorldInfo_ = SkyblockWorldInfo;
    /**
    */
    interface RecipeFilter extends Internal.Predicate<Internal.RecipeJS> {
        test(arg0: Internal.RecipeJS): boolean;
        test(arg0: any): boolean;
        (arg0: Internal.RecipeJS): boolean;
    }
    type RecipeFilter_ = Internal.RecipeFilter_[] | {exact?: boolean, not?: Internal.RecipeFilter_, or?: Internal.RecipeFilter_[], id?: string | RegExp, type?: string, group?: string, mod?: string, input?: Internal.IngredientJS_, output?: Internal.IngredientJS_} | ((arg0: Internal.RecipeJS)=>boolean) | RecipeFilter;
    interface ResultConsumer <S> {
        onCommandComplete(arg0: Internal.CommandContext<S>, arg1: boolean, arg2: number): void;
        (arg0: Internal.CommandContext<S>, arg1: boolean, arg2: number): void;
    }
    type ResultConsumer_<S> = ((arg0: Internal.CommandContext<S>, arg1: boolean, arg2: number)=>void) | ResultConsumer<S>;
    interface Algebra {
        apply(arg0: number): Internal.RewriteResult<any, any>;
        toString(arg0: number): string;
    }
    type Algebra_ = Algebra;
    class RecipeBookCategory extends Internal.Enum<Internal.RecipeBookCategory> {
        static valueOf(arg0: string): Internal.RecipeBookCategory;
        static values(): Internal.RecipeBookCategory[];
        static readonly FURNACE: Internal.RecipeBookCategory;
        static readonly BLAST_FURNACE: Internal.RecipeBookCategory;
        static readonly SMOKER: Internal.RecipeBookCategory;
        static readonly CRAFTING: Internal.RecipeBookCategory;
    }
    type RecipeBookCategory_ = "crafting" | "furnace" | "blast_furnace" | "smoker" | RecipeBookCategory;
    class Food extends Document.Object {
        func_221467_c(): boolean;
        func_221464_f(): Internal.List<Internal.Pair<Internal.EffectInstance, number>>;
        func_221465_e(): boolean;
        func_221466_a(): number;
        func_221468_d(): boolean;
        func_221469_b(): number;
        readonly field_221473_d: boolean;
        field_221474_e: boolean;
        field_221471_b: number;
    }
    type Food_ = Food;
    class SceneBuildingUtilJS extends Document.Object implements Internal.ISceneBuildingUtilJS {
        getDefaultState(arg0: ResourceLocation_): Internal.BlockState;
        item(arg0: ResourceLocation_): Internal.RegistryObject<Internal.Item>;
        getGrid(): Internal.SceneBuildingUtil$PositionUtil;
        select(): Internal.SceneBuildingUtil$SelectionUtil;
        getSelect(): Internal.SceneBuildingUtil$SelectionUtil;
        grid(): Internal.SceneBuildingUtil$PositionUtil;
        getVector(): Internal.SceneBuildingUtil$VectorUtil;
        getInternal(): Internal.SceneBuildingUtil;
        vector(): Internal.SceneBuildingUtil$VectorUtil;
        block(arg0: ResourceLocation_): Internal.RegistryObject<Internal.Block>;
        get internal(): Internal.SceneBuildingUtil;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SceneBuildingUtil);
    }
    type SceneBuildingUtilJS_ = SceneBuildingUtilJS;
    class PackMenuClient$Offset extends Document.Object {
        getX(arg0: Internal.ExtendedMenuScreen): number;
        getY(arg0: Internal.ExtendedMenuScreen): number;
        readonly anchor: Internal.AnchorPoint;
        readonly x: number;
        readonly y: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.AnchorPoint, arg1: number, arg2: number);
    }
    type PackMenuClient$Offset_ = PackMenuClient$Offset;
    interface Collector <T, A, R> {
        characteristics(): Internal.Set<Internal.Collector$Characteristics>;
        supplier(): java_.util.function_.Supplier<A>;
        finisher(): Internal.Function<A, R>;
        accumulator(): Internal.BiConsumer<A, T>;
        combiner(): Internal.BinaryOperator<A>;
    }
    type Collector_<T, A, R> = Collector<T, A, R>;
    class SSetPassengersPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186972_b(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_186971_a(): number[];
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity);
    }
    type SSetPassengersPacket_ = SSetPassengersPacket;
    class TypeToken$TypeSet extends Internal.ForwardingSet<Internal.TypeToken<T>> implements Internal.Serializable {
        interfaces(): Internal.TypeToken$TypeSet<>;
        spliterator(): Internal.Spliterator<Internal.TypeToken<Internal.TypeToken<T>>>;
        stream(): Internal.Stream<Internal.TypeToken<Internal.TypeToken<T>>>;
        forEach(arg0: Internal.Consumer_<Internal.TypeToken_<T>>): void;
        classes(): Internal.TypeToken$TypeSet<>;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<Internal.TypeToken<Internal.TypeToken<T>>>;
        rawTypes(): Internal.Set<Internal.Class<Internal.TypeToken<T>>>;
        removeIf(arg0: Internal.Predicate_<Internal.TypeToken_<Internal.TypeToken_<T>>>): boolean;
    }
    type TypeToken$TypeSet_ = TypeToken$TypeSet;
    class DispenserContainer extends Internal.Container {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IInventory);
    }
    type DispenserContainer_ = DispenserContainer;
    class SEntityHeadLookPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_149381_a(arg0: Internal.World): Internal.Entity;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149380_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity, arg1: number);
    }
    type SEntityHeadLookPacket_ = SEntityHeadLookPacket;
    class InventoryFilterItem$FilterSlot extends Document.Object {
        readonly x: number;
        readonly y: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
    }
    type InventoryFilterItem$FilterSlot_ = InventoryFilterItem$FilterSlot;
    interface IMachineComponentBuilder <T> {
        fromComponent(arg0: Internal.IMachineComponent): Internal.IMachineComponentBuilder<T>;
        build(): Internal.IMachineComponentTemplate<T>;
        getType(): Internal.MachineComponentType<T>;
        getProperties(): Internal.List<Internal.IComponentBuilderProperty<any>>;
    }
    type IMachineComponentBuilder_<T> = IMachineComponentBuilder<T>;
    interface WindowAccessor {
        setFramebufferHeight(arg0: number): void;
        setFramebufferWidth(arg0: number): void;
    }
    type WindowAccessor_ = WindowAccessor;
    abstract class UnmodifiableConfigWrapper <C> extends Document.Object implements Internal.UnmodifiableConfig {
        getShortOrElse(arg0: Internal.List<string>, arg1: number): number;
        getShortOrElse(arg0: string, arg1: number): number;
        getByte(arg0: Internal.List<string>): number;
        getByte(arg0: string): number;
        getEnum<T_>(arg0: Internal.List<string>, arg1: Internal.Class<T_>): T_;
        getEnum<T_>(arg0: Internal.List<string>, arg1: Internal.Class<T_>, arg2: Internal.EnumGetMethod_): T_;
        getEnum<T_>(arg0: string, arg1: Internal.Class<T_>): T_;
        getEnum<T_>(arg0: string, arg1: Internal.Class<T_>, arg2: Internal.EnumGetMethod_): T_;
        getLongOrElse(arg0: string, arg1: Internal.LongSupplier_): number;
        getLongOrElse(arg0: Internal.List<string>, arg1: number): number;
        getLongOrElse(arg0: string, arg1: number): number;
        getLongOrElse(arg0: Internal.List<string>, arg1: Internal.LongSupplier_): number;
        getByteOrElse(arg0: string, arg1: number): number;
        getByteOrElse(arg0: Internal.List<string>, arg1: number): number;
        get<T_>(arg0: string): T_;
        get<T_>(arg0: Internal.List<string>): T_;
        valueMap(): Internal.Map<string, any>;
        getEnumOrElse<T_>(arg0: string, arg1: T_, arg2: Internal.EnumGetMethod_): T_;
        getEnumOrElse<T_>(arg0: Internal.List<string>, arg1: Internal.Class<T_>, arg2: java_.util.function_.Supplier_<T_>): T_;
        getEnumOrElse<T_>(arg0: string, arg1: Internal.Class<T_>, arg2: Internal.EnumGetMethod_, arg3: java_.util.function_.Supplier_<T_>): T_;
        getEnumOrElse<T_>(arg0: Internal.List<string>, arg1: T_): T_;
        getEnumOrElse<T_>(arg0: Internal.List<string>, arg1: T_, arg2: Internal.EnumGetMethod_): T_;
        getEnumOrElse<T_>(arg0: string, arg1: T_): T_;
        getEnumOrElse<T_>(arg0: string, arg1: Internal.Class<T_>, arg2: java_.util.function_.Supplier_<T_>): T_;
        getEnumOrElse<T_>(arg0: Internal.List<string>, arg1: Internal.Class<T_>, arg2: Internal.EnumGetMethod_, arg3: java_.util.function_.Supplier_<T_>): T_;
        getOrElse<T_>(arg0: Internal.List<string>, arg1: T_): T_;
        getOrElse<T_>(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<T_>): T_;
        getOrElse<T_>(arg0: string, arg1: T_): T_;
        getOrElse<T_>(arg0: string, arg1: java_.util.function_.Supplier_<T_>): T_;
        getIntOrElse(arg0: Internal.List<string>, arg1: number): number;
        getIntOrElse(arg0: string, arg1: Internal.IntSupplier_): number;
        getIntOrElse(arg0: Internal.List<string>, arg1: Internal.IntSupplier_): number;
        getIntOrElse(arg0: string, arg1: number): number;
        apply<T_>(arg0: string): T_;
        apply<T_>(arg0: Internal.List<string>): T_;
        getShort(arg0: string): number;
        getShort(arg0: Internal.List<string>): number;
        entrySet(): Internal.Set<Internal.UnmodifiableConfig$Entry>;
        configFormat(): Internal.ConfigFormat<any>;
        isEmpty(): boolean;
        getOptionalInt(arg0: string): Internal.OptionalInt;
        getOptionalInt(arg0: Internal.List<string>): Internal.OptionalInt;
        getCharOrElse(arg0: Internal.List<string>, arg1: string): string;
        getCharOrElse(arg0: string, arg1: string): string;
        getLong(arg0: Internal.List<string>): number;
        getLong(arg0: string): number;
        getInt(arg0: string): number;
        getInt(arg0: Internal.List<string>): number;
        getChar(arg0: string): string;
        getChar(arg0: Internal.List<string>): string;
        getOptional<T_>(arg0: Internal.List<string>): Internal.Optional<T_>;
        getOptional<T_>(arg0: string): Internal.Optional<T_>;
        contains(arg0: Internal.List<string>): boolean;
        contains(arg0: string): boolean;
        size(): number;
        isNull(arg0: string): boolean;
        isNull(arg0: Internal.List<string>): boolean;
        getRaw<T_>(arg0: Internal.List<string>): T_;
        getRaw<T_>(arg0: string): T_;
        getOptionalEnum<T_>(arg0: Internal.List<string>, arg1: Internal.Class<T_>): Internal.Optional<T_>;
        getOptionalEnum<T_>(arg0: Internal.List<string>, arg1: Internal.Class<T_>, arg2: Internal.EnumGetMethod_): Internal.Optional<T_>;
        getOptionalEnum<T_>(arg0: string, arg1: Internal.Class<T_>, arg2: Internal.EnumGetMethod_): Internal.Optional<T_>;
        getOptionalEnum<T_>(arg0: string, arg1: Internal.Class<T_>): Internal.Optional<T_>;
        getOptionalLong(arg0: Internal.List<string>): Internal.OptionalLong;
        getOptionalLong(arg0: string): Internal.OptionalLong;
        get empty(): boolean;
    }
    type UnmodifiableConfigWrapper_<C> = UnmodifiableConfigWrapper<C>;
    class ResearchProgression extends Internal.Enum<Internal.ResearchProgression> implements Internal.IExtensibleEnum {
        getRegistrar(): Internal.Consumer<Internal.ResearchNode>;
        init(): void;
        static findProgression(arg0: Internal.ResearchNode): Internal.Collection<Internal.ResearchProgression>;
        getName(): Internal.ITextComponent;
        static valueOf(arg0: string): Internal.ResearchProgression;
        static values(): Internal.ResearchProgression[];
        getResearchNodes(): Internal.List<Internal.ResearchNode>;
        static create(arg0: string, arg1: Internal.ProgressionTier_, arg2: Internal.List<Internal.ResearchProgression>): Internal.ResearchProgression;
        static findNode(arg0: string): Internal.ResearchNode;
        getPreConditions(): Internal.List<Internal.ResearchProgression>;
        getRequiredProgress(): Internal.ProgressionTier;
        static readonly ATTUNEMENT: Internal.ResearchProgression;
        static readonly RADIANCE: Internal.ResearchProgression;
        static readonly BRILLIANCE: Internal.ResearchProgression;
        static readonly CONSTELLATION: Internal.ResearchProgression;
        static readonly BASIC_CRAFT: Internal.ResearchProgression;
        static readonly DISCOVERY: Internal.ResearchProgression;
        get registrar(): Internal.Consumer<Internal.ResearchNode>;
        get preConditions(): Internal.List<Internal.ResearchProgression>;
        get name(): Internal.ITextComponent;
        get requiredProgress(): Internal.ProgressionTier;
        get researchNodes(): Internal.List<Internal.ResearchNode>;
    }
    type ResearchProgression_ = "discovery" | "basic_craft" | "attunement" | "constellation" | "radiance" | "brilliance" | ResearchProgression;
    class GraphicsFanciness extends Internal.Enum<Internal.GraphicsFanciness> {
        func_238162_a_(): number;
        func_238164_b_(): string;
        static func_238163_a_(arg0: number): Internal.GraphicsFanciness;
        static valueOf(arg0: string): Internal.GraphicsFanciness;
        static values(): Internal.GraphicsFanciness[];
        func_238166_c_(): Internal.GraphicsFanciness;
        static readonly FANCY: Internal.GraphicsFanciness;
        static readonly FABULOUS: Internal.GraphicsFanciness;
        static readonly FAST: Internal.GraphicsFanciness;
    }
    type GraphicsFanciness_ = "fast" | "fancy" | "fabulous" | GraphicsFanciness;
    class MatrixStack extends Document.Object implements Internal.PoseStackAccessor {
        func_227861_a_(x: number, y: number, z: number): void;
        func_227860_a_(): void;
        func_227862_a_(arg0: number, arg1: number, arg2: number): void;
        func_227863_a_(q: Internal.Quaternion): void;
        func_227867_d_(): boolean;
        func_227866_c_(): Internal.MatrixStack$Entry;
        func_227865_b_(): void;
        getPoseStack(): Internal.Deque<any>;
        get poseStack(): Internal.Deque<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MatrixStack_ = MatrixStack;
    class Stat <T> extends Internal.ScoreCriteria {
        func_197920_b(): T;
        func_197921_a(): Internal.StatType<T>;
        func_75968_a(arg0: number): string;
        static func_197918_a<T_>(arg0: Internal.StatType_<T_>, arg1: T_): string;
    }
    type Stat_<T> = Stat<T>;
    class BeeEntity$FindBeehiveGoal extends Internal.BeeEntity$PassiveGoal {
        func_226479_l_(): void;
        handler$bkl001$canBeeStart(arg0: Internal.CallbackInfoReturnable<any>): void;
        func_226476_d_(arg0: BlockPos): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BeeEntity);
    }
    type BeeEntity$FindBeehiveGoal_ = BeeEntity$FindBeehiveGoal;
    class Parameter extends Document.Object implements Internal.AnnotatedElement {
        getDeclaringInvokable(): Internal.Invokable<any, any>;
        getAnnotationsByType<A_>(arg0: Internal.Class<A_>): A_[];
        getType(): Internal.TypeToken<any>;
        getDeclaredAnnotationsByType<A_>(arg0: Internal.Class<A_>): A_[];
        getAnnotation<A_>(arg0: Internal.Class<A_>): A_;
        isAnnotationPresent(arg0: Internal.Class<Internal.Annotation>): boolean;
        getDeclaredAnnotation<A_>(arg0: Internal.Class<A_>): A_;
        getAnnotations(): Internal.Annotation[];
        getDeclaredAnnotations(): Internal.Annotation[];
        get declaredAnnotations(): Internal.Annotation[];
        get annotations(): Internal.Annotation[];
        get declaringInvokable(): Internal.Invokable<any, any>;
        get type(): Internal.TypeToken<any>;
    }
    type Parameter_ = Parameter;
    interface IBakedModel extends Internal.IForgeBakedModel {
        func_188618_c(): boolean;
        func_177554_e(): Internal.TextureAtlasSprite;
        func_177556_c(): boolean;
        func_230044_c_(): boolean;
        func_188617_f(): Internal.ItemOverrideList;
        func_177555_b(): boolean;
        func_177552_f(): Internal.ItemCameraTransforms;
        func_200117_a(arg0: Internal.BlockState, arg1: Internal.Direction_, arg2: Internal.Random): Internal.List<Internal.BakedQuad>;
    }
    type IBakedModel_ = IBakedModel;
    interface IStatFormatter {
        format(arg0: number): string;
        (arg0: number): string;
    }
    type IStatFormatter_ = ((arg0: number)=>string) | IStatFormatter;
    class ImageIcon extends Internal.Icon {
        drawStatic(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number): void;
        bindTexture(): void;
        withColor(color: Internal.Color4I): Internal.ImageIcon;
        withUV(u0: number, v0: number, u1: number, v1: number): Internal.ImageIcon;
        copy(): Internal.ImageIcon;
        withTint(c: Internal.Color4I): Internal.ImageIcon;
        draw3D(matrixStack: Internal.MatrixStack): void;
        minU: number;
        maxV: number;
        maxU: number;
        color: Internal.Color4I;
        readonly texture: ResourceLocation;
        static readonly MISSING_IMAGE: ResourceLocation;
        minV: number;
        tileSize: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(tex: ResourceLocation);
    }
    type ImageIcon_ = ImageIcon;
    class LavaSubmergingProcessor extends Internal.StructureProcessor {
        static readonly field_241532_b_: Internal.LavaSubmergingProcessor;
        static readonly field_241531_a_: Internal.Codec<Internal.LavaSubmergingProcessor>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type LavaSubmergingProcessor_ = LavaSubmergingProcessor;
    interface ITickHandler {
        getHandledTypes(): Internal.EnumSet<Internal.TickEvent$Type>;
        getName(): string;
        canFire(arg0: Internal.TickEvent$Phase_): boolean;
        tick(arg0: Internal.TickEvent$Type_, ...arg1: any[]): void;
    }
    type ITickHandler_ = ITickHandler;
    interface IRecipeHolder {
        func_201560_d(arg0: Internal.PlayerEntity): void;
        func_193056_a(arg0: Internal.IRecipe<any>): void;
        func_201561_a(arg0: Internal.World, arg1: Internal.ServerPlayerEntity, arg2: Internal.IRecipe<any>): boolean;
        func_193055_i(): Internal.IRecipe<any>;
    }
    type IRecipeHolder_ = IRecipeHolder;
    class ParsingMode extends Internal.Enum<Internal.ParsingMode> {
        static valueOf(arg0: string): Internal.ParsingMode;
        prepareParsing(arg0: Internal.Config): void;
        static values(): Internal.ParsingMode[];
        put(arg0: Internal.Map_<string, any>, arg1: string, arg2: any): any;
        put(arg0: Internal.Config, arg1: string, arg2: any): any;
        put(arg0: Internal.Config, arg1: Internal.List<string>, arg2: any): any;
        static readonly ADD: Internal.ParsingMode;
        static readonly MERGE: Internal.ParsingMode;
        static readonly REPLACE: Internal.ParsingMode;
    }
    type ParsingMode_ = "replace" | "merge" | "add" | ParsingMode;
    class RenderMaterial extends Document.Object {
        func_229313_b_(): ResourceLocation;
        handler$bbi001$hashCodeReturnInjected(arg0: Internal.CallbackInfoReturnable<any>): void;
        handler$bbi001$hashCodeHeadInjected(arg0: Internal.CallbackInfoReturnable<any>): void;
        func_229312_a_(arg0: Internal.Function_<ResourceLocation_, Internal.RenderType_>): Internal.RenderType;
        func_229314_c_(): Internal.TextureAtlasSprite;
        func_229311_a_(arg0: Internal.IRenderTypeBuffer_, arg1: Internal.Function_<ResourceLocation_, Internal.RenderType_>): Internal.IVertexBuilder;
        func_229310_a_(): ResourceLocation;
        func_241742_a_(arg0: Internal.IRenderTypeBuffer_, arg1: Internal.Function_<ResourceLocation_, Internal.RenderType_>, arg2: boolean): Internal.IVertexBuilder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: ResourceLocation);
    }
    type RenderMaterial_ = RenderMaterial;
    interface IFocusFactory {
        createFocus<V>(arg0: Internal.IFocus$Mode_, arg1: V): Internal.IFocus<V>;
        (arg0: Internal.IFocus$Mode, arg1: V): Internal.IFocus<V>;
    }
    type IFocusFactory_ = ((arg0: Internal.IFocus$Mode, arg1: V)=>Internal.IFocus<V>) | IFocusFactory;
    abstract class GraphicsDevice extends Document.Object {
        getConfigurations(): Internal.GraphicsConfiguration[];
        isFullScreenSupported(): boolean;
        setDisplayMode(arg0: Internal.DisplayMode): void;
        setFullScreenWindow(arg0: Internal.Window): void;
        getFullScreenWindow(): Internal.Window;
        getAvailableAcceleratedMemory(): number;
        getDefaultConfiguration(): Internal.GraphicsConfiguration;
        getDisplayMode(): Internal.DisplayMode;
        isDisplayChangeSupported(): boolean;
        getIDstring(): string;
        getType(): number;
        getBestConfiguration(arg0: Internal.GraphicsConfigTemplate): Internal.GraphicsConfiguration;
        isWindowTranslucencySupported(arg0: Internal.GraphicsDevice$WindowTranslucency_): boolean;
        getDisplayModes(): Internal.DisplayMode[];
        static readonly TYPE_IMAGE_BUFFER: 2;
        static readonly TYPE_RASTER_SCREEN: 0;
        static readonly TYPE_PRINTER: 1;
        get fullScreenSupported(): boolean;
        get availableAcceleratedMemory(): number;
        get iDstring(): string;
        get configurations(): Internal.GraphicsConfiguration[];
        get displayChangeSupported(): boolean;
        get displayModes(): Internal.DisplayMode[];
        get fullScreenWindow(): Internal.Window;
        get type(): number;
        get displayMode(): Internal.DisplayMode;
        get defaultConfiguration(): Internal.GraphicsConfiguration;
        set fullScreenWindow(arg0: Internal.Window);
        set displayMode(arg0: Internal.DisplayMode);
    }
    type GraphicsDevice_ = GraphicsDevice;
    class TeamType extends Internal.Enum<Internal.TeamType> implements Internal.IStringSerializable {
        isPlayer(): boolean;
        isServer(): boolean;
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.TeamType;
        static values(): Internal.TeamType[];
        isParty(): boolean;
        static readonly PLAYER: Internal.TeamType;
        static readonly PARTY: Internal.TeamType;
        readonly factory: Internal.Function<Internal.TeamManager, Internal.Team>;
        static readonly SERVER: Internal.TeamType;
        static readonly VALUES: Internal.TeamType[];
        static readonly MAP: {"server":Internal.TeamType,"party":Internal.TeamType,"player":Internal.TeamType};
        get server(): boolean;
        get party(): boolean;
        get player(): boolean;
    }
    type TeamType_ = "player" | "party" | "server" | TeamType;
    class SceneBuildingUtil extends Document.Object {
        readonly select: Internal.SceneBuildingUtil$SelectionUtil;
        readonly grid: Internal.SceneBuildingUtil$PositionUtil;
        readonly vector: Internal.SceneBuildingUtil$VectorUtil;
    }
    type SceneBuildingUtil_ = SceneBuildingUtil;
    class ScorePlayerTeam extends net.minecraft.scoreboard.Team {
        func_96664_a(arg0: Internal.ITextComponent_): void;
        func_98300_b(arg0: boolean): void;
        func_96660_a(arg0: boolean): void;
        static func_237500_a_(arg0: net.minecraft.scoreboard.Team, arg1: Internal.ITextComponent_): Internal.IFormattableTextComponent;
        func_178773_b(arg0: Internal.Team$Visible_): void;
        func_98298_a(arg0: number): void;
        func_178774_a(arg0: Internal.TextFormatting_): void;
        func_207408_a(arg0: Internal.ITextComponent_): void;
        func_207409_b(arg0: Internal.ITextComponent_): void;
        func_207406_e(): Internal.ITextComponent;
        func_178772_a(arg0: Internal.Team$Visible_): void;
        func_207407_f(): Internal.ITextComponent;
        func_98299_i(): number;
        func_237501_d_(): Internal.IFormattableTextComponent;
        func_96669_c(): Internal.ITextComponent;
        func_186682_a(arg0: Internal.Team$CollisionRule_): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Scoreboard, arg1: string);
    }
    type ScorePlayerTeam_ = ScorePlayerTeam;
    class HopperTileEntity extends Internal.LockableLootTileEntity implements Internal.IHopper, Internal.ITickableTileEntity {
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_96108_aC(): number;
        getLastUpdateTime(): number;
        func_200100_i(): Internal.VoxelShape;
        func_73660_a(): void;
        func_145818_k_(): boolean;
        static func_200114_a(arg0: Internal.IInventory, arg1: Internal.ItemEntity): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_200113_a(arg0: Internal.Entity): void;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        func_145896_c(arg0: number): void;
        getTileEntity(): Internal.TileEntity;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        func_96109_aB(): number;
        func_96107_aA(): number;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        func_174914_o(): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        static func_145893_b(arg0: Internal.World, arg1: number, arg2: number, arg3: number): Internal.IInventory;
        static func_200115_c(arg0: Internal.IHopper): Internal.List<Internal.ItemEntity>;
        static func_145891_a(arg0: Internal.IHopper): boolean;
        getModelData(): Internal.IModelData;
        static func_145884_b(arg0: Internal.IHopper): Internal.IInventory;
        static func_174918_a(arg0: Internal.IInventory, arg1: Internal.IInventory, arg2: Internal.ItemStack, arg3: Internal.Direction_): Internal.ItemStack;
        onLoad(): void;
        static func_195484_a(arg0: Internal.World, arg1: BlockPos): Internal.IInventory;
        func_145888_j(): boolean;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        get lastUpdateTime(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type HopperTileEntity_ = HopperTileEntity;
    interface IDataManager {
        getDirtyEntries(): Internal.Set<Internal.IDataManager$DataEntry<any>>;
        getValue<T>(arg0: Internal.TrackedData<T>): T;
        setDataMap(arg0: Internal.Map_<Internal.TrackedData_<any>, Internal.IDataManager$DataEntry_<any>>): void;
        isDirty(): boolean;
        getEntries(arg0: boolean): Internal.Set<Internal.IDataManager$DataEntry<any>>;
        setValue<T>(arg0: Internal.TrackedData<T>, arg1: T): void;
        clean(): void;
        getDataMap(): Internal.Map<Internal.TrackedData<any>, Internal.IDataManager$DataEntry<any>>;
    }
    type IDataManager_ = IDataManager;
    class SUpdateScorePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149321_d(): string;
        func_149323_e(): number;
        func_211402_a(): boolean;
        func_149324_c(): string;
        func_197701_d(): Internal.ServerScoreboard$Action;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ServerScoreboard$Action, arg1: string, arg2: string, arg3: number);
    }
    type SUpdateScorePacket_ = SUpdateScorePacket;
    class JigsawReplacementStructureProcessor extends Internal.StructureProcessor {
        static readonly field_215196_a: Internal.JigsawReplacementStructureProcessor;
        static readonly field_237085_a_: Internal.Codec<Internal.JigsawReplacementStructureProcessor>;
    }
    type JigsawReplacementStructureProcessor_ = JigsawReplacementStructureProcessor;
    abstract class FileSystemProvider extends Document.Object {
        isSameFile(arg0: Internal.Path, arg1: Internal.Path): boolean;
        getFileStore(arg0: Internal.Path): Internal.FileStore;
        newByteChannel(arg0: Internal.Path, arg1: Internal.Set<Internal.OpenOption>, ...arg2: any[]): Internal.SeekableByteChannel;
        newAsynchronousFileChannel(arg0: Internal.Path, arg1: Internal.Set<Internal.OpenOption>, arg2: Internal.ExecutorService, ...arg3: any[]): Internal.AsynchronousFileChannel;
        getFileAttributeView<V_>(arg0: Internal.Path, arg1: Internal.Class<V_>, ...arg2: any[]): V_;
        createSymbolicLink(arg0: Internal.Path, arg1: Internal.Path, ...arg2: any[]): void;
        static installedProviders(): Internal.List<Internal.FileSystemProvider>;
        delete(arg0: Internal.Path): void;
        createLink(arg0: Internal.Path, arg1: Internal.Path): void;
        setAttribute(arg0: Internal.Path, arg1: string, arg2: any, ...arg3: any[]): void;
        newFileChannel(arg0: Internal.Path, arg1: Internal.Set<Internal.OpenOption>, ...arg2: any[]): Internal.FileChannel;
        newInputStream(arg0: Internal.Path, ...arg1: Internal.OpenOption[]): Internal.InputStream;
        readAttributes<A_>(arg0: Internal.Path, arg1: Internal.Class<A_>, ...arg2: any[]): A_;
        readAttributes(arg0: Internal.Path, arg1: string, ...arg2: any[]): Internal.Map<string, any>;
        newOutputStream(arg0: Internal.Path, ...arg1: Internal.OpenOption[]): Internal.OutputStream;
        getPath(arg0: Internal.URI): Internal.Path;
        createDirectory(arg0: Internal.Path, ...arg1: any[]): void;
        copy(arg0: Internal.Path, arg1: Internal.Path, ...arg2: any[]): void;
        move(arg0: Internal.Path, arg1: Internal.Path, ...arg2: any[]): void;
        getScheme(): string;
        newFileSystem(arg0: Internal.URI, arg1: Internal.Map_<string, any>): Internal.FileSystem;
        newFileSystem(arg0: Internal.Path, arg1: Internal.Map_<string, any>): Internal.FileSystem;
        deleteIfExists(arg0: Internal.Path): boolean;
        newDirectoryStream(arg0: Internal.Path, arg1: Internal.DirectoryStream$Filter_<Internal.Path_>): Internal.DirectoryStream<Internal.Path>;
        getFileSystem(arg0: Internal.URI): Internal.FileSystem;
        checkAccess(arg0: Internal.Path, ...arg1: any[]): void;
        readSymbolicLink(arg0: Internal.Path): Internal.Path;
        isHidden(arg0: Internal.Path): boolean;
        exists(arg0: Internal.Path, ...arg1: any[]): boolean;
        readAttributesIfExists<A_>(arg0: Internal.Path, arg1: Internal.Class<A_>, ...arg2: any[]): A_;
        get scheme(): string;
    }
    type FileSystemProvider_ = FileSystemProvider;
    abstract class ContainerMinecartEntity extends Internal.AbstractMinecartEntity implements Internal.IInventory, Internal.INamedContainerProvider {
        canBeRidden(): boolean;
        shouldRiderSit(): boolean;
        func_70304_b(arg0: number): Internal.ItemStack;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_174888_l(): void;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        shouldDoRailFunctions(): boolean;
        func_70302_i_(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        isPoweredCart(): boolean;
        dropContentsWhenDead(arg0: boolean): void;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_70296_d(): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_184289_a(arg0: ResourceLocation_, arg1: number): void;
        func_213901_a(arg0: Internal.Item_): number;
        hasCooldown(): boolean;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        createMenu(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity): Internal.Container;
        func_184288_f(arg0: Internal.PlayerEntity): void;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        isMultipartEntity(): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        getComparatorLevel(): number;
        getCurrentRailPosition(): BlockPos;
        asKJS(): any;
        getCartItem(): Internal.ItemStack;
        canRiderInteract(): boolean;
        getMinecart(): Internal.AbstractMinecartEntity;
        getSlopeAdjustment(): number;
        func_191420_l(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getMaxCartSpeedOnRail(): number;
        field_184290_c: ResourceLocation;
        field_184291_d: number;
        get minecart(): Internal.AbstractMinecartEntity;
        get currentRailPosition(): BlockPos;
        get slopeAdjustment(): number;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get poweredCart(): boolean;
        get comparatorLevel(): number;
        get cartItem(): Internal.ItemStack;
        get maxCartSpeedOnRail(): number;
        get entity(): Internal.Entity;
    }
    type ContainerMinecartEntity_ = ContainerMinecartEntity;
    class BufferCapabilities$FlipContents extends Internal.AttributeValue {
        static readonly UNDEFINED: Internal.BufferCapabilities$FlipContents;
        static readonly PRIOR: Internal.BufferCapabilities$FlipContents;
        static readonly COPIED: Internal.BufferCapabilities$FlipContents;
        static readonly BACKGROUND: Internal.BufferCapabilities$FlipContents;
    }
    type BufferCapabilities$FlipContents_ = BufferCapabilities$FlipContents;
    interface Promise <V> extends Internal.Future<V> {
        setSuccess(arg0: V): Internal.Promise<V>;
        setFailure(arg0: Internal.Throwable): Internal.Promise<V>;
        removeListeners(...arg0: Internal.GenericFutureListener<Internal.Future<V>>[]): Internal.Promise<V>;
        trySuccess(arg0: V): boolean;
        syncUninterruptibly(): Internal.Promise<V>;
        await(): Internal.Promise<V>;
        awaitUninterruptibly(): Internal.Promise<V>;
        removeListener(arg0: Internal.GenericFutureListener_<Internal.Future_<V>>): Internal.Promise<V>;
        tryFailure(arg0: Internal.Throwable): boolean;
        addListeners(...arg0: Internal.GenericFutureListener<Internal.Future<V>>[]): Internal.Promise<V>;
        sync(): Internal.Promise<V>;
        setUncancellable(): boolean;
        addListener(arg0: Internal.GenericFutureListener_<Internal.Future_<V>>): Internal.Promise<V>;
    }
    type Promise_<V> = Promise<V>;
    interface AccessibleEditableText extends Internal.AccessibleText {
        replaceText(arg0: number, arg1: number, arg2: string): void;
        cut(arg0: number, arg1: number): void;
        selectText(arg0: number, arg1: number): void;
        setTextContents(arg0: string): void;
        insertTextAtIndex(arg0: number, arg1: string): void;
        paste(arg0: number): void;
        setAttributes(arg0: number, arg1: number, arg2: Internal.AttributeSet): void;
        delete(arg0: number, arg1: number): void;
        getTextRange(arg0: number, arg1: number): string;
    }
    type AccessibleEditableText_ = AccessibleEditableText;
    abstract class IntBuffer extends Internal.Buffer implements Internal.Comparable<Internal.IntBuffer> {
        compact(): Internal.IntBuffer;
        clear(): Internal.IntBuffer;
        duplicate(): Internal.IntBuffer;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.IntBuffer): number;
        asReadOnlyBuffer(): Internal.IntBuffer;
        put(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.IntBuffer;
        put(arg0: number, arg1: number[]): Internal.IntBuffer;
        put(arg0: number, arg1: Internal.IntBuffer, arg2: number, arg3: number): Internal.IntBuffer;
        put(arg0: number[]): Internal.IntBuffer;
        put(arg0: Internal.IntBuffer): Internal.IntBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.IntBuffer;
        put(arg0: number): Internal.IntBuffer;
        put(arg0: number, arg1: number): Internal.IntBuffer;
        static allocate(arg0: number): Internal.IntBuffer;
        rewind(): Internal.IntBuffer;
        slice(): Internal.IntBuffer;
        slice(arg0: number, arg1: number): Internal.IntBuffer;
        array(): number[];
        mismatch(arg0: Internal.IntBuffer): number;
        get(arg0: number, arg1: number[]): Internal.IntBuffer;
        get(arg0: number): number;
        get(arg0: number[], arg1: number, arg2: number): Internal.IntBuffer;
        get(arg0: number[]): Internal.IntBuffer;
        get(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.IntBuffer;
        get(): number;
        limit(arg0: number): Internal.IntBuffer;
        reset(): Internal.IntBuffer;
        position(arg0: number): Internal.IntBuffer;
        flip(): Internal.IntBuffer;
        static wrap(arg0: number[], arg1: number, arg2: number): Internal.IntBuffer;
        static wrap(arg0: number[]): Internal.IntBuffer;
        mark(): Internal.IntBuffer;
        order(): Internal.ByteOrder;
    }
    type IntBuffer_ = IntBuffer;
    class EnderChestTileEntity extends Internal.TileEntity implements Internal.IChestLid, Internal.ITickableTileEntity {
        requestModelDataUpdate(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_195480_a(arg0: number): number;
        func_145969_a(): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_73660_a(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        func_145970_b(): void;
        func_145971_a(arg0: Internal.PlayerEntity): boolean;
        field_145972_a: number;
        field_145975_i: number;
        field_145973_j: number;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EnderChestTileEntity_ = EnderChestTileEntity;
    class ChasingAABBOutline extends Internal.AABBOutline {
        target(arg0: Internal.AxisAlignedBB): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.AxisAlignedBB);
    }
    type ChasingAABBOutline_ = ChasingAABBOutline;
    interface ILocalHandlerConstructor {
        create(arg0: Internal.LocalWireNetwork, arg1: Internal.GlobalWireNetwork): Internal.LocalNetworkHandler;
        (arg0: Internal.LocalWireNetwork, arg1: Internal.GlobalWireNetwork): Internal.LocalNetworkHandler;
    }
    type ILocalHandlerConstructor_ = ((arg0: Internal.LocalWireNetwork, arg1: Internal.GlobalWireNetwork)=>Internal.LocalNetworkHandler) | ILocalHandlerConstructor;
    interface RenderDevice {
        makeInactive(): void;
        makeActive(): void;
        createCommandList(): Internal.CommandList;
    }
    type RenderDevice_ = RenderDevice;
    interface IResourceType {
    }
    type IResourceType_ = IResourceType;
    class BeaconContainer extends Internal.Container {
        func_216967_f(): Internal.Effect;
        func_216969_e(): number;
        func_216968_g(): Internal.Effect;
        func_216966_c(arg0: number, arg1: number): void;
        func_216970_h(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.IInventory);
        constructor(arg0: number, arg1: Internal.IInventory, arg2: Internal.IIntArray, arg3: Internal.IWorldPosCallable);
    }
    type BeaconContainer_ = BeaconContainer;
    class GuiScreenEvent$KeyboardKeyReleasedEvent$Post extends Internal.GuiScreenEvent$KeyboardKeyReleasedEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number);
    }
    type GuiScreenEvent$KeyboardKeyReleasedEvent$Post_ = GuiScreenEvent$KeyboardKeyReleasedEvent$Post;
    class BlockItem extends Internal.Item {
        canElytraFly(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        onEnchantment(arg0: Internal.ItemStack, arg1: Internal.List<Internal.EnchantmentData>): Internal.ItemStack;
        getItem(): Internal.Item;
        getSmeltingExperience(arg0: Internal.ItemStack): number;
        setDamage(arg0: Internal.ItemStack, arg1: number): void;
        canHarvestBlock(arg0: Internal.ItemStack, arg1: Internal.BlockState): boolean;
        renderHelmetOverlay(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: number, arg3: number, arg4: number): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        damageItem<T_>(arg0: Internal.ItemStack, arg1: number, arg2: T_, arg3: Internal.Consumer_<T_>): number;
        getItemEnchantability(arg0: Internal.ItemStack): number;
        isTreasureAllowed(arg0: Internal.ItemStack, arg1: boolean): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: boolean): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack): number;
        func_219984_b(arg0: Internal.BlockItemUseContext): Internal.BlockItemUseContext;
        getArmorModel<A_>(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: EquipmentSlot_, arg3: A_): A_;
        readShareTag(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): void;
        onEntityItemUpdate(arg0: Internal.ItemStack, arg1: Internal.ItemEntity): boolean;
        getDamage(arg0: Internal.ItemStack): number;
        showDurabilityBar(arg0: Internal.ItemStack): boolean;
        isBookEnchantable(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.LivingEntity, arg3: Internal.LivingEntity): boolean;
        onUsingTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): void;
        createEntity(arg0: Internal.World, arg1: Internal.Entity, arg2: Internal.ItemStack): Internal.Entity;
        isPiglinCurrency(arg0: Internal.ItemStack): boolean;
        getCreativeTabs(): Internal.Collection<Internal.ItemGroup>;
        removeFromBlockToItemMap(arg0: Internal.Map_<Internal.Block_, Internal.Item_>, arg1: Internal.Item_): void;
        getShareTag(arg0: Internal.ItemStack): Internal.CompoundNBT;
        func_195946_a(arg0: Internal.Map_<Internal.Block_, Internal.Item_>, arg1: Internal.Item_): void;
        getRGBDurabilityForDisplay(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack, arg1: Internal.IRecipeType<any>): number;
        onDroppedByPlayer(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity): boolean;
        isDamageable(arg0: Internal.ItemStack): boolean;
        onEntitySwing(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        func_195942_a(arg0: Internal.BlockItemUseContext): Internal.ActionResultType;
        elytraFlightTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): boolean;
        selectEnchantments(arg0: Internal.List<Internal.EnchantmentData>, arg1: Internal.Random, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number, arg6: boolean): Internal.List<Internal.EnchantmentData>;
        getAttributeModifiers(arg0: EquipmentSlot_, arg1: Internal.ItemStack): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        onLeftClickEntity(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.Entity): boolean;
        canEquip(arg0: Internal.ItemStack, arg1: EquipmentSlot_, arg2: Internal.Entity): boolean;
        getDurabilityForDisplay(arg0: Internal.ItemStack): number;
        onBlockStartBreak(arg0: Internal.ItemStack, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.MobEntity): void;
        canContinueUsing(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getEntityLifespan(arg0: Internal.ItemStack, arg1: Internal.World): number;
        getArmorTexture(arg0: Internal.ItemStack, arg1: Internal.Entity, arg2: EquipmentSlot_, arg3: string): string;
        hasCustomEntity(arg0: Internal.ItemStack): boolean;
        getHighlightTip(arg0: Internal.ItemStack, arg1: Internal.ITextComponent_): Internal.ITextComponent;
        func_219985_a(arg0: BlockPos, arg1: Internal.World, arg2: Internal.ItemStack, arg3: Internal.BlockState): Internal.BlockState;
        getMaxDamage(arg0: Internal.ItemStack): number;
        static func_179224_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: BlockPos, arg3: Internal.ItemStack): boolean;
        getCreatorModId(arg0: Internal.ItemStack): string;
        isDamaged(arg0: Internal.ItemStack): boolean;
        onArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.PlayerEntity): void;
        func_179223_d(): Internal.Block;
        hasContainerItem(arg0: Internal.ItemStack): boolean;
        isShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        doesSneakBypassUse(arg0: Internal.ItemStack, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        onItemUseFirst(arg0: Internal.ItemStack, arg1: Internal.ItemUseContext): Internal.ActionResultType;
        getContainerItem(arg0: Internal.ItemStack): Internal.ItemStack;
        setRegistryName(arg0: ResourceLocation_): any;
        getEquipmentSlot(arg0: Internal.ItemStack): EquipmentSlot;
        initCapabilities(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): Internal.ICapabilityProvider;
        getItemStackLimit(arg0: Internal.ItemStack): number;
        func_195943_a(arg0: BlockPos, arg1: Internal.World, arg2: Internal.PlayerEntity, arg3: Internal.ItemStack, arg4: Internal.BlockState): boolean;
        getFontRenderer(arg0: Internal.ItemStack): Internal.FontRenderer;
        func_195941_b(arg0: Internal.BlockItemUseContext, arg1: Internal.BlockState): boolean;
        forciblyAllowsTableEnchantment(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        makesPiglinsNeutral(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        isEnderMask(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.EndermanEntity): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        get item(): Internal.Item;
        get creativeTabs(): Internal.Collection<Internal.ItemGroup>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Block, arg1: Internal.Item$Properties);
    }
    type BlockItem_ = BlockItem;
    abstract class GuiScreenEvent$MouseClickedEvent extends Internal.GuiScreenEvent$MouseInputEvent {
        getButton(): number;
        get button(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number);
    }
    type GuiScreenEvent$MouseClickedEvent_ = GuiScreenEvent$MouseClickedEvent;
    interface LivingEntityKJS {
        foodEatenKJS(is: Internal.ItemStack): void;
    }
    type LivingEntityKJS_ = LivingEntityKJS;
    class BaseTreeFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_236685_a_(arg0: Internal.List<Internal.TreeDecorator>): Internal.BaseTreeFeatureConfig;
        func_227373_a_(): void;
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        field_227372_q_: boolean;
        readonly field_227369_n_: Internal.BlockStateProvider;
        readonly field_227368_m_: Internal.BlockStateProvider;
        static readonly field_236676_a_: Internal.Codec<Internal.BaseTreeFeatureConfig>;
        readonly field_227370_o_: Internal.List<Internal.TreeDecorator>;
        readonly field_236682_l_: Internal.Heightmap$Type;
        readonly field_236677_f_: Internal.FoliagePlacer;
        readonly field_236680_i_: number;
        readonly field_236679_h_: Internal.AbstractFeatureSizeType;
        readonly field_236678_g_: Internal.AbstractTrunkPlacer;
        readonly field_236681_j_: boolean;
    }
    type BaseTreeFeatureConfig_ = BaseTreeFeatureConfig;
    interface IStructureProcessorType <P> {
        codec(): Internal.Codec<P>;
        (): Internal.Codec<P>;
    }
    type IStructureProcessorType_<P> = (()=>Internal.Codec<P>) | IStructureProcessorType<P>;
    class EnergyCellConfig extends Internal.EnergyConfig {
        getGeneration(arg0: Internal.Tier_): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type EnergyCellConfig_ = EnergyCellConfig;
    class ChunkRenderData$Builder extends Document.Object {
        addSprite(sprite: Internal.TextureAtlasSprite): void;
        setMesh(pass: Internal.BlockRenderPass_, data: Internal.ChunkMeshData): void;
        addBlockEntity(entity: Internal.TileEntity, cull: boolean): void;
        build(): Internal.ChunkRenderData;
        removeBlockEntitiesIf(removePredicate: Internal.Predicate_<Internal.TileEntity_>): void;
        setBounds(bounds: Internal.ChunkRenderBounds): void;
        setOcclusionData(data: Internal.SetVisibility): void;
        set occlusionData(data: Internal.SetVisibility);
        set bounds(bounds: Internal.ChunkRenderBounds);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ChunkRenderData$Builder_ = ChunkRenderData$Builder;
    abstract class ConstellationEffectProvider extends Internal.ForgeRegistryEntry<Internal.ConstellationEffectProvider> implements Internal.IForgeRegistryEntry<Internal.ConstellationEffectProvider> {
        createEffect(arg0: hellfirepvp.astralsorcery.common.util.block.ILocatable_): Internal.ConstellationEffect;
        setRegistryName(arg0: ResourceLocation_): any;
        getConstellation(): Internal.IWeakConstellation;
        get constellation(): Internal.IWeakConstellation;
        set registryName(arg0: ResourceLocation_);
    }
    type ConstellationEffectProvider_ = Registry.astralsorcery.constellation_effect | ConstellationEffectProvider;
    class SUpdateLightPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218719_h(): number;
        func_218718_g(): number;
        func_241784_j_(): boolean;
        func_218713_i(): Internal.List<number[]>;
        func_218717_e(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218715_d(): number;
        func_218712_f(): Internal.List<number[]>;
        func_218716_b(): number;
        func_218714_c(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ChunkPos, arg1: Internal.WorldLightManager, arg2: number, arg3: number, arg4: boolean);
        constructor(arg0: Internal.ChunkPos, arg1: Internal.WorldLightManager, arg2: boolean);
        constructor();
    }
    type SUpdateLightPacket_ = SUpdateLightPacket;
    class BlastFurnaceContainer extends Internal.AbstractFurnaceContainer {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IInventory, arg3: Internal.IIntArray);
    }
    type BlastFurnaceContainer_ = BlastFurnaceContainer;
    interface Long2ObjectSortedMap <V> extends Internal.Long2ObjectMap<V>, Internal.SortedMap<number, V> {
        long2ObjectEntrySet(): Internal.ObjectSortedSet<Internal.Long2ObjectMap$Entry<V>>;
        long2ObjectEntrySet(): Internal.ObjectSet<any>;
        comparator(): Internal.LongComparator;
        comparator(): Internal.Comparator<any>;
        firstLongKey(): number;
        entrySet(): Internal.ObjectSortedSet<Internal.Map$Entry<number, V>>;
        entrySet(): Internal.ObjectSet<any>;
        entrySet(): Internal.Set<any>;
        firstKey(): any;
        firstKey(): number;
        subMap(arg0: number, arg1: number): Internal.Long2ObjectSortedMap<V>;
        subMap(arg0: any, arg1: any): Internal.SortedMap<any, any>;
        subMap(arg0: number, arg1: number): Internal.Long2ObjectSortedMap<V>;
        values(): Internal.Collection<any>;
        values(): Internal.ObjectCollection<V>;
        lastKey(): any;
        lastKey(): number;
        lastLongKey(): number;
        headMap(arg0: any): Internal.SortedMap<any, any>;
        headMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        headMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        keySet(): Internal.LongSortedSet;
        keySet(): Internal.LongSet;
        keySet(): Internal.Set<any>;
        tailMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        tailMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        tailMap(arg0: any): Internal.SortedMap<any, any>;
    }
    type Long2ObjectSortedMap_<V> = Long2ObjectSortedMap<V>;
    interface IClearable {
        func_174888_l(): void;
        (): void;
    }
    type IClearable_ = (()=>void) | IClearable;
    interface ContainerType$IFactory <T> {
        create(arg0: number, arg1: Internal.PlayerInventory): T;
        (arg0: number, arg1: Internal.PlayerInventory): T;
    }
    type ContainerType$IFactory_<T> = ((arg0: number, arg1: Internal.PlayerInventory)=>T) | ContainerType$IFactory<T>;
    class PageAttributes$ColorType extends Internal.AttributeValue {
        static readonly MONOCHROME: Internal.PageAttributes$ColorType;
        static readonly COLOR: Internal.PageAttributes$ColorType;
    }
    type PageAttributes$ColorType_ = PageAttributes$ColorType;
    abstract class DefaultColorVertexBuilder extends Document.Object implements Internal.IVertexBuilder {
        func_225582_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        applyBakedLighting(arg0: number, arg1: Internal.ByteBuffer): number;
        getVertexBuilder(): Internal.IVertexBuilder;
        func_225587_b_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_227891_b_(arg0: number): Internal.IVertexBuilder;
        func_225588_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number): void;
        func_227890_a_(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number[], arg3: number, arg4: number, arg5: number, arg6: number[], arg7: number, arg8: boolean): void;
        func_225585_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225586_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IVertexBuilder;
        func_225583_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225584_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_227885_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IVertexBuilder;
        createSink(factory: Internal.VertexType_<any>): Internal.VertexSink;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number[], arg3: number, arg4: number, arg5: number, arg6: number, arg7: number[], arg8: number, arg9: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        func_181675_d(): void;
        func_227889_a_(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_227886_a_(arg0: number): Internal.IVertexBuilder;
        func_227888_a_(matrix: Internal.Matrix4f, x: number, y: number, z: number): Internal.IVertexBuilder;
        func_227887_a_(matrix: Internal.Matrix3f, x: number, y: number, z: number): Internal.IVertexBuilder;
        func_225611_b_(arg0: number, arg1: number, arg2: number, arg3: number): void;
        applyBakedNormals(arg0: Internal.Vector3f, arg1: Internal.ByteBuffer, arg2: Internal.Matrix3f): void;
        field_227854_a_: boolean;
        get vertexBuilder(): Internal.IVertexBuilder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type DefaultColorVertexBuilder_ = DefaultColorVertexBuilder;
    class Compartment <T> extends Document.Object {
        static readonly DIRECTIONAL_PARTIAL: Internal.Compartment<org.apache.commons.lang3.tuple.Pair<Internal.Direction, Internal.PartialModel>>;
        static readonly PARTIAL: Internal.Compartment<Internal.PartialModel>;
        static readonly GENERIC_TILE: Internal.Compartment<Internal.BlockState>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Compartment_<T> = Compartment<T>;
    class StrafePlayerPhase extends Internal.Phase {
        func_188652_i(): Internal.PhaseType<Internal.StrafePlayerPhase>;
        func_188686_a(arg0: Internal.LivingEntity): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type StrafePlayerPhase_ = StrafePlayerPhase;
    interface BaseMapCodec <K, V> {
        encode<T>(arg0: Internal.Map_<K, V>, arg1: Internal.DynamicOps<T>, arg2: Internal.RecordBuilder<T>): Internal.RecordBuilder<T>;
        elementCodec(): Internal.Codec<V>;
        keyCodec(): Internal.Codec<K>;
        decode<T>(arg0: Internal.DynamicOps<T>, arg1: Internal.MapLike<T>): Internal.DataResult<Internal.Map<K, V>>;
    }
    type BaseMapCodec_<K, V> = BaseMapCodec<K, V>;
    class WantedItemsSensor extends Internal.Sensor<Internal.MobEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type WantedItemsSensor_ = WantedItemsSensor;
    class ResourcePackType extends Internal.Enum<Internal.ResourcePackType> {
        static valueOf(arg0: string): Internal.ResourcePackType;
        static values(): Internal.ResourcePackType[];
        func_198956_a(): string;
        static readonly CLIENT_RESOURCES: Internal.ResourcePackType;
        static readonly SERVER_DATA: Internal.ResourcePackType;
    }
    type ResourcePackType_ = "client_resources" | "server_data" | ResourcePackType;
    class NativeContinuation extends Internal.IdScriptableObject implements dev.latvian.mods.rhino.Function {
        call(cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        static init(cx: Internal.Context, scope: Internal.Scriptable, sealed: boolean): void;
        getImplementation(): any;
        static equalImplementations(c1: Internal.NativeContinuation, c2: Internal.NativeContinuation): boolean;
        construct(cx: Internal.Context, scope: Internal.Scriptable, args: any[]): Internal.Scriptable;
        initImplementation(implementation: any): void;
        static isContinuationConstructor(f: Internal.IdFunctionObject): boolean;
        get implementation(): any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type NativeContinuation_ = NativeContinuation;
    class Event$Result extends Internal.Enum<Internal.Event$Result> {
        static valueOf(arg0: string): Internal.Event$Result;
        static values(): Internal.Event$Result[];
        static readonly DENY: Internal.Event$Result;
        static readonly DEFAULT: Internal.Event$Result;
        static readonly ALLOW: Internal.Event$Result;
    }
    type Event$Result_ = "deny" | "default" | "allow" | Event$Result;
    class SCustomPayloadPlayPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler>, Internal.ICustomPacket<Internal.SCustomPayloadPlayPacket>, Internal.INamedPacket {
        setName(arg0: string): void;
        setName(arg0: ResourceLocation_): void;
        getName(): string;
        getName(): ResourceLocation;
        getDirection(): Internal.NetworkDirection;
        getIndex(): number;
        setData(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        getThis(): Internal.IClientPlayNetHandler;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        setIndex(arg0: number): void;
        getInternalData(): Internal.PacketBuffer;
        func_180735_b(): Internal.PacketBuffer;
        func_149169_c(): ResourceLocation;
        handler$bie002$readPacketData(arg0: Internal.PacketBuffer, arg1: Internal.CallbackInfo): void;
        static readonly field_209911_b: ResourceLocation;
        static readonly field_229727_m_: ResourceLocation;
        static readonly field_229728_n_: ResourceLocation;
        static readonly field_209915_f: ResourceLocation;
        static readonly field_209914_e: ResourceLocation;
        static readonly field_209913_d: ResourceLocation;
        static readonly field_218701_l: ResourceLocation;
        static readonly field_218700_k: ResourceLocation;
        static readonly field_229730_p_: ResourceLocation;
        static readonly field_209917_h: ResourceLocation;
        static readonly field_218696_g: ResourceLocation;
        static readonly field_229729_o_: ResourceLocation;
        static readonly field_209916_g: ResourceLocation;
        static readonly field_222945_m: ResourceLocation;
        static readonly field_218698_i: ResourceLocation;
        static readonly field_218697_h: ResourceLocation;
        static readonly field_218699_j: ResourceLocation;
        get internalData(): Internal.PacketBuffer;
        get name(): ResourceLocation;
        get this(): Internal.IClientPlayNetHandler;
        get index(): number;
        get direction(): Internal.NetworkDirection;
        set data(arg0: Internal.PacketBuffer);
        set name(arg0: ResourceLocation_);
        set index(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: ResourceLocation, arg1: Internal.PacketBuffer);
    }
    type SCustomPayloadPlayPacket_ = SCustomPayloadPlayPacket;
    class RenderTooltipEvent$PostText extends Internal.RenderTooltipEvent$Post {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ItemStack, arg1: Internal.List<Internal.ITextProperties>, arg2: Internal.MatrixStack, arg3: number, arg4: number, arg5: Internal.FontRenderer, arg6: number, arg7: number);
    }
    type RenderTooltipEvent$PostText_ = RenderTooltipEvent$PostText;
    class BlockBreakEventJS extends Internal.PlayerEventJS {
        getBlock(): Internal.BlockContainerJS;
        getXp(): number;
        setXp(xp: number): void;
        get xp(): number;
        get block(): Internal.BlockContainerJS;
        set xp(xp: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(entity: Internal.ServerPlayerEntity, world: Internal.World, pos: BlockPos, state: Internal.BlockState, xp: any);
    }
    type BlockBreakEventJS_ = BlockBreakEventJS;
    class Menu extends Internal.MenuItem implements Internal.MenuContainer, Internal.Accessible {
        add(arg0: string): void;
        add(arg0: Internal.MenuItem): Internal.MenuItem;
        removeAll(): void;
        addSeparator(): void;
        countItems(): number;
        getItemCount(): number;
        getItem(arg0: number): Internal.MenuItem;
        insert(arg0: Internal.MenuItem, arg1: number): void;
        insert(arg0: string, arg1: number): void;
        isTearOff(): boolean;
        insertSeparator(arg0: number): void;
        remove(arg0: Internal.MenuComponent): void;
        remove(arg0: number): void;
        get tearOff(): boolean;
        get itemCount(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: boolean);
        constructor(arg0: string);
        constructor();
    }
    type Menu_ = Menu;
    class PonderUI extends Internal.NavigatableSimiScreen {
        getSubject(): Internal.ItemStack;
        func_212927_b(arg0: number, arg1: number): void;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        isComfyReadingEnabled(): boolean;
        seekToTime(arg0: number): void;
        getActiveScene(): Internal.PonderScene;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        drawRightAlignedString(arg0: Internal.FontRenderer, arg1: Internal.MatrixStack, arg2: string, arg3: number, arg4: number, arg5: number): void;
        setComfyReadingEnabled(arg0: boolean): void;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        static renderSpeechBox(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: boolean, arg6: PonderPointing_, arg7: boolean): void;
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231049_c__(arg0: boolean): boolean;
        static getPartialTicks(): number;
        static of(arg0: ResourceLocation_): Internal.PonderUI;
        static of(arg0: Internal.PonderChapter): Internal.PonderUI;
        static of(arg0: Internal.ItemStack, arg1: Internal.PonderTag): Internal.PonderUI;
        static of(arg0: Internal.ItemStack): Internal.PonderUI;
        coolDownAfterSkip(): void;
        getHoveredTooltipItem(): Internal.ItemStack;
        getFontRenderer(): Internal.FontRenderer;
        updateIdentifiedItem(arg0: Internal.PonderScene): void;
        static readonly PONDERING: "ponder.pondering";
        static readonly IN_CHAPTER: "ponder.in_chapter";
        static readonly IDENTIFY: "ponder.identify";
        static ponderTicks: 0;
        static readonly SLOW_TEXT: "ponder.slow_text";
        static readonly NEXT: "ponder.next";
        static readonly IDENTIFY_MODE: "ponder.identify_mode";
        static readonly REPLAY: "ponder.replay";
        static ponderPartialTicksPaused: 0.0;
        static readonly CLOSE: "ponder.close";
        static readonly PREVIOUS: "ponder.previous";
        get activeScene(): Internal.PonderScene;
        get subject(): Internal.ItemStack;
        get hoveredTooltipItem(): Internal.ItemStack;
        get comfyReadingEnabled(): boolean;
        get partialTicks(): number;
        get fontRenderer(): Internal.FontRenderer;
        set comfyReadingEnabled(arg0: boolean);
    }
    type PonderUI_ = PonderUI;
    class PointOfInterestDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_217691_a(arg0: Internal.PointOfInterestDebugRenderer$POIInfo): void;
        func_217692_a(arg0: Internal.PointOfInterestDebugRenderer$BrainInfo): void;
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_217706_a(arg0: BlockPos, arg1: number): void;
        func_217698_a(arg0: BlockPos): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type PointOfInterestDebugRenderer_ = PointOfInterestDebugRenderer;
    abstract class GuiScreenEvent$KeyboardKeyEvent extends Internal.GuiScreenEvent {
        getModifiers(): number;
        getKeyCode(): number;
        getScanCode(): number;
        get keyCode(): number;
        get modifiers(): number;
        get scanCode(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number);
    }
    type GuiScreenEvent$KeyboardKeyEvent_ = GuiScreenEvent$KeyboardKeyEvent;
    class RenderNameplateEvent extends Internal.EntityEvent {
        getEntityRenderer(): Internal.EntityRenderer<any>;
        setContent(arg0: Internal.ITextComponent_): void;
        getRenderTypeBuffer(): Internal.IRenderTypeBuffer;
        getPartialTicks(): number;
        getContent(): Internal.ITextComponent;
        getOriginalContent(): Internal.ITextComponent;
        getMatrixStack(): Internal.MatrixStack;
        getPackedLight(): number;
        get matrixStack(): Internal.MatrixStack;
        get entityRenderer(): Internal.EntityRenderer<any>;
        get renderTypeBuffer(): Internal.IRenderTypeBuffer;
        get content(): Internal.ITextComponent;
        get originalContent(): Internal.ITextComponent;
        get partialTicks(): number;
        get packedLight(): number;
        set content(arg0: Internal.ITextComponent_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Entity, arg1: Internal.ITextComponent, arg2: Internal.EntityRenderer<any>, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer, arg5: number, arg6: number);
        constructor();
    }
    type RenderNameplateEvent_ = RenderNameplateEvent;
    class EntityViewRenderEvent$FogEvent extends Internal.EntityViewRenderEvent {
        getType(): Internal.FogRenderer$FogType;
        get type(): Internal.FogRenderer$FogType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EntityViewRenderEvent$FogEvent_ = EntityViewRenderEvent$FogEvent;
    abstract class AbstractBlock extends Internal.ForgeRegistryEntry<Internal.Block> implements Internal.BlockAccessor, Internal.BlockKJS {
        func_176211_b(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
        func_225534_a_(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.Random): void;
        func_220068_i(): ResourceLocation;
        setMaterialKJS(arg0: Internal.Material): void;
        func_185471_a(arg0: Internal.BlockState, arg1: Internal.Mirror_): Internal.BlockState;
        func_220052_b(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos): Internal.INamedContainerProvider;
        getHasCollision(): boolean;
        func_149645_b(arg0: Internal.BlockState): Internal.BlockRenderType;
        func_220071_b(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.ISelectionContext): Internal.VoxelShape;
        setExplosionResistanceKJS(arg0: number): void;
        setJumpFactorKJS(arg0: number): void;
        func_196270_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity): void;
        func_225541_a_(arg0: Internal.BlockState, arg1: Internal.Fluid_): boolean;
        func_225542_b_(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.Random): void;
        func_180656_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
        func_196253_a(arg0: Internal.BlockState, arg1: Internal.BlockItemUseContext): boolean;
        setSoundTypeKJS(arg0: Internal.SoundType): void;
        func_230322_a_(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.ISelectionContext): Internal.VoxelShape;
        func_200122_a(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.Direction_): boolean;
        func_149744_f(arg0: Internal.BlockState): boolean;
        func_176218_Q(): Internal.AbstractBlock$OffsetType;
        getBlockBuilderKJS(): Internal.BlockBuilder;
        func_220082_b(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.BlockState, arg4: boolean): void;
        func_196248_b(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: number, arg4: number): void;
        func_220080_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        func_209900_a(arg0: Internal.BlockState, arg1: BlockPos): number;
        func_230335_e_(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        func_196260_a(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        func_180647_a(arg0: Internal.BlockState, arg1: Internal.PlayerEntity, arg2: Internal.IBlockReader, arg3: BlockPos): number;
        func_149656_h(arg0: Internal.BlockState): Internal.PushReaction;
        func_220069_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Block_, arg4: BlockPos, arg5: boolean): void;
        func_196262_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Entity): void;
        func_204507_t(arg0: Internal.BlockState): Internal.FluidState;
        func_149740_M(arg0: Internal.BlockState): boolean;
        func_220076_a(arg0: Internal.BlockState, arg1: Internal.LootContext$Builder): Internal.List<Internal.ItemStack>;
        func_180641_l(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos): number;
        func_220053_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.ISelectionContext): Internal.VoxelShape;
        func_189539_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: number, arg4: number): boolean;
        setFrictionKJS(arg0: number): void;
        setHasCollisionKJS(arg0: boolean): void;
        getBlockStatesKJS(): Internal.List<Internal.BlockState>;
        func_225533_a_(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity, arg4: Hand_, arg5: Internal.BlockRayTraceResult): Internal.ActionResultType;
        func_200011_d(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        func_220074_n(arg0: Internal.BlockState): boolean;
        func_196271_a(arg0: Internal.BlockState, arg1: Internal.Direction_, arg2: Internal.BlockState, arg3: Internal.IWorld, arg4: BlockPos, arg5: BlockPos): Internal.BlockState;
        setRegistryName(arg0: ResourceLocation_): any;
        setIsRandomlyTickingKJS(arg0: boolean): void;
        func_199600_g(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        func_196243_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.BlockState, arg4: boolean): void;
        func_220066_a(arg0: Internal.World, arg1: Internal.BlockState, arg2: Internal.BlockRayTraceResult, arg3: Internal.ProjectileEntity): void;
        func_196266_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.PathType_): boolean;
        func_220062_a(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.ItemStack): void;
        func_196247_c(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        func_185499_a(arg0: Internal.BlockState, arg1: Internal.Rotation_): Internal.BlockState;
        setBlockBuilderKJS(b: Internal.BlockBuilder): void;
        setSpeedFactorKJS(arg0: number): void;
        func_235695_q_(): boolean;
        func_199767_j(): Internal.Item;
        func_235697_s_(): Internal.MaterialColor;
        field_220085_g: ResourceLocation;
        readonly field_149764_J: Internal.Material;
        readonly field_235684_aB_: Internal.AbstractBlock$Properties;
        get blockBuilderKJS(): Internal.BlockBuilder;
        get blockStatesKJS(): Internal.List<Internal.BlockState>;
        get hasCollision(): boolean;
        set jumpFactorKJS(arg0: number);
        set isRandomlyTickingKJS(arg0: boolean);
        set blockBuilderKJS(b: Internal.BlockBuilder);
        set frictionKJS(arg0: number);
        set hasCollisionKJS(arg0: boolean);
        set materialKJS(arg0: Internal.Material);
        set speedFactorKJS(arg0: number);
        set soundTypeKJS(arg0: Internal.SoundType);
        set explosionResistanceKJS(arg0: number);
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.AbstractBlock$Properties);
    }
    type AbstractBlock_ = AbstractBlock;
    class ClickEvent extends Document.Object {
        func_150668_b(): string;
        func_150669_a(): Internal.ClickEvent$Action;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ClickEvent$Action, arg1: string);
    }
    type ClickEvent_ = ClickEvent;
    class WrappedWorld extends Internal.World implements Internal.ExtendedWorld {
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_226666_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.Stream<Internal.VoxelShape>;
        func_217298_h(arg0: BlockPos): number;
        func_225521_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity): boolean;
        func_190525_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Predicate_<Internal.Entity_>): Internal.PlayerEntity;
        func_226668_i_(arg0: Internal.Entity): boolean;
        func_217361_a<T_>(arg0: Internal.List<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number): T_;
        func_175707_a(arg0: BlockPos, arg1: BlockPos): boolean;
        func_217344_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        func_226669_j_(arg0: Internal.Entity): boolean;
        func_217348_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus_): Internal.IChunk;
        func_226659_b_(arg0: BlockPos, arg1: number): number;
        func_72953_d(arg0: Internal.AxisAlignedBB): boolean;
        func_226658_a_(arg0: Internal.LightType_, arg1: BlockPos): number;
        func_241851_ab(): number;
        func_226691_t_(arg0: BlockPos): Internal.Biome;
        func_234939_c_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_217374_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: Internal.AxisAlignedBB): Internal.List<T_>;
        func_242403_h(arg0: BlockPos): number;
        func_217370_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity): Internal.PlayerEntity;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_217372_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number): Internal.PlayerEntity;
        func_175710_j(arg0: BlockPos): boolean;
        func_217359_a(arg0: Internal.EntityPredicate, arg1: number, arg2: number, arg3: number): Internal.PlayerEntity;
        func_242405_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): boolean;
        func_225317_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217357_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217301_I(): number;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        func_242413_ae(): number;
        func_226663_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.ISelectionContext): boolean;
        func_226660_f_(arg0: BlockPos): boolean;
        func_212866_a_(arg0: number, arg1: number): Internal.IChunk;
        func_234938_ad_(): number;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_230547_a_(arg0: BlockPos, arg1: Internal.Block_): void;
        func_175627_a(arg0: BlockPos, arg1: Internal.Direction_): number;
        func_175623_d(arg0: BlockPos): boolean;
        func_242415_f(arg0: number): number;
        func_217362_a(arg0: Internal.Entity, arg1: number): Internal.PlayerEntity;
        func_72839_b(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.List<Internal.Entity>;
        func_201671_F(arg0: BlockPos): boolean;
        func_217360_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        func_205049_d(arg0: BlockPos, arg1: number): number;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
        func_217366_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): Internal.PlayerEntity;
        getPartEntities(): Internal.Collection<Internal.PartEntity<any>>;
        func_205052_D(arg0: BlockPos): number;
        func_201572_C(): number;
        func_242414_af(): number;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_225525_a_(arg0: BlockPos, arg1: Internal.ColorResolver_): number;
        func_226664_a_(arg0: Internal.AxisAlignedBB): boolean;
        func_175655_b(arg0: BlockPos, arg1: boolean): boolean;
        asKJS(): any;
        func_175659_aa(): Internal.Difficulty;
        func_241457_a_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): Internal.Stream<Internal.VoxelShape>;
        func_217373_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: Internal.AxisAlignedBB): Internal.List<Internal.PlayerEntity>;
        getLevel(): Internal.World;
        func_242406_i(arg0: BlockPos): Internal.Optional<Internal.RegistryKey<Internal.Biome>>;
        func_226665_a__(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): boolean;
        func_217371_b(arg0: Internal.UUID): Internal.PlayerEntity;
        func_217349_x(arg0: BlockPos): Internal.IChunk;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        isAreaLoaded(arg0: BlockPos, arg1: number): boolean;
        func_217379_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_234865_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): boolean;
        func_217354_b(arg0: number, arg1: number): boolean;
        func_225318_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        func_234867_d_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_217358_a(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        get partEntities(): Internal.Collection<Internal.PartEntity<any>>;
        get level(): Internal.World;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: Internal.AbstractChunkProvider);
        constructor(arg0: Internal.World);
    }
    type WrappedWorld_ = WrappedWorld;
    class StatisticsManager extends Document.Object {
        func_199060_a<T_>(arg0: Internal.StatType_<T_>, arg1: T_): number;
        func_77444_a(arg0: Internal.Stat<any>): number;
        func_150873_a(arg0: Internal.PlayerEntity, arg1: Internal.Stat<any>, arg2: number): void;
        func_150871_b(arg0: Internal.PlayerEntity, arg1: Internal.Stat<any>, arg2: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type StatisticsManager_ = StatisticsManager;
    class NetworkInterface extends Document.Object {
        getInterfaceAddresses(): Internal.List<Internal.InterfaceAddress>;
        getParent(): Internal.NetworkInterface;
        getName(): string;
        getIndex(): number;
        supportsMulticast(): boolean;
        getSubInterfaces(): Internal.Enumeration<Internal.NetworkInterface>;
        static getByIndex(arg0: number): Internal.NetworkInterface;
        inetAddresses(): Internal.Stream<Internal.InetAddress>;
        static getByInetAddress(arg0: Internal.InetAddress): Internal.NetworkInterface;
        isPointToPoint(): boolean;
        getMTU(): number;
        static networkInterfaces(): Internal.Stream<Internal.NetworkInterface>;
        isUp(): boolean;
        getDisplayName(): string;
        static getByName(arg0: string): Internal.NetworkInterface;
        getHardwareAddress(): number[];
        isLoopback(): boolean;
        subInterfaces(): Internal.Stream<Internal.NetworkInterface>;
        isVirtual(): boolean;
        static getNetworkInterfaces(): Internal.Enumeration<Internal.NetworkInterface>;
        getInetAddresses(): Internal.Enumeration<Internal.InetAddress>;
        get parent(): Internal.NetworkInterface;
        get hardwareAddress(): number[];
        get virtual(): boolean;
        get displayName(): string;
        get pointToPoint(): boolean;
        get interfaceAddresses(): Internal.List<Internal.InterfaceAddress>;
        get name(): string;
        get index(): number;
        get up(): boolean;
        get mTU(): number;
        get loopback(): boolean;
    }
    type NetworkInterface_ = NetworkInterface;
    interface PackedIntegerArrayExtended {
        copyUsingPalette<T>(arg0: T[], arg1: Internal.ClonedPalette_<T>): void;
        (arg0: T[], arg1: Internal.ClonedPalette<T>): void;
    }
    type PackedIntegerArrayExtended_ = ((arg0: T[], arg1: Internal.ClonedPalette<T>)=>void) | PackedIntegerArrayExtended;
    interface Long2ObjectMap$FastEntrySet <V> extends Internal.ObjectSet<Internal.Long2ObjectMap$Entry<V>> {
        fastForEach(arg0: Internal.Consumer_<Internal.Long2ObjectMap$Entry_<V>>): void;
        fastIterator(): Internal.ObjectIterator<Internal.Long2ObjectMap$Entry<V>>;
        (): Internal.ObjectIterator<Internal.Long2ObjectMap$Entry<V>>;
    }
    type Long2ObjectMap$FastEntrySet_<V> = (()=>Internal.ObjectIterator<Internal.Long2ObjectMap$Entry<V>>) | Long2ObjectMap$FastEntrySet<V>;
    interface TypeDescriptor$OfField <F> extends Internal.TypeDescriptor {
        componentType(): F;
        arrayType(): F;
        isArray(): boolean;
        isPrimitive(): boolean;
    }
    type TypeDescriptor$OfField_<F> = TypeDescriptor$OfField<F>;
    class ModuleDescriptor$Version extends Document.Object implements Internal.Comparable<Internal.ModuleDescriptor$Version> {
        static parse(arg0: string): Internal.ModuleDescriptor$Version;
        compareTo(arg0: Internal.ModuleDescriptor$Version): number;
        compareTo(arg0: any): number;
    }
    type ModuleDescriptor$Version_ = ModuleDescriptor$Version;
    class DimensionSavedDataManager extends Document.Object {
        func_215757_a(arg0: Internal.WorldSavedData): void;
        func_212775_b(): void;
        func_215752_a<T_>(arg0: java_.util.function_.Supplier_<T_>, arg1: string): T_;
        func_215755_a(arg0: string, arg1: number): Internal.CompoundNBT;
        func_215753_b<T_>(arg0: java_.util.function_.Supplier_<T_>, arg1: string): T_;
        readonly field_212778_c: Internal.Map<string, Internal.WorldSavedData>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File, arg1: Internal.DataFixer);
    }
    type DimensionSavedDataManager_ = DimensionSavedDataManager;
    abstract class ClassLoader extends Document.Object {
        static getSystemResources(arg0: string): Internal.Enumeration<Internal.URL>;
        getParent(): Internal.ClassLoader;
        getResource(arg0: string): Internal.URL;
        static getPlatformClassLoader(): Internal.ClassLoader;
        getName(): string;
        getResourceAsStream(arg0: string): Internal.InputStream;
        setDefaultAssertionStatus(arg0: boolean): void;
        resources(arg0: string): Internal.Stream<Internal.URL>;
        static getSystemClassLoader(): Internal.ClassLoader;
        static getSystemResource(arg0: string): Internal.URL;
        setPackageAssertionStatus(arg0: string, arg1: boolean): void;
        setClassAssertionStatus(arg0: string, arg1: boolean): void;
        getDefinedPackage(arg0: string): Internal.Package;
        static getSystemResourceAsStream(arg0: string): Internal.InputStream;
        clearAssertionStatus(): void;
        isRegisteredAsParallelCapable(): boolean;
        getResources(arg0: string): Internal.Enumeration<Internal.URL>;
        loadClass(arg0: string): Internal.Class<any>;
        getDefinedPackages(): Internal.Package[];
        getUnnamedModule(): Internal.Module;
        get parent(): Internal.ClassLoader;
        get systemClassLoader(): Internal.ClassLoader;
        get unnamedModule(): Internal.Module;
        get name(): string;
        get registeredAsParallelCapable(): boolean;
        get platformClassLoader(): Internal.ClassLoader;
        get definedPackages(): Internal.Package[];
        set defaultAssertionStatus(arg0: boolean);
    }
    type ClassLoader_ = ClassLoader;
    class IngredientWithCustomPredicateJS extends Document.Object implements Internal.IngredientJS {
        getItemIds(): Internal.Set<string>;
        anyStackMatches(ingredient: Internal.IngredientJS_): boolean;
        testVanillaItem(i: Internal.Item_): boolean;
        test(stack: Internal.ItemStackJS_): boolean;
        getStacks(): Internal.Set<Internal.ItemStackJS>;
        getVanillaItems(): Internal.Set<Internal.Item>;
        isEmpty(): boolean;
        asIngredientStack(): Internal.IngredientStackJS;
        isInvalidRecipeIngredient(): boolean;
        getVanillaPredicate(): Internal.Predicate<Internal.ItemStack>;
        filter(filter: Internal.IngredientJS_): Internal.IngredientJS;
        createVanillaIngredient(): Internal.Ingredient;
        not(): Internal.IngredientJS;
        toJson(): Internal.JsonElement;
        withCount(count: number): Internal.IngredientJS;
        unwrapStackIngredient(): Internal.List<Internal.IngredientJS>;
        getFirst(): Internal.ItemStackJS;
        testVanilla(stack: Internal.ItemStack): boolean;
        x(c: number): Internal.IngredientJS;
        copy(): Internal.IngredientJS;
        copy(): Internal.Copyable;
        getCount(): number;
        readonly predicate: Internal.Predicate<Internal.ItemStack>;
        readonly ingredient: Internal.IngredientJS;
        readonly uuid: Internal.UUID;
        get invalidRecipeIngredient(): boolean;
        get stacks(): Internal.Set<Internal.ItemStackJS>;
        get itemIds(): Internal.Set<string>;
        get count(): number;
        get vanillaItems(): Internal.Set<Internal.Item>;
        get first(): Internal.ItemStackJS;
        get empty(): boolean;
        get vanillaPredicate(): Internal.Predicate<Internal.ItemStack>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(id: Internal.UUID, i: Internal.IngredientJS, p: Internal.Predicate<Internal.ItemStack>);
    }
    type IngredientWithCustomPredicateJS_ = IngredientWithCustomPredicateJS;
    interface DebuggableScript {
        getFunctionName(): string;
        getSourceName(): string;
        getParent(): Internal.DebuggableScript;
        getParamOrVarName(arg0: number): string;
        isFunction(): boolean;
        getFunction(arg0: number): Internal.DebuggableScript;
        isTopLevel(): boolean;
        getLineNumbers(): number[];
        getFunctionCount(): number;
        getParamAndVarCount(): number;
        isGeneratedScript(): boolean;
        getParamCount(): number;
    }
    type DebuggableScript_ = DebuggableScript;
    class LootContext extends Document.Object implements Internal.LootContextAccessor {
        func_227501_a_(arg0: Internal.ILootCondition_): boolean;
        getLootingModifier(): number;
        func_227503_b_(arg0: Internal.ILootCondition_): void;
        func_227502_a_(arg0: ResourceLocation_): Internal.LootTable;
        repurposedstructures_setQueriedLootTableId(arg0: ResourceLocation_): void;
        getQueriedLootTableId(): ResourceLocation;
        func_216033_a(arg0: Internal.LootParameter<any>): boolean;
        func_216032_b(): Internal.Random;
        func_216031_c<T_>(arg0: Internal.LootParameter<T_>): T_;
        func_186490_b(arg0: Internal.LootTable): void;
        func_216034_a(arg0: ResourceLocation_, arg1: Internal.Consumer_<Internal.ItemStack_>): void;
        func_202879_g(): Internal.ServerWorld;
        setQueriedLootTableId(arg0: ResourceLocation_): void;
        func_186491_f(): number;
        func_186496_a(arg0: Internal.LootTable): boolean;
        func_227504_b_(arg0: ResourceLocation_): Internal.ILootCondition;
        get lootingModifier(): number;
        get queriedLootTableId(): ResourceLocation;
        set queriedLootTableId(arg0: ResourceLocation_);
    }
    type LootContext_ = LootContext;
    class GuiScreenEvent$DrawScreenEvent extends Internal.GuiScreenEvent {
        getMouseY(): number;
        getMouseX(): number;
        getRenderPartialTicks(): number;
        getMatrixStack(): Internal.MatrixStack;
        get mouseX(): number;
        get matrixStack(): Internal.MatrixStack;
        get renderPartialTicks(): number;
        get mouseY(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: Internal.MatrixStack, arg2: number, arg3: number, arg4: number);
    }
    type GuiScreenEvent$DrawScreenEvent_ = GuiScreenEvent$DrawScreenEvent;
    class BlockRightClickEventJS extends Internal.PlayerEventJS {
        getBlock(): Internal.BlockContainerJS;
        getHand(): Hand;
        getItem(): Internal.ItemStackJS;
        getFacing(): Internal.Direction;
        get item(): Internal.ItemStackJS;
        get facing(): Internal.Direction;
        get block(): Internal.BlockContainerJS;
        get hand(): Hand;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.PlayerEntity, hand: Hand, pos: BlockPos, direction: Internal.Direction);
    }
    type BlockRightClickEventJS_ = BlockRightClickEventJS;
    class StructureBlockTileEntity extends Internal.TileEntity {
        func_189724_l(): void;
        func_189726_i(): Internal.Rotation;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_184419_m(): boolean;
        func_189703_e(arg0: boolean): void;
        func_184417_l(): boolean;
        func_189701_a(arg0: Internal.PlayerEntity): boolean;
        func_189720_a(arg0: Internal.LivingEntity): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        func_184411_a(arg0: Internal.Mirror_): void;
        func_242688_a(arg0: Internal.ServerWorld, arg1: boolean): boolean;
        requestModelDataUpdate(): void;
        func_189716_h(): Internal.Mirror;
        func_208404_d(): boolean;
        func_189706_E(): void;
        func_189721_I(): boolean;
        func_189718_a(arg0: number): void;
        func_189710_f(arg0: boolean): void;
        func_189712_b(arg0: boolean): boolean;
        func_184405_a(arg0: Internal.StructureMode_): void;
        getModelData(): Internal.IModelData;
        func_184409_c(arg0: BlockPos): void;
        func_189700_k(): Internal.StructureMode;
        func_189723_d(arg0: boolean): void;
        func_189725_a(arg0: number): void;
        func_210163_a(arg0: ResourceLocation_): void;
        func_184414_b(arg0: BlockPos): void;
        getTileEntity(): Internal.TileEntity;
        func_242687_a(arg0: Internal.ServerWorld): boolean;
        func_184410_b(arg0: string): void;
        func_189708_j(): string;
        func_242689_a(arg0: Internal.ServerWorld, arg1: boolean, arg2: Internal.Template): boolean;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        func_189702_n(): number;
        func_189717_g(): BlockPos;
        func_189715_d(): string;
        func_189722_G(): boolean;
        func_189711_e(): BlockPos;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_227014_f_(): string;
        func_184406_a(arg0: boolean): void;
        func_184404_a(arg0: string): void;
        func_189719_o(): number;
        func_184408_a(arg0: Internal.Rotation_): void;
        onLoad(): void;
        func_189713_m(): boolean;
        func_189707_H(): boolean;
        func_189709_F(): boolean;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type StructureBlockTileEntity_ = StructureBlockTileEntity;
    class ServerScoreboard extends Internal.Scoreboard {
        func_96550_d(arg0: Internal.ScoreObjective): Internal.List<Internal.IPacket<any>>;
        func_186684_a(arg0: Internal.Runnable_): void;
        func_96548_f(arg0: Internal.ScoreObjective): Internal.List<Internal.IPacket<any>>;
        func_96549_e(arg0: Internal.ScoreObjective): void;
        func_96546_g(arg0: Internal.ScoreObjective): void;
        func_96552_h(arg0: Internal.ScoreObjective): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MinecraftServer);
    }
    type ServerScoreboard_ = ServerScoreboard;
    interface EmitParticlesInstruction$Emitter {
        create(arg0: Internal.PonderWorld, arg1: number, arg2: number, arg3: number): void;
        (arg0: Internal.PonderWorld, arg1: number, arg2: number, arg3: number): void;
    }
    type EmitParticlesInstruction$Emitter_ = ((arg0: Internal.PonderWorld, arg1: number, arg2: number, arg3: number)=>void) | EmitParticlesInstruction$Emitter;
    interface IMaterialItem extends Internal.IItemProvider {
        getMaterial(arg0: Internal.ItemStack): Internal.IMaterial;
        canUseMaterial(arg0: Internal.IMaterial): boolean;
        getMaterialId(arg0: Internal.ItemStack): Internal.Optional<Internal.MaterialId>;
        withMaterialForDisplay(arg0: Internal.MaterialId): Internal.ItemStack;
        withMaterial(arg0: Internal.IMaterial): Internal.ItemStack;
    }
    type IMaterialItem_ = IMaterialItem;
    class Advancement extends Document.Object {
        func_192072_d(): Internal.AdvancementRewards;
        func_192075_a(): Internal.Advancement$Builder;
        func_192074_h(): string[][];
        func_192068_c(): Internal.DisplayInfo;
        func_192073_f(): Internal.Map<string, Internal.Criterion>;
        func_193124_g(): number;
        func_192069_e(): Internal.Iterable<Internal.Advancement>;
        func_192067_g(): ResourceLocation;
        func_192070_b(): Internal.Advancement;
        func_192071_a(arg0: Internal.Advancement): void;
        func_193123_j(): Internal.ITextComponent;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.Advancement, arg2: Internal.DisplayInfo, arg3: Internal.AdvancementRewards, arg4: Internal.Map<string, Internal.Criterion>, arg5: string[][]);
    }
    type Advancement_ = Advancement;
    interface ISyncable <D, T> {
        set(arg0: T): void;
        get(): T;
        needSync(): boolean;
        getData(arg0: number): D;
    }
    type ISyncable_<D, T> = ISyncable<D, T>;
    interface Table$Cell <R, C, V> {
        getValue(): V;
        getColumnKey(): C;
        hashCode(): number;
        equals(arg0: any): boolean;
        getRowKey(): R;
    }
    type Table$Cell_<R, C, V> = Table$Cell<R, C, V>;
    class DarkOakFoliagePlacer extends Internal.FoliagePlacer {
        static readonly field_236745_a_: Internal.Codec<Internal.DarkOakFoliagePlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FeatureSpread, arg1: Internal.FeatureSpread);
    }
    type DarkOakFoliagePlacer_ = DarkOakFoliagePlacer;
    interface ConditionContainer {
        entityScores(entity: Internal.LootContext$EntityTarget_, scores: Internal.Map_<string, any>): Internal.ConditionContainer;
        killedByPlayer(): Internal.ConditionContainer;
        survivesExplosion(): Internal.ConditionContainer;
        randomChance(chance: number): Internal.ConditionContainer;
        randomChanceWithLooting(chance: number, multiplier: number): Internal.ConditionContainer;
        addCondition(arg0: Internal.JsonObject): Internal.ConditionContainer;
        entityProperties(entity: Internal.LootContext$EntityTarget_, properties: Internal.JsonObject): Internal.ConditionContainer;
        (arg0: Internal.JsonObject): Internal.ConditionContainer;
    }
    type ConditionContainer_ = ((arg0: Internal.JsonObject)=>Internal.ConditionContainer) | ConditionContainer;
    class ChapterImage extends Document.Object implements Internal.Movable {
        drawMoved(arg0: Internal.MatrixStack): void;
        getHeight(): number;
        getX(): number;
        move(arg0: Internal.Chapter, arg1: number, arg2: number): void;
        readData(arg0: Internal.CompoundNBT_): void;
        getY(): number;
        readNetData(arg0: Internal.PacketBuffer): void;
        getShape(): string;
        getWidth(): number;
        writeData(arg0: Internal.CompoundNBT_): void;
        getChapter(): Internal.Chapter;
        writeNetData(arg0: Internal.PacketBuffer): void;
        getConfig(arg0: Internal.ConfigGroup): void;
        chapter: Internal.Chapter;
        image: Internal.Icon;
        hover: Internal.List<string>;
        dev: boolean;
        corner: boolean;
        dependency: Internal.Quest;
        rotation: number;
        x: number;
        width: number;
        y: number;
        click: string;
        height: number;
        get shape(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Chapter);
    }
    type ChapterImage_ = ChapterImage;
    /**
    */
    class CompoundNBT extends Document.Object implements Internal.INBT, dev.latvian.mods.rhino.util.MapLike<any,any> {
        func_202168_c(arg0: string, arg1: Internal.List<number>): void;
        func_186855_b(arg0: string): boolean;
        func_186857_a(arg0: string): Internal.UUID;
        func_74773_a(arg0: string, arg1: number[]): void;
        func_74771_c(arg0: string): number;
        putML(key: string, v: any): void;
        putML(arg0: any, arg1: any): void;
        func_74760_g(arg0: string): number;
        func_74762_e(arg0: string): number;
        func_74764_b(arg0: string): boolean;
        func_74768_a(arg0: string, arg1: number): void;
        func_225647_b_(): Internal.INBTType<Internal.CompoundNBT>;
        handler$zbd000$copyEfficient(cir: Internal.CallbackInfoReturnable<any>): void;
        func_74783_a(arg0: string, arg1: number[]): void;
        func_74781_a(arg0: string): Internal.INBT;
        getML(arg0: any): any;
        getML(key: string): any;
        func_74732_a(): number;
        func_74778_a(arg0: string, arg1: string): void;
        func_74770_j(arg0: string): number[];
        func_74734_a(arg0: Internal.DataOutput): void;
        func_74757_a(arg0: string, arg1: boolean): void;
        func_74776_a(arg0: string, arg1: number): void;
        func_197646_b(arg0: string, arg1: Internal.List<number>): void;
        func_150299_b(arg0: string): number;
        func_74759_k(arg0: string): number[];
        func_197644_a(arg0: string, arg1: number[]): void;
        func_150295_c(arg0: string, arg1: number): Internal.ListNBT;
        clearML(): void;
        func_218657_a(arg0: string, arg1: Internal.INBT): Internal.INBT;
        func_150297_b(arg0: string, arg1: number): boolean;
        func_186854_a(arg0: string, arg1: Internal.UUID): void;
        func_74774_a(arg0: string, arg1: number): void;
        func_186856_d(): number;
        func_74772_a(arg0: string, arg1: number): void;
        keysML(): Internal.Collection<any>;
        removeML(arg0: any): void;
        removeML(key: string): void;
        func_150285_a_(): string;
        func_197637_c(): Internal.ITextComponent;
        func_74763_f(arg0: string): number;
        func_74765_d(arg0: string): number;
        func_74767_n(arg0: string): boolean;
        func_199850_a(arg0: string, arg1: number): Internal.ITextComponent;
        containsKeyML(key: string): boolean;
        containsKeyML(arg0: any): boolean;
        func_74769_h(arg0: string): number;
        isEmpty(): boolean;
        func_197645_o(arg0: string): number[];
        func_74780_a(arg0: string, arg1: number): void;
        wrapAsJavaObject(cx: Internal.Context, scope: Internal.Scriptable, staticType: Internal.Class<any>): Internal.Scriptable;
        func_74737_b(): Internal.INBT;
        func_74737_b(): Internal.CompoundNBT;
        func_74777_a(arg0: string, arg1: number): void;
        func_74775_l(arg0: string): Internal.CompoundNBT;
        func_197643_a(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        func_74779_i(arg0: string): string;
        func_150296_c(): Internal.Set<string>;
        func_82580_o(arg0: string): void;
        static readonly field_240597_a_: Internal.Codec<Internal.CompoundNBT>;
        readonly field_74784_a: Internal.Map<string, Internal.INBT>;
        static readonly field_229675_a_: Internal.INBTType<Internal.CompoundNBT>;
        get empty(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<string, Internal.INBT>);
        constructor();
        [x: string]: any;
    }
    type CompoundNBT_ = object | CompoundNBT;
    interface IForgeBlockState {
        rotate(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.Rotation_): Internal.BlockState;
        getStateAtViewpoint(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Vec3): Internal.BlockState;
        onBlockExploded(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Explosion): void;
        getBedDirection(arg0: Internal.IWorldReader, arg1: BlockPos): Internal.Direction;
        getHarvestLevel(): number;
        isBed(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.LivingEntity): boolean;
        canHarvestBlock(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        getBedSpawnPosition(arg0: Internal.EntityType_<any>, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: number, arg4: Internal.LivingEntity): Internal.Optional<Vec3>;
        isLadder(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.LivingEntity): boolean;
        shouldDisplayFluidOverlay(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.FluidState): boolean;
        canStickTo(arg0: Internal.BlockState): boolean;
        onNeighborChange(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos): void;
        getPickBlock(arg0: Internal.RayTraceResult, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.PlayerEntity): Internal.ItemStack;
        getWeakChanges(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        isBurning(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        canEntityDestroy(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Entity): boolean;
        getHarvestTool(): Internal.ToolType;
        hasTileEntity(): boolean;
        isPortalFrame(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        getExplosionResistance(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Explosion): number;
        isScaffolding(arg0: Internal.LivingEntity): boolean;
        canSustainPlant(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_, arg3: Internal.IPlantable_): boolean;
        observedNeighborChange(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Block_, arg3: BlockPos): void;
        canDropFromExplosion(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Explosion): boolean;
        removedByPlayer(arg0: Internal.World, arg1: BlockPos, arg2: Internal.PlayerEntity, arg3: boolean, arg4: Internal.FluidState): boolean;
        createTileEntity(arg0: Internal.IBlockReader): Internal.TileEntity;
        isStickyBlock(): boolean;
        isFertile(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        getFogColor(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Entity, arg3: Vec3, arg4: number): Vec3;
        getAiPathNodeType(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.MobEntity): Internal.PathNodeType;
        getAiPathNodeType(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.PathNodeType;
        isSlimeBlock(): boolean;
        getLightValue(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        getFireSpreadSpeed(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): number;
        getBlockState(): Internal.BlockState;
        isAir(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        getToolModifiedState(arg0: Internal.World, arg1: BlockPos, arg2: Internal.PlayerEntity, arg3: Internal.ItemStack, arg4: Internal.ToolType): Internal.BlockState;
        getBeaconColorMultiplier(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos): number[];
        getExpDrop(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: number, arg3: number): number;
        isConduitFrame(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos): boolean;
        canBeReplacedByLogs(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        shouldCheckWeakPower(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Entity): boolean;
        addLandingEffects(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.LivingEntity, arg4: number): boolean;
        canCreatureSpawn(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.EntitySpawnPlacementRegistry$PlacementType_, arg3: Internal.EntityType_<any>): boolean;
        getSoundType(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Entity): Internal.SoundType;
        isToolEffective(arg0: Internal.ToolType): boolean;
        addRunningEffects(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Entity): boolean;
        canBeReplacedByLeaves(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        getSlipperiness(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Entity): number;
        isFlammable(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        addDestroyEffects(arg0: Internal.World, arg1: BlockPos, arg2: Internal.ParticleManager): boolean;
        getEnchantPowerBonus(arg0: Internal.IWorldReader, arg1: BlockPos): number;
        setBedOccupied(arg0: Internal.World, arg1: BlockPos, arg2: Internal.LivingEntity, arg3: boolean): void;
        isFireSource(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        getRespawnPosition(arg0: Internal.EntityType_<any>, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: number, arg4: Internal.LivingEntity): Internal.Optional<Vec3>;
        catchFire(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Direction_, arg3: Internal.LivingEntity): void;
        canConnectRedstone(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        addHitEffects(arg0: Internal.World, arg1: Internal.RayTraceResult, arg2: Internal.ParticleManager): boolean;
        getFlammability(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): number;
    }
    type IForgeBlockState_ = IForgeBlockState;
    class StonecuttingRecipe extends Internal.SingleItemRecipe {
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<Internal.ItemStack>;
        func_192399_d(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: string, arg2: Internal.Ingredient, arg3: Internal.ItemStack);
    }
    type StonecuttingRecipe_ = StonecuttingRecipe;
    interface DomainCombiner {
        combine(arg0: Internal.ProtectionDomain[], arg1: Internal.ProtectionDomain[]): Internal.ProtectionDomain[];
        (arg0: Internal.ProtectionDomain[], arg1: Internal.ProtectionDomain[]): Internal.ProtectionDomain[];
    }
    type DomainCombiner_ = ((arg0: Internal.ProtectionDomain[], arg1: Internal.ProtectionDomain[])=>Internal.ProtectionDomain[]) | DomainCombiner;
    class MerchantContainer extends Internal.Container implements Internal.MerchantContainerAccessor {
        func_223432_h(): boolean;
        func_217043_f(arg0: number): void;
        func_217051_h(): Internal.MerchantOffers;
        func_217042_i(): boolean;
        setTrader(arg0: Internal.IMerchant): void;
        func_217047_f(): number;
        func_217046_g(arg0: number): void;
        func_217048_e(): number;
        setTradeContainer(arg0: Internal.MerchantInventory): void;
        func_75175_c(arg0: number): void;
        func_217044_a(arg0: Internal.MerchantOffers): void;
        func_217052_e(arg0: number): void;
        func_217045_a(arg0: boolean): void;
        func_217049_g(): number;
        func_223431_b(arg0: boolean): void;
        readonly field_75178_e: Internal.IMerchant;
        set tradeContainer(arg0: Internal.MerchantInventory);
        set trader(arg0: Internal.IMerchant);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IMerchant);
    }
    type MerchantContainer_ = MerchantContainer;
    interface Functor$Mu extends Internal.Kind1$Mu {
    }
    type Functor$Mu_ = Functor$Mu;
    class HierarchyEvent extends Internal.AWTEvent {
        getChangedParent(): java_.awt.Container;
        getChangeFlags(): number;
        getChanged(): Internal.Component;
        getComponent(): Internal.Component;
        static readonly SHOWING_CHANGED: 4;
        static readonly HIERARCHY_FIRST: 1400;
        static readonly PARENT_CHANGED: 1;
        static readonly HIERARCHY_CHANGED: 1400;
        static readonly ANCESTOR_MOVED: 1401;
        static readonly DISPLAYABILITY_CHANGED: 2;
        static readonly ANCESTOR_RESIZED: 1402;
        static readonly HIERARCHY_LAST: 1402;
        get component(): Internal.Component;
        get changedParent(): java_.awt.Container;
        get changeFlags(): number;
        get changed(): Internal.Component;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Component, arg1: number, arg2: Internal.Component, arg3: java_.awt.Container);
        constructor(arg0: Internal.Component, arg1: number, arg2: Internal.Component, arg3: java_.awt.Container, arg4: number);
    }
    type HierarchyEvent_ = HierarchyEvent;
    interface ISpawnWorldInfo extends Internal.IWorldInfo {
        func_76087_c(arg0: number): void;
        func_76056_b(arg0: number): void;
        func_76058_a(arg0: number): void;
        func_241859_a(arg0: number): void;
        func_176143_a(arg0: BlockPos, arg1: number): void;
    }
    type ISpawnWorldInfo_ = ISpawnWorldInfo;
    class TargetingInfo extends Document.Object {
        static readFromNBT(tag: Internal.CompoundNBT_): Internal.TargetingInfo;
        writeToNBT(tag: Internal.CompoundNBT_): void;
        readonly side: Internal.Direction;
        readonly hitX: number;
        readonly hitY: number;
        readonly hitZ: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(ctx: Internal.ItemUseContext);
        constructor(side: Internal.Direction, hitX: number, hitY: number, hitZ: number);
    }
    type TargetingInfo_ = TargetingInfo;
    interface Codec$ResultFunction <A> {
        apply<T>(arg0: Internal.DynamicOps<T>, arg1: T, arg2: Internal.DataResult<Internal.Pair<A, T>>): Internal.DataResult<Internal.Pair<A, T>>;
        coApply<T>(arg0: Internal.DynamicOps<T>, arg1: A, arg2: Internal.DataResult<T>): Internal.DataResult<T>;
    }
    type Codec$ResultFunction_<A> = Codec$ResultFunction<A>;
    class Biome$RainType extends Internal.Enum<Internal.Biome$RainType> implements Internal.IStringSerializable {
        static func_235122_a_(arg0: string): Internal.Biome$RainType;
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.Biome$RainType;
        static values(): Internal.Biome$RainType[];
        func_222361_a(): string;
        static readonly RAIN: Internal.Biome$RainType;
        static readonly SNOW: Internal.Biome$RainType;
        static readonly NONE: Internal.Biome$RainType;
        static readonly field_235121_d_: Internal.Codec<Internal.Biome$RainType>;
    }
    type Biome$RainType_ = "none" | "rain" | "snow" | Biome$RainType;
    class EnergyConfig extends Document.Object implements Internal.IEnergyConfig<Internal.Tier> {
        getTransfer(arg0: Internal.Enum<any>): number;
        getTransfer(arg0: Internal.Tier_): number;
        reload(): void;
        getGeneration(arg0: Internal.Tier_): number;
        getCapacity(arg0: Internal.Enum<any>): number;
        getCapacity(arg0: Internal.Tier_): number;
        readonly spiritedTransfer: Internal.ForgeConfigSpec$LongValue;
        readonly blazingCap: Internal.ForgeConfigSpec$LongValue;
        readonly starterTransfer: Internal.ForgeConfigSpec$LongValue;
        readonly basicTransfer: Internal.ForgeConfigSpec$LongValue;
        readonly hardenedTransfer: Internal.ForgeConfigSpec$LongValue;
        readonly basicCap: Internal.ForgeConfigSpec$LongValue;
        readonly nioticCap: Internal.ForgeConfigSpec$LongValue;
        readonly nitroCap: Internal.ForgeConfigSpec$LongValue;
        readonly hardenedCap: Internal.ForgeConfigSpec$LongValue;
        readonly starterCap: Internal.ForgeConfigSpec$LongValue;
        readonly spiritedCap: Internal.ForgeConfigSpec$LongValue;
        readonly transfer: Internal.Map<Internal.Tier, number>;
        readonly capacities: Internal.Map<Internal.Tier, number>;
        readonly nioticTransfer: Internal.ForgeConfigSpec$LongValue;
        readonly blazingTransfer: Internal.ForgeConfigSpec$LongValue;
        readonly nitroTransfer: Internal.ForgeConfigSpec$LongValue;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder, arg1: number[], arg2: number[]);
    }
    type EnergyConfig_ = EnergyConfig;
    interface PonderBuilderJS$SceneConsumer extends Internal.BiConsumer<Internal.SceneBuilderJS, Internal.SceneBuildingUtilJS> {
    }
    type PonderBuilderJS$SceneConsumer_ = PonderBuilderJS$SceneConsumer;
    abstract class AbstractCollection <E> extends Document.Object implements Internal.Collection<E> {
        add(arg0: E): boolean;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        containsAll(arg0: Internal.Collection<any>): boolean;
        isEmpty(): boolean;
        clear(): void;
        remove(arg0: any): boolean;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        removeAll(arg0: Internal.Collection<any>): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<E>;
        size(): number;
        stream(): Internal.Stream<E>;
        addAll(arg0: Internal.Collection<E>): boolean;
        toArray<T_>(arg0: T_[]): T_[];
        toArray(): any[];
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<E>;
        retainAll(arg0: Internal.Collection<any>): boolean;
        get empty(): boolean;
    }
    type AbstractCollection_<E> = AbstractCollection<E>;
    class FogRenderer$FogType extends Internal.Enum<Internal.FogRenderer$FogType> {
        static valueOf(arg0: string): Internal.FogRenderer$FogType;
        static values(): Internal.FogRenderer$FogType[];
        static readonly FOG_TERRAIN: Internal.FogRenderer$FogType;
        static readonly FOG_SKY: Internal.FogRenderer$FogType;
    }
    type FogRenderer$FogType_ = "fog_sky" | "fog_terrain" | FogRenderer$FogType;
    class CaveDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_201742_a(arg0: BlockPos, arg1: Internal.List<BlockPos>, arg2: Internal.List<number>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CaveDebugRenderer_ = CaveDebugRenderer;
    class VariedRenderSkyboxCube extends Internal.RenderSkyboxCube {
        setVariation(arg0: number): void;
        set variation(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type VariedRenderSkyboxCube_ = VariedRenderSkyboxCube;
    class RenderState$FogState extends Internal.RenderState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Runnable, arg2: Internal.Runnable);
    }
    type RenderState$FogState_ = RenderState$FogState;
    interface ISearchTree <T> {
        func_194038_a(arg0: string): Internal.List<T>;
        (arg0: string): Internal.List<T>;
    }
    type ISearchTree_<T> = ((arg0: string)=>Internal.List<T>) | ISearchTree<T>;
    class ResourcePackInfo$Priority extends Internal.Enum<Internal.ResourcePackInfo$Priority> {
        func_198993_a<T_>(arg0: Internal.List<T_>, arg1: T_, arg2: Internal.Function_<T_, Internal.ResourcePackInfo_>, arg3: boolean): number;
        static valueOf(arg0: string): Internal.ResourcePackInfo$Priority;
        static values(): Internal.ResourcePackInfo$Priority[];
        func_198992_a(): Internal.ResourcePackInfo$Priority;
        static readonly TOP: Internal.ResourcePackInfo$Priority;
        static readonly BOTTOM: Internal.ResourcePackInfo$Priority;
    }
    type ResourcePackInfo$Priority_ = "top" | "bottom" | ResourcePackInfo$Priority;
    class RecipeFunction extends Internal.BaseFunction implements Internal.WrappedJS {
        call(cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args0: any[]): Internal.RecipeJS;
        createRecipe(args0: any[]): Internal.RecipeJS;
        readonly typeID: ResourceLocation;
        readonly type: Internal.RecipeTypeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(e: Internal.RecipeEventJS, id: ResourceLocation, t: Internal.RecipeTypeJS);
    }
    type RecipeFunction_ = RecipeFunction;
    class ImmutableMultiset$Builder <E> extends Internal.ImmutableCollection$Builder<E> {
        add(arg0: any): Internal.ImmutableCollection$Builder<any>;
        add(arg0: E): Internal.ImmutableMultiset$Builder<E>;
        add(...arg0: E[]): Internal.ImmutableMultiset$Builder<E>;
        add(arg0: any[]): Internal.ImmutableCollection$Builder<any>;
        build(): Internal.ImmutableCollection<any>;
        build(): Internal.ImmutableMultiset<E>;
        addAll(arg0: Internal.Iterator<any>): Internal.ImmutableCollection$Builder<any>;
        addAll(arg0: Internal.Iterator<E>): Internal.ImmutableMultiset$Builder<E>;
        addAll(arg0: Internal.Iterable_<any>): Internal.ImmutableCollection$Builder<any>;
        addAll(arg0: Internal.Iterable_<E>): Internal.ImmutableMultiset$Builder<E>;
        addCopies(arg0: E, arg1: number): Internal.ImmutableMultiset$Builder<E>;
        setCount(arg0: E, arg1: number): Internal.ImmutableMultiset$Builder<E>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ImmutableMultiset$Builder_<E> = ImmutableMultiset$Builder<E>;
    interface MemorySegment {
        asReadOnly(): Internal.MemorySegment;
        heapBase(): Internal.Optional<any>;
        byteSize(): number;
        isMapped(): boolean;
        asByteBuffer(): Internal.ByteBuffer;
        segmentOffset(arg0: Internal.MemorySegment): number;
        isLoaded(): boolean;
        isNative(): boolean;
        isReadOnly(): boolean;
        load(): void;
        hashCode(): number;
        get(arg0: Internal.ValueLayout$OfLong, arg1: number): number;
        get(arg0: Internal.ValueLayout$OfChar, arg1: number): string;
        get(arg0: Internal.AddressLayout, arg1: number): Internal.MemorySegment;
        get(arg0: Internal.ValueLayout$OfFloat, arg1: number): number;
        get(arg0: Internal.ValueLayout$OfDouble, arg1: number): number;
        get(arg0: Internal.ValueLayout$OfShort, arg1: number): number;
        get(arg0: Internal.ValueLayout$OfByte, arg1: number): number;
        get(arg0: Internal.ValueLayout$OfBoolean, arg1: number): boolean;
        get(arg0: Internal.ValueLayout$OfInt, arg1: number): number;
        scope(): Internal.MemorySegment$Scope;
        unload(): void;
        toArray(arg0: Internal.ValueLayout$OfLong): number[];
        toArray(arg0: Internal.ValueLayout$OfDouble): number[];
        toArray(arg0: Internal.ValueLayout$OfInt): number[];
        toArray(arg0: Internal.ValueLayout$OfChar): string[];
        toArray(arg0: Internal.ValueLayout$OfShort): number[];
        toArray(arg0: Internal.ValueLayout$OfByte): number[];
        toArray(arg0: Internal.ValueLayout$OfFloat): number[];
        getAtIndex(arg0: Internal.ValueLayout$OfFloat, arg1: number): number;
        getAtIndex(arg0: Internal.ValueLayout$OfChar, arg1: number): string;
        getAtIndex(arg0: Internal.AddressLayout, arg1: number): Internal.MemorySegment;
        getAtIndex(arg0: Internal.ValueLayout$OfDouble, arg1: number): number;
        getAtIndex(arg0: Internal.ValueLayout$OfShort, arg1: number): number;
        getAtIndex(arg0: Internal.ValueLayout$OfLong, arg1: number): number;
        getAtIndex(arg0: Internal.ValueLayout$OfByte, arg1: number): number;
        getAtIndex(arg0: Internal.ValueLayout$OfInt, arg1: number): number;
        getAtIndex(arg0: Internal.ValueLayout$OfBoolean, arg1: number): boolean;
        setUtf8String(arg0: number, arg1: string): void;
        address(): number;
        set(arg0: Internal.ValueLayout$OfLong, arg1: number, arg2: number): void;
        set(arg0: Internal.ValueLayout$OfDouble, arg1: number, arg2: number): void;
        set(arg0: Internal.AddressLayout, arg1: number, arg2: Internal.MemorySegment): void;
        set(arg0: Internal.ValueLayout$OfByte, arg1: number, arg2: number): void;
        set(arg0: Internal.ValueLayout$OfShort, arg1: number, arg2: number): void;
        set(arg0: Internal.ValueLayout$OfChar, arg1: number, arg2: string): void;
        set(arg0: Internal.ValueLayout$OfInt, arg1: number, arg2: number): void;
        set(arg0: Internal.ValueLayout$OfBoolean, arg1: number, arg2: boolean): void;
        set(arg0: Internal.ValueLayout$OfFloat, arg1: number, arg2: number): void;
        spliterator(arg0: Internal.MemoryLayout): Internal.Spliterator<Internal.MemorySegment>;
        isAccessibleBy(arg0: Internal.Thread): boolean;
        fill(arg0: number): Internal.MemorySegment;
        copyFrom(arg0: Internal.MemorySegment): Internal.MemorySegment;
        reinterpret(arg0: number, arg1: Internal.Arena, arg2: Internal.Consumer_<Internal.MemorySegment_>): Internal.MemorySegment;
        reinterpret(arg0: Internal.Arena, arg1: Internal.Consumer_<Internal.MemorySegment_>): Internal.MemorySegment;
        reinterpret(arg0: number): Internal.MemorySegment;
        elements(arg0: Internal.MemoryLayout): Internal.Stream<Internal.MemorySegment>;
        mismatch(arg0: Internal.MemorySegment): number;
        equals(arg0: any): boolean;
        setAtIndex(arg0: Internal.AddressLayout, arg1: number, arg2: Internal.MemorySegment): void;
        setAtIndex(arg0: Internal.ValueLayout$OfChar, arg1: number, arg2: string): void;
        setAtIndex(arg0: Internal.ValueLayout$OfFloat, arg1: number, arg2: number): void;
        setAtIndex(arg0: Internal.ValueLayout$OfBoolean, arg1: number, arg2: boolean): void;
        setAtIndex(arg0: Internal.ValueLayout$OfShort, arg1: number, arg2: number): void;
        setAtIndex(arg0: Internal.ValueLayout$OfInt, arg1: number, arg2: number): void;
        setAtIndex(arg0: Internal.ValueLayout$OfByte, arg1: number, arg2: number): void;
        setAtIndex(arg0: Internal.ValueLayout$OfLong, arg1: number, arg2: number): void;
        setAtIndex(arg0: Internal.ValueLayout$OfDouble, arg1: number, arg2: number): void;
        getUtf8String(arg0: number): string;
        asOverlappingSlice(arg0: Internal.MemorySegment): Internal.Optional<Internal.MemorySegment>;
        force(): void;
        asSlice(arg0: number, arg1: Internal.MemoryLayout): Internal.MemorySegment;
        asSlice(arg0: number): Internal.MemorySegment;
        asSlice(arg0: number, arg1: number, arg2: number): Internal.MemorySegment;
        asSlice(arg0: number, arg1: number): Internal.MemorySegment;
    }
    type MemorySegment_ = MemorySegment;
    class RandomBlockMatchRuleTest extends Internal.RuleTest {
        static readonly field_237117_a_: Internal.Codec<Internal.RandomBlockMatchRuleTest>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Block, arg1: number);
    }
    type RandomBlockMatchRuleTest_ = RandomBlockMatchRuleTest;
    abstract class Container extends Document.Object implements Internal.ContainerMixin, Internal.ContainerAccessor, Internal.ContainerAccess, blusunrize.immersiveengineering.mixin.accessors.ContainerAccess {
        static func_94525_a(arg0: Internal.Set<Internal.Slot>, arg1: number, arg2: Internal.ItemStack, arg3: number): void;
        getListeners(): Internal.List<any>;
        static func_94527_a(arg0: Internal.Slot, arg1: Internal.ItemStack, arg2: boolean): boolean;
        static func_94526_b(arg0: Internal.IInventory): number;
        func_216957_a(): Internal.ContainerType<any>;
        func_75130_a(arg0: Internal.IInventory): void;
        getLastSlots(): Internal.NonNullList<any>;
        func_75136_a(arg0: Internal.PlayerInventory): number;
        func_75137_b(arg0: number, arg1: number): void;
        func_75138_a(): Internal.NonNullList<Internal.ItemStack>;
        static func_94529_b(arg0: number): number;
        func_75132_a(arg0: Internal.IContainerListener): void;
        func_75134_a(arg0: Internal.PlayerEntity): void;
        func_75128_a(arg0: Internal.PlayerEntity, arg1: boolean): void;
        func_75129_b(arg0: Internal.PlayerEntity): boolean;
        func_82847_b(arg0: Internal.IContainerListener): void;
        func_82846_b(arg0: Internal.PlayerEntity, arg1: number): Internal.ItemStack;
        func_94530_a(arg0: Internal.ItemStack, arg1: Internal.Slot): boolean;
        func_184996_a(arg0: number, arg1: number, arg2: Internal.ClickType_, arg3: Internal.PlayerEntity): Internal.ItemStack;
        static func_94534_d(arg0: number, arg1: number): number;
        func_190896_a(arg0: Internal.List<Internal.ItemStack>): void;
        func_75141_a(arg0: number, arg1: Internal.ItemStack): void;
        func_75140_a(arg0: Internal.PlayerEntity, arg1: number): boolean;
        func_94531_b(arg0: Internal.Slot): boolean;
        static func_94532_c(arg0: number): number;
        func_75145_c(arg0: Internal.PlayerEntity): boolean;
        static func_180610_a(arg0: number, arg1: Internal.PlayerEntity): boolean;
        func_75142_b(): void;
        static func_195929_a(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_75139_a(arg0: number): Internal.Slot;
        static func_178144_a(arg0: Internal.TileEntity): number;
        field_94536_g: number;
        readonly field_94537_h: Internal.Set<Internal.Slot>;
        readonly field_75151_b: Internal.List<Internal.Slot>;
        field_75152_c: number;
        field_94535_f: number;
        field_75153_a: Internal.NonNullList<Internal.ItemStack>;
        readonly field_75148_f: Internal.Set<Internal.PlayerEntity>;
        readonly field_75149_d: Internal.List<Internal.IContainerListener>;
        get listeners(): Internal.List<any>;
        get lastSlots(): Internal.NonNullList<any>;
    }
    type Container_ = Container;
    interface IRuleTestType <P> {
        codec(): Internal.Codec<P>;
        (): Internal.Codec<P>;
    }
    type IRuleTestType_<P> = (()=>Internal.Codec<P>) | IRuleTestType<P>;
    class RenderState$TargetState extends Internal.RenderState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Runnable, arg2: Internal.Runnable);
    }
    type RenderState$TargetState_ = RenderState$TargetState;
    class PixelBuffer extends Document.Object {
        getSubimage(x: number, y: number, w: number, h: number): Internal.PixelBuffer;
        getHeight(): number;
        toImage(type: number): Internal.BufferedImage;
        setPixels(p: number[]): void;
        getPixels(): number[];
        setRGB(startX: number, startY: number, buffer: Internal.PixelBuffer): void;
        setRGB(x: number, y: number, col: number): void;
        setRGB(startX: number, startY: number, w: number, h: number, rgbArray: number[]): void;
        static from(img: Internal.BufferedImage): Internal.PixelBuffer;
        static from(stream: Internal.InputStream): Internal.PixelBuffer;
        getWidth(): number;
        copy(): Internal.PixelBuffer;
        fill(startX: number, startY: number, w: number, h: number, col: number): void;
        fill(col: number): void;
        toByteBuffer(alpha: boolean): Internal.ByteBuffer;
        getRGB(startX: number, startY: number, w: number, h: number, p: number[]): number[];
        getRGB(x: number, y: number): number;
        get pixels(): number[];
        get width(): number;
        get height(): number;
        set pixels(p: number[]);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(w: number, h: number);
    }
    type PixelBuffer_ = PixelBuffer;
    class EmbeddiumRenderLayerCache extends Document.Object {
        forState<O_, S_, H_>(state: H_): Internal.List<Internal.RenderType>;
        invalidate(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EmbeddiumRenderLayerCache_ = EmbeddiumRenderLayerCache;
    interface Externalizable extends Internal.Serializable {
        writeExternal(arg0: Internal.ObjectOutput): void;
        readExternal(arg0: Internal.ObjectInput): void;
    }
    type Externalizable_ = Externalizable;
    abstract class Task extends Internal.QuestObject {
        autoSubmitOnPlayerTick(): number;
        addTitleInMouseOverText(): boolean;
        getButtonText(): Internal.IFormattableTextComponent;
        formatProgress(arg0: Internal.TeamData, arg1: number): string;
        submitTask(arg0: Internal.TeamData, arg1: Internal.ServerPlayerEntity, arg2: Internal.ItemStack): void;
        submitTask(arg0: Internal.TeamData, arg1: Internal.ServerPlayerEntity): void;
        checkOnLogin(): boolean;
        formatMaxProgress(): string;
        addMouseOverText(arg0: Internal.TooltipList, arg1: Internal.TeamData): void;
        drawGUI(arg0: Internal.TeamData, arg1: Internal.MatrixStack, arg2: number, arg3: number, arg4: number, arg5: number): void;
        getIngredient(): any;
        submitItemsOnInventoryChange(): boolean;
        getType(): Internal.TaskType;
        onButtonClicked(arg0: Internal.Button, arg1: boolean): void;
        getMaxProgress(): number;
        consumesResources(): boolean;
        canInsertItem(): boolean;
        hideProgressNumbers(): boolean;
        readonly quest: Internal.Quest;
        get buttonText(): Internal.IFormattableTextComponent;
        get ingredient(): any;
        get maxProgress(): number;
        get type(): Internal.TaskType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Quest);
    }
    type Task_ = Task;
    class PlayerController extends Document.Object implements Internal.PlayerControllerAccess {
        func_217292_a(arg0: Internal.ClientPlayerEntity, arg1: Internal.ClientWorld, arg2: Hand_, arg3: Internal.BlockRayTraceResult): Internal.ActionResultType;
        func_78757_d(): number;
        func_181040_m(): boolean;
        func_241822_k(): Internal.GameType;
        func_78758_h(): boolean;
        func_187102_a(arg0: Internal.PlayerEntity, arg1: Internal.Entity, arg2: Internal.EntityRayTraceResult, arg3: Hand_): Internal.ActionResultType;
        func_78761_a(arg0: Internal.ItemStack, arg1: number): void;
        func_187103_a(arg0: BlockPos): boolean;
        func_199681_a(arg0: Internal.ClientWorld, arg1: Internal.StatisticsManager, arg2: Internal.ClientRecipeBook): Internal.ClientPlayerEntity;
        func_78764_a(arg0: Internal.PlayerEntity, arg1: Internal.Entity): void;
        func_78766_c(arg0: Internal.PlayerEntity): void;
        func_78762_g(): boolean;
        func_78763_f(): boolean;
        func_78746_a(arg0: Internal.GameType_): void;
        func_187098_a(arg0: number, arg1: number, arg2: number, arg3: Internal.ClickType_, arg4: Internal.PlayerEntity): Internal.ItemStack;
        func_180512_c(arg0: BlockPos, arg1: Internal.Direction_): boolean;
        func_180511_b(arg0: BlockPos, arg1: Internal.Direction_): boolean;
        func_187097_a(arg0: Internal.PlayerEntity, arg1: Internal.Entity, arg2: Hand_): Internal.ActionResultType;
        func_239167_a_(arg0: Internal.ClientWorld, arg1: Internal.StatisticsManager, arg2: Internal.ClientRecipeBook, arg3: boolean, arg4: boolean): Internal.ClientPlayerEntity;
        func_78749_i(): boolean;
        func_225323_a(arg0: Internal.ClientWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.CPlayerDiggingPacket$Action_, arg4: boolean): void;
        func_241675_a_(arg0: Internal.GameType_): void;
        func_203413_a(arg0: number, arg1: Internal.IRecipe<any>, arg2: boolean): void;
        func_78767_c(): void;
        func_78765_e(): void;
        func_178887_k(): boolean;
        func_78748_a(arg0: Internal.PlayerEntity): void;
        func_178889_l(): Internal.GameType;
        func_187100_a(arg0: number): void;
        func_187101_a(arg0: Internal.PlayerEntity, arg1: Internal.World, arg2: Hand_): Internal.ActionResultType;
        func_78752_a(arg0: Internal.ItemStack): void;
        func_78755_b(): boolean;
        func_78756_a(arg0: number, arg1: number): void;
        getDestroyProgress(): number;
        func_110738_j(): boolean;
        field_78778_j: boolean;
        field_78770_f: number;
        field_178895_c: BlockPos;
        field_85183_f: Internal.ItemStack;
        get destroyProgress(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft, arg1: Internal.ClientPlayNetHandler);
    }
    type PlayerController_ = PlayerController;
    class MutableUnit extends dev.latvian.mods.rhino.util.unit.Unit {
        set(v: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(v: number);
    }
    type MutableUnit_ = MutableUnit;
    interface DataInput {
        readLine(): string;
        readChar(): string;
        skipBytes(arg0: number): number;
        readLong(): number;
        readUTF(): string;
        readShort(): number;
        readDouble(): number;
        readFully(arg0: number[]): void;
        readFully(arg0: number[], arg1: number, arg2: number): void;
        readFloat(): number;
        readBoolean(): boolean;
        readByte(): number;
        readInt(): number;
        readUnsignedByte(): number;
        readUnsignedShort(): number;
    }
    type DataInput_ = DataInput;
    class ShaderUniform extends Internal.ShaderDefault implements Internal.AutoCloseable {
        func_148093_b(): void;
        func_148084_b(arg0: number): void;
        static func_148085_a(arg0: string): number;
        func_148086_a(): string;
        static func_227807_b_(arg0: number, arg1: Internal.CharSequence): number;
        close(): void;
        static func_227805_a_(arg0: number, arg1: number): void;
        static func_227806_a_(arg0: number, arg1: Internal.CharSequence): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: number, arg2: number, arg3: Internal.IShaderManager);
    }
    type ShaderUniform_ = ShaderUniform;
    class ValueBox extends Internal.ChasingAABBOutline {
        transform(arg0: Internal.ValueBoxTransform): Internal.ValueBox;
        subLabel(arg0: Internal.ITextComponent_): Internal.ValueBox;
        scrollTooltip(arg0: Internal.ITextComponent_): Internal.ValueBox;
        offsetLabel(arg0: Vec3): Internal.ValueBox;
        renderContents(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_): void;
        passive(arg0: boolean): Internal.ValueBox;
        withColors(arg0: number, arg1: number): Internal.ValueBox;
        isPassive: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ITextComponent, arg1: Internal.AxisAlignedBB, arg2: BlockPos);
    }
    type ValueBox_ = ValueBox;
    interface IFocus <V> {
        getValue(): V;
        getMode(): Internal.IFocus$Mode;
    }
    type IFocus_<V> = IFocus<V>;
    interface Decoder$Terminal <A> {
        decoder(): Internal.Decoder<A>;
        decode<T>(arg0: Internal.DynamicOps<T>, arg1: T): Internal.DataResult<A>;
        (arg0: Internal.DynamicOps<T>, arg1: T): Internal.DataResult<A>;
    }
    type Decoder$Terminal_<A> = ((arg0: Internal.DynamicOps<T>, arg1: T)=>Internal.DataResult<A>) | Decoder$Terminal<A>;
    class SingleRandomFeature extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_204628_a: Internal.List<java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>>;
        static readonly field_236642_a_: Internal.Codec<Internal.SingleRandomFeature>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.List<java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>>);
    }
    type SingleRandomFeature_ = SingleRandomFeature;
    interface ILootFunctionConsumer <T> {
        func_212841_b_(arg0: Internal.ILootFunction$IBuilder_): T;
        func_212862_c_(): T;
    }
    type ILootFunctionConsumer_<T> = ILootFunctionConsumer<T>;
    class InputEvent$MouseInputEvent extends net.minecraftforge.client.event.InputEvent {
        getButton(): number;
        getMods(): number;
        getAction(): number;
        get button(): number;
        get mods(): number;
        get action(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type InputEvent$MouseInputEvent_ = InputEvent$MouseInputEvent;
    interface IWorldReader extends Internal.IBlockDisplayReader, Internal.ICollisionReader, Internal.BiomeManager$IBiomeReader {
        func_175667_e(arg0: BlockPos): boolean;
        func_201696_r(arg0: BlockPos): number;
        func_212866_a_(arg0: number, arg1: number): Internal.IChunk;
        func_225523_d_(): Internal.BiomeManager;
        func_175627_a(arg0: BlockPos, arg1: Internal.Direction_): number;
        func_175623_d(arg0: BlockPos): boolean;
        func_225604_a_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_201671_F(arg0: BlockPos): boolean;
        func_205049_d(arg0: BlockPos, arg1: number): number;
        func_175707_a(arg0: BlockPos, arg1: BlockPos): boolean;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
        func_217344_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        func_217348_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus_): Internal.IChunk;
        func_205052_D(arg0: BlockPos): number;
        func_72953_d(arg0: Internal.AxisAlignedBB): boolean;
        func_181545_F(): number;
        func_226691_t_(arg0: BlockPos): Internal.Biome;
        func_234939_c_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_225525_a_(arg0: BlockPos, arg1: Internal.ColorResolver_): number;
        func_175657_ab(): number;
        func_230315_m_(): Internal.DimensionType;
        func_217353_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus_, arg3: boolean): Internal.IChunk;
        func_225522_c_(arg0: number, arg1: number): Internal.IBlockReader;
        func_201676_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_217349_x(arg0: BlockPos): Internal.IChunk;
        func_201670_d(): boolean;
        func_175710_j(arg0: BlockPos): boolean;
        isAreaLoaded(arg0: BlockPos, arg1: number): boolean;
        func_217354_b(arg0: number, arg1: number): boolean;
    }
    type IWorldReader_ = IWorldReader;
    abstract class PlayerEventJS extends Internal.LivingEntityEventJS {
        addGameStage(stage: string): void;
        getPlayer(): Internal.PlayerJS<any>;
        getMinecraftPlayer(): Internal.PlayerEntity;
        hasGameStage(stage: string): boolean;
        removeGameStage(stage: string): void;
        get minecraftPlayer(): Internal.PlayerEntity;
        get player(): Internal.PlayerJS<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PlayerEventJS_ = PlayerEventJS;
    interface TemplateAccessor {
        repurposedstructures_getBlocks(): Internal.List<Internal.Template$Palette>;
        (): Internal.List<Internal.Template$Palette>;
    }
    type TemplateAccessor_ = (()=>Internal.List<Internal.Template$Palette>) | TemplateAccessor;
    interface WatchKey {
        cancel(): void;
        pollEvents(): Internal.List<Internal.WatchEvent<any>>;
        watchable(): Internal.Watchable;
        isValid(): boolean;
        reset(): boolean;
    }
    type WatchKey_ = WatchKey;
    interface Drawable {
        drawStatic(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number): void;
        draw(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number): void;
        draw3D(matrixStack: Internal.MatrixStack): void;
        (arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number): void;
    }
    type Drawable_ = ((arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number)=>void) | Drawable;
    class LightTexture extends Document.Object implements Internal.AutoCloseable {
        static func_228450_a_(arg0: number): number;
        static func_228451_a_(arg0: number, arg1: number): number;
        func_205108_b(): void;
        func_205109_c(): void;
        func_205106_a(arg0: number): void;
        static func_228454_b_(arg0: number): number;
        func_205107_a(): void;
        close(): void;
        readonly field_205112_c: ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.GameRenderer, arg1: Internal.Minecraft);
    }
    type LightTexture_ = LightTexture;
    abstract class Rectangle2D extends Internal.RectangularShape {
        add(arg0: Internal.Point2D): void;
        add(arg0: Internal.Rectangle2D): void;
        add(arg0: number, arg1: number): void;
        intersectsLine(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        intersectsLine(arg0: Internal.Line2D): boolean;
        static intersect(arg0: Internal.Rectangle2D, arg1: Internal.Rectangle2D, arg2: Internal.Rectangle2D): void;
        createUnion(arg0: Internal.Rectangle2D): Internal.Rectangle2D;
        outcode(arg0: Internal.Point2D): number;
        outcode(arg0: number, arg1: number): number;
        setRect(arg0: Internal.Rectangle2D): void;
        setRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
        static union(arg0: Internal.Rectangle2D, arg1: Internal.Rectangle2D, arg2: Internal.Rectangle2D): void;
        createIntersection(arg0: Internal.Rectangle2D): Internal.Rectangle2D;
        static readonly OUT_TOP: 2;
        static readonly OUT_RIGHT: 4;
        static readonly OUT_BOTTOM: 8;
        static readonly OUT_LEFT: 1;
        set rect(arg0: Internal.Rectangle2D);
    }
    type Rectangle2D_ = Rectangle2D;
    abstract class NodeProcessor extends Document.Object {
        func_186317_a(arg0: boolean): void;
        func_186319_a(arg0: Internal.IBlockReader, arg1: number, arg2: number, arg3: number, arg4: Internal.MobEntity, arg5: number, arg6: number, arg7: number, arg8: boolean, arg9: boolean): Internal.PathNodeType;
        func_186330_a(arg0: Internal.IBlockReader, arg1: number, arg2: number, arg3: number): Internal.PathNodeType;
        func_224768_a(arg0: number, arg1: number, arg2: number): Internal.FlaggedPathPoint;
        func_186321_b(arg0: boolean): void;
        func_186323_c(): boolean;
        func_176163_a(): void;
        func_186322_e(): boolean;
        func_225578_a_(arg0: Internal.Region, arg1: Internal.MobEntity): void;
        func_186324_d(): boolean;
        func_186318_b(): Internal.PathPoint;
        func_186316_c(arg0: boolean): void;
        func_222859_a(arg0: Internal.PathPoint[], arg1: Internal.PathPoint): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type NodeProcessor_ = NodeProcessor;
    interface JsonSerializationContext {
        serialize(arg0: any): Internal.JsonElement;
        serialize(arg0: any, arg1: Internal.Type): Internal.JsonElement;
    }
    type JsonSerializationContext_ = JsonSerializationContext;
    interface ImageProducer {
        isConsumer(arg0: Internal.ImageConsumer): boolean;
        addConsumer(arg0: Internal.ImageConsumer): void;
        requestTopDownLeftRightResend(arg0: Internal.ImageConsumer): void;
        removeConsumer(arg0: Internal.ImageConsumer): void;
        startProduction(arg0: Internal.ImageConsumer): void;
    }
    type ImageProducer_ = ImageProducer;
    class Outline$OutlineParams extends Document.Object {
        getHighlightedFace(): Internal.Direction;
        withFaceTextures(arg0: Internal.AllSpecialTextures_, arg1: Internal.AllSpecialTextures_): Internal.Outline$OutlineParams;
        disableNormals(): Internal.Outline$OutlineParams;
        getLineWidth(): number;
        disableCull(): Internal.Outline$OutlineParams;
        highlightFace(arg0: Internal.Direction_): Internal.Outline$OutlineParams;
        withFaceTexture(arg0: Internal.AllSpecialTextures_): Internal.Outline$OutlineParams;
        clearTextures(): Internal.Outline$OutlineParams;
        colored(arg0: com.simibubi.create.foundation.utility.Color): Internal.Outline$OutlineParams;
        colored(arg0: number): Internal.Outline$OutlineParams;
        lineWidth(arg0: number): Internal.Outline$OutlineParams;
        get highlightedFace(): Internal.Direction;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Outline$OutlineParams_ = Outline$OutlineParams;
    interface Thread$UncaughtExceptionHandler {
        uncaughtException(arg0: Internal.Thread, arg1: Internal.Throwable): void;
        (arg0: Internal.Thread, arg1: Internal.Throwable): void;
    }
    type Thread$UncaughtExceptionHandler_ = ((arg0: Internal.Thread, arg1: Internal.Throwable)=>void) | Thread$UncaughtExceptionHandler;
    interface ChannelProgressiveFuture extends Internal.ChannelFuture, Internal.ProgressiveFuture<void> {
        removeListeners(...arg0: Internal.GenericFutureListener<Internal.Future<void>>[]): Internal.ChannelProgressiveFuture;
        syncUninterruptibly(): Internal.ChannelProgressiveFuture;
        await(): Internal.ChannelProgressiveFuture;
        awaitUninterruptibly(): Internal.ChannelProgressiveFuture;
        removeListener(arg0: Internal.GenericFutureListener_<Internal.Future_<void>>): Internal.ChannelProgressiveFuture;
        addListeners(...arg0: Internal.GenericFutureListener<Internal.Future<void>>[]): Internal.ChannelProgressiveFuture;
        sync(): Internal.ChannelProgressiveFuture;
        addListener(arg0: Internal.GenericFutureListener_<Internal.Future_<void>>): Internal.ChannelProgressiveFuture;
    }
    type ChannelProgressiveFuture_ = ChannelProgressiveFuture;
    class BlockEvent$CropGrowEvent extends Internal.BlockEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: BlockPos, arg2: Internal.BlockState);
        constructor();
    }
    type BlockEvent$CropGrowEvent_ = BlockEvent$CropGrowEvent;
    interface K1 {
    }
    type K1_ = K1;
    class AWTKeyStroke extends Document.Object implements Internal.Serializable {
        getKeyChar(): string;
        isOnKeyRelease(): boolean;
        static getAWTKeyStrokeForEvent(arg0: Internal.KeyEvent): Internal.AWTKeyStroke;
        getModifiers(): number;
        static getAWTKeyStroke(arg0: number, arg1: number, arg2: boolean): Internal.AWTKeyStroke;
        static getAWTKeyStroke(arg0: string): Internal.AWTKeyStroke;
        static getAWTKeyStroke(arg0: string): Internal.AWTKeyStroke;
        static getAWTKeyStroke(arg0: number, arg1: number): Internal.AWTKeyStroke;
        static getAWTKeyStroke(arg0: string, arg1: number): Internal.AWTKeyStroke;
        getKeyCode(): number;
        getKeyEventType(): number;
        get onKeyRelease(): boolean;
        get keyCode(): number;
        get keyEventType(): number;
        get keyChar(): string;
        get modifiers(): number;
    }
    type AWTKeyStroke_ = AWTKeyStroke;
    class CaveEdgeConfig extends Document.Object implements Internal.IPlacementConfig {
        static readonly field_236946_a_: Internal.Codec<Internal.CaveEdgeConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: CarvingGenerationStep, arg1: number);
    }
    type CaveEdgeConfig_ = CaveEdgeConfig;
    class SChunkDataPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_189554_f(): Internal.List<Internal.CompoundNBT>;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186946_a(): Internal.PacketBuffer;
        func_149271_f(): number;
        func_149273_e(): number;
        func_218708_a(arg0: Internal.PacketBuffer, arg1: Internal.Chunk, arg2: number): number;
        func_149274_i(): boolean;
        func_149276_g(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_244296_i(): number[];
        func_218710_g(): Internal.CompoundNBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Chunk, arg1: number);
    }
    type SChunkDataPacket_ = SChunkDataPacket;
    class PotionEvent extends Internal.LivingEvent {
        getPotionEffect(): Internal.EffectInstance;
        get potionEffect(): Internal.EffectInstance;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.EffectInstance);
    }
    type PotionEvent_ = PotionEvent;
    class GuiContainerEvent$DrawBackground extends Internal.GuiContainerEvent {
        getMouseY(): number;
        getMouseX(): number;
        getMatrixStack(): Internal.MatrixStack;
        get mouseX(): number;
        get matrixStack(): Internal.MatrixStack;
        get mouseY(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ContainerScreen<any>, arg1: Internal.MatrixStack, arg2: number, arg3: number);
    }
    type GuiContainerEvent$DrawBackground_ = GuiContainerEvent$DrawBackground;
    interface IArmorMaterial {
        func_200899_b(): Internal.SoundEvent;
        func_200898_c(): Internal.Ingredient;
        func_200897_d(): string;
        func_200896_a(arg0: EquipmentSlot_): number;
        func_230304_f_(): number;
        func_200901_e(): number;
        func_200902_b(arg0: EquipmentSlot_): number;
        func_200900_a(): number;
    }
    type IArmorMaterial_ = IArmorMaterial;
    class CreativeSettings extends Document.Object {
        func_192563_a(arg0: number): Internal.HotbarSnapshot;
        func_192564_b(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File, arg1: Internal.DataFixer);
    }
    type CreativeSettings_ = CreativeSettings;
    class PlayerTransmitterConfig extends Internal.EnergyConfig {
        getGeneration(arg0: Internal.Tier_): number;
        getChargingSpeed(arg0: Internal.Tier_): number;
        readonly nitroChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly blazingChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly basicChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly hardenedChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly nioticChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly spiritedChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly starterChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly chargingSpeed: Internal.Map<Internal.Tier, number>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type PlayerTransmitterConfig_ = PlayerTransmitterConfig;
    interface IEntityReader {
        func_175674_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.List<Internal.Entity>;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_175647_a<T>(arg0: Internal.Class<T>, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<T>): Internal.List<T>;
        func_190525_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Predicate_<Internal.Entity_>): Internal.PlayerEntity;
        func_217362_a(arg0: Internal.Entity, arg1: number): Internal.PlayerEntity;
        func_217374_a<T>(arg0: Internal.Class<T>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: Internal.AxisAlignedBB): Internal.List<T>;
        func_217373_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: Internal.AxisAlignedBB): Internal.List<Internal.PlayerEntity>;
        func_72839_b(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.List<Internal.Entity>;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_217370_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity): Internal.PlayerEntity;
        func_217371_b(arg0: Internal.UUID): Internal.PlayerEntity;
        func_217360_a<T>(arg0: Internal.Class<T>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T;
        func_217372_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number): Internal.PlayerEntity;
        func_217361_a<T>(arg0: Internal.List<T>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number): T;
        func_217359_a(arg0: Internal.EntityPredicate, arg1: number, arg2: number, arg3: number): Internal.PlayerEntity;
        func_225317_b<T>(arg0: Internal.Class<T>, arg1: Internal.AxisAlignedBB): Internal.List<T>;
        func_217366_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): Internal.PlayerEntity;
        func_225318_b<T>(arg0: Internal.Class<T>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T;
        func_217357_a<T>(arg0: Internal.Class<T>, arg1: Internal.AxisAlignedBB): Internal.List<T>;
        func_217358_a(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        func_217369_A(): Internal.List<Internal.PlayerEntity>;
        func_225316_b<T>(arg0: Internal.Class<T>, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<T>): Internal.List<T>;
    }
    type IEntityReader_ = IEntityReader;
    abstract class TileEntitySynchronized extends Internal.TileEntity implements hellfirepvp.astralsorcery.common.util.block.ILocatable {
        requestModelDataUpdate(): void;
        markForUpdate(): void;
        readSaveNBT(arg0: Internal.CompoundNBT_): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        getLocationPos(): BlockPos;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        removeSelf(): boolean;
        readNetNBT(arg0: Internal.CompoundNBT_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        writeNetNBT(arg0: Internal.CompoundNBT_): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        dropItemOnTop(arg0: Internal.ItemStack): Internal.ItemEntity;
        onLoad(): void;
        writeSaveNBT(arg0: Internal.CompoundNBT_): void;
        writeCustomNBT(arg0: Internal.CompoundNBT_): void;
        readCustomNBT(arg0: Internal.CompoundNBT_): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get locationPos(): BlockPos;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
    }
    type TileEntitySynchronized_ = TileEntitySynchronized;
    interface INamedPacket {
        setName(arg0: string): void;
        getName(): string;
    }
    type INamedPacket_ = INamedPacket;
    interface ITargetedTextComponent {
        func_230535_a_(arg0: Internal.CommandSource, arg1: Internal.Entity, arg2: number): Internal.IFormattableTextComponent;
        (arg0: Internal.CommandSource, arg1: Internal.Entity, arg2: number): Internal.IFormattableTextComponent;
    }
    type ITargetedTextComponent_ = ((arg0: Internal.CommandSource, arg1: Internal.Entity, arg2: number)=>Internal.IFormattableTextComponent) | ITargetedTextComponent;
    interface IIngredientFilter {
        setFilterText(arg0: string): void;
        getFilterText(): string;
        getFilteredIngredients(): Internal.ImmutableList<any>;
    }
    type IIngredientFilter_ = IIngredientFilter;
    interface IBlockState {
        isCacheInvalid(): boolean;
        clearCache(): void;
    }
    type IBlockState_ = IBlockState;
    interface ServerDataExtras {
        getAllowCustomScreenshot(): boolean;
        setAllowCustomScreenshots(arg0: boolean): void;
    }
    type ServerDataExtras_ = ServerDataExtras;
    class MethodHandles$Lookup extends Document.Object {
        findStaticVarHandle(arg0: Internal.Class<any>, arg1: string, arg2: Internal.Class<any>): Internal.VarHandle;
        hasFullPrivilegeAccess(): boolean;
        findStaticGetter(arg0: Internal.Class<any>, arg1: string, arg2: Internal.Class<any>): Internal.MethodHandle;
        lookupClass(): Internal.Class<any>;
        defineHiddenClass(arg0: number[], arg1: boolean, ...arg2: any[]): Internal.MethodHandles$Lookup;
        unreflectSetter(arg0: Internal.Field): Internal.MethodHandle;
        findVirtual(arg0: Internal.Class<any>, arg1: string, arg2: Internal.MethodType): Internal.MethodHandle;
        findConstructor(arg0: Internal.Class<any>, arg1: Internal.MethodType): Internal.MethodHandle;
        dropLookupMode(arg0: number): Internal.MethodHandles$Lookup;
        findStaticSetter(arg0: Internal.Class<any>, arg1: string, arg2: Internal.Class<any>): Internal.MethodHandle;
        bind(arg0: any, arg1: string, arg2: Internal.MethodType): Internal.MethodHandle;
        findGetter(arg0: Internal.Class<any>, arg1: string, arg2: Internal.Class<any>): Internal.MethodHandle;
        hasPrivateAccess(): boolean;
        unreflectGetter(arg0: Internal.Field): Internal.MethodHandle;
        accessClass<T_>(arg0: Internal.Class<T_>): Internal.Class<T_>;
        findSpecial(arg0: Internal.Class<any>, arg1: string, arg2: Internal.MethodType, arg3: Internal.Class<any>): Internal.MethodHandle;
        in(arg0: Internal.Class<any>): Internal.MethodHandles$Lookup;
        defineClass(arg0: number[]): Internal.Class<any>;
        unreflectConstructor(arg0: Internal.Constructor<any>): Internal.MethodHandle;
        unreflectVarHandle(arg0: Internal.Field): Internal.VarHandle;
        findClass(arg0: string): Internal.Class<any>;
        defineHiddenClassWithClassData(arg0: number[], arg1: any, arg2: boolean, ...arg3: any[]): Internal.MethodHandles$Lookup;
        unreflectSpecial(arg0: Internal.Method, arg1: Internal.Class<any>): Internal.MethodHandle;
        lookupModes(): number;
        findStatic(arg0: Internal.Class<any>, arg1: string, arg2: Internal.MethodType): Internal.MethodHandle;
        ensureInitialized<T_>(arg0: Internal.Class<T_>): Internal.Class<T_>;
        unreflect(arg0: Internal.Method): Internal.MethodHandle;
        findVarHandle(arg0: Internal.Class<any>, arg1: string, arg2: Internal.Class<any>): Internal.VarHandle;
        findSetter(arg0: Internal.Class<any>, arg1: string, arg2: Internal.Class<any>): Internal.MethodHandle;
        previousLookupClass(): Internal.Class<any>;
        revealDirect(arg0: Internal.MethodHandle): Internal.MethodHandleInfo;
        static readonly MODULE: 16;
        static readonly PACKAGE: 8;
        static readonly PUBLIC: 1;
        static readonly ORIGINAL: 64;
        static readonly UNCONDITIONAL: 32;
        static readonly PROTECTED: 4;
        static readonly PRIVATE: 2;
    }
    type MethodHandles$Lookup_ = MethodHandles$Lookup;
    interface ILootGenerator {
        func_216188_a(arg0: Internal.Consumer_<Internal.ItemStack_>, arg1: Internal.LootContext): void;
        func_186361_a(arg0: number): number;
    }
    type ILootGenerator_ = ILootGenerator;
    interface IModelGeometry <T> {
        bake(arg0: Internal.IModelConfiguration, arg1: Internal.ModelBakery, arg2: Internal.Function_<Internal.RenderMaterial_, Internal.TextureAtlasSprite_>, arg3: Internal.IModelTransform, arg4: Internal.ItemOverrideList, arg5: ResourceLocation_): Internal.IBakedModel;
        getTextures(arg0: Internal.IModelConfiguration, arg1: Internal.Function_<ResourceLocation_, Internal.IUnbakedModel_>, arg2: Internal.Set<Internal.Pair<string, string>>): Internal.Collection<Internal.RenderMaterial>;
        getPart(arg0: string): Internal.Optional<Internal.IModelGeometryPart>;
        getParts(): Internal.Collection<Internal.IModelGeometryPart>;
    }
    type IModelGeometry_<T> = IModelGeometry<T>;
    abstract class FontMetrics extends Document.Object implements Internal.Serializable {
        getStringBounds(arg0: string[], arg1: number, arg2: number, arg3: Internal.Graphics): Internal.Rectangle2D;
        getStringBounds(arg0: Internal.CharacterIterator, arg1: number, arg2: number, arg3: Internal.Graphics): Internal.Rectangle2D;
        getStringBounds(arg0: string, arg1: number, arg2: number, arg3: Internal.Graphics): Internal.Rectangle2D;
        getStringBounds(arg0: string, arg1: Internal.Graphics): Internal.Rectangle2D;
        charWidth(arg0: string): number;
        charWidth(arg0: number): number;
        getMaxDecent(): number;
        getMaxCharBounds(arg0: Internal.Graphics): Internal.Rectangle2D;
        getMaxDescent(): number;
        charsWidth(arg0: string[], arg1: number, arg2: number): number;
        getAscent(): number;
        stringWidth(arg0: string): number;
        getHeight(): number;
        getMaxAdvance(): number;
        getMaxAscent(): number;
        getFontRenderContext(): Internal.FontRenderContext;
        bytesWidth(arg0: number[], arg1: number, arg2: number): number;
        getLineMetrics(arg0: Internal.CharacterIterator, arg1: number, arg2: number, arg3: Internal.Graphics): Internal.LineMetrics;
        getLineMetrics(arg0: string[], arg1: number, arg2: number, arg3: Internal.Graphics): Internal.LineMetrics;
        getLineMetrics(arg0: string, arg1: number, arg2: number, arg3: Internal.Graphics): Internal.LineMetrics;
        getLineMetrics(arg0: string, arg1: Internal.Graphics): Internal.LineMetrics;
        getFont(): Internal.Font;
        getDescent(): number;
        getWidths(): number[];
        hasUniformLineMetrics(): boolean;
        getLeading(): number;
        get maxAscent(): number;
        get descent(): number;
        get maxDescent(): number;
        get ascent(): number;
        get maxDecent(): number;
        get leading(): number;
        get fontRenderContext(): Internal.FontRenderContext;
        get maxAdvance(): number;
        get widths(): number[];
        get height(): number;
        get font(): Internal.Font;
    }
    type FontMetrics_ = FontMetrics;
    class IngredientStackJS extends Document.Object implements Internal.IngredientJS {
        getItemIds(): Internal.Set<string>;
        anyStackMatches(ingredient: Internal.IngredientJS_): boolean;
        testVanillaItem(item: Internal.Item_): boolean;
        test(stack: Internal.ItemStackJS_): boolean;
        getStacks(): Internal.Set<Internal.ItemStackJS>;
        getVanillaItems(): Internal.Set<Internal.Item>;
        isEmpty(): boolean;
        isInvalidRecipeIngredient(): boolean;
        asIngredientStack(): Internal.IngredientStackJS;
        getVanillaPredicate(): Internal.Predicate<Internal.ItemStack>;
        filter(filter: Internal.IngredientJS_): Internal.IngredientJS;
        createVanillaIngredient(): Internal.Ingredient;
        toJson(): Internal.JsonElement;
        not(): Internal.IngredientJS;
        withCount(count: number): Internal.IngredientJS;
        getIngredient(): Internal.IngredientJS;
        unwrapStackIngredient(): Internal.List<Internal.IngredientJS>;
        getFirst(): Internal.ItemStackJS;
        testVanilla(stack: Internal.ItemStack): boolean;
        x(c: number): Internal.IngredientJS;
        static stackOf(in_: Internal.IngredientJS_): Internal.IngredientStackJS;
        copy(): Internal.Copyable;
        copy(): Internal.IngredientJS;
        getCount(): number;
        ingredientKey: string;
        ingredient: Internal.IngredientJS;
        countKey: string;
        get invalidRecipeIngredient(): boolean;
        get stacks(): Internal.Set<Internal.ItemStackJS>;
        get itemIds(): Internal.Set<string>;
        get count(): number;
        get vanillaItems(): Internal.Set<Internal.Item>;
        get first(): Internal.ItemStackJS;
        get empty(): boolean;
        get vanillaPredicate(): Internal.Predicate<Internal.ItemStack>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(i: Internal.IngredientJS, c: number);
    }
    type IngredientStackJS_ = IngredientStackJS;
    class SMerchantOffersPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_218734_e(): number;
        func_223477_g(): boolean;
        func_218735_f(): boolean;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218732_b(): number;
        func_218731_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218733_c(): Internal.MerchantOffers;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.MerchantOffers, arg2: number, arg3: number, arg4: boolean, arg5: boolean);
    }
    type SMerchantOffersPacket_ = SMerchantOffersPacket;
    class ClocheFertilizerRecipeJS extends Internal.IERecipeJS {
        growthModifier(f: number): Internal.ClocheFertilizerRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ClocheFertilizerRecipeJS_ = ClocheFertilizerRecipeJS;
    interface IScheduledEventCallback {
        onCallback(arg0: Internal.ScheduledEvent): void;
        (arg0: Internal.ScheduledEvent): void;
    }
    type IScheduledEventCallback_ = ((arg0: Internal.ScheduledEvent)=>void) | IScheduledEventCallback;
    class LootPoolEntryType extends Internal.LootType<Internal.LootEntry> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ILootSerializer<Internal.LootEntry>);
    }
    type LootPoolEntryType_ = LootPoolEntryType;
    abstract class Type$TypeError extends Document.Object {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type Type$TypeError_ = Type$TypeError;
    class CJigsawBlockGeneratePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_240846_d_(): boolean;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_240844_b_(): BlockPos;
        func_240845_c_(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: BlockPos, arg1: number, arg2: boolean);
    }
    type CJigsawBlockGeneratePacket_ = CJigsawBlockGeneratePacket;
    class FeatureSizeType <P> extends Document.Object {
        func_236714_a_(): Internal.Codec<P>;
        static readonly field_236712_b_: Internal.FeatureSizeType<Internal.ThreeLayerFeature>;
        static readonly field_236711_a_: Internal.FeatureSizeType<Internal.TwoLayerFeature>;
    }
    type FeatureSizeType_<P> = FeatureSizeType<P>;
    class FuelRecipeJS extends Internal.ThermalRecipeJS {
        inKey: string;
        inputFluids: Internal.ArrayList<Internal.FluidStackJS>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FuelRecipeJS_ = FuelRecipeJS;
    interface VoxelShapePart$IFaceConsumer {
        consume(arg0: Internal.Direction_, arg1: number, arg2: number, arg3: number): void;
        (arg0: Internal.Direction, arg1: number, arg2: number, arg3: number): void;
    }
    type VoxelShapePart$IFaceConsumer_ = ((arg0: Internal.Direction, arg1: number, arg2: number, arg3: number)=>void) | VoxelShapePart$IFaceConsumer;
    class SequencedAssemblyRecipeJS extends Internal.RecipeJS {
        transitionalItem(item: Internal.ItemStackJS_): Internal.SequencedAssemblyRecipeJS;
        loops(loops: number): Internal.SequencedAssemblyRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SequencedAssemblyRecipeJS_ = SequencedAssemblyRecipeJS;
    class SPlayerAbilitiesPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_149103_f(): boolean;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149105_e(): boolean;
        func_149106_d(): boolean;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149107_h(): number;
        func_149112_c(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149101_g(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerAbilities);
    }
    type SPlayerAbilitiesPacket_ = SPlayerAbilitiesPacket;
    interface BlockChangeSet {
        getChanges(): Internal.Collection<Internal.BlockChangeSet$StateChange>;
        isEmpty(): boolean;
        hasChange(arg0: BlockPos): boolean;
    }
    type BlockChangeSet_ = BlockChangeSet;
    class ShapelessRecipeJS extends Internal.RecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ShapelessRecipeJS_ = ShapelessRecipeJS;
    interface IForgeBlock {
        rotate(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: Internal.Rotation_): Internal.BlockState;
        getStateAtViewpoint(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Vec3): Internal.BlockState;
        onBlockExploded(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Explosion): void;
        getBedDirection(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): Internal.Direction;
        getHarvestLevel(arg0: Internal.BlockState): number;
        getTags(): Internal.Set<ResourceLocation>;
        isBed(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        canHarvestBlock(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.BlockState): boolean;
        getBedSpawnPosition(arg0: Internal.EntityType_<any>, arg1: Internal.BlockState, arg2: Internal.IWorldReader, arg3: BlockPos, arg4: number, arg5: Internal.LivingEntity): Internal.Optional<Vec3>;
        isLadder(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.LivingEntity): boolean;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState, arg1: Internal.IBlockDisplayReader, arg2: BlockPos, arg3: Internal.FluidState): boolean;
        canStickTo(arg0: Internal.BlockState, arg1: Internal.BlockState): boolean;
        onNeighborChange(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): void;
        getPickBlock(arg0: Internal.BlockState, arg1: Internal.RayTraceResult, arg2: Internal.IBlockReader, arg3: BlockPos, arg4: Internal.PlayerEntity): Internal.ItemStack;
        getWeakChanges(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        isBurning(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        canEntityDestroy(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        getHarvestTool(arg0: Internal.BlockState): Internal.ToolType;
        hasTileEntity(arg0: Internal.BlockState): boolean;
        isPortalFrame(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getExplosionResistance(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): number;
        isScaffolding(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.LivingEntity): boolean;
        canSustainPlant(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        observedNeighborChange(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Block_, arg4: BlockPos): void;
        canDropFromExplosion(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): boolean;
        removedByPlayer(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity, arg4: boolean, arg5: Internal.FluidState): boolean;
        createTileEntity(arg0: Internal.BlockState, arg1: Internal.IBlockReader): Internal.TileEntity;
        isStickyBlock(arg0: Internal.BlockState): boolean;
        isFertile(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getFogColor(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity, arg4: Vec3, arg5: number): Vec3;
        getAiPathNodeType(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.MobEntity): Internal.PathNodeType;
        isSlimeBlock(arg0: Internal.BlockState): boolean;
        getLightValue(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        getFireSpreadSpeed(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
        isAir(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getToolModifiedState(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity, arg4: Internal.ItemStack, arg5: Internal.ToolType): Internal.BlockState;
        getBeaconColorMultiplier(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): number[];
        getExpDrop(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: number, arg4: number): number;
        isConduitFrame(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): boolean;
        canBeReplacedByLogs(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        addLandingEffects(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.LivingEntity, arg5: number): boolean;
        canCreatureSpawn(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.EntitySpawnPlacementRegistry$PlacementType_, arg4: Internal.EntityType_<any>): boolean;
        getSoundType(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity): Internal.SoundType;
        isToolEffective(arg0: Internal.BlockState, arg1: Internal.ToolType): boolean;
        addRunningEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Entity): boolean;
        canBeReplacedByLeaves(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        getSlipperiness(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity): number;
        isFlammable(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        getBlock(): Internal.Block;
        addDestroyEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.ParticleManager): boolean;
        getEnchantPowerBonus(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): number;
        setBedOccupied(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.LivingEntity, arg4: boolean): void;
        isFireSource(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        getRespawnPosition(arg0: Internal.BlockState, arg1: Internal.EntityType_<any>, arg2: Internal.IWorldReader, arg3: BlockPos, arg4: number, arg5: Internal.LivingEntity): Internal.Optional<Vec3>;
        onPlantGrow(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: BlockPos): void;
        catchFire(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Direction_, arg4: Internal.LivingEntity): void;
        canConnectRedstone(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        addHitEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: Internal.RayTraceResult, arg3: Internal.ParticleManager): boolean;
        getFlammability(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
    }
    type IForgeBlock_ = IForgeBlock;
    interface SingleRedirectModifier <S> {
        apply(arg0: Internal.CommandContext<S>): S;
        (arg0: Internal.CommandContext<S>): S;
    }
    type SingleRedirectModifier_<S> = ((arg0: Internal.CommandContext<S>)=>S) | SingleRedirectModifier<S>;
    class AffineTransform extends Document.Object implements Internal.Cloneable, Internal.Serializable {
        setToIdentity(): void;
        rotate(arg0: number, arg1: number, arg2: number): void;
        rotate(arg0: number, arg1: number, arg2: number, arg3: number): void;
        rotate(arg0: number): void;
        rotate(arg0: number, arg1: number): void;
        concatenate(arg0: Internal.AffineTransform): void;
        preConcatenate(arg0: Internal.AffineTransform): void;
        scale(arg0: number, arg1: number): void;
        static getScaleInstance(arg0: number, arg1: number): Internal.AffineTransform;
        static getRotateInstance(arg0: number, arg1: number, arg2: number, arg3: number): Internal.AffineTransform;
        static getRotateInstance(arg0: number, arg1: number): Internal.AffineTransform;
        static getRotateInstance(arg0: number, arg1: number, arg2: number): Internal.AffineTransform;
        static getRotateInstance(arg0: number): Internal.AffineTransform;
        translate(arg0: number, arg1: number): void;
        setToQuadrantRotation(arg0: number): void;
        setToQuadrantRotation(arg0: number, arg1: number, arg2: number): void;
        setToRotation(arg0: number): void;
        setToRotation(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setToRotation(arg0: number, arg1: number): void;
        setToRotation(arg0: number, arg1: number, arg2: number): void;
        transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        transform(arg0: Internal.Point2D[], arg1: number, arg2: Internal.Point2D[], arg3: number, arg4: number): void;
        transform(arg0: Internal.Point2D, arg1: Internal.Point2D): Internal.Point2D;
        getMatrix(arg0: number[]): void;
        quadrantRotate(arg0: number, arg1: number, arg2: number): void;
        quadrantRotate(arg0: number): void;
        setTransform(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        setTransform(arg0: Internal.AffineTransform): void;
        inverseTransform(arg0: Internal.Point2D, arg1: Internal.Point2D): Internal.Point2D;
        inverseTransform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        setToShear(arg0: number, arg1: number): void;
        getTranslateY(): number;
        getTranslateX(): number;
        getDeterminant(): number;
        shear(arg0: number, arg1: number): void;
        invert(): void;
        static getQuadrantRotateInstance(arg0: number): Internal.AffineTransform;
        static getQuadrantRotateInstance(arg0: number, arg1: number, arg2: number): Internal.AffineTransform;
        isIdentity(): boolean;
        createTransformedShape(arg0: Internal.Shape): Internal.Shape;
        createInverse(): Internal.AffineTransform;
        getShearX(): number;
        getScaleY(): number;
        getScaleX(): number;
        static getTranslateInstance(arg0: number, arg1: number): Internal.AffineTransform;
        getShearY(): number;
        getType(): number;
        setToScale(arg0: number, arg1: number): void;
        clone(): any;
        setToTranslation(arg0: number, arg1: number): void;
        deltaTransform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        deltaTransform(arg0: Internal.Point2D, arg1: Internal.Point2D): Internal.Point2D;
        static getShearInstance(arg0: number, arg1: number): Internal.AffineTransform;
        static readonly TYPE_QUADRANT_ROTATION: 8;
        static readonly TYPE_TRANSLATION: 1;
        static readonly TYPE_IDENTITY: 0;
        static readonly TYPE_UNIFORM_SCALE: 2;
        static readonly TYPE_MASK_SCALE: 6;
        static readonly TYPE_MASK_ROTATION: 24;
        static readonly TYPE_GENERAL_SCALE: 4;
        static readonly TYPE_FLIP: 64;
        static readonly TYPE_GENERAL_ROTATION: 16;
        static readonly TYPE_GENERAL_TRANSFORM: 32;
        get scaleX(): number;
        get shearX(): number;
        get scaleY(): number;
        get translateY(): number;
        get identity(): boolean;
        get translateX(): number;
        get type(): number;
        get shearY(): number;
        get determinant(): number;
        set toQuadrantRotation(arg0: number);
        set toRotation(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number);
        constructor(arg0: number[]);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number);
        constructor(arg0: number[]);
        constructor();
        constructor(arg0: Internal.AffineTransform);
    }
    type AffineTransform_ = AffineTransform;
    interface Int2ObjectMap <V> extends Internal.Int2ObjectFunction<V>, Internal.Map<number, V> {
        getOrDefault(arg0: any, arg1: V): V;
        getOrDefault(arg0: number, arg1: V): V;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<number, V>>;
        entrySet(): Internal.Set<any>;
        containsKey(arg0: number): boolean;
        containsKey(arg0: any): boolean;
        computeIfAbsent(arg0: any, arg1: Internal.Function_<any,any>): any;
        computeIfAbsent(arg0: number, arg1: Internal.IntFunction_<V>): V;
        computeIfAbsent(arg0: number, arg1: Internal.Function_<number, V>): V;
        values(): Internal.Collection<any>;
        values(): Internal.ObjectCollection<V>;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        clear(): void;
        computeIfAbsentPartial(arg0: number, arg1: Internal.Int2ObjectFunction_<V>): V;
        put(arg0: number, arg1: V): V;
        put(arg0: any, arg1: any): any;
        remove(arg0: any): V;
        remove(arg0: number, arg1: any): boolean;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        compute(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        defaultReturnValue(): V;
        defaultReturnValue(arg0: V): void;
        int2ObjectEntrySet(): Internal.ObjectSet<Internal.Int2ObjectMap$Entry<V>>;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        size(): number;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        get(arg0: any): V;
        keySet(): Internal.IntSet;
        keySet(): Internal.Set<any>;
        putIfAbsent(arg0: number, arg1: V): V;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: number, arg1: V): V;
    }
    type Int2ObjectMap_<V> = Int2ObjectMap<V>;
    interface ProfileLookupCallback {
        onProfileLookupFailed(arg0: Internal.GameProfile, arg1: Internal.Exception): void;
        onProfileLookupSucceeded(arg0: Internal.GameProfile): void;
    }
    type ProfileLookupCallback_ = ProfileLookupCallback;
    abstract class Pointer$Default extends Document.Object implements Internal.Pointer {
        address(): number;
    }
    type Pointer$Default_ = Pointer$Default;
    class EngravingEffect extends Internal.ForgeRegistryEntry<Internal.EngravingEffect> {
        setRegistryName(arg0: ResourceLocation_): any;
        getApplicableEffects(arg0: Internal.ItemStack): Internal.List<Internal.EngravingEffect$ApplicableEffect>;
        addEffect(arg0: Internal.EngravingEffect$ApplicableEffect): Internal.EngravingEffect;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IConstellation);
    }
    type EngravingEffect_ = Registry.astralsorcery.engraving_effect | EngravingEffect;
    abstract class MapWorldMarker <D> extends Document.Object {
        setPos(arg0: BlockPos): void;
        loadFromNBT(arg0: Internal.CompoundNBT_): void;
        saveToNBT(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        updateDecoration(arg0: Internal.CustomDecoration): void;
        getType(): Internal.CustomDecorationType<D, any>;
        getPos(): BlockPos;
        getRotation(): number;
        createDecorationFromMarker(arg0: number, arg1: number, arg2: number, arg3: Internal.RegistryKey<Internal.World>, arg4: boolean): D;
        getMarkerId(): string;
        shouldUpdate(arg0: Internal.MapWorldMarker<any>): boolean;
        getTypeId(): string;
        pos: BlockPos;
        get rotation(): number;
        get typeId(): string;
        get type(): Internal.CustomDecorationType<D, any>;
        get markerId(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CustomDecorationType<D, any>);
    }
    type MapWorldMarker_<D> = MapWorldMarker<D>;
    class GasStack extends Internal.ChemicalStack<Internal.Gas> {
        static readFromNBT(arg0: Internal.CompoundNBT_): Internal.GasStack;
        static readFromPacket(arg0: Internal.PacketBuffer): Internal.GasStack;
        copy(): Internal.GasStack;
        copy(): Internal.ChemicalStack<any>;
        static readonly EMPTY: Internal.GasStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IGasProvider, arg1: number);
        constructor(arg0: Internal.GasStack, arg1: number);
    }
    type GasStack_ = GasStack;
    interface Destroyable {
        isDestroyed(): boolean;
        destroy(): void;
    }
    type Destroyable_ = Destroyable;
    class Proxy extends Document.Object {
        address(): Internal.SocketAddress;
        type(): Internal.Proxy$Type;
        static readonly NO_PROXY: Internal.Proxy;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Proxy$Type, arg1: Internal.SocketAddress);
    }
    type Proxy_ = Proxy;
    class ScanningSittingPhase extends Internal.SittingPhase {
        func_188652_i(): Internal.PhaseType<Internal.ScanningSittingPhase>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type ScanningSittingPhase_ = ScanningSittingPhase;
    class FileChannel$MapMode extends Document.Object {
        static readonly READ_ONLY: Internal.FileChannel$MapMode;
        static readonly READ_WRITE: Internal.FileChannel$MapMode;
        static readonly PRIVATE: Internal.FileChannel$MapMode;
    }
    type FileChannel$MapMode_ = FileChannel$MapMode;
    class CompositeByteBuf extends Internal.AbstractReferenceCountedByteBuf implements Internal.Iterable<Internal.ByteBuf> {
        markReaderIndex(): Internal.CompositeByteBuf;
        readerIndex(arg0: number): Internal.CompositeByteBuf;
        writeZero(arg0: number): Internal.CompositeByteBuf;
        addComponent(arg0: boolean, arg1: Internal.ByteBuf): Internal.CompositeByteBuf;
        addComponent(arg0: boolean, arg1: number, arg2: Internal.ByteBuf): Internal.CompositeByteBuf;
        addComponent(arg0: Internal.ByteBuf): Internal.CompositeByteBuf;
        addComponent(arg0: number, arg1: Internal.ByteBuf): Internal.CompositeByteBuf;
        setShort(arg0: number, arg1: number): Internal.CompositeByteBuf;
        resetReaderIndex(): Internal.CompositeByteBuf;
        writeFloat(arg0: number): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuffer): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: number[]): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number, arg3: number): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: Internal.OutputStream, arg2: number): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.CompositeByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf): Internal.CompositeByteBuf;
        setDouble(arg0: number, arg1: number): Internal.CompositeByteBuf;
        setChar(arg0: number, arg1: number): Internal.CompositeByteBuf;
        addComponents(arg0: number, arg1: Internal.Iterable_<Internal.ByteBuf_>): Internal.CompositeByteBuf;
        addComponents(arg0: Internal.Iterable_<Internal.ByteBuf_>): Internal.CompositeByteBuf;
        addComponents(arg0: boolean, arg1: Internal.Iterable_<Internal.ByteBuf_>): Internal.CompositeByteBuf;
        addComponents(arg0: boolean, ...arg1: Internal.ByteBuf[]): Internal.CompositeByteBuf;
        addComponents(arg0: number, ...arg1: Internal.ByteBuf[]): Internal.CompositeByteBuf;
        addComponents(...arg0: Internal.ByteBuf[]): Internal.CompositeByteBuf;
        iterator(): Internal.Iterator<Internal.ByteBuf>;
        toByteIndex(arg0: number): number;
        writeMedium(arg0: number): Internal.CompositeByteBuf;
        writeByte(arg0: number): Internal.CompositeByteBuf;
        resetWriterIndex(): Internal.CompositeByteBuf;
        spliterator(): Internal.Spliterator<Internal.ByteBuf>;
        touch(): Internal.CompositeByteBuf;
        touch(): Internal.ReferenceCounted;
        touch(arg0: any): Internal.CompositeByteBuf;
        touch(arg0: any): Internal.ReferenceCounted;
        discardSomeReadBytes(): Internal.CompositeByteBuf;
        internalComponentAtOffset(arg0: number): Internal.ByteBuf;
        writerIndex(arg0: number): Internal.CompositeByteBuf;
        discardReadComponents(): Internal.CompositeByteBuf;
        setInt(arg0: number, arg1: number): Internal.CompositeByteBuf;
        removeComponent(arg0: number): Internal.CompositeByteBuf;
        setLong(arg0: number, arg1: number): Internal.CompositeByteBuf;
        componentAtOffset(arg0: number): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf): Internal.CompositeByteBuf;
        writeBytes(arg0: Internal.ByteBuf, arg1: number): Internal.CompositeByteBuf;
        writeBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.CompositeByteBuf;
        writeBytes(arg0: number[]): Internal.CompositeByteBuf;
        writeBytes(arg0: number[], arg1: number, arg2: number): Internal.CompositeByteBuf;
        writeBytes(arg0: Internal.ByteBuffer): Internal.CompositeByteBuf;
        setIndex(arg0: number, arg1: number): Internal.CompositeByteBuf;
        markWriterIndex(): Internal.CompositeByteBuf;
        writeShort(arg0: number): Internal.CompositeByteBuf;
        removeComponents(arg0: number, arg1: number): Internal.CompositeByteBuf;
        writeBoolean(arg0: boolean): Internal.CompositeByteBuf;
        numComponents(): number;
        setByte(arg0: number, arg1: number): Internal.CompositeByteBuf;
        toComponentIndex(arg0: number): number;
        retain(arg0: number): Internal.ReferenceCounted;
        retain(arg0: number): Internal.CompositeByteBuf;
        retain(): Internal.CompositeByteBuf;
        retain(): Internal.ReferenceCounted;
        decompose(arg0: number, arg1: number): Internal.List<Internal.ByteBuf>;
        capacity(arg0: number): Internal.CompositeByteBuf;
        writeLong(arg0: number): Internal.CompositeByteBuf;
        internalComponent(arg0: number): Internal.ByteBuf;
        writeDouble(arg0: number): Internal.CompositeByteBuf;
        maxNumComponents(): number;
        ensureWritable(arg0: number): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: number[]): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number, arg3: number): Internal.CompositeByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuffer): Internal.CompositeByteBuf;
        writeInt(arg0: number): Internal.CompositeByteBuf;
        setFloat(arg0: number, arg1: number): Internal.CompositeByteBuf;
        consolidate(): Internal.CompositeByteBuf;
        consolidate(arg0: number, arg1: number): Internal.CompositeByteBuf;
        forEach(arg0: Internal.Consumer_<Internal.ByteBuf_>): void;
        clear(): Internal.CompositeByteBuf;
        discardReadBytes(): Internal.CompositeByteBuf;
        skipBytes(arg0: number): Internal.CompositeByteBuf;
        writeChar(arg0: number): Internal.CompositeByteBuf;
        component(arg0: number): Internal.ByteBuf;
        setZero(arg0: number, arg1: number): Internal.CompositeByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number): Internal.CompositeByteBuf;
        readBytes(arg0: Internal.ByteBuf): Internal.CompositeByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.CompositeByteBuf;
        readBytes(arg0: number[]): Internal.CompositeByteBuf;
        readBytes(arg0: number[], arg1: number, arg2: number): Internal.CompositeByteBuf;
        readBytes(arg0: Internal.ByteBuffer): Internal.CompositeByteBuf;
        readBytes(arg0: Internal.OutputStream, arg1: number): Internal.CompositeByteBuf;
        setMedium(arg0: number, arg1: number): Internal.CompositeByteBuf;
        setBoolean(arg0: number, arg1: boolean): Internal.CompositeByteBuf;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ByteBufAllocator, arg1: boolean, arg2: number, arg3: Internal.ByteBuf[]);
        constructor(arg0: Internal.ByteBufAllocator, arg1: boolean, arg2: number);
        constructor(arg0: Internal.ByteBufAllocator, arg1: boolean, arg2: number, arg3: Internal.Iterable<Internal.ByteBuf>);
    }
    type CompositeByteBuf_ = CompositeByteBuf;
    class CClientSettingsPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        getLanguage(): string;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149521_d(): number;
        func_186991_f(): Internal.HandSide;
        func_149520_f(): boolean;
        func_149524_c(): string;
        func_149523_e(): Internal.ChatVisibility;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        get language(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: string, arg1: number, arg2: Internal.ChatVisibility, arg3: boolean, arg4: number, arg5: Internal.HandSide);
    }
    type CClientSettingsPacket_ = CClientSettingsPacket;
    class MapItemRenderer$Instance extends Document.Object implements Internal.AutoCloseable {
        close(): void;
    }
    type MapItemRenderer$Instance_ = MapItemRenderer$Instance;
    interface Watchable {
        register(arg0: Internal.WatchService, arg1: Internal.WatchEvent$Kind<any>[], ...arg2: any[]): Internal.WatchKey;
        register(arg0: Internal.WatchService, ...arg1: Internal.WatchEvent$Kind<any>[]): Internal.WatchKey;
    }
    type Watchable_ = Watchable;
    class CoderResult extends Document.Object {
        static malformedForLength(arg0: number): Internal.CoderResult;
        isMalformed(): boolean;
        isError(): boolean;
        static unmappableForLength(arg0: number): Internal.CoderResult;
        isOverflow(): boolean;
        isUnmappable(): boolean;
        isUnderflow(): boolean;
        length(): number;
        throwException(): void;
        static readonly OVERFLOW: Internal.CoderResult;
        static readonly UNDERFLOW: Internal.CoderResult;
        get underflow(): boolean;
        get overflow(): boolean;
        get error(): boolean;
        get unmappable(): boolean;
        get malformed(): boolean;
    }
    type CoderResult_ = CoderResult;
    class TickEvent$Type extends Internal.Enum<Internal.TickEvent$Type> {
        static valueOf(arg0: string): Internal.TickEvent$Type;
        static values(): Internal.TickEvent$Type[];
        static readonly PLAYER: Internal.TickEvent$Type;
        static readonly SERVER: Internal.TickEvent$Type;
        static readonly RENDER: Internal.TickEvent$Type;
        static readonly WORLD: Internal.TickEvent$Type;
        static readonly CLIENT: Internal.TickEvent$Type;
    }
    type TickEvent$Type_ = "world" | "player" | "client" | "server" | "render" | TickEvent$Type;
    interface ILootCondition$IBuilder {
        func_216298_a(): Internal.ILootCondition$IBuilder;
        func_216297_a(arg0: Internal.ILootCondition$IBuilder_): Internal.Alternative$Builder;
        build(): Internal.ILootCondition;
        (): Internal.ILootCondition;
    }
    type ILootCondition$IBuilder_ = (()=>Internal.ILootCondition) | ILootCondition$IBuilder;
    interface FilenameFilter {
        accept(arg0: Internal.File, arg1: string): boolean;
        (arg0: Internal.File, arg1: string): boolean;
    }
    type FilenameFilter_ = ((arg0: Internal.File, arg1: string)=>boolean) | FilenameFilter;
    class WireCollisionData extends Document.Object {
        getCollisionInfo(pos: BlockPos): Internal.Collection<Internal.WireCollisionData$CollisionInfo>;
        removeConnection(conn: Internal.Connection): void;
        addConnection(conn: Internal.Connection): void;
    }
    type WireCollisionData_ = WireCollisionData;
    class STabCompletePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_197687_b(): Internal.Suggestions;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_197689_a(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.Suggestions);
    }
    type STabCompletePacket_ = STabCompletePacket;
    class OptionalDouble extends Document.Object {
        orElseGet(arg0: Internal.DoubleSupplier_): number;
        stream(): Internal.DoubleStream;
        ifPresentOrElse(arg0: Internal.DoubleConsumer_, arg1: Internal.Runnable_): void;
        ifPresent(arg0: Internal.DoubleConsumer_): void;
        static of(arg0: number): Internal.OptionalDouble;
        isEmpty(): boolean;
        isPresent(): boolean;
        getAsDouble(): number;
        orElse(arg0: number): number;
        orElseThrow<X_>(arg0: java_.util.function_.Supplier_<X_>): number;
        orElseThrow(): number;
        static empty(): Internal.OptionalDouble;
        get asDouble(): number;
        get present(): boolean;
    }
    type OptionalDouble_ = OptionalDouble;
    interface ILootFunction extends Internal.IParameterized, Internal.BiFunction<Internal.ItemStack, Internal.LootContext, Internal.ItemStack> {
        func_230425_b_(): Internal.LootFunctionType;
        (): Internal.LootFunctionType;
    }
    type ILootFunction_ = (()=>Internal.LootFunctionType) | ILootFunction;
    class ExtendedMenuScreen extends Internal.MainMenuScreen {
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212927_b(arg0: number, arg1: number): void;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_231049_c__(arg0: boolean): boolean;
        getFont(): Internal.FontRenderer;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        func_231048_c_(arg0: number, arg1: number, arg2: number): boolean;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        static readonly BACKGROUND: ResourceLocation;
        readonly field_209101_K: Internal.RenderSkybox;
        get font(): Internal.FontRenderer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean);
    }
    type ExtendedMenuScreen_ = ExtendedMenuScreen;
    class DataType <T> extends Document.Object {
        static PLAYER: Internal.DataType<Internal.PlayerDataJS>;
        readonly parent: Internal.Class<T>;
        static SERVER: Internal.DataType<Internal.ServerJS>;
        readonly name: string;
        readonly actualParent: Internal.Class;
        static WORLD: Internal.DataType<Internal.WorldJS>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(s: string, c: Internal.Class<T>, a: Internal.Class<any>);
        constructor(s: string, c: Internal.Class<T>);
    }
    type DataType_<T> = DataType<T>;
    class AttachWorldDataEvent extends Internal.AttachDataEvent<Internal.WorldJS> {
        invoke(): void;
        static readonly EVENT: me.shedaniel.architectury.event.Event<Internal.Consumer<Internal.AttachWorldDataEvent>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(w: Internal.WorldJS);
    }
    type AttachWorldDataEvent_ = AttachWorldDataEvent;
    class PanelScrollBar extends Internal.ScrollBar {
        closeGui(openPrevScreen: boolean): void;
        closeGui(): void;
        openContextMenu(panel: Internal.Panel): void;
        openGui(): void;
        openGuiLater(): void;
        run(): void;
        openAfter(runnable: Internal.Runnable_): Internal.Runnable;
        closeContextMenu(): void;
        readonly panel: Internal.Panel;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(parent: Internal.Panel, plane: Internal.ScrollBar$Plane, p: Internal.Panel);
        constructor(parent: Internal.Panel, panel: Internal.Panel);
    }
    type PanelScrollBar_ = PanelScrollBar;
    class BlockEvent extends net.minecraftforge.eventbus.api.Event {
        getWorld(): Internal.IWorld;
        getState(): Internal.BlockState;
        getPos(): BlockPos;
        get world(): Internal.IWorld;
        get pos(): BlockPos;
        get state(): Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState);
        constructor();
    }
    type BlockEvent_ = BlockEvent;
    class ImmutableMap$Builder <K, V> extends Document.Object {
        build(): Internal.ImmutableMap<K, V>;
        putAll(arg0: Internal.Iterable_<Internal.Map$Entry_<K, V>>): Internal.ImmutableMap$Builder<K, V>;
        putAll(arg0: Internal.Map_<K, V>): Internal.ImmutableMap$Builder<K, V>;
        orderEntriesByValue(arg0: Internal.Comparator<V>): Internal.ImmutableMap$Builder<K, V>;
        put(arg0: K, arg1: V): Internal.ImmutableMap$Builder<K, V>;
        put(arg0: Internal.Map$Entry<K, V>): Internal.ImmutableMap$Builder<K, V>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ImmutableMap$Builder_<K, V> = ImmutableMap$Builder<K, V>;
    interface Thread$Builder$OfVirtual extends Internal.Thread$Builder {
        inheritInheritableThreadLocals(arg0: boolean): Internal.Thread$Builder$OfVirtual;
        inheritInheritableThreadLocals(arg0: boolean): Internal.Thread$Builder;
        name(arg0: string, arg1: number): Internal.Thread$Builder;
        name(arg0: string, arg1: number): Internal.Thread$Builder$OfVirtual;
        name(arg0: string): Internal.Thread$Builder;
        name(arg0: string): Internal.Thread$Builder$OfVirtual;
        uncaughtExceptionHandler(arg0: Internal.Thread$UncaughtExceptionHandler_): Internal.Thread$Builder;
        uncaughtExceptionHandler(arg0: Internal.Thread$UncaughtExceptionHandler_): Internal.Thread$Builder$OfVirtual;
    }
    type Thread$Builder$OfVirtual_ = Thread$Builder$OfVirtual;
    interface ICapabilityComponent extends Internal.IMachineComponent {
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        invalidateCapability(): void;
    }
    type ICapabilityComponent_ = ICapabilityComponent;
    class DragSourceContext extends Document.Object implements Internal.DragSourceListener, Internal.DragSourceMotionListener, Internal.Serializable {
        removeDragSourceListener(arg0: Internal.DragSourceListener): void;
        getCursor(): Internal.Cursor;
        getTrigger(): Internal.DragGestureEvent;
        dragEnter(arg0: Internal.DragSourceDragEvent): void;
        dragDropEnd(arg0: Internal.DragSourceDropEvent): void;
        transferablesFlavorsChanged(): void;
        dropActionChanged(arg0: Internal.DragSourceDragEvent): void;
        getSourceActions(): number;
        addDragSourceListener(arg0: Internal.DragSourceListener): void;
        getTransferable(): Internal.Transferable;
        dragMouseMoved(arg0: Internal.DragSourceDragEvent): void;
        getDragSource(): Internal.DragSource;
        setCursor(arg0: Internal.Cursor): void;
        dragOver(arg0: Internal.DragSourceDragEvent): void;
        getComponent(): Internal.Component;
        dragExit(arg0: Internal.DragSourceEvent): void;
        get cursor(): Internal.Cursor;
        get sourceActions(): number;
        get component(): Internal.Component;
        get transferable(): Internal.Transferable;
        get trigger(): Internal.DragGestureEvent;
        get dragSource(): Internal.DragSource;
        set cursor(arg0: Internal.Cursor);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DragGestureEvent, arg1: Internal.Cursor, arg2: Internal.Image, arg3: Internal.Point, arg4: Internal.Transferable, arg5: Internal.DragSourceListener);
    }
    type DragSourceContext_ = DragSourceContext;
    class MouseEvent extends Internal.InputEvent {
        translatePoint(arg0: number, arg1: number): void;
        static getMouseModifiersText(arg0: number): string;
        getButton(): number;
        getPoint(): Internal.Point;
        getX(): number;
        getY(): number;
        getYOnScreen(): number;
        getLocationOnScreen(): Internal.Point;
        getClickCount(): number;
        getXOnScreen(): number;
        isPopupTrigger(): boolean;
        static readonly MOUSE_FIRST: 500;
        static readonly MOUSE_MOVED: 503;
        static readonly MOUSE_WHEEL: 507;
        static readonly MOUSE_PRESSED: 501;
        static readonly MOUSE_LAST: 507;
        static readonly NOBUTTON: 0;
        static readonly BUTTON2: 2;
        static readonly BUTTON3: 3;
        static readonly BUTTON1: 1;
        static readonly MOUSE_RELEASED: 502;
        static readonly MOUSE_EXITED: 505;
        static readonly MOUSE_CLICKED: 500;
        static readonly MOUSE_ENTERED: 504;
        static readonly MOUSE_DRAGGED: 506;
        get button(): number;
        get clickCount(): number;
        get popupTrigger(): boolean;
        get x(): number;
        get locationOnScreen(): Internal.Point;
        get y(): number;
        get yOnScreen(): number;
        get xOnScreen(): number;
        get point(): Internal.Point;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: number);
        constructor(arg0: Internal.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean);
        constructor(arg0: Internal.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: boolean, arg10: number);
    }
    type MouseEvent_ = MouseEvent;
    class RPConfig$PlayerSpeedLimits extends Document.Object {
        defaultMaxSpeed: number;
        maxVehicleSpeed: number;
        maxElytraSpeed: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RPConfig$PlayerSpeedLimits_ = RPConfig$PlayerSpeedLimits;
    interface IServerPlayNetHandler extends Internal.INetHandler {
        func_230549_a_(arg0: Internal.CJigsawBlockGeneratePacket): void;
        func_211525_a(arg0: Internal.CQueryTileEntityNBTPacket): void;
        func_211526_a(arg0: Internal.CQueryEntityNBTPacket): void;
        func_184339_a(arg0: Internal.CConfirmTeleportPacket): void;
        func_184338_a(arg0: Internal.CMoveVehiclePacket): void;
        func_147356_a(arg0: Internal.CCloseWindowPacket): void;
        func_184337_a(arg0: Internal.CPlayerTryUseItemOnBlockPacket): void;
        func_175087_a(arg0: Internal.CAnimateHandPacket): void;
        func_175086_a(arg0: Internal.CResourcePackStatusPacket): void;
        func_147355_a(arg0: Internal.CHeldItemChangePacket): void;
        func_147358_a(arg0: Internal.CInputPacket): void;
        func_147357_a(arg0: Internal.CEntityActionPacket): void;
        func_175088_a(arg0: Internal.CSpectatePacket): void;
        func_147352_a(arg0: Internal.CClientSettingsPacket): void;
        func_147351_a(arg0: Internal.CClickWindowPacket): void;
        func_147354_a(arg0: Internal.CChatMessagePacket): void;
        func_147353_a(arg0: Internal.CKeepAlivePacket): void;
        func_184340_a(arg0: Internal.CSteerBoatPacket): void;
        func_147349_a(arg0: Internal.CCustomPayloadPacket): void;
        func_147348_a(arg0: Internal.CPlayerAbilitiesPacket): void;
        func_210158_a(arg0: Internal.CUpdateMinecartCommandBlockPacket): void;
        func_210159_a(arg0: Internal.CSelectTradePacket): void;
        func_194308_a(arg0: Internal.CPlaceRecipePacket): void;
        func_217263_a(arg0: Internal.CSetDifficultyPacket): void;
        func_217261_a(arg0: Internal.CLockDifficultyPacket): void;
        func_191984_a(arg0: Internal.CMarkRecipeSeenPacket): void;
        func_217262_a(arg0: Internal.CUpdateJigsawBlockPacket): void;
        func_147345_a(arg0: Internal.CPlayerDiggingPacket): void;
        func_210156_a(arg0: Internal.CEditBookPacket): void;
        func_147344_a(arg0: Internal.CCreativeInventoryActionPacket): void;
        func_195518_a(arg0: Internal.CTabCompletePacket): void;
        func_210157_a(arg0: Internal.CUpdateStructureBlockPacket): void;
        func_147347_a(arg0: Internal.CPlayerPacket): void;
        func_210154_a(arg0: Internal.CUpdateBeaconPacket): void;
        func_147346_a(arg0: Internal.CPlayerTryUseItemPacket): void;
        func_210155_a(arg0: Internal.CRenameItemPacket): void;
        func_210152_a(arg0: Internal.CPickItemPacket): void;
        func_194027_a(arg0: Internal.CSeenAdvancementsPacket): void;
        func_210153_a(arg0: Internal.CUpdateCommandBlockPacket): void;
        func_147340_a(arg0: Internal.CUseEntityPacket): void;
        func_147343_a(arg0: Internal.CUpdateSignPacket): void;
        func_147342_a(arg0: Internal.CClientStatusPacket): void;
        func_147338_a(arg0: Internal.CEnchantItemPacket): void;
        func_147339_a(arg0: Internal.CConfirmTransactionPacket): void;
        func_241831_a(arg0: Internal.CUpdateRecipeBookStatusPacket): void;
    }
    type IServerPlayNetHandler_ = IServerPlayNetHandler;
    class AbstractArrowEntity$PickupStatus extends Internal.Enum<Internal.AbstractArrowEntity$PickupStatus> {
        static func_188795_a(arg0: number): Internal.AbstractArrowEntity$PickupStatus;
        static valueOf(arg0: string): Internal.AbstractArrowEntity$PickupStatus;
        static values(): Internal.AbstractArrowEntity$PickupStatus[];
        static readonly ALLOWED: Internal.AbstractArrowEntity$PickupStatus;
        static readonly CREATIVE_ONLY: Internal.AbstractArrowEntity$PickupStatus;
        static readonly DISALLOWED: Internal.AbstractArrowEntity$PickupStatus;
    }
    type AbstractArrowEntity$PickupStatus_ = "disallowed" | "allowed" | "creative_only" | AbstractArrowEntity$PickupStatus;
    interface AWTEventListener extends Internal.EventListener {
        eventDispatched(arg0: Internal.AWTEvent): void;
        (arg0: Internal.AWTEvent): void;
    }
    type AWTEventListener_ = ((arg0: Internal.AWTEvent)=>void) | AWTEventListener;
    class Enum$EnumDesc <E> extends Internal.DynamicConstantDesc<E> {
        static of<E_>(arg0: Internal.ClassDesc, arg1: string): Internal.Enum$EnumDesc<E_>;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): any;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): E;
    }
    type Enum$EnumDesc_<E> = Enum$EnumDesc<E>;
    class ReplaceBlockConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236604_a_: Internal.Codec<Internal.ReplaceBlockConfig>;
        readonly field_202457_a: Internal.BlockState;
        readonly field_202458_b: Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockState, arg1: Internal.BlockState);
    }
    type ReplaceBlockConfig_ = ReplaceBlockConfig;
    interface RecordBuilder <T> {
        withErrorsFrom(arg0: Internal.DataResult<any>): Internal.RecordBuilder<T>;
        add(arg0: string, arg1: T): Internal.RecordBuilder<T>;
        add(arg0: string, arg1: Internal.DataResult<T>): Internal.RecordBuilder<T>;
        add(arg0: Internal.DataResult<T>, arg1: Internal.DataResult<T>): Internal.RecordBuilder<T>;
        add<E>(arg0: string, arg1: E, arg2: Internal.Encoder_<E>): Internal.RecordBuilder<T>;
        add(arg0: T, arg1: T): Internal.RecordBuilder<T>;
        add(arg0: T, arg1: Internal.DataResult<T>): Internal.RecordBuilder<T>;
        mapError(arg0: Internal.UnaryOperator<string>): Internal.RecordBuilder<T>;
        ops(): Internal.DynamicOps<T>;
        setLifecycle(arg0: Internal.Lifecycle): Internal.RecordBuilder<T>;
        build(arg0: Internal.DataResult<T>): Internal.DataResult<T>;
        build(arg0: T): Internal.DataResult<T>;
    }
    type RecordBuilder_<T> = RecordBuilder<T>;
    class WindowEvent extends Internal.ComponentEvent {
        getWindow(): Internal.Window;
        getOppositeWindow(): Internal.Window;
        getOldState(): number;
        getNewState(): number;
        static readonly WINDOW_OPENED: 200;
        static readonly WINDOW_ACTIVATED: 205;
        static readonly WINDOW_DEACTIVATED: 206;
        static readonly WINDOW_STATE_CHANGED: 209;
        static readonly WINDOW_CLOSED: 202;
        static readonly WINDOW_LAST: 209;
        static readonly WINDOW_FIRST: 200;
        static readonly WINDOW_LOST_FOCUS: 208;
        static readonly WINDOW_ICONIFIED: 203;
        static readonly WINDOW_GAINED_FOCUS: 207;
        static readonly WINDOW_DEICONIFIED: 204;
        static readonly WINDOW_CLOSING: 201;
        get oldState(): number;
        get window(): Internal.Window;
        get oppositeWindow(): Internal.Window;
        get newState(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Window, arg1: number);
        constructor(arg0: Internal.Window, arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.Window, arg1: number, arg2: Internal.Window);
        constructor(arg0: Internal.Window, arg1: number, arg2: Internal.Window, arg3: number, arg4: number);
    }
    type WindowEvent_ = WindowEvent;
    class ResourcePackList extends Document.Object implements Internal.AutoCloseable {
        func_232623_f_(): Internal.List<Internal.IResourcePack>;
        func_198981_a(arg0: string): Internal.ResourcePackInfo;
        func_198978_b(): Internal.Collection<Internal.ResourcePackInfo>;
        func_198985_a(arg0: Internal.Collection<string>): void;
        func_232616_b_(): Internal.Collection<string>;
        func_232621_d_(): Internal.Collection<string>;
        func_232617_b_(arg0: string): boolean;
        close(): void;
        func_198980_d(): Internal.Collection<Internal.ResourcePackInfo>;
        func_198983_a(): void;
        addPackFinder(arg0: Internal.IPackFinder_): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ResourcePackInfo$IFactory, arg1: Internal.IPackFinder[]);
        constructor(arg0: Internal.IPackFinder[]);
    }
    type ResourcePackList_ = ResourcePackList;
    interface TimeoutList$TimeoutDelegate <V> {
        onTimeout(arg0: V): void;
        (arg0: V): void;
    }
    type TimeoutList$TimeoutDelegate_<V> = ((arg0: V)=>void) | TimeoutList$TimeoutDelegate<V>;
    class LivingFluidCollisionEvent extends Internal.LivingEvent {
        getFluidState(): Internal.FluidState;
        get fluidState(): Internal.FluidState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.FluidState);
    }
    type LivingFluidCollisionEvent_ = LivingFluidCollisionEvent;
    abstract class CommandNode <S> extends Document.Object implements Internal.Comparable<Internal.CommandNode<S>> {
        getRelevantNodes(arg0: Internal.StringReader): Internal.Collection<Internal.CommandNode<S>>;
        getRedirectModifier(): Internal.RedirectModifier<S>;
        getName(): string;
        getRedirect(): Internal.CommandNode<S>;
        getCommand(): Internal.Command<S>;
        getChild(arg0: string): Internal.CommandNode<S>;
        getExamples(): Internal.Collection<string>;
        getUsageText(): string;
        parse(arg0: Internal.StringReader, arg1: Internal.CommandContextBuilder<S>): void;
        compareTo(arg0: Internal.CommandNode<S>): number;
        compareTo(arg0: any): number;
        isFork(): boolean;
        canUse(arg0: S): boolean;
        getChildren(): Internal.Collection<Internal.CommandNode<S>>;
        findAmbiguities(arg0: Internal.AmbiguityConsumer_<S>): void;
        getRequirement(): Internal.Predicate<S>;
        listSuggestions(arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        createBuilder(): Internal.ArgumentBuilder<S, any>;
        addChild(arg0: Internal.CommandNode<S>): void;
        get redirect(): Internal.CommandNode<S>;
        get fork(): boolean;
        get examples(): Internal.Collection<string>;
        get children(): Internal.Collection<Internal.CommandNode<S>>;
        get name(): string;
        get usageText(): string;
        get requirement(): Internal.Predicate<S>;
        get redirectModifier(): Internal.RedirectModifier<S>;
        get command(): Internal.Command<S>;
    }
    type CommandNode_<S> = CommandNode<S>;
    abstract class ShootableItem extends Internal.Item {
        canElytraFly(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        onEnchantment(arg0: Internal.ItemStack, arg1: Internal.List<Internal.EnchantmentData>): Internal.ItemStack;
        getItem(): Internal.Item;
        static func_220005_a(arg0: Internal.LivingEntity, arg1: Internal.Predicate_<Internal.ItemStack_>): Internal.ItemStack;
        getSmeltingExperience(arg0: Internal.ItemStack): number;
        setDamage(arg0: Internal.ItemStack, arg1: number): void;
        canHarvestBlock(arg0: Internal.ItemStack, arg1: Internal.BlockState): boolean;
        renderHelmetOverlay(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: number, arg3: number, arg4: number): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        damageItem<T_>(arg0: Internal.ItemStack, arg1: number, arg2: T_, arg3: Internal.Consumer_<T_>): number;
        getItemEnchantability(arg0: Internal.ItemStack): number;
        isTreasureAllowed(arg0: Internal.ItemStack, arg1: boolean): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: boolean): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack): number;
        getArmorModel<A_>(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: EquipmentSlot_, arg3: A_): A_;
        readShareTag(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): void;
        onEntityItemUpdate(arg0: Internal.ItemStack, arg1: Internal.ItemEntity): boolean;
        getDamage(arg0: Internal.ItemStack): number;
        showDurabilityBar(arg0: Internal.ItemStack): boolean;
        isBookEnchantable(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.LivingEntity, arg3: Internal.LivingEntity): boolean;
        onUsingTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): void;
        createEntity(arg0: Internal.World, arg1: Internal.Entity, arg2: Internal.ItemStack): Internal.Entity;
        isPiglinCurrency(arg0: Internal.ItemStack): boolean;
        getCreativeTabs(): Internal.Collection<Internal.ItemGroup>;
        getShareTag(arg0: Internal.ItemStack): Internal.CompoundNBT;
        getRGBDurabilityForDisplay(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack, arg1: Internal.IRecipeType<any>): number;
        onDroppedByPlayer(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity): boolean;
        isDamageable(arg0: Internal.ItemStack): boolean;
        onEntitySwing(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        elytraFlightTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): boolean;
        selectEnchantments(arg0: Internal.List<Internal.EnchantmentData>, arg1: Internal.Random, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number, arg6: boolean): Internal.List<Internal.EnchantmentData>;
        getAttributeModifiers(arg0: EquipmentSlot_, arg1: Internal.ItemStack): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        onLeftClickEntity(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.Entity): boolean;
        canEquip(arg0: Internal.ItemStack, arg1: EquipmentSlot_, arg2: Internal.Entity): boolean;
        func_230305_d_(): number;
        func_220004_b(): Internal.Predicate<Internal.ItemStack>;
        func_220006_d(): Internal.Predicate<Internal.ItemStack>;
        getDurabilityForDisplay(arg0: Internal.ItemStack): number;
        onBlockStartBreak(arg0: Internal.ItemStack, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.MobEntity): void;
        canContinueUsing(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getEntityLifespan(arg0: Internal.ItemStack, arg1: Internal.World): number;
        getArmorTexture(arg0: Internal.ItemStack, arg1: Internal.Entity, arg2: EquipmentSlot_, arg3: string): string;
        hasCustomEntity(arg0: Internal.ItemStack): boolean;
        getHighlightTip(arg0: Internal.ItemStack, arg1: Internal.ITextComponent_): Internal.ITextComponent;
        getMaxDamage(arg0: Internal.ItemStack): number;
        getCreatorModId(arg0: Internal.ItemStack): string;
        isDamaged(arg0: Internal.ItemStack): boolean;
        onArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.PlayerEntity): void;
        hasContainerItem(arg0: Internal.ItemStack): boolean;
        isShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        doesSneakBypassUse(arg0: Internal.ItemStack, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        onItemUseFirst(arg0: Internal.ItemStack, arg1: Internal.ItemUseContext): Internal.ActionResultType;
        getContainerItem(arg0: Internal.ItemStack): Internal.ItemStack;
        setRegistryName(arg0: ResourceLocation_): any;
        getEquipmentSlot(arg0: Internal.ItemStack): EquipmentSlot;
        initCapabilities(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): Internal.ICapabilityProvider;
        getItemStackLimit(arg0: Internal.ItemStack): number;
        getFontRenderer(arg0: Internal.ItemStack): Internal.FontRenderer;
        forciblyAllowsTableEnchantment(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        makesPiglinsNeutral(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        isEnderMask(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.EndermanEntity): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        static readonly field_220007_a: Internal.Predicate<Internal.ItemStack>;
        static readonly field_220008_b: Internal.Predicate<Internal.ItemStack>;
        get item(): Internal.Item;
        get creativeTabs(): Internal.Collection<Internal.ItemGroup>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Item$Properties);
    }
    type ShootableItem_ = ShootableItem;
    class LinearPosTest extends Internal.PosRuleTest {
        static readonly field_237087_a_: Internal.Codec<Internal.LinearPosTest>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type LinearPosTest_ = LinearPosTest;
    abstract class TeamBase extends Document.Object {
        isAlly(arg0: Internal.UUID): boolean;
        getProperty<T_>(arg0: Internal.TeamProperty<T_>): T_;
        getName(): Internal.ITextComponent;
        getHighestRank(arg0: Internal.UUID): Internal.TeamRank;
        isValid(): boolean;
        getExtraData(): Internal.CompoundNBT;
        save(): void;
        getColor(): number;
        getId(): Internal.UUID;
        getRanked(arg0: Internal.TeamRank_): Internal.Map<Internal.UUID, Internal.TeamRank>;
        isMember(arg0: Internal.UUID): boolean;
        isOfficer(arg0: Internal.UUID): boolean;
        getDescription(): string;
        isFreeToJoin(): boolean;
        getColoredName(): Internal.ITextComponent;
        getStringID(): string;
        isInvited(arg0: Internal.UUID): boolean;
        getDisplayName(): string;
        getType(): Internal.TeamType;
        setProperty<T_>(arg0: Internal.TeamProperty<T_>, arg1: T_): void;
        getMembers(): Internal.Set<Internal.UUID>;
        static readonly FREE_TO_JOIN: Internal.BooleanProperty;
        static readonly DESCRIPTION: Internal.StringProperty;
        static readonly COLOR: Internal.ColorProperty;
        readonly messageHistory: Internal.List<Internal.TeamMessage>;
        static readonly DISPLAY_NAME: Internal.StringProperty;
        readonly properties: Internal.TeamProperties;
        get valid(): boolean;
        get stringID(): string;
        get color(): number;
        get extraData(): Internal.CompoundNBT;
        get displayName(): string;
        get members(): Internal.Set<Internal.UUID>;
        get name(): Internal.ITextComponent;
        get description(): string;
        get id(): Internal.UUID;
        get type(): Internal.TeamType;
        get coloredName(): Internal.ITextComponent;
        get freeToJoin(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TeamBase_ = TeamBase;
    abstract class ChemicalStack <CHEMICAL> extends Document.Object implements Internal.IHasTextComponent, Internal.IHasTranslationKey {
        isStackIdentical(arg0: Internal.ChemicalStack<CHEMICAL>): boolean;
        grow(arg0: number): void;
        getAttributes(): Internal.Collection<Internal.ChemicalAttribute>;
        getAttributeTypes(): Internal.Collection<Internal.Class<Internal.ChemicalAttribute>>;
        shrink(arg0: number): void;
        getTranslationKey(): string;
        isEmpty(): boolean;
        getTextComponent(): Internal.ITextComponent;
        getChemicalTint(): number;
        isTypeEqual(arg0: Internal.ChemicalStack<CHEMICAL>): boolean;
        isTypeEqual(arg0: CHEMICAL): boolean;
        contains(arg0: Internal.ChemicalStack<CHEMICAL>): boolean;
        writeToPacket(arg0: Internal.PacketBuffer): void;
        getType(): CHEMICAL;
        getTypeRegistryName(): ResourceLocation;
        get<T_>(arg0: Internal.Class<T_>): T_;
        getRaw(): CHEMICAL;
        has(arg0: Internal.Class<Internal.ChemicalAttribute>): boolean;
        copy(): Internal.ChemicalStack<CHEMICAL>;
        setAmount(arg0: number): void;
        write(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        getChemicalColorRepresentation(): number;
        getAmount(): number;
        get textComponent(): Internal.ITextComponent;
        get chemicalTint(): number;
        get amount(): number;
        get attributeTypes(): Internal.Collection<Internal.Class<Internal.ChemicalAttribute>>;
        get translationKey(): string;
        get typeRegistryName(): ResourceLocation;
        get raw(): CHEMICAL;
        get attributes(): Internal.Collection<Internal.ChemicalAttribute>;
        get type(): CHEMICAL;
        get chemicalColorRepresentation(): number;
        get empty(): boolean;
        set amount(arg0: number);
    }
    type ChemicalStack_<CHEMICAL> = ChemicalStack<CHEMICAL>;
    class ModuleDescriptor$Requires$Modifier extends Internal.Enum<Internal.ModuleDescriptor$Requires$Modifier> {
        static valueOf(arg0: string): Internal.ModuleDescriptor$Requires$Modifier;
        static values(): Internal.ModuleDescriptor$Requires$Modifier[];
        static readonly TRANSITIVE: Internal.ModuleDescriptor$Requires$Modifier;
        static readonly SYNTHETIC: Internal.ModuleDescriptor$Requires$Modifier;
        static readonly MANDATED: Internal.ModuleDescriptor$Requires$Modifier;
        static readonly STATIC: Internal.ModuleDescriptor$Requires$Modifier;
    }
    type ModuleDescriptor$Requires$Modifier_ = "transitive" | "static" | "synthetic" | "mandated" | ModuleDescriptor$Requires$Modifier;
    abstract class RenderablePage extends Document.Object {
        propagateMouseClick(arg0: number, arg1: number): boolean;
        postRender(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        static getFontRenderer(): Internal.FontRenderer;
        render(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        propagateMouseDrag(arg0: number, arg1: number): boolean;
        get fontRenderer(): Internal.FontRenderer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ResearchNode, arg1: number);
    }
    type RenderablePage_ = RenderablePage;
    class PrioritizedGoal extends Internal.Goal {
        func_220770_h(): number;
        func_220773_g(): boolean;
        func_220772_j(): Internal.Goal;
        func_220771_a(arg0: Internal.PrioritizedGoal): boolean;
        readonly field_220774_a: Internal.Goal;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.Goal);
    }
    type PrioritizedGoal_ = PrioritizedGoal;
    class RenderGameOverlayEvent$Chat extends Internal.RenderGameOverlayEvent$Pre {
        setPosX(arg0: number): void;
        setPosY(arg0: number): void;
        getPosX(): number;
        getPosY(): number;
        get posX(): number;
        get posY(): number;
        set posX(arg0: number);
        set posY(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MatrixStack, arg1: Internal.RenderGameOverlayEvent, arg2: number, arg3: number);
    }
    type RenderGameOverlayEvent$Chat_ = RenderGameOverlayEvent$Chat;
    class ArcFurnaceRecipeJS extends Internal.IERecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ArcFurnaceRecipeJS_ = ArcFurnaceRecipeJS;
    abstract class TypeCapture <T> extends Document.Object {
    }
    type TypeCapture_<T> = TypeCapture<T>;
    class PropertyUsage extends Internal.ForgeRegistryEntry<Internal.PropertyUsage> {
        getName(): Internal.IFormattableTextComponent;
        setRegistryName(arg0: ResourceLocation_): any;
        get name(): Internal.IFormattableTextComponent;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type PropertyUsage_ = Registry.astralsorcery.attribute_crystal_usages | PropertyUsage;
    class CSpectatePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179727_a(arg0: Internal.ServerWorld): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.UUID);
    }
    type CSpectatePacket_ = CSpectatePacket;
    interface Key extends Internal.Serializable {
        getEncoded(): number[];
        getAlgorithm(): string;
        getFormat(): string;
    }
    type Key_ = Key;
    abstract class SimpleTransmissionReceiver <T> extends Document.Object implements Internal.ITransmissionReceiver {
        readFromNBT(arg0: Internal.CompoundNBT_): void;
        needsUpdate(): boolean;
        getTransmissionConsumptionMultiplier(): number;
        markDirty(arg0: Internal.World): void;
        syncTileData(arg0: Internal.World, arg1: T): boolean;
        onTransmissionTick(arg0: Internal.World, arg1: number, arg2: Internal.IWeakConstellation): void;
        update(arg0: Internal.World): void;
        notifySourceUnlink(arg0: Internal.World, arg1: BlockPos): void;
        getSources(): Internal.List<BlockPos>;
        onStarlightReceive(arg0: Internal.World, arg1: Internal.IWeakConstellation, arg2: number): void;
        updateFromTileEntity<T_>(arg0: T_): boolean;
        needsTransmissionUpdate(): boolean;
        notifyUnlink(arg0: Internal.World, arg1: BlockPos): boolean;
        queryNext(arg0: Internal.WorldNetworkHandler): Internal.List<Internal.NodeConnection<Internal.IPrismTransmissionNode>>;
        getTileAtPos(arg0: Internal.World): T;
        getProvider(): Internal.TransmissionProvider;
        getTileClass(): Internal.Class<T>;
        getTransmissionThroughputMultiplier(): number;
        writeToNBT(arg0: Internal.CompoundNBT_): void;
        notifyBlockChange(arg0: Internal.World, arg1: BlockPos): boolean;
        notifySourceLink(arg0: Internal.World, arg1: BlockPos): void;
        getLocationPos(): BlockPos;
        notifyLink(arg0: Internal.World, arg1: BlockPos): void;
        markForTileSync(): void;
        getTransmissionProperties(): Internal.CrystalAttributes;
        postLoad(arg0: Internal.IWorld): void;
        get tileClass(): Internal.Class<T>;
        get sources(): Internal.List<BlockPos>;
        get locationPos(): BlockPos;
        get provider(): Internal.TransmissionProvider;
        get transmissionConsumptionMultiplier(): number;
        get transmissionThroughputMultiplier(): number;
        get transmissionProperties(): Internal.CrystalAttributes;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: BlockPos);
    }
    type SimpleTransmissionReceiver_<T> = SimpleTransmissionReceiver<T>;
    class GiantEntity extends Internal.MonsterEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        static func_234291_m_(): Internal.AttributeModifierMap$MutableAttribute;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.GiantEntity>, arg1: Internal.World);
    }
    type GiantEntity_ = GiantEntity;
    interface PathIterator {
        next(): void;
        getWindingRule(): number;
        currentSegment(arg0: number[]): number;
        currentSegment(arg0: number[]): number;
        isDone(): boolean;
    }
    type PathIterator_ = PathIterator;
    abstract class Component extends Document.Object implements Internal.ImageObserver, Internal.MenuContainer, Internal.Serializable {
        getHierarchyBoundsListeners(): Internal.HierarchyBoundsListener[];
        requestFocusInWindow(): boolean;
        requestFocusInWindow(arg0: Internal.FocusEvent$Cause_): boolean;
        getLocation(): Internal.Point;
        getLocation(arg0: Internal.Point): Internal.Point;
        isOpaque(): boolean;
        paint(arg0: Internal.Graphics): void;
        getInputMethodListeners(): Internal.InputMethodListener[];
        mouseDown(arg0: java_.awt.Event, arg1: number, arg2: number): boolean;
        getInputMethodRequests(): Internal.InputMethodRequests;
        getBounds(): Internal.Rectangle;
        getBounds(arg0: Internal.Rectangle): Internal.Rectangle;
        setPreferredSize(arg0: Internal.Dimension): void;
        addHierarchyBoundsListener(arg0: Internal.HierarchyBoundsListener): void;
        enable(): void;
        enable(arg0: boolean): void;
        getMinimumSize(): Internal.Dimension;
        getMousePosition(): Internal.Point;
        getAlignmentY(): number;
        action(arg0: java_.awt.Event, arg1: any): boolean;
        getAlignmentX(): number;
        firePropertyChange(arg0: string, arg1: number, arg2: number): void;
        firePropertyChange(arg0: string, arg1: number, arg2: number): void;
        firePropertyChange(arg0: string, arg1: number, arg2: number): void;
        firePropertyChange(arg0: string, arg1: number, arg2: number): void;
        firePropertyChange(arg0: string, arg1: string, arg2: string): void;
        firePropertyChange(arg0: string, arg1: number, arg2: number): void;
        dispatchEvent(arg0: Internal.AWTEvent): void;
        addMouseMotionListener(arg0: Internal.MouseMotionListener): void;
        getComponentOrientation(): Internal.ComponentOrientation;
        setFocusable(arg0: boolean): void;
        getTreeLock(): any;
        reshape(arg0: number, arg1: number, arg2: number, arg3: number): void;
        addHierarchyListener(arg0: Internal.HierarchyListener_): void;
        isBackgroundSet(): boolean;
        postEvent(arg0: java_.awt.Event): boolean;
        setEnabled(arg0: boolean): void;
        contains(arg0: Internal.Point): boolean;
        contains(arg0: number, arg1: number): boolean;
        isLightweight(): boolean;
        size(): Internal.Dimension;
        mouseUp(arg0: java_.awt.Event, arg1: number, arg2: number): boolean;
        enableInputMethods(arg0: boolean): void;
        minimumSize(): Internal.Dimension;
        isEnabled(): boolean;
        bounds(): Internal.Rectangle;
        addComponentListener(arg0: Internal.ComponentListener): void;
        repaint(): void;
        repaint(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        repaint(arg0: number, arg1: number, arg2: number, arg3: number): void;
        repaint(arg0: number): void;
        getMouseMotionListeners(): Internal.MouseMotionListener[];
        setMinimumSize(arg0: Internal.Dimension): void;
        transferFocus(): void;
        getListeners<T_>(arg0: Internal.Class<T_>): T_[];
        setName(arg0: string): void;
        removeInputMethodListener(arg0: Internal.InputMethodListener): void;
        getMaximumSize(): Internal.Dimension;
        getLocationOnScreen(): Internal.Point;
        removeHierarchyListener(arg0: Internal.HierarchyListener_): void;
        keyUp(arg0: java_.awt.Event, arg1: number): boolean;
        getWidth(): number;
        getFontMetrics(arg0: Internal.Font): Internal.FontMetrics;
        getHeight(): number;
        paintAll(arg0: Internal.Graphics): void;
        setFocusTraversalKeys(arg0: number, arg1: Internal.Set<Internal.AWTKeyStroke>): void;
        getIgnoreRepaint(): boolean;
        getBaselineResizeBehavior(): Internal.Component$BaselineResizeBehavior;
        removeMouseWheelListener(arg0: Internal.MouseWheelListener_): void;
        hasFocus(): boolean;
        isPreferredSizeSet(): boolean;
        applyComponentOrientation(arg0: Internal.ComponentOrientation): void;
        validate(): void;
        isDoubleBuffered(): boolean;
        getParent(): java_.awt.Container;
        isMinimumSizeSet(): boolean;
        getColorModel(): Internal.ColorModel;
        getPropertyChangeListeners(): Internal.PropertyChangeListener[];
        getPropertyChangeListeners(arg0: string): Internal.PropertyChangeListener[];
        setComponentOrientation(arg0: Internal.ComponentOrientation): void;
        isValid(): boolean;
        getFocusTraversalKeysEnabled(): boolean;
        setBounds(arg0: Internal.Rectangle): void;
        setBounds(arg0: number, arg1: number, arg2: number, arg3: number): void;
        hide(): void;
        getPreferredSize(): Internal.Dimension;
        addNotify(): void;
        disable(): void;
        prepareImage(arg0: Internal.Image, arg1: Internal.ImageObserver_): boolean;
        prepareImage(arg0: Internal.Image, arg1: number, arg2: number, arg3: Internal.ImageObserver_): boolean;
        addInputMethodListener(arg0: Internal.InputMethodListener): void;
        getFocusCycleRootAncestor(): java_.awt.Container;
        isFocusable(): boolean;
        getName(): string;
        isFocusTraversable(): boolean;
        setMixingCutoutShape(arg0: Internal.Shape): void;
        inside(arg0: number, arg1: number): boolean;
        getFocusTraversalKeys(arg0: number): Internal.Set<Internal.AWTKeyStroke>;
        getInputContext(): Internal.InputContext;
        nextFocus(): void;
        mouseExit(arg0: java_.awt.Event, arg1: number, arg2: number): boolean;
        getHierarchyListeners(): Internal.HierarchyListener[];
        isCursorSet(): boolean;
        isShowing(): boolean;
        mouseEnter(arg0: java_.awt.Event, arg1: number, arg2: number): boolean;
        mouseDrag(arg0: java_.awt.Event, arg1: number, arg2: number): boolean;
        preferredSize(): Internal.Dimension;
        getMouseWheelListeners(): Internal.MouseWheelListener[];
        getMouseListeners(): Internal.MouseListener[];
        setFont(arg0: Internal.Font): void;
        removeMouseMotionListener(arg0: Internal.MouseMotionListener): void;
        doLayout(): void;
        setVisible(arg0: boolean): void;
        add(arg0: Internal.PopupMenu): void;
        removeKeyListener(arg0: Internal.KeyListener): void;
        isVisible(): boolean;
        setDropTarget(arg0: Internal.DropTarget): void;
        removePropertyChangeListener(arg0: Internal.PropertyChangeListener_): void;
        removePropertyChangeListener(arg0: string, arg1: Internal.PropertyChangeListener_): void;
        list(arg0: Internal.PrintStream): void;
        list(): void;
        list(arg0: Internal.PrintStream, arg1: number): void;
        list(arg0: Internal.PrintWriter, arg1: number): void;
        list(arg0: Internal.PrintWriter): void;
        deliverEvent(arg0: java_.awt.Event): void;
        getForeground(): java_.awt.Color;
        revalidate(): void;
        removeNotify(): void;
        setCursor(arg0: Internal.Cursor): void;
        getFont(): Internal.Font;
        getGraphicsConfiguration(): Internal.GraphicsConfiguration;
        isDisplayable(): boolean;
        setLocale(arg0: Internal.Locale): void;
        gotFocus(arg0: java_.awt.Event, arg1: any): boolean;
        removeComponentListener(arg0: Internal.ComponentListener): void;
        requestFocus(): void;
        requestFocus(arg0: Internal.FocusEvent$Cause_): void;
        locate(arg0: number, arg1: number): Internal.Component;
        addFocusListener(arg0: Internal.FocusListener): void;
        handleEvent(arg0: java_.awt.Event): boolean;
        isForegroundSet(): boolean;
        getComponentAt(arg0: number, arg1: number): Internal.Component;
        getComponentAt(arg0: Internal.Point): Internal.Component;
        show(): void;
        show(arg0: boolean): void;
        update(arg0: Internal.Graphics): void;
        isFocusCycleRoot(arg0: java_.awt.Container): boolean;
        setMaximumSize(arg0: Internal.Dimension): void;
        setFocusTraversalKeysEnabled(arg0: boolean): void;
        setBackground(arg0: java_.awt.Color): void;
        printAll(arg0: Internal.Graphics): void;
        remove(arg0: Internal.MenuComponent): void;
        getToolkit(): Internal.Toolkit;
        addMouseWheelListener(arg0: Internal.MouseWheelListener_): void;
        imageUpdate(arg0: Internal.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        transferFocusUpCycle(): void;
        checkImage(arg0: Internal.Image, arg1: Internal.ImageObserver_): number;
        checkImage(arg0: Internal.Image, arg1: number, arg2: number, arg3: Internal.ImageObserver_): number;
        isFontSet(): boolean;
        setSize(arg0: Internal.Dimension): void;
        setSize(arg0: number, arg1: number): void;
        addKeyListener(arg0: Internal.KeyListener): void;
        setLocation(arg0: number, arg1: number): void;
        setLocation(arg0: Internal.Point): void;
        getComponentListeners(): Internal.ComponentListener[];
        getGraphics(): Internal.Graphics;
        isMaximumSizeSet(): boolean;
        addPropertyChangeListener(arg0: Internal.PropertyChangeListener_): void;
        addPropertyChangeListener(arg0: string, arg1: Internal.PropertyChangeListener_): void;
        removeFocusListener(arg0: Internal.FocusListener): void;
        setIgnoreRepaint(arg0: boolean): void;
        transferFocusBackward(): void;
        getCursor(): Internal.Cursor;
        move(arg0: number, arg1: number): void;
        createImage(arg0: number, arg1: number): Internal.Image;
        createImage(arg0: Internal.ImageProducer): Internal.Image;
        mouseMove(arg0: java_.awt.Event, arg1: number, arg2: number): boolean;
        areFocusTraversalKeysSet(arg0: number): boolean;
        getKeyListeners(): Internal.KeyListener[];
        setForeground(arg0: java_.awt.Color): void;
        invalidate(): void;
        getAccessibleContext(): Internal.AccessibleContext;
        isFocusOwner(): boolean;
        layout(): void;
        getBaseline(arg0: number, arg1: number): number;
        getX(): number;
        getSize(arg0: Internal.Dimension): Internal.Dimension;
        getSize(): Internal.Dimension;
        print(arg0: Internal.Graphics): void;
        removeHierarchyBoundsListener(arg0: Internal.HierarchyBoundsListener): void;
        getY(): number;
        getFocusListeners(): Internal.FocusListener[];
        createVolatileImage(arg0: number, arg1: number): Internal.VolatileImage;
        createVolatileImage(arg0: number, arg1: number, arg2: Internal.ImageCapabilities): Internal.VolatileImage;
        resize(arg0: Internal.Dimension): void;
        resize(arg0: number, arg1: number): void;
        lostFocus(arg0: java_.awt.Event, arg1: any): boolean;
        location(): Internal.Point;
        removeMouseListener(arg0: Internal.MouseListener): void;
        keyDown(arg0: java_.awt.Event, arg1: number): boolean;
        getDropTarget(): Internal.DropTarget;
        getBackground(): java_.awt.Color;
        getLocale(): Internal.Locale;
        addMouseListener(arg0: Internal.MouseListener): void;
        static readonly CENTER_ALIGNMENT: 0.5;
        static readonly LEFT_ALIGNMENT: 0.0;
        static readonly BOTTOM_ALIGNMENT: 1.0;
        static readonly RIGHT_ALIGNMENT: 1.0;
        static readonly TOP_ALIGNMENT: 0.0;
        get parent(): java_.awt.Container;
        get inputContext(): Internal.InputContext;
        get graphicsConfiguration(): Internal.GraphicsConfiguration;
        get dropTarget(): Internal.DropTarget;
        get foreground(): java_.awt.Color;
        get graphics(): Internal.Graphics;
        get baselineResizeBehavior(): Internal.Component$BaselineResizeBehavior;
        get foregroundSet(): boolean;
        get mouseWheelListeners(): Internal.MouseWheelListener[];
        get propertyChangeListeners(): Internal.PropertyChangeListener[];
        get doubleBuffered(): boolean;
        get height(): number;
        get visible(): boolean;
        get displayable(): boolean;
        get focusable(): boolean;
        get maximumSizeSet(): boolean;
        get mousePosition(): Internal.Point;
        get focusTraversalKeysEnabled(): boolean;
        get focusOwner(): boolean;
        get toolkit(): Internal.Toolkit;
        get focusCycleRootAncestor(): java_.awt.Container;
        get background(): java_.awt.Color;
        get name(): string;
        get focusTraversable(): boolean;
        get maximumSize(): Internal.Dimension;
        get hierarchyListeners(): Internal.HierarchyListener[];
        get minimumSizeSet(): boolean;
        get cursor(): Internal.Cursor;
        get accessibleContext(): Internal.AccessibleContext;
        get alignmentX(): number;
        get alignmentY(): number;
        get componentOrientation(): Internal.ComponentOrientation;
        get locale(): Internal.Locale;
        get ignoreRepaint(): boolean;
        get enabled(): boolean;
        get lightweight(): boolean;
        get valid(): boolean;
        get componentListeners(): Internal.ComponentListener[];
        get locationOnScreen(): Internal.Point;
        get colorModel(): Internal.ColorModel;
        get cursorSet(): boolean;
        get keyListeners(): Internal.KeyListener[];
        get inputMethodListeners(): Internal.InputMethodListener[];
        get opaque(): boolean;
        get mouseListeners(): Internal.MouseListener[];
        get hierarchyBoundsListeners(): Internal.HierarchyBoundsListener[];
        get inputMethodRequests(): Internal.InputMethodRequests;
        get preferredSizeSet(): boolean;
        get treeLock(): any;
        get backgroundSet(): boolean;
        get focusListeners(): Internal.FocusListener[];
        get width(): number;
        get x(): number;
        get y(): number;
        get fontSet(): boolean;
        get showing(): boolean;
        get mouseMotionListeners(): Internal.MouseMotionListener[];
        get font(): Internal.Font;
        set cursor(arg0: Internal.Cursor);
        set visible(arg0: boolean);
        set componentOrientation(arg0: Internal.ComponentOrientation);
        set dropTarget(arg0: Internal.DropTarget);
        set focusable(arg0: boolean);
        set foreground(arg0: java_.awt.Color);
        set locale(arg0: Internal.Locale);
        set ignoreRepaint(arg0: boolean);
        set enabled(arg0: boolean);
        set focusTraversalKeysEnabled(arg0: boolean);
        set mixingCutoutShape(arg0: Internal.Shape);
        set background(arg0: java_.awt.Color);
        set name(arg0: string);
        set maximumSize(arg0: Internal.Dimension);
        set font(arg0: Internal.Font);
    }
    type Component_ = Component;
    interface SortedSet <E> extends Internal.Set<E>, Internal.SequencedSet<E> {
        tailSet(arg0: E): Internal.SortedSet<E>;
        last(): E;
        headSet(arg0: E): Internal.SortedSet<E>;
        spliterator(): Internal.Spliterator<E>;
        removeLast(): E;
        getLast(): E;
        comparator(): Internal.Comparator<E>;
        addLast(arg0: E): void;
        getFirst(): E;
        removeFirst(): E;
        subSet(arg0: E, arg1: E): Internal.SortedSet<E>;
        reversed(): Internal.SequencedSet<any>;
        reversed(): Internal.SortedSet<E>;
        reversed(): Internal.SequencedCollection<any>;
        addFirst(arg0: E): void;
        first(): E;
    }
    type SortedSet_<E> = SortedSet<E>;
    class DragonFireballEntity extends Internal.DamagingProjectileEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number);
        constructor(arg0: Internal.EntityType<Internal.DragonFireballEntity>, arg1: Internal.World);
    }
    type DragonFireballEntity_ = DragonFireballEntity;
    class ItemColors extends Document.Object implements Internal.ItemColorsExtended {
        func_199877_a(arg0: Internal.IItemColor_, ...arg1: Internal.IItemProvider[]): void;
        getColorProvider(stack: Internal.ItemStack): Internal.IItemColor;
        func_186728_a(arg0: Internal.ItemStack, arg1: number): number;
        static func_186729_a(arg0: Internal.BlockColors): Internal.ItemColors;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ItemColors_ = ItemColors;
    class JsonPrimitive extends Internal.JsonElement {
        isBoolean(): boolean;
        isNumber(): boolean;
        isString(): boolean;
        get number(): boolean;
        get boolean(): boolean;
        get string(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor(arg0: string);
        constructor(arg0: Internal.Number);
        constructor(arg0: boolean);
    }
    type JsonPrimitive_ = JsonPrimitive;
    interface Enumeration <E> {
        hasMoreElements(): boolean;
        asIterator(): Internal.Iterator<E>;
        nextElement(): E;
    }
    type Enumeration_<E> = Enumeration<E>;
    class EndermanEntity extends Internal.MonsterEntity implements Internal.IAngerable {
        shouldRiderSit(): boolean;
        func_230256_F__(): number;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_195405_dq(): Internal.BlockState;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_226537_et_(): boolean;
        func_230260_a__(arg0: number): void;
        func_233682_c_(arg0: Internal.CompoundNBT_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_233681_b_(arg0: Internal.PlayerEntity): void;
        func_70823_r(): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_226539_l_(): void;
        func_241358_a_(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT_): void;
        func_230257_G__(): Internal.UUID;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_233678_J__(): boolean;
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        func_230258_H__(): void;
        func_241355_J__(): void;
        canRiderInteract(): boolean;
        func_233680_b_(arg0: Internal.LivingEntity): boolean;
        func_241359_a_(arg0: Internal.ServerWorld, arg1: boolean): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_241357_a_(arg0: Internal.World): boolean;
        func_195406_b(arg0: Internal.BlockState): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_241356_K__(): void;
        func_230259_a_(arg0: Internal.UUID): void;
        func_226538_eu_(): void;
        static func_234287_m_(): Internal.AttributeModifierMap$MutableAttribute;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.EndermanEntity>, arg1: Internal.World);
    }
    type EndermanEntity_ = EndermanEntity;
    class IngredientListOverlay extends Document.Object implements Internal.IIngredientListOverlay, Internal.IShowsRecipeFocuses {
        isMouseOver(arg0: number, arg1: number): boolean;
        getMouseDragHandler(): Internal.IMouseDragHandler;
        isListDisplayed(): boolean;
        onSetFilterText(arg0: string): void;
        updateLayout(arg0: boolean): void;
        clearKeyboardFocus(): void;
        onCharTyped(arg0: string, arg1: number): boolean;
        updateScreen(arg0: Internal.Screen, arg1: boolean): void;
        onGlobalKeyPressed(arg0: Internal.InputMappings$Input, arg1: Internal.MouseClickState_): boolean;
        handleTick(): void;
        getMouseHandler(): Internal.IMouseHandler;
        getVisibleIngredients(): Internal.ImmutableList<any>;
        drawOnForeground(arg0: Internal.Minecraft, arg1: Internal.MatrixStack, arg2: Internal.ContainerScreen<any>, arg3: number, arg4: number): void;
        hasKeyboardFocus(): boolean;
        drawScreen(arg0: Internal.Minecraft, arg1: Internal.MatrixStack, arg2: number, arg3: number, arg4: number): void;
        drawTooltips(arg0: Internal.Minecraft, arg1: Internal.MatrixStack, arg2: number, arg3: number): void;
        canSetFocusWithMouse(): boolean;
        getIngredientUnderMouse(): any;
        getIngredientUnderMouse(arg0: number, arg1: number): Internal.IClickedIngredient<any>;
        getIngredientUnderMouse<T_>(arg0: Internal.IIngredientType_<T_>): T_;
        onKeyPressed(arg0: number, arg1: number, arg2: number): boolean;
        get ingredientUnderMouse(): any;
        get mouseHandler(): Internal.IMouseHandler;
        get listDisplayed(): boolean;
        get visibleIngredients(): Internal.ImmutableList<any>;
        get mouseDragHandler(): Internal.IMouseDragHandler;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: any, arg2: any, arg3: any, arg4: any, arg5: any);
    }
    type IngredientListOverlay_ = IngredientListOverlay;
    class JobAttributes$DefaultSelectionType extends Internal.AttributeValue {
        static readonly ALL: Internal.JobAttributes$DefaultSelectionType;
        static readonly SELECTION: Internal.JobAttributes$DefaultSelectionType;
        static readonly RANGE: Internal.JobAttributes$DefaultSelectionType;
    }
    type JobAttributes$DefaultSelectionType_ = JobAttributes$DefaultSelectionType;
    interface IHopper extends Internal.IInventory {
        func_96108_aC(): number;
        func_145831_w(): Internal.World;
        func_96109_aB(): number;
        func_200100_i(): Internal.VoxelShape;
        func_96107_aA(): number;
    }
    type IHopper_ = IHopper;
    class PartialModel extends Document.Object {
        static onModelRegistry(arg0: Internal.ModelRegistryEvent): void;
        get(): Internal.IBakedModel;
        static onModelBake(arg0: Internal.ModelBakeEvent): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type PartialModel_ = PartialModel;
    class TreeDecoratorType <P> extends Internal.ForgeRegistryEntry<Internal.TreeDecoratorType<any>> {
        func_236876_a_(): Internal.Codec<P>;
        setRegistryName(arg0: ResourceLocation_): any;
        static readonly field_227427_c_: Internal.TreeDecoratorType<Internal.CocoaTreeDecorator>;
        static readonly field_227426_b_: Internal.TreeDecoratorType<Internal.LeaveVineTreeDecorator>;
        static readonly field_227429_e_: Internal.TreeDecoratorType<Internal.AlterGroundTreeDecorator>;
        static readonly field_227428_d_: Internal.TreeDecoratorType<Internal.BeehiveTreeDecorator>;
        static readonly field_227425_a_: Internal.TreeDecoratorType<Internal.TrunkVineTreeDecorator>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<P>);
    }
    type TreeDecoratorType_<P> = Registry.minecraft.worldgen$tree_decorator_type | TreeDecoratorType<P>;
    class ServerPlayerJS extends Internal.PlayerJS<Internal.ServerPlayerEntity> {
        setCreativeMode(mode: boolean): void;
        isAdvancementDone(id: ResourceLocation_): boolean;
        kick(): void;
        kick(reason: Internal.ITextComponent_): void;
        getHasClientMod(): boolean;
        unlockAdvancement(id: ResourceLocation_): void;
        setSpawnLocation(c: Internal.BlockContainerJS): void;
        isOP(): boolean;
        isOp(): boolean;
        getSpawnLocation(): Internal.BlockContainerJS;
        setGameMode(mode: string): void;
        revokeAdvancement(id: ResourceLocation_): void;
        ban(banner: string, reason: string, expiresInMillis: number): void;
        readonly server: Internal.ServerJS;
        get oP(): boolean;
        get op(): boolean;
        get spawnLocation(): Internal.BlockContainerJS;
        get hasClientMod(): boolean;
        set spawnLocation(c: Internal.BlockContainerJS);
        set creativeMode(mode: boolean);
        set gameMode(mode: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(d: Internal.ServerPlayerDataJS, w: Internal.ServerWorldJS, p: Internal.ServerPlayerEntity);
    }
    type ServerPlayerJS_ = ServerPlayerJS;
    class ItemFoodEatenEventJS extends Internal.PlayerEventJS {
        getItem(): Internal.ItemStackJS;
        get item(): Internal.ItemStackJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(p: Internal.ServerPlayerEntity, is: Internal.ItemStack);
    }
    type ItemFoodEatenEventJS_ = ItemFoodEatenEventJS;
    interface ConfigFormat <C> {
        supportsType(arg0: Internal.Class<any>): boolean;
        createWriter(): Internal.ConfigWriter;
        initEmptyFile(arg0: Internal.Path): void;
        initEmptyFile(arg0: Internal.WriterSupplier_): void;
        initEmptyFile(arg0: Internal.File): void;
        supportsComments(): boolean;
        isInMemory(): boolean;
        createConfig(arg0: java_.util.function_.Supplier_<Internal.Map_<string, any>>): C;
        createConfig(): C;
        createParser(): Internal.ConfigParser<C>;
        createConcurrentConfig(): C;
    }
    type ConfigFormat_<C> = ConfigFormat<C>;
    class ScrollBar$Plane extends Internal.Enum<Internal.ScrollBar$Plane> {
        static valueOf(name: string): Internal.ScrollBar$Plane;
        static values(): Internal.ScrollBar$Plane[];
        static readonly VERTICAL: Internal.ScrollBar$Plane;
        readonly isVertical: boolean;
        static readonly HORIZONTAL: Internal.ScrollBar$Plane;
    }
    type ScrollBar$Plane_ = "horizontal" | "vertical" | ScrollBar$Plane;
    interface SequenceLayout extends Internal.MemoryLayout {
        elementLayout(): Internal.MemoryLayout;
        flatten(): Internal.SequenceLayout;
        withElementCount(arg0: number): Internal.SequenceLayout;
        elementCount(): number;
        reshape(...arg0: number[]): Internal.SequenceLayout;
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.SequenceLayout;
        withoutName(): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.SequenceLayout;
    }
    type SequenceLayout_ = SequenceLayout;
    class VillagerProfession extends Internal.ForgeRegistryEntry<Internal.VillagerProfession> {
        func_221146_c(): Internal.ImmutableSet<Internal.Item>;
        func_221149_b(): Internal.PointOfInterestType;
        setRegistryName(arg0: ResourceLocation_): any;
        func_221150_d(): Internal.ImmutableSet<Internal.Block>;
        func_226558_e_(): Internal.SoundEvent;
        static readonly field_221165_o: Internal.VillagerProfession;
        static readonly field_221164_n: Internal.VillagerProfession;
        static readonly field_221159_i: Internal.VillagerProfession;
        static readonly field_221163_m: Internal.VillagerProfession;
        static readonly field_221158_h: Internal.VillagerProfession;
        static readonly field_221162_l: Internal.VillagerProfession;
        static readonly field_221157_g: Internal.VillagerProfession;
        static readonly field_221161_k: Internal.VillagerProfession;
        static readonly field_221156_f: Internal.VillagerProfession;
        static readonly field_221160_j: Internal.VillagerProfession;
        static readonly field_221155_e: Internal.VillagerProfession;
        static readonly field_221154_d: Internal.VillagerProfession;
        static readonly field_221153_c: Internal.VillagerProfession;
        static readonly field_221152_b: Internal.VillagerProfession;
        static readonly field_221151_a: Internal.VillagerProfession;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.PointOfInterestType, arg2: Internal.ImmutableSet<Internal.Item>, arg3: Internal.ImmutableSet<Internal.Block>, arg4: Internal.SoundEvent);
    }
    type VillagerProfession_ = Registry.minecraft.villager_profession | VillagerProfession;
    class HurtBySensor extends Internal.Sensor<Internal.LivingEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type HurtBySensor_ = HurtBySensor;
    class BeehiveTileEntity$Bee extends Document.Object implements Internal.BTEBeeAccessor {
        getTicksInHive(): number;
        readonly field_226977_a_: Internal.CompoundNBT;
        get ticksInHive(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CompoundNBT, arg1: number, arg2: number);
    }
    type BeehiveTileEntity$Bee_ = BeehiveTileEntity$Bee;
    abstract class ImmutableCollection$ArrayBasedBuilder <E> extends Internal.ImmutableCollection$Builder<E> {
        add(arg0: any): Internal.ImmutableCollection$Builder<any>;
        add(arg0: E): Internal.ImmutableCollection$ArrayBasedBuilder<E>;
        add(...arg0: E[]): Internal.ImmutableCollection$Builder<E>;
        addAll(arg0: Internal.Iterable_<E>): Internal.ImmutableCollection$Builder<E>;
    }
    type ImmutableCollection$ArrayBasedBuilder_<E> = ImmutableCollection$ArrayBasedBuilder<E>;
    interface AccessorMobEntity {
        setDeathLootTable(arg0: ResourceLocation_): void;
        botania_getAmbientSound(): Internal.SoundEvent;
    }
    type AccessorMobEntity_ = AccessorMobEntity;
    interface IWorldTickable {
        update(arg0: Internal.World): void;
        (arg0: Internal.World): void;
    }
    type IWorldTickable_ = ((arg0: Internal.World)=>void) | IWorldTickable;
    class MineshaftStructure$Type extends Internal.Enum<Internal.MineshaftStructure$Type> implements Internal.IStringSerializable {
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.MineshaftStructure$Type;
        static values(): Internal.MineshaftStructure$Type[];
        static func_189910_a(arg0: number): Internal.MineshaftStructure$Type;
        func_214714_a(): string;
        static readonly MESA: Internal.MineshaftStructure$Type;
        static readonly NORMAL: Internal.MineshaftStructure$Type;
        static readonly field_236324_c_: Internal.Codec<Internal.MineshaftStructure$Type>;
    }
    type MineshaftStructure$Type_ = "normal" | "mesa" | MineshaftStructure$Type;
    class HugeFungusConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_236306_i_: Internal.BlockState;
        static readonly field_236299_b_: Internal.HugeFungusConfig;
        static readonly field_236300_c_: Internal.HugeFungusConfig;
        readonly field_236305_h_: Internal.BlockState;
        static readonly field_236298_a_: Internal.Codec<Internal.HugeFungusConfig>;
        readonly field_236307_j_: boolean;
        static readonly field_236302_e_: Internal.HugeFungusConfig;
        readonly field_236304_g_: Internal.BlockState;
        static readonly field_236301_d_: Internal.HugeFungusConfig;
        readonly field_236303_f_: Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.BlockState, arg3: Internal.BlockState, arg4: boolean);
    }
    type HugeFungusConfig_ = HugeFungusConfig;
    class CResourcePackStatusPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: any);
    }
    type CResourcePackStatusPacket_ = CResourcePackStatusPacket;
    interface ObjectCollection <K> extends Internal.Collection<K>, Internal.ObjectIterable<K> {
        iterator(): Internal.ObjectIterator<K>;
        iterator(): Internal.Iterator<any>;
        (): Internal.ObjectIterator<K>;
    }
    type ObjectCollection_<K> = (()=>Internal.ObjectIterator<K>) | ObjectCollection<K>;
    abstract class DoubleBuffer extends Internal.Buffer implements Internal.Comparable<Internal.DoubleBuffer> {
        compact(): Internal.DoubleBuffer;
        clear(): Internal.DoubleBuffer;
        duplicate(): Internal.DoubleBuffer;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.DoubleBuffer): number;
        asReadOnlyBuffer(): Internal.DoubleBuffer;
        put(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.DoubleBuffer;
        put(arg0: number, arg1: number[]): Internal.DoubleBuffer;
        put(arg0: number, arg1: Internal.DoubleBuffer, arg2: number, arg3: number): Internal.DoubleBuffer;
        put(arg0: number[]): Internal.DoubleBuffer;
        put(arg0: Internal.DoubleBuffer): Internal.DoubleBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.DoubleBuffer;
        put(arg0: number): Internal.DoubleBuffer;
        put(arg0: number, arg1: number): Internal.DoubleBuffer;
        static allocate(arg0: number): Internal.DoubleBuffer;
        rewind(): Internal.DoubleBuffer;
        slice(): Internal.DoubleBuffer;
        slice(arg0: number, arg1: number): Internal.DoubleBuffer;
        array(): number[];
        mismatch(arg0: Internal.DoubleBuffer): number;
        get(arg0: number, arg1: number[]): Internal.DoubleBuffer;
        get(arg0: number): number;
        get(arg0: number[], arg1: number, arg2: number): Internal.DoubleBuffer;
        get(arg0: number[]): Internal.DoubleBuffer;
        get(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.DoubleBuffer;
        get(): number;
        limit(arg0: number): Internal.DoubleBuffer;
        reset(): Internal.DoubleBuffer;
        position(arg0: number): Internal.DoubleBuffer;
        flip(): Internal.DoubleBuffer;
        static wrap(arg0: number[], arg1: number, arg2: number): Internal.DoubleBuffer;
        static wrap(arg0: number[]): Internal.DoubleBuffer;
        mark(): Internal.DoubleBuffer;
        order(): Internal.ByteOrder;
    }
    type DoubleBuffer_ = DoubleBuffer;
    interface DoubleToLongFunction {
        applyAsLong(arg0: number): number;
        (arg0: number): number;
    }
    type DoubleToLongFunction_ = ((arg0: number)=>number) | DoubleToLongFunction;
    class ModelRegistryEvent extends net.minecraftforge.eventbus.api.Event implements Internal.IModBusEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ModelRegistryEvent_ = ModelRegistryEvent;
    interface Tags$IOptionalNamedTag <T> extends Internal.ITag$INamedTag<T> {
        isDefaulted(): boolean;
        (): boolean;
    }
    type Tags$IOptionalNamedTag_<T> = (()=>boolean) | Tags$IOptionalNamedTag<T>;
    interface MapDecoder <A> extends Internal.Keyable {
        flatMap<B_>(arg0: Internal.Function_<A, Internal.DataResult_<B_>>): Internal.MapDecoder<B_>;
        compressedDecode<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<A>;
        decoder(): Internal.Decoder<A>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.MapDecoder<A>;
        decode<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.MapLike<T_>): Internal.DataResult<A>;
        map<B_>(arg0: Internal.Function_<A, B_>): Internal.MapDecoder<B_>;
        compressor<T_>(arg0: Internal.DynamicOps<T_>): Internal.KeyCompressor<T_>;
        ap<E_>(arg0: Internal.MapDecoder<Internal.Function<A, E_>>): Internal.MapDecoder<E_>;
    }
    type MapDecoder_<A> = MapDecoder<A>;
    class LootBuilder extends Document.Object implements Internal.FunctionContainer, Internal.ConditionContainer {
        enchantWithLevels(levels: Internal.IRandomRange, treasure: boolean): Internal.FunctionContainer;
        nbt(tag: Internal.CompoundNBT_): Internal.FunctionContainer;
        damage(damage: Internal.IRandomRange): Internal.FunctionContainer;
        clearFunctions(): void;
        killedByPlayer(): Internal.ConditionContainer;
        survivesExplosion(): Internal.ConditionContainer;
        randomChance(chance: number): Internal.ConditionContainer;
        addFunction(o: Internal.JsonObject): Internal.LootBuilder;
        addFunction(arg0: Internal.JsonObject): Internal.FunctionContainer;
        count(count: Internal.IRandomRange): Internal.FunctionContainer;
        pool(p: Internal.Consumer_<Internal.LootBuilderPool_>): void;
        addConditionalFunction(func: Internal.Consumer_<Internal.ConditionalFunction_>): Internal.FunctionContainer;
        addCondition(arg0: Internal.JsonObject): Internal.ConditionContainer;
        addCondition(o: Internal.JsonObject): Internal.LootBuilder;
        lootingEnchant(count: Internal.IRandomRange, limit: number): Internal.FunctionContainer;
        lootTable(table: ResourceLocation_, seed: number): Internal.FunctionContainer;
        toJson(): Internal.JsonObject;
        entityScores(entity: Internal.LootContext$EntityTarget_, scores: Internal.Map_<string, any>): Internal.ConditionContainer;
        copyName(source: Internal.CopyName$Source_): Internal.FunctionContainer;
        addPool(p: Internal.Consumer_<Internal.LootBuilderPool_>): void;
        clearPools(): void;
        name(name: Internal.Text_, entity: Internal.LootContext$EntityTarget_): Internal.FunctionContainer;
        name(name: Internal.Text_): Internal.FunctionContainer;
        randomChanceWithLooting(chance: number, multiplier: number): Internal.ConditionContainer;
        furnaceSmelt(): Internal.FunctionContainer;
        enchantRandomly(enchantments: ResourceLocation[]): Internal.FunctionContainer;
        entityProperties(entity: Internal.LootContext$EntityTarget_, properties: Internal.JsonObject): Internal.ConditionContainer;
        clearConditions(): void;
        functions: Internal.JsonArray;
        pools: Internal.JsonArray;
        type: string;
        conditions: Internal.JsonArray;
        customId: ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(prev: Internal.JsonElement);
    }
    type LootBuilder_ = LootBuilder;
    class LegacySingleJigsawPiece extends Internal.SingleJigsawPiece implements Internal.SingleJigsawAccess {
        static construct_$md$e571c7$0(arg0: Internal.Either<any, any>, arg1: java_.util.function_.Supplier_<any>, arg2: Internal.JigsawPattern$PlacementBehaviour_): Internal.LegacySingleJigsawPiece;
        static readonly field_236832_a_: Internal.Codec<Internal.LegacySingleJigsawPiece>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Either<ResourceLocation, Internal.Template>, arg1: java_.util.function_.Supplier<Internal.StructureProcessorList>, arg2: Internal.JigsawPattern$PlacementBehaviour);
    }
    type LegacySingleJigsawPiece_ = LegacySingleJigsawPiece;
    interface IComponentHandler <T> extends Internal.IMachineComponent {
        getComponents(): Internal.List<T>;
        getComponentForID(arg0: string): Internal.Optional<T>;
    }
    type IComponentHandler_<T> = IComponentHandler<T>;
    class FMLModIdMappingEvent$ModRemapping extends Document.Object {
        readonly registry: ResourceLocation;
        readonly newId: number;
        readonly oldId: number;
        readonly key: ResourceLocation;
    }
    type FMLModIdMappingEvent$ModRemapping_ = FMLModIdMappingEvent$ModRemapping;
    interface Callable {
        call(arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Scriptable, arg3: any[]): any;
        (arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Scriptable, arg3: any[]): any;
    }
    type Callable_ = ((arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Scriptable, arg3: any[])=>any) | Callable;
    interface WithAttachedData {
        getData(): Internal.AttachedData;
        (): Internal.AttachedData;
    }
    type WithAttachedData_ = (()=>Internal.AttachedData) | WithAttachedData;
    class JeiEvent extends net.minecraftforge.eventbus.api.Event {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type JeiEvent_ = JeiEvent;
    interface TeamPropertyType$FromNet <Y> {
        apply(arg0: ResourceLocation_, arg1: Internal.PacketBuffer): Internal.TeamProperty<Y>;
        (arg0: ResourceLocation, arg1: Internal.PacketBuffer): Internal.TeamProperty<Y>;
    }
    type TeamPropertyType$FromNet_<Y> = ((arg0: ResourceLocation, arg1: Internal.PacketBuffer)=>Internal.TeamProperty<Y>) | TeamPropertyType$FromNet<Y>;
    class ParticleEffectAmbience extends Document.Object {
        func_235047_a_(arg0: Internal.Random): boolean;
        func_235044_a_(): Internal.IParticleData;
        static readonly field_235041_a_: Internal.Codec<Internal.ParticleEffectAmbience>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IParticleData, arg1: number);
    }
    type ParticleEffectAmbience_ = ParticleEffectAmbience;
    interface ChunkVertexType extends Internal.BlittableVertexType<Internal.ModelVertexSink>, Internal.CustomVertexType<Internal.ModelVertexSink, Internal.ChunkMeshAttribute> {
        getTextureScale(): number;
        getModelScale(): number;
    }
    type ChunkVertexType_ = ChunkVertexType;
    class MenuBar extends Internal.MenuComponent implements Internal.MenuContainer, Internal.Accessible {
        add(arg0: Internal.Menu): Internal.Menu;
        getHelpMenu(): Internal.Menu;
        addNotify(): void;
        deleteShortcut(arg0: Internal.MenuShortcut): void;
        getMenu(arg0: number): Internal.Menu;
        shortcuts(): Internal.Enumeration<Internal.MenuShortcut>;
        getMenuCount(): number;
        countMenus(): number;
        setHelpMenu(arg0: Internal.Menu): void;
        remove(arg0: Internal.MenuComponent): void;
        remove(arg0: number): void;
        getShortcutMenuItem(arg0: Internal.MenuShortcut): Internal.MenuItem;
        get menuCount(): number;
        get helpMenu(): Internal.Menu;
        set helpMenu(arg0: Internal.Menu);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MenuBar_ = MenuBar;
    interface PrivilegedAction <T> {
        run(): T;
        (): T;
    }
    type PrivilegedAction_<T> = (()=>T) | PrivilegedAction<T>;
    abstract class AbstractInt2IntMap extends Internal.AbstractInt2IntFunction implements Internal.Int2IntMap, Internal.Serializable {
        getOrDefault(arg0: any, arg1: any): any;
        getOrDefault(arg0: any, arg1: number): number;
        getOrDefault(arg0: number, arg1: number): number;
        computeIfAbsent(arg0: any, arg1: Internal.Function_<any,any>): any;
        computeIfAbsent(arg0: number, arg1: Internal.Function_<number, number>): number;
        computeIfAbsent(arg0: number, arg1: Internal.IntUnaryOperator_): number;
        values(): Internal.IntCollection;
        values(): Internal.Collection<any>;
        replace(arg0: number, arg1: number): number;
        replace(arg0: number, arg1: number, arg2: number): boolean;
        replace(arg0: number, arg1: number): number;
        replace(arg0: number, arg1: number, arg2: number): boolean;
        replace(arg0: any, arg1: any): any;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        computeIfAbsentPartial(arg0: number, arg1: Internal.Int2IntFunction_): number;
        replaceAll(arg0: Internal.BiFunction_<number, number, number>): void;
        andThen<V_>(arg0: Internal.Function_<number, V_>): Internal.Function<number, V_>;
        andThen(arg0: Internal.IntUnaryOperator_): Internal.IntUnaryOperator;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: number): number;
        put(arg0: number, arg1: number): number;
        remove(arg0: any): number;
        remove(arg0: any): any;
        remove(arg0: number): number;
        remove(arg0: any, arg1: any): boolean;
        remove(arg0: number, arg1: number): boolean;
        containsValue(arg0: number): boolean;
        containsValue(arg0: any): boolean;
        int2IntEntrySet(): Internal.ObjectSet<Internal.Int2IntMap$Entry>;
        compute(arg0: number, arg1: Internal.BiFunction_<number, number, number>): number;
        compute(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compute(arg0: number, arg1: Internal.BiFunction_<number, number, number>): number;
        merge(arg0: number, arg1: number, arg2: Internal.BiFunction_<number, number, number>): number;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        merge(arg0: number, arg1: number, arg2: Internal.BiFunction_<number, number, number>): number;
        get(arg0: any): number;
        get(arg0: any): any;
        putAll(arg0: Internal.Map_<number, number>): void;
        keySet(): Internal.IntSet;
        keySet(): Internal.Set<any>;
        applyAsInt(arg0: number): number;
        computeIfAbsentNullable(arg0: number, arg1: Internal.IntFunction_<number>): number;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<number, number>>;
        entrySet(): Internal.Set<any>;
        apply(arg0: number): number;
        forEach(arg0: Internal.BiConsumer_<number, number>): void;
        containsKey(arg0: any): boolean;
        clear(): void;
        isEmpty(): boolean;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, number, number>): number;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, number, number>): number;
        computeIfPresent(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compose<V_>(arg0: Internal.Function_<V_, number>): Internal.Function<V_, number>;
        compose(arg0: Internal.IntUnaryOperator_): Internal.IntUnaryOperator;
        putIfAbsent(arg0: number, arg1: number): number;
        putIfAbsent(arg0: number, arg1: number): number;
        putIfAbsent(arg0: any, arg1: any): any;
        get empty(): boolean;
    }
    type AbstractInt2IntMap_ = AbstractInt2IntMap;
    class ChunkRenderBounds extends Document.Object {
        readonly z1: number;
        readonly y1: number;
        readonly z2: number;
        readonly x1: number;
        readonly y2: number;
        static readonly ALWAYS_FALSE: Internal.ChunkRenderBounds;
        readonly x2: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number);
        constructor(origin: Internal.SectionPos);
    }
    type ChunkRenderBounds_ = ChunkRenderBounds;
    interface ClipboardOwner {
        lostOwnership(arg0: Internal.Clipboard, arg1: Internal.Transferable): void;
        (arg0: Internal.Clipboard, arg1: Internal.Transferable): void;
    }
    type ClipboardOwner_ = ((arg0: Internal.Clipboard, arg1: Internal.Transferable)=>void) | ClipboardOwner;
    abstract class Fluid extends Internal.ForgeRegistryEntry<Internal.Fluid> implements Internal.IForgeFluid, Internal.FluidInvokerMixin, Internal.BlockColorSettings<any> {
        getAttributes(): Internal.FluidAttributes;
        getExplosionResistance(arg0: Internal.FluidState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): number;
        func_204524_b(): Internal.Item;
        useSmoothColorBlending(view: Internal.IBlockDisplayReader, state: Internal.FluidState, pos: BlockPos): boolean;
        useSmoothColorBlending(arg0: Internal.IBlockDisplayReader, arg1: any, arg2: BlockPos): boolean;
        func_223407_a(arg0: Internal.FluidState): number;
        setRegistryName(arg0: ResourceLocation_): any;
        getTags(): Internal.Set<ResourceLocation>;
        isEntityInside(arg0: Internal.FluidState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity, arg4: number, arg5: Internal.Tag<Internal.Fluid>, arg6: boolean): boolean;
        isAABBInsideMaterial(arg0: Internal.FluidState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.AxisAlignedBB, arg4: Internal.Material): boolean;
        func_205569_a(arg0: Internal.IWorldReader): number;
        isAABBInsideLiquid(arg0: Internal.FluidState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.AxisAlignedBB): boolean;
        func_207182_e(): Internal.StateContainer<Internal.Fluid, Internal.FluidState>;
        func_207185_a(arg0: Internal.ITag<Internal.Fluid>): boolean;
        func_207193_c(arg0: Internal.FluidState): boolean;
        func_207192_d(arg0: Internal.FluidState): number;
        callAnimateTick(arg0: Internal.World, arg1: BlockPos, arg2: Internal.FluidState, arg3: Internal.Random): void;
        func_207187_a(arg0: Internal.Fluid_): boolean;
        getFluid(): Internal.Fluid;
        func_215664_b(arg0: Internal.FluidState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        func_207188_f(): Internal.FluidState;
        func_215662_a(arg0: Internal.FluidState, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        static readonly field_207201_d: Internal.ObjectIntIdentityMap<Internal.FluidState>;
        get attributes(): Internal.FluidAttributes;
        get fluid(): Internal.Fluid;
        get tags(): Internal.Set<ResourceLocation>;
        set registryName(arg0: ResourceLocation_);
    }
    type Fluid_ = Registry.minecraft.fluid | Fluid;
    class SilverfishEntity extends Internal.MonsterEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        static func_223331_b(arg0: Internal.EntityType_<Internal.SilverfishEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        static func_234301_m_(): Internal.AttributeModifierMap$MutableAttribute;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.SilverfishEntity>, arg1: Internal.World);
    }
    type SilverfishEntity_ = SilverfishEntity;
    class PlaySoundSourceEvent extends Internal.SoundEvent$SoundSourceEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SoundEngine, arg1: Internal.ISound, arg2: Internal.SoundSource);
        constructor();
    }
    type PlaySoundSourceEvent_ = PlaySoundSourceEvent;
    interface Lock {
        lockInterruptibly(): void;
        unlock(): void;
        newCondition(): Internal.Condition;
        lock(): void;
        tryLock(): boolean;
        tryLock(arg0: number, arg1: Internal.TimeUnit_): boolean;
    }
    type Lock_ = Lock;
    class GuiScreenEvent$InitGuiEvent extends Internal.GuiScreenEvent {
        getWidgetList(): Internal.List<net.minecraft.client.gui.widget.Widget>;
        addWidget(arg0: net.minecraft.client.gui.widget.Widget): void;
        removeWidget(arg0: net.minecraft.client.gui.widget.Widget): void;
        get widgetList(): Internal.List<net.minecraft.client.gui.widget.Widget>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: Internal.List<net.minecraft.client.gui.widget.Widget>, arg2: Internal.Consumer<net.minecraft.client.gui.widget.Widget>, arg3: Internal.Consumer<net.minecraft.client.gui.widget.Widget>);
    }
    type GuiScreenEvent$InitGuiEvent_ = GuiScreenEvent$InitGuiEvent;
    class AdvancementList extends Document.Object {
        func_192087_a(): void;
        func_195651_c(): Internal.Collection<Internal.Advancement>;
        func_192086_a(arg0: Internal.AdvancementList$IListener): void;
        func_192085_a(arg0: Internal.Set<ResourceLocation>): void;
        func_192088_b(): Internal.Iterable<Internal.Advancement>;
        func_192084_a(arg0: ResourceLocation_): Internal.Advancement;
        func_192083_a(arg0: Internal.Map_<ResourceLocation_, Internal.Advancement$Builder_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AdvancementList_ = AdvancementList;
    interface AccessibleSelection {
        selectAllAccessibleSelection(): void;
        getAccessibleSelectionCount(): number;
        clearAccessibleSelection(): void;
        removeAccessibleSelection(arg0: number): void;
        isAccessibleChildSelected(arg0: number): boolean;
        getAccessibleSelection(arg0: number): Internal.Accessible;
        addAccessibleSelection(arg0: number): void;
    }
    type AccessibleSelection_ = AccessibleSelection;
    class VariantBlockStateGenerator$Variant extends Document.Object {
        toJson(): Internal.JsonElement;
        model(s: string): Internal.VariantBlockStateGenerator$Model;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type VariantBlockStateGenerator$Variant_ = VariantBlockStateGenerator$Variant;
    interface MatchableTile <T> {
        postPlacement(arg0: T, arg1: Internal.IBlockReader, arg2: BlockPos): void;
        writeDisplayData(arg0: T, arg1: number, arg2: Internal.CompoundNBT_): void;
        matches(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: T): boolean;
    }
    type MatchableTile_<T> = MatchableTile<T>;
    interface IForgeContainerType <T> {
        create(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PacketBuffer): T;
        (arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PacketBuffer): T;
    }
    type IForgeContainerType_<T> = ((arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PacketBuffer)=>T) | IForgeContainerType<T>;
    class ChunkWatchEvent$Watch extends Internal.ChunkWatchEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ServerPlayerEntity, arg1: Internal.ChunkPos, arg2: Internal.ServerWorld);
        constructor();
    }
    type ChunkWatchEvent$Watch_ = ChunkWatchEvent$Watch;
    class Either$Mu <R> extends Document.Object implements Internal.K1 {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Either$Mu_<R> = Either$Mu<R>;
    class MaxManaCalcEvent extends Internal.LivingEvent {
        setMax(arg0: number): void;
        getMax(): number;
        get max(): number;
        set max(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: number);
    }
    type MaxManaCalcEvent_ = MaxManaCalcEvent;
    abstract class EmbeddiumEvent extends net.minecraftforge.eventbus.api.Event {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EmbeddiumEvent_ = EmbeddiumEvent;
    abstract class UnmodifiableIterator <E> extends Document.Object implements Internal.Iterator<E> {
        next(): E;
        hasNext(): boolean;
        forEachRemaining(arg0: Internal.Consumer_<E>): void;
        remove(): void;
    }
    type UnmodifiableIterator_<E> = UnmodifiableIterator<E>;
    class DroneConstructingEvent extends net.minecraftforge.eventbus.api.Event {
        readonly drone: Internal.IDrone;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IDrone);
        constructor();
    }
    type DroneConstructingEvent_ = DroneConstructingEvent;
    abstract class AbstractGroupFishEntity extends Internal.AbstractFishEntity {
        shouldRiderSit(): boolean;
        func_212810_a(arg0: Internal.Stream<Internal.AbstractGroupFishEntity>): void;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_203704_dv(): number;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_212803_a(arg0: Internal.AbstractGroupFishEntity): Internal.AbstractGroupFishEntity;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        func_212812_dE(): boolean;
        canRiderInteract(): boolean;
        func_212811_dD(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_212808_dC(): void;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_212802_dB(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_212809_dF(): boolean;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_212805_dG(): void;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.AbstractGroupFishEntity>, arg1: Internal.World);
    }
    type AbstractGroupFishEntity_ = AbstractGroupFishEntity;
    interface ChannelHandler {
        exceptionCaught(arg0: Internal.ChannelHandlerContext, arg1: Internal.Throwable): void;
        handlerAdded(arg0: Internal.ChannelHandlerContext): void;
        handlerRemoved(arg0: Internal.ChannelHandlerContext): void;
    }
    type ChannelHandler_ = ChannelHandler;
    abstract class PartEntity <T> extends Internal.Entity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getParent(): Internal.CompoundNBT;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get parent(): Internal.CompoundNBT;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: T);
    }
    type PartEntity_<T> = PartEntity<T>;
    interface ConstProperties {
        defineConst(arg0: string, arg1: Internal.Scriptable): void;
        isConst(arg0: string): boolean;
        putConst(arg0: string, arg1: Internal.Scriptable, arg2: any): void;
    }
    type ConstProperties_ = ConstProperties;
    class SWorldBorderPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179788_a(arg0: Internal.WorldBorder): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.WorldBorder, arg1: any);
    }
    type SWorldBorderPacket_ = SWorldBorderPacket;
    class ItemTooltipEvent extends Internal.PlayerEvent {
        getToolTip(): Internal.List<Internal.ITextComponent>;
        getItemStack(): Internal.ItemStack;
        getFlags(): Internal.ITooltipFlag;
        get itemStack(): Internal.ItemStack;
        get toolTip(): Internal.List<Internal.ITextComponent>;
        get flags(): Internal.ITooltipFlag;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.List<Internal.ITextComponent>, arg3: Internal.ITooltipFlag);
    }
    type ItemTooltipEvent_ = ItemTooltipEvent;
    class EntityDataManager extends Document.Object {
        func_187221_b(): Internal.List<Internal.EntityDataManager$DataEntry<any>>;
        func_187231_c(): Internal.List<Internal.EntityDataManager$DataEntry<any>>;
        func_187228_d(): boolean;
        func_187218_a(entries: Internal.List<any>): void;
        static func_187229_a(arg0: Internal.List<Internal.EntityDataManager$DataEntry<any>>, arg1: Internal.PacketBuffer): void;
        static func_187215_b(arg0: Internal.PacketBuffer): Internal.List<Internal.EntityDataManager$DataEntry<any>>;
        func_187227_b<T_>(arg0: Internal.DataParameter<T_>, arg1: T_): void;
        static func_187226_a<T_>(arg0: Internal.Class<Internal.Entity>, arg1: Internal.IDataSerializer<T_>): Internal.DataParameter<T_>;
        func_187214_a<T_>(arg0: Internal.DataParameter<T_>, arg1: T_): void;
        func_187225_a<T_>(arg0: Internal.DataParameter<T_>): T_;
        func_187230_e(): void;
        func_187223_a(): boolean;
        readonly field_187234_c: Internal.Map<number, Internal.EntityDataManager$DataEntry<any>>;
        readonly field_187235_d: Internal.ReadWriteLock;
        static readonly field_187232_a: {};
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Entity);
    }
    type EntityDataManager_ = EntityDataManager;
    class BannerPattern extends Internal.Enum<Internal.BannerPattern> implements Internal.IExtensibleEnum {
        func_190993_b(): string;
        static func_190994_a(arg0: string): Internal.BannerPattern;
        init(): void;
        func_226957_a_(arg0: boolean): ResourceLocation;
        func_190997_a(): string;
        static valueOf(arg0: string): Internal.BannerPattern;
        static values(): Internal.BannerPattern[];
        static create(arg0: string, arg1: string, arg2: string, arg3: boolean): Internal.BannerPattern;
        static create(arg0: string, arg1: string, arg2: string): Internal.BannerPattern;
        static readonly STRIPE_BOTTOM: Internal.BannerPattern;
        static readonly GLOBE: Internal.BannerPattern;
        static readonly SQUARE_TOP_RIGHT: Internal.BannerPattern;
        static readonly STRIPE_MIDDLE: Internal.BannerPattern;
        static readonly TRIANGLE_TOP: Internal.BannerPattern;
        static readonly HALF_HORIZONTAL_MIRROR: Internal.BannerPattern;
        static readonly STRIPE_TOP: Internal.BannerPattern;
        static readonly DIAGONAL_RIGHT_MIRROR: Internal.BannerPattern;
        static readonly STRIPE_CENTER: Internal.BannerPattern;
        static readonly STRAIGHT_CROSS: Internal.BannerPattern;
        static readonly SQUARE_BOTTOM_LEFT: Internal.BannerPattern;
        static readonly SKULL: Internal.BannerPattern;
        static readonly RHOMBUS_MIDDLE: Internal.BannerPattern;
        static readonly CIRCLE_MIDDLE: Internal.BannerPattern;
        static readonly HALF_HORIZONTAL: Internal.BannerPattern;
        static readonly GRADIENT: Internal.BannerPattern;
        static readonly BASE: Internal.BannerPattern;
        static readonly HALF_VERTICAL_MIRROR: Internal.BannerPattern;
        static readonly field_222481_P: 34;
        static readonly STRIPE_RIGHT: Internal.BannerPattern;
        static readonly field_222480_O: 41;
        static readonly CREEPER: Internal.BannerPattern;
        static readonly STRIPE_LEFT: Internal.BannerPattern;
        static readonly BRICKS: Internal.BannerPattern;
        static readonly TRIANGLES_BOTTOM: Internal.BannerPattern;
        static readonly SQUARE_TOP_LEFT: Internal.BannerPattern;
        static readonly FLOWER: Internal.BannerPattern;
        static readonly STRIPE_SMALL: Internal.BannerPattern;
        static readonly TRIANGLE_BOTTOM: Internal.BannerPattern;
        static readonly CURLY_BORDER: Internal.BannerPattern;
        static readonly TRIANGLES_TOP: Internal.BannerPattern;
        static readonly DIAGONAL_RIGHT: Internal.BannerPattern;
        static readonly STRIPE_DOWNLEFT: Internal.BannerPattern;
        static readonly DIAGONAL_LEFT_MIRROR: Internal.BannerPattern;
        static readonly STRIPE_DOWNRIGHT: Internal.BannerPattern;
        static readonly PIGLIN: Internal.BannerPattern;
        static readonly GRADIENT_UP: Internal.BannerPattern;
        static readonly DIAGONAL_LEFT: Internal.BannerPattern;
        static readonly BORDER: Internal.BannerPattern;
        static readonly MOJANG: Internal.BannerPattern;
        static readonly HALF_VERTICAL: Internal.BannerPattern;
        static readonly CROSS: Internal.BannerPattern;
        static readonly field_235646_Q_: 6;
        static readonly SQUARE_BOTTOM_RIGHT: Internal.BannerPattern;
    }
    type BannerPattern_ = "base" | "square_bottom_left" | "square_bottom_right" | "square_top_left" | "square_top_right" | "stripe_bottom" | "stripe_top" | "stripe_left" | "stripe_right" | "stripe_center" | "stripe_middle" | "stripe_downright" | "stripe_downleft" | "stripe_small" | "cross" | "straight_cross" | "triangle_bottom" | "triangle_top" | "triangles_bottom" | "triangles_top" | "diagonal_left" | "diagonal_right" | "diagonal_left_mirror" | "diagonal_right_mirror" | "circle_middle" | "rhombus_middle" | "half_vertical" | "half_horizontal" | "half_vertical_mirror" | "half_horizontal_mirror" | "border" | "curly_border" | "gradient" | "gradient_up" | "bricks" | "globe" | "creeper" | "skull" | "flower" | "mojang" | "piglin" | "darkutils_vector_plate" | "bear" | "australia_0" | "australia_1" | "new_mexico" | "mca_chimpanzee" | "immersiveengineering_hammer" | "immersiveengineering_bevels" | "immersiveengineering_ornate" | "immersiveengineering_treated_wood" | "immersiveengineering_windmill" | "immersiveengineering_wolf_r" | "immersiveengineering_wolf_l" | "immersiveengineering_wolf" | "botania_flower" | "botania_lexicon" | "botania_logo" | "botania_sapling" | "botania_tiny_potato" | "botania_spark_dispersive" | "botania_spark_dominant" | "botania_spark_recessive" | "botania_spark_isolated" | "botania_fish" | "botania_axe" | "botania_hoe" | "botania_pickaxe" | "botania_shovel" | "botania_sword" | "cc_dino" | BannerPattern;
    interface StarLightLightingProvider {
        getLightEngine(): Internal.StarLightInterface;
        clientUpdateLight(arg0: Internal.LightType_, arg1: Internal.SectionPos, arg2: Internal.NibbleArray, arg3: boolean): void;
        clientRemoveLightData(arg0: Internal.ChunkPos): void;
        clientChunkLoad(arg0: Internal.ChunkPos, arg1: Internal.Chunk): void;
    }
    type StarLightLightingProvider_ = StarLightLightingProvider;
    abstract class ParrotElement$ParrotPose extends Document.Object {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ParrotElement$ParrotPose_ = ParrotElement$ParrotPose;
    class Gson extends Document.Object {
        getAdapter<T_>(arg0: com.google.gson.reflect.TypeToken<T_>): Internal.TypeAdapter<T_>;
        getAdapter<T_>(arg0: Internal.Class<T_>): Internal.TypeAdapter<T_>;
        serializeNulls(): boolean;
        toJson(arg0: any, arg1: Internal.Type, arg2: Internal.JsonWriter): void;
        toJson(arg0: any, arg1: Internal.Type, arg2: Internal.Appendable): void;
        toJson(arg0: any, arg1: Internal.Appendable): void;
        toJson(arg0: Internal.JsonElement, arg1: Internal.JsonWriter): void;
        toJson(arg0: any, arg1: Internal.Type): string;
        toJson(arg0: Internal.JsonElement): string;
        toJson(arg0: Internal.JsonElement, arg1: Internal.Appendable): void;
        toJson(arg0: any): string;
        excluder(): Internal.Excluder;
        fieldNamingStrategy(): Internal.FieldNamingStrategy;
        newJsonWriter(arg0: Internal.Writer): Internal.JsonWriter;
        toJsonTree(arg0: any): Internal.JsonElement;
        toJsonTree(arg0: any, arg1: Internal.Type): Internal.JsonElement;
        fromJson<T_>(arg0: Internal.JsonElement, arg1: Internal.Class<T_>): T_;
        fromJson<T_>(arg0: Internal.JsonElement, arg1: Internal.Type): T_;
        fromJson<T_>(arg0: string, arg1: Internal.Type): T_;
        fromJson<T_>(arg0: string, arg1: Internal.Class<T_>): T_;
        fromJson<T_>(arg0: Internal.JsonReader, arg1: Internal.Type): T_;
        fromJson<T_>(arg0: Internal.Reader, arg1: Internal.Type): T_;
        fromJson<T_>(arg0: Internal.Reader, arg1: Internal.Class<T_>): T_;
        getDelegateAdapter<T_>(arg0: Internal.TypeAdapterFactory_, arg1: com.google.gson.reflect.TypeToken<T_>): Internal.TypeAdapter<T_>;
        htmlSafe(): boolean;
        newJsonReader(arg0: Internal.Reader): Internal.JsonReader;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Gson_ = Gson;
    interface CommandExceptionType {
    }
    type CommandExceptionType_ = CommandExceptionType;
    interface ChunkHolder$IPlayerProvider {
        func_219097_a(arg0: Internal.ChunkPos, arg1: boolean): Internal.Stream<Internal.ServerPlayerEntity>;
        (arg0: Internal.ChunkPos, arg1: boolean): Internal.Stream<Internal.ServerPlayerEntity>;
    }
    type ChunkHolder$IPlayerProvider_ = ((arg0: Internal.ChunkPos, arg1: boolean)=>Internal.Stream<Internal.ServerPlayerEntity>) | ChunkHolder$IPlayerProvider;
    abstract class GuiScreenEvent$MouseDragEvent extends Internal.GuiScreenEvent$MouseInputEvent {
        getMouseButton(): number;
        getDragX(): number;
        getDragY(): number;
        get dragX(): number;
        get dragY(): number;
        get mouseButton(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number);
    }
    type GuiScreenEvent$MouseDragEvent_ = GuiScreenEvent$MouseDragEvent;
    class SEntityTeleportPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149450_g(): number;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149451_c(): number;
        func_149447_h(): number;
        func_179697_g(): boolean;
        func_186983_c(): number;
        func_186981_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_186982_b(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity);
    }
    type SEntityTeleportPacket_ = SEntityTeleportPacket;
    class ModelLoader extends Internal.ModelBakery {
        isLoading(): boolean;
        static addSpecialModel(arg0: ResourceLocation_): void;
        static defaultTextureGetter(): Internal.Function<Internal.RenderMaterial, Internal.TextureAtlasSprite>;
        static instance(): Internal.ModelLoader;
        static getInventoryVariant(arg0: string): Internal.ModelResourceLocation;
        getModelOrLogError(arg0: ResourceLocation_, arg1: string): Internal.IUnbakedModel;
        onPostBakeEvent(arg0: Internal.Map_<ResourceLocation_, Internal.IBakedModel_>): void;
        static defaultModelGetter(): Internal.Function<ResourceLocation, Internal.IUnbakedModel>;
        getModelOrMissing(arg0: ResourceLocation_): Internal.IUnbakedModel;
        get loading(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IResourceManager, arg1: Internal.BlockColors, arg2: Internal.IProfiler, arg3: number);
    }
    type ModelLoader_ = ModelLoader;
    class RootCommandNode <S> extends Internal.CommandNode<S> {
        createBuilder(): Internal.ArgumentBuilder<S, any>;
        isValidInput(arg0: string): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RootCommandNode_<S> = RootCommandNode<S>;
    interface IMob {
    }
    type IMob_ = IMob;
    class RayTraceContext extends Document.Object {
        func_222253_b(): Vec3;
        func_222250_a(): Vec3;
        func_222251_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        func_222252_a(arg0: Internal.FluidState, arg1: Internal.IBlockReader, arg2: BlockPos): Internal.VoxelShape;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Vec3, arg1: Vec3, arg2: any, arg3: Internal.RayTraceContext$FluidMode, arg4: Internal.Entity);
    }
    type RayTraceContext_ = RayTraceContext;
    class AABBOutline extends Internal.Outline {
        renderBB(arg0: Internal.MatrixStack, arg1: Internal.SuperRenderTypeBuffer, arg2: Internal.AxisAlignedBB): void;
        setBounds(arg0: Internal.AxisAlignedBB): void;
        set bounds(arg0: Internal.AxisAlignedBB);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.AxisAlignedBB);
    }
    type AABBOutline_ = AABBOutline;
    interface EventExecutor extends Internal.EventExecutorGroup {
        inEventLoop(arg0: Internal.Thread): boolean;
        inEventLoop(): boolean;
        next(): Internal.EventExecutor;
        parent(): Internal.EventExecutorGroup;
        newProgressivePromise<V_>(): Internal.ProgressivePromise<V_>;
        newSucceededFuture<V_>(arg0: V_): Internal.Future<V_>;
        newFailedFuture<V_>(arg0: Internal.Throwable): Internal.Future<V_>;
        newPromise<V_>(): Internal.Promise<V_>;
    }
    type EventExecutor_ = EventExecutor;
    interface ChronoZonedDateTime <D> extends Internal.Temporal, Internal.Comparable<Internal.ChronoZonedDateTime<any>> {
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoZonedDateTime<D>;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.ChronoZonedDateTime<D>;
        isEqual(arg0: Internal.ChronoZonedDateTime<any>): boolean;
        getOffset(): Internal.ZoneOffset;
        toLocalTime(): Internal.LocalTime;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        compareTo(arg0: Internal.ChronoZonedDateTime<any>): number;
        compareTo(arg0: any): number;
        withLaterOffsetAtOverlap(): Internal.ChronoZonedDateTime<D>;
        hashCode(): number;
        get(arg0: Internal.TemporalField): number;
        withEarlierOffsetAtOverlap(): Internal.ChronoZonedDateTime<D>;
        withZoneSameLocal(arg0: Internal.ZoneId): Internal.ChronoZonedDateTime<D>;
        getChronology(): Internal.Chronology;
        withZoneSameInstant(arg0: Internal.ZoneId): Internal.ChronoZonedDateTime<D>;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        format(arg0: Internal.DateTimeFormatter): string;
        getZone(): Internal.ZoneId;
        isSupported(arg0: Internal.TemporalField): boolean;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        toInstant(): Internal.Instant;
        isBefore(arg0: Internal.ChronoZonedDateTime<any>): boolean;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoZonedDateTime<D>;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoZonedDateTime<D>;
        getLong(arg0: Internal.TemporalField): number;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ChronoZonedDateTime<D>;
        with(arg0: Internal.TemporalAdjuster_): Internal.ChronoZonedDateTime<D>;
        with(arg0: Internal.TemporalAdjuster_): Internal.Temporal;
        toLocalDate(): D;
        toEpochSecond(): number;
        toLocalDateTime(): Internal.ChronoLocalDateTime<D>;
        equals(arg0: any): boolean;
        toString(): string;
        isAfter(arg0: Internal.ChronoZonedDateTime<any>): boolean;
    }
    type ChronoZonedDateTime_<D> = ChronoZonedDateTime<D>;
    interface CompletionStage <T> {
        exceptionallyAsync(arg0: Internal.Function_<Internal.Throwable_, T>): Internal.CompletionStage<T>;
        exceptionallyAsync(arg0: Internal.Function_<Internal.Throwable_, T>, arg1: Internal.Executor_): Internal.CompletionStage<T>;
        thenRunAsync(arg0: Internal.Runnable_, arg1: Internal.Executor_): Internal.CompletionStage<void>;
        thenRunAsync(arg0: Internal.Runnable_): Internal.CompletionStage<void>;
        runAfterBothAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_): Internal.CompletionStage<void>;
        runAfterBothAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_, arg2: Internal.Executor_): Internal.CompletionStage<void>;
        applyToEitherAsync<U>(arg0: Internal.CompletionStage<T>, arg1: Internal.Function_<T, U>, arg2: Internal.Executor_): Internal.CompletionStage<U>;
        applyToEitherAsync<U>(arg0: Internal.CompletionStage<T>, arg1: Internal.Function_<T, U>): Internal.CompletionStage<U>;
        acceptEitherAsync(arg0: Internal.CompletionStage<T>, arg1: Internal.Consumer_<T>): Internal.CompletionStage<void>;
        acceptEitherAsync(arg0: Internal.CompletionStage<T>, arg1: Internal.Consumer_<T>, arg2: Internal.Executor_): Internal.CompletionStage<void>;
        runAfterEitherAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_): Internal.CompletionStage<void>;
        runAfterEitherAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_, arg2: Internal.Executor_): Internal.CompletionStage<void>;
        acceptEither(arg0: Internal.CompletionStage<T>, arg1: Internal.Consumer_<T>): Internal.CompletionStage<void>;
        thenAcceptBoth<U>(arg0: Internal.CompletionStage<U>, arg1: Internal.BiConsumer_<T, U>): Internal.CompletionStage<void>;
        exceptionallyCompose(arg0: Internal.Function_<Internal.Throwable_, Internal.CompletionStage_<T>>): Internal.CompletionStage<T>;
        applyToEither<U>(arg0: Internal.CompletionStage<T>, arg1: Internal.Function_<T, U>): Internal.CompletionStage<U>;
        runAfterEither(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_): Internal.CompletionStage<void>;
        thenApply<U>(arg0: Internal.Function_<T, U>): Internal.CompletionStage<U>;
        thenComposeAsync<U>(arg0: Internal.Function_<T, Internal.CompletionStage_<U>>): Internal.CompletionStage<U>;
        thenComposeAsync<U>(arg0: Internal.Function_<T, Internal.CompletionStage_<U>>, arg1: Internal.Executor_): Internal.CompletionStage<U>;
        thenAccept(arg0: Internal.Consumer_<T>): Internal.CompletionStage<void>;
        thenRun(arg0: Internal.Runnable_): Internal.CompletionStage<void>;
        runAfterBoth(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_): Internal.CompletionStage<void>;
        exceptionally(arg0: Internal.Function_<Internal.Throwable_, T>): Internal.CompletionStage<T>;
        handleAsync<U>(arg0: Internal.BiFunction_<T, Internal.Throwable_, U>): Internal.CompletionStage<U>;
        handleAsync<U>(arg0: Internal.BiFunction_<T, Internal.Throwable_, U>, arg1: Internal.Executor_): Internal.CompletionStage<U>;
        handle<U>(arg0: Internal.BiFunction_<T, Internal.Throwable_, U>): Internal.CompletionStage<U>;
        thenCompose<U>(arg0: Internal.Function_<T, Internal.CompletionStage_<U>>): Internal.CompletionStage<U>;
        whenComplete(arg0: Internal.BiConsumer_<T, Internal.Throwable_>): Internal.CompletionStage<T>;
        thenCombineAsync<U, V>(arg0: Internal.CompletionStage<U>, arg1: Internal.BiFunction_<T, U, V>): Internal.CompletionStage<V>;
        thenCombineAsync<U, V>(arg0: Internal.CompletionStage<U>, arg1: Internal.BiFunction_<T, U, V>, arg2: Internal.Executor_): Internal.CompletionStage<V>;
        thenAcceptBothAsync<U>(arg0: Internal.CompletionStage<U>, arg1: Internal.BiConsumer_<T, U>, arg2: Internal.Executor_): Internal.CompletionStage<void>;
        thenAcceptBothAsync<U>(arg0: Internal.CompletionStage<U>, arg1: Internal.BiConsumer_<T, U>): Internal.CompletionStage<void>;
        exceptionallyComposeAsync(arg0: Internal.Function_<Internal.Throwable_, Internal.CompletionStage_<T>>, arg1: Internal.Executor_): Internal.CompletionStage<T>;
        exceptionallyComposeAsync(arg0: Internal.Function_<Internal.Throwable_, Internal.CompletionStage_<T>>): Internal.CompletionStage<T>;
        thenCombine<U, V>(arg0: Internal.CompletionStage<U>, arg1: Internal.BiFunction_<T, U, V>): Internal.CompletionStage<V>;
        whenCompleteAsync(arg0: Internal.BiConsumer_<T, Internal.Throwable_>): Internal.CompletionStage<T>;
        whenCompleteAsync(arg0: Internal.BiConsumer_<T, Internal.Throwable_>, arg1: Internal.Executor_): Internal.CompletionStage<T>;
        thenApplyAsync<U>(arg0: Internal.Function_<T, U>, arg1: Internal.Executor_): Internal.CompletionStage<U>;
        thenApplyAsync<U>(arg0: Internal.Function_<T, U>): Internal.CompletionStage<U>;
        thenAcceptAsync(arg0: Internal.Consumer_<T>): Internal.CompletionStage<void>;
        thenAcceptAsync(arg0: Internal.Consumer_<T>, arg1: Internal.Executor_): Internal.CompletionStage<void>;
        toCompletableFuture(): Internal.CompletableFuture<T>;
    }
    type CompletionStage_<T> = CompletionStage<T>;
    interface Predicate <T> {
        or(arg0: Internal.Predicate_<T>): Internal.Predicate<T>;
        test(arg0: T): boolean;
        and(arg0: Internal.Predicate_<T>): Internal.Predicate<T>;
        negate(): Internal.Predicate<T>;
        (arg0: T): boolean;
    }
    type Predicate_<T> = ((arg0: T)=>boolean) | Predicate<T>;
    interface Hash {
    }
    type Hash_ = Hash;
    interface Button$IPressable {
        onPress(arg0: net.minecraft.client.gui.widget.button.Button): void;
        (arg0: net.minecraft.client.gui.widget.button.Button): void;
    }
    type Button$IPressable_ = ((arg0: net.minecraft.client.gui.widget.button.Button)=>void) | Button$IPressable;
    abstract class AbstractIntSet extends Internal.AbstractIntCollection implements Internal.Cloneable, Internal.IntSet {
        iterator(): Internal.Iterator<any>;
        spliterator(): Internal.Spliterator<number>;
        stream(): Internal.Stream<number>;
        forEach(arg0: Internal.Consumer_<number>): void;
        forEach(arg0: Internal.IntConsumer_): void;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<number>;
        remove(arg0: number): boolean;
        removeIf(arg0: Internal.Predicate_<number>): boolean;
        removeIf(arg0: Internal.IntPredicate_): boolean;
    }
    type AbstractIntSet_ = AbstractIntSet;
    class OreFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236566_a_: Internal.Codec<Internal.OreFeatureConfig>;
        readonly field_202442_b: Internal.RuleTest;
        readonly field_202443_c: number;
        readonly field_202444_d: Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.RuleTest, arg1: Internal.BlockState, arg2: number);
    }
    type OreFeatureConfig_ = OreFeatureConfig;
    class ListenerList extends Document.Object {
        getListeners(arg0: number): Internal.IEventListener[];
        static clearBusID(arg0: number): void;
        unregister(arg0: number, arg1: Internal.IEventListener_): void;
        static unregisterAll(arg0: number, arg1: Internal.IEventListener_): void;
        register(arg0: number, arg1: Internal.EventPriority_, arg2: Internal.IEventListener_): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ListenerList);
    }
    type ListenerList_ = ListenerList;
    abstract class AbstractLong2ObjectMap <V> extends Internal.AbstractLong2ObjectFunction<V> implements Internal.Long2ObjectMap<V>, Internal.Serializable {
        long2ObjectEntrySet(): Internal.ObjectSet<Internal.Long2ObjectMap$Entry<V>>;
        getOrDefault(arg0: any, arg1: V): V;
        getOrDefault(arg0: number, arg1: V): V;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<number, V>>;
        entrySet(): Internal.Set<any>;
        apply(arg0: number): V;
        apply(arg0: number): V;
        forEach(arg0: Internal.BiConsumer_<number, V>): void;
        containsKey(arg0: any): boolean;
        computeIfAbsent(arg0: any, arg1: Internal.Function_<any,any>): any;
        computeIfAbsent(arg0: number, arg1: Internal.LongFunction_<V>): V;
        computeIfAbsent(arg0: number, arg1: Internal.Function_<number, V>): V;
        values(): Internal.ObjectCollection<V>;
        values(): Internal.Collection<any>;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        clear(): void;
        isEmpty(): boolean;
        computeIfAbsentPartial(arg0: number, arg1: Internal.Long2ObjectFunction_<V>): V;
        replaceAll(arg0: Internal.BiFunction_<number, V, V>): void;
        andThen<V_>(arg0: Internal.Function_<V, V_>): Internal.Function<number, V_>;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        put(arg0: number, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: number): V;
        remove(arg0: number, arg1: any): boolean;
        remove(arg0: any, arg1: any): boolean;
        containsValue(arg0: any): boolean;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        compute(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compose<V_>(arg0: Internal.Function_<V_, number>): Internal.Function<V_, V>;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        get(arg0: any): V;
        putAll(arg0: Internal.Map_<number, V>): void;
        putIfAbsent(arg0: number, arg1: V): V;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: number, arg1: V): V;
        keySet(): Internal.LongSet;
        keySet(): Internal.Set<any>;
        get empty(): boolean;
    }
    type AbstractLong2ObjectMap_<V> = AbstractLong2ObjectMap<V>;
    class BitSet extends Document.Object implements Internal.Cloneable, Internal.Serializable {
        nextClearBit(arg0: number): number;
        previousClearBit(arg0: number): number;
        or(arg0: Internal.BitSet): void;
        set(arg0: number, arg1: boolean): void;
        set(arg0: number): void;
        set(arg0: number, arg1: number): void;
        set(arg0: number, arg1: number, arg2: boolean): void;
        toLongArray(): number[];
        intersects(arg0: Internal.BitSet): boolean;
        static valueOf(arg0: number[]): Internal.BitSet;
        static valueOf(arg0: number[]): Internal.BitSet;
        static valueOf(arg0: Internal.LongBuffer): Internal.BitSet;
        static valueOf(arg0: Internal.ByteBuffer): Internal.BitSet;
        previousSetBit(arg0: number): number;
        isEmpty(): boolean;
        clear(arg0: number, arg1: number): void;
        clear(): void;
        clear(arg0: number): void;
        length(): number;
        nextSetBit(arg0: number): number;
        cardinality(): number;
        size(): number;
        stream(): Internal.IntStream;
        and(arg0: Internal.BitSet): void;
        toByteArray(): number[];
        get(arg0: number): boolean;
        get(arg0: number, arg1: number): Internal.BitSet;
        clone(): any;
        xor(arg0: Internal.BitSet): void;
        flip(arg0: number, arg1: number): void;
        flip(arg0: number): void;
        andNot(arg0: Internal.BitSet): void;
        get empty(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
        constructor();
    }
    type BitSet_ = BitSet;
    class SmokerTileEntity extends Internal.AbstractFurnaceTileEntity {
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_201561_a(arg0: Internal.World, arg1: Internal.ServerPlayerEntity, arg2: Internal.IRecipe<any>): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_145818_k_(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SmokerTileEntity_ = SmokerTileEntity;
    class OceanRuinStructure$Type extends Internal.Enum<Internal.OceanRuinStructure$Type> implements Internal.IStringSerializable {
        func_176610_l(): string;
        static func_215136_a(arg0: string): Internal.OceanRuinStructure$Type;
        static valueOf(arg0: string): Internal.OceanRuinStructure$Type;
        func_215135_a(): string;
        static values(): Internal.OceanRuinStructure$Type[];
        static readonly field_236998_c_: Internal.Codec<Internal.OceanRuinStructure$Type>;
        static readonly COLD: Internal.OceanRuinStructure$Type;
        static readonly WARM: Internal.OceanRuinStructure$Type;
    }
    type OceanRuinStructure$Type_ = "warm" | "cold" | OceanRuinStructure$Type;
    interface ImageObserver {
        imageUpdate(arg0: Internal.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        (arg0: Internal.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
    }
    type ImageObserver_ = ((arg0: Internal.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number)=>boolean) | ImageObserver;
    class RegistryKey <T> extends Document.Object implements Internal.Comparable<Internal.RegistryKey<any>>, Internal.SpecialEquality {
        func_244356_a(arg0: Internal.RegistryKey<Internal.Registry<any>>): boolean;
        getRegistryName(): ResourceLocation;
        static func_240903_a_<T_>(arg0: Internal.RegistryKey<Internal.Registry<T_>>, arg1: ResourceLocation_): Internal.RegistryKey<T_>;
        func_240901_a_(): ResourceLocation;
        static func_240902_a_<T_>(arg0: Internal.RegistryKey<Internal.Registry<T_>>): Internal.Function<ResourceLocation, Internal.RegistryKey<T_>>;
        compareTo(arg0: Internal.RegistryKey<any>): number;
        compareTo(arg0: any): number;
        static func_240904_a_<T_>(arg0: ResourceLocation_): Internal.RegistryKey<Internal.Registry<T_>>;
        rhino_getNamespace(): string;
        rhino_getPath(): string;
        specialEquals(o: any, shallow: boolean): boolean;
        get registryName(): ResourceLocation;
    }
    type RegistryKey_<T> = RegistryKey<T>;
    class ScreenJournal extends Internal.WidthHeightScreen {
        static addBookmark(arg0: Internal.BookmarkProvider): boolean;
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212927_b(arg0: number, arg1: number): void;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_231049_c__(arg0: boolean): boolean;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        static readonly NO_BOOKMARK: -1;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ITextComponent, arg1: number, arg2: number, arg3: number);
    }
    type ScreenJournal_ = ScreenJournal;
    class Effect extends Internal.ForgeRegistryEntry<Internal.Effect> implements Internal.IForgeEffect {
        renderInventoryEffect(arg0: Internal.EffectInstance, arg1: Internal.DisplayEffectsScreen<any>, arg2: Internal.MatrixStack, arg3: number, arg4: number, arg5: number): void;
        getGuiSortColor(arg0: Internal.EffectInstance): number;
        shouldRenderHUD(arg0: Internal.EffectInstance): boolean;
        static func_188409_a(arg0: Internal.Effect_): number;
        setRegistryName(arg0: ResourceLocation_): any;
        shouldRenderInvText(arg0: Internal.EffectInstance): boolean;
        func_111186_k(): Internal.Map<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        static func_188412_a(arg0: number): Internal.Effect;
        func_199286_c(): Internal.ITextComponent;
        func_111185_a(arg0: Internal.LivingEntity, arg1: Internal.AttributeModifierManager, arg2: number): void;
        func_220303_e(): Internal.EffectType;
        func_76397_a(arg0: number, arg1: number): boolean;
        func_220304_a(arg0: net.minecraft.entity.ai.attributes.Attribute_, arg1: string, arg2: number, arg3: Internal.AttributeModifier$Operation_): Internal.Effect;
        func_76403_b(): boolean;
        func_111183_a(arg0: number, arg1: Internal.AttributeModifier): number;
        func_180793_a(arg0: Internal.Entity, arg1: Internal.Entity, arg2: Internal.LivingEntity, arg3: number, arg4: number): void;
        func_76401_j(): number;
        func_111187_a(arg0: Internal.LivingEntity, arg1: Internal.AttributeModifierManager, arg2: number): void;
        getEffect(): Internal.Effect;
        shouldRender(arg0: Internal.EffectInstance): boolean;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        func_76393_a(): string;
        renderHUDEffect(arg0: Internal.EffectInstance, arg1: Internal.AbstractGui, arg2: Internal.MatrixStack, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_76394_a(arg0: Internal.LivingEntity, arg1: number): void;
        func_188408_i(): boolean;
        get curativeItems(): Internal.List<Internal.ItemStack>;
        get effect(): Internal.Effect;
        set registryName(arg0: ResourceLocation_);
    }
    type Effect_ = Registry.minecraft.mob_effect | Effect;
    class SceneBuilder$DebugInstructions extends Document.Object {
        debugSchematic(): void;
        enqueueCallback(arg0: Internal.Consumer_<Internal.PonderScene_>): void;
        addInstructionInstance(arg0: Internal.PonderInstruction): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SceneBuilder);
    }
    type SceneBuilder$DebugInstructions_ = SceneBuilder$DebugInstructions;
    class BoatEntity extends Internal.Entity implements Internal.BoatEntityAccess {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_184453_r(): Internal.BoatEntity$Type;
        static func_242378_a(arg0: Internal.Entity, arg1: Internal.Entity): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_184455_j(): Internal.Item;
        func_184451_k(): number;
        getLastYd(): number;
        func_184457_a(arg0: number): boolean;
        func_184458_a(arg0: Internal.BoatEntity$Type_): void;
        func_203056_b(arg0: number): number;
        func_70271_g(): number;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        getStatusField(): Internal.BoatEntity$Status;
        hasCooldown(): boolean;
        setLastYd(arg0: number): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_184441_l(): number;
        func_184448_a(arg0: number, arg1: number): number;
        func_70268_h(): number;
        func_70267_i(): number;
        func_184445_a(arg0: boolean, arg1: boolean): void;
        func_70269_c(arg0: number): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70265_b(arg0: number): void;
        func_70266_a(arg0: number): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_184442_a(arg0: boolean, arg1: boolean, arg2: boolean, arg3: boolean): void;
        get statusField(): Internal.BoatEntity$Status;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get lastYd(): number;
        get entity(): Internal.Entity;
        set lastYd(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.BoatEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
    }
    type BoatEntity_ = BoatEntity;
    class ServerWorldLightManager extends Internal.WorldLightManager implements Internal.AutoCloseable, Internal.StarLightLightingProvider {
        func_215581_a(arg0: Internal.ChunkPos): void;
        func_215588_z_(): void;
        func_215598_a(arg0: number): void;
        func_215567_a(arg0: BlockPos, arg1: boolean): void;
        close(): void;
        func_215593_a(arg0: Internal.IChunk, arg1: boolean): Internal.CompletableFuture<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IChunkLightProvider, arg1: Internal.ChunkManager, arg2: boolean, arg3: any, arg4: Internal.ITaskExecutor<any>);
    }
    type ServerWorldLightManager_ = ServerWorldLightManager;
    class PlayerEvent$BreakSpeed extends Internal.PlayerEvent {
        getState(): Internal.BlockState;
        getOriginalSpeed(): number;
        getPos(): BlockPos;
        setNewSpeed(arg0: number): void;
        getNewSpeed(): number;
        get originalSpeed(): number;
        get pos(): BlockPos;
        get newSpeed(): number;
        get state(): Internal.BlockState;
        set newSpeed(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.BlockState, arg2: number, arg3: BlockPos);
    }
    type PlayerEvent$BreakSpeed_ = PlayerEvent$BreakSpeed;
    class SUpdateBossInfoPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_186900_e(): Internal.BossInfo$Color;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_186910_h(): boolean;
        func_186902_b(): Internal.SUpdateBossInfoPacket$Operation;
        func_211402_a(): boolean;
        func_186908_a(): Internal.UUID;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186909_g(): boolean;
        func_186901_i(): boolean;
        func_186904_f(): Internal.BossInfo$Overlay;
        func_186906_d(): number;
        func_186907_c(): Internal.ITextComponent;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.SUpdateBossInfoPacket$Operation, arg1: Internal.BossInfo);
    }
    type SUpdateBossInfoPacket_ = SUpdateBossInfoPacket;
    interface Thread$Builder {
        factory(): Internal.ThreadFactory;
        inheritInheritableThreadLocals(arg0: boolean): Internal.Thread$Builder;
        start(arg0: Internal.Runnable_): Internal.Thread;
        name(arg0: string): Internal.Thread$Builder;
        name(arg0: string, arg1: number): Internal.Thread$Builder;
        unstarted(arg0: Internal.Runnable_): Internal.Thread;
        uncaughtExceptionHandler(arg0: Internal.Thread$UncaughtExceptionHandler_): Internal.Thread$Builder;
    }
    type Thread$Builder_ = Thread$Builder;
    class TextFormatting extends Internal.Enum<Internal.TextFormatting> implements dev.latvian.mods.rhino.mod.util.color.Color {
        getRgbKJS(): number;
        static valueOf(arg0: string): Internal.TextFormatting;
        static values(): Internal.TextFormatting[];
        getSerializeKJS(): string;
        static func_96300_b(arg0: string): Internal.TextFormatting;
        func_96301_b(): boolean;
        static func_211165_a(arg0: string): Internal.TextFormatting;
        func_96302_c(): boolean;
        static func_175744_a(arg0: number): Internal.TextFormatting;
        func_211163_e(): number;
        getHexKJS(): string;
        createTextColorKJS(): Internal.Color;
        getArgbKJS(): number;
        func_96297_d(): string;
        getFireworkColorKJS(): number;
        func_175746_b(): number;
        specialEquals(o: any, shallow: boolean): boolean;
        static func_96296_a(arg0: boolean, arg1: boolean): Internal.Collection<string>;
        static func_110646_a(arg0: string): string;
        static readonly ITALIC: Internal.TextFormatting;
        static readonly GOLD: Internal.TextFormatting;
        static readonly GRAY: Internal.TextFormatting;
        static readonly AQUA: Internal.TextFormatting;
        static readonly WHITE: Internal.TextFormatting;
        static readonly BLUE: Internal.TextFormatting;
        static readonly OBFUSCATED: Internal.TextFormatting;
        static readonly DARK_AQUA: Internal.TextFormatting;
        static readonly RESET: Internal.TextFormatting;
        static readonly DARK_BLUE: Internal.TextFormatting;
        static readonly GREEN: Internal.TextFormatting;
        static readonly UNDERLINE: Internal.TextFormatting;
        static readonly RED: Internal.TextFormatting;
        static readonly DARK_PURPLE: Internal.TextFormatting;
        static readonly STRIKETHROUGH: Internal.TextFormatting;
        static readonly DARK_RED: Internal.TextFormatting;
        static readonly LIGHT_PURPLE: Internal.TextFormatting;
        static readonly BLACK: Internal.TextFormatting;
        static readonly BOLD: Internal.TextFormatting;
        static readonly DARK_GREEN: Internal.TextFormatting;
        static readonly YELLOW: Internal.TextFormatting;
        static readonly DARK_GRAY: Internal.TextFormatting;
        get fireworkColorKJS(): number;
        get rgbKJS(): number;
        get argbKJS(): number;
        get serializeKJS(): string;
        get hexKJS(): string;
    }
    type TextFormatting_ = "black" | "dark_blue" | "dark_green" | "dark_aqua" | "dark_red" | "dark_purple" | "gold" | "gray" | "dark_gray" | "blue" | "green" | "aqua" | "red" | "light_purple" | "yellow" | "white" | "obfuscated" | "bold" | "strikethrough" | "underline" | "italic" | "reset" | TextFormatting;
    abstract class MappedByteBuffer extends Internal.ByteBuffer {
        compact(): Internal.MappedByteBuffer;
        clear(): Internal.MappedByteBuffer;
        clear(): Internal.Buffer;
        duplicate(): Internal.MappedByteBuffer;
        duplicate(): Internal.Buffer;
        isLoaded(): boolean;
        rewind(): Internal.MappedByteBuffer;
        rewind(): Internal.Buffer;
        load(): Internal.MappedByteBuffer;
        array(): any;
        slice(arg0: number, arg1: number): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.MappedByteBuffer;
        slice(): Internal.MappedByteBuffer;
        slice(): Internal.Buffer;
        limit(arg0: number): Internal.Buffer;
        limit(arg0: number): Internal.MappedByteBuffer;
        reset(): Internal.Buffer;
        reset(): Internal.MappedByteBuffer;
        force(): Internal.MappedByteBuffer;
        force(arg0: number, arg1: number): Internal.MappedByteBuffer;
        position(arg0: number): Internal.Buffer;
        position(arg0: number): Internal.MappedByteBuffer;
        flip(): Internal.Buffer;
        flip(): Internal.MappedByteBuffer;
        mark(): Internal.MappedByteBuffer;
        mark(): Internal.Buffer;
        get loaded(): boolean;
    }
    type MappedByteBuffer_ = MappedByteBuffer;
    class GPUWarning extends Internal.ReloadListener<Internal.GPUWarning$GPUInfo> implements Internal.GPUWarningAccess {
        func_241699_f_(): void;
        func_241703_j_(): string;
        func_241705_l_(): string;
        getWarnings(): Internal.ImmutableMap<any, any>;
        func_241704_k_(): string;
        func_225594_i_(): string;
        func_241695_b_(): boolean;
        func_241697_d_(): void;
        func_241698_e_(): void;
        func_241692_a_(): boolean;
        func_241701_h_(): boolean;
        func_241702_i_(): void;
        setWarnings(arg0: Internal.ImmutableMap<any, any>): void;
        func_241700_g_(): boolean;
        func_243499_m(): string;
        get warnings(): Internal.ImmutableMap<any, any>;
        set warnings(arg0: Internal.ImmutableMap<any, any>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type GPUWarning_ = GPUWarning;
    class ConfigCategory extends Document.Object implements Internal.Map<string, shadows.placebo.config.Property> {
        setLanguageKey(arg0: string): Internal.ConfigCategory;
        requiresWorldRestart(): boolean;
        setShowInGui(arg0: boolean): Internal.ConfigCategory;
        getOrDefault(arg0: any, arg1: shadows.placebo.config.Property): shadows.placebo.config.Property;
        getName(): string;
        computeIfAbsent(arg0: string, arg1: Internal.Function_<string, shadows.placebo.config.Property_>): shadows.placebo.config.Property;
        values(): Internal.Collection<shadows.placebo.config.Property>;
        replace(arg0: string, arg1: shadows.placebo.config.Property, arg2: shadows.placebo.config.Property): boolean;
        replace(arg0: string, arg1: shadows.placebo.config.Property): shadows.placebo.config.Property;
        removeChild(arg0: Internal.ConfigCategory): void;
        requiresMcRestart(): boolean;
        replaceAll(arg0: Internal.BiFunction_<string, shadows.placebo.config.Property_, shadows.placebo.config.Property_>): void;
        showInGui(): boolean;
        containsValue(arg0: any): boolean;
        put(arg0: any, arg1: any): any;
        put(arg0: string, arg1: shadows.placebo.config.Property): shadows.placebo.config.Property;
        remove(arg0: any): shadows.placebo.config.Property;
        remove(arg0: any): any;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: string, arg1: Internal.BiFunction_<string, shadows.placebo.config.Property_, shadows.placebo.config.Property_>): shadows.placebo.config.Property;
        getLanguagekey(): string;
        static getQualifiedName(arg0: string, arg1: Internal.ConfigCategory): string;
        getQualifiedName(): string;
        hasChanged(): boolean;
        merge(arg0: string, arg1: shadows.placebo.config.Property, arg2: Internal.BiFunction_<shadows.placebo.config.Property_, shadows.placebo.config.Property_, shadows.placebo.config.Property_>): shadows.placebo.config.Property;
        putAll(arg0: Internal.Map_<string, shadows.placebo.config.Property_>): void;
        get(arg0: any): shadows.placebo.config.Property;
        get(arg0: any): any;
        get(arg0: string): shadows.placebo.config.Property;
        setRequiresMcRestart(arg0: boolean): Internal.ConfigCategory;
        getComment(): string;
        getFirstParent(): Internal.ConfigCategory;
        getOrderedValues(): Internal.List<shadows.placebo.config.Property>;
        keySet(): Internal.Set<string>;
        write(arg0: Internal.BufferedWriter, arg1: number): void;
        isChild(): boolean;
        getValues(): Internal.Map<string, shadows.placebo.config.Property>;
        entrySet(): Internal.Set<Internal.Map$Entry<string, shadows.placebo.config.Property>>;
        forEach(arg0: Internal.BiConsumer_<string, shadows.placebo.config.Property_>): void;
        setPropertyOrder(arg0: Internal.List<string>): Internal.ConfigCategory;
        containsKey(arg0: string): boolean;
        containsKey(arg0: any): boolean;
        setRequiresWorldRestart(arg0: boolean): Internal.ConfigCategory;
        isEmpty(): boolean;
        clear(): void;
        getChildren(): Internal.Set<Internal.ConfigCategory>;
        computeIfPresent(arg0: string, arg1: Internal.BiFunction_<string, shadows.placebo.config.Property_, shadows.placebo.config.Property_>): shadows.placebo.config.Property;
        size(): number;
        getPropertyOrder(): Internal.List<string>;
        setComment(arg0: string): void;
        putIfAbsent(arg0: string, arg1: shadows.placebo.config.Property): shadows.placebo.config.Property;
        readonly parent: Internal.ConfigCategory;
        static readonly NEW_LINE: "\r\n";
        static readonly allowedProperties: Internal.CharMatcher;
        static readonly COMMENT_SEPARATOR: "##########################################################################################################";
        static readonly ALLOWED_CHARS: "._-";
        get propertyOrder(): Internal.List<string>;
        get children(): Internal.Set<Internal.ConfigCategory>;
        get qualifiedName(): string;
        get name(): string;
        get firstParent(): Internal.ConfigCategory;
        get comment(): string;
        get orderedValues(): Internal.List<shadows.placebo.config.Property>;
        get languagekey(): string;
        get child(): boolean;
        get empty(): boolean;
        set propertyOrder(arg0: Internal.List<string>);
        set comment(arg0: string);
        set languageKey(arg0: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor(arg0: string, arg1: Internal.ConfigCategory);
    }
    type ConfigCategory_ = ConfigCategory;
    interface Constant <T> extends Internal.Comparable<T> {
        name(): string;
        id(): number;
    }
    type Constant_<T> = Constant<T>;
    class LivingDeathEvent extends Internal.LivingEvent {
        getSource(): Internal.DamageSource;
        get source(): Internal.DamageSource;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.DamageSource);
    }
    type LivingDeathEvent_ = LivingDeathEvent;
    class AttributeModifierMap extends Document.Object {
        static func_233803_a_(): Internal.AttributeModifierMap$MutableAttribute;
        func_233804_a_(arg0: net.minecraft.entity.ai.attributes.Attribute_): number;
        func_233807_b_(arg0: net.minecraft.entity.ai.attributes.Attribute_): number;
        func_233806_a_(arg0: Internal.Consumer_<Internal.ModifiableAttributeInstance_>, arg1: net.minecraft.entity.ai.attributes.Attribute_): Internal.ModifiableAttributeInstance;
        func_233805_a_(arg0: net.minecraft.entity.ai.attributes.Attribute_, arg1: Internal.UUID): number;
        func_233808_b_(arg0: net.minecraft.entity.ai.attributes.Attribute_, arg1: Internal.UUID): boolean;
        func_233809_c_(arg0: net.minecraft.entity.ai.attributes.Attribute_): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<net.minecraft.entity.ai.attributes.Attribute, Internal.ModifiableAttributeInstance>);
    }
    type AttributeModifierMap_ = AttributeModifierMap;
    class Exception extends Internal.Throwable {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Throwable);
        constructor(arg0: string, arg1: Internal.Throwable);
        constructor(arg0: string);
        constructor();
    }
    type Exception_ = Exception;
    class SOpenBookWindowPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218746_b(): Hand;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Hand);
    }
    type SOpenBookWindowPacket_ = SOpenBookWindowPacket;
    class ValueRange extends Document.Object implements Internal.Serializable {
        isIntValue(): boolean;
        getLargestMinimum(): number;
        isValidValue(arg0: number): boolean;
        static of(arg0: number, arg1: number): Internal.ValueRange;
        static of(arg0: number, arg1: number, arg2: number, arg3: number): Internal.ValueRange;
        static of(arg0: number, arg1: number, arg2: number): Internal.ValueRange;
        getMinimum(): number;
        checkValidValue(arg0: number, arg1: Internal.TemporalField): number;
        checkValidIntValue(arg0: number, arg1: Internal.TemporalField): number;
        getMaximum(): number;
        getSmallestMaximum(): number;
        isFixed(): boolean;
        isValidIntValue(arg0: number): boolean;
        get largestMinimum(): number;
        get smallestMaximum(): number;
        get intValue(): boolean;
        get maximum(): number;
        get fixed(): boolean;
        get minimum(): number;
    }
    type ValueRange_ = ValueRange;
    abstract class AbstractRaiderEntity extends Internal.PatrollerEntity {
        shouldRiderSit(): boolean;
        func_213657_el(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_213660_a(arg0: number, arg1: boolean): void;
        func_213661_eo(): number;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213655_u(arg0: boolean): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_213663_ek(): Internal.Raid;
        func_213642_em(): number;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_213651_a(arg0: number): void;
        hasCooldown(): boolean;
        func_213653_b(arg0: number): void;
        func_213652_a(arg0: Internal.Raid): void;
        isMultipartEntity(): boolean;
        func_213644_t(arg0: boolean): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        func_213658_ej(): boolean;
        func_213656_en(): boolean;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_213654_dW(): Internal.SoundEvent;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
    }
    type AbstractRaiderEntity_ = AbstractRaiderEntity;
    class ItemAttributeModifierEvent extends net.minecraftforge.eventbus.api.Event {
        addModifier(arg0: net.minecraft.entity.ai.attributes.Attribute_, arg1: Internal.AttributeModifier): boolean;
        getOriginalModifiers(): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        getSlotType(): EquipmentSlot;
        getItemStack(): Internal.ItemStack;
        getModifiers(): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        removeAttribute(arg0: net.minecraft.entity.ai.attributes.Attribute_): Internal.Collection<Internal.AttributeModifier>;
        removeModifier(arg0: net.minecraft.entity.ai.attributes.Attribute_, arg1: Internal.AttributeModifier): boolean;
        clearModifiers(): void;
        get itemStack(): Internal.ItemStack;
        get originalModifiers(): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        get slotType(): EquipmentSlot;
        get modifiers(): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemStack, arg1: EquipmentSlot, arg2: Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>);
        constructor();
    }
    type ItemAttributeModifierEvent_ = ItemAttributeModifierEvent;
    class SDisconnectPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149165_c(): Internal.ITextComponent;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ITextComponent);
    }
    type SDisconnectPacket_ = SDisconnectPacket;
    abstract class StructureStart <C> extends Document.Object {
        func_186161_c(): Internal.List<Internal.StructurePiece>;
        func_212687_g(): boolean;
        func_212685_h(): void;
        func_214627_k(): net.minecraft.world.gen.feature.structure.Structure<any>;
        func_230364_a_(arg0: Internal.DynamicRegistries, arg1: Internal.ChunkGenerator, arg2: Internal.TemplateManager, arg3: number, arg4: number, arg5: Internal.Biome_, arg6: C): void;
        func_204294_a(): BlockPos;
        func_143021_a(arg0: number, arg1: number): Internal.CompoundNBT;
        func_227457_j_(): number;
        func_75069_d(): boolean;
        func_230366_a_(arg0: Internal.ISeedReader, arg1: Internal.StructureManager, arg2: Internal.ChunkGenerator, arg3: Internal.Random, arg4: Internal.MutableBoundingBox, arg5: Internal.ChunkPos): void;
        handler$cgi000$injectReference(arg0: Internal.ISeedReader, arg1: Internal.StructureManager, arg2: Internal.ChunkGenerator, arg3: Internal.Random, arg4: Internal.MutableBoundingBox, arg5: Internal.ChunkPos, arg6: Internal.CallbackInfo): void;
        func_75071_a(): Internal.MutableBoundingBox;
        handler$cgi000$resetReference(arg0: Internal.ISeedReader, arg1: Internal.StructureManager, arg2: Internal.ChunkGenerator, arg3: Internal.Random, arg4: Internal.MutableBoundingBox, arg5: Internal.ChunkPos, arg6: Internal.CallbackInfo): void;
        func_143018_f(): number;
        func_143019_e(): number;
        static readonly field_214630_a: Internal.StructureStart<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: net.minecraft.world.gen.feature.structure.Structure<C>, arg1: number, arg2: number, arg3: Internal.MutableBoundingBox, arg4: number, arg5: number);
    }
    type StructureStart_<C> = StructureStart<C>;
    class VideoMode extends Document.Object {
        func_198063_d(): number;
        func_198065_b(): number;
        func_198062_c(): number;
        func_198064_a(): number;
        static func_198061_a(arg0: string): Internal.Optional<Internal.VideoMode>;
        func_198067_f(): number;
        func_198068_e(): number;
        func_198066_g(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
        constructor(arg0: any);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number);
    }
    type VideoMode_ = VideoMode;
    class RenderState$CullState extends Internal.RenderState$BooleanState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean);
    }
    type RenderState$CullState_ = RenderState$CullState;
    class Item extends Internal.ForgeRegistryEntry<Internal.Item> implements Internal.IItemProvider, Internal.IForgeItem, Internal.IEnchantableItem, Internal.ItemFTBL, Internal.ItemInvokerMixin, Internal.ItemKJS {
        getToolTypes(arg0: Internal.ItemStack): Internal.Set<Internal.ToolType>;
        func_77667_c(arg0: Internal.ItemStack): string;
        onEnchantment(arg0: Internal.ItemStack, arg1: Internal.List<Internal.EnchantmentData>): Internal.ItemStack;
        getItem(): Internal.Item;
        getTags(): Internal.Set<ResourceLocation>;
        func_77640_w(): Internal.ItemGroup;
        getSmeltingExperience(arg0: Internal.ItemStack): number;
        setDamage(arg0: Internal.ItemStack, arg1: number): void;
        func_190903_i(): Internal.ItemStack;
        static func_150891_b(arg0: Internal.Item_): number;
        func_111207_a(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.LivingEntity, arg3: Hand_): Internal.ActionResultType;
        damageItem<T_>(arg0: Internal.ItemStack, arg1: number, arg2: T_, arg3: Internal.Consumer_<T_>): number;
        getItemEnchantability(arg0: Internal.ItemStack): number;
        func_206844_a(arg0: Internal.ITag<Internal.Item>): boolean;
        setFireResistantKJS(arg0: boolean): void;
        isTreasureAllowed(arg0: Internal.ItemStack, arg1: boolean): boolean;
        func_150895_a(arg0: Internal.ItemGroup, arg1: Internal.NonNullList<Internal.ItemStack>): void;
        getXpRepairRatio(arg0: Internal.ItemStack): number;
        getArmorModel<A_>(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: EquipmentSlot_, arg3: A_): A_;
        static func_150899_d(arg0: number): Internal.Item;
        onEntityItemUpdate(arg0: Internal.ItemStack, arg1: Internal.ItemEntity): boolean;
        getDamage(arg0: Internal.ItemStack): number;
        func_77659_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: Hand_): Internal.ActionResult<Internal.ItemStack>;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.LivingEntity, arg3: Internal.LivingEntity): boolean;
        func_77636_d(arg0: Internal.ItemStack): boolean;
        func_77613_e(arg0: Internal.ItemStack): Internal.Rarity;
        setBurnTimeKJS(i: number): void;
        isPiglinCurrency(arg0: Internal.ItemStack): boolean;
        callAllowdedIn(arg0: Internal.ItemGroup): boolean;
        func_77651_p(): boolean;
        getShareTag(arg0: Internal.ItemStack): Internal.CompoundNBT;
        func_219972_a(arg0: Internal.World, arg1: Internal.LivingEntity, arg2: Internal.ItemStack, arg3: number): void;
        onDroppedByPlayer(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity): boolean;
        onEntitySwing(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        func_77624_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.List<Internal.ITextComponent>, arg3: Internal.ITooltipFlag_): void;
        setMaxStackSizeKJS(arg0: number): void;
        getAttributeModifiers(arg0: EquipmentSlot_, arg1: Internal.ItemStack): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        func_179215_a(arg0: Internal.CompoundNBT_): boolean;
        func_77622_d(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.PlayerEntity): void;
        func_77626_a(arg0: Internal.ItemStack): number;
        canEquip(arg0: Internal.ItemStack, arg1: EquipmentSlot_, arg2: Internal.Entity): boolean;
        func_77668_q(): Internal.Item;
        onBlockStartBreak(arg0: Internal.ItemStack, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        func_77645_m(): boolean;
        getEntityLifespan(arg0: Internal.ItemStack, arg1: Internal.World): number;
        getArmorTexture(arg0: Internal.ItemStack, arg1: Internal.Entity, arg2: EquipmentSlot_, arg3: string): string;
        setCraftingRemainderKJS(arg0: Internal.Item_): void;
        setMaxDamageKJS(arg0: number): void;
        getMaxDamage(arg0: Internal.ItemStack): number;
        static func_219968_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: Internal.RayTraceContext$FluidMode_): Internal.BlockRayTraceResult;
        getCreatorModId(arg0: Internal.ItemStack): string;
        isDamaged(arg0: Internal.ItemStack): boolean;
        onArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.PlayerEntity): void;
        hasContainerItem(arg0: Internal.ItemStack): boolean;
        isShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        func_225520_U__(): Internal.SoundEvent;
        onItemUseFirst(arg0: Internal.ItemStack, arg1: Internal.ItemUseContext): Internal.ActionResultType;
        initCapabilities(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): Internal.ICapabilityProvider;
        getFontRenderer(arg0: Internal.ItemStack): Internal.FontRenderer;
        func_77644_a(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: Internal.LivingEntity): boolean;
        forciblyAllowsTableEnchantment(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        makesPiglinsNeutral(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        isEnderMask(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.EndermanEntity): boolean;
        func_77663_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.Entity, arg3: number, arg4: boolean): void;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        func_179218_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.LivingEntity): boolean;
        canElytraFly(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        func_219971_r(): boolean;
        func_225519_S__(): Internal.SoundEvent;
        getItemStackTileEntityRenderer(): Internal.ItemStackTileEntityRenderer;
        getHarvestLevel(arg0: Internal.ItemStack, arg1: Internal.ToolType, arg2: Internal.PlayerEntity, arg3: Internal.BlockState): number;
        canHarvestBlock(arg0: Internal.ItemStack, arg1: Internal.BlockState): boolean;
        renderHelmetOverlay(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: number, arg3: number, arg4: number): void;
        func_195938_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        func_150893_a(arg0: Internal.ItemStack, arg1: Internal.BlockState): number;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: boolean): boolean;
        func_82789_a(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_150897_b(arg0: Internal.BlockState): boolean;
        readShareTag(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): void;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        func_111205_h(arg0: EquipmentSlot_): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        showDurabilityBar(arg0: Internal.ItemStack): boolean;
        setFoodPropertiesKJS(arg0: Internal.Food): void;
        func_77619_b(): number;
        isBookEnchantable(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_77615_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.LivingEntity, arg3: number): void;
        func_77634_r(): boolean;
        onUsingTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): void;
        createEntity(arg0: Internal.World, arg1: Internal.Entity, arg2: Internal.ItemStack): Internal.Entity;
        getCreativeTabs(): Internal.Collection<Internal.ItemGroup>;
        func_219967_s(): Internal.Food;
        getIdKJS(): string;
        isRepairable(arg0: Internal.ItemStack): boolean;
        getRGBDurabilityForDisplay(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack, arg1: Internal.IRecipeType<any>): number;
        isDamageable(arg0: Internal.ItemStack): boolean;
        setItemBuilderKJS(b: Internal.ItemBuilder): void;
        elytraFlightTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): boolean;
        getItemBuilderKJS(): Internal.ItemBuilder;
        func_219970_i(arg0: Internal.ItemStack): boolean;
        func_200295_i(arg0: Internal.ItemStack): Internal.ITextComponent;
        selectEnchantments(arg0: Internal.List<Internal.EnchantmentData>, arg1: Internal.Random, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number, arg6: boolean): Internal.List<Internal.EnchantmentData>;
        func_77643_m_(): boolean;
        onLeftClickEntity(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.Entity): boolean;
        getDurabilityForDisplay(arg0: Internal.ItemStack): number;
        onHorseArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.MobEntity): void;
        func_195939_a(arg0: Internal.ItemUseContext): Internal.ActionResultType;
        canContinueUsing(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        hasCustomEntity(arg0: Internal.ItemStack): boolean;
        func_77654_b(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.LivingEntity): Internal.ItemStack;
        getHighlightTip(arg0: Internal.ItemStack, arg1: Internal.ITextComponent_): Internal.ITextComponent;
        static func_150898_a(arg0: Internal.Block_): Internal.Item;
        func_234685_a_(arg0: Internal.DamageSource_): boolean;
        setRarityKJS(arg0: Internal.Rarity_): void;
        func_77658_a(): string;
        doesSneakBypassUse(arg0: Internal.ItemStack, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        func_77616_k(arg0: Internal.ItemStack): boolean;
        getContainerItem(arg0: Internal.ItemStack): Internal.ItemStack;
        func_77639_j(): number;
        setRegistryName(arg0: ResourceLocation_): any;
        func_77612_l(): number;
        getEquipmentSlot(arg0: Internal.ItemStack): EquipmentSlot;
        getItemStackLimit(arg0: Internal.ItemStack): number;
        func_234687_u_(): boolean;
        func_200296_o(): Internal.ITextComponent;
        func_199767_j(): Internal.Item;
        func_194125_a(arg0: Internal.ItemGroup): boolean;
        func_77661_b(arg0: Internal.ItemStack): Internal.UseAction;
        readonly field_219974_q: Internal.Food;
        field_77701_a: Internal.ItemGroup;
        field_77777_bU: number;
        field_77700_c: Internal.Item;
        static readonly field_111210_e: Internal.UUID;
        ister: java_.util.function_.Supplier<Internal.ItemStackTileEntityRenderer>;
        static readonly field_179220_a: {};
        static readonly field_185050_h: Internal.UUID;
        field_77774_bZ: string;
        get item(): Internal.Item;
        get itemBuilderKJS(): Internal.ItemBuilder;
        get creativeTabs(): Internal.Collection<Internal.ItemGroup>;
        get itemStackTileEntityRenderer(): Internal.ItemStackTileEntityRenderer;
        get tags(): Internal.Set<ResourceLocation>;
        get idKJS(): string;
        set rarityKJS(arg0: Internal.Rarity_);
        set itemBuilderKJS(b: Internal.ItemBuilder);
        set maxStackSizeKJS(arg0: number);
        set foodPropertiesKJS(arg0: Internal.Food);
        set burnTimeKJS(i: number);
        set fireResistantKJS(arg0: boolean);
        set registryName(arg0: ResourceLocation_);
        set craftingRemainderKJS(arg0: Internal.Item_);
        set maxDamageKJS(arg0: number);
        set craftingRemainingItemFTBL(arg0: Internal.Item_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Item$Properties);
    }
    type Item_ = Registry.minecraft.item | Item;
    class FoodRegistryInitEvent extends net.minecraftforge.eventbus.api.Event {
        getNonFoodRecipes(): Internal.Collection<Internal.ItemStack>;
        registerNonFoodRecipe(arg0: Internal.ItemStack): void;
        get nonFoodRecipes(): Internal.Collection<Internal.ItemStack>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FoodRegistryInitEvent_ = FoodRegistryInitEvent;
    class JsonGenerator extends Document.Object {
        json(id: ResourceLocation_, json: Internal.JsonElement): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(c: Internal.ConsoleJS, m: Internal.Map<ResourceLocation, Internal.JsonElement>);
    }
    type JsonGenerator_ = JsonGenerator;
    interface RandomGenerator {
        nextFloat(): number;
        nextFloat(arg0: number): number;
        nextFloat(arg0: number, arg1: number): number;
        isDeprecated(): boolean;
        nextInt(arg0: number): number;
        nextInt(arg0: number, arg1: number): number;
        nextInt(): number;
        nextLong(arg0: number, arg1: number): number;
        nextLong(): number;
        nextLong(arg0: number): number;
        nextGaussian(arg0: number, arg1: number): number;
        nextGaussian(): number;
        nextDouble(arg0: number): number;
        nextDouble(): number;
        nextDouble(arg0: number, arg1: number): number;
        nextBytes(arg0: number[]): void;
        longs(arg0: number, arg1: number, arg2: number): Internal.LongStream;
        longs(arg0: number, arg1: number): Internal.LongStream;
        longs(): Internal.LongStream;
        longs(arg0: number): Internal.LongStream;
        nextExponential(): number;
        doubles(): Internal.DoubleStream;
        doubles(arg0: number, arg1: number, arg2: number): Internal.DoubleStream;
        doubles(arg0: number, arg1: number): Internal.DoubleStream;
        doubles(arg0: number): Internal.DoubleStream;
        ints(arg0: number, arg1: number): Internal.IntStream;
        ints(): Internal.IntStream;
        ints(arg0: number): Internal.IntStream;
        ints(arg0: number, arg1: number, arg2: number): Internal.IntStream;
        nextBoolean(): boolean;
        (): number;
    }
    type RandomGenerator_ = (()=>number) | RandomGenerator;
    class SmithingRecipeJS extends Internal.RecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SmithingRecipeJS_ = SmithingRecipeJS;
    interface IForgeVertexBuilder {
        applyBakedLighting(arg0: number, arg1: Internal.ByteBuffer): number;
        getVertexBuilder(): Internal.IVertexBuilder;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number[], arg3: number, arg4: number, arg5: number, arg6: number, arg7: number[], arg8: number, arg9: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        applyBakedNormals(arg0: Internal.Vector3f, arg1: Internal.ByteBuffer, arg2: Internal.Matrix3f): void;
    }
    type IForgeVertexBuilder_ = IForgeVertexBuilder;
    class TicketType <T> extends Document.Object {
        func_223184_b(): number;
        static func_223183_a<T_>(arg0: string, arg1: Internal.Comparator<T_>, arg2: number): Internal.TicketType<T_>;
        func_219487_a(): Internal.Comparator<T>;
        static func_219484_a<T_>(arg0: string, arg1: Internal.Comparator<T_>): Internal.TicketType<T_>;
        static readonly field_219490_c: Internal.TicketType<Internal.ChunkPos>;
        static readonly field_223185_g: Internal.TicketType<number>;
        static readonly field_219492_e: Internal.TicketType<Internal.ChunkPos>;
        static readonly field_219491_d: Internal.TicketType<Internal.ChunkPos>;
        static readonly field_219494_g: Internal.TicketType<Internal.ChunkPos>;
        static readonly field_219489_b: Internal.TicketType<Internal.Unit>;
        static readonly field_219493_f: Internal.TicketType<BlockPos>;
        static readonly field_219488_a: Internal.TicketType<Internal.Unit>;
    }
    type TicketType_<T> = TicketType<T>;
    interface IFMLStatPingExtensions {
        getMods(): Internal.Map<string, string>;
        getChannels(): Internal.Map<ResourceLocation, org.apache.commons.lang3.tuple.Pair<string, boolean>>;
        getFMLNetworkVer(): number;
    }
    type IFMLStatPingExtensions_ = IFMLStatPingExtensions;
    class GuiContainerEvent$DrawForeground extends Internal.GuiContainerEvent {
        getMouseY(): number;
        getMouseX(): number;
        getMatrixStack(): Internal.MatrixStack;
        get mouseX(): number;
        get matrixStack(): Internal.MatrixStack;
        get mouseY(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ContainerScreen<any>, arg1: Internal.MatrixStack, arg2: number, arg3: number);
    }
    type GuiContainerEvent$DrawForeground_ = GuiContainerEvent$DrawForeground;
    interface SymbolScriptable {
        get(arg0: Internal.Symbol, arg1: Internal.Scriptable): any;
        has(arg0: Internal.Symbol, arg1: Internal.Scriptable): boolean;
        delete(arg0: Internal.Symbol): void;
        put(arg0: Internal.Symbol, arg1: Internal.Scriptable, arg2: any): void;
    }
    type SymbolScriptable_ = SymbolScriptable;
    class ToolRebuildContext extends Document.Object implements Internal.IToolContext {
        getMaterial(arg0: number): Internal.IMaterial;
        getModifierList(): Internal.List<Internal.ModifierEntry>;
        getMaterials(): Internal.MaterialNBT;
        getDefinition(): Internal.ToolDefinition;
        getStats(): Internal.StatsNBT;
        hasTag(arg0: Internal.ITag<Internal.Item>): boolean;
        getVolatileData(): Internal.IModDataReadOnly;
        getModifierLevel(arg0: Internal.Modifier_): number;
        getUpgrades(): Internal.ModifierNBT;
        getItem(): Internal.Item;
        getPersistentData(): Internal.IModDataReadOnly;
        getModifiers(): Internal.ModifierNBT;
        getMaterialsList(): Internal.List<Internal.IMaterial>;
        get volatileData(): Internal.IModDataReadOnly;
        get item(): Internal.Item;
        get materialsList(): Internal.List<Internal.IMaterial>;
        get materials(): Internal.MaterialNBT;
        get stats(): Internal.StatsNBT;
        get persistentData(): Internal.IModDataReadOnly;
        get definition(): Internal.ToolDefinition;
        get modifiers(): Internal.ModifierNBT;
        get modifierList(): Internal.List<Internal.ModifierEntry>;
        get upgrades(): Internal.ModifierNBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Item, arg1: Internal.ToolDefinition, arg2: Internal.MaterialNBT, arg3: Internal.ModifierNBT, arg4: Internal.ModifierNBT, arg5: Internal.StatsNBT, arg6: Internal.IModDataReadOnly, arg7: Internal.IModDataReadOnly);
    }
    type ToolRebuildContext_ = ToolRebuildContext;
    class Dist extends Internal.Enum<Internal.Dist> {
        isDedicatedServer(): boolean;
        static valueOf(arg0: string): Internal.Dist;
        static values(): Internal.Dist[];
        isClient(): boolean;
        static readonly DEDICATED_SERVER: Internal.Dist;
        static readonly CLIENT: Internal.Dist;
        get dedicatedServer(): boolean;
        get client(): boolean;
    }
    type Dist_ = "client" | "dedicated_server" | Dist;
    interface DoubleBinaryOperator {
        applyAsDouble(arg0: number, arg1: number): number;
        (arg0: number, arg1: number): number;
    }
    type DoubleBinaryOperator_ = ((arg0: number, arg1: number)=>number) | DoubleBinaryOperator;
    class GuardianEntity extends Internal.MonsterEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_175472_n(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        static func_234292_eK_(): Internal.AttributeModifierMap$MutableAttribute;
        func_175474_cn(): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_175464_ck(): number;
        static func_223329_b(arg0: Internal.EntityType_<Internal.GuardianEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_175466_co(): Internal.LivingEntity;
        func_175471_a(arg0: number): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_175477_p(arg0: number): number;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_175469_o(arg0: number): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.GuardianEntity>, arg1: Internal.World);
    }
    type GuardianEntity_ = GuardianEntity;
    class GrindstoneContainer extends Internal.Container {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IWorldPosCallable);
    }
    type GrindstoneContainer_ = GrindstoneContainer;
    interface PaintContext {
        getColorModel(): Internal.ColorModel;
        dispose(): void;
        getRaster(arg0: number, arg1: number, arg2: number, arg3: number): Internal.Raster;
    }
    type PaintContext_ = PaintContext;
    interface JEISubtypesEventJS$Interpreter extends Internal.Function<Internal.ItemStackJS, any> {
    }
    type JEISubtypesEventJS$Interpreter_ = JEISubtypesEventJS$Interpreter;
    abstract class URLConnection extends Document.Object {
        getLastModified(): number;
        setConnectTimeout(arg0: number): void;
        setIfModifiedSince(arg0: number): void;
        getHeaderFieldLong(arg0: string, arg1: number): number;
        getContent(): any;
        getContent(arg0: Internal.Class<any>[]): any;
        getReadTimeout(): number;
        setUseCaches(arg0: boolean): void;
        getHeaderFieldInt(arg0: string, arg1: number): number;
        getRequestProperty(arg0: string): string;
        static guessContentTypeFromStream(arg0: Internal.InputStream): string;
        setRequestProperty(arg0: string, arg1: string): void;
        static setDefaultRequestProperty(arg0: string, arg1: string): void;
        getDoInput(): boolean;
        getHeaderFieldDate(arg0: string, arg1: number): number;
        getDate(): number;
        static getFileNameMap(): Internal.FileNameMap;
        connect(): void;
        getIfModifiedSince(): number;
        getHeaderFieldKey(arg0: number): string;
        static setContentHandlerFactory(arg0: Internal.ContentHandlerFactory_): void;
        getContentEncoding(): string;
        getPermission(): Internal.Permission;
        static getDefaultAllowUserInteraction(): boolean;
        static getDefaultUseCaches(arg0: string): boolean;
        getDefaultUseCaches(): boolean;
        getUseCaches(): boolean;
        getAllowUserInteraction(): boolean;
        getConnectTimeout(): number;
        getContentLength(): number;
        getInputStream(): Internal.InputStream;
        setDoInput(arg0: boolean): void;
        addRequestProperty(arg0: string, arg1: string): void;
        setAllowUserInteraction(arg0: boolean): void;
        getRequestProperties(): Internal.Map<string, Internal.List<string>>;
        getURL(): Internal.URL;
        setReadTimeout(arg0: number): void;
        getHeaderField(arg0: number): string;
        getHeaderField(arg0: string): string;
        getHeaderFields(): Internal.Map<string, Internal.List<string>>;
        getExpiration(): number;
        static getDefaultRequestProperty(arg0: string): string;
        getContentLengthLong(): number;
        static setDefaultAllowUserInteraction(arg0: boolean): void;
        static setFileNameMap(arg0: Internal.FileNameMap_): void;
        getContentType(): string;
        getOutputStream(): Internal.OutputStream;
        getDoOutput(): boolean;
        setDefaultUseCaches(arg0: boolean): void;
        static setDefaultUseCaches(arg0: string, arg1: boolean): void;
        setDoOutput(arg0: boolean): void;
        static guessContentTypeFromName(arg0: string): string;
        get date(): number;
        get contentLengthLong(): number;
        get defaultAllowUserInteraction(): boolean;
        get defaultUseCaches(): boolean;
        get useCaches(): boolean;
        get requestProperties(): Internal.Map<string, Internal.List<string>>;
        get inputStream(): Internal.InputStream;
        get ifModifiedSince(): number;
        get permission(): Internal.Permission;
        get content(): any;
        get doInput(): boolean;
        get uRL(): Internal.URL;
        get allowUserInteraction(): boolean;
        get doOutput(): boolean;
        get readTimeout(): number;
        get connectTimeout(): number;
        get contentEncoding(): string;
        get fileNameMap(): Internal.FileNameMap;
        get contentLength(): number;
        get headerFields(): Internal.Map<string, Internal.List<string>>;
        get expiration(): number;
        get lastModified(): number;
        get outputStream(): Internal.OutputStream;
        get contentType(): string;
        set doOutput(arg0: boolean);
        set defaultUseCaches(arg0: boolean);
        set defaultAllowUserInteraction(arg0: boolean);
        set useCaches(arg0: boolean);
        set readTimeout(arg0: number);
        set connectTimeout(arg0: number);
        set fileNameMap(arg0: Internal.FileNameMap_);
        set ifModifiedSince(arg0: number);
        set doInput(arg0: boolean);
        set contentHandlerFactory(arg0: Internal.ContentHandlerFactory_);
        set allowUserInteraction(arg0: boolean);
    }
    type URLConnection_ = URLConnection;
    interface JsonSerializer <T> {
        serialize(arg0: T, arg1: Internal.Type, arg2: Internal.JsonSerializationContext): Internal.JsonElement;
        (arg0: T, arg1: Internal.Type, arg2: Internal.JsonSerializationContext): Internal.JsonElement;
    }
    type JsonSerializer_<T> = ((arg0: T, arg1: Internal.Type, arg2: Internal.JsonSerializationContext)=>Internal.JsonElement) | JsonSerializer<T>;
    interface NonNullSupplier <T> {
        get(): T;
        (): T;
    }
    type NonNullSupplier_<T> = (()=>T) | NonNullSupplier<T>;
    interface Future <V> extends java_.util.concurrent.Future<V> {
        cancel(arg0: boolean): boolean;
        removeListeners(...arg0: Internal.GenericFutureListener<Internal.Future<V>>[]): Internal.Future<V>;
        syncUninterruptibly(): Internal.Future<V>;
        isCancellable(): boolean;
        getNow(): V;
        await(): Internal.Future<V>;
        await(arg0: number, arg1: Internal.TimeUnit_): boolean;
        await(arg0: number): boolean;
        cause(): Internal.Throwable;
        awaitUninterruptibly(arg0: number): boolean;
        awaitUninterruptibly(): Internal.Future<V>;
        awaitUninterruptibly(arg0: number, arg1: Internal.TimeUnit_): boolean;
        removeListener(arg0: Internal.GenericFutureListener_<Internal.Future_<V>>): Internal.Future<V>;
        addListeners(...arg0: Internal.GenericFutureListener<Internal.Future<V>>[]): Internal.Future<V>;
        sync(): Internal.Future<V>;
        isSuccess(): boolean;
        addListener(arg0: Internal.GenericFutureListener_<Internal.Future_<V>>): Internal.Future<V>;
    }
    type Future_<V> = Future<V>;
    interface IForgePacketBuffer {
        readRegistryIdSafe<T>(arg0: Internal.Class<T>): T;
        readRegistryId<T>(): T;
        getBuffer(): Internal.PacketBuffer;
        readFluidStack(): Internal.FluidStack;
        writeRegistryId<T>(arg0: T): void;
        readRegistryIdUnsafe<T>(arg0: Internal.IForgeRegistry<T>): T;
        writeFluidStack(arg0: Internal.FluidStack): void;
        writeRegistryIdUnsafe(arg0: Internal.IForgeRegistry<any>, arg1: ResourceLocation_): void;
        writeRegistryIdUnsafe<T>(arg0: Internal.IForgeRegistry<T>, arg1: T): void;
    }
    type IForgePacketBuffer_ = IForgePacketBuffer;
    interface IShowsRecipeFocuses {
        canSetFocusWithMouse(): boolean;
        getIngredientUnderMouse(arg0: number, arg1: number): Internal.IClickedIngredient<any>;
    }
    type IShowsRecipeFocuses_ = IShowsRecipeFocuses;
    interface IMajorConstellation extends Internal.IWeakConstellation {
    }
    type IMajorConstellation_ = IMajorConstellation;
    interface PointFreeRule {
        rewriteOrNop<A, B>(arg0: Internal.View<A, B>): Internal.View<A, B>;
        rewriteOrNop<A>(arg0: com.mojang.datafixers.types.Type<A>, arg1: Internal.PointFree<A>): Internal.PointFree<A>;
        rewrite<A>(arg0: com.mojang.datafixers.types.Type<A>, arg1: Internal.PointFree<A>): Internal.Optional<Internal.PointFree<A>>;
        rewrite<A, B>(arg0: Internal.View<A, B>): Internal.Optional<Internal.View<A, B>>;
        (arg0: com.mojang.datafixers.types.Type<A>, arg1: Internal.PointFree<A>): Internal.Optional<Internal.PointFree<A>>;
    }
    type PointFreeRule_ = ((arg0: com.mojang.datafixers.types.Type<A>, arg1: Internal.PointFree<A>)=>Internal.Optional<Internal.PointFree<A>>) | PointFreeRule;
    abstract class AbstractInterruptibleChannel extends Document.Object implements java_.nio.channels.Channel, Internal.InterruptibleChannel {
        isOpen(): boolean;
        close(): void;
        get open(): boolean;
    }
    type AbstractInterruptibleChannel_ = AbstractInterruptibleChannel;
    interface PlayerUtils$ConnectionAccess {
        setFloatingTickCount(ticks: number): void;
        setClientIsFloating(arg0: boolean): void;
        setFloating(shouldFloat: boolean): void;
        setAboveGroundTickCount(arg0: number): void;
    }
    type PlayerUtils$ConnectionAccess_ = PlayerUtils$ConnectionAccess;
    class PreLoadWorldEvent extends net.minecraftforge.eventbus.api.Event {
        readonly worldName: string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor();
    }
    type PreLoadWorldEvent_ = PreLoadWorldEvent;
    interface IChunkTimeSave {
        getNextSaveTime(): number;
        setSaveTimePoint(arg0: number): void;
    }
    type IChunkTimeSave_ = IChunkTimeSave;
    class DataPackEventJS extends Internal.ServerEventJS {
        add(id: ResourceLocation_, content: string): void;
        addJson(id: ResourceLocation_, json: any): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(d: any);
    }
    type DataPackEventJS_ = DataPackEventJS;
    abstract class ChannelHandlerAdapter extends Document.Object implements Internal.ChannelHandler {
        exceptionCaught(arg0: Internal.ChannelHandlerContext, arg1: Internal.Throwable): void;
        handlerAdded(arg0: Internal.ChannelHandlerContext): void;
        isSharable(): boolean;
        handlerRemoved(arg0: Internal.ChannelHandlerContext): void;
        get sharable(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ChannelHandlerAdapter_ = ChannelHandlerAdapter;
    class OpList extends Internal.UserList<Internal.GameProfile, Internal.OpEntry> {
        func_183026_b(arg0: Internal.GameProfile): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File);
    }
    type OpList_ = OpList;
    class ChunkRenderContainer <T> extends Document.Object {
        getChunkPos(): Internal.SectionPos;
        shouldRebuildForTranslucents(): boolean;
        getSquaredDistanceXZ(x: number, z: number): number;
        getGraphicsStates(): T[];
        getId(): number;
        setGraphicsState(pass: Internal.BlockRenderPass_, state: T): void;
        delete(): void;
        getBounds(): Internal.ChunkRenderBounds;
        isOutsideFrustum(frustum: Internal.FrustumExtended_): boolean;
        scheduleSort(important: boolean): boolean;
        setId(id: number): void;
        getOriginY(): number;
        getOriginX(): number;
        getData(): Internal.ChunkRenderData;
        getOriginZ(): number;
        canRebuild(): boolean;
        needsRebuild(): boolean;
        getGraphicsState(pass: Internal.BlockRenderPass_): T;
        getRenderZ(): number;
        getRenderOrigin(): BlockPos;
        getSquaredDistance(x: number, y: number, z: number): number;
        setData(info: Internal.ChunkRenderData): void;
        getRenderX(): number;
        getRenderY(): number;
        isEmpty(): boolean;
        tick(): void;
        isTickable(): boolean;
        needsSort(): boolean;
        needsImportantRebuild(): boolean;
        scheduleRebuild(important: boolean): boolean;
        getChunkZ(): number;
        getChunkY(): number;
        getChunkX(): number;
        cancelRebuildTask(): void;
        setRebuildForTranslucents(flag: boolean): void;
        getFacesWithData(): number;
        get originZ(): number;
        get tickable(): boolean;
        get graphicsStates(): T[];
        get chunkPos(): Internal.SectionPos;
        get data(): Internal.ChunkRenderData;
        get originX(): number;
        get originY(): number;
        get chunkX(): number;
        get facesWithData(): number;
        get chunkY(): number;
        get chunkZ(): number;
        get empty(): boolean;
        get bounds(): Internal.ChunkRenderBounds;
        get renderZ(): number;
        get id(): number;
        get renderX(): number;
        get renderOrigin(): BlockPos;
        get renderY(): number;
        set data(info: Internal.ChunkRenderData);
        set id(id: number);
        set rebuildForTranslucents(flag: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(backend: Internal.ChunkRenderBackend<T>, worldRenderer: Internal.SodiumWorldRenderer, chunkX: number, chunkY: number, chunkZ: number, column: any);
    }
    type ChunkRenderContainer_<T> = ChunkRenderContainer<T>;
    class AdvancementRewards extends Document.Object {
        func_200286_b(): Internal.JsonElement;
        func_192113_a(arg0: Internal.ServerPlayerEntity): void;
        static func_241096_a_(arg0: Internal.JsonObject): Internal.AdvancementRewards;
        readonly field_192115_b: number;
        readonly field_193129_e: Internal.FunctionObject$CacheableFunction;
        static readonly field_192114_a: Internal.AdvancementRewards;
        readonly field_192117_d: ResourceLocation[];
        readonly field_192116_c: ResourceLocation[];
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: ResourceLocation[], arg2: ResourceLocation[], arg3: Internal.FunctionObject$CacheableFunction);
    }
    type AdvancementRewards_ = AdvancementRewards;
    class VillagerBabiesSensor extends Internal.Sensor<Internal.LivingEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type VillagerBabiesSensor_ = VillagerBabiesSensor;
    interface ItemKJS {
        setFoodPropertiesKJS(arg0: Internal.Food): void;
        setFireResistantKJS(arg0: boolean): void;
        setCraftingRemainderKJS(arg0: Internal.Item_): void;
        setMaxDamageKJS(arg0: number): void;
        setItemBuilderKJS(arg0: Internal.ItemBuilder): void;
        setBurnTimeKJS(arg0: number): void;
        setRarityKJS(arg0: Internal.Rarity_): void;
        getItemBuilderKJS(): Internal.ItemBuilder;
        setMaxStackSizeKJS(arg0: number): void;
    }
    type ItemKJS_ = ItemKJS;
    class TreeExtractorBoostRecipeJS extends Internal.ThermalRecipeJS {
        boostMod(arg0: number): Internal.TreeExtractorBoostRecipeJS;
        cycles(arg0: number): Internal.TreeExtractorBoostRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TreeExtractorBoostRecipeJS_ = TreeExtractorBoostRecipeJS;
    class ConditionArraySerializer extends Document.Object {
        func_235681_a_(arg0: Internal.ILootCondition[]): Internal.JsonElement;
        static readonly field_235679_a_: Internal.ConditionArraySerializer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ConditionArraySerializer_ = ConditionArraySerializer;
    abstract class GameRules$RuleValue <T> extends Document.Object {
        func_223557_c(): number;
        func_230313_a_(arg0: T, arg1: Internal.MinecraftServer): void;
        func_223554_b(arg0: Internal.CommandContext<Internal.CommandSource>, arg1: string): void;
        func_223552_b(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.GameRules$RuleType<T>);
    }
    type GameRules$RuleValue_<T> = GameRules$RuleValue<T>;
    interface Type {
        getTypeName(): string;
    }
    type Type_ = Type;
    class Schedule extends Internal.ForgeRegistryEntry<Internal.Schedule> {
        func_221377_a(arg0: number): Internal.Activity;
        setRegistryName(arg0: ResourceLocation_): any;
        static readonly field_221386_d: Internal.Schedule;
        static readonly field_221385_c: Internal.Schedule;
        static readonly field_221384_b: Internal.Schedule;
        static readonly field_221383_a: Internal.Schedule;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Schedule_ = Registry.minecraft.schedule | Schedule;
    class ClientLoggedInEventJS extends Internal.ClientEventJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ClientLoggedInEventJS_ = ClientLoggedInEventJS;
    interface FilterInfo {
        pop(): void;
        add(arg0: Internal.ITextComponent_): void;
        push(): void;
    }
    type FilterInfo_ = FilterInfo;
    class Property$ValuePair <T> extends Document.Object {
        func_240181_a_(): Internal.Property<T>;
        func_241493_b_(): T;
    }
    type Property$ValuePair_<T> = Property$ValuePair<T>;
    abstract class ForwardingList <E> extends Internal.ForwardingCollection<E> implements Internal.List<E> {
        add(arg0: number, arg1: E): void;
        subList(arg0: number, arg1: number): Internal.List<E>;
        set(arg0: number, arg1: E): E;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        sort(arg0: Internal.Comparator<E>): void;
        removeLast(): E;
        getLast(): E;
        replaceAll(arg0: Internal.UnaryOperator<E>): void;
        remove(arg0: number): E;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        addLast(arg0: E): void;
        lastIndexOf(arg0: any): number;
        stream(): Internal.Stream<E>;
        addAll(arg0: number, arg1: Internal.Collection<E>): boolean;
        getFirst(): E;
        removeFirst(): E;
        get(arg0: number): E;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        listIterator(arg0: number): Internal.ListIterator<E>;
        listIterator(): Internal.ListIterator<E>;
        parallelStream(): Internal.Stream<E>;
        indexOf(arg0: any): number;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<E>;
        addFirst(arg0: E): void;
        get last(): E;
        get first(): E;
    }
    type ForwardingList_<E> = ForwardingList<E>;
    abstract class CompressorHolder extends Document.Object implements Internal.Compressable {
        keys<T_>(arg0: Internal.DynamicOps<T_>): Internal.Stream<T_>;
        compressor<T_>(arg0: Internal.DynamicOps<T_>): Internal.KeyCompressor<T_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CompressorHolder_ = CompressorHolder;
    interface ICommandSource {
        func_145747_a(arg0: Internal.ITextComponent_, arg1: Internal.UUID): void;
        func_195039_a(): boolean;
        func_195041_r_(): boolean;
        func_195040_b(): boolean;
    }
    type ICommandSource_ = ICommandSource;
    class IBellConnection$BellConnection extends Internal.Enum<Internal.IBellConnection$BellConnection> implements Internal.IStringSerializable {
        isRope(): boolean;
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.IBellConnection$BellConnection;
        static values(): Internal.IBellConnection$BellConnection[];
        isEmpty(): boolean;
        isChain(): boolean;
        static readonly CHAIN: Internal.IBellConnection$BellConnection;
        static readonly ROPE: Internal.IBellConnection$BellConnection;
        static readonly NONE: Internal.IBellConnection$BellConnection;
        get chain(): boolean;
        get rope(): boolean;
        get empty(): boolean;
    }
    type IBellConnection$BellConnection_ = "none" | "chain" | "rope" | IBellConnection$BellConnection;
    interface LongSet extends Internal.LongCollection, Internal.Set<number> {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.LongIterator;
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        remove(arg0: number): boolean;
    }
    type LongSet_ = LongSet;
    abstract class GuiScreenEvent$KeyboardKeyPressedEvent extends Internal.GuiScreenEvent$KeyboardKeyEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number);
        constructor();
    }
    type GuiScreenEvent$KeyboardKeyPressedEvent_ = GuiScreenEvent$KeyboardKeyPressedEvent;
    class NetworkEventJS extends Internal.PlayerEventJS {
        getChannel(): string;
        getData(): Internal.CompoundNBT;
        get data(): Internal.CompoundNBT;
        get channel(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(p: Internal.PlayerEntity, c: string, d: Internal.CompoundNBT);
    }
    type NetworkEventJS_ = NetworkEventJS;
    interface INamespacedNBTReadOnly {
        getCompound(arg0: ResourceLocation_): Internal.CompoundNBT;
        getInt(arg0: ResourceLocation_): number;
        contains(arg0: ResourceLocation_, arg1: number): boolean;
        get<T>(arg0: ResourceLocation_, arg1: Internal.BiFunction_<Internal.CompoundNBT_, string, T>): T;
        get(arg0: ResourceLocation_): Internal.INBT;
        getBoolean(arg0: ResourceLocation_): boolean;
        getString(arg0: ResourceLocation_): string;
        getFloat(arg0: ResourceLocation_): number;
    }
    type INamespacedNBTReadOnly_ = INamespacedNBTReadOnly;
    class StructureDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_223454_a(arg0: Internal.MutableBoundingBox, arg1: Internal.List<Internal.MutableBoundingBox>, arg2: Internal.List<boolean>, arg3: Internal.DimensionType): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type StructureDebugRenderer_ = StructureDebugRenderer;
    class Cipher extends Document.Object {
        static getMaxAllowedParameterSpec(arg0: string): Internal.AlgorithmParameterSpec;
        init(arg0: number, arg1: Internal.Key, arg2: Internal.AlgorithmParameters): void;
        init(arg0: number, arg1: Internal.Key, arg2: Internal.AlgorithmParameterSpec): void;
        init(arg0: number, arg1: Internal.Key, arg2: Internal.SecureRandom): void;
        init(arg0: number, arg1: Internal.Key): void;
        init(arg0: number, arg1: Internal.Key, arg2: Internal.AlgorithmParameterSpec, arg3: Internal.SecureRandom): void;
        init(arg0: number, arg1: Internal.Certificate): void;
        init(arg0: number, arg1: Internal.Certificate, arg2: Internal.SecureRandom): void;
        init(arg0: number, arg1: Internal.Key, arg2: Internal.AlgorithmParameters, arg3: Internal.SecureRandom): void;
        getAlgorithm(): string;
        update(arg0: number[], arg1: number, arg2: number, arg3: number[], arg4: number): number;
        update(arg0: number[], arg1: number, arg2: number, arg3: number[]): number;
        update(arg0: number[], arg1: number, arg2: number): number[];
        update(arg0: number[]): number[];
        update(arg0: Internal.ByteBuffer, arg1: Internal.ByteBuffer): number;
        getOutputSize(arg0: number): number;
        updateAAD(arg0: Internal.ByteBuffer): void;
        updateAAD(arg0: number[], arg1: number, arg2: number): void;
        updateAAD(arg0: number[]): void;
        doFinal(arg0: number[], arg1: number, arg2: number, arg3: number[]): number;
        doFinal(): number[];
        doFinal(arg0: number[], arg1: number, arg2: number, arg3: number[], arg4: number): number;
        doFinal(arg0: number[], arg1: number, arg2: number): number[];
        doFinal(arg0: number[]): number[];
        doFinal(arg0: number[], arg1: number): number;
        doFinal(arg0: Internal.ByteBuffer, arg1: Internal.ByteBuffer): number;
        static getMaxAllowedKeyLength(arg0: string): number;
        unwrap(arg0: number[], arg1: string, arg2: number): Internal.Key;
        getExemptionMechanism(): Internal.ExemptionMechanism;
        getBlockSize(): number;
        getIV(): number[];
        getParameters(): Internal.AlgorithmParameters;
        getProvider(): Internal.Provider;
        static getInstance(arg0: string): Internal.Cipher;
        static getInstance(arg0: string, arg1: Internal.Provider): Internal.Cipher;
        static getInstance(arg0: string, arg1: string): Internal.Cipher;
        wrap(arg0: Internal.Key): number[];
        static readonly WRAP_MODE: 3;
        static readonly UNWRAP_MODE: 4;
        static readonly ENCRYPT_MODE: 1;
        static readonly PUBLIC_KEY: 1;
        static readonly PRIVATE_KEY: 2;
        static readonly SECRET_KEY: 3;
        static readonly DECRYPT_MODE: 2;
        get provider(): Internal.Provider;
        get exemptionMechanism(): Internal.ExemptionMechanism;
        get iV(): number[];
        get parameters(): Internal.AlgorithmParameters;
        get blockSize(): number;
        get algorithm(): string;
    }
    type Cipher_ = Cipher;
    abstract class AbstractMap <K, V> extends Document.Object implements Internal.Map<K, V> {
        getOrDefault(arg0: any, arg1: V): V;
        entrySet(): Internal.Set<Internal.Map$Entry<K, V>>;
        forEach(arg0: Internal.BiConsumer_<K, V>): void;
        containsKey(arg0: any): boolean;
        computeIfAbsent(arg0: K, arg1: Internal.Function_<K, V>): V;
        values(): Internal.Collection<V>;
        replace(arg0: K, arg1: V, arg2: V): boolean;
        replace(arg0: K, arg1: V): V;
        isEmpty(): boolean;
        clear(): void;
        replaceAll(arg0: Internal.BiFunction_<K, V, V>): void;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        computeIfPresent(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        size(): number;
        merge(arg0: K, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        putAll(arg0: Internal.Map_<K, V>): void;
        get(arg0: any): V;
        putIfAbsent(arg0: K, arg1: V): V;
        keySet(): Internal.Set<K>;
        get empty(): boolean;
    }
    type AbstractMap_<K, V> = AbstractMap<K, V>;
    class GossipManager$GossipEntry extends Document.Object {
        func_220904_a(): number;
        func_234061_a_<T_>(arg0: Internal.DynamicOps<T_>): Internal.Dynamic<T_>;
        static func_234060_a_(arg0: Internal.Dynamic<any>): Internal.DataResult<Internal.GossipManager$GossipEntry>;
        readonly field_220907_a: Internal.UUID;
        readonly field_220909_c: number;
        readonly field_220908_b: Internal.GossipType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.UUID, arg1: Internal.GossipType, arg2: number);
    }
    type GossipManager$GossipEntry_ = GossipManager$GossipEntry;
    class AttachServerDataEvent extends Internal.AttachDataEvent<Internal.ServerJS> {
        invoke(): void;
        static readonly EVENT: me.shedaniel.architectury.event.Event<Internal.Consumer<Internal.AttachServerDataEvent>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(s: Internal.ServerJS);
    }
    type AttachServerDataEvent_ = AttachServerDataEvent;
    class AudioStreamBuffer extends Document.Object {
        func_216474_b(): void;
        func_216472_c(): Internal.OptionalInt;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ByteBuffer, arg1: Internal.AudioFormat);
    }
    type AudioStreamBuffer_ = AudioStreamBuffer;
    interface PalettedContainer$ICountConsumer <T> {
        accept(arg0: T, arg1: number): void;
        (arg0: T, arg1: number): void;
    }
    type PalettedContainer$ICountConsumer_<T> = ((arg0: T, arg1: number)=>void) | PalettedContainer$ICountConsumer<T>;
    interface IntPredicate {
        or(arg0: Internal.IntPredicate_): Internal.IntPredicate;
        test(arg0: number): boolean;
        and(arg0: Internal.IntPredicate_): Internal.IntPredicate;
        negate(): Internal.IntPredicate;
        (arg0: number): boolean;
    }
    type IntPredicate_ = ((arg0: number)=>boolean) | IntPredicate;
    class FillLayerConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_214637_b: Internal.BlockState;
        static readonly field_236537_a_: Internal.Codec<Internal.FillLayerConfig>;
        readonly field_214636_a: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.BlockState);
    }
    type FillLayerConfig_ = FillLayerConfig;
    class SimpleRegistry <T> extends Internal.MutableRegistry<T> {
        flatComapMap<S_>(arg0: Internal.Function_<T, S_>, arg1: Internal.Function_<S_, Internal.DataResult_<T>>): Internal.Codec<S_>;
        func_241874_a<V_>(arg0: Internal.OptionalInt, arg1: Internal.RegistryKey<T>, arg2: V_, arg3: Internal.Lifecycle): V_;
        dispatch<E_>(arg0: Internal.Function_<E_, T>, arg1: Internal.Function_<T, Internal.Codec_<E_>>): Internal.Codec<E_>;
        dispatch<E_>(arg0: string, arg1: Internal.Function_<E_, T>, arg2: Internal.Function_<T, Internal.Codec_<E_>>): Internal.Codec<E_>;
        deprecated(arg0: number): Internal.Codec<T>;
        handler$bip000$validateAndRegisterStart(arg0: Internal.OptionalInt, arg1: Internal.RegistryKey<any>, arg2: any, arg3: Internal.Lifecycle, arg4: Internal.CallbackInfoReturnable<any>): void;
        simple(): Internal.Decoder$Simple<T>;
        dispatchMap<E_>(arg0: Internal.Function_<E_, T>, arg1: Internal.Function_<T, Internal.Codec_<E_>>): Internal.MapCodec<E_>;
        dispatchMap<E_>(arg0: string, arg1: Internal.Function_<E_, T>, arg2: Internal.Function_<T, Internal.Codec_<E_>>): Internal.MapCodec<E_>;
        func_218381_a<V_>(arg0: Internal.RegistryKey<T>, arg1: V_, arg2: Internal.Lifecycle): V_;
        func_218382_a<V_>(arg0: number, arg1: Internal.RegistryKey<T>, arg2: V_, arg3: Internal.Lifecycle): V_;
        decode<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<Internal.Pair<T, T_>>;
        comapFlatMap<S_>(arg0: Internal.Function_<T, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, T>): Internal.Codec<S_>;
        func_239659_c_(): Internal.Set<Internal.Map$Entry<Internal.RegistryKey<T>, T>>;
        promotePartial(arg0: Internal.Consumer_<any>): Internal.Decoder<any>;
        promotePartial(arg0: Internal.Consumer_<string>): Internal.Codec<T>;
        iterator(): Internal.Iterator<T>;
        flatXmap<S_>(arg0: Internal.Function_<T, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, Internal.DataResult_<T>>): Internal.Codec<S_>;
        comap<B_>(arg0: Internal.Function_<B_, T>): Internal.Encoder<B_>;
        func_186801_a(arg0: Internal.Random): T;
        fieldOf(arg0: string): Internal.MapDecoder<any>;
        fieldOf(arg0: string): Internal.MapCodec<T>;
        fieldOf(arg0: string): Internal.MapEncoder<any>;
        listOf(): Internal.Codec<Internal.List<T>>;
        xmap<S_>(arg0: Internal.Function_<T, S_>, arg1: Internal.Function_<S_, T>): Internal.Codec<S_>;
        map<B_>(arg0: Internal.Function_<T, B_>): Internal.Decoder<B_>;
        encodeStart<T_>(arg0: Internal.DynamicOps<T_>, arg1: T): Internal.DataResult<T_>;
        optionalFieldOf(arg0: string, arg1: Internal.Lifecycle, arg2: T, arg3: Internal.Lifecycle): Internal.MapCodec<T>;
        optionalFieldOf(arg0: string, arg1: T): Internal.MapCodec<T>;
        optionalFieldOf(arg0: string, arg1: T, arg2: Internal.Lifecycle): Internal.MapCodec<T>;
        optionalFieldOf(arg0: string): Internal.MapCodec<Internal.Optional<T>>;
        func_230516_a_(arg0: Internal.RegistryKey<T>): T;
        flatComap<B_>(arg0: Internal.Function_<B_, Internal.DataResult_<T>>): Internal.Encoder<B_>;
        static func_243541_a<T_>(arg0: Internal.RegistryKey<Internal.Registry<T_>>, arg1: Internal.MapCodec<T_>): Internal.MapCodec<Internal.SimpleRegistry$Entry<T_>>;
        func_148745_a(arg0: number): T;
        spliterator(): Internal.Spliterator<T>;
        forEach(arg0: Internal.Consumer_<T>): void;
        partialDispatch<E_>(arg0: string, arg1: Internal.Function_<E_, Internal.DataResult_<T>>, arg2: Internal.Function_<T, Internal.DataResult_<Internal.Codec_<E_>>>): Internal.Codec<E_>;
        func_82594_a(arg0: ResourceLocation_): T;
        terminal(): Internal.Decoder$Terminal<T>;
        parse<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<T>;
        parse<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<T>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Codec<T>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Encoder<any>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Decoder<any>;
        orElse(arg0: T): Internal.Codec<T>;
        orElse(arg0: Internal.Consumer_<string>, arg1: T): Internal.Codec<T>;
        orElse(arg0: Internal.UnaryOperator<string>, arg1: T): Internal.Codec<T>;
        flatMap<B_>(arg0: Internal.Function_<T, Internal.DataResult_<B_>>): Internal.Decoder<B_>;
        boxed(): Internal.Decoder$Boxed<T>;
        static func_241745_c_<T_>(arg0: Internal.RegistryKey<Internal.Registry<T_>>, arg1: Internal.Lifecycle, arg2: Internal.Codec<T_>): Internal.Codec<Internal.SimpleRegistry<T_>>;
        dispatchStable<E_>(arg0: Internal.Function_<E_, T>, arg1: Internal.Function_<T, Internal.Codec_<E_>>): Internal.Codec<E_>;
        orElseGet(arg0: java_.util.function_.Supplier_<T>): Internal.Codec<T>;
        orElseGet(arg0: Internal.Consumer_<string>, arg1: java_.util.function_.Supplier_<T>): Internal.Codec<T>;
        orElseGet(arg0: Internal.UnaryOperator<string>, arg1: java_.util.function_.Supplier_<T>): Internal.Codec<T>;
        stable(): Internal.Codec<T>;
        mapResult(arg0: Internal.Codec$ResultFunction<T>): Internal.Codec<T>;
        func_230519_c_(arg0: T): Internal.Optional<Internal.RegistryKey<T>>;
        static func_243539_a<T_>(arg0: Internal.RegistryKey<Internal.Registry<T_>>, arg1: Internal.Lifecycle, arg2: Internal.Codec<T_>): Internal.Codec<Internal.SimpleRegistry<T_>>;
        static func_241744_b_<T_>(arg0: Internal.RegistryKey<Internal.Registry<T_>>, arg1: Internal.Lifecycle, arg2: Internal.Codec<T_>): Internal.Codec<Internal.SimpleRegistry<T_>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.RegistryKey<Internal.Registry<T>>, arg1: Internal.Lifecycle);
    }
    type SimpleRegistry_<T> = SimpleRegistry<T>;
    class PageAttributes$OriginType extends Internal.AttributeValue {
        static readonly PRINTABLE: Internal.PageAttributes$OriginType;
        static readonly PHYSICAL: Internal.PageAttributes$OriginType;
    }
    type PageAttributes$OriginType_ = PageAttributes$OriginType;
    class SlurryStack extends Internal.ChemicalStack<Internal.Slurry> {
        static readFromNBT(arg0: Internal.CompoundNBT_): Internal.SlurryStack;
        static readFromPacket(arg0: Internal.PacketBuffer): Internal.SlurryStack;
        copy(): Internal.SlurryStack;
        copy(): Internal.ChemicalStack<any>;
        static readonly EMPTY: Internal.SlurryStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ISlurryProvider, arg1: number);
        constructor(arg0: Internal.SlurryStack, arg1: number);
    }
    type SlurryStack_ = SlurryStack;
    class MetallurgicInfusingRecipeJS extends Internal.MekanismRecipeJS {
        infusionAmount: number;
        infusionTag: string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MetallurgicInfusingRecipeJS_ = MetallurgicInfusingRecipeJS;
    class PlayerAdvancements extends Document.Object {
        func_192750_a(arg0: Internal.Advancement, arg1: string): boolean;
        handler$cfc000$onAward(arg0: Internal.Advancement, arg1: string, arg2: Internal.CallbackInfoReturnable<any>, arg3: boolean): void;
        func_192749_b(): void;
        func_192739_a(arg0: Internal.ServerPlayerEntity): void;
        func_194220_a(arg0: Internal.Advancement): void;
        func_192747_a(arg0: Internal.Advancement): Internal.AdvancementProgress;
        constant$cgf000$visibility(arg0: number): number;
        func_192741_b(arg0: Internal.ServerPlayerEntity): void;
        func_192744_b(arg0: Internal.Advancement, arg1: string): boolean;
        func_192745_a(): void;
        func_240918_a_(arg0: Internal.AdvancementManager): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DataFixer, arg1: Internal.PlayerList, arg2: Internal.AdvancementManager, arg3: Internal.File, arg4: Internal.ServerPlayerEntity);
    }
    type PlayerAdvancements_ = PlayerAdvancements;
    class SoundHandler$Loader extends Document.Object {
        func_217946_a(arg0: Internal.Map_<ResourceLocation_, Internal.SoundEventAccessor_>, arg1: Internal.SoundEngine): void;
    }
    type SoundHandler$Loader_ = SoundHandler$Loader;
    class CSeenAdvancementsPacket$Action extends Internal.Enum<Internal.CSeenAdvancementsPacket$Action> {
        static valueOf(arg0: string): Internal.CSeenAdvancementsPacket$Action;
        static values(): Internal.CSeenAdvancementsPacket$Action[];
        static readonly OPENED_TAB: Internal.CSeenAdvancementsPacket$Action;
        static readonly CLOSED_SCREEN: Internal.CSeenAdvancementsPacket$Action;
    }
    type CSeenAdvancementsPacket$Action_ = "opened_tab" | "closed_screen" | CSeenAdvancementsPacket$Action;
    interface Path extends Internal.Comparable<Internal.Path>, Internal.Iterable<Internal.Path>, Internal.Watchable {
        getNameCount(): number;
        getParent(): Internal.Path;
        getName(arg0: number): Internal.Path;
        resolve(arg0: Internal.Path): Internal.Path;
        resolve(arg0: string): Internal.Path;
        resolveSibling(arg0: Internal.Path): Internal.Path;
        resolveSibling(arg0: string): Internal.Path;
        toUri(): Internal.URI;
        subpath(arg0: number, arg1: number): Internal.Path;
        toAbsolutePath(): Internal.Path;
        getFileSystem(): Internal.FileSystem;
        compareTo(arg0: Internal.Path): number;
        compareTo(arg0: any): number;
        iterator(): Internal.Iterator<Internal.Path>;
        hashCode(): number;
        normalize(): Internal.Path;
        equals(arg0: any): boolean;
        toFile(): Internal.File;
        toRealPath(...arg0: any[]): Internal.Path;
        endsWith(arg0: string): boolean;
        endsWith(arg0: Internal.Path): boolean;
        isAbsolute(): boolean;
        toString(): string;
        relativize(arg0: Internal.Path): Internal.Path;
        getRoot(): Internal.Path;
        getFileName(): Internal.Path;
        register(arg0: Internal.WatchService, arg1: Internal.WatchEvent$Kind<any>[], ...arg2: any[]): Internal.WatchKey;
        register(arg0: Internal.WatchService, ...arg1: Internal.WatchEvent$Kind<any>[]): Internal.WatchKey;
        startsWith(arg0: string): boolean;
        startsWith(arg0: Internal.Path): boolean;
    }
    type Path_ = Path;
    class CommandEvent extends net.minecraftforge.eventbus.api.Event {
        getException(): Internal.Throwable;
        getParseResults(): Internal.ParseResults<Internal.CommandSource>;
        setException(arg0: Internal.Throwable): void;
        setParseResults(arg0: Internal.ParseResults<Internal.CommandSource>): void;
        get exception(): Internal.Throwable;
        get parseResults(): Internal.ParseResults<Internal.CommandSource>;
        set exception(arg0: Internal.Throwable);
        set parseResults(arg0: Internal.ParseResults<Internal.CommandSource>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ParseResults<Internal.CommandSource>);
    }
    type CommandEvent_ = CommandEvent;
    class CharacterManager extends Document.Object {
        func_238353_a_(arg0: string, arg1: number, arg2: Internal.Style, arg3: boolean, arg4: Internal.CharacterManager$ISliceAcceptor_): void;
        func_238352_a_(arg0: string, arg1: number, arg2: Internal.Style): number;
        func_243242_a(arg0: Internal.ITextProperties, arg1: number, arg2: Internal.Style, arg3: Internal.BiConsumer_<Internal.ITextProperties_, boolean>): void;
        func_238358_a_(arg0: Internal.ITextProperties, arg1: number, arg2: Internal.Style): Internal.ITextProperties;
        func_238350_a_(arg0: string): number;
        static func_238351_a_(arg0: string, arg1: number, arg2: number, arg3: boolean): number;
        func_238357_a_(arg0: Internal.ITextProperties, arg1: number): Internal.Style;
        func_238356_a_(arg0: Internal.ITextProperties): number;
        func_243239_a(arg0: Internal.IReorderingProcessor_, arg1: number): Internal.Style;
        func_238364_c_(arg0: string, arg1: number, arg2: Internal.Style): string;
        func_238365_g_(arg0: string, arg1: number, arg2: Internal.Style): Internal.List<Internal.ITextProperties>;
        func_243238_a(arg0: Internal.IReorderingProcessor_): number;
        func_238361_b_(arg0: string, arg1: number, arg2: Internal.Style): string;
        func_238362_b_(arg0: Internal.ITextProperties, arg1: number, arg2: Internal.Style): Internal.List<Internal.ITextProperties>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
    }
    type CharacterManager_ = CharacterManager;
    class RuntimeException extends Internal.Exception {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Throwable);
        constructor(arg0: string, arg1: Internal.Throwable);
        constructor(arg0: string);
        constructor();
    }
    type RuntimeException_ = RuntimeException;
    class Team$Visible extends Internal.Enum<Internal.Team$Visible> {
        func_197910_b(): Internal.ITextComponent;
        static valueOf(arg0: string): Internal.Team$Visible;
        static func_178824_a(arg0: string): Internal.Team$Visible;
        static values(): Internal.Team$Visible[];
        readonly field_178830_e: string;
        static readonly HIDE_FOR_OTHER_TEAMS: Internal.Team$Visible;
        static readonly NEVER: Internal.Team$Visible;
        readonly field_178827_f: number;
        static readonly ALWAYS: Internal.Team$Visible;
        static readonly HIDE_FOR_OWN_TEAM: Internal.Team$Visible;
    }
    type Team$Visible_ = "always" | "never" | "hide_for_other_teams" | "hide_for_own_team" | Team$Visible;
    class Template$EntityInfo extends Document.Object {
        readonly field_186247_a: Vec3;
        readonly field_186248_b: BlockPos;
        readonly field_186249_c: Internal.CompoundNBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Vec3, arg1: BlockPos, arg2: Internal.CompoundNBT);
    }
    type Template$EntityInfo_ = Template$EntityInfo;
    class TemplateManager extends Document.Object implements Internal.TemplateManagerAccessor {
        repurposedstructures_getResourceManager(): Internal.IResourceManager;
        func_209509_a(arg0: ResourceLocation_, arg1: string): Internal.Path;
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_200220_a(arg0: ResourceLocation_): Internal.Template;
        func_200219_b(arg0: ResourceLocation_): Internal.Template;
        func_227458_a_(arg0: Internal.CompoundNBT_): Internal.Template;
        func_195429_b(arg0: ResourceLocation_): boolean;
        func_189941_a(arg0: ResourceLocation_): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IResourceManager, arg1: Internal.SaveFormat$LevelSave, arg2: Internal.DataFixer);
    }
    type TemplateManager_ = TemplateManager;
    class EndSpikeFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_214669_a(): boolean;
        func_214668_c(): BlockPos;
        func_214671_b(): Internal.List<Internal.EndSpikeFeature$EndSpike>;
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236644_a_: Internal.Codec<Internal.EndSpikeFeatureConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean, arg1: Internal.List<Internal.EndSpikeFeature$EndSpike>, arg2: BlockPos);
    }
    type EndSpikeFeatureConfig_ = EndSpikeFeatureConfig;
    class SWorldSpawnChangedPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_244313_c(): number;
        func_240832_b_(): BlockPos;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: BlockPos, arg1: number);
    }
    type SWorldSpawnChangedPacket_ = SWorldSpawnChangedPacket;
    class GuiContainerEvent extends net.minecraftforge.eventbus.api.Event {
        getGuiContainer(): Internal.ContainerScreen<any>;
        get guiContainer(): Internal.ContainerScreen<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ContainerScreen<any>);
    }
    type GuiContainerEvent_ = GuiContainerEvent;
    interface ThreadFactory {
        newThread(arg0: Internal.Runnable_): Internal.Thread;
        (arg0: Internal.Runnable): Internal.Thread;
    }
    type ThreadFactory_ = ((arg0: Internal.Runnable)=>Internal.Thread) | ThreadFactory;
    class GlyphJustificationInfo extends Document.Object {
        readonly growRightLimit: number;
        static readonly PRIORITY_WHITESPACE: 1;
        readonly shrinkLeftLimit: number;
        readonly weight: number;
        readonly shrinkRightLimit: number;
        readonly shrinkAbsorb: boolean;
        readonly growPriority: number;
        static readonly PRIORITY_KASHIDA: 0;
        readonly growAbsorb: boolean;
        static readonly PRIORITY_NONE: 3;
        readonly growLeftLimit: number;
        static readonly PRIORITY_INTERCHAR: 2;
        readonly shrinkPriority: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: boolean, arg6: number, arg7: number, arg8: number);
    }
    type GlyphJustificationInfo_ = GlyphJustificationInfo;
    class SlotModifiersUpdatedEvent extends Internal.LivingEvent {
        getTypes(): Internal.Set<string>;
        get types(): Internal.Set<string>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.Set<string>);
    }
    type SlotModifiersUpdatedEvent_ = SlotModifiersUpdatedEvent;
    class RenderState$BooleanState extends Internal.RenderState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Runnable, arg2: Internal.Runnable, arg3: boolean);
    }
    type RenderState$BooleanState_ = RenderState$BooleanState;
    interface IIntArray {
        func_221476_a(arg0: number): number;
        func_221477_a(arg0: number, arg1: number): void;
        func_221478_a(): number;
    }
    type IIntArray_ = IIntArray;
    class Minecraft$PackManager extends Document.Object implements Internal.AutoCloseable {
        func_238225_b_(): Internal.DataPackRegistries;
        func_238226_c_(): Internal.IServerConfiguration;
        close(): void;
        func_238224_a_(): Internal.ResourcePackList;
    }
    type Minecraft$PackManager_ = Minecraft$PackManager;
    interface ChunkMixin extends Internal.ExtendedChunk {
    }
    type ChunkMixin_ = ChunkMixin;
    class LandingPhase extends Internal.Phase {
        func_188652_i(): Internal.PhaseType<Internal.LandingPhase>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type LandingPhase_ = LandingPhase;
    interface CommandSourceStackAccess {
        getSource(): Internal.ICommandSource;
        (): Internal.ICommandSource;
    }
    type CommandSourceStackAccess_ = (()=>Internal.ICommandSource) | CommandSourceStackAccess;
    abstract class LivingEntity extends Internal.Entity implements Internal.ICitadelDataEntity, Internal.LivingEntityAccessor, Internal.ExpInvokerMixin, Internal.LivingEntityKJS, Internal.AccessorLivingEntity {
        func_110142_aN(): Internal.CombatTracker;
        func_233626_a_(arg0: number, arg1: boolean, arg2: Vec3): Vec3;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        setCitadelEntityData(arg0: Internal.CompoundNBT_): void;
        func_213339_cH(): Internal.BlockState;
        func_184587_cr(): boolean;
        func_204803_n(arg0: number): void;
        func_213353_d(arg0: Internal.ItemStack): Internal.SoundEvent;
        func_184599_cB(): number;
        func_213357_a(arg0: Internal.World, arg1: Internal.ItemStack): Internal.ItemStack;
        func_71001_a(arg0: Internal.Entity, arg1: number): void;
        func_230297_ef_(): Internal.ImmutableList<Internal.Pose>;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213369_d(arg0: BlockPos): void;
        func_193076_bZ(): Internal.Map<Internal.Effect, Internal.EffectInstance>;
        func_233629_a_(arg0: Internal.LivingEntity, arg1: boolean): void;
        func_184612_cw(): number;
        func_189748_bU(): Internal.DamageSource;
        func_70631_g_(): boolean;
        func_190631_cK(): boolean;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_184613_cA(): boolean;
        func_191987_a(arg0: BlockPos, arg1: boolean): void;
        func_213361_c(arg0: EquipmentSlot_): void;
        handler$cme000$preventWaterSlowdown(arg0: Internal.CallbackInfoReturnable<any>): void;
        func_213365_e(arg0: Internal.ItemStack): boolean;
        func_213342_e(arg0: BlockPos): void;
        func_70688_c(arg0: Internal.EffectInstance): void;
        func_205015_b(arg0: number): number;
        func_233637_b_(arg0: net.minecraft.entity.ai.attributes.Attribute_): number;
        func_213374_dv(): Internal.Optional<BlockPos>;
        getCitadelEntityData(): Internal.CompoundNBT;
        func_70604_c(arg0: Internal.LivingEntity): void;
        func_230490_cK_(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT_): void;
        func_184611_a(arg0: Hand_, arg1: Internal.ItemStack): void;
        an_shouldDropExperience(): boolean;
        func_184591_cq(): Internal.HandSide;
        func_233644_dn_(): Internal.Optional<BlockPos>;
        func_70608_bn(): boolean;
        func_213373_a(arg0: number, arg1: number, arg2: number, arg3: boolean): boolean;
        func_70662_br(): boolean;
        func_184600_cs(): Hand;
        func_142013_aG(): number;
        func_213358_a(arg0: Internal.EntityType_<any>): boolean;
        func_213343_cS(): number;
        func_184585_cz(): boolean;
        func_70659_e(arg0: number): void;
        func_70636_d(): void;
        static func_233639_cI_(): Internal.AttributeModifierMap$MutableAttribute;
        redirect$blf002$elytraOverride(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        func_70678_g(arg0: number): number;
        func_184601_bQ(arg0: Internal.DamageSource_): Internal.SoundEvent;
        static func_242288_h(arg0: Vec3): Vec3;
        func_213332_m(arg0: number): void;
        func_184596_c(arg0: Internal.Effect_): Internal.EffectInstance;
        curePotionEffects(arg0: Internal.ItemStack): boolean;
        func_233631_a_(arg0: Internal.Item_): boolean;
        getEntity(): Internal.Entity;
        func_230246_e_(arg0: Internal.PlayerEntity): void;
        func_213336_c(arg0: Internal.LivingEntity): boolean;
        func_233634_a_(arg0: Internal.Predicate_<Internal.Item_>): boolean;
        func_70648_aU(): boolean;
        func_226292_a_(arg0: Hand_, arg1: boolean): void;
        shouldRiderFaceForward(arg0: Internal.PlayerEntity): boolean;
        modify$bcc000$_caelus_setFlag(arg0: boolean): boolean;
        func_110148_a(arg0: net.minecraft.entity.ai.attributes.Attribute_): Internal.ModifiableAttributeInstance;
        func_213376_dz(): Internal.Direction;
        func_70685_l(arg0: Internal.Entity): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_82166_i(): number;
        func_213346_cF(): ResourceLocation;
        func_85035_bI(): number;
        func_184615_bR(): Internal.SoundEvent;
        func_85034_r(arg0: number): void;
        func_195064_c(arg0: Internal.EffectInstance): boolean;
        func_204801_a(arg0: Internal.AxisAlignedBB, arg1: Internal.AxisAlignedBB): void;
        func_190630_a(arg0: EquipmentSlot_): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_184597_cx(): void;
        func_213355_cm(): number;
        func_184602_cy(): void;
        func_142015_aE(): number;
        func_213366_dy(): void;
        func_184583_d(arg0: Internal.DamageSource_): boolean;
        handler$bkm000$resourcefulbeesBaseTick(arg0: Internal.CallbackInfo): void;
        func_70668_bt(): Internal.CreatureAttribute;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_184609_a(arg0: Hand_): void;
        func_70637_d(arg0: boolean): void;
        func_70652_k(arg0: Internal.Entity): boolean;
        func_233643_dh_(): boolean;
        func_226297_df_(): number;
        func_184614_ca(): Internal.ItemStack;
        func_70606_j(arg0: number): void;
        func_233646_e_(arg0: Internal.EffectInstance): void;
        func_184605_cv(): number;
        func_70689_ay(): number;
        redirect$blf000$eytraValidOverride(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): boolean;
        func_70670_a(arg0: Internal.EffectInstance): void;
        func_110139_bj(): number;
        func_213344_a(arg0: Internal.LivingEntity, arg1: Internal.EntityPredicate): boolean;
        func_70681_au(): Internal.Random;
        func_233645_dx_(): Internal.AttributeModifierManager;
        func_152112_bu(): void;
        func_70643_av(): Internal.LivingEntity;
        canRiderInteract(): boolean;
        func_184592_cb(): Internal.ItemStack;
        func_184603_cC(): boolean;
        func_213356_f(arg0: Internal.ItemStack): Internal.ItemStack;
        func_110143_aJ(): number;
        func_70644_a(arg0: Internal.Effect_): boolean;
        func_70651_bq(): Internal.Collection<Internal.EffectInstance>;
        func_233638_c_(arg0: net.minecraft.entity.ai.attributes.Attribute_): number;
        func_110149_m(arg0: number): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_70654_ax(): number;
        shouldRiderSit(): boolean;
        func_94060_bK(): Internal.LivingEntity;
        func_195063_d(arg0: Internal.Effect_): boolean;
        func_110138_aP(): number;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_70617_f_(): boolean;
        callJumpInLiquid(arg0: Internal.ITag<any>): void;
        func_70658_aO(): number;
        func_213340_A(arg0: Internal.Entity): number;
        an_getExperienceReward(arg0: Internal.PlayerEntity): number;
        func_184586_b(arg0: Hand_): Internal.ItemStack;
        func_233648_f_(arg0: Internal.Pose_): Internal.AxisAlignedBB;
        func_70660_b(arg0: Internal.Effect_): Internal.EffectInstance;
        func_233630_a_(arg0: Internal.ItemEntity): void;
        func_152111_bt(): void;
        func_213352_e(arg0: Vec3): void;
        func_130011_c(arg0: Internal.Entity): void;
        static func_184593_a(arg0: Internal.Collection<Internal.EffectInstance>): boolean;
        func_70691_i(arg0: number): void;
        func_70695_b(arg0: Internal.EffectInstance, arg1: boolean): void;
        func_233633_a_(arg0: Vec3, arg1: number): Vec3;
        func_110144_aD(): Internal.LivingEntity;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        func_195061_cb(): boolean;
        func_70613_aW(): boolean;
        setActiveItemStackUseCount(arg0: number): void;
        func_233627_a_(arg0: number, arg1: number, arg2: number): void;
        func_204805_cN(): boolean;
        func_226300_q_(arg0: number): void;
        isMultipartEntity(): boolean;
        func_184598_c(arg0: Hand_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_213375_cj(): Internal.Brain<any>;
        func_184607_cu(): Internal.ItemStack;
        func_230270_dK_(): boolean;
        asKJS(): any;
        func_213334_d(arg0: Hand_): void;
        func_230285_a_(arg0: Internal.Fluid_): boolean;
        func_70687_e(arg0: Internal.EffectInstance): boolean;
        func_184582_a(arg0: EquipmentSlot_): Internal.ItemStack;
        func_70645_a(arg0: Internal.DamageSource_): void;
        func_213281_b(arg0: Internal.CompoundNBT_): void;
        func_230491_ea_(): boolean;
        func_213372_dw(): void;
        field_184617_aD: number;
        field_70721_aZ: number;
        field_70760_ar: number;
        field_204807_bs: number;
        field_70720_be: number;
        field_70747_aH: number;
        field_226290_au_: number;
        field_184620_bC: BlockPos;
        field_70703_bu: boolean;
        static readonly field_184634_g: Internal.DataParameter<boolean>;
        readonly field_70771_an: number;
        static readonly field_184633_f: Internal.DataParameter<number>;
        field_70701_bs: number;
        field_110158_av: number;
        field_70717_bb: Internal.PlayerEntity;
        static readonly field_184632_c: Internal.DataParameter<number>;
        field_70758_at: number;
        field_70738_aO: number;
        field_70732_aI: number;
        field_184619_aG: number;
        field_70761_aq: number;
        field_110153_bc: number;
        field_82175_bq: boolean;
        readonly field_70769_ao: number;
        field_70752_e: boolean;
        field_191988_bg: number;
        field_70725_aQ: number;
        field_70702_br: number;
        field_70718_bc: number;
        readonly field_70770_ap: number;
        field_70759_as: number;
        field_70739_aP: number;
        field_70737_aN: number;
        field_184622_au: Hand;
        field_184618_aE: number;
        field_70733_aJ: number;
        get citadelEntityData(): Internal.CompoundNBT;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        set activeItemStackUseCount(arg0: number);
        set citadelEntityData(arg0: Internal.CompoundNBT_);
    }
    type LivingEntity_ = LivingEntity;
    class FontResourceManager extends Document.Object implements Internal.AutoCloseable, Internal.FontResourceManagerAccess {
        getFontSets(): Internal.Map<any, any>;
        func_238548_a_(): Internal.FontRenderer;
        func_238551_a_(arg0: Internal.Map_<ResourceLocation_, ResourceLocation_>): void;
        func_216884_a(): Internal.IFutureReloadListener;
        close(): void;
        static readonly field_238544_a_: ResourceLocation;
        readonly field_238546_d_: Internal.Map<ResourceLocation, net.minecraft.client.gui.fonts.Font>;
        get fontSets(): Internal.Map<any, any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TextureManager);
    }
    type FontResourceManager_ = FontResourceManager;
    abstract class AbstractObjectList <K> extends Internal.AbstractObjectCollection<K> implements Internal.ObjectList<K>, Internal.Stack<K> {
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.List<K>): number;
        removeLast(): K;
        getLast(): K;
        replaceAll(arg0: Internal.UnaryOperator<K>): void;
        remove(arg0: number): K;
        pop(): K;
        addLast(arg0: K): void;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.ObjectListIterator<K>;
        iterator(): Internal.ObjectIterator<any>;
        top(): K;
        stream(): Internal.Stream<K>;
        getFirst(): K;
        addElements(arg0: number, arg1: K[]): void;
        addElements(arg0: number, arg1: K[], arg2: number, arg3: number): void;
        removeFirst(): K;
        get(arg0: number): K;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<K>;
        indexOf(arg0: any): number;
        add(arg0: number, arg1: K): void;
        subList(arg0: number, arg1: number): Internal.ObjectList<K>;
        subList(arg0: number, arg1: number): Internal.List<any>;
        set(arg0: number, arg1: K): K;
        spliterator(): Internal.Spliterator<K>;
        forEach(arg0: Internal.Consumer_<K>): void;
        sort(arg0: Internal.Comparator<K>): void;
        removeElements(arg0: number, arg1: number): void;
        push(arg0: K): void;
        removeIf(arg0: Internal.Predicate_<K>): boolean;
        peek(arg0: number): K;
        lastIndexOf(arg0: any): number;
        size(arg0: number): void;
        addAll(arg0: number, arg1: Internal.Collection<K>): boolean;
        getElements(arg0: number, arg1: any[], arg2: number, arg3: number): void;
        listIterator(): Internal.ObjectListIterator<K>;
        listIterator(): Internal.ListIterator<any>;
        listIterator(arg0: number): Internal.ListIterator<any>;
        listIterator(arg0: number): Internal.ObjectListIterator<K>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<K>;
        addFirst(arg0: K): void;
        get last(): K;
        get first(): K;
    }
    type AbstractObjectList_<K> = AbstractObjectList<K>;
    class CatalystRecipeJS extends Internal.ThermalRecipeJS {
        secondaryMod(arg0: number): Internal.CatalystRecipeJS;
        primaryMod(arg0: number): Internal.CatalystRecipeJS;
        useChance(arg0: number): Internal.CatalystRecipeJS;
        minChance(arg0: number): Internal.CatalystRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CatalystRecipeJS_ = CatalystRecipeJS;
    interface IWorldInfo {
        func_82574_x(): Internal.GameRules;
        func_76079_c(): number;
        func_241860_d(): number;
        func_76061_m(): boolean;
        func_76074_e(): number;
        func_76075_d(): number;
        func_76073_f(): number;
        func_176130_y(): Internal.Difficulty;
        func_76084_b(arg0: boolean): void;
        func_176123_z(): boolean;
        func_82573_f(): number;
        func_76059_o(): boolean;
        func_85118_a(arg0: Internal.CrashReportCategory): void;
        func_76093_s(): boolean;
    }
    type IWorldInfo_ = IWorldInfo;
    class Matrix3f extends Document.Object implements Internal.Matrix3fExtended {
        multiplyBackward(arg0: Internal.Matrix3f): void;
        rotate(quaternion: Internal.Quaternion): void;
        func_226121_d_(): Internal.Matrix3f;
        func_232605_a_(arg0: number, arg1: number, arg2: number): void;
        func_226118_b_(arg0: Internal.Matrix3f): void;
        func_226122_e_(): number;
        func_226123_f_(): boolean;
        func_226119_c_(): void;
        transformVecZ(x: number, y: number, z: number): number;
        transformVecZ(dir: Internal.Vector3f): number;
        func_226115_a_(arg0: Internal.Quaternion): void;
        static func_226117_b_(arg0: number, arg1: number, arg2: number): Internal.Matrix3f;
        transformVecY(x: number, y: number, z: number): number;
        transformVecY(dir: Internal.Vector3f): number;
        func_226116_b_(): Internal.Triple<Internal.Quaternion, Internal.Vector3f, Internal.Quaternion>;
        transformVecX(x: number, y: number, z: number): number;
        transformVecX(dir: Internal.Vector3f): number;
        computeNormal(dir: Internal.Direction_): number;
        func_226114_a_(arg0: Internal.Matrix3f): void;
        func_226111_a_(arg0: number): void;
        func_226110_a_(): void;
        static readonly field_226108_l_: 0.38268343;
        static readonly field_226106_j_: 5.8284273;
        static readonly field_226109_m_: 0.70710677;
        field_226097_a_: number;
        static readonly field_226107_k_: 0.9238795;
        field_226104_h_: number;
        field_226099_c_: number;
        field_226105_i_: number;
        field_226098_b_: number;
        field_226103_g_: number;
        field_226102_f_: number;
        field_226101_e_: number;
        field_226100_d_: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Matrix3f);
        constructor(arg0: Internal.Matrix4f);
        constructor();
        constructor(arg0: Internal.Quaternion);
    }
    type Matrix3f_ = Matrix3f;
    interface ItemHandler extends Internal.Iterable<Internal.ItemStack> {
        getHeight(): number;
        iterator(): Internal.Iterator<Internal.ItemStack>;
        extractItem(arg0: number, arg1: number, arg2: boolean): Internal.ItemStack;
        getSlotLimit(arg0: number): number;
        isItemValid(arg0: number, arg1: Internal.ItemStack): boolean;
        getStackInSlot(arg0: number): Internal.ItemStack;
        getSlots(): number;
        getWidth(): number;
        insertItem(arg0: number, arg1: Internal.ItemStack, arg2: boolean): Internal.ItemStack;
    }
    type ItemHandler_ = ItemHandler;
    class RayTraceResultJS extends Document.Object {
        readonly fromEntity: Internal.EntityJS;
        readonly distance: number;
        hitX: number;
        hitY: number;
        hitZ: number;
        facing: Internal.Direction;
        block: Internal.BlockContainerJS;
        readonly type: string;
        entity: Internal.EntityJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(from: Internal.EntityJS, result: Internal.RayTraceResult, d: number);
    }
    type RayTraceResultJS_ = RayTraceResultJS;
    class FancyTrunkPlacer extends Internal.AbstractTrunkPlacer {
        static readonly field_236884_a_: Internal.Codec<Internal.FancyTrunkPlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type FancyTrunkPlacer_ = FancyTrunkPlacer;
    interface BlockAccessor {
        getHasCollision(): boolean;
        (): boolean;
    }
    type BlockAccessor_ = (()=>boolean) | BlockAccessor;
    class FMLServerAboutToStartEvent extends Internal.ServerLifecycleEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MinecraftServer);
        constructor();
    }
    type FMLServerAboutToStartEvent_ = FMLServerAboutToStartEvent;
    abstract class ForwardingMultimap <K, V> extends Internal.ForwardingObject implements Internal.Multimap<K, V> {
        containsEntry(arg0: any, arg1: any): boolean;
        forEach(arg0: Internal.BiConsumer_<K, V>): void;
        asMap(): Internal.Map<K, Internal.Collection<V>>;
        keys(): Internal.Multiset<K>;
        containsKey(arg0: any): boolean;
        values(): Internal.Collection<V>;
        isEmpty(): boolean;
        clear(): void;
        replaceValues(arg0: K, arg1: Internal.Iterable_<V>): Internal.Collection<V>;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): boolean;
        remove(arg0: any, arg1: any): boolean;
        removeAll(arg0: any): Internal.Collection<V>;
        entries(): Internal.Collection<Internal.Map$Entry<K, V>>;
        size(): number;
        putAll(arg0: Internal.Multimap<K, V>): boolean;
        putAll(arg0: K, arg1: Internal.Iterable_<V>): boolean;
        get(arg0: K): Internal.Collection<V>;
        keySet(): Internal.Set<K>;
        get empty(): boolean;
    }
    type ForwardingMultimap_<K, V> = ForwardingMultimap<K, V>;
    class SChatPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_240810_e_(): Internal.UUID;
        func_148916_d(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148915_c(): Internal.ITextComponent;
        func_192590_c(): Internal.ChatType;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ITextComponent, arg1: Internal.ChatType, arg2: Internal.UUID);
    }
    type SChatPacket_ = SChatPacket;
    interface GameRulesAccessor$IntegerValueSimple {
    }
    type GameRulesAccessor$IntegerValueSimple_ = GameRulesAccessor$IntegerValueSimple;
    interface InterruptibleChannel extends java_.nio.channels.Channel {
        close(): void;
        (): void;
    }
    type InterruptibleChannel_ = (()=>void) | InterruptibleChannel;
    class NamedPackage extends Document.Object {
    }
    type NamedPackage_ = NamedPackage;
    class CEnchantItemPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149537_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149539_c(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number);
    }
    type CEnchantItemPacket_ = CEnchantItemPacket;
    class PlayerContainerEvent$Close extends Internal.PlayerContainerEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.Container);
        constructor();
    }
    type PlayerContainerEvent$Close_ = PlayerContainerEvent$Close;
    class Throwable extends Document.Object implements Internal.Serializable {
        addSuppressed(arg0: Internal.Throwable): void;
        setStackTrace(arg0: Internal.StackTraceElement[]): void;
        getStackTrace(): Internal.StackTraceElement[];
        printStackTrace(arg0: Internal.PrintWriter): void;
        printStackTrace(): void;
        printStackTrace(arg0: Internal.PrintStream): void;
        getLocalizedMessage(): string;
        initCause(arg0: Internal.Throwable): Internal.Throwable;
        getMessage(): string;
        getSuppressed(): Internal.Throwable[];
        getCause(): Internal.Throwable;
        fillInStackTrace(): Internal.Throwable;
        get localizedMessage(): string;
        get cause(): Internal.Throwable;
        get stackTrace(): Internal.StackTraceElement[];
        get suppressed(): Internal.Throwable[];
        get message(): string;
        set stackTrace(arg0: Internal.StackTraceElement[]);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Throwable);
        constructor(arg0: string, arg1: Internal.Throwable);
        constructor(arg0: string);
        constructor();
    }
    type Throwable_ = Throwable;
    class Raid extends Document.Object {
        func_221301_k(): boolean;
        func_221309_a(arg0: Internal.PlayerEntity): void;
        func_221320_q(): void;
        func_221326_a(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        func_221321_e(): boolean;
        func_221324_a(arg0: number, arg1: Internal.AbstractRaiderEntity): void;
        static func_221312_H(): Internal.ItemStack;
        func_221306_a(arg0: Internal.Difficulty_): number;
        func_221332_b(arg0: number): Internal.AbstractRaiderEntity;
        func_221311_a(arg0: Internal.Entity): void;
        func_221308_w(): number;
        func_221327_m(): number;
        func_221296_c(arg0: number): void;
        func_221304_t(): BlockPos;
        func_221325_u(): number;
        func_221307_p(): void;
        func_221303_s(): number;
        func_221297_c(): boolean;
        func_221291_n(): number;
        func_221315_l(): number;
        func_221290_r(): number;
        func_221316_i(): Internal.World;
        func_221295_o(): void;
        func_221310_d(): boolean;
        func_221336_f(): boolean;
        func_221319_a(): boolean;
        func_221334_b(): boolean;
        func_221317_a(arg0: number, arg1: Internal.AbstractRaiderEntity, arg2: BlockPos, arg3: boolean): void;
        func_221322_a(arg0: Internal.AbstractRaiderEntity, arg1: boolean): void;
        func_221300_a(arg0: number, arg1: Internal.AbstractRaiderEntity, arg2: boolean): boolean;
        func_221333_v(): boolean;
        field_221359_w: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.ServerWorld, arg2: BlockPos);
        constructor(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT);
    }
    type Raid_ = Raid;
    class Products$P10 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function10_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>, arg4: Internal.App<F, T5>, arg5: Internal.App<F, T6>, arg6: Internal.App<F, T7>, arg7: Internal.App<F, T8>, arg8: Internal.App<F, T9>, arg9: Internal.App<F, T10>);
    }
    type Products$P10_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> = Products$P10<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>;
    class EntityElement extends Internal.TrackedElement<Internal.Entity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Entity);
    }
    type EntityElement_ = EntityElement;
    class BlastFurnaceRecipeJS extends Internal.IERecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BlastFurnaceRecipeJS_ = BlastFurnaceRecipeJS;
    class OptionalLong extends Document.Object {
        getAsLong(): number;
        orElseGet(arg0: Internal.LongSupplier_): number;
        stream(): Internal.LongStream;
        ifPresentOrElse(arg0: Internal.LongConsumer_, arg1: Internal.Runnable_): void;
        ifPresent(arg0: Internal.LongConsumer_): void;
        static of(arg0: number): Internal.OptionalLong;
        isEmpty(): boolean;
        isPresent(): boolean;
        orElse(arg0: number): number;
        orElseThrow<X_>(arg0: java_.util.function_.Supplier_<X_>): number;
        orElseThrow(): number;
        static empty(): Internal.OptionalLong;
        get asLong(): number;
        get present(): boolean;
    }
    type OptionalLong_ = OptionalLong;
    class RenderRainParticlesEvent extends Internal.WorldRenderEvent {
        getActiveRenderInfo(): Internal.ActiveRenderInfo;
        get activeRenderInfo(): Internal.ActiveRenderInfo;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ActiveRenderInfo);
    }
    type RenderRainParticlesEvent_ = RenderRainParticlesEvent;
    interface IRecipesGui {
        showCategories(arg0: Internal.List<ResourceLocation>): void;
        show<V>(arg0: Internal.IFocus<V>): void;
        getIngredientUnderMouse(): any;
    }
    type IRecipesGui_ = IRecipesGui;
    class ItemDestroyedEventJS extends Internal.PlayerEventJS {
        getHand(): Hand;
        getItem(): Internal.ItemStackJS;
        get item(): Internal.ItemStackJS;
        get hand(): Hand;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(e: any);
    }
    type ItemDestroyedEventJS_ = ItemDestroyedEventJS;
    class EntityWeight extends Document.Object {
        readData(arg0: Internal.CompoundNBT_): void;
        readNetData(arg0: Internal.PacketBuffer): void;
        getWeight(arg0: Internal.Entity): number;
        writeData(arg0: Internal.CompoundNBT_): void;
        writeNetData(arg0: Internal.PacketBuffer): void;
        boss: number;
        passive: number;
        monster: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EntityWeight_ = EntityWeight;
    class SpecialRecipeSerializer <T> extends Internal.ForgeRegistryEntry<Internal.IRecipeSerializer<any>> implements Internal.IRecipeSerializer<T> {
        func_199425_a_(arg0: ResourceLocation_, arg1: Internal.JsonObject): T;
        func_199426_a_(arg0: ResourceLocation_, arg1: Internal.PacketBuffer): T;
        func_199427_a_(arg0: Internal.PacketBuffer, arg1: T): void;
        setRegistryName(arg0: ResourceLocation_): any;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Function<ResourceLocation, T>);
    }
    type SpecialRecipeSerializer_<T> = SpecialRecipeSerializer<T>;
    interface AttributeView {
        name(): string;
        (): string;
    }
    type AttributeView_ = (()=>string) | AttributeView;
    abstract class LongBuffer extends Internal.Buffer implements Internal.Comparable<Internal.LongBuffer> {
        compact(): Internal.LongBuffer;
        clear(): Internal.LongBuffer;
        duplicate(): Internal.LongBuffer;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.LongBuffer): number;
        asReadOnlyBuffer(): Internal.LongBuffer;
        put(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.LongBuffer;
        put(arg0: number, arg1: number[]): Internal.LongBuffer;
        put(arg0: number, arg1: Internal.LongBuffer, arg2: number, arg3: number): Internal.LongBuffer;
        put(arg0: number[]): Internal.LongBuffer;
        put(arg0: Internal.LongBuffer): Internal.LongBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.LongBuffer;
        put(arg0: number): Internal.LongBuffer;
        put(arg0: number, arg1: number): Internal.LongBuffer;
        static allocate(arg0: number): Internal.LongBuffer;
        rewind(): Internal.LongBuffer;
        slice(): Internal.LongBuffer;
        slice(arg0: number, arg1: number): Internal.LongBuffer;
        array(): number[];
        mismatch(arg0: Internal.LongBuffer): number;
        get(arg0: number, arg1: number[]): Internal.LongBuffer;
        get(arg0: number): number;
        get(arg0: number[], arg1: number, arg2: number): Internal.LongBuffer;
        get(arg0: number[]): Internal.LongBuffer;
        get(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.LongBuffer;
        get(): number;
        limit(arg0: number): Internal.LongBuffer;
        reset(): Internal.LongBuffer;
        position(arg0: number): Internal.LongBuffer;
        flip(): Internal.LongBuffer;
        static wrap(arg0: number[], arg1: number, arg2: number): Internal.LongBuffer;
        static wrap(arg0: number[]): Internal.LongBuffer;
        mark(): Internal.LongBuffer;
        order(): Internal.ByteOrder;
    }
    type LongBuffer_ = LongBuffer;
    interface ClassShutter {
        visibleToScripts(arg0: string, arg1: number): boolean;
        (arg0: string, arg1: number): boolean;
    }
    type ClassShutter_ = ((arg0: string, arg1: number)=>boolean) | ClassShutter;
    class Duration extends Document.Object implements Internal.TemporalAmount, Internal.Comparable<Internal.Duration>, Internal.Serializable {
        negated(): Internal.Duration;
        plusHours(arg0: number): Internal.Duration;
        isPositive(): boolean;
        compareTo(arg0: Internal.Duration): number;
        compareTo(arg0: any): number;
        multipliedBy(arg0: number): Internal.Duration;
        plusSeconds(arg0: number): Internal.Duration;
        toMillis(): number;
        static from(arg0: Internal.TemporalAmount): Internal.Duration;
        plusNanos(arg0: number): Internal.Duration;
        static ofMinutes(arg0: number): Internal.Duration;
        static between(arg0: Internal.Temporal, arg1: Internal.Temporal): Internal.Duration;
        static ofSeconds(arg0: number, arg1: number): Internal.Duration;
        static ofSeconds(arg0: number): Internal.Duration;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.Duration;
        minusNanos(arg0: number): Internal.Duration;
        getNano(): number;
        toMillisPart(): number;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Duration;
        plus(arg0: Internal.Duration): Internal.Duration;
        toMinutesPart(): number;
        toNanos(): number;
        toMinutes(): number;
        toHours(): number;
        plusMillis(arg0: number): Internal.Duration;
        subtractFrom(arg0: Internal.Temporal): Internal.Temporal;
        toSecondsPart(): number;
        static ofMillis(arg0: number): Internal.Duration;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Duration;
        minus(arg0: Internal.Duration): Internal.Duration;
        minusHours(arg0: number): Internal.Duration;
        withSeconds(arg0: number): Internal.Duration;
        minusMillis(arg0: number): Internal.Duration;
        plusMinutes(arg0: number): Internal.Duration;
        toSeconds(): number;
        dividedBy(arg0: number): Internal.Duration;
        dividedBy(arg0: Internal.Duration): number;
        minusMinutes(arg0: number): Internal.Duration;
        plusDays(arg0: number): Internal.Duration;
        static of(arg0: number, arg1: Internal.TemporalUnit): Internal.Duration;
        get(arg0: Internal.TemporalUnit): number;
        isZero(): boolean;
        toDays(): number;
        toNanosPart(): number;
        isNegative(): boolean;
        static ofDays(arg0: number): Internal.Duration;
        static parse(arg0: Internal.CharSequence): Internal.Duration;
        minusDays(arg0: number): Internal.Duration;
        toHoursPart(): number;
        toDaysPart(): number;
        static ofNanos(arg0: number): Internal.Duration;
        getSeconds(): number;
        abs(): Internal.Duration;
        static ofHours(arg0: number): Internal.Duration;
        withNanos(arg0: number): Internal.Duration;
        getUnits(): Internal.List<Internal.TemporalUnit>;
        addTo(arg0: Internal.Temporal): Internal.Temporal;
        minusSeconds(arg0: number): Internal.Duration;
        static readonly ZERO: Internal.Duration;
        get zero(): boolean;
        get negative(): boolean;
        get seconds(): number;
        get nano(): number;
        get positive(): boolean;
        get units(): Internal.List<Internal.TemporalUnit>;
    }
    type Duration_ = Duration;
    class StriderEntity extends Internal.AnimalEntity implements Internal.IRideable, Internal.IEquipable {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_230265_N__(): number;
        func_233622_a_(arg0: Internal.MobEntity, arg1: Internal.BoostHelper, arg2: Vec3): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_234316_eJ_(): number;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_230264_L__(): boolean;
        func_230267_a__(arg0: Vec3): void;
        func_230266_a_(arg0: Internal.SoundCategory_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        static func_234317_eK_(): Internal.AttributeModifierMap$MutableAttribute;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.StriderEntity;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_184762_da(): boolean;
        func_234315_eI_(): boolean;
        static func_234314_c_(arg0: Internal.EntityType_<Internal.StriderEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_110257_ck(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_234319_t_(arg0: boolean): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.StriderEntity>, arg1: Internal.World);
    }
    type StriderEntity_ = StriderEntity;
    interface ITooltipCallback <T> {
        onTooltip(arg0: number, arg1: boolean, arg2: T, arg3: Internal.List<Internal.ITextComponent>): void;
        (arg0: number, arg1: boolean, arg2: T, arg3: Internal.List<Internal.ITextComponent>): void;
    }
    type ITooltipCallback_<T> = ((arg0: number, arg1: boolean, arg2: T, arg3: Internal.List<Internal.ITextComponent>)=>void) | ITooltipCallback<T>;
    class DefaultChapterGroup extends Internal.ChapterGroup {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.QuestFile);
    }
    type DefaultChapterGroup_ = DefaultChapterGroup;
    class ArmorDyeRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type ArmorDyeRecipe_ = ArmorDyeRecipe;
    abstract class CapabilityProvider <B> extends Document.Object implements Internal.ICapabilityProvider {
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher): boolean;
        areCapsCompatible(arg0: Internal.CapabilityProvider<B>): boolean;
    }
    type CapabilityProvider_<B> = CapabilityProvider<B>;
    class PhaseManager extends Document.Object {
        func_188757_b<T_>(arg0: Internal.PhaseType<T_>): T_;
        func_188758_a(arg0: Internal.PhaseType<any>): void;
        func_188756_a(): Internal.IPhase;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type PhaseManager_ = PhaseManager;
    class BlockRendererDispatcher extends Document.Object implements Internal.IResourceManagerReloadListener {
        func_225594_i_(): string;
        func_175023_a(): Internal.BlockModelShapes;
        renderModel(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.IBlockDisplayReader, arg3: Internal.MatrixStack, arg4: Internal.IVertexBuilder, arg5: boolean, arg6: Internal.Random, arg7: Internal.IModelData): boolean;
        renderBlockDamage(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.IBlockDisplayReader, arg3: Internal.MatrixStack, arg4: Internal.IVertexBuilder, arg5: Internal.IModelData): void;
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_175019_b(): Internal.BlockModelRenderer;
        func_184389_a(arg0: Internal.BlockState): Internal.IBakedModel;
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage_, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        renderBlock(arg0: Internal.BlockState, arg1: Internal.MatrixStack, arg2: Internal.IRenderTypeBuffer_, arg3: number, arg4: number, arg5: Internal.IModelData): void;
        getResourceType(): Internal.IResourceType;
        func_228792_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.IBlockDisplayReader, arg3: Internal.MatrixStack, arg4: Internal.IVertexBuilder): void;
        func_228791_a_(arg0: Internal.BlockState, arg1: Internal.MatrixStack, arg2: Internal.IRenderTypeBuffer_, arg3: number, arg4: number): void;
        func_228793_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.IBlockDisplayReader, arg3: Internal.MatrixStack, arg4: Internal.IVertexBuilder, arg5: boolean, arg6: Internal.Random): boolean;
        func_228794_a_(arg0: BlockPos, arg1: Internal.IBlockDisplayReader, arg2: Internal.IVertexBuilder, arg3: Internal.FluidState): boolean;
        field_175028_a: Internal.BlockModelShapes;
        field_175027_c: Internal.BlockModelRenderer;
        field_175025_e: Internal.FluidBlockRenderer;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockModelShapes, arg1: Internal.BlockColors);
    }
    type BlockRendererDispatcher_ = BlockRendererDispatcher;
    abstract class WorldEventJS extends Internal.EventJS {
        getServer(): Internal.ServerJS;
        getLevel(): Internal.WorldJS;
        getWorld(): Internal.WorldJS;
        post(id: string): boolean;
        post(id: string, sub: string): boolean;
        get server(): Internal.ServerJS;
        get world(): Internal.WorldJS;
        get level(): Internal.WorldJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type WorldEventJS_ = WorldEventJS;
    abstract class PermissionCollection extends Document.Object implements Internal.Serializable {
        add(arg0: Internal.Permission): void;
        elementsAsStream(): Internal.Stream<Internal.Permission>;
        isReadOnly(): boolean;
        elements(): Internal.Enumeration<Internal.Permission>;
        implies(arg0: Internal.Permission): boolean;
        setReadOnly(): void;
        get readOnly(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PermissionCollection_ = PermissionCollection;
    class PhaseType <T> extends Document.Object {
        static func_188739_c(): number;
        static func_188738_a(arg0: number): Internal.PhaseType<any>;
        func_188740_b(): number;
        func_188736_a(arg0: Internal.EnderDragonEntity): Internal.IPhase;
        static readonly field_188748_h: Internal.PhaseType<Internal.AttackingSittingPhase>;
        static readonly field_188741_a: Internal.PhaseType<Internal.HoldingPatternPhase>;
        static readonly field_188749_i: Internal.PhaseType<Internal.ChargingPlayerPhase>;
        static readonly field_188742_b: Internal.PhaseType<Internal.StrafePlayerPhase>;
        static readonly field_188743_c: Internal.PhaseType<Internal.LandingApproachPhase>;
        static readonly field_188744_d: Internal.PhaseType<Internal.LandingPhase>;
        static readonly field_188750_j: Internal.PhaseType<Internal.DyingPhase>;
        static readonly field_188745_e: Internal.PhaseType<Internal.TakeoffPhase>;
        static readonly field_188751_k: Internal.PhaseType<Internal.HoverPhase>;
        static readonly field_188746_f: Internal.PhaseType<Internal.FlamingSittingPhase>;
        static readonly field_188747_g: Internal.PhaseType<Internal.ScanningSittingPhase>;
    }
    type PhaseType_<T> = PhaseType<T>;
    abstract class AbstractIllagerEntity extends Internal.AbstractRaiderEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_193077_p(): Internal.AbstractIllagerEntity$ArmPose;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type AbstractIllagerEntity_ = AbstractIllagerEntity;
    interface ClientAdvancementManager$IListener extends Internal.AdvancementList$IListener {
        func_191933_a(arg0: Internal.Advancement, arg1: Internal.AdvancementProgress): void;
        func_193982_e(arg0: Internal.Advancement): void;
    }
    type ClientAdvancementManager$IListener_ = ClientAdvancementManager$IListener;
    class HopperContainer extends Internal.Container {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IInventory);
    }
    type HopperContainer_ = HopperContainer;
    interface Serializable {
    }
    type Serializable_ = Serializable;
    class Tag <T> extends Document.Object implements Internal.ITag<T> {
        static func_241286_a_<T_>(arg0: Internal.Set<T_>): Internal.Tag<T_>;
        static func_241284_a_<T_>(): Internal.Tag<T_>;
        func_205596_a(arg0: Internal.Random): T;
        func_230235_a_(arg0: T): boolean;
        func_230236_b_(): Internal.List<T>;
    }
    type Tag_<T> = Tag<T>;
    class TickEvent$ServerTickEvent extends Internal.TickEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TickEvent$Phase);
        constructor();
    }
    type TickEvent$ServerTickEvent_ = TickEvent$ServerTickEvent;
    interface DimensionTypeAccessor {
    }
    type DimensionTypeAccessor_ = DimensionTypeAccessor;
    class MusicDiscItem extends Internal.Item {
        canElytraFly(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        static func_185074_a(arg0: Internal.SoundEvent_): Internal.MusicDiscItem;
        onEnchantment(arg0: Internal.ItemStack, arg1: Internal.List<Internal.EnchantmentData>): Internal.ItemStack;
        getItem(): Internal.Item;
        getSmeltingExperience(arg0: Internal.ItemStack): number;
        setDamage(arg0: Internal.ItemStack, arg1: number): void;
        canHarvestBlock(arg0: Internal.ItemStack, arg1: Internal.BlockState): boolean;
        renderHelmetOverlay(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: number, arg3: number, arg4: number): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        damageItem<T_>(arg0: Internal.ItemStack, arg1: number, arg2: T_, arg3: Internal.Consumer_<T_>): number;
        getItemEnchantability(arg0: Internal.ItemStack): number;
        isTreasureAllowed(arg0: Internal.ItemStack, arg1: boolean): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: boolean): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack): number;
        getArmorModel<A_>(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: EquipmentSlot_, arg3: A_): A_;
        readShareTag(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): void;
        onEntityItemUpdate(arg0: Internal.ItemStack, arg1: Internal.ItemEntity): boolean;
        getDamage(arg0: Internal.ItemStack): number;
        showDurabilityBar(arg0: Internal.ItemStack): boolean;
        isBookEnchantable(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.LivingEntity, arg3: Internal.LivingEntity): boolean;
        func_234801_g_(): Internal.IFormattableTextComponent;
        onUsingTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): void;
        createEntity(arg0: Internal.World, arg1: Internal.Entity, arg2: Internal.ItemStack): Internal.Entity;
        isPiglinCurrency(arg0: Internal.ItemStack): boolean;
        getCreativeTabs(): Internal.Collection<Internal.ItemGroup>;
        func_195975_g(): number;
        getShareTag(arg0: Internal.ItemStack): Internal.CompoundNBT;
        getRGBDurabilityForDisplay(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack, arg1: Internal.IRecipeType<any>): number;
        onDroppedByPlayer(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity): boolean;
        isDamageable(arg0: Internal.ItemStack): boolean;
        onEntitySwing(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        elytraFlightTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): boolean;
        selectEnchantments(arg0: Internal.List<Internal.EnchantmentData>, arg1: Internal.Random, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number, arg6: boolean): Internal.List<Internal.EnchantmentData>;
        getAttributeModifiers(arg0: EquipmentSlot_, arg1: Internal.ItemStack): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        onLeftClickEntity(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.Entity): boolean;
        canEquip(arg0: Internal.ItemStack, arg1: EquipmentSlot_, arg2: Internal.Entity): boolean;
        getDurabilityForDisplay(arg0: Internal.ItemStack): number;
        onBlockStartBreak(arg0: Internal.ItemStack, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.MobEntity): void;
        canContinueUsing(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getEntityLifespan(arg0: Internal.ItemStack, arg1: Internal.World): number;
        getArmorTexture(arg0: Internal.ItemStack, arg1: Internal.Entity, arg2: EquipmentSlot_, arg3: string): string;
        hasCustomEntity(arg0: Internal.ItemStack): boolean;
        getHighlightTip(arg0: Internal.ItemStack, arg1: Internal.ITextComponent_): Internal.ITextComponent;
        getMaxDamage(arg0: Internal.ItemStack): number;
        getCreatorModId(arg0: Internal.ItemStack): string;
        isDamaged(arg0: Internal.ItemStack): boolean;
        onArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.PlayerEntity): void;
        hasContainerItem(arg0: Internal.ItemStack): boolean;
        isShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        doesSneakBypassUse(arg0: Internal.ItemStack, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        onItemUseFirst(arg0: Internal.ItemStack, arg1: Internal.ItemUseContext): Internal.ActionResultType;
        getContainerItem(arg0: Internal.ItemStack): Internal.ItemStack;
        setRegistryName(arg0: ResourceLocation_): any;
        getEquipmentSlot(arg0: Internal.ItemStack): EquipmentSlot;
        initCapabilities(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): Internal.ICapabilityProvider;
        getItemStackLimit(arg0: Internal.ItemStack): number;
        getFontRenderer(arg0: Internal.ItemStack): Internal.FontRenderer;
        forciblyAllowsTableEnchantment(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        makesPiglinsNeutral(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        isEnderMask(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.EndermanEntity): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        func_185075_h(): Internal.SoundEvent;
        get item(): Internal.Item;
        get creativeTabs(): Internal.Collection<Internal.ItemGroup>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.SoundEvent, arg2: Internal.Item$Properties);
        constructor(arg0: number, arg1: java_.util.function_.Supplier<Internal.SoundEvent>, arg2: Internal.Item$Properties);
    }
    type MusicDiscItem_ = MusicDiscItem;
    class PopupMenu extends Internal.Menu {
        show(arg0: Internal.Component, arg1: number, arg2: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: string);
    }
    type PopupMenu_ = PopupMenu;
    class TooltipList extends Document.Object {
        add(component: Internal.ITextComponent_): void;
        blankLine(): void;
        string(text: string): void;
        styledTranslate(key: string, style: Internal.Style, ...objects: any[]): void;
        styledString(text: string, color: Internal.TextFormatting_): void;
        styledString(text: string, style: Internal.Style): void;
        reset(): void;
        shouldRender(): boolean;
        render(mStack: Internal.MatrixStack, mouseX: number, mouseY: number, screenWidth: number, screenHeight: number, font: Internal.FontRenderer): void;
        translate(key: string, ...objects: any[]): void;
        backgroundColor: number;
        yOffset: number;
        zOffsetItemTooltip: number;
        xOffset: number;
        zOffset: number;
        borderColorStart: number;
        borderColorEnd: number;
        maxWidth: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TooltipList_ = TooltipList;
    class CommandBlockTileEntity extends Internal.TileEntity {
        requestModelDataUpdate(): void;
        func_184253_b(arg0: boolean): void;
        func_184252_d(arg0: boolean): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_184254_e(): boolean;
        func_184255_d(): boolean;
        func_184251_i(): Internal.CommandBlockTileEntity$Mode;
        func_184256_g(): boolean;
        func_184249_c(): boolean;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_184257_h(): boolean;
        func_184258_j(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        func_184250_a(arg0: boolean): void;
        func_145993_a(): Internal.CommandBlockLogic;
        func_226987_h_(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CommandBlockTileEntity_ = CommandBlockTileEntity;
    class ChunkDataEvent$Save extends Internal.ChunkDataEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IChunk, arg1: Internal.IWorld, arg2: Internal.CompoundNBT);
        constructor();
    }
    type ChunkDataEvent$Save_ = ChunkDataEvent$Save;
    class FallingBlockEntity extends Internal.Entity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_184531_j(): BlockPos;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_184530_a(arg0: BlockPos): void;
        func_195054_l(): Internal.BlockState;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_145806_a(arg0: boolean): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_145807_e(): Internal.World;
        getParts(): Internal.PartEntity<any>[];
        field_145812_b: number;
        field_145810_d: Internal.CompoundNBT;
        field_145813_c: boolean;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.FallingBlockEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: Internal.BlockState);
    }
    type FallingBlockEntity_ = FallingBlockEntity;
    class VillagerTradesEvent extends net.minecraftforge.eventbus.api.Event {
        getType(): Internal.VillagerProfession;
        getTrades(): Internal.Int2ObjectMap<Internal.List<Internal.VillagerTrades$ITrade>>;
        get trades(): Internal.Int2ObjectMap<Internal.List<Internal.VillagerTrades$ITrade>>;
        get type(): Internal.VillagerProfession;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Int2ObjectMap<Internal.List<Internal.VillagerTrades$ITrade>>, arg1: Internal.VillagerProfession);
    }
    type VillagerTradesEvent_ = VillagerTradesEvent;
    class EventsJS$ScriptEventHandler extends Document.Object {
    }
    type EventsJS$ScriptEventHandler_ = EventsJS$ScriptEventHandler;
    interface PaletteAccess {
    }
    type PaletteAccess_ = PaletteAccess;
    class EnderCrystalEntity extends Internal.Entity {
        shouldRiderSit(): boolean;
        func_184516_a(arg0: BlockPos): void;
        func_184517_a(arg0: boolean): void;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_184520_k(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_184518_j(): BlockPos;
        field_70261_a: number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.EnderCrystalEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
    }
    type EnderCrystalEntity_ = EnderCrystalEntity;
    class ComparatorTileEntity extends Internal.TileEntity {
        requestModelDataUpdate(): void;
        func_145995_a(arg0: number): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        func_145996_a(): number;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ComparatorTileEntity_ = ComparatorTileEntity;
    abstract class RhinoException extends Internal.RuntimeException {
        getScriptStackTrace(): string;
        getScriptStackTrace(limit: number, functionName: string): string;
        initLineSource(lineSource: string): void;
        getScriptStack(limit: number, hideFunction: string): any[];
        getScriptStack(): any[];
        columnNumber(): number;
        lineSource(): string;
        initSourceName(sourceName: string): void;
        initLineNumber(lineNumber: number): void;
        initColumnNumber(columnNumber: number): void;
        details(): string;
        sourceName(): string;
        lineNumber(): number;
        get scriptStack(): any[];
        get scriptStackTrace(): string;
    }
    type RhinoException_ = RhinoException;
    class LivingEvent$LivingUpdateEvent extends Internal.LivingEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity);
    }
    type LivingEvent$LivingUpdateEvent_ = LivingEvent$LivingUpdateEvent;
    class IntNBT extends Internal.NumberNBT {
        func_74737_b(): Internal.IntNBT;
        func_150285_a_(): string;
        func_197637_c(): Internal.ITextComponent;
        static func_229692_a_(arg0: number): Internal.IntNBT;
        func_225647_b_(): Internal.INBTType<Internal.IntNBT>;
        static readonly field_229691_a_: Internal.INBTType<Internal.IntNBT>;
    }
    type IntNBT_ = IntNBT;
    class DolphinEntity extends Internal.WaterMobEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_208011_dD(): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_208008_s(arg0: boolean): void;
        static func_223364_b(arg0: Internal.EntityType_<Internal.DolphinEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_211137_b(arg0: number): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        static func_234190_eK_(): Internal.AttributeModifierMap$MutableAttribute;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_211136_dB(): number;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_208010_l(): BlockPos;
        func_208012_g(arg0: BlockPos): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        static readonly field_205025_a: Internal.Predicate<Internal.ItemEntity>;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.DolphinEntity>, arg1: Internal.World);
    }
    type DolphinEntity_ = DolphinEntity;
    abstract class BlockType extends Document.Object {
        applyDefaults(builder: Internal.BlockBuilder): void;
        generateBlockModels(builder: Internal.BlockBuilder): Internal.Map<ResourceLocation, Internal.JsonObject>;
        createBlock(arg0: Internal.BlockBuilder): Internal.Block;
        generateData(builder: Internal.BlockBuilder, generator: Internal.DataJsonGenerator): void;
        generateAssets(b: Internal.BlockBuilder, generator: Internal.AssetJsonGenerator): void;
        readonly name: string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(n: string);
    }
    type BlockType_ = BlockType;
    interface BiomeContainerAccess {
        getBiomes(): Internal.Biome[];
        (): Internal.Biome[];
    }
    type BiomeContainerAccess_ = (()=>Internal.Biome[]) | BiomeContainerAccess;
    abstract class AbstractFeatureSizeType extends Document.Object {
        func_236710_c_(): Internal.OptionalInt;
        func_230369_a_(arg0: number, arg1: number): number;
        static readonly field_236704_a_: Internal.Codec<Internal.AbstractFeatureSizeType>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.OptionalInt);
    }
    type AbstractFeatureSizeType_ = AbstractFeatureSizeType;
    class NetworkSystem extends Document.Object {
        func_151265_a(arg0: Internal.InetAddress, arg1: number): void;
        func_151268_b(): void;
        func_151269_c(): void;
        func_151267_d(): Internal.MinecraftServer;
        func_151270_a(): Internal.SocketAddress;
        field_151277_a: boolean;
        static readonly field_151276_c: Internal.LazyValue<Internal.NioEventLoopGroup>;
        static readonly field_181141_b: Internal.LazyValue<Internal.EpollEventLoopGroup>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MinecraftServer);
    }
    type NetworkSystem_ = NetworkSystem;
    interface ValueLayout$OfInt extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfInt;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfInt;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout$OfInt;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfInt;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfInt_ = ValueLayout$OfInt;
    class ImmutableSet$Builder <E> extends Internal.ImmutableCollection$ArrayBasedBuilder<E> {
        add(arg0: any[]): Internal.ImmutableCollection$Builder<any>;
        add(...arg0: E[]): Internal.ImmutableSet$Builder<E>;
        add(arg0: any): Internal.ImmutableCollection$Builder<any>;
        add(arg0: any): Internal.ImmutableCollection$ArrayBasedBuilder<any>;
        add(arg0: E): Internal.ImmutableSet$Builder<E>;
        build(): Internal.ImmutableSet<E>;
        build(): Internal.ImmutableCollection<any>;
        addAll(arg0: Internal.Iterable_<any>): Internal.ImmutableCollection$Builder<any>;
        addAll(arg0: Internal.Iterable_<E>): Internal.ImmutableSet$Builder<E>;
        addAll(arg0: Internal.Iterator<E>): Internal.ImmutableSet$Builder<E>;
        addAll(arg0: Internal.Iterator<any>): Internal.ImmutableCollection$Builder<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ImmutableSet$Builder_<E> = ImmutableSet$Builder<E>;
    class ShulkerEntity extends Internal.GolemEntity implements Internal.IMob {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_184691_a(arg0: number): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_184693_dc(): number;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_184688_a(arg0: number): number;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_190769_dn(): Internal.DyeColor;
        hasCooldown(): boolean;
        func_184692_dd(): BlockPos;
        func_184684_db(): number;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        static func_234300_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_184699_da(): BlockPos;
        func_184697_de(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_184694_g(arg0: BlockPos): void;
        func_184696_cZ(): Internal.Direction;
        getClassification(arg0: boolean): Internal.EntityClassification;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ShulkerEntity>, arg1: Internal.World);
    }
    type ShulkerEntity_ = ShulkerEntity;
    class CLockDifficultyPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218776_b(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: boolean);
    }
    type CLockDifficultyPacket_ = CLockDifficultyPacket;
    interface ILootFunction$IBuilder {
        func_216052_b(): Internal.ILootFunction;
        (): Internal.ILootFunction;
    }
    type ILootFunction$IBuilder_ = (()=>Internal.ILootFunction) | ILootFunction$IBuilder;
    interface NonNullConsumer <T> {
        accept(arg0: T): void;
        (arg0: T): void;
    }
    type NonNullConsumer_<T> = ((arg0: T)=>void) | NonNullConsumer<T>;
    interface IEntityRenderer <T, M> {
        func_217764_d(): M;
        func_110775_a(arg0: T): ResourceLocation;
    }
    type IEntityRenderer_<T, M> = IEntityRenderer<T, M>;
    interface MinecraftSessionService {
        hasJoinedServer(arg0: Internal.GameProfile, arg1: string, arg2: Internal.InetAddress): Internal.GameProfile;
        joinServer(arg0: Internal.GameProfile, arg1: string, arg2: string): void;
        getTextures(arg0: Internal.GameProfile, arg1: boolean): Internal.Map<Internal.MinecraftProfileTexture$Type, Internal.MinecraftProfileTexture>;
        fillProfileProperties(arg0: Internal.GameProfile, arg1: boolean): Internal.GameProfile;
    }
    type MinecraftSessionService_ = MinecraftSessionService;
    class TrappedChestTileEntity extends Internal.ChestTileEntity {
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_145818_k_(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TrappedChestTileEntity_ = TrappedChestTileEntity;
    interface Function11 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.BiFunction<T10, T11, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function4<T8, T9, T10, T11, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function3<T9, T10, T11, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function6<T6, T7, T8, T9, T10, T11, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function5<T7, T8, T9, T10, T11, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function8<T4, T5, T6, T7, T8, T9, T10, T11, R>>;
        curry10(): Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Internal.Function<T11, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function7<T5, T6, T7, T8, T9, T10, T11, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function9<T3, T4, T5, T6, T7, T8, T9, T10, T11, R>>;
        curry(): Internal.Function<T1, Internal.Function10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11): R;
    }
    type Function11_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11)=>R) | Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R>;
    class RecordCodecBuilder$Instance <O> extends Document.Object implements Internal.Applicative<Internal.RecordCodecBuilder$Mu<O>, any> {
        deprecated<A_>(arg0: A_, arg1: number): Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>;
        point<A_>(arg0: A_, arg1: Internal.Lifecycle): Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>;
        point<A_>(arg0: A_): Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>;
        map<T_, R_>(arg0: Internal.Function_<T_, R_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T11_>): Internal.Products$P11<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>): Internal.Products$P10<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>): Internal.Products$P9<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T11_>, arg11: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T12_>, arg12: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T13_>, arg13: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T14_>, arg14: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T15_>, arg15: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T16_>): Internal.Products$P16<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T11_>, arg11: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T12_>, arg12: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T13_>, arg13: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T14_>, arg14: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T15_>): Internal.Products$P15<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T11_>, arg11: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T12_>, arg12: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T13_>, arg13: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T14_>): Internal.Products$P14<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T11_>, arg11: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T12_>, arg12: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T13_>): Internal.Products$P13<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T11_>, arg11: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T12_>): Internal.Products$P12<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_>;
        group<T1_, T2_, T3_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>): Internal.Products$P3<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_>;
        group<T1_, T2_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>): Internal.Products$P2<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_>;
        group<T1_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>): Internal.Products$P1<Internal.RecordCodecBuilder$Mu<O>, T1_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>): Internal.Products$P8<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>): Internal.Products$P7<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_, T5_, T6_, T7_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>): Internal.Products$P6<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_, T5_, T6_>;
        group<T1_, T2_, T3_, T4_, T5_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>): Internal.Products$P5<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_, T5_>;
        group<T1_, T2_, T3_, T4_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>): Internal.Products$P4<Internal.RecordCodecBuilder$Mu<O>, T1_, T2_, T3_, T4_>;
        apply2<A_, B_, R_>(arg0: Internal.BiFunction_<A_, B_, R_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, B_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        apply3<T1_, T2_, T3_, R_>(arg0: Internal.Function3_<T1_, T2_, T3_, R_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        apply4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.Function4_<T1_, T2_, T3_, T4_, R_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap11<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function11<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>, arg11: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T11_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap2<A_, B_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.BiFunction<A_, B_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, B_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        apply5<T1_, T2_, T3_, T4_, T5_, R_>(arg0: Internal.Function5_<T1_, T2_, T3_, T4_, T5_, R_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap10<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function10<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        lift2<A_, B_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.BiFunction<A_, B_, R_>>): Internal.BiFunction<Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, B_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>>;
        ap4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function4<T1_, T2_, T3_, T4_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        lift1<A_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function<A_, R_>>): Internal.Function<Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>>;
        ap3<T1_, T2_, T3_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function3<T1_, T2_, T3_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap6<T1_, T2_, T3_, T4_, T5_, T6_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function6<T1_, T2_, T3_, T4_, T5_, T6_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap5<T1_, T2_, T3_, T4_, T5_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function5<T1_, T2_, T3_, T4_, T5_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        lift6<T1_, T2_, T3_, T4_, T5_, T6_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function6<T1_, T2_, T3_, T4_, T5_, T6_, R_>>): Internal.Function6<Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>>;
        ap7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        lift5<T1_, T2_, T3_, T4_, T5_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function5<T1_, T2_, T3_, T4_, T5_, R_>>): Internal.Function5<Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>>;
        lift4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function4<T1_, T2_, T3_, T4_, R_>>): Internal.Function4<Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>>;
        lift3<T1_, T2_, T3_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function3<T1_, T2_, T3_, R_>>): Internal.Function3<Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>>;
        ap9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        apply6<T1_, T2_, T3_, T4_, T5_, T6_, R_>(arg0: Internal.Function6_<T1_, T2_, T3_, T4_, T5_, T6_, R_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        apply7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>(arg0: Internal.Function7_<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        lift9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>>): Internal.Function9<Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>>;
        apply8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>(arg0: Internal.Function8_<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        lift8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>>): Internal.Function8<Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>>;
        apply9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>(arg0: Internal.Function9_<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        lift7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>>): Internal.Function7<Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>>;
        ap<A_, R_>(arg0: Internal.Function_<A_, R_>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap<A_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function<A_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        stable<A_>(arg0: A_): Internal.App<Internal.RecordCodecBuilder$Mu<O>, A_>;
        ap16<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function16<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>, arg11: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T11_>, arg12: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T12_>, arg13: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T13_>, arg14: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T14_>, arg15: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T15_>, arg16: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T16_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap13<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function13<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>, arg11: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T11_>, arg12: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T12_>, arg13: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T13_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap12<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function12<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>, arg11: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T11_>, arg12: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T12_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap15<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function15<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>, arg11: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T11_>, arg12: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T12_>, arg13: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T13_>, arg14: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T14_>, arg15: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T15_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        ap14<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, R_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O>, Internal.Function14<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, R_>>, arg1: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T1_>, arg2: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T2_>, arg3: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T3_>, arg4: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T4_>, arg5: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T5_>, arg6: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T6_>, arg7: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T7_>, arg8: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T8_>, arg9: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T9_>, arg10: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T10_>, arg11: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T11_>, arg12: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T12_>, arg13: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T13_>, arg14: Internal.App<Internal.RecordCodecBuilder$Mu<O>, T14_>): Internal.App<Internal.RecordCodecBuilder$Mu<O>, R_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RecordCodecBuilder$Instance_<O> = RecordCodecBuilder$Instance<O>;
    class Biome extends Internal.ForgeRegistryEntry$UncheckedRegistryEntry<Internal.Biome> implements Internal.BiomeAccess, Internal.BiomeFTBC {
        func_201848_a(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        func_225528_a_(arg0: number, arg1: number): number;
        func_225486_c(pos: BlockPos): number;
        func_185360_m(): number;
        func_185361_o(): number;
        getFTBCBiomeColorIndex(): number;
        func_204274_p(): number;
        func_201851_b(): Internal.Biome$RainType;
        func_76736_e(): boolean;
        func_201850_b(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        func_242433_b(): Internal.MobSpawnInfo;
        static create_$md$e571c7$0(arg0: Internal.Biome$Climate, arg1: Internal.Biome$Category_, arg2: number, arg3: number, arg4: Internal.BiomeAmbience, arg5: Internal.BiomeGenerationSettings, arg6: Internal.MobSpawnInfo): Internal.Biome;
        setFTBCBiomeColorIndex(c: number): void;
        func_235094_x_(): Internal.Optional<Internal.BackgroundMusicSelector>;
        func_235080_i_(): number;
        func_201854_a(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: boolean): boolean;
        setRegistryName(arg0: ResourceLocation_): Internal.Biome;
        func_225527_a_(): number;
        func_185355_j(): number;
        func_225529_c_(): number;
        func_242445_k(): number;
        func_235089_q_(): Internal.BiomeAmbience;
        func_76727_i(): number;
        func_235090_t_(): Internal.Optional<Internal.ParticleEffectAmbience>;
        func_201856_r(): Internal.Biome$Category;
        func_206854_a(arg0: Internal.Random, arg1: Internal.IChunk, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.BlockState, arg7: Internal.BlockState, arg8: number, arg9: number): void;
        func_235091_u_(): Internal.Optional<Internal.SoundEvent>;
        func_235092_v_(): Internal.Optional<Internal.MoodSoundAmbience>;
        func_235093_w_(): Internal.Optional<Internal.SoundAdditionsAmbience>;
        func_242427_a(arg0: Internal.StructureManager, arg1: Internal.ChunkGenerator, arg2: Internal.WorldGenRegion, arg3: number, arg4: Internal.SharedSeedRandom, arg5: BlockPos): void;
        func_242440_e(): Internal.BiomeGenerationSettings;
        static readonly field_235051_b_: Internal.Codec<java_.util.function_.Supplier<Internal.Biome>>;
        static readonly field_150586_aC: Internal.Logger;
        static readonly field_242420_e: Internal.Codec<Internal.List<java_.util.function_.Supplier<Internal.Biome>>>;
        field_242421_g: Internal.Map<number, Internal.List<net.minecraft.world.gen.feature.structure.Structure<any>>>;
        static readonly field_242418_b: Internal.Codec<Internal.Biome>;
        static readonly field_242419_c: Internal.Codec<Internal.Biome>;
        field_235052_p_: Internal.BiomeAmbience;
        static readonly field_180281_af: Internal.PerlinNoiseGenerator;
        get fTBCBiomeColorIndex(): number;
        set fTBCBiomeColorIndex(c: number);
        set registryName(arg0: ResourceLocation_);
    }
    type Biome_ = Registry.minecraft.worldgen$biome | Biome;
    interface IPackResources extends Internal.ICache {
        getExistenceByResource(): Internal.Map<string, boolean>;
        setExistenceByResource(arg0: Internal.Map_<string, boolean>): void;
    }
    type IPackResources_ = IPackResources;
    class ManaItemsEvent extends net.minecraftforge.eventbus.api.Event {
        add(arg0: Internal.ItemStack): void;
        getItems(): Internal.List<Internal.ItemStack>;
        getPlayer(): Internal.PlayerEntity;
        get items(): Internal.List<Internal.ItemStack>;
        get player(): Internal.PlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.List<Internal.ItemStack>);
    }
    type ManaItemsEvent_ = ManaItemsEvent;
    class SRemoveEntityEffectPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186967_a(arg0: Internal.World): Internal.Entity;
        func_186968_a(): Internal.Effect;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.Effect);
    }
    type SRemoveEntityEffectPacket_ = SRemoveEntityEffectPacket;
    class CreeperEntity extends Internal.MonsterEntity implements Internal.IChargeableMob, Internal.AccessorCreeperEntity {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_70829_a(arg0: number): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        setTimeSinceIgnited(arg0: number): void;
        func_146079_cb(): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_70650_aV(): boolean;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        func_70831_j(arg0: number): number;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        static func_234278_m_(): Internal.AttributeModifierMap$MutableAttribute;
        canRiderInteract(): boolean;
        func_225509_J__(): boolean;
        func_175493_co(): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70832_p(): number;
        func_146078_ca(): boolean;
        getClassification(arg0: boolean): Internal.EntityClassification;
        field_70833_d: number;
        static readonly field_184714_b: Internal.DataParameter<boolean>;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        set timeSinceIgnited(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.CreeperEntity>, arg1: Internal.World);
    }
    type CreeperEntity_ = CreeperEntity;
    class PhantomEntity extends Internal.FlyingEntity implements Internal.IMob {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_203034_a(arg0: number): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_203032_dq(): number;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.PhantomEntity>, arg1: Internal.World);
    }
    type PhantomEntity_ = PhantomEntity;
    class Unit extends Internal.Enum<Internal.Unit> {
        static valueOf(arg0: string): Internal.Unit;
        static values(): Internal.Unit[];
        static readonly INSTANCE: Internal.Unit;
    }
    type Unit_ = "instance" | Unit;
    class ClientPlayerNetworkEvent$LoggedInEvent extends Internal.ClientPlayerNetworkEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PlayerController, arg1: Internal.ClientPlayerEntity, arg2: Internal.NetworkManager);
        constructor();
    }
    type ClientPlayerNetworkEvent$LoggedInEvent_ = ClientPlayerNetworkEvent$LoggedInEvent;
    class PillagerEntity extends Internal.AbstractIllagerEntity implements Internal.ICrossbowUser {
        shouldRiderSit(): boolean;
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_213671_a(arg0: boolean): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_234280_a_(arg0: Internal.LivingEntity, arg1: Vec3, arg2: number): Internal.Vector3f;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        func_234281_b_(arg0: Internal.LivingEntity, arg1: number): void;
        asKJS(): any;
        func_230284_a_(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: Internal.ProjectileEntity, arg3: number): void;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_230283_U__(): void;
        static func_234296_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_234279_a_(arg0: Internal.LivingEntity, arg1: Internal.LivingEntity, arg2: Internal.ProjectileEntity, arg3: number, arg4: number): void;
        func_213675_dX(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.PillagerEntity>, arg1: Internal.World);
    }
    type PillagerEntity_ = PillagerEntity;
    class LootContext$EntityTarget extends Internal.Enum<Internal.LootContext$EntityTarget> implements Internal.EntityTargetKJS {
        static func_186482_a(arg0: string): Internal.LootContext$EntityTarget;
        static valueOf(arg0: string): Internal.LootContext$EntityTarget;
        static values(): Internal.LootContext$EntityTarget[];
        getNameKJS(): string;
        func_216029_a(): Internal.LootParameter<Internal.Entity>;
        static readonly DIRECT_KILLER: Internal.LootContext$EntityTarget;
        static readonly KILLER_PLAYER: Internal.LootContext$EntityTarget;
        static readonly KILLER: Internal.LootContext$EntityTarget;
        static readonly THIS: Internal.LootContext$EntityTarget;
        get nameKJS(): string;
    }
    type LootContext$EntityTarget_ = "this" | "killer" | "direct_killer" | "killer_player" | LootContext$EntityTarget;
    class LootFunctionType extends Internal.LootType<Internal.ILootFunction> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ILootSerializer<Internal.ILootFunction>);
    }
    type LootFunctionType_ = LootFunctionType;
    class OpticParts <A, B> extends Document.Object {
        bounds(): Internal.Set<Internal.TypeToken<Internal.K1>>;
        optic(): Internal.Optic<any, any, any, A, B>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Set<Internal.TypeToken<Internal.K1>>, arg1: Internal.Optic<any, any, any, A, B>);
    }
    type OpticParts_<A, B> = OpticParts<A, B>;
    abstract class StateHolder <O, S> extends Document.Object implements Internal.StateHolderMixin<any>, Internal.FastMapStateHolder<any> {
        getStateIndex(): number;
        getNeighborTable(): Internal.Table<any, any, any>;
        func_235904_r_(): Internal.Collection<Internal.Property<any>>;
        setNeighborTable(table: Internal.Table<any, any, any>): void;
        func_206870_a<T_, V_>(arg0: Internal.Property<T_>, arg1: V_): S;
        func_235899_a_(states: Internal.Map_<any,any>): void;
        func_206871_b(): Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>;
        setStateMap(newValue: Internal.FastMap<any>): void;
        getStateMap(): Internal.FastMap<any>;
        replacePropertyMap(newMap: Internal.ImmutableMap<any, any>): void;
        func_235901_b_<T_>(arg0: Internal.Property<T_>): boolean;
        redirect$cim000$getNeighborFromFastMap(ignore: Internal.Table<any, any, any>, rowKey: any, columnKey: any): any;
        func_235896_a_<T_>(arg0: Internal.Property<T_>): S;
        setStateIndex(newValue: number): void;
        func_235903_d_<T_>(arg0: Internal.Property<T_>): Internal.Optional<T_>;
        getVanillaPropertyMap(): Internal.ImmutableMap<any, any>;
        setInstance(arg0: any): void;
        func_177229_b<T_>(arg0: Internal.Property<T_>): T_;
        field_235892_c_: O;
        get stateIndex(): number;
        get neighborTable(): Internal.Table<any, any, any>;
        get stateMap(): Internal.FastMap<any>;
        get vanillaPropertyMap(): Internal.ImmutableMap<any, any>;
        set instance(arg0: any);
        set stateIndex(newValue: number);
        set stateMap(newValue: Internal.FastMap<any>);
        set neighborTable(table: Internal.Table<any, any, any>);
    }
    type StateHolder_<O, S> = StateHolder<O, S>;
    abstract class Enchantment extends Internal.ForgeRegistryEntry<Internal.Enchantment> {
        func_77320_a(): string;
        func_190936_d(): boolean;
        func_77321_a(arg0: number): number;
        func_77325_b(): number;
        func_77324_c(): Internal.Enchantment$Rarity;
        func_92089_a(arg0: Internal.ItemStack): boolean;
        static func_185262_c(arg0: number): Internal.Enchantment;
        setRegistryName(arg0: ResourceLocation_): any;
        getTags(): Internal.Set<ResourceLocation>;
        func_230310_i_(): boolean;
        isAllowedOnBooks(): boolean;
        func_200305_d(arg0: number): Internal.ITextComponent;
        func_223551_b(arg0: number): number;
        func_191560_c(arg0: Internal.Enchantment_): boolean;
        func_222181_a(arg0: Internal.LivingEntity): Internal.Map<EquipmentSlot, Internal.ItemStack>;
        func_152376_a(arg0: number, arg1: Internal.CreatureAttribute): number;
        func_185261_e(): boolean;
        func_77318_a(arg0: number, arg1: Internal.DamageSource_): number;
        func_151367_b(arg0: Internal.LivingEntity, arg1: Internal.Entity, arg2: number): void;
        func_151368_a(arg0: Internal.LivingEntity, arg1: Internal.Entity, arg2: number): void;
        func_77319_d(): number;
        func_230309_h_(): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack): boolean;
        isIn(arg0: Internal.ITag<Internal.Enchantment>): boolean;
        readonly field_77351_y: Internal.EnchantmentType;
        get allowedOnBooks(): boolean;
        get tags(): Internal.Set<ResourceLocation>;
        set registryName(arg0: ResourceLocation_);
    }
    type Enchantment_ = Registry.minecraft.enchantment | Enchantment;
    class GameRulesJS extends Document.Object {
        getInt(rule: string): number;
        set(rule: string, value: any): void;
        getBoolean(rule: string): boolean;
        getString(rule: string): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(r: Internal.GameRules);
    }
    type GameRulesJS_ = GameRulesJS;
    class DrownedEntity extends Internal.ZombieEntity implements Internal.IRangedAttackMob {
        shouldRiderSit(): boolean;
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_204713_s(arg0: boolean): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        static func_223332_b(arg0: Internal.EntityType_<Internal.DrownedEntity_>, arg1: Internal.IServerWorld_, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_204714_e(arg0: Internal.LivingEntity): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.DrownedEntity>, arg1: Internal.World);
    }
    type DrownedEntity_ = DrownedEntity;
    abstract class GraphicsConfiguration extends Document.Object {
        createCompatibleVolatileImage(arg0: number, arg1: number, arg2: number): Internal.VolatileImage;
        createCompatibleVolatileImage(arg0: number, arg1: number, arg2: Internal.ImageCapabilities, arg3: number): Internal.VolatileImage;
        createCompatibleVolatileImage(arg0: number, arg1: number): Internal.VolatileImage;
        createCompatibleVolatileImage(arg0: number, arg1: number, arg2: Internal.ImageCapabilities): Internal.VolatileImage;
        getColorModel(): Internal.ColorModel;
        getColorModel(arg0: number): Internal.ColorModel;
        getNormalizingTransform(): Internal.AffineTransform;
        getImageCapabilities(): Internal.ImageCapabilities;
        getBufferCapabilities(): Internal.BufferCapabilities;
        createCompatibleImage(arg0: number, arg1: number, arg2: number): Internal.BufferedImage;
        createCompatibleImage(arg0: number, arg1: number): Internal.BufferedImage;
        getDefaultTransform(): Internal.AffineTransform;
        isTranslucencyCapable(): boolean;
        getDevice(): Internal.GraphicsDevice;
        getBounds(): Internal.Rectangle;
        get normalizingTransform(): Internal.AffineTransform;
        get translucencyCapable(): boolean;
        get defaultTransform(): Internal.AffineTransform;
        get bounds(): Internal.Rectangle;
        get colorModel(): Internal.ColorModel;
        get imageCapabilities(): Internal.ImageCapabilities;
        get bufferCapabilities(): Internal.BufferCapabilities;
        get device(): Internal.GraphicsDevice;
    }
    type GraphicsConfiguration_ = GraphicsConfiguration;
    class DimensionStructuresSettings extends Document.Object implements Internal.DimensionStructuresSettingsAccessor, Internal.DimensionStructuresSettingsAccess {
        func_236195_a_(): Internal.Map<net.minecraft.world.gen.feature.structure.Structure<any>, Internal.StructureSeparationSettings>;
        func_236197_a_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>): Internal.StructureSeparationSettings;
        func_236199_b_(): Internal.StructureSpreadSettings;
        static field_236191_b__$md$e571c7$0(arg0: Internal.ImmutableMap<any, any>): void;
        static setDefaults_$md$e571c7$1(arg0: Internal.ImmutableMap<any, any>): void;
        field_236193_d_(arg0: Internal.Map_<any,any>): void;
        static readonly field_236192_c_: Internal.StructureSpreadSettings;
        static field_236191_b_: {};
        static readonly field_236190_a_: Internal.Codec<Internal.DimensionStructuresSettings>;
        set defaults_$md$e571c7$1(arg0: Internal.ImmutableMap<any, any>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Optional<Internal.StructureSpreadSettings>, arg1: Internal.Map<net.minecraft.world.gen.feature.structure.Structure<any>, Internal.StructureSeparationSettings>);
        constructor(arg0: boolean);
    }
    type DimensionStructuresSettings_ = DimensionStructuresSettings;
    class GameTestDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_229022_a_(arg0: BlockPos, arg1: number, arg2: string, arg3: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type GameTestDebugRenderer_ = GameTestDebugRenderer;
    interface NBTSerializable {
        toNBT(): Internal.INBT;
        (): Internal.INBT;
    }
    type NBTSerializable_ = (()=>Internal.INBT) | NBTSerializable;
    interface ICapabilitySerializable <T> extends Internal.ICapabilityProvider, Internal.INBTSerializable<T> {
    }
    type ICapabilitySerializable_<T> = ICapabilitySerializable<T>;
    class CrystalAttributes$Attribute extends Document.Object {
        getProperty(): Internal.CrystalProperty;
        isDiscovered(): boolean;
        getTier(): number;
        get discovered(): boolean;
        get tier(): number;
        get property(): Internal.CrystalProperty;
    }
    type CrystalAttributes$Attribute_ = CrystalAttributes$Attribute;
    class CustomDecoration extends Document.Object {
        setY(arg0: number): void;
        getX(): number;
        setX(arg0: number): void;
        getY(): number;
        getDisplayName(): Internal.ITextComponent;
        getType(): Internal.CustomDecorationType<any, any>;
        setRot(arg0: number): void;
        getRot(): number;
        setDisplayName(arg0: Internal.ITextComponent_): void;
        getTypeId(): string;
        saveToBuffer(arg0: Internal.PacketBuffer): void;
        get displayName(): Internal.ITextComponent;
        get rot(): number;
        get x(): number;
        get y(): number;
        get typeId(): string;
        get type(): Internal.CustomDecorationType<any, any>;
        set displayName(arg0: Internal.ITextComponent_);
        set rot(arg0: number);
        set x(arg0: number);
        set y(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CustomDecorationType<any, any>, arg1: Internal.PacketBuffer);
        constructor(arg0: Internal.CustomDecorationType<any, any>, arg1: number, arg2: number, arg3: number, arg4: Internal.ITextComponent);
    }
    type CustomDecoration_ = CustomDecoration;
    interface IPathNavigator {
        hasNoPath(): boolean;
        isGoingToTeleport(): boolean;
        moveToXYZ(arg0: number, arg1: number, arg2: number): boolean;
        moveToEntity(arg0: Internal.Entity): boolean;
    }
    type IPathNavigator_ = IPathNavigator;
    class ListNBT extends Internal.CollectionNBT<Internal.INBT> {
        func_186858_c(arg0: number): number;
        removeLast(): Internal.INBT;
        getLast(): Internal.INBT;
        replaceAll(arg0: Internal.UnaryOperator<Internal.INBT>): void;
        remove(arg0: number): any;
        remove(arg0: number): Internal.INBT;
        addLast(arg0: Internal.INBT): void;
        func_150285_a_(): string;
        func_197637_c(): Internal.ITextComponent;
        stream(): Internal.Stream<Internal.INBT>;
        getFirst(): Internal.INBT;
        removeFirst(): Internal.INBT;
        get(arg0: number): Internal.INBT;
        get(arg0: number): any;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<Internal.INBT>;
        func_225647_b_(): Internal.INBTType<Internal.ListNBT>;
        func_202170_f(arg0: number): number;
        set(arg0: number, arg1: Internal.INBT): Internal.INBT;
        spliterator(): Internal.Spliterator<Internal.INBT>;
        forEach(arg0: Internal.Consumer_<Internal.INBT_>): void;
        sort(arg0: Internal.Comparator<Internal.INBT>): void;
        func_150306_c(arg0: number): number[];
        func_150305_b(arg0: number): Internal.CompoundNBT;
        removeIf(arg0: Internal.Predicate_<Internal.INBT_>): boolean;
        wrapAsJavaObject(cx: Internal.Context, scope: Internal.Scriptable, staticType: Internal.Class<any>): Internal.Scriptable;
        func_74737_b(): Internal.ListNBT;
        func_150307_f(arg0: number): string;
        func_150309_d(arg0: number): number;
        func_150308_e(arg0: number): number;
        func_202169_e(arg0: number): Internal.ListNBT;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<Internal.INBT>;
        addFirst(arg0: Internal.INBT): void;
        static readonly field_229694_a_: Internal.INBTType<Internal.ListNBT>;
        get last(): Internal.INBT;
        get first(): Internal.INBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ListNBT_ = ListNBT;
    abstract class WorldRenderEvent extends net.minecraftforge.eventbus.api.Event {
        getWorld(): Internal.ClientWorld;
        getWorldRenderer(): Internal.WorldRenderer;
        get world(): Internal.ClientWorld;
        get worldRenderer(): Internal.WorldRenderer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type WorldRenderEvent_ = WorldRenderEvent;
    abstract class AccessibleBundle extends Document.Object {
        toDisplayString(): string;
        toDisplayString(arg0: Internal.Locale): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AccessibleBundle_ = AccessibleBundle;
    interface IModelBuilder <T> {
        addFaceQuad(arg0: Internal.Direction_, arg1: Internal.BakedQuad): T;
        build(): Internal.IBakedModel;
        addGeneralQuad(arg0: Internal.BakedQuad): T;
    }
    type IModelBuilder_<T> = IModelBuilder<T>;
    abstract class AxisRotation extends Internal.Enum<Internal.AxisRotation> {
        func_197517_a(arg0: number, arg1: number, arg2: number, arg3: Internal.Direction$Axis_): number;
        static valueOf(arg0: string): Internal.AxisRotation;
        static func_197516_a(arg0: Internal.Direction$Axis_, arg1: Internal.Direction$Axis_): Internal.AxisRotation;
        static values(): Internal.AxisRotation[];
        func_197514_a(): Internal.AxisRotation;
        func_197513_a(arg0: Internal.Direction$Axis_): Internal.Direction$Axis;
        static readonly BACKWARD: Internal.AxisRotation;
        static readonly field_197521_d: Internal.Direction$Axis[];
        static readonly FORWARD: Internal.AxisRotation;
        static readonly NONE: Internal.AxisRotation;
        static readonly field_197522_e: Internal.AxisRotation[];
    }
    type AxisRotation_ = "none" | "forward" | "backward" | AxisRotation;
    class AttributeModifier$Operation extends Internal.Enum<Internal.AttributeModifier$Operation> {
        static func_220372_a(arg0: number): Internal.AttributeModifier$Operation;
        func_220371_a(): number;
        static valueOf(arg0: string): Internal.AttributeModifier$Operation;
        static values(): Internal.AttributeModifier$Operation[];
        static readonly ADDITION: Internal.AttributeModifier$Operation;
        static readonly MULTIPLY_BASE: Internal.AttributeModifier$Operation;
        static readonly MULTIPLY_TOTAL: Internal.AttributeModifier$Operation;
    }
    type AttributeModifier$Operation_ = "addition" | "multiply_base" | "multiply_total" | AttributeModifier$Operation;
    interface ISceneBuilderJS$ISpecialInstructionsJS {
        birbOnTurntable(arg0: BlockPos): Internal.ElementLink<ParrotElement>;
        moveParrot(arg0: Internal.ElementLink<ParrotElement>, arg1: Vec3, arg2: number): void;
        changeBirbPose(arg0: Internal.ElementLink<ParrotElement>, arg1: java_.util.function_.Supplier_<Internal.ParrotElement$ParrotPose_>): void;
        createBirb(arg0: Vec3, arg1: java_.util.function_.Supplier_<Internal.ParrotElement$ParrotPose_>): Internal.ElementLink<ParrotElement>;
        birbOnSpinnyShaft(arg0: BlockPos): Internal.ElementLink<ParrotElement>;
        createCart(arg0: Vec3, arg1: number, arg2: Internal.MinecartElement$MinecartConstructor_): Internal.ElementLink<Internal.MinecartElement>;
        rotateParrot(arg0: Internal.ElementLink<ParrotElement>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        getInternal(): Internal.SceneBuilder$SpecialInstructions;
        movePointOfInterest(arg0: Vec3): void;
        rotateCart(arg0: Internal.ElementLink<Internal.MinecartElement>, arg1: number, arg2: number): void;
        moveCart(arg0: Internal.ElementLink<Internal.MinecartElement>, arg1: Vec3, arg2: number): void;
        hideElement<T>(arg0: Internal.ElementLink<T>, arg1: Internal.Direction_): void;
        (): Internal.SceneBuilder$SpecialInstructions;
    }
    type ISceneBuilderJS$ISpecialInstructionsJS_ = (()=>Internal.SceneBuilder$SpecialInstructions) | ISceneBuilderJS$ISpecialInstructionsJS;
    interface PropertyChangeListener extends Internal.EventListener {
        propertyChange(arg0: Internal.PropertyChangeEvent): void;
        (arg0: Internal.PropertyChangeEvent): void;
    }
    type PropertyChangeListener_ = ((arg0: Internal.PropertyChangeEvent)=>void) | PropertyChangeListener;
    interface IWeatherParticleRenderHandler {
        render(arg0: number, arg1: Internal.ClientWorld, arg2: Internal.Minecraft, arg3: Internal.ActiveRenderInfo): void;
        (arg0: number, arg1: Internal.ClientWorld, arg2: Internal.Minecraft, arg3: Internal.ActiveRenderInfo): void;
    }
    type IWeatherParticleRenderHandler_ = ((arg0: number, arg1: Internal.ClientWorld, arg2: Internal.Minecraft, arg3: Internal.ActiveRenderInfo)=>void) | IWeatherParticleRenderHandler;
    class RegistryObject <T> extends Document.Object implements java_.util.function_.Supplier<T> {
        isPresent(): boolean;
        getId(): ResourceLocation;
        orElse(arg0: T): T;
        orElseThrow<X_>(arg0: java_.util.function_.Supplier_<X_>): T;
        flatMap<U_>(arg0: Internal.Function_<T, Internal.Optional_<U_>>): Internal.Optional<U_>;
        filter(arg0: Internal.Predicate_<T>): Internal.RegistryObject<T>;
        orElseGet(arg0: java_.util.function_.Supplier_<T>): T;
        stream(): Internal.Stream<T>;
        updateReference(arg0: Internal.IForgeRegistry<T>): void;
        ifPresent(arg0: Internal.Consumer_<T>): void;
        static of<T_, U_>(arg0: ResourceLocation_, arg1: java_.util.function_.Supplier_<Internal.Class_<T_>>): Internal.RegistryObject<U_>;
        static of<T_, U_>(arg0: ResourceLocation_, arg1: Internal.IForgeRegistry<T_>): Internal.RegistryObject<U_>;
        static of<T_, U_>(arg0: ResourceLocation_, arg1: Internal.Class<T_>, arg2: string): Internal.RegistryObject<U_>;
        get(): Internal.IForgeRegistryEntry<any>;
        get(): any;
        map<U_>(arg0: Internal.Function_<T, U_>): Internal.Optional<U_>;
        lazyMap<U_>(arg0: Internal.Function_<T, U_>): java_.util.function_.Supplier<U_>;
        get id(): ResourceLocation;
        get present(): boolean;
    }
    type RegistryObject_<T> = RegistryObject<T>;
    interface Debugger {
        handleCompilationDone(arg0: Internal.Context, arg1: Internal.DebuggableScript, arg2: string): void;
        getFrame(arg0: Internal.Context, arg1: Internal.DebuggableScript): Internal.DebugFrame;
    }
    type Debugger_ = Debugger;
    class ChunkEvent$Load extends Internal.ChunkEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IChunk);
        constructor();
    }
    type ChunkEvent$Load_ = ChunkEvent$Load;
    class LivingHealEvent extends Internal.LivingEvent {
        setAmount(arg0: number): void;
        getAmount(): number;
        get amount(): number;
        set amount(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: number);
    }
    type LivingHealEvent_ = LivingHealEvent;
    class SMoveVehiclePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_186958_e(): number;
        func_186959_d(): number;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_186956_c(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186955_b(): number;
        func_186957_a(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity);
    }
    type SMoveVehiclePacket_ = SMoveVehiclePacket;
    interface ChunkStatusListener {
        onChunkRemoved(arg0: number, arg1: number): void;
        onChunkAdded(arg0: number, arg1: number): void;
    }
    type ChunkStatusListener_ = ChunkStatusListener;
    abstract class Calendar extends Document.Object implements Internal.Serializable, Internal.Cloneable, Internal.Comparable<Internal.Calendar> {
        static getAvailableCalendarTypes(): Internal.Set<string>;
        getMinimalDaysInFirstWeek(): number;
        getGreatestMinimum(arg0: number): number;
        getWeekYear(): number;
        getTimeZone(): Internal.TimeZone;
        before(arg0: any): boolean;
        isLenient(): boolean;
        getTime(): Internal.Date;
        roll(arg0: number, arg1: number): void;
        roll(arg0: number, arg1: boolean): void;
        setMinimalDaysInFirstWeek(arg0: number): void;
        compareTo(arg0: Internal.Calendar): number;
        compareTo(arg0: any): number;
        getMaximum(arg0: number): number;
        setLenient(arg0: boolean): void;
        getActualMaximum(arg0: number): number;
        getWeeksInWeekYear(): number;
        get(arg0: number): number;
        getMinimum(arg0: number): number;
        setTimeZone(arg0: Internal.TimeZone): void;
        after(arg0: any): boolean;
        getDisplayNames(arg0: number, arg1: number, arg2: Internal.Locale): Internal.Map<string, number>;
        static getAvailableLocales(): Internal.Locale[];
        setTime(arg0: Internal.Date): void;
        add(arg0: number, arg1: number): void;
        getCalendarType(): string;
        set(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        set(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        set(arg0: number, arg1: number, arg2: number): void;
        set(arg0: number, arg1: number): void;
        isSet(arg0: number): boolean;
        getLeastMaximum(arg0: number): number;
        getActualMinimum(arg0: number): number;
        getTimeInMillis(): number;
        clear(arg0: number): void;
        clear(): void;
        setFirstDayOfWeek(arg0: number): void;
        toInstant(): Internal.Instant;
        isWeekDateSupported(): boolean;
        getFirstDayOfWeek(): number;
        setWeekDate(arg0: number, arg1: number, arg2: number): void;
        setTimeInMillis(arg0: number): void;
        getDisplayName(arg0: number, arg1: number, arg2: Internal.Locale): string;
        clone(): any;
        static getInstance(): Internal.Calendar;
        static getInstance(arg0: Internal.TimeZone, arg1: Internal.Locale): Internal.Calendar;
        static getInstance(arg0: Internal.TimeZone): Internal.Calendar;
        static getInstance(arg0: Internal.Locale): Internal.Calendar;
        static readonly MONTH: 2;
        static readonly THURSDAY: 5;
        static readonly WEEK_OF_MONTH: 4;
        static readonly DECEMBER: 11;
        static readonly NARROW_STANDALONE: 32772;
        static readonly DAY_OF_WEEK_IN_MONTH: 8;
        static readonly NARROW_FORMAT: 4;
        static readonly WEDNESDAY: 4;
        static readonly LONG_STANDALONE: 32770;
        static readonly YEAR: 1;
        static readonly WEEK_OF_YEAR: 3;
        static readonly FIELD_COUNT: 17;
        static readonly SATURDAY: 7;
        static readonly MINUTE: 12;
        static readonly JANUARY: 0;
        static readonly DST_OFFSET: 16;
        static readonly SUNDAY: 1;
        static readonly LONG_FORMAT: 2;
        static readonly TUESDAY: 3;
        static readonly SEPTEMBER: 8;
        static readonly AM: 0;
        static readonly DATE: 5;
        static readonly ERA: 0;
        static readonly AUGUST: 7;
        static readonly JULY: 6;
        static readonly DAY_OF_WEEK: 7;
        static readonly DAY_OF_YEAR: 6;
        static readonly MAY: 4;
        static readonly DAY_OF_MONTH: 5;
        static readonly HOUR: 10;
        static readonly FRIDAY: 6;
        static readonly AM_PM: 9;
        static readonly FEBRUARY: 1;
        static readonly ALL_STYLES: 0;
        static readonly ZONE_OFFSET: 15;
        static readonly HOUR_OF_DAY: 11;
        static readonly UNDECIMBER: 12;
        static readonly APRIL: 3;
        static readonly LONG: 2;
        static readonly JUNE: 5;
        static readonly SHORT_STANDALONE: 32769;
        static readonly OCTOBER: 9;
        static readonly NOVEMBER: 10;
        static readonly SHORT: 1;
        static readonly MONDAY: 2;
        static readonly MARCH: 2;
        static readonly SECOND: 13;
        static readonly MILLISECOND: 14;
        static readonly PM: 1;
        static readonly SHORT_FORMAT: 1;
        get calendarType(): string;
        get instance(): Internal.Calendar;
        get availableCalendarTypes(): Internal.Set<string>;
        get timeZone(): Internal.TimeZone;
        get timeInMillis(): number;
        get lenient(): boolean;
        get weekDateSupported(): boolean;
        get availableLocales(): Internal.Locale[];
        get minimalDaysInFirstWeek(): number;
        get firstDayOfWeek(): number;
        get weekYear(): number;
        get time(): Internal.Date;
        get weeksInWeekYear(): number;
        set firstDayOfWeek(arg0: number);
        set minimalDaysInFirstWeek(arg0: number);
        set timeZone(arg0: Internal.TimeZone);
        set timeInMillis(arg0: number);
        set time(arg0: Internal.Date);
        set lenient(arg0: boolean);
    }
    type Calendar_ = Calendar;
    interface IMouseDragHandler {
        handleDragCanceled(): void;
        handleDragStart(arg0: Internal.Screen, arg1: number, arg2: number): Internal.IMouseDragHandler;
        handleDragComplete(arg0: Internal.Screen, arg1: number, arg2: number): Internal.IMouseDragHandler;
    }
    type IMouseDragHandler_ = IMouseDragHandler;
    class ItemRequirement$StackRequirement extends Document.Object {
        readonly item: Internal.ItemStack;
        readonly usage: Internal.ItemRequirement$ItemUseType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemRequirement$ItemUseType, arg1: Internal.ItemStack);
    }
    type ItemRequirement$StackRequirement_ = ItemRequirement$StackRequirement;
    interface IMachineComponent {
        getManager(): Internal.IMachineComponentManager;
        getType(): Internal.MachineComponentType<any>;
        getMode(): Internal.ComponentIOMode;
    }
    type IMachineComponent_ = IMachineComponent;
    class TransportedItemStack extends Document.Object implements Internal.Comparable<Internal.TransportedItemStack> {
        serializeNBT(): Internal.CompoundNBT;
        static read(arg0: Internal.CompoundNBT_): Internal.TransportedItemStack;
        copy(): Internal.TransportedItemStack;
        compareTo(arg0: Internal.TransportedItemStack): number;
        compareTo(arg0: any): number;
        getSimilar(): Internal.TransportedItemStack;
        getTargetSideOffset(): number;
        lockedExternally: boolean;
        stack: Internal.ItemStack;
        beltPosition: number;
        insertedAt: number;
        insertedFrom: Internal.Direction;
        prevSideOffset: number;
        angle: number;
        prevBeltPosition: number;
        sideOffset: number;
        locked: boolean;
        processedBy: Internal.InWorldProcessing$Type;
        processingTime: number;
        get similar(): Internal.TransportedItemStack;
        get targetSideOffset(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemStack);
    }
    type TransportedItemStack_ = TransportedItemStack;
    interface ITag <T> {
        func_205596_a(arg0: Internal.Random): T;
        func_230235_a_(arg0: T): boolean;
        func_230236_b_(): Internal.List<T>;
    }
    type ITag_<T> = ITag<T>;
    abstract class SpecialRecipe extends Document.Object implements Internal.ICraftingRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_199560_c(): ResourceLocation;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_192399_d(): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        func_77571_b(): Internal.ItemStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type SpecialRecipe_ = SpecialRecipe;
    interface Stack <K> {
        pop(): K;
        top(): K;
        isEmpty(): boolean;
        push(arg0: K): void;
        peek(arg0: number): K;
    }
    type Stack_<K> = Stack<K>;
    class ElementLink <T> extends Document.Object {
        cast(arg0: Internal.PonderElement): T;
        getId(): Internal.UUID;
        get id(): Internal.UUID;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Class<T>);
        constructor(arg0: Internal.Class<T>, arg1: Internal.UUID);
    }
    type ElementLink_<T> = ElementLink<T>;
    class Cursor extends Document.Object implements Internal.Serializable {
        getName(): string;
        getType(): number;
        static getSystemCustomCursor(arg0: string): Internal.Cursor;
        static getPredefinedCursor(arg0: number): Internal.Cursor;
        static getDefaultCursor(): Internal.Cursor;
        static readonly N_RESIZE_CURSOR: 8;
        static readonly S_RESIZE_CURSOR: 9;
        static readonly TEXT_CURSOR: 2;
        static readonly NW_RESIZE_CURSOR: 6;
        static readonly W_RESIZE_CURSOR: 10;
        static readonly SE_RESIZE_CURSOR: 5;
        static readonly CUSTOM_CURSOR: -1;
        static readonly NE_RESIZE_CURSOR: 7;
        static readonly SW_RESIZE_CURSOR: 4;
        static readonly DEFAULT_CURSOR: 0;
        static readonly CROSSHAIR_CURSOR: 1;
        static readonly E_RESIZE_CURSOR: 11;
        static readonly HAND_CURSOR: 12;
        static readonly WAIT_CURSOR: 3;
        static readonly MOVE_CURSOR: 13;
        get name(): string;
        get type(): number;
        get defaultCursor(): Internal.Cursor;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type Cursor_ = Cursor;
    interface Message {
        getString(): string;
        (): string;
    }
    type Message_ = (()=>string) | Message;
    class EnderChestInventory extends Internal.Inventory {
        func_213901_a(arg0: Internal.Item_): number;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        func_146031_a(arg0: Internal.EnderChestTileEntity): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EnderChestInventory_ = EnderChestInventory;
    interface AbstractBlock$IPositionPredicate {
        test(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        (arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
    }
    type AbstractBlock$IPositionPredicate_ = ((arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos)=>boolean) | AbstractBlock$IPositionPredicate;
    abstract class ProjectileItemEntity extends Internal.ThrowableEntity implements Internal.IRendersAsItem {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_184543_l(): Internal.ItemStack;
        func_213884_b(arg0: Internal.ItemStack): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213281_b(arg0: Internal.CompoundNBT_): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70037_a(arg0: Internal.CompoundNBT_): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ProjectileItemEntity>, arg1: Internal.LivingEntity, arg2: Internal.World);
        constructor(arg0: Internal.EntityType<Internal.ProjectileItemEntity>, arg1: number, arg2: number, arg3: number, arg4: Internal.World);
        constructor(arg0: Internal.EntityType<Internal.ProjectileItemEntity>, arg1: Internal.World);
    }
    type ProjectileItemEntity_ = ProjectileItemEntity;
    class CInputPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_229755_e_(): boolean;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149620_c(): number;
        func_192620_b(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149618_e(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: boolean, arg3: boolean);
    }
    type CInputPacket_ = CInputPacket;
    class TimeUnit extends Internal.Enum<Internal.TimeUnit> {
        toChronoUnit(): Internal.ChronoUnit;
        timedJoin(arg0: Internal.Thread, arg1: number): void;
        timedWait(arg0: any, arg1: number): void;
        static valueOf(arg0: string): Internal.TimeUnit;
        static values(): Internal.TimeUnit[];
        convert(arg0: Internal.Duration): number;
        convert(arg0: number, arg1: Internal.TimeUnit_): number;
        toSeconds(arg0: number): number;
        sleep(arg0: number): void;
        toNanos(arg0: number): number;
        toMinutes(arg0: number): number;
        toHours(arg0: number): number;
        static of(arg0: Internal.ChronoUnit_): Internal.TimeUnit;
        toMillis(arg0: number): number;
        toDays(arg0: number): number;
        toMicros(arg0: number): number;
        static readonly MILLISECONDS: Internal.TimeUnit;
        static readonly MICROSECONDS: Internal.TimeUnit;
        static readonly HOURS: Internal.TimeUnit;
        static readonly SECONDS: Internal.TimeUnit;
        static readonly NANOSECONDS: Internal.TimeUnit;
        static readonly DAYS: Internal.TimeUnit;
        static readonly MINUTES: Internal.TimeUnit;
    }
    type TimeUnit_ = "nanoseconds" | "microseconds" | "milliseconds" | "seconds" | "minutes" | "hours" | "days" | TimeUnit;
    interface ITextProperties {
        func_230439_a_<T>(arg0: Internal.ITextProperties$IStyledTextAcceptor_<T>, arg1: Internal.Style): Internal.Optional<T>;
        func_230438_a_<T>(arg0: Internal.ITextProperties$ITextAcceptor_<T>): Internal.Optional<T>;
        getString(): string;
    }
    type ITextProperties_ = ITextProperties;
    class ShapedRecipeJS extends Internal.RecipeJS {
        noMirror(): Internal.ShapedRecipeJS;
        noShrink(): Internal.ShapedRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ShapedRecipeJS_ = ShapedRecipeJS;
    class AtomicReferenceArray <E> extends Document.Object implements Internal.Serializable {
        setPlain(arg0: number, arg1: E): void;
        weakCompareAndSetPlain(arg0: number, arg1: E, arg2: E): boolean;
        set(arg0: number, arg1: E): void;
        weakCompareAndSetRelease(arg0: number, arg1: E, arg2: E): boolean;
        weakCompareAndSet(arg0: number, arg1: E, arg2: E): boolean;
        compareAndExchange(arg0: number, arg1: E, arg2: E): E;
        getAcquire(arg0: number): E;
        length(): number;
        updateAndGet(arg0: number, arg1: Internal.UnaryOperator<E>): E;
        setOpaque(arg0: number, arg1: E): void;
        getPlain(arg0: number): E;
        compareAndExchangeRelease(arg0: number, arg1: E, arg2: E): E;
        getOpaque(arg0: number): E;
        compareAndSet(arg0: number, arg1: E, arg2: E): boolean;
        compareAndExchangeAcquire(arg0: number, arg1: E, arg2: E): E;
        get(arg0: number): E;
        lazySet(arg0: number, arg1: E): void;
        setRelease(arg0: number, arg1: E): void;
        getAndUpdate(arg0: number, arg1: Internal.UnaryOperator<E>): E;
        getAndSet(arg0: number, arg1: E): E;
        weakCompareAndSetAcquire(arg0: number, arg1: E, arg2: E): boolean;
        getAndAccumulate(arg0: number, arg1: E, arg2: Internal.BinaryOperator<E>): E;
        accumulateAndGet(arg0: number, arg1: E, arg2: Internal.BinaryOperator<E>): E;
        weakCompareAndSetVolatile(arg0: number, arg1: E, arg2: E): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
        constructor(arg0: E[]);
    }
    type AtomicReferenceArray_<E> = AtomicReferenceArray<E>;
    class StructureType extends Document.Object implements Internal.IForgeRegistryEntry<Internal.StructureType> {
        getDisplayName(): Internal.ITextComponent;
        getStructure(): Internal.BlockArray;
        getRegistryType(): Internal.Class<Internal.StructureType>;
        getRegistryName(): ResourceLocation;
        setRegistryName(arg0: ResourceLocation_): any;
        setRegistryName(arg0: ResourceLocation_): Internal.StructureType;
        observe(arg0: Internal.World, arg1: BlockPos): Internal.ChangeSubscriber<Internal.ChangeObserverStructure>;
        get registryType(): Internal.Class<Internal.StructureType>;
        get displayName(): Internal.ITextComponent;
        get registryName(): ResourceLocation;
        get structure(): Internal.BlockArray;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: java_.util.function_.Supplier<Internal.BlockArray>);
    }
    type StructureType_ = Registry.astralsorcery.structure_types | StructureType;
    abstract class EnumSet <E> extends Internal.AbstractSet<E> implements Internal.Cloneable, Internal.Serializable {
        static allOf<E_>(arg0: Internal.Class<E_>): Internal.EnumSet<E_>;
        static complementOf<E_>(arg0: Internal.EnumSet<E_>): Internal.EnumSet<E_>;
        spliterator(): Internal.Spliterator<E>;
        stream(): Internal.Stream<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_): Internal.EnumSet<E_>;
        static of<E_>(arg0: E_, arg1: E_): Internal.EnumSet<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_): Internal.EnumSet<E_>;
        static of<E_>(arg0: E_, ...arg1: E_[]): Internal.EnumSet<E_>;
        static of<E_>(arg0: E_): Internal.EnumSet<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_): Internal.EnumSet<E_>;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        clone(): Internal.EnumSet<E>;
        clone(): any;
        static range<E_>(arg0: E_, arg1: E_): Internal.EnumSet<E_>;
        parallelStream(): Internal.Stream<E>;
        static noneOf<E_>(arg0: Internal.Class<E_>): Internal.EnumSet<E_>;
        static copyOf<E_>(arg0: Internal.Collection<E_>): Internal.EnumSet<E_>;
        static copyOf<E_>(arg0: Internal.EnumSet<E_>): Internal.EnumSet<E_>;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
    }
    type EnumSet_<E> = EnumSet<E>;
    interface Int2ObjectMap$FastEntrySet <V> extends Internal.ObjectSet<Internal.Int2ObjectMap$Entry<V>> {
        fastForEach(arg0: Internal.Consumer_<Internal.Int2ObjectMap$Entry_<V>>): void;
        fastIterator(): Internal.ObjectIterator<Internal.Int2ObjectMap$Entry<V>>;
        (): Internal.ObjectIterator<Internal.Int2ObjectMap$Entry<V>>;
    }
    type Int2ObjectMap$FastEntrySet_<V> = (()=>Internal.ObjectIterator<Internal.Int2ObjectMap$Entry<V>>) | Int2ObjectMap$FastEntrySet<V>;
    class DyingPhase extends Internal.Phase {
        func_188652_i(): Internal.PhaseType<Internal.DyingPhase>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type DyingPhase_ = DyingPhase;
    class Property$Type extends Internal.Enum<Internal.Property$Type> {
        static tryParse(arg0: string): Internal.Property$Type;
        static valueOf(arg0: string): Internal.Property$Type;
        static values(): Internal.Property$Type[];
        getID(): string;
        static readonly COLOR: Internal.Property$Type;
        static readonly MOD_ID: Internal.Property$Type;
        static readonly STRING: Internal.Property$Type;
        static readonly DOUBLE: Internal.Property$Type;
        static readonly BOOLEAN: Internal.Property$Type;
        static readonly INTEGER: Internal.Property$Type;
        get iD(): string;
    }
    type Property$Type_ = "string" | "integer" | "boolean" | "double" | "color" | "mod_id" | Property$Type;
    abstract class ScriptableObject extends Document.Object implements Internal.Scriptable, Internal.SymbolScriptable, Internal.Serializable, Internal.DebuggableObject, Internal.ConstProperties {
        isSealed(): boolean;
        setParentScope(m: Internal.Scriptable): void;
        static redefineProperty(obj: Internal.Scriptable, name: string, isConst: boolean): void;
        putConst(name: string, start: Internal.Scriptable, value: any): void;
        static getTypedProperty<T_>(s: Internal.Scriptable, index: number, type: Internal.Class<T_>): T_;
        static getTypedProperty<T_>(s: Internal.Scriptable, name: string, type: Internal.Class<T_>): T_;
        static getArrayPrototype(scope: Internal.Scriptable): Internal.Scriptable;
        getIds(): any[];
        getAllIds(): any[];
        put(name: string, start: Internal.Scriptable, value: any): void;
        put(index: number, start: Internal.Scriptable, value: any): void;
        put(key: Internal.Symbol, start: Internal.Scriptable, value: any): void;
        static getDefaultValue(object: Internal.Scriptable, typeHint: Internal.Class<any>): any;
        getDefaultValue(typeHint: Internal.Class<any>): any;
        defineOwnProperties(cx: Internal.Context, props: Internal.ScriptableObject): void;
        defineProperty(propertyName: string, delegateTo: any, getter: Internal.Method, setter: Internal.Method, attributes: number): void;
        defineProperty(key: Internal.Symbol, value: any, attributes: number): void;
        static defineProperty(destination: Internal.Scriptable, propertyName: string, value: any, attributes: number): void;
        defineProperty(propertyName: string, clazz: Internal.Class<any>, attributes: number): void;
        defineProperty(propertyName: string, value: any, attributes: number): void;
        setGetterOrSetter(name: string, index: number, getterOrSetter: Internal.Callable_, isSetter: boolean): void;
        avoidObjectDetection(): boolean;
        has(name: string, start: Internal.Scriptable): boolean;
        has(key: Internal.Symbol, start: Internal.Scriptable): boolean;
        has(index: number, start: Internal.Scriptable): boolean;
        getExternalArrayLength(): any;
        getAttributes(name: string): number;
        getAttributes(sym: Internal.Symbol): number;
        getAttributes(index: number): number;
        hasInstance(instance: Internal.Scriptable): boolean;
        getAssociatedValue(key: any): any;
        static getPropertyIds(obj: Internal.Scriptable): any[];
        static hasProperty(obj: Internal.Scriptable, name: string): boolean;
        static hasProperty(obj: Internal.Scriptable, key: Internal.Symbol): boolean;
        static hasProperty(obj: Internal.Scriptable, index: number): boolean;
        getExternalArrayData(): Internal.ExternalArrayData;
        size(): number;
        defineOwnProperty(cx: Internal.Context, id: any, desc: Internal.ScriptableObject): void;
        static getFunctionPrototype(scope: Internal.Scriptable): Internal.Scriptable;
        getClassName(): string;
        getParentScope(): Internal.Scriptable;
        preventExtensions(): void;
        setExternalArrayData(array: Internal.ExternalArrayData): void;
        static callMethod(obj: Internal.Scriptable, methodName: string, args: any[]): any;
        static callMethod(cx: Internal.Context, obj: Internal.Scriptable, methodName: string, args: any[]): any;
        getTypeOf(): string;
        static getTopScopeValue(scope: Internal.Scriptable, key: any): any;
        sealObject(): void;
        setAttributes(key: Internal.Symbol, attributes: number): void;
        setAttributes(name: string, attributes: number): void;
        setAttributes(index: number, attributes: number): void;
        static putProperty(obj: Internal.Scriptable, name: string, value: any): void;
        static putProperty(obj: Internal.Scriptable, key: Internal.Symbol, value: any): void;
        static putProperty(obj: Internal.Scriptable, index: number, value: any): void;
        delete(key: Internal.Symbol): void;
        delete(name: string): void;
        delete(index: number): void;
        associateValue(key: any, value: any): any;
        static deleteProperty(obj: Internal.Scriptable, index: number): boolean;
        static deleteProperty(obj: Internal.Scriptable, name: string): boolean;
        getPrototype(): Internal.Scriptable;
        static getObjectPrototype(scope: Internal.Scriptable): Internal.Scriptable;
        isExtensible(): boolean;
        isConst(name: string): boolean;
        get(key: any): any;
        get(name: string, start: Internal.Scriptable): any;
        get(key: Internal.Symbol, start: Internal.Scriptable): any;
        get(index: number, start: Internal.Scriptable): any;
        static putConstProperty(obj: Internal.Scriptable, name: string, value: any): void;
        getGetterOrSetter(name: string, index: number, isSetter: boolean): any;
        static getTopLevelScope(obj: Internal.Scriptable): Internal.Scriptable;
        static getProperty(obj: Internal.Scriptable, index: number): any;
        static getProperty(obj: Internal.Scriptable, name: string): any;
        static getProperty(obj: Internal.Scriptable, key: Internal.Symbol): any;
        static defineClass<T_>(scope: Internal.Scriptable, clazz: Internal.Class<T_>, sealed: boolean, mapInheritance: boolean): string;
        static defineClass<T_>(scope: Internal.Scriptable, clazz: Internal.Class<T_>, sealed: boolean): void;
        static defineClass<T_>(scope: Internal.Scriptable, clazz: Internal.Class<T_>): void;
        isEmpty(): boolean;
        defineFunctionProperties(names: string[], clazz: Internal.Class<any>, attributes: number): void;
        static getClassPrototype(scope: Internal.Scriptable, className: string): Internal.Scriptable;
        setPrototype(m: Internal.Scriptable): void;
        defineConst(name: string, start: Internal.Scriptable): void;
        static defineConstProperty(destination: Internal.Scriptable, propertyName: string): void;
        static getGeneratorFunctionPrototype(scope: Internal.Scriptable): Internal.Scriptable;
        static readonly DONTENUM: 2;
        static readonly CONST: 13;
        static readonly UNINITIALIZED_CONST: 8;
        static readonly EMPTY: 0;
        static readonly READONLY: 1;
        static readonly PERMANENT: 4;
        get sealed(): boolean;
        get externalArrayData(): Internal.ExternalArrayData;
        get parentScope(): Internal.Scriptable;
        get ids(): any[];
        get className(): string;
        get externalArrayLength(): any;
        get allIds(): any[];
        get prototype(): Internal.Scriptable;
        get extensible(): boolean;
        get typeOf(): string;
        get empty(): boolean;
        set externalArrayData(array: Internal.ExternalArrayData);
        set parentScope(m: Internal.Scriptable);
        set prototype(m: Internal.Scriptable);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(scope: Internal.Scriptable, prototype: Internal.Scriptable);
    }
    type ScriptableObject_ = ScriptableObject;
    class IsoEra extends Internal.Enum<Internal.IsoEra> implements Internal.Era {
        getLong(arg0: Internal.TemporalField): number;
        getValue(): number;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        static valueOf(arg0: string): Internal.IsoEra;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        get(arg0: Internal.TemporalField): number;
        static of(arg0: number): Internal.IsoEra;
        static values(): Internal.IsoEra[];
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        isSupported(arg0: Internal.TemporalField): boolean;
        static readonly CE: Internal.IsoEra;
        static readonly BCE: Internal.IsoEra;
        get value(): number;
    }
    type IsoEra_ = "bce" | "ce" | IsoEra;
    class IDataManager$DataEntry <T> extends Document.Object {
        getValue(): T;
        readValue(arg0: Internal.CompoundNBT_, arg1: boolean): void;
        isDirty(): boolean;
        static read(arg0: Internal.PacketBuffer): Internal.IDataManager$DataEntry<any>;
        markDirty(): void;
        setValue(arg0: T, arg1: boolean): void;
        writeValue(): Internal.CompoundNBT;
        clean(): void;
        getTrackedData(): Internal.TrackedData<T>;
        write(arg0: Internal.PacketBuffer): void;
        get dirty(): boolean;
        get trackedData(): Internal.TrackedData<T>;
        get value(): T;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TrackedData<T>);
    }
    type IDataManager$DataEntry_<T> = IDataManager$DataEntry<T>;
    interface ExternalArrayData {
        setArrayElement(arg0: number, arg1: any): void;
        getArrayLength(): number;
        getArrayElement(arg0: number): any;
    }
    type ExternalArrayData_ = ExternalArrayData;
    interface IChestLid {
        func_195480_a(arg0: number): number;
        (arg0: number): number;
    }
    type IChestLid_ = ((arg0: number)=>number) | IChestLid;
    abstract class ImmutableMultiset <E> extends Internal.ImmutableCollection<E> implements Internal.Multiset<E> {
        add(arg0: E, arg1: number): number;
        forEachEntry(arg0: Internal.ObjIntConsumer_<E>): void;
        static toImmutableMultiset<E_>(): Internal.Collector<E_, any, Internal.ImmutableMultiset<E_>>;
        entrySet(): Internal.Set<any>;
        entrySet(): Internal.ImmutableSet<Internal.Multiset$Entry<E>>;
        forEach(arg0: Internal.Consumer_<E>): void;
        count(arg0: any): number;
        static copyOf<E_>(arg0: Internal.Iterator<E_>): Internal.ImmutableMultiset<E_>;
        static copyOf<E_>(arg0: E_[]): Internal.ImmutableMultiset<E_>;
        static copyOf<E_>(arg0: Internal.Iterable_<E_>): Internal.ImmutableMultiset<E_>;
        asList(): Internal.ImmutableList<E>;
        remove(arg0: any, arg1: number): number;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.UnmodifiableIterator<E>;
        stream(): Internal.Stream<E>;
        elementSet(): Internal.Set<any>;
        elementSet(): Internal.ImmutableSet<E>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_): Internal.ImmutableMultiset<E_>;
        static of<E_>(arg0: E_): Internal.ImmutableMultiset<E_>;
        static of<E_>(arg0: E_, arg1: E_): Internal.ImmutableMultiset<E_>;
        static of<E_>(): Internal.ImmutableMultiset<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, ...arg6: E_[]): Internal.ImmutableMultiset<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_): Internal.ImmutableMultiset<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_): Internal.ImmutableMultiset<E_>;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        static builder<E_>(): Internal.ImmutableMultiset$Builder<E_>;
        parallelStream(): Internal.Stream<E>;
        setCount(arg0: E, arg1: number, arg2: number): boolean;
        setCount(arg0: E, arg1: number): number;
    }
    type ImmutableMultiset_<E> = ImmutableMultiset<E>;
    class BlockPartRotation extends Document.Object {
        readonly field_178343_c: number;
        readonly field_178344_a: Internal.Vector3f;
        readonly field_178341_d: boolean;
        readonly field_178342_b: Internal.Direction$Axis;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Vector3f, arg1: Internal.Direction$Axis, arg2: number, arg3: boolean);
    }
    type BlockPartRotation_ = BlockPartRotation;
    class Biome$Category extends Internal.Enum<Internal.Biome$Category> implements Internal.IStringSerializable {
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.Biome$Category;
        static func_235103_a_(arg0: string): Internal.Biome$Category;
        static values(): Internal.Biome$Category[];
        func_222352_a(): string;
        static readonly BEACH: Internal.Biome$Category;
        static readonly MESA: Internal.Biome$Category;
        static readonly SAVANNA: Internal.Biome$Category;
        static readonly THEEND: Internal.Biome$Category;
        static readonly JUNGLE: Internal.Biome$Category;
        static readonly OCEAN: Internal.Biome$Category;
        static readonly TAIGA: Internal.Biome$Category;
        static readonly DESERT: Internal.Biome$Category;
        static readonly RIVER: Internal.Biome$Category;
        static readonly FOREST: Internal.Biome$Category;
        static readonly MUSHROOM: Internal.Biome$Category;
        static readonly field_235102_r_: Internal.Codec<Internal.Biome$Category>;
        static readonly NETHER: Internal.Biome$Category;
        static readonly PLAINS: Internal.Biome$Category;
        static readonly SWAMP: Internal.Biome$Category;
        static readonly NONE: Internal.Biome$Category;
        static readonly EXTREME_HILLS: Internal.Biome$Category;
        static readonly ICY: Internal.Biome$Category;
    }
    type Biome$Category_ = "none" | "taiga" | "extreme_hills" | "jungle" | "mesa" | "plains" | "savanna" | "icy" | "theend" | "beach" | "forest" | "ocean" | "desert" | "river" | "swamp" | "mushroom" | "nether" | Biome$Category;
    class SecureRandom extends Internal.Random {
        nextFloat(arg0: number): number;
        nextFloat(arg0: number, arg1: number): number;
        isDeprecated(): boolean;
        static getSeed(arg0: number): number[];
        getAlgorithm(): string;
        static getInstanceStrong(): Internal.SecureRandom;
        reseed(): void;
        reseed(arg0: Internal.SecureRandomParameters): void;
        nextInt(arg0: number, arg1: number): number;
        generateSeed(arg0: number): number[];
        nextLong(arg0: number, arg1: number): number;
        nextLong(arg0: number): number;
        nextGaussian(arg0: number, arg1: number): number;
        nextDouble(arg0: number): number;
        nextDouble(arg0: number, arg1: number): number;
        nextBytes(arg0: number[], arg1: Internal.SecureRandomParameters): void;
        nextExponential(): number;
        getParameters(): Internal.SecureRandomParameters;
        getProvider(): Internal.Provider;
        static getInstance(arg0: string, arg1: Internal.SecureRandomParameters, arg2: string): Internal.SecureRandom;
        static getInstance(arg0: string, arg1: Internal.SecureRandomParameters): Internal.SecureRandom;
        static getInstance(arg0: string, arg1: Internal.SecureRandomParameters, arg2: Internal.Provider): Internal.SecureRandom;
        static getInstance(arg0: string): Internal.SecureRandom;
        static getInstance(arg0: string, arg1: string): Internal.SecureRandom;
        static getInstance(arg0: string, arg1: Internal.Provider): Internal.SecureRandom;
        setSeed(arg0: number[]): void;
        get provider(): Internal.Provider;
        get deprecated(): boolean;
        get parameters(): Internal.SecureRandomParameters;
        get instanceStrong(): Internal.SecureRandom;
        get algorithm(): string;
        set seed(arg0: number[]);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number[]);
        constructor();
    }
    type SecureRandom_ = SecureRandom;
    class AbstractIllagerEntity$ArmPose extends Internal.Enum<Internal.AbstractIllagerEntity$ArmPose> {
        static valueOf(arg0: string): Internal.AbstractIllagerEntity$ArmPose;
        static values(): Internal.AbstractIllagerEntity$ArmPose[];
        static readonly CROSSED: Internal.AbstractIllagerEntity$ArmPose;
        static readonly SPELLCASTING: Internal.AbstractIllagerEntity$ArmPose;
        static readonly BOW_AND_ARROW: Internal.AbstractIllagerEntity$ArmPose;
        static readonly CROSSBOW_HOLD: Internal.AbstractIllagerEntity$ArmPose;
        static readonly ATTACKING: Internal.AbstractIllagerEntity$ArmPose;
        static readonly CELEBRATING: Internal.AbstractIllagerEntity$ArmPose;
        static readonly CROSSBOW_CHARGE: Internal.AbstractIllagerEntity$ArmPose;
        static readonly NEUTRAL: Internal.AbstractIllagerEntity$ArmPose;
    }
    type AbstractIllagerEntity$ArmPose_ = "crossed" | "attacking" | "spellcasting" | "bow_and_arrow" | "crossbow_hold" | "crossbow_charge" | "celebrating" | "neutral" | AbstractIllagerEntity$ArmPose;
    class Chapter extends Internal.QuestObject {
        getFilename(): string;
        getIndex(): number;
        getAltTitle(): Internal.IFormattableTextComponent;
        hasGroup(): boolean;
        getDefaultQuestShape(): string;
        readonly images: Internal.List<Internal.ChapterImage>;
        readonly file: Internal.QuestFile;
        filename: string;
        readonly quests: Internal.List<Internal.Quest>;
        readonly subtitle: Internal.List<string>;
        alwaysInvisible: boolean;
        defaultHideDependencyLines: boolean;
        defaultQuestShape: string;
        group: Internal.ChapterGroup;
        get index(): number;
        get altTitle(): Internal.IFormattableTextComponent;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.QuestFile, arg1: Internal.ChapterGroup);
    }
    type Chapter_ = Chapter;
    class CAnimateHandPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_187018_a(): Hand;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Hand);
    }
    type CAnimateHandPacket_ = CAnimateHandPacket;
    class Color extends Document.Object implements dev.latvian.mods.rhino.mod.util.color.Color {
        static func_240744_a_(arg0: Internal.TextFormatting_): Internal.Color;
        getRgbKJS(): number;
        static func_240745_a_(arg0: string): Internal.Color;
        func_240742_a_(): number;
        static func_240743_a_(arg0: number): Internal.Color;
        getHexKJS(): string;
        createTextColorKJS(): Internal.Color;
        getArgbKJS(): number;
        func_240747_b_(): string;
        getFireworkColorKJS(): number;
        getSerializeKJS(): string;
        specialEquals(o: any, shallow: boolean): boolean;
        static field_240739_b_: {"dark_red":Internal.Color,"green":Internal.Color,"dark_green":Internal.Color,"black":Internal.Color,"yellow":Internal.Color,"dark_blue":Internal.Color,"dark_purple":Internal.Color,"gold":Internal.Color,"red":Internal.Color,"aqua":Internal.Color,"rainbow":Internal.DeadlyModuleClient$RainbowColor,"gray":Internal.Color,"light_purple":Internal.Color,"blue":Internal.Color,"white":Internal.Color,"dark_aqua":Internal.Color,"dark_gray":Internal.Color};
        readonly field_240740_c_: number;
        get fireworkColorKJS(): number;
        get rgbKJS(): number;
        get argbKJS(): number;
        get hexKJS(): string;
        get serializeKJS(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: string);
    }
    type Color_ = Color;
    interface DelegatedStencilElement$ElementRenderer {
        render(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
        (arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
    }
    type DelegatedStencilElement$ElementRenderer_ = ((arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number)=>void) | DelegatedStencilElement$ElementRenderer;
    interface StructureAccess {
    }
    type StructureAccess_ = StructureAccess;
    interface PlayerSensitive {
        setPlayer(arg0: Internal.PlayerEntity): void;
        (arg0: Internal.PlayerEntity): void;
    }
    type PlayerSensitive_ = ((arg0: Internal.PlayerEntity)=>void) | PlayerSensitive;
    abstract class PlayerList extends Document.Object {
        func_72380_a(arg0: Internal.ServerPlayerEntity): Internal.CompoundNBT;
        func_177452_b(arg0: Internal.PlayerEntity, arg1: Internal.ITextComponent_): void;
        func_232642_a_(arg0: Internal.IPacket<any>, arg1: Internal.RegistryKey<Internal.World>): void;
        removePlayer(arg0: Internal.ServerPlayerEntity): boolean;
        func_72394_k(): number;
        func_72352_l(): number;
        addPlayer(arg0: Internal.ServerPlayerEntity): boolean;
        func_212504_a(arg0: Internal.ServerWorld): void;
        func_72392_r(): void;
        func_187244_a(): void;
        func_152599_k(): Internal.WhiteList;
        func_187243_f(arg0: Internal.ServerPlayerEntity): void;
        func_193244_w(): void;
        func_72374_b(): void;
        func_152607_e(arg0: Internal.GameProfile): boolean;
        func_206257_x(): boolean;
        func_192054_h(arg0: Internal.ServerPlayerEntity): Internal.PlayerAdvancements;
        func_72355_a(arg0: Internal.NetworkManager, arg1: Internal.ServerPlayerEntity): void;
        func_152603_m(): Internal.OpList;
        func_152605_a(arg0: Internal.GameProfile): void;
        func_72363_f(): Internal.IPBanList;
        func_72382_j(arg0: string): Internal.List<Internal.ServerPlayerEntity>;
        func_72369_d(): string[];
        func_72367_e(arg0: Internal.ServerPlayerEntity): void;
        handler$bck000$reloadResources(arg0: Internal.CallbackInfo): void;
        func_72365_p(): Internal.MinecraftServer;
        func_148540_a(arg0: Internal.IPacket<any>): void;
        func_206258_a(arg0: Internal.SocketAddress, arg1: Internal.GameProfile): Internal.ITextComponent;
        func_72378_q(): Internal.CompoundNBT;
        func_177453_a(arg0: Internal.PlayerEntity, arg1: Internal.ITextComponent_): void;
        func_232644_a_(arg0: Internal.ServerPlayerEntity, arg1: boolean): Internal.ServerPlayerEntity;
        func_177451_a(arg0: Internal.UUID): Internal.ServerPlayerEntity;
        func_72387_b(arg0: boolean): void;
        func_217884_a(arg0: number): void;
        func_232641_a_(arg0: Internal.ITextComponent_, arg1: Internal.ChatType_, arg2: Internal.UUID): void;
        func_152596_g(arg0: Internal.GameProfile): boolean;
        func_152610_b(arg0: Internal.GameProfile): void;
        func_152612_a(arg0: string): Internal.ServerPlayerEntity;
        func_72395_o(): number;
        func_152598_l(): string[];
        func_152606_n(): string[];
        func_183023_f(arg0: Internal.GameProfile): boolean;
        func_72354_b(arg0: Internal.ServerPlayerEntity, arg1: Internal.ServerWorld): void;
        func_72371_a(arg0: boolean): void;
        func_152608_h(): Internal.BanList;
        func_152604_a(arg0: Internal.GameType_): void;
        func_72389_g(): void;
        func_72383_n(): boolean;
        func_72385_f(arg0: Internal.ServerPlayerEntity): void;
        func_148545_a(arg0: Internal.GameProfile): Internal.ServerPlayerEntity;
        func_148543_a(arg0: Internal.PlayerEntity, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.RegistryKey<Internal.World>, arg6: Internal.IPacket<any>): void;
        func_152602_a(arg0: Internal.PlayerEntity): Internal.ServerStatisticsManager;
        func_181057_v(): Internal.List<Internal.ServerPlayerEntity>;
        static readonly field_152613_a: Internal.File;
        static readonly field_152614_b: Internal.File;
        static readonly field_152615_c: Internal.File;
        static readonly field_152616_d: Internal.File;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MinecraftServer, arg1: Internal.DynamicRegistries$Impl, arg2: Internal.PlayerData, arg3: number);
    }
    type PlayerList_ = PlayerList;
    class ModLifecycleEvent extends net.minecraftforge.eventbus.api.Event implements Internal.IModBusEvent {
        description(): string;
        getIMCStream(): Internal.Stream<Internal.InterModComms$IMCMessage>;
        getIMCStream(arg0: Internal.Predicate_<string>): Internal.Stream<Internal.InterModComms$IMCMessage>;
        get iMCStream(): Internal.Stream<Internal.InterModComms$IMCMessage>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
        constructor();
    }
    type ModLifecycleEvent_ = ModLifecycleEvent;
    class ChanceConfig extends Document.Object implements Internal.IPlacementConfig {
        readonly field_202477_a: number;
        static readonly field_236950_a_: Internal.Codec<Internal.ChanceConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type ChanceConfig_ = ChanceConfig;
    class SlideSettings extends Document.Object {
        func_236186_a_(): number;
        func_236188_b_(): number;
        func_236189_c_(): number;
        static readonly field_236182_a_: Internal.Codec<Internal.SlideSettings>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type SlideSettings_ = SlideSettings;
    class RPConfig$Client extends Document.Object {
        keyBindings: Internal.RPConfig$KeyBindings;
        removeGlowingEffectFromEnchantedBooks: boolean;
        contributorCapes: boolean;
        bugFixes: Internal.RPConfig$ClientBugFixes;
        disableExperimentalSettingsWarning: boolean;
        removeGlowingEffectFromPotions: boolean;
        framerateLimitSliderStepSize: number;
        window: Internal.RPConfig$Window;
        returnToMainMenuAfterDisconnect: boolean;
        optimizeBambooRendering: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RPConfig$Client_ = RPConfig$Client;
    class GiantTrunkPlacer extends Internal.AbstractTrunkPlacer {
        static readonly field_236898_a_: Internal.Codec<Internal.GiantTrunkPlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type GiantTrunkPlacer_ = GiantTrunkPlacer;
    class CPlayerAbilitiesPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_149488_d(): boolean;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerAbilities);
    }
    type CPlayerAbilitiesPacket_ = CPlayerAbilitiesPacket;
    interface DoubleStream$Builder extends Internal.DoubleConsumer {
        add(arg0: number): Internal.DoubleStream$Builder;
        build(): Internal.DoubleStream;
        accept(arg0: number): void;
    }
    type DoubleStream$Builder_ = DoubleStream$Builder;
    interface NonNullPredicate <T> {
        test(arg0: T): boolean;
        (arg0: T): boolean;
    }
    type NonNullPredicate_<T> = ((arg0: T)=>boolean) | NonNullPredicate<T>;
    class ChunkDataEvent extends Internal.ChunkEvent {
        getData(): Internal.CompoundNBT;
        get data(): Internal.CompoundNBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.IChunk, arg1: Internal.IWorld, arg2: Internal.CompoundNBT);
        constructor(arg0: Internal.IChunk, arg1: Internal.CompoundNBT);
    }
    type ChunkDataEvent_ = ChunkDataEvent;
    class OffsetDateTime extends Document.Object implements Internal.Temporal, Internal.TemporalAdjuster, Internal.Comparable<Internal.OffsetDateTime>, Internal.Serializable {
        plusHours(arg0: number): Internal.OffsetDateTime;
        isEqual(arg0: Internal.OffsetDateTime): boolean;
        toLocalTime(): Internal.LocalTime;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.OffsetDateTime): number;
        withOffsetSameLocal(arg0: Internal.ZoneOffset): Internal.OffsetDateTime;
        getDayOfWeek(): Internal.DayOfWeek;
        plusSeconds(arg0: number): Internal.OffsetDateTime;
        getMinute(): number;
        static from(arg0: Internal.TemporalAccessor): Internal.OffsetDateTime;
        getMonth(): Internal.Month;
        plusNanos(arg0: number): Internal.OffsetDateTime;
        atZoneSameInstant(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        withHour(arg0: number): Internal.OffsetDateTime;
        plusMonths(arg0: number): Internal.OffsetDateTime;
        plusYears(arg0: number): Internal.OffsetDateTime;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.OffsetDateTime;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        minusNanos(arg0: number): Internal.OffsetDateTime;
        getNano(): number;
        format(arg0: Internal.DateTimeFormatter): string;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isSupported(arg0: Internal.TemporalField): boolean;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.OffsetDateTime;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.OffsetDateTime;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        getYear(): number;
        toEpochSecond(): number;
        toLocalDateTime(): Internal.LocalDateTime;
        withDayOfMonth(arg0: number): Internal.OffsetDateTime;
        withMonth(arg0: number): Internal.OffsetDateTime;
        isAfter(arg0: Internal.OffsetDateTime): boolean;
        static ofInstant(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.OffsetDateTime;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.OffsetDateTime;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.OffsetDateTime;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        toOffsetTime(): Internal.OffsetTime;
        minusHours(arg0: number): Internal.OffsetDateTime;
        getOffset(): Internal.ZoneOffset;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        withYear(arg0: number): Internal.OffsetDateTime;
        plusMinutes(arg0: number): Internal.OffsetDateTime;
        minusMinutes(arg0: number): Internal.OffsetDateTime;
        plusDays(arg0: number): Internal.OffsetDateTime;
        atZoneSimilarLocal(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        static now(arg0: Internal.Clock): Internal.OffsetDateTime;
        static now(arg0: Internal.ZoneId): Internal.OffsetDateTime;
        static now(): Internal.OffsetDateTime;
        static of(arg0: Internal.LocalDateTime, arg1: Internal.ZoneOffset): Internal.OffsetDateTime;
        static of(arg0: Internal.LocalDate, arg1: Internal.LocalTime, arg2: Internal.ZoneOffset): Internal.OffsetDateTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.ZoneOffset): Internal.OffsetDateTime;
        get(arg0: Internal.TemporalField): number;
        getDayOfYear(): number;
        plusWeeks(arg0: number): Internal.OffsetDateTime;
        getHour(): number;
        withMinute(arg0: number): Internal.OffsetDateTime;
        getMonthValue(): number;
        toZonedDateTime(): Internal.ZonedDateTime;
        minusYears(arg0: number): Internal.OffsetDateTime;
        minusWeeks(arg0: number): Internal.OffsetDateTime;
        withDayOfYear(arg0: number): Internal.OffsetDateTime;
        static parse(arg0: Internal.CharSequence): Internal.OffsetDateTime;
        static parse(arg0: Internal.CharSequence, arg1: Internal.DateTimeFormatter): Internal.OffsetDateTime;
        toInstant(): Internal.Instant;
        isBefore(arg0: Internal.OffsetDateTime): boolean;
        minusDays(arg0: number): Internal.OffsetDateTime;
        withNano(arg0: number): Internal.OffsetDateTime;
        getLong(arg0: Internal.TemporalField): number;
        minusMonths(arg0: number): Internal.OffsetDateTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.OffsetDateTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        with(arg0: Internal.TemporalAdjuster_): Internal.OffsetDateTime;
        with(arg0: Internal.TemporalAdjuster_): Internal.Temporal;
        toLocalDate(): Internal.LocalDate;
        withOffsetSameInstant(arg0: Internal.ZoneOffset): Internal.OffsetDateTime;
        getSecond(): number;
        static timeLineOrder(): Internal.Comparator<Internal.OffsetDateTime>;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        getDayOfMonth(): number;
        minusSeconds(arg0: number): Internal.OffsetDateTime;
        withSecond(arg0: number): Internal.OffsetDateTime;
        static readonly MIN: Internal.OffsetDateTime;
        static readonly MAX: Internal.OffsetDateTime;
        get dayOfWeek(): Internal.DayOfWeek;
        get month(): Internal.Month;
        get offset(): Internal.ZoneOffset;
        get hour(): number;
        get year(): number;
        get dayOfYear(): number;
        get dayOfMonth(): number;
        get monthValue(): number;
        get nano(): number;
        get minute(): number;
        get second(): number;
    }
    type OffsetDateTime_ = OffsetDateTime;
    interface FontResourceManagerAccess {
        getFontSets(): Internal.Map<ResourceLocation, net.minecraft.client.gui.fonts.Font>;
        (): Internal.Map<ResourceLocation, net.minecraft.client.gui.fonts.Font>;
    }
    type FontResourceManagerAccess_ = (()=>Internal.Map<ResourceLocation, net.minecraft.client.gui.fonts.Font>) | FontResourceManagerAccess;
    interface ExtendedChunkSection {
        getKnownTransparency(arg0: number): number;
        hasOpaqueBlocks(): boolean;
        getBitsetForColumn(arg0: number, arg1: number): number;
    }
    type ExtendedChunkSection_ = ExtendedChunkSection;
    class SoundEvent extends Internal.ForgeRegistryEntry<Internal.SoundEvent> {
        setRegistryName(arg0: ResourceLocation_): any;
        func_187503_a(): ResourceLocation;
        static readonly field_232678_a_: Internal.Codec<Internal.SoundEvent>;
        readonly field_187506_b: ResourceLocation;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type SoundEvent_ = Registry.minecraft.sound_event | SoundEvent;
    interface IDrawable {
        getHeight(): number;
        draw(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        draw(arg0: Internal.MatrixStack): void;
        getWidth(): number;
    }
    type IDrawable_ = IDrawable;
    interface AccessorAbstractHorseEntity {
        getHorseChest(): Internal.Inventory;
        (): Internal.Inventory;
    }
    type AccessorAbstractHorseEntity_ = (()=>Internal.Inventory) | AccessorAbstractHorseEntity;
    interface ISnooperInfo {
        func_70000_a(arg0: Internal.Snooper): void;
        (arg0: Internal.Snooper): void;
    }
    type ISnooperInfo_ = ((arg0: Internal.Snooper)=>void) | ISnooperInfo;
    abstract class AbstractStringBuilder extends Document.Object implements Internal.Appendable, Internal.CharSequence {
        deleteCharAt(arg0: number): Internal.AbstractStringBuilder;
        codePointAt(arg0: number): number;
        setCharAt(arg0: number, arg1: string): void;
        replace(arg0: number, arg1: number, arg2: string): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string[], arg2: number, arg3: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: Internal.CharSequence, arg2: number, arg3: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: boolean): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: Internal.CharSequence): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string[]): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: string): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        insert(arg0: number, arg1: any): Internal.AbstractStringBuilder;
        delete(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        substring(arg0: number, arg1: number): string;
        substring(arg0: number): string;
        capacity(): number;
        appendCodePoint(arg0: number): Internal.AbstractStringBuilder;
        repeat(arg0: number, arg1: number): Internal.AbstractStringBuilder;
        repeat(arg0: Internal.CharSequence, arg1: number): Internal.AbstractStringBuilder;
        codePointBefore(arg0: number): number;
        indexOf(arg0: string, arg1: number): number;
        indexOf(arg0: string): number;
        codePointCount(arg0: number, arg1: number): number;
        codePoints(): Internal.IntStream;
        trimToSize(): void;
        getChars(arg0: number, arg1: number, arg2: string[], arg3: number): void;
        isEmpty(): boolean;
        length(): number;
        subSequence(arg0: number, arg1: number): Internal.CharSequence;
        reverse(): Internal.AbstractStringBuilder;
        lastIndexOf(arg0: string, arg1: number): number;
        lastIndexOf(arg0: string): number;
        setLength(arg0: number): void;
        ensureCapacity(arg0: number): void;
        chars(): Internal.IntStream;
        offsetByCodePoints(arg0: number, arg1: number): number;
        charAt(arg0: number): string;
        append(arg0: Internal.CharSequence): Internal.AbstractStringBuilder;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.AbstractStringBuilder;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: string[]): Internal.AbstractStringBuilder;
        append(arg0: any): Internal.AbstractStringBuilder;
        append(arg0: string): Internal.AbstractStringBuilder;
        append(arg0: Internal.StringBuffer): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: number): Internal.AbstractStringBuilder;
        append(arg0: string): Internal.AbstractStringBuilder;
        append(arg0: string): Internal.Appendable;
        append(arg0: boolean): Internal.AbstractStringBuilder;
        append(arg0: string[], arg1: number, arg2: number): Internal.AbstractStringBuilder;
        get empty(): boolean;
    }
    type AbstractStringBuilder_ = AbstractStringBuilder;
    class BufferBuilder$DrawState extends Document.Object {
        func_227838_a_(): Internal.VertexFormat;
        func_227840_c_(): number;
        func_227839_b_(): number;
    }
    type BufferBuilder$DrawState_ = BufferBuilder$DrawState;
    class DynamicEnchantmentEvent$Add extends net.minecraftforge.eventbus.api.Event {
        getResolvedPlayer(): Internal.PlayerEntity;
        getEnchantmentsToApply(): Internal.List<Internal.DynamicEnchantment>;
        getEnchantedItemStack(): Internal.ItemStack;
        get resolvedPlayer(): Internal.PlayerEntity;
        get enchantmentsToApply(): Internal.List<Internal.DynamicEnchantment>;
        get enchantedItemStack(): Internal.ItemStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity);
    }
    type DynamicEnchantmentEvent$Add_ = DynamicEnchantmentEvent$Add;
    class WeightedSpawnerEntity extends Internal.WeightedRandom$Item {
        func_185278_a(): Internal.CompoundNBT;
        func_185277_b(): Internal.CompoundNBT;
        field_185279_b: Internal.CompoundNBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.CompoundNBT);
        constructor(arg0: Internal.CompoundNBT);
        constructor();
    }
    type WeightedSpawnerEntity_ = WeightedSpawnerEntity;
    abstract class AbstractTrunkPlacer extends Document.Object {
        func_230382_a_(arg0: Internal.IWorldGenerationReader, arg1: Internal.Random, arg2: number, arg3: BlockPos, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox, arg6: Internal.BaseTreeFeatureConfig): Internal.List<Internal.FoliagePlacer$Foliage>;
        func_236917_a_(arg0: Internal.Random): number;
        static readonly field_236905_c_: Internal.Codec<Internal.AbstractTrunkPlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type AbstractTrunkPlacer_ = AbstractTrunkPlacer;
    class SPlayerListHeaderFooterPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179700_a(): Internal.ITextComponent;
        func_179701_b(): Internal.ITextComponent;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SPlayerListHeaderFooterPacket_ = SPlayerListHeaderFooterPacket;
    class NameMap <E> extends Document.Object implements Internal.Iterable<E> {
        getPrevious(value: E): E;
        read(data: Internal.PacketBuffer): E;
        getName(value: E): string;
        getIndex(e: E): number;
        offset(value: E, index: number): E;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        getNullable(s: string): E;
        getColor(value: E): Internal.Color4I;
        getNext(value: E): E;
        withDefault(def: E): Internal.NameMap<E>;
        getIcon(v: E): Internal.Icon;
        iterator(): Internal.Iterator<E>;
        getRandom(rand: Internal.Random): E;
        size(): number;
        getDisplayName(value: E): Internal.ITextComponent;
        static of<T_>(defaultValue: T_, values: T_[]): Internal.NameMap$Builder<T_>;
        static of<T_>(defaultValue: T_, values: Internal.List<T_>): Internal.NameMap$Builder<T_>;
        get(index: number): E;
        get(s: string): E;
        getStringIndex(s: string): number;
        write(data: Internal.PacketBuffer, object: E): void;
        readonly defaultValue: E;
        readonly keys: Internal.List<string>;
        readonly values: Internal.List<E>;
        readonly map: Internal.Map<string, E>;
    }
    type NameMap_<E> = NameMap<E>;
    interface Object2ObjectSortedMap$FastSortedEntrySet <K, V> extends Internal.ObjectSortedSet<Internal.Object2ObjectMap$Entry<K, V>>, Internal.Object2ObjectMap$FastEntrySet<K, V> {
        fastIterator(): Internal.ObjectBidirectionalIterator<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<K, V>, V>, V>, V>, V>>;
        fastIterator(): Internal.ObjectIterator<any>;
        fastIterator(arg0: Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<K, V>, V>, V>, V>, V>): Internal.ObjectBidirectionalIterator<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<K, V>, V>, V>, V>, V>>;
    }
    type Object2ObjectSortedMap$FastSortedEntrySet_<K, V> = Object2ObjectSortedMap$FastSortedEntrySet<K, V>;
    class Dialog$ModalExclusionType extends Internal.Enum<Internal.Dialog$ModalExclusionType> {
        static valueOf(arg0: string): Internal.Dialog$ModalExclusionType;
        static values(): Internal.Dialog$ModalExclusionType[];
        static readonly APPLICATION_EXCLUDE: Internal.Dialog$ModalExclusionType;
        static readonly NO_EXCLUDE: Internal.Dialog$ModalExclusionType;
        static readonly TOOLKIT_EXCLUDE: Internal.Dialog$ModalExclusionType;
    }
    type Dialog$ModalExclusionType_ = "no_exclude" | "application_exclude" | "toolkit_exclude" | Dialog$ModalExclusionType;
    abstract class GuiScreenEvent$MouseInputEvent extends Internal.GuiScreenEvent {
        getMouseY(): number;
        getMouseX(): number;
        get mouseX(): number;
        get mouseY(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number);
    }
    type GuiScreenEvent$MouseInputEvent_ = GuiScreenEvent$MouseInputEvent;
    abstract class SpellcastingIllagerEntity extends Internal.AbstractIllagerEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_193081_a(arg0: Internal.SpellcastingIllagerEntity$SpellType_): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_193082_dl(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type SpellcastingIllagerEntity_ = SpellcastingIllagerEntity;
    abstract class LockableLootTileEntity extends Internal.LockableTileEntity {
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_189404_a(arg0: ResourceLocation_, arg1: number): void;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_145818_k_(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        static func_195479_a(arg0: Internal.IBlockReader, arg1: Internal.Random, arg2: BlockPos, arg3: ResourceLocation_): void;
        func_184281_d(arg0: Internal.PlayerEntity): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        field_184284_m: ResourceLocation;
        field_184285_n: number;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
    }
    type LockableLootTileEntity_ = LockableLootTileEntity;
    class RenderGameOverlayEvent$ElementType extends Internal.Enum<Internal.RenderGameOverlayEvent$ElementType> {
        static valueOf(arg0: string): Internal.RenderGameOverlayEvent$ElementType;
        static values(): Internal.RenderGameOverlayEvent$ElementType[];
        static readonly ALL: Internal.RenderGameOverlayEvent$ElementType;
        static readonly HELMET: Internal.RenderGameOverlayEvent$ElementType;
        static readonly ARMOR: Internal.RenderGameOverlayEvent$ElementType;
        static readonly VIGNETTE: Internal.RenderGameOverlayEvent$ElementType;
        static readonly CHAT: Internal.RenderGameOverlayEvent$ElementType;
        static readonly SUBTITLES: Internal.RenderGameOverlayEvent$ElementType;
        static readonly AIR: Internal.RenderGameOverlayEvent$ElementType;
        static readonly TEXT: Internal.RenderGameOverlayEvent$ElementType;
        static readonly BOSSINFO: Internal.RenderGameOverlayEvent$ElementType;
        static readonly CROSSHAIRS: Internal.RenderGameOverlayEvent$ElementType;
        static readonly DEBUG: Internal.RenderGameOverlayEvent$ElementType;
        static readonly PORTAL: Internal.RenderGameOverlayEvent$ElementType;
        static readonly BOSSHEALTH: Internal.RenderGameOverlayEvent$ElementType;
        static readonly POTION_ICONS: Internal.RenderGameOverlayEvent$ElementType;
        static readonly EXPERIENCE: Internal.RenderGameOverlayEvent$ElementType;
        static readonly HEALTH: Internal.RenderGameOverlayEvent$ElementType;
        static readonly HOTBAR: Internal.RenderGameOverlayEvent$ElementType;
        static readonly PLAYER_LIST: Internal.RenderGameOverlayEvent$ElementType;
        static readonly HEALTHMOUNT: Internal.RenderGameOverlayEvent$ElementType;
        static readonly FPS_GRAPH: Internal.RenderGameOverlayEvent$ElementType;
        static readonly JUMPBAR: Internal.RenderGameOverlayEvent$ElementType;
        static readonly FOOD: Internal.RenderGameOverlayEvent$ElementType;
    }
    type RenderGameOverlayEvent$ElementType_ = "all" | "helmet" | "portal" | "crosshairs" | "bosshealth" | "bossinfo" | "armor" | "health" | "food" | "air" | "hotbar" | "experience" | "text" | "healthmount" | "jumpbar" | "chat" | "player_list" | "debug" | "potion_icons" | "subtitles" | "fps_graph" | "vignette" | RenderGameOverlayEvent$ElementType;
    abstract class RenderTooltipEvent$Post extends Internal.RenderTooltipEvent {
        getHeight(): number;
        getWidth(): number;
        get width(): number;
        get height(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ItemStack, arg1: Internal.List<Internal.ITextProperties>, arg2: Internal.MatrixStack, arg3: number, arg4: number, arg5: Internal.FontRenderer, arg6: number, arg7: number);
    }
    type RenderTooltipEvent$Post_ = RenderTooltipEvent$Post;
    class CrashReport extends Document.Object {
        func_71506_a(arg0: Internal.StringBuilder): void;
        func_71505_b(): Internal.Throwable;
        static func_230188_h_(): void;
        func_85058_a(arg0: string): Internal.CrashReportCategory;
        func_71502_e(): string;
        func_85057_a(arg0: string, arg1: number): Internal.CrashReportCategory;
        func_147149_a(arg0: Internal.File): boolean;
        static func_85055_a(arg0: Internal.Throwable, arg1: string): Internal.CrashReport;
        func_71497_f(): Internal.File;
        func_71501_a(): string;
        func_85056_g(): Internal.CrashReportCategory;
        func_71498_d(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Throwable);
    }
    type CrashReport_ = CrashReport;
    abstract class Writer extends Document.Object implements Internal.Appendable, Internal.Closeable, Internal.Flushable {
        flush(): void;
        static nullWriter(): Internal.Writer;
        close(): void;
        write(arg0: number): void;
        write(arg0: string[], arg1: number, arg2: number): void;
        write(arg0: string): void;
        write(arg0: string, arg1: number, arg2: number): void;
        write(arg0: string[]): void;
        append(arg0: string): Internal.Writer;
        append(arg0: string): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Writer;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.Writer;
        append(arg0: Internal.CharSequence): Internal.Appendable;
    }
    type Writer_ = Writer;
    interface OrderedEventExecutor extends Internal.EventExecutor {
    }
    type OrderedEventExecutor_ = OrderedEventExecutor;
    abstract class ForwardingObject extends Document.Object {
    }
    type ForwardingObject_ = ForwardingObject;
    class EventPriority extends Internal.Enum<Internal.EventPriority> implements Internal.IEventListener {
        static valueOf(arg0: string): Internal.EventPriority;
        listenerName(): string;
        static values(): Internal.EventPriority[];
        invoke(arg0: net.minecraftforge.eventbus.api.Event): void;
        static readonly LOWEST: Internal.EventPriority;
        static readonly HIGH: Internal.EventPriority;
        static readonly LOW: Internal.EventPriority;
        static readonly HIGHEST: Internal.EventPriority;
        static readonly NORMAL: Internal.EventPriority;
    }
    type EventPriority_ = "highest" | "high" | "normal" | "low" | "lowest" | EventPriority;
    class EntityEvent$EntityConstructing extends Internal.EntityEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Entity);
        constructor();
    }
    type EntityEvent$EntityConstructing_ = EntityEvent$EntityConstructing;
    class BlockRayTraceResult extends Internal.RayTraceResult {
        func_216353_d(): boolean;
        func_237485_a_(arg0: BlockPos): Internal.BlockRayTraceResult;
        func_216354_b(): Internal.Direction;
        static func_216352_a(arg0: Vec3, arg1: Internal.Direction_, arg2: BlockPos): Internal.BlockRayTraceResult;
        func_216351_a(arg0: Internal.Direction_): Internal.BlockRayTraceResult;
        func_216350_a(): BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean, arg1: Vec3, arg2: Internal.Direction, arg3: BlockPos, arg4: boolean);
        constructor(arg0: Vec3, arg1: Internal.Direction, arg2: BlockPos, arg3: boolean);
    }
    type BlockRayTraceResult_ = BlockRayTraceResult;
    interface ModelQuadView {
        getNormal(arg0: number): number;
        getLight(arg0: number): number;
        getTexV(arg0: number): number;
        getTexU(arg0: number): number;
        getX(arg0: number): number;
        getColorIndex(): number;
        getY(arg0: number): number;
        getZ(arg0: number): number;
        copyInto(buf: Internal.ByteBuffer, position: number): void;
        getColor(arg0: number): number;
        rubidium$getSprite(): Internal.TextureAtlasSprite;
        getFlags(): number;
    }
    type ModelQuadView_ = ModelQuadView;
    interface ISpectatorMenuView {
        func_178670_b(): Internal.ITextComponent;
        func_178669_a(): Internal.List<Internal.ISpectatorMenuObject>;
    }
    type ISpectatorMenuView_ = ISpectatorMenuView;
    abstract class TimeZone extends Document.Object implements Internal.Serializable, Internal.Cloneable {
        static getTimeZone(arg0: Internal.ZoneId): Internal.TimeZone;
        static getTimeZone(arg0: string): Internal.TimeZone;
        getOffset(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        getOffset(arg0: number): number;
        useDaylightTime(): boolean;
        getID(): string;
        static getDefault(): Internal.TimeZone;
        static getAvailableIDs(): string[];
        static getAvailableIDs(arg0: number): string[];
        observesDaylightTime(): boolean;
        static setDefault(arg0: Internal.TimeZone): void;
        getDSTSavings(): number;
        getDisplayName(): string;
        getDisplayName(arg0: boolean, arg1: number): string;
        getDisplayName(arg0: boolean, arg1: number, arg2: Internal.Locale): string;
        getDisplayName(arg0: Internal.Locale): string;
        setRawOffset(arg0: number): void;
        clone(): any;
        setID(arg0: string): void;
        hasSameRules(arg0: Internal.TimeZone): boolean;
        inDaylightTime(arg0: Internal.Date): boolean;
        toZoneId(): Internal.ZoneId;
        getRawOffset(): number;
        static readonly SHORT: 0;
        static readonly LONG: 1;
        get default(): Internal.TimeZone;
        get displayName(): string;
        get rawOffset(): number;
        get availableIDs(): string[];
        get dSTSavings(): number;
        get iD(): string;
        set default(arg0: Internal.TimeZone);
        set rawOffset(arg0: number);
        set iD(arg0: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TimeZone_ = TimeZone;
    class TreeSet <E> extends Internal.AbstractSet<E> implements Internal.NavigableSet<E>, Internal.Cloneable, Internal.Serializable {
        headSet(arg0: E, arg1: boolean): Internal.NavigableSet<E>;
        headSet(arg0: E): Internal.SortedSet<E>;
        descendingIterator(): Internal.Iterator<E>;
        descendingSet(): Internal.NavigableSet<E>;
        getLast(): E;
        removeLast(): E;
        pollLast(): E;
        addLast(arg0: E): void;
        iterator(): Internal.Iterator<E>;
        stream(): Internal.Stream<E>;
        getFirst(): E;
        removeFirst(): E;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        subSet(arg0: E, arg1: boolean, arg2: E, arg3: boolean): Internal.NavigableSet<E>;
        subSet(arg0: E, arg1: E): Internal.SortedSet<E>;
        parallelStream(): Internal.Stream<E>;
        floor(arg0: E): E;
        tailSet(arg0: E, arg1: boolean): Internal.NavigableSet<E>;
        tailSet(arg0: E): Internal.SortedSet<E>;
        ceiling(arg0: E): E;
        last(): E;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        lower(arg0: E): E;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        comparator(): Internal.Comparator<E>;
        clone(): any;
        pollFirst(): E;
        reversed(): Internal.NavigableSet<E>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.SequencedSet<any>;
        reversed(): Internal.SortedSet<any>;
        addFirst(arg0: E): void;
        first(): E;
        higher(arg0: E): E;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SortedSet<E>);
        constructor(arg0: Internal.Collection<E>);
        constructor(arg0: Internal.Comparator<E>);
        constructor();
    }
    type TreeSet_<E> = TreeSet<E>;
    class GuiScreenEvent$InitGuiEvent$Pre extends Internal.GuiScreenEvent$InitGuiEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: Internal.List<net.minecraft.client.gui.widget.Widget>, arg2: Internal.Consumer<net.minecraft.client.gui.widget.Widget>, arg3: Internal.Consumer<net.minecraft.client.gui.widget.Widget>);
    }
    type GuiScreenEvent$InitGuiEvent$Pre_ = GuiScreenEvent$InitGuiEvent$Pre;
    class Period extends Document.Object implements Internal.ChronoPeriod, Internal.Serializable {
        minus(arg0: Internal.TemporalAmount): Internal.Period;
        minus(arg0: Internal.TemporalAmount): Internal.ChronoPeriod;
        negated(): Internal.Period;
        negated(): Internal.ChronoPeriod;
        normalized(): Internal.ChronoPeriod;
        normalized(): Internal.Period;
        static ofYears(arg0: number): Internal.Period;
        getMonths(): number;
        plusDays(arg0: number): Internal.Period;
        multipliedBy(arg0: number): Internal.ChronoPeriod;
        multipliedBy(arg0: number): Internal.Period;
        getYears(): number;
        static of(arg0: number, arg1: number, arg2: number): Internal.Period;
        get(arg0: Internal.TemporalUnit): number;
        isZero(): boolean;
        static from(arg0: Internal.TemporalAmount): Internal.Period;
        withDays(arg0: number): Internal.Period;
        getChronology(): Internal.Chronology;
        getChronology(): Internal.IsoChronology;
        static between(arg0: Internal.LocalDate, arg1: Internal.LocalDate): Internal.Period;
        isNegative(): boolean;
        withMonths(arg0: number): Internal.Period;
        minusYears(arg0: number): Internal.Period;
        plusMonths(arg0: number): Internal.Period;
        plusYears(arg0: number): Internal.Period;
        static ofDays(arg0: number): Internal.Period;
        static parse(arg0: Internal.CharSequence): Internal.Period;
        toTotalMonths(): number;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoPeriod;
        plus(arg0: Internal.TemporalAmount): Internal.Period;
        minusDays(arg0: number): Internal.Period;
        minusMonths(arg0: number): Internal.Period;
        static ofWeeks(arg0: number): Internal.Period;
        getDays(): number;
        subtractFrom(arg0: Internal.Temporal): Internal.Temporal;
        getUnits(): Internal.List<Internal.TemporalUnit>;
        static ofMonths(arg0: number): Internal.Period;
        addTo(arg0: Internal.Temporal): Internal.Temporal;
        withYears(arg0: number): Internal.Period;
        static readonly ZERO: Internal.Period;
        get zero(): boolean;
        get negative(): boolean;
        get months(): number;
        get chronology(): Internal.IsoChronology;
        get days(): number;
        get units(): Internal.List<Internal.TemporalUnit>;
        get years(): number;
    }
    type Period_ = Period;
    interface EnchModuleEvents$TridentGetter {
        getTridentItem(): Internal.ItemStack;
        (): Internal.ItemStack;
    }
    type EnchModuleEvents$TridentGetter_ = (()=>Internal.ItemStack) | EnchModuleEvents$TridentGetter;
    abstract class ChangeObserver extends Document.Object {
        readFromNBT(arg0: Internal.CompoundNBT_): void;
        notifyChange(arg0: Internal.World, arg1: BlockPos, arg2: Internal.BlockChangeSet): boolean;
        getObservableArea(): Internal.ObservableArea;
        getProviderRegistryName(): ResourceLocation;
        initialize(arg0: Internal.IWorld, arg1: BlockPos): void;
        writeToNBT(arg0: Internal.CompoundNBT_): void;
        get providerRegistryName(): ResourceLocation;
        get observableArea(): Internal.ObservableArea;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type ChangeObserver_ = ChangeObserver;
    class Sound extends Document.Object implements Internal.ISoundEventAccessor<Internal.Sound> {
        func_188719_a(): ResourceLocation;
        func_188723_h(): boolean;
        func_148720_g(): any;
        func_148720_g(): Internal.Sound;
        func_204257_i(): boolean;
        func_188725_d(): number;
        func_188722_g(): Internal.Sound$Type;
        func_217867_a(arg0: Internal.SoundEngine): void;
        func_188721_b(): ResourceLocation;
        func_206255_j(): number;
        func_188724_c(): number;
        func_148721_a(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: number, arg2: number, arg3: number, arg4: Internal.Sound$Type, arg5: boolean, arg6: boolean, arg7: number);
    }
    type Sound_ = Sound;
    class Scoreboard extends Document.Object {
        static func_96537_j(arg0: string): number;
        func_199868_a(arg0: string, arg1: Internal.ScoreCriteria, arg2: Internal.ITextComponent_, arg3: Internal.ScoreCriteria$RenderType_): Internal.ScoreObjective;
        func_96534_i(arg0: Internal.ScoreObjective): Internal.Collection<Internal.Score>;
        func_96516_a(arg0: string): void;
        func_96514_c(): Internal.Collection<Internal.ScoreObjective>;
        func_96518_b(arg0: string): Internal.ScoreObjective;
        static func_96517_b(arg0: number): string;
        func_96539_a(arg0: number): Internal.ScoreObjective;
        func_96538_b(arg0: Internal.ScorePlayerTeam): void;
        func_96536_a(arg0: Internal.Score): void;
        func_96531_f(): Internal.Collection<string>;
        func_96512_b(arg0: string, arg1: Internal.ScorePlayerTeam): void;
        func_96510_d(arg0: string): Internal.Map<Internal.ScoreObjective, Internal.Score>;
        func_199869_b(arg0: Internal.ScoreObjective): void;
        func_178819_b(arg0: string, arg1: Internal.ScoreObjective): boolean;
        func_96513_c(arg0: Internal.ScorePlayerTeam): void;
        func_96511_d(arg0: Internal.ScorePlayerTeam): void;
        func_96533_c(arg0: Internal.ScoreObjective): void;
        func_96522_a(arg0: Internal.ScoreObjective): void;
        func_181140_a(arg0: Internal.Entity): void;
        func_96519_k(arg0: Internal.ScoreObjective): void;
        func_178820_a(arg0: string, arg1: Internal.ScoreObjective): void;
        func_178822_d(arg0: string, arg1: Internal.ScoreObjective): void;
        func_96525_g(): Internal.Collection<Internal.ScorePlayerTeam>;
        func_96508_e(arg0: string): Internal.ScorePlayerTeam;
        func_96527_f(arg0: string): Internal.ScorePlayerTeam;
        func_96526_d(): Internal.Collection<string>;
        func_96529_a(arg0: string, arg1: Internal.ScoreObjective): Internal.Score;
        func_96524_g(arg0: string): boolean;
        static func_178821_h(): string[];
        func_96523_a(arg0: Internal.ScorePlayerTeam): void;
        func_197900_b(arg0: string): boolean;
        func_197901_a(arg0: string, arg1: Internal.ScorePlayerTeam): boolean;
        func_96530_a(arg0: number, arg1: Internal.ScoreObjective): void;
        func_197899_c(arg0: string): Internal.ScoreObjective;
        func_197897_d(): Internal.Collection<string>;
        func_197893_a(arg0: Internal.ScoreCriteria, arg1: string, arg2: Internal.Consumer_<Internal.Score_>): void;
        func_96509_i(arg0: string): Internal.ScorePlayerTeam;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Scoreboard_ = Scoreboard;
    class AttachDataEvent <T> extends net.minecraftforge.eventbus.api.Event {
        add(id: string, object: any): void;
        getParent(): T;
        getType(): Internal.DataType<T>;
        get parent(): T;
        get type(): Internal.DataType<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(t: Internal.DataType<T>, p: T);
    }
    type AttachDataEvent_<T> = AttachDataEvent<T>;
    class ToolDefinition$Builder extends Document.Object {
        meleeHarvest(): Internal.ToolDefinition$Builder;
        setStatsProvider(arg0: Internal.IToolStatProvider): Internal.ToolDefinition$Builder;
        noParts(): Internal.ToolDefinition$Builder;
        setDefaultMaxTier(arg0: number): Internal.ToolDefinition$Builder;
        build(): Internal.ToolDefinition;
        skipRegister(): Internal.ToolDefinition$Builder;
        set defaultMaxTier(arg0: number);
        set statsProvider(arg0: Internal.IToolStatProvider);
    }
    type ToolDefinition$Builder_ = ToolDefinition$Builder;
    class BeehiveTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity {
        requestModelDataUpdate(): void;
        func_226961_a_(arg0: Internal.Entity, arg1: boolean): void;
        func_226974_m_(): Internal.ListNBT;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_226963_a_(arg0: Internal.PlayerEntity, arg1: Internal.BlockState, arg2: Internal.BeehiveTileEntity$State_): void;
        func_226962_a_(arg0: Internal.Entity, arg1: boolean, arg2: number): void;
        static func_226964_a_(arg0: Internal.BlockState): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_226972_k_(): boolean;
        func_73660_a(): void;
        func_226970_h_(): boolean;
        func_226971_j_(): number;
        func_226968_d_(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        func_235651_a_(arg0: Internal.BlockState, arg1: Internal.BeehiveTileEntity$Bee, arg2: Internal.List<Internal.Entity>, arg3: Internal.BeehiveTileEntity$State_): boolean;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        func_226975_x_(): boolean;
        func_226969_f_(): boolean;
        field_226959_b_: BlockPos;
        readonly field_226958_a_: Internal.List<Internal.BeehiveTileEntity$Bee>;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BeehiveTileEntity_ = BeehiveTileEntity;
    interface VertexType <T> {
        createFallbackWriter(arg0: Internal.IVertexBuilder): T;
        asBlittable(): Internal.BlittableVertexType<T>;
        (arg0: Internal.IVertexBuilder): T;
    }
    type VertexType_<T> = ((arg0: Internal.IVertexBuilder)=>T) | VertexType<T>;
    class Products$P2 <F, T1, T2> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.BiFunction_<T1, T2, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.BiFunction<T1, T2, R_>>): Internal.App<F, R_>;
        and<T3_, T4_, T5_, T6_, T7_>(arg0: Internal.Products$P5<F, T3_, T4_, T5_, T6_, T7_>): Internal.Products$P7<F, T1, T2, T3_, T4_, T5_, T6_, T7_>;
        and<T3_, T4_, T5_, T6_, T7_, T8_>(arg0: Internal.Products$P6<F, T3_, T4_, T5_, T6_, T7_, T8_>): Internal.Products$P8<F, T1, T2, T3_, T4_, T5_, T6_, T7_, T8_>;
        and<T3_>(arg0: Internal.App<F, T3_>): Internal.Products$P3<F, T1, T2, T3_>;
        and<T3_, T4_>(arg0: Internal.Products$P2<F, T3_, T4_>): Internal.Products$P4<F, T1, T2, T3_, T4_>;
        and<T3_, T4_, T5_>(arg0: Internal.Products$P3<F, T3_, T4_, T5_>): Internal.Products$P5<F, T1, T2, T3_, T4_, T5_>;
        and<T3_, T4_, T5_, T6_>(arg0: Internal.Products$P4<F, T3_, T4_, T5_, T6_>): Internal.Products$P6<F, T1, T2, T3_, T4_, T5_, T6_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>);
    }
    type Products$P2_<F, T1, T2> = Products$P2<F, T1, T2>;
    class SimplexNoiseGenerator extends Document.Object {
        func_227464_a_(arg0: number, arg1: number, arg2: number): number;
        func_151605_a(arg0: number, arg1: number): number;
        readonly field_151613_c: number;
        readonly field_151612_b: number;
        readonly field_151610_d: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Random);
    }
    type SimplexNoiseGenerator_ = SimplexNoiseGenerator;
    interface Closeable extends Internal.AutoCloseable {
        close(): void;
        (): void;
    }
    type Closeable_ = (()=>void) | Closeable;
    interface DoubleFunction <R> {
        apply(arg0: number): R;
        (arg0: number): R;
    }
    type DoubleFunction_<R> = ((arg0: number)=>R) | DoubleFunction<R>;
    class GPUWarning$GPUInfo extends Document.Object {
    }
    type GPUWarning$GPUInfo_ = GPUWarning$GPUInfo;
    class JukeboxTileEntity extends Internal.TileEntity implements Internal.IClearable {
        requestModelDataUpdate(): void;
        func_195535_a(arg0: Internal.ItemStack): void;
        func_174888_l(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_195537_c(): Internal.ItemStack;
        handler$che000$read(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_, arg2: Internal.CallbackInfo): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type JukeboxTileEntity_ = JukeboxTileEntity;
    class WidthHeightScreen extends Internal.InputScreen {
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        getGuiWidth(): number;
        func_212927_b(arg0: number, arg1: number): void;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_231049_c__(arg0: boolean): boolean;
        getGuiHeight(): number;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        getGuiTop(): number;
        getGuiBox(): Internal.Rectangle;
        getGuiLeft(): number;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        getGuiZLevel(): number;
        get guiWidth(): number;
        get guiBox(): Internal.Rectangle;
        get guiLeft(): number;
        get guiZLevel(): number;
        get guiTop(): number;
        get guiHeight(): number;
    }
    type WidthHeightScreen_ = WidthHeightScreen;
    interface IIngredientHelper <V> {
        getMatch(arg0: Internal.Iterable_<V>, arg1: V, arg2: Internal.UidContext_): V;
        getMatch(arg0: Internal.Iterable_<V>, arg1: V): V;
        getDisplayModId(arg0: V): string;
        getTags(arg0: V): Internal.Collection<ResourceLocation>;
        getErrorInfo(arg0: V): string;
        isValidIngredient(arg0: V): boolean;
        getCreativeTabNames(arg0: V): Internal.Collection<string>;
        isIngredientOnServer(arg0: V): boolean;
        normalizeIngredient(arg0: V): V;
        copyIngredient(arg0: V): V;
        getUniqueId(arg0: V): string;
        getUniqueId(arg0: V, arg1: Internal.UidContext_): string;
        getColors(arg0: V): Internal.Iterable<number>;
        getResourceId(arg0: V): string;
        getWildcardId(arg0: V): string;
        getDisplayName(arg0: V): string;
        getModId(arg0: V): string;
        translateFocus(arg0: Internal.IFocus<V>, arg1: Internal.IFocusFactory_): Internal.IFocus<any>;
        getCheatItemStack(arg0: V): Internal.ItemStack;
    }
    type IIngredientHelper_<V> = IIngredientHelper<V>;
    class ShapelessRecipe extends Document.Object implements Internal.ICraftingRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_199560_c(): ResourceLocation;
        func_192399_d(): boolean;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        func_77571_b(): Internal.ItemStack;
        readonly isSimple: boolean;
        readonly field_77579_b: Internal.NonNullList<Internal.Ingredient>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: string, arg2: Internal.ItemStack, arg3: Internal.NonNullList<Internal.Ingredient>);
    }
    type ShapelessRecipe_ = ShapelessRecipe;
    abstract class SecurityController extends Document.Object {
        static getStaticSecurityDomainClass(): Internal.Class<any>;
        static initGlobal(controller: Internal.SecurityController): void;
        static hasGlobal(): boolean;
        static createLoader(parent: Internal.ClassLoader, staticDomain: any): Internal.GeneratedClassLoader;
        getStaticSecurityDomainClassInternal(): Internal.Class<any>;
        execWithDomain(cx: Internal.Context, scope: Internal.Scriptable, script: Internal.Script_, securityDomain: any): any;
        createClassLoader(arg0: Internal.ClassLoader, arg1: any): Internal.GeneratedClassLoader;
        getDynamicSecurityDomain(arg0: any): any;
        callWithDomain(securityDomain: any, cx: Internal.Context, callable: Internal.Callable_, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        get staticSecurityDomainClassInternal(): Internal.Class<any>;
        get staticSecurityDomainClass(): Internal.Class<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SecurityController_ = SecurityController;
    class TagsUpdatedEvent$CustomTagTypes extends Internal.TagsUpdatedEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ITagCollectionSupplier);
        constructor();
    }
    type TagsUpdatedEvent$CustomTagTypes_ = TagsUpdatedEvent$CustomTagTypes;
    abstract class Graphics extends Document.Object {
        drawOval(arg0: number, arg1: number, arg2: number, arg3: number): void;
        fillArc(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        getClipRect(): Internal.Rectangle;
        fillRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
        drawString(arg0: Internal.AttributedCharacterIterator, arg1: number, arg2: number): void;
        drawString(arg0: string, arg1: number, arg2: number): void;
        translate(arg0: number, arg1: number): void;
        getFontMetrics(): Internal.FontMetrics;
        getFontMetrics(arg0: Internal.Font): Internal.FontMetrics;
        draw3DRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): void;
        fillPolygon(arg0: Internal.Polygon): void;
        fillPolygon(arg0: number[], arg1: number[], arg2: number): void;
        getClipBounds(arg0: Internal.Rectangle): Internal.Rectangle;
        getClipBounds(): Internal.Rectangle;
        drawChars(arg0: string[], arg1: number, arg2: number, arg3: number, arg4: number): void;
        drawRoundRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        fill3DRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): void;
        create(): Internal.Graphics;
        create(arg0: number, arg1: number, arg2: number, arg3: number): Internal.Graphics;
        setClip(arg0: Internal.Shape): void;
        setClip(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setFont(arg0: Internal.Font): void;
        drawPolyline(arg0: number[], arg1: number[], arg2: number): void;
        fillRoundRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        clipRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
        getColor(): java_.awt.Color;
        drawLine(arg0: number, arg1: number, arg2: number, arg3: number): void;
        drawArc(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        copyArea(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        drawBytes(arg0: number[], arg1: number, arg2: number, arg3: number, arg4: number): void;
        clearRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setPaintMode(): void;
        drawImage(arg0: Internal.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.ImageObserver_): boolean;
        drawImage(arg0: Internal.Image, arg1: number, arg2: number, arg3: Internal.ImageObserver_): boolean;
        drawImage(arg0: Internal.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: Internal.ImageObserver_): boolean;
        drawImage(arg0: Internal.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: java_.awt.Color, arg6: Internal.ImageObserver_): boolean;
        drawImage(arg0: Internal.Image, arg1: number, arg2: number, arg3: java_.awt.Color, arg4: Internal.ImageObserver_): boolean;
        drawImage(arg0: Internal.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: java_.awt.Color, arg10: Internal.ImageObserver_): boolean;
        setColor(arg0: java_.awt.Color): void;
        hitClip(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        getClip(): Internal.Shape;
        getFont(): Internal.Font;
        dispose(): void;
        finalize(): void;
        fillOval(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setXORMode(arg0: java_.awt.Color): void;
        drawPolygon(arg0: number[], arg1: number[], arg2: number): void;
        drawPolygon(arg0: Internal.Polygon): void;
        drawRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
        get color(): java_.awt.Color;
        get clipBounds(): Internal.Rectangle;
        get fontMetrics(): Internal.FontMetrics;
        get clip(): Internal.Shape;
        get font(): Internal.Font;
        set color(arg0: java_.awt.Color);
        set xORMode(arg0: java_.awt.Color);
        set clip(arg0: Internal.Shape);
        set font(arg0: Internal.Font);
    }
    type Graphics_ = Graphics;
    class PlainFlowerBlockStateProvider extends Internal.BlockStateProvider {
        static readonly field_236804_b_: Internal.Codec<Internal.PlainFlowerBlockStateProvider>;
        static readonly field_236805_c_: Internal.PlainFlowerBlockStateProvider;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PlainFlowerBlockStateProvider_ = PlainFlowerBlockStateProvider;
    interface ArgumentType <T> {
        listSuggestions<S>(arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        getExamples(): Internal.Collection<string>;
        parse(arg0: Internal.StringReader): T;
        (arg0: Internal.StringReader): T;
    }
    type ArgumentType_<T> = ((arg0: Internal.StringReader)=>T) | ArgumentType<T>;
    abstract class UserList <K, V> extends Document.Object {
        func_152691_c(): Internal.File;
        func_152690_d(): boolean;
        func_152679_g(): void;
        func_199043_f(): Internal.Collection<V>;
        func_152678_f(): void;
        func_199042_b(arg0: Internal.UserListEntry<K>): void;
        func_152687_a(arg0: V): void;
        func_152684_c(arg0: K): void;
        func_152685_a(): string[];
        func_152692_d(arg0: K): boolean;
        func_152683_b(arg0: K): V;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File);
    }
    type UserList_<K, V> = UserList<K, V>;
    abstract class CrystalProperty extends Internal.ForgeRegistryEntry<Internal.CrystalProperty> implements Internal.Comparable<Internal.CrystalProperty> {
        setRequiredResearch(arg0: Internal.ResearchProgression_): Internal.CrystalProperty;
        modify(arg0: number, arg1: number, arg2: Internal.CalculationContext): number;
        getName(arg0: number): Internal.IFormattableTextComponent;
        addModifier(arg0: Internal.CrystalPropertyModifierFunction_): Internal.CrystalProperty;
        addUsage(arg0: Internal.Predicate_<Internal.CalculationContext_>): Internal.CrystalProperty;
        hasUsageFor(arg0: Internal.CalculationContext): boolean;
        setRegistryName(arg0: ResourceLocation_): any;
        canSee(arg0: Internal.PlayerProgress): boolean;
        compareTo(arg0: Internal.CrystalProperty_): number;
        compareTo(arg0: any): number;
        getMaxTier(): number;
        get maxTier(): number;
        set registryName(arg0: ResourceLocation_);
        set requiredResearch(arg0: Internal.ResearchProgression_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type CrystalProperty_ = Registry.astralsorcery.attribute_crystal_properties | CrystalProperty;
    abstract class DimensionRenderInfo extends Document.Object {
        func_239216_b_(): boolean;
        func_239217_c_(): boolean;
        func_230494_a_(arg0: Vec3, arg1: number): Vec3;
        setSkyRenderHandler(arg0: Internal.ISkyRenderHandler_): void;
        func_239213_a_(): number;
        func_230492_a_(arg0: number, arg1: number): number[];
        func_230493_a_(arg0: number, arg1: number): boolean;
        setWeatherParticleRenderHandler(arg0: Internal.IWeatherParticleRenderHandler_): void;
        static func_243495_a(arg0: Internal.DimensionType): Internal.DimensionRenderInfo;
        getCloudRenderHandler(): Internal.ICloudRenderHandler;
        setCloudRenderHandler(arg0: Internal.ICloudRenderHandler_): void;
        getWeatherRenderHandler(): Internal.IWeatherRenderHandler;
        setWeatherRenderHandler(arg0: Internal.IWeatherRenderHandler_): void;
        func_241683_c_(): Internal.DimensionRenderInfo$FogType;
        getWeatherParticleRenderHandler(): Internal.IWeatherParticleRenderHandler;
        func_241684_d_(): boolean;
        getSkyRenderHandler(): Internal.ISkyRenderHandler;
        static readonly field_239208_a_: {};
        get weatherParticleRenderHandler(): Internal.IWeatherParticleRenderHandler;
        get cloudRenderHandler(): Internal.ICloudRenderHandler;
        get weatherRenderHandler(): Internal.IWeatherRenderHandler;
        get skyRenderHandler(): Internal.ISkyRenderHandler;
        set weatherParticleRenderHandler(arg0: Internal.IWeatherParticleRenderHandler_);
        set cloudRenderHandler(arg0: Internal.ICloudRenderHandler_);
        set weatherRenderHandler(arg0: Internal.IWeatherRenderHandler_);
        set skyRenderHandler(arg0: Internal.ISkyRenderHandler_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: boolean, arg2: Internal.DimensionRenderInfo$FogType, arg3: boolean, arg4: boolean);
    }
    type DimensionRenderInfo_ = DimensionRenderInfo;
    class NioEventLoopGroup extends Internal.MultithreadEventLoopGroup {
        scheduleAtFixedRate(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        next(): Internal.EventExecutor;
        schedule(arg0: java_.util.concurrent.Callable_<any>, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        schedule(arg0: Internal.Runnable_, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        submit(arg0: java_.util.concurrent.Callable_<any>): java_.util.concurrent.Future<any>;
        submit(arg0: Internal.Runnable_): java_.util.concurrent.Future<any>;
        submit(arg0: Internal.Runnable_, arg1: any): java_.util.concurrent.Future<any>;
        spliterator(): Internal.Spliterator<Internal.EventExecutor>;
        forEach(arg0: Internal.Consumer_<Internal.EventExecutor_>): void;
        scheduleWithFixedDelay(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        rebuildSelectors(): void;
        setIoRatio(arg0: number): void;
        close(): void;
        set ioRatio(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.ThreadFactory, arg2: any, arg3: any);
        constructor(arg0: number, arg1: Internal.Executor, arg2: any);
        constructor(arg0: number, arg1: Internal.Executor, arg2: any, arg3: any);
        constructor(arg0: number, arg1: Internal.Executor, arg2: any, arg3: any, arg4: any);
        constructor(arg0: number, arg1: Internal.Executor, arg2: any, arg3: any, arg4: any, arg5: any);
        constructor();
        constructor(arg0: number);
        constructor(arg0: number, arg1: Internal.ThreadFactory);
        constructor(arg0: number, arg1: Internal.Executor);
        constructor(arg0: number, arg1: Internal.ThreadFactory, arg2: any);
    }
    type NioEventLoopGroup_ = NioEventLoopGroup;
    class EntityViewRenderEvent$FogColors extends Internal.EntityViewRenderEvent {
        getGreen(): number;
        getRed(): number;
        setBlue(arg0: number): void;
        getBlue(): number;
        setGreen(arg0: number): void;
        setRed(arg0: number): void;
        get red(): number;
        get green(): number;
        get blue(): number;
        set red(arg0: number);
        set green(arg0: number);
        set blue(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ActiveRenderInfo, arg1: number, arg2: number, arg3: number, arg4: number);
    }
    type EntityViewRenderEvent$FogColors_ = EntityViewRenderEvent$FogColors;
    class ChronoField extends Internal.Enum<Internal.ChronoField> implements Internal.TemporalField {
        resolve(arg0: Internal.Map_<Internal.TemporalField_, number>, arg1: Internal.TemporalAccessor, arg2: Internal.ResolverStyle_): Internal.TemporalAccessor;
        static valueOf(arg0: string): Internal.ChronoField;
        static values(): Internal.ChronoField[];
        adjustInto<R_>(arg0: R_, arg1: number): R_;
        range(): Internal.ValueRange;
        getRangeUnit(): Internal.TemporalUnit;
        getBaseUnit(): Internal.TemporalUnit;
        rangeRefinedBy(arg0: Internal.TemporalAccessor): Internal.ValueRange;
        getDisplayName(arg0: Internal.Locale): string;
        isTimeBased(): boolean;
        checkValidValue(arg0: number): number;
        checkValidIntValue(arg0: number): number;
        isDateBased(): boolean;
        getFrom(arg0: Internal.TemporalAccessor): number;
        isSupportedBy(arg0: Internal.TemporalAccessor): boolean;
        static readonly CLOCK_HOUR_OF_AMPM: Internal.ChronoField;
        static readonly DAY_OF_YEAR: Internal.ChronoField;
        static readonly MICRO_OF_DAY: Internal.ChronoField;
        static readonly ALIGNED_DAY_OF_WEEK_IN_MONTH: Internal.ChronoField;
        static readonly DAY_OF_MONTH: Internal.ChronoField;
        static readonly SECOND_OF_MINUTE: Internal.ChronoField;
        static readonly PROLEPTIC_MONTH: Internal.ChronoField;
        static readonly MILLI_OF_SECOND: Internal.ChronoField;
        static readonly NANO_OF_DAY: Internal.ChronoField;
        static readonly CLOCK_HOUR_OF_DAY: Internal.ChronoField;
        static readonly MINUTE_OF_DAY: Internal.ChronoField;
        static readonly ALIGNED_WEEK_OF_MONTH: Internal.ChronoField;
        static readonly YEAR: Internal.ChronoField;
        static readonly HOUR_OF_DAY: Internal.ChronoField;
        static readonly MILLI_OF_DAY: Internal.ChronoField;
        static readonly ALIGNED_DAY_OF_WEEK_IN_YEAR: Internal.ChronoField;
        static readonly YEAR_OF_ERA: Internal.ChronoField;
        static readonly AMPM_OF_DAY: Internal.ChronoField;
        static readonly NANO_OF_SECOND: Internal.ChronoField;
        static readonly SECOND_OF_DAY: Internal.ChronoField;
        static readonly MICRO_OF_SECOND: Internal.ChronoField;
        static readonly MONTH_OF_YEAR: Internal.ChronoField;
        static readonly EPOCH_DAY: Internal.ChronoField;
        static readonly ERA: Internal.ChronoField;
        static readonly OFFSET_SECONDS: Internal.ChronoField;
        static readonly HOUR_OF_AMPM: Internal.ChronoField;
        static readonly MINUTE_OF_HOUR: Internal.ChronoField;
        static readonly INSTANT_SECONDS: Internal.ChronoField;
        static readonly ALIGNED_WEEK_OF_YEAR: Internal.ChronoField;
        static readonly DAY_OF_WEEK: Internal.ChronoField;
        get baseUnit(): Internal.TemporalUnit;
        get rangeUnit(): Internal.TemporalUnit;
        get timeBased(): boolean;
        get dateBased(): boolean;
    }
    type ChronoField_ = "nano_of_second" | "nano_of_day" | "micro_of_second" | "micro_of_day" | "milli_of_second" | "milli_of_day" | "second_of_minute" | "second_of_day" | "minute_of_hour" | "minute_of_day" | "hour_of_ampm" | "clock_hour_of_ampm" | "hour_of_day" | "clock_hour_of_day" | "ampm_of_day" | "day_of_week" | "aligned_day_of_week_in_month" | "aligned_day_of_week_in_year" | "day_of_month" | "day_of_year" | "epoch_day" | "aligned_week_of_month" | "aligned_week_of_year" | "month_of_year" | "proleptic_month" | "year_of_era" | "year" | "era" | "instant_seconds" | "offset_seconds" | ChronoField;
    class ArmTileEntity$Phase extends Internal.Enum<Internal.ArmTileEntity$Phase> {
        static valueOf(arg0: string): Internal.ArmTileEntity$Phase;
        static values(): Internal.ArmTileEntity$Phase[];
        static readonly MOVE_TO_INPUT: Internal.ArmTileEntity$Phase;
        static readonly SEARCH_OUTPUTS: Internal.ArmTileEntity$Phase;
        static readonly SEARCH_INPUTS: Internal.ArmTileEntity$Phase;
        static readonly MOVE_TO_OUTPUT: Internal.ArmTileEntity$Phase;
        static readonly DANCING: Internal.ArmTileEntity$Phase;
    }
    type ArmTileEntity$Phase_ = "search_inputs" | "move_to_input" | "search_outputs" | "move_to_output" | "dancing" | ArmTileEntity$Phase;
    class SSpawnMovingSoundEffectPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218760_c(): Internal.SoundCategory;
        func_218763_b(): Internal.SoundEvent;
        func_218761_f(): number;
        func_218762_d(): number;
        func_218764_e(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.SoundEvent, arg1: Internal.SoundCategory, arg2: Internal.Entity, arg3: number, arg4: number);
    }
    type SSpawnMovingSoundEffectPacket_ = SSpawnMovingSoundEffectPacket;
    class FeatureSpread extends Document.Object {
        func_242259_a(arg0: Internal.Random): number;
        static func_242252_a(arg0: number): Internal.FeatureSpread;
        static func_242253_a(arg0: number, arg1: number): Internal.FeatureSpread;
        static func_242254_a(arg0: number, arg1: number, arg2: number): Internal.Codec<Internal.FeatureSpread>;
        static readonly field_242249_a: Internal.Codec<Internal.FeatureSpread>;
    }
    type FeatureSpread_ = FeatureSpread;
    class GameRenderer extends Document.Object implements Internal.IResourceManagerReloadListener, Internal.AutoCloseable {
        func_181022_b(): void;
        func_147706_e(): Internal.ShaderGroup;
        func_147701_i(): Internal.MapItemRenderer;
        func_228378_a_(arg0: number, arg1: number, arg2: Internal.MatrixStack): void;
        static func_180438_a(arg0: Internal.LivingEntity, arg1: number): number;
        func_78464_a(): void;
        func_175066_a(arg0: Internal.Entity): void;
        func_228385_m_(): Internal.OverlayTexture;
        func_190564_k(): void;
        func_147704_a(arg0: number, arg1: number): void;
        constant$cmk000$adjustDistanceCheck(arg0: number): number;
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_215316_n(): Internal.ActiveRenderInfo;
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage_, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        func_190565_a(arg0: Internal.ItemStack): void;
        getResourceType(): Internal.IResourceType;
        func_228383_b_(arg0: Internal.MatrixStack, arg1: number): void;
        func_205002_d(arg0: number): number;
        func_228382_a_(arg0: Internal.ActiveRenderInfo, arg1: number, arg2: boolean): Internal.Matrix4f;
        close(): void;
        func_195458_a(arg0: number, arg1: number, arg2: boolean): void;
        func_228380_a_(arg0: Internal.MatrixStack, arg1: number): void;
        func_215311_a(arg0: Internal.ActiveRenderInfo, arg1: number, arg2: boolean): number;
        func_228379_a_(arg0: Internal.Matrix4f): void;
        func_205001_m(): number;
        func_225594_i_(): string;
        func_78473_a(arg0: number): void;
        func_175071_c(): void;
        func_228384_l_(): Internal.LightTexture;
        func_175069_a(arg0: ResourceLocation_): void;
        handler$zlc000$captureProjectionMatrix(matrix: Internal.Matrix4f, ci: Internal.CallbackInfo): void;
        func_228381_a_(arg0: Internal.MatrixStack, arg1: Internal.ActiveRenderInfo, arg2: number): void;
        field_78529_t: number;
        readonly field_78516_c: Internal.FirstPersonRenderer;
        field_175074_C: boolean;
        static readonly field_147708_e: 24;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft, arg1: Internal.IResourceManager, arg2: Internal.RenderTypeBuffers);
    }
    type GameRenderer_ = GameRenderer;
    class RecipeModifier extends Document.Object {
        getTarget(): string;
        getRequirementType(): Internal.RequirementType<any>;
        getChance(): number;
        getTooltip(): Internal.List<Internal.ITextComponent>;
        getModifier(): number;
        getOperation(): Internal.RecipeModifier$OPERATION;
        getMode(): Internal.RequirementIOMode;
        static readonly CODEC: Internal.Codec<Internal.RecipeModifier>;
        get mode(): Internal.RequirementIOMode;
        get chance(): number;
        get modifier(): number;
        get tooltip(): Internal.List<Internal.ITextComponent>;
        get operation(): Internal.RecipeModifier$OPERATION;
        get requirementType(): Internal.RequirementType<any>;
        get target(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.RequirementType<any>, arg1: Internal.RequirementIOMode, arg2: Internal.RecipeModifier$OPERATION, arg3: number, arg4: string, arg5: number);
    }
    type RecipeModifier_ = RecipeModifier;
    class ClientTeamManager extends Document.Object {
        init(arg0: Internal.UUID, arg1: Internal.List<Internal.TeamMessage>): void;
        getName(arg0: Internal.UUID): Internal.ITextComponent;
        getTeam(arg0: Internal.UUID): Internal.ClientTeam;
        getKnownPlayer(arg0: Internal.UUID): Internal.KnownClientPlayer;
        getId(): Internal.UUID;
        write(arg0: Internal.PacketBuffer, arg1: number): void;
        readonly knownPlayers: Internal.Map<Internal.UUID, Internal.KnownClientPlayer>;
        selfTeam: Internal.ClientTeam;
        invalid: boolean;
        static INSTANCE: Internal.ClientTeamManager;
        readonly teamMap: Internal.Map<Internal.UUID, Internal.ClientTeam>;
        selfKnownPlayer: Internal.KnownClientPlayer;
        get id(): Internal.UUID;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.UUID);
        constructor(arg0: Internal.PacketBuffer, arg1: number);
    }
    type ClientTeamManager_ = ClientTeamManager;
    class CUpdateMinecartCommandBlockPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_210372_a(): string;
        func_210371_a(arg0: Internal.World): Internal.CommandBlockLogic;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_210373_b(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: string, arg2: boolean);
    }
    type CUpdateMinecartCommandBlockPacket_ = CUpdateMinecartCommandBlockPacket;
    class RPConfig$MiscBugFixes extends Document.Object {
        logFixedDuplicateEntityUUIDs: boolean;
        fixMC2025: boolean;
        fixPlayerHeadStacking: Internal.RPConfig$PlayerHeadStackingFixMode;
        fixMobsNotCrossingRails: boolean;
        fixDuplicateEntityUUIDs: boolean;
        fixRecipeBookNotMovingIngredientsWithTags: boolean;
        fixAnimalBreedingHearts: boolean;
        fixBoatFallDamage: boolean;
        fixEntitiesNotBeingConsideredWetInCauldrons: boolean;
        fixMC149777: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RPConfig$MiscBugFixes_ = RPConfig$MiscBugFixes;
    abstract class ByteBuf extends Document.Object implements Internal.ReferenceCounted, Internal.Comparable<Internal.ByteBuf> {
        asReadOnly(): Internal.ByteBuf;
        markReaderIndex(): Internal.ByteBuf;
        getByte(arg0: number): number;
        release(): boolean;
        release(arg0: number): boolean;
        readDoubleLE(): number;
        writeZero(arg0: number): Internal.ByteBuf;
        resetReaderIndex(): Internal.ByteBuf;
        writeFloat(arg0: number): Internal.ByteBuf;
        setLongLE(arg0: number, arg1: number): Internal.ByteBuf;
        readRetainedSlice(arg0: number): Internal.ByteBuf;
        slice(arg0: number, arg1: number): Internal.ByteBuf;
        slice(): Internal.ByteBuf;
        getMediumLE(arg0: number): number;
        setDoubleLE(arg0: number, arg1: number): Internal.ByteBuf;
        readUnsignedIntLE(): number;
        writeFloatLE(arg0: number): Internal.ByteBuf;
        readInt(): number;
        order(arg0: Internal.ByteOrder): Internal.ByteBuf;
        order(): Internal.ByteOrder;
        writeMedium(arg0: number): Internal.ByteBuf;
        resetWriterIndex(): Internal.ByteBuf;
        writableBytes(): number;
        maxCapacity(): number;
        getUnsignedShort(arg0: number): number;
        bytesBefore(arg0: number, arg1: number, arg2: number): number;
        bytesBefore(arg0: number, arg1: number): number;
        bytesBefore(arg0: number): number;
        nioBufferCount(): number;
        setInt(arg0: number, arg1: number): Internal.ByteBuf;
        getInt(arg0: number): number;
        markWriterIndex(): Internal.ByteBuf;
        isReadable(): boolean;
        isReadable(arg0: number): boolean;
        writeBoolean(arg0: boolean): Internal.ByteBuf;
        setIntLE(arg0: number, arg1: number): Internal.ByteBuf;
        writeLongLE(arg0: number): Internal.ByteBuf;
        setShortLE(arg0: number, arg1: number): Internal.ByteBuf;
        retain(): Internal.ByteBuf;
        retain(): Internal.ReferenceCounted;
        retain(arg0: number): Internal.ByteBuf;
        retain(arg0: number): Internal.ReferenceCounted;
        isWritable(): boolean;
        isWritable(arg0: number): boolean;
        readChar(): string;
        hasMemoryAddress(): boolean;
        capacity(arg0: number): Internal.ByteBuf;
        capacity(): number;
        readCharSequence(arg0: number, arg1: Internal.Charset): Internal.CharSequence;
        isReadOnly(): boolean;
        readUnsignedShortLE(): number;
        readDouble(): number;
        readFloat(): number;
        getLongLE(arg0: number): number;
        getBoolean(arg0: number): boolean;
        copy(): Internal.ByteBuf;
        copy(arg0: number, arg1: number): Internal.ByteBuf;
        readShortLE(): number;
        readUnsignedMedium(): number;
        ensureWritable(arg0: number): Internal.ByteBuf;
        ensureWritable(arg0: number, arg1: boolean): number;
        writeInt(arg0: number): Internal.ByteBuf;
        readFloatLE(): number;
        getDoubleLE(arg0: number): number;
        hasArray(): boolean;
        memoryAddress(): number;
        readableBytes(): number;
        readSlice(arg0: number): Internal.ByteBuf;
        getIntLE(arg0: number): number;
        nioBuffers(): Internal.ByteBuffer[];
        nioBuffers(arg0: number, arg1: number): Internal.ByteBuffer[];
        forEachByteDesc(arg0: Internal.ByteProcessor_): number;
        forEachByteDesc(arg0: number, arg1: number, arg2: Internal.ByteProcessor_): number;
        skipBytes(arg0: number): Internal.ByteBuf;
        getLong(arg0: number): number;
        readLong(): number;
        readShort(): number;
        getUnsignedMedium(arg0: number): number;
        setZero(arg0: number, arg1: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuffer): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf): Internal.ByteBuf;
        readBytes(arg0: number[], arg1: number, arg2: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number): Internal.ByteBuf;
        readBytes(arg0: Internal.GatheringByteChannel, arg1: number): number;
        readBytes(arg0: number): Internal.ByteBuf;
        readBytes(arg0: Internal.OutputStream, arg1: number): Internal.ByteBuf;
        readBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.ByteBuf;
        readBytes(arg0: Internal.FileChannel, arg1: number, arg2: number): number;
        readBytes(arg0: number[]): Internal.ByteBuf;
        readBoolean(): boolean;
        toString(arg0: number, arg1: number, arg2: Internal.Charset): string;
        toString(arg0: Internal.Charset): string;
        retainedSlice(): Internal.ByteBuf;
        retainedSlice(arg0: number, arg1: number): Internal.ByteBuf;
        readMediumLE(): number;
        setMedium(arg0: number, arg1: number): Internal.ByteBuf;
        isDirect(): boolean;
        setBoolean(arg0: number, arg1: boolean): Internal.ByteBuf;
        getFloatLE(arg0: number): number;
        readerIndex(): number;
        readerIndex(arg0: number): Internal.ByteBuf;
        getCharSequence(arg0: number, arg1: number, arg2: Internal.Charset): Internal.CharSequence;
        setShort(arg0: number, arg1: number): Internal.ByteBuf;
        compareTo(arg0: Internal.ByteBuf): number;
        compareTo(arg0: any): number;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number, arg3: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuf): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.FileChannel, arg2: number, arg3: number): number;
        getBytes(arg0: number, arg1: Internal.GatheringByteChannel, arg2: number): number;
        getBytes(arg0: number, arg1: Internal.OutputStream, arg2: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: number[]): Internal.ByteBuf;
        getBytes(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ByteBuf;
        getBytes(arg0: number, arg1: Internal.ByteBuffer): Internal.ByteBuf;
        unwrap(): Internal.ByteBuf;
        setDouble(arg0: number, arg1: number): Internal.ByteBuf;
        setChar(arg0: number, arg1: number): Internal.ByteBuf;
        refCnt(): number;
        getUnsignedIntLE(arg0: number): number;
        getUnsignedInt(arg0: number): number;
        setFloatLE(arg0: number, arg1: number): Internal.ByteBuf;
        indexOf(arg0: number, arg1: number, arg2: number): number;
        writeByte(arg0: number): Internal.ByteBuf;
        nioBuffer(): Internal.ByteBuffer;
        nioBuffer(arg0: number, arg1: number): Internal.ByteBuffer;
        touch(arg0: any): Internal.ByteBuf;
        touch(arg0: any): Internal.ReferenceCounted;
        touch(): Internal.ByteBuf;
        touch(): Internal.ReferenceCounted;
        discardSomeReadBytes(): Internal.ByteBuf;
        duplicate(): Internal.ByteBuf;
        writerIndex(arg0: number): Internal.ByteBuf;
        writerIndex(): number;
        readUnsignedInt(): number;
        getUnsignedShortLE(arg0: number): number;
        writeCharSequence(arg0: Internal.CharSequence, arg1: Internal.Charset): number;
        retainedDuplicate(): Internal.ByteBuf;
        getChar(arg0: number): string;
        setLong(arg0: number, arg1: number): Internal.ByteBuf;
        readMedium(): number;
        writeBytes(arg0: Internal.FileChannel, arg1: number, arg2: number): number;
        writeBytes(arg0: Internal.ByteBuf, arg1: number, arg2: number): Internal.ByteBuf;
        writeBytes(arg0: number[]): Internal.ByteBuf;
        writeBytes(arg0: Internal.InputStream, arg1: number): number;
        writeBytes(arg0: Internal.ByteBuffer): Internal.ByteBuf;
        writeBytes(arg0: number[], arg1: number, arg2: number): Internal.ByteBuf;
        writeBytes(arg0: Internal.ByteBuf): Internal.ByteBuf;
        writeBytes(arg0: Internal.ScatteringByteChannel, arg1: number): number;
        writeBytes(arg0: Internal.ByteBuf, arg1: number): Internal.ByteBuf;
        forEachByte(arg0: Internal.ByteProcessor_): number;
        forEachByte(arg0: number, arg1: number, arg2: Internal.ByteProcessor_): number;
        setIndex(arg0: number, arg1: number): Internal.ByteBuf;
        writeShort(arg0: number): Internal.ByteBuf;
        alloc(): Internal.ByteBufAllocator;
        getShortLE(arg0: number): number;
        getMedium(arg0: number): number;
        readUnsignedShort(): number;
        setByte(arg0: number, arg1: number): Internal.ByteBuf;
        writeShortLE(arg0: number): Internal.ByteBuf;
        maxWritableBytes(): number;
        getDouble(arg0: number): number;
        getFloat(arg0: number): number;
        writeLong(arg0: number): Internal.ByteBuf;
        writeIntLE(arg0: number): Internal.ByteBuf;
        array(): number[];
        setCharSequence(arg0: number, arg1: Internal.CharSequence, arg2: Internal.Charset): number;
        internalNioBuffer(arg0: number, arg1: number): Internal.ByteBuffer;
        arrayOffset(): number;
        setMediumLE(arg0: number, arg1: number): Internal.ByteBuf;
        readIntLE(): number;
        readUnsignedByte(): number;
        readLongLE(): number;
        readUnsignedMediumLE(): number;
        writeDouble(arg0: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuffer): Internal.ByteBuf;
        setBytes(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: number[]): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number, arg3: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf, arg2: number): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.ByteBuf): Internal.ByteBuf;
        setBytes(arg0: number, arg1: Internal.FileChannel, arg2: number, arg3: number): number;
        setBytes(arg0: number, arg1: Internal.ScatteringByteChannel, arg2: number): number;
        setBytes(arg0: number, arg1: Internal.InputStream, arg2: number): number;
        setFloat(arg0: number, arg1: number): Internal.ByteBuf;
        getShort(arg0: number): number;
        writeMediumLE(arg0: number): Internal.ByteBuf;
        clear(): Internal.ByteBuf;
        getUnsignedByte(arg0: number): number;
        discardReadBytes(): Internal.ByteBuf;
        writeChar(arg0: number): Internal.ByteBuf;
        writeDoubleLE(arg0: number): Internal.ByteBuf;
        getUnsignedMediumLE(arg0: number): number;
        readByte(): number;
        get readable(): boolean;
        get direct(): boolean;
        get readOnly(): boolean;
        get writable(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ByteBuf_ = ByteBuf;
    interface BiomeFTBC {
        setFTBCBiomeColorIndex(arg0: number): void;
        getFTBCBiomeColorIndex(): number;
    }
    type BiomeFTBC_ = BiomeFTBC;
    class TileEntityBehaviourEvent <T> extends Internal.GenericEvent<T> {
        getTileEntity(): T;
        attach(arg0: Internal.TileEntityBehaviour): void;
        getBlockState(): Internal.BlockState;
        remove(arg0: Internal.BehaviourType<any>): Internal.TileEntityBehaviour;
        get blockState(): Internal.BlockState;
        get tileEntity(): T;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.BlockState, arg1: T, arg2: Internal.Map<Internal.BehaviourType<any>, Internal.TileEntityBehaviour>);
    }
    type TileEntityBehaviourEvent_<T> = TileEntityBehaviourEvent<T>;
    interface ToDoubleFunction <T> {
        applyAsDouble(arg0: T): number;
        (arg0: T): number;
    }
    type ToDoubleFunction_<T> = ((arg0: T)=>number) | ToDoubleFunction<T>;
    interface IDataSerializer <T> {
        func_187159_a(arg0: Internal.PacketBuffer): T;
        func_192717_a(arg0: T): T;
        func_187160_a(arg0: Internal.PacketBuffer, arg1: T): void;
        func_187161_a(arg0: number): Internal.DataParameter<T>;
    }
    type IDataSerializer_<T> = IDataSerializer<T>;
    interface IContainerFactory <T> extends Internal.ContainerType$IFactory<T> {
        create(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PacketBuffer): T;
        create(arg0: number, arg1: Internal.PlayerInventory): T;
        (arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PacketBuffer): T;
    }
    type IContainerFactory_<T> = ((arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PacketBuffer)=>T) | IContainerFactory<T>;
    interface ExpInvokerMixin {
        an_getExperienceReward(arg0: Internal.PlayerEntity): number;
        an_shouldDropExperience(): boolean;
    }
    type ExpInvokerMixin_ = ExpInvokerMixin;
    interface IRecipeCategory <T> {
        getTooltipStrings(arg0: T, arg1: number, arg2: number): Internal.List<Internal.ITextComponent>;
        setRecipe(arg0: Internal.IRecipeLayout, arg1: T, arg2: Internal.IIngredients): void;
        getUid(): ResourceLocation;
        getTitle(): string;
        getTitleAsTextComponent(): Internal.ITextComponent;
        handleClick(arg0: T, arg1: number, arg2: number, arg3: number): boolean;
        setIngredients(arg0: T, arg1: Internal.IIngredients): void;
        getRecipeClass(): Internal.Class<T>;
        draw(arg0: T, arg1: Internal.MatrixStack, arg2: number, arg3: number): void;
        getBackground(): Internal.IDrawable;
        isHandled(arg0: T): boolean;
        getIcon(): Internal.IDrawable;
    }
    type IRecipeCategory_<T> = IRecipeCategory<T>;
    abstract class AnimatedSceneElement extends Internal.PonderSceneElement {
        setFade(arg0: number): void;
        setFadeVec(arg0: Vec3): void;
        forceApplyFade(arg0: number): void;
        set fade(arg0: number);
        set fadeVec(arg0: Vec3);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AnimatedSceneElement_ = AnimatedSceneElement;
    class STitlePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179806_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179805_b(): Internal.ITextComponent;
        func_179803_e(): number;
        func_179804_d(): number;
        func_179807_a(): Internal.STitlePacket$Type;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.STitlePacket$Type, arg1: Internal.ITextComponent, arg2: number, arg3: number, arg4: number);
        constructor(arg0: number, arg1: number, arg2: number);
        constructor(arg0: Internal.STitlePacket$Type, arg1: Internal.ITextComponent);
        constructor();
    }
    type STitlePacket_ = STitlePacket;
    class Type$FieldNotFoundException extends Internal.Type$TypeError {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type Type$FieldNotFoundException_ = Type$FieldNotFoundException;
    class VillageSectionsDebugRender extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_239379_b_(arg0: Internal.SectionPos): void;
        func_239378_a_(arg0: Internal.SectionPos): void;
    }
    type VillageSectionsDebugRender_ = VillageSectionsDebugRender;
    class FireworksJS$Shape extends Internal.Enum<Internal.FireworksJS$Shape> {
        static valueOf(name: string): Internal.FireworksJS$Shape;
        static values(): Internal.FireworksJS$Shape[];
        static get(name: string): Internal.FireworksJS$Shape;
        static readonly SMALL_BALL: Internal.FireworksJS$Shape;
        static readonly LARGE_BALL: Internal.FireworksJS$Shape;
        static readonly STAR: Internal.FireworksJS$Shape;
        static readonly CREEPER: Internal.FireworksJS$Shape;
        static readonly BURST: Internal.FireworksJS$Shape;
        static readonly VALUES: Internal.FireworksJS$Shape[];
        readonly type: number;
    }
    type FireworksJS$Shape_ = "small_ball" | "large_ball" | "star" | "creeper" | "burst" | FireworksJS$Shape;
    interface ContextFactory$Listener {
        contextReleased(arg0: Internal.Context): void;
        contextCreated(arg0: Internal.Context): void;
    }
    type ContextFactory$Listener_ = ContextFactory$Listener;
    class BehaviourType <T> extends Document.Object {
        getName(): string;
        get name(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor();
    }
    type BehaviourType_<T> = BehaviourType<T>;
    class ModifiableAttributeInstance extends Document.Object {
        func_225505_c_(): Internal.Set<Internal.AttributeModifier>;
        func_233772_g_(): Internal.CompoundNBT;
        func_142049_d(): void;
        func_225504_a_(arg0: Internal.AttributeModifier$Operation_): Internal.Set<Internal.AttributeModifier>;
        func_111124_b(arg0: Internal.AttributeModifier): void;
        func_111125_b(): number;
        func_111127_a(arg0: Internal.UUID): Internal.AttributeModifier;
        func_233763_a_(arg0: Internal.ModifiableAttributeInstance): void;
        func_111128_a(arg0: number): void;
        func_111126_e(): number;
        func_188479_b(arg0: Internal.UUID): void;
        func_233765_a_(arg0: Internal.CompoundNBT_): void;
        func_233770_c_(arg0: Internal.UUID): boolean;
        func_233769_c_(arg0: Internal.AttributeModifier): void;
        func_111123_a(): net.minecraft.entity.ai.attributes.Attribute;
        func_233767_b_(arg0: Internal.AttributeModifier): void;
        func_180374_a(arg0: Internal.AttributeModifier): boolean;
        handler$cmf000$postProcessAtrributeValue(arg0: Internal.CallbackInfoReturnable<any>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: net.minecraft.entity.ai.attributes.Attribute, arg1: Internal.Consumer<Internal.ModifiableAttributeInstance>);
    }
    type ModifiableAttributeInstance_ = ModifiableAttributeInstance;
    class DragonFightManager extends Document.Object {
        func_186087_f(): void;
        func_186106_e(): void;
        func_186090_a(arg0: Internal.EnderCrystalEntity, arg1: Internal.DamageSource_): void;
        addPlayer(arg0: Internal.ServerPlayerEntity): void;
        func_186092_c(): number;
        func_186096_a(arg0: Internal.EnderDragonEntity): void;
        removePlayer(arg0: Internal.ServerPlayerEntity): void;
        func_186088_a(): Internal.CompoundNBT;
        func_186105_b(): void;
        func_186099_b(arg0: Internal.EnderDragonEntity): void;
        func_186102_d(): boolean;
        readonly field_186109_c: Internal.ServerBossInfo;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ServerWorld, arg1: number, arg2: Internal.CompoundNBT);
    }
    type DragonFightManager_ = DragonFightManager;
    class ClientChunkProvider$ChunkArray extends Document.Object {
        field_217195_b: Internal.AtomicReferenceArray<Internal.Chunk>;
    }
    type ClientChunkProvider$ChunkArray_ = ClientChunkProvider$ChunkArray;
    class VertexFormatElement$Usage extends Internal.Enum<Internal.VertexFormatElement$Usage> {
        func_177384_a(): string;
        static valueOf(arg0: string): Internal.VertexFormatElement$Usage;
        static values(): Internal.VertexFormatElement$Usage[];
        func_227901_a_(arg0: number): void;
        static readonly POSITION: Internal.VertexFormatElement$Usage;
        static readonly UV: Internal.VertexFormatElement$Usage;
        static readonly GENERIC: Internal.VertexFormatElement$Usage;
        static readonly COLOR: Internal.VertexFormatElement$Usage;
        static readonly PADDING: Internal.VertexFormatElement$Usage;
        static readonly NORMAL: Internal.VertexFormatElement$Usage;
    }
    type VertexFormatElement$Usage_ = "position" | "normal" | "color" | "uv" | "padding" | "generic" | VertexFormatElement$Usage;
    class OnDatapackSyncEvent extends net.minecraftforge.eventbus.api.Event {
        getPlayer(): Internal.ServerPlayerEntity;
        getPlayerList(): Internal.PlayerList;
        get playerList(): Internal.PlayerList;
        get player(): Internal.ServerPlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerList, arg1: Internal.ServerPlayerEntity);
    }
    type OnDatapackSyncEvent_ = OnDatapackSyncEvent;
    class NativeJavaObject extends Document.Object implements Internal.Scriptable, Internal.SymbolScriptable, Internal.Wrapper, Internal.Serializable {
        hasInstance(value: Internal.Scriptable): boolean;
        setParentScope(m: Internal.Scriptable): void;
        static canConvert(cx: Internal.Context, fromObj: any, to: Internal.Class<any>): boolean;
        getIds(): any[];
        delete(name: string): void;
        delete(key: Internal.Symbol): void;
        delete(index: number): void;
        put(name: string, start: Internal.Scriptable, value: any): void;
        put(symbol: Internal.Symbol, start: Internal.Scriptable, value: any): void;
        put(index: number, start: Internal.Scriptable, value: any): void;
        unwrap(): any;
        getDefaultValue(hint: Internal.Class<any>): any;
        setPrototype(m: Internal.Scriptable): void;
        getPrototype(): Internal.Scriptable;
        get(key: Internal.Symbol, start: Internal.Scriptable): any;
        get(index: number, start: Internal.Scriptable): any;
        get(name: string, start: Internal.Scriptable): any;
        has(name: string, start: Internal.Scriptable): boolean;
        has(index: number, start: Internal.Scriptable): boolean;
        has(key: Internal.Symbol, start: Internal.Scriptable): boolean;
        getClassName(): string;
        getParentScope(): Internal.Scriptable;
        get parentScope(): Internal.Scriptable;
        get ids(): any[];
        get className(): string;
        get prototype(): Internal.Scriptable;
        set parentScope(m: Internal.Scriptable);
        set prototype(m: Internal.Scriptable);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(scope: Internal.Scriptable, javaObject: any, staticType: Internal.Class<any>, isAdapter: boolean);
        constructor(scope: Internal.Scriptable, javaObject: any, staticType: Internal.Class<any>);
        constructor();
    }
    type NativeJavaObject_ = NativeJavaObject;
    interface IScreen {
        func_231023_e_(): void;
        (): void;
    }
    type IScreen_ = (()=>void) | IScreen;
    class PlayerEvent$NameFormat extends Internal.PlayerEvent {
        getDisplayname(): Internal.ITextComponent;
        setDisplayname(arg0: Internal.ITextComponent_): void;
        getUsername(): Internal.ITextComponent;
        get displayname(): Internal.ITextComponent;
        get username(): Internal.ITextComponent;
        set displayname(arg0: Internal.ITextComponent_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.ITextComponent);
    }
    type PlayerEvent$NameFormat_ = PlayerEvent$NameFormat;
    interface ILivingEntityData {
    }
    type ILivingEntityData_ = ILivingEntityData;
    class HashMap <K, V> extends Internal.AbstractMap<K, V> implements Internal.Map<K, V>, Internal.Cloneable, Internal.Serializable {
        getOrDefault(arg0: any, arg1: V): V;
        entrySet(): Internal.Set<Internal.Map$Entry<K, V>>;
        computeIfAbsent(arg0: K, arg1: Internal.Function_<K, V>): V;
        values(): Internal.Collection<V>;
        static newHashMap<K_, V_>(arg0: number): Internal.HashMap<K_, V_>;
        replace(arg0: K, arg1: V): V;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        compute(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        computeIfPresent(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        merge(arg0: K, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        get(arg0: any): V;
        clone(): any;
        keySet(): Internal.Set<K>;
        putIfAbsent(arg0: K, arg1: V): V;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
        constructor(arg0: number, arg1: number);
        constructor();
        constructor(arg0: Internal.Map<K, V>);
    }
    type HashMap_<K, V> = HashMap<K, V>;
    abstract class DragGestureRecognizer extends Document.Object implements Internal.Serializable {
        getTriggerEvent(): Internal.InputEvent;
        removeDragGestureListener(arg0: Internal.DragGestureListener_): void;
        getDragSource(): Internal.DragSource;
        addDragGestureListener(arg0: Internal.DragGestureListener_): void;
        setSourceActions(arg0: number): void;
        resetRecognizer(): void;
        setComponent(arg0: Internal.Component): void;
        getComponent(): Internal.Component;
        getSourceActions(): number;
        get sourceActions(): number;
        get component(): Internal.Component;
        get triggerEvent(): Internal.InputEvent;
        get dragSource(): Internal.DragSource;
        set sourceActions(arg0: number);
        set component(arg0: Internal.Component);
    }
    type DragGestureRecognizer_ = DragGestureRecognizer;
    class CConfirmTransactionPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149533_d(): number;
        func_149532_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: boolean);
    }
    type CConfirmTransactionPacket_ = CConfirmTransactionPacket;
    class BossInfo$Overlay extends Internal.Enum<Internal.BossInfo$Overlay> {
        static valueOf(arg0: string): Internal.BossInfo$Overlay;
        static values(): Internal.BossInfo$Overlay[];
        static func_201485_a(arg0: string): Internal.BossInfo$Overlay;
        func_201486_a(): string;
        static readonly NOTCHED_6: Internal.BossInfo$Overlay;
        static readonly NOTCHED_12: Internal.BossInfo$Overlay;
        static readonly PROGRESS: Internal.BossInfo$Overlay;
        static readonly NOTCHED_20: Internal.BossInfo$Overlay;
        static readonly NOTCHED_10: Internal.BossInfo$Overlay;
    }
    type BossInfo$Overlay_ = "progress" | "notched_6" | "notched_10" | "notched_12" | "notched_20" | BossInfo$Overlay;
    interface IBlockReader {
        func_217301_I(): number;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        func_242403_h(arg0: BlockPos): number;
        func_201572_C(): number;
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_217298_h(arg0: BlockPos): number;
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
    }
    type IBlockReader_ = IBlockReader;
    interface MatchResult {
        groupCount(): number;
        hasMatch(): boolean;
        start(): number;
        start(arg0: string): number;
        start(arg0: number): number;
        namedGroups(): Internal.Map<string, number>;
        end(arg0: string): number;
        end(arg0: number): number;
        end(): number;
        group(arg0: number): string;
        group(arg0: string): string;
        group(): string;
    }
    type MatchResult_ = MatchResult;
    class DynamicEnchantment extends Document.Object {
        getType(): Internal.DynamicEnchantmentType;
        getEnchantment(): Internal.Enchantment;
        getLevelAddition(): number;
        setLevelAddition(arg0: number): void;
        copy(): Internal.DynamicEnchantment;
        copy(arg0: number): Internal.DynamicEnchantment;
        get enchantment(): Internal.Enchantment;
        get type(): Internal.DynamicEnchantmentType;
        get levelAddition(): number;
        set levelAddition(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DynamicEnchantmentType, arg1: Internal.Enchantment, arg2: number);
        constructor(arg0: Internal.DynamicEnchantmentType, arg1: number);
    }
    type DynamicEnchantment_ = DynamicEnchantment;
    class Monitor extends Document.Object {
        func_197989_c(): number;
        func_197995_f(): number;
        func_197991_a(arg0: number): Internal.VideoMode;
        func_197990_d(): number;
        func_197992_a(arg0: Internal.Optional<Internal.VideoMode>): Internal.VideoMode;
        func_197987_b(): Internal.VideoMode;
        func_197994_e(): number;
        func_224794_a(arg0: Internal.VideoMode): number;
        func_197988_a(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type Monitor_ = Monitor;
    abstract class WireType extends Document.Object implements Internal.ILocalHandlerProvider {
        static getValue(name: string): Internal.WireType;
        static getValues(): Internal.LinkedHashSet<Internal.WireType>;
        getMaxLength(): number;
        static getIEWireTypes(): Internal.Collection<Internal.WireType>;
        getRenderDiameter(): number;
        getWireCoil(arg0: Internal.Connection): Internal.ItemStack;
        getColour(arg0: Internal.Connection): number;
        getCategory(): string;
        getRequestedHandlers(): Internal.Collection<ResourceLocation>;
        getUniqueName(): string;
        getSlack(): number;
        getIcon(arg0: Internal.Connection): Internal.TextureAtlasSprite;
        static INTERNAL_CONNECTION: Internal.WireType;
        static readonly HV_CATEGORY: "HV";
        static REDSTONE: Internal.WireType;
        static iconDefaultWire: Internal.TextureAtlasSprite;
        static COPPER: Internal.WireType;
        static readonly REDSTONE_CATEGORY: "REDSTONE";
        static readonly LV_CATEGORY: "LV";
        static STRUCTURE_ROPE: Internal.WireType;
        static STRUCTURE_STEEL: Internal.WireType;
        static STEEL: Internal.WireType;
        static ELECTRUM_INSULATED: Internal.WireType;
        static COPPER_INSULATED: Internal.WireType;
        static readonly STRUCTURE_CATEGORY: "STRUCTURE";
        static readonly MV_CATEGORY: "MV";
        static ELECTRUM: Internal.WireType;
        get requestedHandlers(): Internal.Collection<ResourceLocation>;
        get uniqueName(): string;
        get renderDiameter(): number;
        get iEWireTypes(): Internal.Collection<Internal.WireType>;
        get values(): Internal.LinkedHashSet<Internal.WireType>;
        get slack(): number;
        get category(): string;
        get maxLength(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type WireType_ = WireType;
    interface IWaystone {
        wasGenerated(): boolean;
        hasName(): boolean;
        getName(): string;
        isOwner(arg0: Internal.PlayerEntity): boolean;
        getWaystoneUid(): Internal.UUID;
        getPos(): BlockPos;
        isValid(): boolean;
        getOwnerUid(): Internal.UUID;
        isGlobal(): boolean;
        getDimension(): Internal.RegistryKey<Internal.World>;
        getWaystoneType(): ResourceLocation;
        hasOwner(): boolean;
    }
    type IWaystone_ = IWaystone;
    class PlayerStatsJS extends Document.Object {
        getPlayer(): Internal.PlayerJS<any>;
        getPlayTime(): number;
        getDamageAbsorbed(): number;
        getWalkDistance(): number;
        getCrouchDistance(): number;
        getDamageDealt_absorbed(): number;
        getItemsPickedUp(item: Internal.Item_): number;
        getFishCaught(): number;
        getDeaths(): number;
        getSwimDistance(): number;
        getItemsCrafted(item: Internal.Item_): number;
        getBlocksMined(block: Internal.Block_): number;
        getDamageDealt_resisted(): number;
        getPlayerKills(): number;
        get(id: ResourceLocation_): number;
        getTimeSinceDeath(): number;
        getDamageBlocked_by_shield(): number;
        getKilled(entity: Internal.EntityType_<any>): number;
        getTimeCrouchTime(): number;
        getDamageTaken(): number;
        add(id: ResourceLocation_, value: number): void;
        set(id: ResourceLocation_, value: number): void;
        getItemsDropped(item: Internal.Item_): number;
        getJumps(): number;
        getDamageResisted(): number;
        getAnimalsBred(): number;
        getItemsBroken(item: Internal.Item_): number;
        getMobKills(): number;
        getSprintDistance(): number;
        getTimeSinceRest(): number;
        getKilledBy(entity: Internal.EntityType_<any>): number;
        getDamageDealt(): number;
        getItemsUsed(item: Internal.Item_): number;
        get playerKills(): number;
        get animalsBred(): number;
        get walkDistance(): number;
        get damageDealt_resisted(): number;
        get crouchDistance(): number;
        get damageAbsorbed(): number;
        get damageResisted(): number;
        get jumps(): number;
        get damageDealt_absorbed(): number;
        get timeSinceDeath(): number;
        get timeCrouchTime(): number;
        get damageBlocked_by_shield(): number;
        get fishCaught(): number;
        get mobKills(): number;
        get sprintDistance(): number;
        get timeSinceRest(): number;
        get swimDistance(): number;
        get playTime(): number;
        get deaths(): number;
        get damageDealt(): number;
        get player(): Internal.PlayerJS<any>;
        get damageTaken(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(p: Internal.PlayerJS<any>, s: Internal.StatisticsManager);
    }
    type PlayerStatsJS_ = PlayerStatsJS;
    class MaterialId extends ResourceLocation {
        static tryCreate(arg0: string): Internal.MaterialId;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
        constructor(arg0: string, arg1: string);
        constructor(arg0: string);
    }
    type MaterialId_ = MaterialId;
    class StonecuttingRecipeJS extends Internal.RecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type StonecuttingRecipeJS_ = StonecuttingRecipeJS;
    interface CustomIngredientActionCallback {
        transform(arg0: Internal.ItemStackJS_, arg1: number, arg2: Internal.InventoryJS): any;
        (arg0: Internal.ItemStackJS, arg1: number, arg2: Internal.InventoryJS): any;
    }
    type CustomIngredientActionCallback_ = ((arg0: Internal.ItemStackJS, arg1: number, arg2: Internal.InventoryJS)=>any) | CustomIngredientActionCallback;
    class ItemCraftedEventJS extends Internal.PlayerEventJS {
        getItem(): Internal.ItemStackJS;
        getInventory(): Internal.InventoryJS;
        get item(): Internal.ItemStackJS;
        get inventory(): Internal.InventoryJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.PlayerEntity, crafted: Internal.ItemStack, container: Internal.IInventory);
    }
    type ItemCraftedEventJS_ = ItemCraftedEventJS;
    class JigsawPattern$PlacementBehaviour extends Internal.Enum<Internal.JigsawPattern$PlacementBehaviour> implements Internal.IStringSerializable, Internal.IExtensibleEnum {
        init(): void;
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.JigsawPattern$PlacementBehaviour;
        static values(): Internal.JigsawPattern$PlacementBehaviour[];
        static create(arg0: string, arg1: string, arg2: Internal.ImmutableList<Internal.StructureProcessor>): Internal.JigsawPattern$PlacementBehaviour;
        func_214936_a(): string;
        func_214937_b(): Internal.ImmutableList<Internal.StructureProcessor>;
        static func_214938_a(arg0: string): Internal.JigsawPattern$PlacementBehaviour;
        static readonly TERRAIN_MATCHING: Internal.JigsawPattern$PlacementBehaviour;
        static readonly field_236858_c_: Internal.Codec<Internal.JigsawPattern$PlacementBehaviour>;
        static readonly RIGID: Internal.JigsawPattern$PlacementBehaviour;
    }
    type JigsawPattern$PlacementBehaviour_ = "terrain_matching" | "rigid" | JigsawPattern$PlacementBehaviour;
    class LinkedHashSet <E> extends Internal.HashSet<E> implements Internal.SequencedSet<E>, Internal.Cloneable, Internal.Serializable {
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        static newLinkedHashSet<T_>(arg0: number): Internal.LinkedHashSet<T_>;
        removeLast(): E;
        getLast(): E;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        addLast(arg0: E): void;
        stream(): Internal.Stream<E>;
        getFirst(): E;
        removeFirst(): E;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<E>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.SequencedSet<E>;
        addFirst(arg0: E): void;
        get last(): E;
        get first(): E;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Collection<E>);
        constructor();
        constructor(arg0: number);
        constructor(arg0: number, arg1: number);
    }
    type LinkedHashSet_<E> = LinkedHashSet<E>;
    class SpectatorMenu extends Document.Object {
        func_178647_a(arg0: Internal.ISpectatorMenuView): void;
        func_178645_b(): Internal.ISpectatorMenuObject;
        func_178644_b(arg0: number): void;
        func_178643_a(arg0: number): Internal.ISpectatorMenuObject;
        func_178641_d(): void;
        func_178642_a(): Internal.List<Internal.ISpectatorMenuObject>;
        func_178650_c(): Internal.ISpectatorMenuView;
        func_178648_e(): number;
        func_178646_f(): Internal.SpectatorDetails;
        static readonly field_178657_a: Internal.ISpectatorMenuObject;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ISpectatorMenuRecipient);
    }
    type SpectatorMenu_ = SpectatorMenu;
    interface PublicKey extends Internal.Key {
    }
    type PublicKey_ = PublicKey;
    class Direction extends Internal.Enum<Internal.Direction> implements Internal.IStringSerializable {
        static func_176739_a(arg0: string): Internal.Direction;
        func_176735_f(): Internal.Direction;
        static func_82600_a(arg0: number): Internal.Direction;
        func_176734_d(): Internal.Direction;
        static func_176737_a(x: number, y: number, z: number): Internal.Direction;
        func_176736_b(): number;
        func_82601_c(): number;
        func_176730_m(): Vec3i;
        static values(): Internal.Direction[];
        static func_218383_a(arg0: number, arg1: number, arg2: number): Internal.Direction;
        static func_176731_b(arg0: number): Internal.Direction;
        func_96559_d(): number;
        static func_196054_a(arg0: Internal.Entity): Internal.Direction[];
        static func_210769_a(arg0: number, arg1: number, arg2: number): Internal.Direction;
        static func_176733_a(arg0: number): Internal.Direction;
        func_82599_e(): number;
        static func_229385_a_(arg0: Internal.Matrix4f, arg1: Internal.Direction_): Internal.Direction;
        func_185119_l(): number;
        static func_239631_a_(arg0: Internal.Random): Internal.Direction;
        func_176742_j(): string;
        func_176740_k(): Internal.Direction$Axis;
        func_176746_e(): Internal.Direction;
        static valueOf(arg0: string): Internal.Direction;
        static func_181076_a(arg0: Internal.Direction$AxisDirection_, arg1: Internal.Direction$Axis_): Internal.Direction;
        func_176745_a(): number;
        func_176743_c(): Internal.Direction$AxisDirection;
        static func_211699_a(arg0: Internal.Direction$Axis_, arg1: Internal.Direction$AxisDirection_): Internal.Direction;
        getPitch(): number;
        func_229384_a_(): Internal.Quaternion;
        func_176610_l(): string;
        func_229386_k_(): Internal.Vector3f;
        func_243532_a(arg0: number): boolean;
        static readonly DOWN: Internal.Direction;
        static readonly field_176754_o: Internal.Direction[];
        static readonly NORTH: Internal.Direction;
        static readonly WEST: Internal.Direction;
        static readonly UP: Internal.Direction;
        static readonly SOUTH: Internal.Direction;
        static readonly field_82609_l: Internal.Direction[];
        static readonly EAST: Internal.Direction;
        get pitch(): number;
    }
    type Direction_ = "down" | "up" | "north" | "south" | "west" | "east" | Direction;
    abstract class FoliagePlacer extends Document.Object {
        func_230374_a_(arg0: Internal.Random, arg1: number, arg2: Internal.BaseTreeFeatureConfig): number;
        func_230376_a_(arg0: Internal.Random, arg1: number): number;
        func_236752_a_(arg0: Internal.IWorldGenerationReader, arg1: Internal.Random, arg2: Internal.BaseTreeFeatureConfig, arg3: number, arg4: Internal.FoliagePlacer$Foliage, arg5: number, arg6: number, arg7: Internal.Set<BlockPos>, arg8: Internal.MutableBoundingBox): void;
        static readonly field_236749_d_: Internal.Codec<Internal.FoliagePlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FeatureSpread, arg1: Internal.FeatureSpread);
    }
    type FoliagePlacer_ = FoliagePlacer;
    interface ChannelInboundHandler extends Internal.ChannelHandler {
        channelInactive(arg0: Internal.ChannelHandlerContext): void;
        channelUnregistered(arg0: Internal.ChannelHandlerContext): void;
        channelReadComplete(arg0: Internal.ChannelHandlerContext): void;
        channelActive(arg0: Internal.ChannelHandlerContext): void;
        exceptionCaught(arg0: Internal.ChannelHandlerContext, arg1: Internal.Throwable): void;
        userEventTriggered(arg0: Internal.ChannelHandlerContext, arg1: any): void;
        channelRegistered(arg0: Internal.ChannelHandlerContext): void;
        channelWritabilityChanged(arg0: Internal.ChannelHandlerContext): void;
        channelRead(arg0: Internal.ChannelHandlerContext, arg1: any): void;
    }
    type ChannelInboundHandler_ = ChannelInboundHandler;
    interface IEmptyStackProvider <CHEMICAL, STACK> {
        getEmptyStack(): STACK;
        (): STACK;
    }
    type IEmptyStackProvider_<CHEMICAL, STACK> = (()=>STACK) | IEmptyStackProvider<CHEMICAL, STACK>;
    class ChunkDataBuiltEvent extends Internal.EmbeddiumEvent {
        getDataBuilder(): Internal.ChunkRenderData$Builder;
        static readonly BUS: Internal.EventHandlerRegistrar<Internal.ChunkDataBuiltEvent>;
        get dataBuilder(): Internal.ChunkRenderData$Builder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(dataBuilder: Internal.ChunkRenderData$Builder);
        constructor();
    }
    type ChunkDataBuiltEvent_ = ChunkDataBuiltEvent;
    abstract class Permission extends Document.Object implements Internal.Guard, Internal.Serializable {
        getName(): string;
        checkGuard(arg0: any): void;
        newPermissionCollection(): Internal.PermissionCollection;
        getActions(): string;
        implies(arg0: Internal.Permission): boolean;
        get name(): string;
        get actions(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type Permission_ = Permission;
    abstract class Number extends Document.Object implements Internal.Serializable {
        intValue(): number;
        floatValue(): number;
        shortValue(): number;
        doubleValue(): number;
        longValue(): number;
        byteValue(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Number_ = Number;
    class MouseWheelEvent extends Internal.MouseEvent {
        getPreciseWheelRotation(): number;
        getScrollType(): number;
        getWheelRotation(): number;
        getUnitsToScroll(): number;
        getScrollAmount(): number;
        static readonly WHEEL_BLOCK_SCROLL: 1;
        static readonly WHEEL_UNIT_SCROLL: 0;
        get wheelRotation(): number;
        get preciseWheelRotation(): number;
        get scrollType(): number;
        get scrollAmount(): number;
        get unitsToScroll(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: boolean, arg10: number, arg11: number, arg12: number, arg13: number);
        constructor(arg0: Internal.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: boolean, arg10: number, arg11: number, arg12: number);
        constructor(arg0: Internal.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: number, arg9: number, arg10: number);
    }
    type MouseWheelEvent_ = MouseWheelEvent;
    class BlockModelRenderer extends Document.Object {
        func_228806_c_(arg0: Internal.IBlockDisplayReader, arg1: Internal.IBakedModel, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.MatrixStack, arg5: Internal.IVertexBuilder, arg6: boolean, arg7: Internal.Random, arg8: number, arg9: number): boolean;
        func_228798_a_(arg0: Internal.IBlockDisplayReader, arg1: Internal.BlockState, arg2: BlockPos, arg3: number, arg4: number, arg5: boolean, arg6: Internal.MatrixStack, arg7: Internal.IVertexBuilder, arg8: Internal.List<Internal.BakedQuad>, arg9: Internal.BitSet): void;
        renderModelSmooth(arg0: Internal.IBlockDisplayReader, arg1: Internal.IBakedModel, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.MatrixStack, arg5: Internal.IVertexBuilder, arg6: boolean, arg7: Internal.Random, arg8: number, arg9: number, arg10: Internal.IModelData): boolean;
        renderModelFlat(arg0: Internal.IBlockDisplayReader, arg1: Internal.IBakedModel, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.MatrixStack, arg5: Internal.IVertexBuilder, arg6: boolean, arg7: Internal.Random, arg8: number, arg9: number, arg10: Internal.IModelData): boolean;
        func_228805_b_(arg0: Internal.IBlockDisplayReader, arg1: Internal.IBakedModel, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.MatrixStack, arg5: Internal.IVertexBuilder, arg6: boolean, arg7: Internal.Random, arg8: number, arg9: number): boolean;
        func_228804_a_(arg0: Internal.MatrixStack$Entry, arg1: Internal.IVertexBuilder, arg2: Internal.BlockState, arg3: Internal.IBakedModel, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): void;
        func_228802_a_(arg0: Internal.IBlockDisplayReader, arg1: Internal.IBakedModel, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.MatrixStack, arg5: Internal.IVertexBuilder, arg6: boolean, arg7: Internal.Random, arg8: number, arg9: number): boolean;
        func_228801_a_(arg0: Internal.IBlockDisplayReader, arg1: Internal.BlockState, arg2: BlockPos, arg3: number[], arg4: Internal.Direction_, arg5: number[], arg6: Internal.BitSet): void;
        static func_210266_a(): void;
        static func_211847_a(): void;
        renderModel(entry: Internal.MatrixStack$Entry, vertexConsumer: Internal.IVertexBuilder, blockState: Internal.BlockState, bakedModel: Internal.IBakedModel, red: number, green: number, blue: number, light: number, overlay: number, modelData: Internal.IModelData): void;
        renderModel(arg0: Internal.IBlockDisplayReader, arg1: Internal.IBakedModel, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.MatrixStack, arg5: Internal.IVertexBuilder, arg6: boolean, arg7: Internal.Random, arg8: number, arg9: number, arg10: Internal.IModelData): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockColors);
    }
    type BlockModelRenderer_ = BlockModelRenderer;
    class AdvancementRewards$Builder extends Document.Object {
        static func_203907_a(arg0: number): Internal.AdvancementRewards$Builder;
        func_203906_b(arg0: number): Internal.AdvancementRewards$Builder;
        static func_200280_c(arg0: ResourceLocation_): Internal.AdvancementRewards$Builder;
        func_200281_a(): Internal.AdvancementRewards;
        func_200279_d(arg0: ResourceLocation_): Internal.AdvancementRewards$Builder;
        readonly field_200284_c: Internal.List<ResourceLocation>;
        field_200285_d: ResourceLocation;
        readonly field_200283_b: Internal.List<ResourceLocation>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AdvancementRewards$Builder_ = AdvancementRewards$Builder;
    interface RecipeManagerKJS {
        customRecipesKJS(jsonMap: Internal.Map_<ResourceLocation_, Internal.JsonObject_>): void;
        setRecipesKJS(arg0: Internal.Map_<Internal.IRecipeType_<any>, Internal.Map_<ResourceLocation_, Internal.IRecipe_<any>>>): void;
        getRecipesKJS(): Internal.Map<Internal.IRecipeType<any>, Internal.Map<ResourceLocation, Internal.IRecipe<any>>>;
    }
    type RecipeManagerKJS_ = RecipeManagerKJS;
    class PigEntity extends Internal.AnimalEntity implements Internal.IRideable, Internal.IEquipable, Internal.PigEntityAccessor {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_230265_N__(): number;
        func_233622_a_(arg0: Internal.MobEntity, arg1: Internal.BoostHelper, arg2: Vec3): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_230264_L__(): boolean;
        func_230267_a__(arg0: Vec3): void;
        func_230266_a_(arg0: Internal.SoundCategory_): void;
        static func_234215_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.PigEntity;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_184762_da(): boolean;
        static setFoodItems_$md$e571c7$0(arg0: Internal.Ingredient): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        static getFoodItems_$md$e571c7$1(): Internal.Ingredient;
        func_110257_ck(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        get foodItems_$md$e571c7$1(): Internal.Ingredient;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        set foodItems_$md$e571c7$0(arg0: Internal.Ingredient);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.PigEntity>, arg1: Internal.World);
    }
    type PigEntity_ = PigEntity;
    class BlockItemBuilder extends Internal.ItemBuilder {
        blockBuilder: Internal.BlockBuilder;
        blockItem: Internal.BlockItem;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(i: string);
    }
    type BlockItemBuilder_ = BlockItemBuilder;
    abstract class DyingShoulderRidingEntity extends Internal.ShoulderRidingEntity implements Internal.IDying {
        shouldRiderSit(): boolean;
        isDying(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        dyingInteract(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        formatLoc(arg0: Vec3): string;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get dying(): boolean;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type DyingShoulderRidingEntity_ = DyingShoulderRidingEntity;
    abstract class AbstractLong2ObjectFunction <V> extends Document.Object implements Internal.Long2ObjectFunction<V>, Internal.Serializable {
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        size(): number;
        compose<V_>(arg0: Internal.Function_<V_, number>): Internal.Function<V_, V>;
        apply(arg0: number): V;
        apply(arg0: number): V;
        containsKey(arg0: any): boolean;
        containsKey(arg0: number): boolean;
        get(arg0: any): V;
        get(arg0: number): V;
        clear(): void;
        andThen<V_>(arg0: Internal.Function_<V, V_>): Internal.Function<number, V_>;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        put(arg0: number, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: number): V;
    }
    type AbstractLong2ObjectFunction_<V> = AbstractLong2ObjectFunction<V>;
    class Anchor extends Document.Object {
        deleteAnchor(): void;
        getName(): string;
        addSound(arg0: ResourceLocation_, arg1: number): void;
        getAnchorPos(): BlockPos;
        getMuffledSounds(): Internal.SortedMap<ResourceLocation, number>;
        setMuffledSounds(arg0: Internal.SortedMap<ResourceLocation, number>): void;
        replaceSound(arg0: ResourceLocation_, arg1: number): void;
        getRadius(): number;
        setRadius(arg0: number): void;
        getAnchorId(): number;
        static getAnchor(arg0: Internal.ISound): Internal.Anchor;
        getX(): string;
        getY(): string;
        getZ(): string;
        editAnchor(arg0: string, arg1: number): void;
        setAnchor(): void;
        getDimension(): ResourceLocation;
        removeSound(arg0: ResourceLocation_): void;
        get muffledSounds(): Internal.SortedMap<ResourceLocation, number>;
        get name(): string;
        get x(): string;
        get y(): string;
        get z(): string;
        get radius(): number;
        get anchorId(): number;
        get dimension(): ResourceLocation;
        get anchorPos(): BlockPos;
        set muffledSounds(arg0: Internal.SortedMap<ResourceLocation, number>);
        set radius(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: string);
        constructor(arg0: number, arg1: string, arg2: BlockPos, arg3: ResourceLocation, arg4: number, arg5: Internal.SortedMap<string, number>);
    }
    type Anchor_ = Anchor;
    class Couple <T> extends com.simibubi.create.foundation.utility.Pair<T, T> implements Internal.Iterable<T> {
        serializeEach(arg0: Internal.Function_<T, Internal.CompoundNBT_>): Internal.ListNBT;
        set(arg0: boolean, arg1: T): void;
        forEachWithParams<S_>(arg0: Internal.BiConsumer_<T, S_>, arg1: Internal.Couple<S_>): void;
        spliterator(): Internal.Spliterator<T>;
        swap(): Internal.Couple<T>;
        swap(): com.simibubi.create.foundation.utility.Pair<any, any>;
        mapWithParams<S_, R_>(arg0: Internal.BiFunction_<T, R_, S_>, arg1: Internal.Couple<R_>): Internal.Couple<S_>;
        forEach(arg0: Internal.Consumer_<T>): void;
        replace(arg0: Internal.Function_<T, T>): void;
        iterator(): Internal.Iterator<T>;
        stream(): Internal.Stream<T>;
        get(arg0: boolean): T;
        replaceWithContext(arg0: Internal.BiFunction_<T, boolean, T>): void;
        static deserializeEach<S_>(arg0: Internal.ListNBT, arg1: Internal.Function_<Internal.CompoundNBT_, S_>): Internal.Couple<S_>;
        static create<T_>(arg0: com.google.common.base.Supplier_<T_>): Internal.Couple<T_>;
        static create<T_>(arg0: T_, arg1: T_): Internal.Couple<T_>;
        forEachWithContext(arg0: Internal.BiConsumer_<T, boolean>): void;
        replaceWithParams<S_>(arg0: Internal.BiFunction_<T, S_, T>, arg1: Internal.Couple<S_>): void;
        copy(): com.simibubi.create.foundation.utility.Pair<any, any>;
        copy(): Internal.Couple<T>;
        mapWithContext<S_>(arg0: Internal.BiFunction_<T, boolean, S_>): Internal.Couple<S_>;
        map<S_>(arg0: Internal.Function_<T, S_>): Internal.Couple<S_>;
    }
    type Couple_<T> = Couple<T>;
    class ServerStatusResponse$Players extends Document.Object {
        func_151333_b(): number;
        func_151330_a(arg0: Internal.GameProfile[]): void;
        func_151331_c(): Internal.GameProfile[];
        func_151332_a(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
    }
    type ServerStatusResponse$Players_ = ServerStatusResponse$Players;
    class BlazeEntity extends Internal.MonsterEntity {
        shouldRiderSit(): boolean;
        static func_234276_m_(): Internal.AttributeModifierMap$MutableAttribute;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.BlazeEntity>, arg1: Internal.World);
    }
    type BlazeEntity_ = BlazeEntity;
    class Brain$BrainCodec <E> extends Document.Object {
        func_233748_a_(arg0: Internal.Dynamic<any>): Internal.Brain<E>;
    }
    type Brain$BrainCodec_<E> = Brain$BrainCodec<E>;
    class AttributeEvent$PostProcessVanilla extends net.minecraftforge.eventbus.api.Event {
        getValue(): number;
        getOriginalValue(): number;
        getAttribute(): net.minecraft.entity.ai.attributes.Attribute;
        setValue(arg0: number): void;
        getInstance(): Internal.ModifiableAttributeInstance;
        resolveAttributeType(): Internal.PerkAttributeType;
        get instance(): Internal.ModifiableAttributeInstance;
        get originalValue(): number;
        get attribute(): net.minecraft.entity.ai.attributes.Attribute;
        get value(): number;
        set value(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ModifiableAttributeInstance, arg1: number);
    }
    type AttributeEvent$PostProcessVanilla_ = AttributeEvent$PostProcessVanilla;
    class Snooper extends Document.Object {
        func_76471_b(): void;
        func_76468_d(): boolean;
        func_130105_g(): number;
        func_152768_a(arg0: string, arg1: any): void;
        func_152767_b(arg0: string, arg1: any): void;
        func_80006_f(): string;
        func_76463_a(): void;
        func_76470_e(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.ISnooperInfo, arg2: number);
    }
    type Snooper_ = Snooper;
    class ConfiguredFeature <FC, F> extends Document.Object implements Internal.IDecoratable<Internal.ConfiguredFeature<any, any>> {
        func_242767_c(): FC;
        func_242733_d(arg0: number): Internal.ConfiguredFeature<any, any>;
        func_227227_a_(arg0: number): Internal.ConfiguredRandomFeatureList;
        func_242766_b(): F;
        func_242732_c(arg0: number): Internal.ConfiguredFeature<any, any>;
        func_242765_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos): boolean;
        func_242731_b(arg0: number): Internal.ConfiguredFeature<any, any>;
        func_227228_a_(arg0: Internal.ConfiguredPlacement<any>): any;
        func_227228_a_(arg0: Internal.ConfiguredPlacement<any>): Internal.ConfiguredFeature<any, any>;
        func_242730_a(arg0: Internal.FeatureSpread): Internal.ConfiguredFeature<any, any>;
        func_242729_a(arg0: number): Internal.ConfiguredFeature<any, any>;
        func_242768_d(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        func_242728_a(): Internal.ConfiguredFeature<any, any>;
        static readonly field_236264_b_: Internal.Codec<java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>>;
        static readonly field_227226_a_: Internal.Logger;
        readonly field_222738_b: FC;
        readonly field_222737_a: F;
        static readonly field_242764_c: Internal.Codec<Internal.List<java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>>>;
        static readonly field_242763_a: Internal.Codec<Internal.ConfiguredFeature<any, any>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: F, arg1: FC);
    }
    type ConfiguredFeature_<FC, F> = ConfiguredFeature<FC, F>;
    interface IForgeStructure {
        getDefaultSpawnList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        getDefaultRestrictsSpawnsToInside(): boolean;
        getStructure(): net.minecraft.world.gen.feature.structure.Structure<any>;
        getSpawnList(arg0: Internal.EntityClassification_): Internal.List<Internal.MobSpawnInfo$Spawners>;
        getDefaultCreatureSpawnList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        (arg0: Internal.EntityClassification): Internal.List<Internal.MobSpawnInfo$Spawners>;
    }
    type IForgeStructure_ = ((arg0: Internal.EntityClassification)=>Internal.List<Internal.MobSpawnInfo$Spawners>) | IForgeStructure;
    interface ObjDoubleConsumer <T> {
        accept(arg0: T, arg1: number): void;
        (arg0: T, arg1: number): void;
    }
    type ObjDoubleConsumer_<T> = ((arg0: T, arg1: number)=>void) | ObjDoubleConsumer<T>;
    class RecursivePoint$RecursivePointType <A> extends com.mojang.datafixers.types.Type<A> {
        all(arg0: Internal.TypeRewriteRule_, arg1: boolean, arg2: boolean): Internal.RewriteResult<A, any>;
        findTypeInChildren<FT_, FR_>(arg0: com.mojang.datafixers.types.Type<FT_>, arg1: com.mojang.datafixers.types.Type<FR_>, arg2: Internal.Type$TypeMatcher_<FT_, FR_>, arg3: boolean): Internal.Either<Internal.TypedOptic<A, any, FT_, FR_>, Internal.Type$FieldNotFoundException>;
        in(): Internal.View<A, A>;
        everywhere(arg0: Internal.TypeRewriteRule_, arg1: Internal.PointFreeRule_, arg2: boolean, arg3: boolean): Internal.Optional<Internal.RewriteResult<A, any>>;
        one(arg0: Internal.TypeRewriteRule_): Internal.Optional<Internal.RewriteResult<A, any>>;
        index(): number;
        family(): Internal.RecursiveTypeFamily;
        point(arg0: Internal.DynamicOps<any>): Internal.Optional<A>;
        unfold(): com.mojang.datafixers.types.Type<A>;
        out(): Internal.View<A, A>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.RecursiveTypeFamily, arg1: number, arg2: java_.util.function_.Supplier<com.mojang.datafixers.types.Type<A>>);
    }
    type RecursivePoint$RecursivePointType_<A> = RecursivePoint$RecursivePointType<A>;
    abstract class CharBuffer extends Internal.Buffer implements Internal.Comparable<Internal.CharBuffer>, Internal.Appendable, Internal.CharSequence, Internal.Readable {
        compact(): Internal.CharBuffer;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.CharBuffer): number;
        asReadOnlyBuffer(): Internal.CharBuffer;
        put(arg0: number, arg1: string): Internal.CharBuffer;
        put(arg0: string[], arg1: number, arg2: number): Internal.CharBuffer;
        put(arg0: number, arg1: string[], arg2: number, arg3: number): Internal.CharBuffer;
        put(arg0: string[]): Internal.CharBuffer;
        put(arg0: Internal.CharBuffer): Internal.CharBuffer;
        put(arg0: number, arg1: Internal.CharBuffer, arg2: number, arg3: number): Internal.CharBuffer;
        put(arg0: number, arg1: string[]): Internal.CharBuffer;
        put(arg0: string): Internal.CharBuffer;
        put(arg0: string, arg1: number, arg2: number): Internal.CharBuffer;
        put(arg0: string): Internal.CharBuffer;
        slice(arg0: number, arg1: number): Internal.CharBuffer;
        slice(): Internal.CharBuffer;
        array(): string[];
        get(arg0: string[], arg1: number, arg2: number): Internal.CharBuffer;
        get(arg0: number): string;
        get(): string;
        get(arg0: string[]): Internal.CharBuffer;
        get(arg0: number, arg1: string[], arg2: number, arg3: number): Internal.CharBuffer;
        get(arg0: number, arg1: string[]): Internal.CharBuffer;
        limit(arg0: number): Internal.CharBuffer;
        flip(): Internal.CharBuffer;
        codePoints(): Internal.IntStream;
        order(): Internal.ByteOrder;
        read(arg0: Internal.CharBuffer): number;
        isEmpty(): boolean;
        clear(): Internal.CharBuffer;
        length(): number;
        duplicate(): Internal.CharBuffer;
        subSequence(arg0: number, arg1: number): Internal.CharSequence;
        subSequence(arg0: number, arg1: number): Internal.CharBuffer;
        static allocate(arg0: number): Internal.CharBuffer;
        rewind(): Internal.CharBuffer;
        mismatch(arg0: Internal.CharBuffer): number;
        reset(): Internal.CharBuffer;
        position(arg0: number): Internal.CharBuffer;
        static wrap(arg0: string[], arg1: number, arg2: number): Internal.CharBuffer;
        static wrap(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.CharBuffer;
        static wrap(arg0: Internal.CharSequence): Internal.CharBuffer;
        static wrap(arg0: string[]): Internal.CharBuffer;
        mark(): Internal.CharBuffer;
        chars(): Internal.IntStream;
        charAt(arg0: number): string;
        append(arg0: string): Internal.CharBuffer;
        append(arg0: string): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.CharBuffer;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.CharBuffer;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        get empty(): boolean;
    }
    type CharBuffer_ = CharBuffer;
    class MerchantOffers extends Internal.ArrayList<Internal.MerchantOffer> {
        stream(): Internal.Stream<Internal.MerchantOffer>;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<Internal.MerchantOffer>;
        func_222199_a(): Internal.CompoundNBT;
        static func_222198_b(arg0: Internal.PacketBuffer): Internal.MerchantOffers;
        func_222197_a(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: number): Internal.MerchantOffer;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<Internal.MerchantOffer>;
        func_222196_a(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.CompoundNBT);
    }
    type MerchantOffers_ = MerchantOffers;
    interface RunningGame {
        getVersion(): Internal.GameVersion;
        getSelectedLanguage(): Internal.Language;
        setSessionEventListener(arg0: Internal.SessionEventListener): void;
        getCurrentSession(): Internal.GameSession;
        getPerformanceMetrics(): Internal.PerformanceMetrics;
    }
    type RunningGame_ = RunningGame;
    class CustomServerBossInfoManager extends Document.Object {
        func_201381_a(arg0: Internal.CompoundNBT_): void;
        func_201380_c(): Internal.CompoundNBT;
        func_201385_a(arg0: Internal.CustomServerBossInfo): void;
        func_201383_a(arg0: Internal.ServerPlayerEntity): void;
        func_201382_b(arg0: Internal.ServerPlayerEntity): void;
        func_201384_a(arg0: ResourceLocation_): Internal.CustomServerBossInfo;
        func_201377_a(): Internal.Collection<ResourceLocation>;
        func_201379_a(arg0: ResourceLocation_, arg1: Internal.ITextComponent_): Internal.CustomServerBossInfo;
        func_201378_b(): Internal.Collection<Internal.CustomServerBossInfo>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CustomServerBossInfoManager_ = CustomServerBossInfoManager;
    class OptionalDynamic <T> extends Internal.DynamicLike<T> {
        flatMap<U_>(arg0: Internal.Function_<Internal.Dynamic_<T>, Internal.DataResult_<U_>>): Internal.DataResult<U_>;
        result(): Internal.Optional<Internal.Dynamic<T>>;
        into<V_>(arg0: Internal.Function_<Internal.Dynamic_<T>, V_>): Internal.DataResult<V_>;
        getElementGeneric(arg0: T): Internal.DataResult<T>;
        orElseEmptyMap(): Internal.Dynamic<T>;
        orElseEmptyList(): Internal.Dynamic<T>;
        asStreamOpt(): Internal.DataResult<Internal.Stream<Internal.Dynamic<T>>>;
        getElement(arg0: string): Internal.DataResult<T>;
        asMapOpt(): Internal.DataResult<Internal.Stream<Internal.Pair<Internal.Dynamic<T>, Internal.Dynamic<T>>>>;
        getGeneric(arg0: T): Internal.DataResult<T>;
        get(arg0: string): Internal.OptionalDynamic<T>;
        get(): Internal.DataResult<Internal.Dynamic<T>>;
        decode<A_>(arg0: Internal.Decoder_<A_>): Internal.DataResult<Internal.Pair<A_, T>>;
        map<U_>(arg0: Internal.Function_<Internal.Dynamic_<T>, U_>): Internal.DataResult<U_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DynamicOps<T>, arg1: Internal.DataResult<Internal.Dynamic<T>>);
    }
    type OptionalDynamic_<T> = OptionalDynamic<T>;
    interface GatheringByteChannel extends Internal.WritableByteChannel {
        write(arg0: Internal.ByteBuffer[], arg1: number, arg2: number): number;
        write(arg0: Internal.ByteBuffer[]): number;
    }
    type GatheringByteChannel_ = GatheringByteChannel;
    class CustomMachineJSUpgradeBuilder extends Document.Object {
        build(): Internal.MachineUpgrade;
        mulOutput(arg0: string, arg1: number, arg2: string, arg3: number): Internal.CustomMachineJSUpgradeBuilder;
        mulOutput(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSUpgradeBuilder;
        mulOutput(arg0: string, arg1: number): Internal.CustomMachineJSUpgradeBuilder;
        machine(arg0: string): Internal.CustomMachineJSUpgradeBuilder;
        addInput(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSUpgradeBuilder;
        addInput(arg0: string, arg1: number): Internal.CustomMachineJSUpgradeBuilder;
        addInput(arg0: string, arg1: number, arg2: string, arg3: number): Internal.CustomMachineJSUpgradeBuilder;
        modifier(arg0: Internal.RequirementIOMode_, arg1: Internal.RecipeModifier$OPERATION_, arg2: string, arg3: number, arg4: string, arg5: number): Internal.CustomMachineJSUpgradeBuilder;
        tooltip(arg0: string): Internal.CustomMachineJSUpgradeBuilder;
        mulInput(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSUpgradeBuilder;
        mulInput(arg0: string, arg1: number, arg2: string, arg3: number): Internal.CustomMachineJSUpgradeBuilder;
        mulInput(arg0: string, arg1: number): Internal.CustomMachineJSUpgradeBuilder;
        addOutput(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSUpgradeBuilder;
        addOutput(arg0: string, arg1: number, arg2: string, arg3: number): Internal.CustomMachineJSUpgradeBuilder;
        addOutput(arg0: string, arg1: number): Internal.CustomMachineJSUpgradeBuilder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Item, arg1: number);
    }
    type CustomMachineJSUpgradeBuilder_ = CustomMachineJSUpgradeBuilder;
    class EvokerEntity extends Internal.SpellcastingIllagerEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        static func_234289_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.EvokerEntity>, arg1: Internal.World);
    }
    type EvokerEntity_ = EvokerEntity;
    class PlayerEvent$SaveToFile extends Internal.PlayerEvent {
        getPlayerFile(arg0: string): Internal.File;
        getPlayerDirectory(): Internal.File;
        getPlayerUUID(): string;
        get playerUUID(): string;
        get playerDirectory(): Internal.File;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.File, arg2: string);
    }
    type PlayerEvent$SaveToFile_ = PlayerEvent$SaveToFile;
    interface IBiomeMagnifier {
        func_225532_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.BiomeManager$IBiomeReader_): Internal.Biome;
        (arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.BiomeManager$IBiomeReader): Internal.Biome;
    }
    type IBiomeMagnifier_ = ((arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.BiomeManager$IBiomeReader)=>Internal.Biome) | IBiomeMagnifier;
    interface IForgeEntityMinecart {
        canBeRidden(): boolean;
        setCurrentCartSpeedCapOnRail(arg0: number): void;
        getMaxSpeedAirVertical(): number;
        getMaxSpeedWithRail(): number;
        setMaxSpeedAirLateral(arg0: number): void;
        setDragAir(arg0: number): void;
        getMaxSpeedAirLateral(): number;
        getCollisionHandler(): Internal.IMinecartCollisionHandler;
        setCanUseRail(arg0: boolean): void;
        getDragAir(): number;
        getComparatorLevel(): number;
        getCurrentRailPosition(): BlockPos;
        shouldDoRailFunctions(): boolean;
        getCartItem(): Internal.ItemStack;
        moveMinecartOnRail(arg0: BlockPos): void;
        getMinecart(): Internal.AbstractMinecartEntity;
        getSlopeAdjustment(): number;
        canUseRail(): boolean;
        setMaxSpeedAirVertical(arg0: number): void;
        isPoweredCart(): boolean;
        getCurrentCartSpeedCapOnRail(): number;
        getMaxCartSpeedOnRail(): number;
    }
    type IForgeEntityMinecart_ = IForgeEntityMinecart;
    interface ITickable {
        func_110550_d(): void;
        (): void;
    }
    type ITickable_ = (()=>void) | ITickable;
    class BigInteger extends Internal.Number implements Internal.Comparable<Internal.BigInteger> {
        bitLength(): number;
        getLowestSetBit(): number;
        longValueExact(): number;
        mod(arg0: Internal.BigInteger): Internal.BigInteger;
        byteValueExact(): number;
        gcd(arg0: Internal.BigInteger): Internal.BigInteger;
        setBit(arg0: number): Internal.BigInteger;
        compareTo(arg0: Internal.BigInteger): number;
        compareTo(arg0: any): number;
        shortValueExact(): number;
        sqrtAndRemainder(): Internal.BigInteger[];
        not(): Internal.BigInteger;
        shiftLeft(arg0: number): Internal.BigInteger;
        min(arg0: Internal.BigInteger): Internal.BigInteger;
        sqrt(): Internal.BigInteger;
        and(arg0: Internal.BigInteger): Internal.BigInteger;
        pow(arg0: number): Internal.BigInteger;
        clearBit(arg0: number): Internal.BigInteger;
        xor(arg0: Internal.BigInteger): Internal.BigInteger;
        divide(arg0: Internal.BigInteger): Internal.BigInteger;
        multiply(arg0: Internal.BigInteger): Internal.BigInteger;
        add(arg0: Internal.BigInteger): Internal.BigInteger;
        signum(): number;
        flipBit(arg0: number): Internal.BigInteger;
        or(arg0: Internal.BigInteger): Internal.BigInteger;
        max(arg0: Internal.BigInteger): Internal.BigInteger;
        static valueOf(arg0: number): Internal.BigInteger;
        subtract(arg0: Internal.BigInteger): Internal.BigInteger;
        isProbablePrime(arg0: number): boolean;
        nextProbablePrime(): Internal.BigInteger;
        testBit(arg0: number): boolean;
        shiftRight(arg0: number): Internal.BigInteger;
        abs(): Internal.BigInteger;
        divideAndRemainder(arg0: Internal.BigInteger): Internal.BigInteger[];
        negate(): Internal.BigInteger;
        toByteArray(): number[];
        toString(arg0: number): string;
        bitCount(): number;
        parallelMultiply(arg0: Internal.BigInteger): Internal.BigInteger;
        static probablePrime(arg0: number, arg1: Internal.Random): Internal.BigInteger;
        modPow(arg0: Internal.BigInteger, arg1: Internal.BigInteger): Internal.BigInteger;
        remainder(arg0: Internal.BigInteger): Internal.BigInteger;
        intValueExact(): number;
        andNot(arg0: Internal.BigInteger): Internal.BigInteger;
        modInverse(arg0: Internal.BigInteger): Internal.BigInteger;
        static readonly ZERO: Internal.BigInteger;
        static readonly ONE: Internal.BigInteger;
        static readonly TEN: Internal.BigInteger;
        static readonly TWO: Internal.BigInteger;
        get lowestSetBit(): number;
        set bit(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.Random);
        constructor(arg0: string);
        constructor(arg0: number, arg1: number, arg2: Internal.Random);
        constructor(arg0: number, arg1: number[], arg2: number, arg3: number);
        constructor(arg0: number[]);
        constructor(arg0: number[], arg1: number, arg2: number);
        constructor(arg0: string, arg1: number);
        constructor(arg0: number, arg1: number[]);
    }
    type BigInteger_ = BigInteger;
    abstract class RenderLivingEvent <T, M> extends net.minecraftforge.eventbus.api.Event {
        getLight(): number;
        getRenderer(): Internal.LivingRenderer<T, M>;
        getPartialRenderTick(): number;
        getBuffers(): Internal.IRenderTypeBuffer;
        getEntity(): Internal.LivingEntity;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get renderer(): Internal.LivingRenderer<T, M>;
        get light(): number;
        get partialRenderTick(): number;
        get buffers(): Internal.IRenderTypeBuffer;
        get entity(): Internal.LivingEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LivingEntity, arg1: Internal.LivingRenderer<T, M>, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer, arg5: number);
        constructor();
    }
    type RenderLivingEvent_<T, M> = RenderLivingEvent<T, M>;
    class BlockItemUseContext extends Internal.ItemUseContext {
        func_196012_c(): boolean;
        func_196010_d(): Internal.Direction;
        func_196011_b(): boolean;
        static func_221536_a(arg0: Internal.BlockItemUseContext, arg1: BlockPos, arg2: Internal.Direction_): Internal.BlockItemUseContext;
        func_196009_e(): Internal.Direction[];
        field_196013_a: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: Hand, arg3: Internal.ItemStack, arg4: Internal.BlockRayTraceResult);
        constructor(arg0: Internal.ItemUseContext);
        constructor(arg0: Internal.PlayerEntity, arg1: Hand, arg2: Internal.ItemStack, arg3: Internal.BlockRayTraceResult);
    }
    type BlockItemUseContext_ = BlockItemUseContext;
    class Pattern extends Document.Object implements Internal.Serializable {
        static quote(arg0: string): string;
        split(arg0: Internal.CharSequence, arg1: number): string[];
        split(arg0: Internal.CharSequence): string[];
        splitWithDelimiters(arg0: Internal.CharSequence, arg1: number): string[];
        static compile(arg0: string): Internal.Pattern;
        static compile(arg0: string, arg1: number): Internal.Pattern;
        splitAsStream(arg0: Internal.CharSequence): Internal.Stream<string>;
        pattern(): string;
        flags(): number;
        namedGroups(): Internal.Map<string, number>;
        asMatchPredicate(): Internal.Predicate<string>;
        asPredicate(): Internal.Predicate<string>;
        matcher(arg0: Internal.CharSequence): Internal.Matcher;
        static matches(arg0: string, arg1: Internal.CharSequence): boolean;
        static readonly DOTALL: 32;
        static readonly UNICODE_CASE: 64;
        static readonly LITERAL: 16;
        static readonly UNICODE_CHARACTER_CLASS: 256;
        static readonly CASE_INSENSITIVE: 2;
        static readonly CANON_EQ: 128;
        static readonly COMMENTS: 4;
        static readonly UNIX_LINES: 1;
        static readonly MULTILINE: 8;
    }
    type Pattern_ = Pattern;
    interface IToolPart extends Internal.IMaterialItem {
        getStatType(): Internal.MaterialStatsId;
        canUseMaterial(arg0: Internal.IMaterial): boolean;
        (): Internal.MaterialStatsId;
    }
    type IToolPart_ = (()=>Internal.MaterialStatsId) | IToolPart;
    class StructureProcessorList extends Document.Object {
        func_242919_a(): Internal.List<Internal.StructureProcessor>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.List<Internal.StructureProcessor>);
    }
    type StructureProcessorList_ = StructureProcessorList;
    class EndGatewayTileEntity extends Internal.EndPortalTileEntity implements Internal.ITickableTileEntity {
        requestModelDataUpdate(): void;
        static func_242690_a(arg0: Internal.Entity): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_195491_b(arg0: number): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_73660_a(): void;
        func_195500_d(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        func_195497_a(arg0: number): number;
        func_195496_a(arg0: Internal.Entity): void;
        func_195490_f(): void;
        func_195489_b(arg0: BlockPos, arg1: boolean): void;
        func_195499_c(): boolean;
        func_195493_h(): number;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EndGatewayTileEntity_ = EndGatewayTileEntity;
    class GenericEvent <T> extends net.minecraftforge.eventbus.api.Event implements Internal.IGenericEvent<T> {
        getGenericType(): Internal.Type;
        get genericType(): Internal.Type;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type GenericEvent_<T> = GenericEvent<T>;
    interface IStructurePieceType {
        load(arg0: Internal.TemplateManager, arg1: Internal.CompoundNBT_): Internal.StructurePiece;
        (arg0: Internal.TemplateManager, arg1: Internal.CompoundNBT): Internal.StructurePiece;
    }
    type IStructurePieceType_ = ((arg0: Internal.TemplateManager, arg1: Internal.CompoundNBT)=>Internal.StructurePiece) | IStructurePieceType;
    class ShapedRecipe extends Document.Object implements Internal.ICraftingRecipe, Internal.IShapedRecipe<Internal.CraftingInventory> {
        func_77573_a(arg0: Internal.CraftingInventory, arg1: number, arg2: number, arg3: boolean): boolean;
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_222127_g(): Internal.IRecipeType<any>;
        func_199560_c(): ResourceLocation;
        func_192399_d(): boolean;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_192404_g(): number;
        getRecipeWidth(): number;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        func_77571_b(): Internal.ItemStack;
        static func_192402_a(arg0: string[], arg1: Internal.Map_<string, Internal.Ingredient_>, arg2: number, arg3: number): Internal.NonNullList<Internal.Ingredient>;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        static func_192407_a(arg0: Internal.JsonArray): string[];
        static func_192408_a(arg0: Internal.JsonObject): Internal.Map<string, Internal.Ingredient>;
        func_192403_f(): number;
        static setCraftingSize(arg0: number, arg1: number): void;
        static func_194134_a(...arg0: string[]): string[];
        static func_199798_a(arg0: Internal.JsonObject): Internal.ItemStack;
        func_194133_a(arg0: number, arg1: number): boolean;
        getRecipeHeight(): number;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        get recipeHeight(): number;
        get recipeWidth(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: string, arg2: number, arg3: number, arg4: Internal.NonNullList<Internal.Ingredient>, arg5: Internal.ItemStack);
    }
    type ShapedRecipe_ = ShapedRecipe;
    class GlobalWireNetwork extends Document.Object implements Internal.IWorldTickable {
        readFromNBT(nbt: Internal.CompoundNBT_): void;
        onConnectorLoad(iic: Internal.IImmersiveConnectable, remote: boolean): void;
        onConnectorLoad(iic: Internal.IImmersiveConnectable, world: Internal.World): void;
        getAllConnectorsIn(pos: Internal.ChunkPos): Internal.Collection<Internal.ConnectionPoint>;
        addConnection(conn: Internal.Connection): void;
        update(world: Internal.World): void;
        onConnectorUnload(iic: Internal.IImmersiveConnectable): void;
        getNullableLocalNet(pos: Internal.ConnectionPoint): Internal.LocalWireNetwork;
        getNullableLocalNet(pos: BlockPos): Internal.LocalWireNetwork;
        getLocalNet(pos: Internal.ConnectionPoint): Internal.LocalWireNetwork;
        getLocalNet(pos: BlockPos): Internal.LocalWireNetwork;
        getCollisionData(): Internal.WireCollisionData;
        removeAllConnectionsAt(iic: Internal.IImmersiveConnectable, handler: Internal.Consumer_<Internal.Connection_>): void;
        removeAllConnectionsAt(pos: Internal.ConnectionPoint, handler: Internal.Consumer_<Internal.Connection_>): void;
        removeAndDropConnection(c: Internal.Connection, dropAt: BlockPos, world: Internal.World): void;
        getProxyProvider(): Internal.IICProxyProvider;
        updateCatenaryData(conn: Internal.Connection, world: Internal.World): void;
        removeConnection(c: Internal.Connection): void;
        static getNetwork(w: Internal.World): Internal.GlobalWireNetwork;
        static onWorldUnload(ev: Internal.WorldEvent$Unload): void;
        getExistingConnector(cp: Internal.ConnectionPoint): Internal.IImmersiveConnectable;
        writeToNBT(): Internal.CompoundNBT;
        removeConnector(iic: Internal.IImmersiveConnectable): void;
        static readonly VALIDATE_CONNECTIONS: Internal.SetRestrictedField<Internal.BooleanSupplier>;
        static readonly SANITIZE_CONNECTIONS: Internal.SetRestrictedField<Internal.BooleanSupplier>;
        get collisionData(): Internal.WireCollisionData;
        get proxyProvider(): Internal.IICProxyProvider;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(isClientSide: boolean, proxyProvider: Internal.IICProxyProvider, syncManager: any);
    }
    type GlobalWireNetwork_ = GlobalWireNetwork;
    class PlantType extends Document.Object {
        getName(): string;
        static get(arg0: string): Internal.PlantType;
        static readonly BEACH: Internal.PlantType;
        static readonly CAVE: Internal.PlantType;
        static readonly NETHER: Internal.PlantType;
        static readonly PLAINS: Internal.PlantType;
        static readonly DESERT: Internal.PlantType;
        static readonly WATER: Internal.PlantType;
        static readonly CROP: Internal.PlantType;
        get name(): string;
    }
    type PlantType_ = PlantType;
    class StageCreationEvent extends Document.Object {
        getPlayer(): Internal.PlayerEntity;
        setPlayerStages(s: Internal.Stages): void;
        getPlayerStages(): Internal.Stages;
        get playerStages(): Internal.Stages;
        get player(): Internal.PlayerEntity;
        set playerStages(s: Internal.Stages);
    }
    type StageCreationEvent_ = StageCreationEvent;
    interface LongBidirectionalIterable extends Internal.LongIterable {
        iterator(): Internal.LongBidirectionalIterator;
        iterator(): Internal.LongIterator;
        iterator(): Internal.Iterator<any>;
        (): Internal.LongBidirectionalIterator;
    }
    type LongBidirectionalIterable_ = (()=>Internal.LongBidirectionalIterator) | LongBidirectionalIterable;
    interface ISkyRenderHandler {
        render(arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft): void;
        (arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft): void;
    }
    type ISkyRenderHandler_ = ((arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft)=>void) | ISkyRenderHandler;
    class DoubleConfig extends Internal.NumberConfig<number> {
        getStringFromValue(v: number): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(mn: number, mx: number);
    }
    type DoubleConfig_ = DoubleConfig;
    class CUpdateSignPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_187017_b(): string[];
        func_179722_a(): BlockPos;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: BlockPos, arg1: string, arg2: string, arg3: string, arg4: string);
    }
    type CUpdateSignPacket_ = CUpdateSignPacket;
    class ForgeConfigSpec$ConfigValue <T> extends Document.Object {
        next(): Internal.ForgeConfigSpec$Builder;
        set(arg0: T): void;
        get(): T;
        getPath(): Internal.List<string>;
        save(): void;
        clearCache(): void;
        get path(): Internal.List<string>;
    }
    type ForgeConfigSpec$ConfigValue_<T> = ForgeConfigSpec$ConfigValue<T>;
    class IllusionerEntity extends Internal.SpellcastingIllagerEntity implements Internal.IRangedAttackMob {
        shouldRiderSit(): boolean;
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        static func_234293_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_193098_a(arg0: number): Vec3[];
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.IllusionerEntity>, arg1: Internal.World);
    }
    type IllusionerEntity_ = IllusionerEntity;
    interface FlowMessage extends org.apache.logging.log4j.message.Message {
        getText(): string;
        getMessage(): org.apache.logging.log4j.message.Message;
    }
    type FlowMessage_ = FlowMessage;
    interface ILocalHandlerProvider {
        getRequestedHandlers(): Internal.Collection<ResourceLocation>;
    }
    type ILocalHandlerProvider_ = ILocalHandlerProvider;
    interface ISkinManager {
        getSkinCacheDir(): Internal.File;
        (): Internal.File;
    }
    type ISkinManager_ = (()=>Internal.File) | ISkinManager;
    interface IEggLayingEntity {
        getEggTimer(): number;
        isBirdJockey(): boolean;
        getEggItem(): Internal.Item;
        getNextEggTime(arg0: Internal.Random): number;
        setEggTimer(arg0: number): void;
        getEggLayingSound(): Internal.SoundEvent;
    }
    type IEggLayingEntity_ = IEggLayingEntity;
    class FunctionObject$CacheableFunction extends Document.Object {
        func_200376_a(): ResourceLocation;
        func_218039_a(arg0: Internal.FunctionManager): Internal.Optional<Internal.FunctionObject>;
        static readonly field_193519_a: Internal.FunctionObject$CacheableFunction;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
        constructor(arg0: Internal.FunctionObject);
    }
    type FunctionObject$CacheableFunction_ = FunctionObject$CacheableFunction;
    class FoxEntity extends Internal.AnimalEntity {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213480_dY(): boolean;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_213472_dX(): boolean;
        func_213455_dW(): boolean;
        func_213466_r(arg0: boolean): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213461_s(arg0: boolean): void;
        static func_213481_a(arg0: Internal.FoxEntity, arg1: Internal.LivingEntity): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.FoxEntity;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_213471_dV(): Internal.FoxEntity$Type;
        getEntity(): Internal.Entity;
        asKJS(): any;
        func_213467_eg(): boolean;
        func_213475_v(arg0: number): number;
        static func_234192_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        canRiderInteract(): boolean;
        func_213485_x(arg0: boolean): void;
        func_213451_t(arg0: boolean): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_213503_w(arg0: number): number;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_213502_u(arg0: boolean): void;
        func_213490_ee(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.FoxEntity>, arg1: Internal.World);
    }
    type FoxEntity_ = FoxEntity;
    interface IResourcePack extends Internal.AutoCloseable, Internal.IForgeResourcePack {
        func_195762_a(): string;
        func_195761_a(arg0: Internal.ResourcePackType_, arg1: ResourceLocation_): Internal.InputStream;
        func_195760_a<T_>(arg0: Internal.IMetadataSectionSerializer<T_>): T_;
        func_195764_b(arg0: Internal.ResourcePackType_, arg1: ResourceLocation_): boolean;
        func_225637_a_(arg0: Internal.ResourcePackType_, arg1: string, arg2: string, arg3: number, arg4: Internal.Predicate_<string>): Internal.Collection<ResourceLocation>;
        func_195763_b(arg0: string): Internal.InputStream;
        func_195759_a(arg0: Internal.ResourcePackType_): Internal.Set<string>;
        close(): void;
    }
    type IResourcePack_ = IResourcePack;
    class FoodBuilder extends Document.Object {
        saturation(s: number): Internal.FoodBuilder;
        build(): Internal.Food;
        removeEffect(mobEffect: Internal.Effect_): Internal.FoodBuilder;
        effect(mobEffectId: ResourceLocation_, duration: number, amplifier: number, probability: number): Internal.FoodBuilder;
        alwaysEdible(flag: boolean): Internal.FoodBuilder;
        alwaysEdible(): Internal.FoodBuilder;
        meat(flag: boolean): Internal.FoodBuilder;
        meat(): Internal.FoodBuilder;
        fastToEat(flag: boolean): Internal.FoodBuilder;
        fastToEat(): Internal.FoodBuilder;
        eaten(e: Internal.Consumer_<Internal.ItemFoodEatenEventJS_>): Internal.FoodBuilder;
        hunger(h: number): Internal.FoodBuilder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(properties: Internal.Food);
    }
    type FoodBuilder_ = FoodBuilder;
    class SCooldownPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_186922_b(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186920_a(): Internal.Item;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Item, arg1: number);
    }
    type SCooldownPacket_ = SCooldownPacket;
    interface Deque <E> extends Internal.Queue<E>, Internal.SequencedCollection<E> {
        descendingIterator(): Internal.Iterator<E>;
        offerFirst(arg0: E): boolean;
        poll(): E;
        pollLast(): E;
        removeLast(): E;
        getLast(): E;
        remove(arg0: any): boolean;
        remove(): E;
        offer(arg0: E): boolean;
        pop(): E;
        addLast(arg0: E): void;
        iterator(): Internal.Iterator<E>;
        getFirst(): E;
        removeFirst(): E;
        removeLastOccurrence(arg0: any): boolean;
        element(): E;
        add(arg0: E): boolean;
        peekFirst(): E;
        peekLast(): E;
        push(arg0: E): void;
        peek(): E;
        offerLast(arg0: E): boolean;
        contains(arg0: any): boolean;
        size(): number;
        addAll(arg0: Internal.Collection<E>): boolean;
        removeFirstOccurrence(arg0: any): boolean;
        pollFirst(): E;
        reversed(): Internal.Deque<E>;
        reversed(): Internal.SequencedCollection<any>;
        addFirst(arg0: E): void;
    }
    type Deque_<E> = Deque<E>;
    class PlayerData extends Document.Object {
        func_237334_a_(): string[];
        func_237335_a_(arg0: Internal.PlayerEntity): void;
        func_237336_b_(arg0: Internal.PlayerEntity): Internal.CompoundNBT;
        getPlayerDataFolder(): Internal.File;
        get playerDataFolder(): Internal.File;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SaveFormat$LevelSave, arg1: Internal.DataFixer);
    }
    type PlayerData_ = PlayerData;
    class ValidationTracker extends Document.Object {
        func_227536_b_(arg0: ResourceLocation_): boolean;
        func_227530_a_(arg0: string): void;
        func_227531_a_(arg0: string, arg1: ResourceLocation_): Internal.ValidationTracker;
        func_227532_a_(arg0: ResourceLocation_): boolean;
        func_227528_a_(arg0: Internal.IParameterized): void;
        func_227539_c_(arg0: ResourceLocation_): Internal.LootTable;
        func_227534_b_(arg0: string): Internal.ValidationTracker;
        func_227527_a_(): Internal.Multimap<string, string>;
        func_227529_a_(arg0: Internal.LootParameterSet): Internal.ValidationTracker;
        func_227535_b_(arg0: string, arg1: ResourceLocation_): Internal.ValidationTracker;
        func_227541_d_(arg0: ResourceLocation_): Internal.ILootCondition;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LootParameterSet, arg1: Internal.Function<ResourceLocation, Internal.ILootCondition>, arg2: Internal.Function<ResourceLocation, Internal.LootTable>);
        constructor(arg0: Internal.Multimap<string, string>, arg1: java_.util.function_.Supplier<string>, arg2: Internal.LootParameterSet, arg3: Internal.Function<ResourceLocation, Internal.ILootCondition>, arg4: Internal.Set<ResourceLocation>, arg5: Internal.Function<ResourceLocation, Internal.LootTable>, arg6: Internal.Set<ResourceLocation>);
    }
    type ValidationTracker_ = ValidationTracker;
    class CommandContextBuilder <S> extends Document.Object {
        withChild(arg0: Internal.CommandContextBuilder<S>): Internal.CommandContextBuilder<S>;
        withNode(arg0: Internal.CommandNode<S>, arg1: Internal.StringRange): Internal.CommandContextBuilder<S>;
        getNodes(): Internal.List<Internal.ParsedCommandNode<S>>;
        getCommand(): Internal.Command<S>;
        getDispatcher(): Internal.CommandDispatcher<S>;
        getChild(): Internal.CommandContextBuilder<S>;
        withArgument(arg0: string, arg1: Internal.ParsedArgument<S, any>): Internal.CommandContextBuilder<S>;
        withCommand(arg0: Internal.Command_<S>): Internal.CommandContextBuilder<S>;
        getLastChild(): Internal.CommandContextBuilder<S>;
        findSuggestionContext(arg0: number): Internal.SuggestionContext<S>;
        build(arg0: string): Internal.CommandContext<S>;
        getRange(): Internal.StringRange;
        getSource(): S;
        getArguments(): Internal.Map<string, Internal.ParsedArgument<S, any>>;
        withSource(arg0: S): Internal.CommandContextBuilder<S>;
        copy(): Internal.CommandContextBuilder<S>;
        getRootNode(): Internal.CommandNode<S>;
        get nodes(): Internal.List<Internal.ParsedCommandNode<S>>;
        get lastChild(): Internal.CommandContextBuilder<S>;
        get range(): Internal.StringRange;
        get arguments(): Internal.Map<string, Internal.ParsedArgument<S, any>>;
        get source(): S;
        get dispatcher(): Internal.CommandDispatcher<S>;
        get command(): Internal.Command<S>;
        get child(): Internal.CommandContextBuilder<S>;
        get rootNode(): Internal.CommandNode<S>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CommandDispatcher<S>, arg1: S, arg2: Internal.CommandNode<S>, arg3: number);
    }
    type CommandContextBuilder_<S> = CommandContextBuilder<S>;
    interface BooleanSupplier {
        getAsBoolean(): boolean;
        (): boolean;
    }
    type BooleanSupplier_ = (()=>boolean) | BooleanSupplier;
    abstract class TransmissionProvider extends Document.Object implements java_.util.function_.Supplier<Internal.IPrismTransmissionNode> {
        getIdentifier(): ResourceLocation;
        get(): Internal.IPrismTransmissionNode;
        get identifier(): ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TransmissionProvider_ = TransmissionProvider;
    class PlaySoundAtEntityEvent extends Internal.EntityEvent {
        getVolume(): number;
        getPitch(): number;
        setCategory(arg0: Internal.SoundCategory_): void;
        getCategory(): Internal.SoundCategory;
        setPitch(arg0: number): void;
        setSound(arg0: Internal.SoundEvent_): void;
        getDefaultVolume(): number;
        setVolume(arg0: number): void;
        getDefaultPitch(): number;
        getSound(): Internal.SoundEvent;
        get volume(): number;
        get sound(): Internal.SoundEvent;
        get defaultPitch(): number;
        get pitch(): number;
        get defaultVolume(): number;
        get category(): Internal.SoundCategory;
        set volume(arg0: number);
        set sound(arg0: Internal.SoundEvent_);
        set pitch(arg0: number);
        set category(arg0: Internal.SoundCategory_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity, arg1: Internal.SoundEvent, arg2: Internal.SoundCategory, arg3: number, arg4: number);
    }
    type PlaySoundAtEntityEvent_ = PlaySoundAtEntityEvent;
    interface FileFilter {
        accept(arg0: Internal.File): boolean;
        (arg0: Internal.File): boolean;
    }
    type FileFilter_ = ((arg0: Internal.File)=>boolean) | FileFilter;
    class ServerPlayerDataJS extends Internal.PlayerDataJS<Internal.ServerPlayerEntity, Internal.ServerPlayerJS> {
        getServer(): Internal.ServerJS;
        getPlayer(): Internal.ServerPlayerJS;
        getPlayer(): Internal.PlayerJS<any>;
        getMinecraftPlayer(): Internal.ServerPlayerEntity;
        getMinecraftPlayer(): Internal.PlayerEntity;
        get server(): Internal.ServerJS;
        get minecraftPlayer(): Internal.PlayerEntity;
        get player(): Internal.PlayerJS<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(s: Internal.ServerJS, i: Internal.UUID, n: string, h: boolean);
    }
    type ServerPlayerDataJS_ = ServerPlayerDataJS;
    class ParticleStatus extends Internal.Enum<Internal.ParticleStatus> {
        static valueOf(arg0: string): Internal.ParticleStatus;
        static values(): Internal.ParticleStatus[];
        func_216831_a(): string;
        func_216832_b(): number;
        static func_216833_a(arg0: number): Internal.ParticleStatus;
        static readonly ALL: Internal.ParticleStatus;
        static readonly DECREASED: Internal.ParticleStatus;
        static readonly MINIMAL: Internal.ParticleStatus;
    }
    type ParticleStatus_ = "all" | "decreased" | "minimal" | ParticleStatus;
    interface Annotation {
        hashCode(): number;
        equals(arg0: any): boolean;
        annotationType(): Internal.Class<Internal.Annotation>;
        toString(): string;
    }
    type Annotation_ = Annotation;
    abstract class StructBuffer <T, SELF> extends Internal.CustomBuffer<SELF> implements Internal.Iterable<T> {
        iterator(): Internal.Iterator<T>;
        spliterator(): Internal.Spliterator<T>;
        stream(): Internal.Stream<T>;
        forEach(arg0: Internal.Consumer_<T>): void;
        get(arg0: number, arg1: T): SELF;
        get(arg0: T): SELF;
        get(arg0: number): T;
        get(): T;
        parallelStream(): Internal.Stream<T>;
        put(arg0: number, arg1: T): SELF;
        put(arg0: T): SELF;
    }
    type StructBuffer_<T, SELF> = StructBuffer<T, SELF>;
    class LivingSpawnEvent$CheckSpawn extends Internal.LivingSpawnEvent {
        isSpawner(): boolean;
        getSpawner(): Internal.AbstractSpawner;
        getSpawnReason(): Internal.SpawnReason;
        get spawnReason(): Internal.SpawnReason;
        get spawner(): Internal.AbstractSpawner;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MobEntity, arg1: Internal.IWorld, arg2: number, arg3: number, arg4: number, arg5: Internal.AbstractSpawner, arg6: Internal.SpawnReason);
    }
    type LivingSpawnEvent$CheckSpawn_ = LivingSpawnEvent$CheckSpawn;
    class ChunkEvent extends Internal.WorldEvent {
        getChunk(): Internal.IChunk;
        get chunk(): Internal.IChunk;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.IChunk, arg1: Internal.IWorld);
        constructor(arg0: Internal.IChunk);
    }
    type ChunkEvent_ = ChunkEvent;
    interface MethodHandleDesc extends Internal.ConstantDesc {
        invocationType(): Internal.MethodTypeDesc;
        equals(arg0: any): boolean;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): any;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): Internal.MethodHandle;
        asType(arg0: Internal.MethodTypeDesc): Internal.MethodHandleDesc;
    }
    type MethodHandleDesc_ = MethodHandleDesc;
    class TaggedChoice$TaggedChoiceType <K> extends com.mojang.datafixers.types.Type<Internal.Pair<K, any>> {
        static elementResult<K_, FT_, FR_>(arg0: K_, arg1: Internal.TaggedChoice$TaggedChoiceType<K_>, arg2: Internal.RewriteResult<FT_, FR_>): Internal.RewriteResult<Internal.Pair<K_, any>, Internal.Pair<K_, any>>;
        all(arg0: Internal.TypeRewriteRule_, arg1: boolean, arg2: boolean): Internal.RewriteResult<Internal.Pair<K, any>, any>;
        getKeyType(): com.mojang.datafixers.types.Type<K>;
        types(): Internal.Map<K, com.mojang.datafixers.types.Type<any>>;
        getName(): string;
        findTypeInChildren<FT_, FR_>(arg0: com.mojang.datafixers.types.Type<FT_>, arg1: com.mojang.datafixers.types.Type<FR_>, arg2: Internal.Type$TypeMatcher_<FT_, FR_>, arg3: boolean): Internal.Either<Internal.TypedOptic<Internal.Pair<K, any>, any, FT_, FR_>, Internal.Type$FieldNotFoundException>;
        one(arg0: Internal.TypeRewriteRule_): Internal.Optional<Internal.RewriteResult<Internal.Pair<K, any>, any>>;
        hasType(arg0: K): boolean;
        point(arg0: Internal.DynamicOps<any>): Internal.Optional<Internal.Pair<K, any>>;
        point(arg0: Internal.DynamicOps<any>, arg1: K, arg2: any): Internal.Optional<Internal.Typed<Internal.Pair<K, any>>>;
        get name(): string;
        get keyType(): com.mojang.datafixers.types.Type<K>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: com.mojang.datafixers.types.Type<K>, arg2: Internal.Map<K, com.mojang.datafixers.types.Type<any>>);
    }
    type TaggedChoice$TaggedChoiceType_<K> = TaggedChoice$TaggedChoiceType<K>;
    class ArmorStandEntity extends Internal.LivingEntity {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_175410_n(): boolean;
        func_175417_e(arg0: Internal.Rotations): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_175407_x(): Internal.Rotations;
        func_175415_a(arg0: Internal.Rotations): void;
        func_175418_s(): Internal.Rotations;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_181026_s(): boolean;
        func_175414_r(): boolean;
        func_175411_v(): Internal.Rotations;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_175428_d(arg0: Internal.Rotations): void;
        hasCooldown(): boolean;
        func_175405_c(arg0: Internal.Rotations): void;
        func_175427_f(arg0: Internal.Rotations): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        func_175424_b(arg0: Internal.Rotations): void;
        canRiderInteract(): boolean;
        func_175404_u(): Internal.Rotations;
        func_175403_w(): Internal.Rotations;
        func_175408_t(): Internal.Rotations;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_175402_q(): boolean;
        field_175437_i: number;
        static readonly field_184801_a: Internal.DataParameter<number>;
        static readonly field_184802_b: Internal.DataParameter<Internal.Rotations>;
        static readonly field_184803_c: Internal.DataParameter<Internal.Rotations>;
        static readonly field_184804_d: Internal.DataParameter<Internal.Rotations>;
        static readonly field_184805_e: Internal.DataParameter<Internal.Rotations>;
        static readonly field_184806_f: Internal.DataParameter<Internal.Rotations>;
        static readonly field_184807_g: Internal.DataParameter<Internal.Rotations>;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ArmorStandEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
    }
    type ArmorStandEntity_ = ArmorStandEntity;
    interface FluidInvokerMixin {
        callAnimateTick(arg0: Internal.World, arg1: BlockPos, arg2: Internal.FluidState, arg3: Internal.Random): void;
        (arg0: Internal.World, arg1: BlockPos, arg2: Internal.FluidState, arg3: Internal.Random): void;
    }
    type FluidInvokerMixin_ = ((arg0: Internal.World, arg1: BlockPos, arg2: Internal.FluidState, arg3: Internal.Random)=>void) | FluidInvokerMixin;
    interface App <F, A> {
    }
    type App_<F, A> = App<F, A>;
    interface ICloudRenderHandler {
        render(arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft, arg5: number, arg6: number, arg7: number): void;
        (arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft, arg5: number, arg6: number, arg7: number): void;
    }
    type ICloudRenderHandler_ = ((arg0: number, arg1: number, arg2: Internal.MatrixStack, arg3: Internal.ClientWorld, arg4: Internal.Minecraft, arg5: number, arg6: number, arg7: number)=>void) | ICloudRenderHandler;
    interface DebugFrame {
        onEnter(arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Scriptable, arg3: any[]): void;
        onExit(arg0: Internal.Context, arg1: boolean, arg2: any): void;
        onExceptionThrown(arg0: Internal.Context, arg1: Internal.Throwable): void;
        onLineChange(arg0: Internal.Context, arg1: number): void;
        onDebuggerStatement(arg0: Internal.Context): void;
    }
    type DebugFrame_ = DebugFrame;
    interface IServerWorldInfo extends Internal.ISpawnWorldInfo {
        func_76071_n(): number;
        func_76068_b(arg0: number): void;
        func_76069_a(arg0: boolean): void;
        func_215763_z(): Internal.TimerCallbackManager<Internal.MinecraftServer>;
        func_230397_h_(arg0: number): void;
        func_82572_b(arg0: number): void;
        func_230391_a_(arg0: number): void;
        func_76090_f(arg0: number): void;
        func_230400_v_(): number;
        func_230396_g_(arg0: number): void;
        func_230392_a_(arg0: Internal.GameType_): void;
        func_76080_g(arg0: number): void;
        func_230393_a_(arg0: Internal.WorldBorder$Serializer): void;
        func_230394_a_(arg0: Internal.UUID): void;
        func_230395_g_(): number;
        func_76091_d(arg0: boolean): void;
        func_76077_q(): Internal.GameType;
        func_76086_u(): boolean;
        func_85118_a(arg0: Internal.CrashReportCategory): void;
        func_230399_u_(): number;
        func_76070_v(): boolean;
        func_76065_j(): string;
        func_230398_q_(): Internal.WorldBorder$Serializer;
        func_76083_p(): number;
    }
    type IServerWorldInfo_ = IServerWorldInfo;
    class ItemArmorTierEventJS extends Internal.StartupEventJS {
        add(id: string, parent: string, tier: Internal.Consumer_<Internal.ModifiedArmorTier_>): void;
        add(id: string, tier: Internal.Consumer_<Internal.ModifiedArmorTier_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ItemArmorTierEventJS_ = ItemArmorTierEventJS;
    interface IntStream extends Internal.BaseStream<number, Internal.IntStream> {
        average(): Internal.OptionalDouble;
        sequential(): Internal.BaseStream<any, any>;
        sequential(): Internal.IntStream;
        takeWhile(arg0: Internal.IntPredicate_): Internal.IntStream;
        distinct(): Internal.IntStream;
        findFirst(): Internal.OptionalInt;
        sum(): number;
        skip(arg0: number): Internal.IntStream;
        asLongStream(): Internal.LongStream;
        allMatch(arg0: Internal.IntPredicate_): boolean;
        mapToObj<U_>(arg0: Internal.IntFunction_<U_>): Internal.Stream<U_>;
        mapMulti(arg0: Internal.IntStream$IntMapMultiConsumer_): Internal.IntStream;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.PrimitiveIterator$OfInt;
        asDoubleStream(): Internal.DoubleStream;
        min(): Internal.OptionalInt;
        mapToLong(arg0: Internal.IntToLongFunction_): Internal.LongStream;
        parallel(): Internal.BaseStream<any, any>;
        parallel(): Internal.IntStream;
        noneMatch(arg0: Internal.IntPredicate_): boolean;
        findAny(): Internal.OptionalInt;
        limit(arg0: number): Internal.IntStream;
        toArray(): number[];
        forEachOrdered(arg0: Internal.IntConsumer_): void;
        anyMatch(arg0: Internal.IntPredicate_): boolean;
        map(arg0: Internal.IntUnaryOperator_): Internal.IntStream;
        mapToDouble(arg0: Internal.IntToDoubleFunction_): Internal.DoubleStream;
        reduce(arg0: number, arg1: Internal.IntBinaryOperator_): number;
        reduce(arg0: Internal.IntBinaryOperator_): Internal.OptionalInt;
        spliterator(): Internal.Spliterator$OfInt;
        spliterator(): Internal.Spliterator<any>;
        max(): Internal.OptionalInt;
        forEach(arg0: Internal.IntConsumer_): void;
        count(): number;
        dropWhile(arg0: Internal.IntPredicate_): Internal.IntStream;
        peek(arg0: Internal.IntConsumer_): Internal.IntStream;
        flatMap(arg0: Internal.IntFunction_<Internal.IntStream_>): Internal.IntStream;
        filter(arg0: Internal.IntPredicate_): Internal.IntStream;
        sorted(): Internal.IntStream;
        boxed(): Internal.Stream<number>;
        summaryStatistics(): Internal.IntSummaryStatistics;
        collect<R_>(arg0: java_.util.function_.Supplier_<R_>, arg1: Internal.ObjIntConsumer_<R_>, arg2: Internal.BiConsumer_<R_, R_>): R_;
    }
    type IntStream_ = IntStream;
    interface BiConsumer <T, U> {
        andThen(arg0: Internal.BiConsumer_<T, U>): Internal.BiConsumer<T, U>;
        accept(arg0: T, arg1: U): void;
        (arg0: T, arg1: U): void;
    }
    type BiConsumer_<T, U> = ((arg0: T, arg1: U)=>void) | BiConsumer<T, U>;
    interface CommandList extends Internal.AutoCloseable {
        copyBufferSubData(arg0: Internal.GlBuffer, arg1: Internal.GlMutableBuffer, arg2: number, arg3: number, arg4: number): void;
        bindBuffer(arg0: Internal.GlBufferTarget_, arg1: Internal.GlBuffer): void;
        unbindBuffer(arg0: Internal.GlBufferTarget_): void;
        bindVertexArray(arg0: Internal.GlVertexArray): void;
        allocateBuffer(arg0: Internal.GlBufferTarget_, arg1: Internal.GlMutableBuffer, arg2: number): void;
        deleteVertexArray(arg0: Internal.GlVertexArray): void;
        invalidateBuffer(arg0: Internal.GlMutableBuffer): void;
        createMutableBuffer(arg0: Internal.GlBufferUsage_): Internal.GlMutableBuffer;
        createVertexArray(): Internal.GlVertexArray;
        uploadData(arg0: Internal.GlMutableBuffer, arg1: Internal.ByteBuffer): void;
        uploadData(glBuffer: Internal.GlMutableBuffer, data: Internal.VertexData): void;
        deleteTessellation(arg0: Internal.GlTessellation): void;
        deleteBuffer(arg0: Internal.GlBuffer): void;
        beginTessellating(arg0: Internal.GlTessellation): Internal.DrawCommandList;
        unbindVertexArray(): void;
        flush(): void;
        createTessellation(arg0: Internal.GlPrimitiveType_, arg1: any[]): Internal.GlTessellation;
        close(): void;
    }
    type CommandList_ = CommandList;
    interface INetHandler {
        func_147298_b(): Internal.NetworkManager;
        func_147231_a(arg0: Internal.ITextComponent_): void;
    }
    type INetHandler_ = INetHandler;
    class CountingMap extends Document.Object {
        add(key: any, value: number): number;
        getSize(): number;
        set(key: any, value: number): number;
        getValues(): Internal.Collection<number>;
        getEntries(): Internal.List<Internal.Object2LongEntry>;
        forEach(forEach: Internal.Consumer_<Internal.Object2LongEntry_>): void;
        get(key: any): number;
        clear(): void;
        getTotalCount(): number;
        getKeys(): Internal.Set<any>;
        get entries(): Internal.List<Internal.Object2LongEntry>;
        get size(): number;
        get keys(): Internal.Set<any>;
        get values(): Internal.Collection<number>;
        get totalCount(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CountingMap_ = CountingMap;
    abstract class Biome$TemperatureModifier extends Internal.Enum<Internal.Biome$TemperatureModifier> implements Internal.IStringSerializable {
        func_241852_a(arg0: BlockPos, arg1: number): number;
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.Biome$TemperatureModifier;
        static values(): Internal.Biome$TemperatureModifier[];
        static func_242477_a(arg0: string): Internal.Biome$TemperatureModifier;
        func_242478_b(): string;
        static readonly field_242473_c: Internal.Codec<Internal.Biome$TemperatureModifier>;
        static readonly NONE: Internal.Biome$TemperatureModifier;
        static readonly FROZEN: Internal.Biome$TemperatureModifier;
    }
    type Biome$TemperatureModifier_ = "none" | "frozen" | Biome$TemperatureModifier;
    class DownloadingPackFinder extends Document.Object implements Internal.IPackFinder {
        func_230230_a_(arg0: Internal.Consumer_<Internal.ResourcePackInfo_>, arg1: Internal.ResourcePackInfo$IFactory_): void;
        func_217816_a(arg0: Internal.File, arg1: Internal.IPackNameDecorator_): Internal.CompletableFuture<void>;
        func_195746_a(): Internal.VanillaPack;
        func_217818_a(arg0: string, arg1: string): Internal.CompletableFuture<any>;
        func_195749_c(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File, arg1: any);
    }
    type DownloadingPackFinder_ = DownloadingPackFinder;
    abstract class PerkAttributeReader extends Internal.ForgeRegistryEntry<Internal.PerkAttributeReader> {
        getModifierValueForMode(arg0: Internal.PerkAttributeMap, arg1: Internal.PlayerEntity, arg2: Internal.LogicalSide_, arg3: Internal.ModifierType_): number;
        getStatistics(arg0: Internal.PerkAttributeMap, arg1: Internal.PlayerEntity): Internal.PerkStatistic;
        getType(): Internal.PerkAttributeType;
        setRegistryName(arg0: ResourceLocation_): any;
        static formatDecimal(arg0: number): string;
        getDefaultValue(arg0: Internal.PerkAttributeMap, arg1: Internal.PlayerEntity, arg2: Internal.LogicalSide_): number;
        get type(): Internal.PerkAttributeType;
        set registryName(arg0: ResourceLocation_);
    }
    type PerkAttributeReader_ = Registry.astralsorcery.perk_attribute_readers | PerkAttributeReader;
    interface Appendable {
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: string): Internal.Appendable;
    }
    type Appendable_ = Appendable;
    class CSelectTradePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_210353_a(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type CSelectTradePacket_ = CSelectTradePacket;
    class LazyOptional <T> extends Document.Object {
        resolve(): Internal.Optional<T>;
        isPresent(): boolean;
        invalidate(): void;
        orElse(arg0: T): T;
        orElseThrow<X_>(arg0: Internal.NonNullSupplier_<X_>): T;
        static empty<T_>(): Internal.LazyOptional<T_>;
        filter(arg0: Internal.NonNullPredicate_<T>): Internal.Optional<T>;
        cast<X_>(): Internal.LazyOptional<X_>;
        orElseGet(arg0: Internal.NonNullSupplier_<T>): T;
        ifPresent(arg0: Internal.NonNullConsumer_<T>): void;
        static of<T_>(arg0: Internal.NonNullSupplier_<T_>): Internal.LazyOptional<T_>;
        map<U_>(arg0: Internal.NonNullFunction_<T, U_>): Internal.Optional<U_>;
        lazyMap<U_>(arg0: Internal.NonNullFunction_<T, U_>): Internal.LazyOptional<U_>;
        addListener(arg0: Internal.NonNullConsumer_<Internal.LazyOptional_<T>>): void;
        get present(): boolean;
    }
    type LazyOptional_<T> = LazyOptional<T>;
    class StackTraceElement extends Document.Object implements Internal.Serializable {
        getLineNumber(): number;
        getMethodName(): string;
        getClassLoaderName(): string;
        getClassName(): string;
        getModuleName(): string;
        getFileName(): string;
        isNativeMethod(): boolean;
        getModuleVersion(): string;
        get fileName(): string;
        get moduleVersion(): string;
        get moduleName(): string;
        get nativeMethod(): boolean;
        get methodName(): string;
        get className(): string;
        get lineNumber(): number;
        get classLoaderName(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: string, arg2: string, arg3: string, arg4: string, arg5: string, arg6: number);
        constructor(arg0: string, arg1: string, arg2: string, arg3: number);
    }
    type StackTraceElement_ = StackTraceElement;
    class ConfiguredCarver <WC> extends Document.Object {
        func_222730_a(arg0: Internal.Random, arg1: number, arg2: number): boolean;
        func_227207_a_(arg0: Internal.IChunk, arg1: Internal.Function_<BlockPos_, Internal.Biome_>, arg2: Internal.Random, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: Internal.BitSet): boolean;
        func_242760_a(): WC;
        static readonly field_242759_c: Internal.Codec<Internal.List<java_.util.function_.Supplier<Internal.ConfiguredCarver<any>>>>;
        static readonly field_244390_b_: Internal.Codec<java_.util.function_.Supplier<Internal.ConfiguredCarver<any>>>;
        static readonly field_236235_a_: Internal.Codec<Internal.ConfiguredCarver<any>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.WorldCarver<WC>, arg1: WC);
    }
    type ConfiguredCarver_<WC> = ConfiguredCarver<WC>;
    interface IFormattableTextComponent extends Internal.ITextComponent {
        func_240703_c_(arg0: Internal.Style): Internal.IFormattableTextComponent;
        func_240702_b_(arg0: string): Internal.IFormattableTextComponent;
        func_240700_a_(arg0: Internal.UnaryOperator<Internal.Style>): Internal.IFormattableTextComponent;
        func_240699_a_(arg0: Internal.TextFormatting_): Internal.IFormattableTextComponent;
        func_240701_a_(...arg0: Internal.TextFormatting[]): Internal.IFormattableTextComponent;
        func_230529_a_(arg0: Internal.ITextComponent_): Internal.IFormattableTextComponent;
        func_230530_a_(arg0: Internal.Style): Internal.IFormattableTextComponent;
    }
    type IFormattableTextComponent_ = IFormattableTextComponent;
    abstract class EntityViewRenderEvent extends net.minecraftforge.eventbus.api.Event {
        getRenderer(): Internal.GameRenderer;
        getInfo(): Internal.ActiveRenderInfo;
        getRenderPartialTicks(): number;
        get renderer(): Internal.GameRenderer;
        get renderPartialTicks(): number;
        get info(): Internal.ActiveRenderInfo;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.GameRenderer, arg1: Internal.ActiveRenderInfo, arg2: number);
    }
    type EntityViewRenderEvent_ = EntityViewRenderEvent;
    class FieldAttributes extends Document.Object {
        getDeclaringClass(): Internal.Class<any>;
        getName(): string;
        hasModifier(arg0: number): boolean;
        getAnnotation<T_>(arg0: Internal.Class<T_>): T_;
        getDeclaredType(): Internal.Type;
        getDeclaredClass(): Internal.Class<any>;
        getAnnotations(): Internal.Collection<Internal.Annotation>;
        get name(): string;
        get annotations(): Internal.Collection<Internal.Annotation>;
        get declaredType(): Internal.Type;
        get declaredClass(): Internal.Class<any>;
        get declaringClass(): Internal.Class<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Field);
    }
    type FieldAttributes_ = FieldAttributes;
    class BlockPartFace extends Document.Object {
        readonly field_178245_c: number;
        readonly field_178243_e: Internal.BlockFaceUV;
        readonly field_178244_b: Internal.Direction;
        readonly field_178242_d: string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Direction, arg1: number, arg2: string, arg3: Internal.BlockFaceUV);
    }
    type BlockPartFace_ = BlockPartFace;
    class DynamicEnchantmentEvent$Modify extends net.minecraftforge.eventbus.api.Event {
        getResolvedPlayer(): Internal.PlayerEntity;
        getEnchantmentsToApply(): Internal.List<Internal.DynamicEnchantment>;
        getEnchantedItemStack(): Internal.ItemStack;
        get resolvedPlayer(): Internal.PlayerEntity;
        get enchantmentsToApply(): Internal.List<Internal.DynamicEnchantment>;
        get enchantedItemStack(): Internal.ItemStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ItemStack, arg1: Internal.List<Internal.DynamicEnchantment>, arg2: Internal.PlayerEntity);
    }
    type DynamicEnchantmentEvent$Modify_ = DynamicEnchantmentEvent$Modify;
    class ChunkStatus extends Internal.ForgeRegistryEntry<Internal.ChunkStatus> {
        func_222596_d(): string;
        static func_222599_a(arg0: Internal.ChunkStatus_): number;
        func_222584_c(): number;
        func_222595_h(): Internal.EnumSet<Internal.Heightmap$Type>;
        static func_222582_a(): Internal.List<Internal.ChunkStatus>;
        func_223198_a(arg0: Internal.ServerWorld, arg1: Internal.ChunkGenerator, arg2: Internal.TemplateManager, arg3: Internal.ServerWorldLightManager, arg4: Internal.Function_<Internal.IChunk_, Internal.CompletableFuture_<Internal.Either_<Internal.IChunk_, Internal.ChunkHolder$IChunkLoadingError_>>>, arg5: Internal.List<Internal.IChunk>): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        static func_222581_a(arg0: number): Internal.ChunkStatus;
        static func_222600_b(): number;
        setRegistryName(arg0: ResourceLocation_): any;
        func_209003_a(arg0: Internal.ChunkStatus_): boolean;
        static func_222591_a(arg0: string): Internal.ChunkStatus;
        func_202128_c(): number;
        func_223201_a(arg0: Internal.ServerWorld, arg1: Internal.TemplateManager, arg2: Internal.ServerWorldLightManager, arg3: Internal.Function_<Internal.IChunk_, Internal.CompletableFuture_<Internal.Either_<Internal.IChunk_, Internal.ChunkHolder$IChunkLoadingError_>>>, arg4: Internal.IChunk): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_202129_d(): Internal.ChunkStatus$Type;
        func_222593_e(): Internal.ChunkStatus;
        static readonly field_222614_j: Internal.ChunkStatus;
        static readonly field_222608_d: Internal.ChunkStatus;
        static readonly field_222613_i: Internal.ChunkStatus;
        static readonly field_222607_c: Internal.ChunkStatus;
        static readonly field_222612_h: Internal.ChunkStatus;
        static readonly field_222606_b: Internal.ChunkStatus;
        static readonly field_222611_g: Internal.ChunkStatus;
        static field_222617_m: Internal.ChunkStatus;
        static readonly field_222616_l: Internal.ChunkStatus;
        static readonly field_222615_k: Internal.ChunkStatus;
        static readonly field_222609_e: Internal.ChunkStatus;
        static readonly field_223226_a_: Internal.ChunkStatus;
        static readonly field_222610_f: Internal.ChunkStatus;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.ChunkStatus, arg2: number, arg3: Internal.EnumSet<Internal.Heightmap$Type>, arg4: Internal.ChunkStatus$Type, arg5: any, arg6: any);
    }
    type ChunkStatus_ = Registry.minecraft.chunk_status | ChunkStatus;
    interface ICraftingContainer {
        getResult(): Internal.CraftResultInventory;
        (): Internal.CraftResultInventory;
    }
    type ICraftingContainer_ = (()=>Internal.CraftResultInventory) | ICraftingContainer;
    abstract class StructurePiece extends Document.Object {
        func_74877_c(): number;
        func_230383_a_(arg0: Internal.ISeedReader, arg1: Internal.StructureManager, arg2: Internal.ChunkGenerator, arg3: Internal.Random, arg4: Internal.MutableBoundingBox, arg5: Internal.ChunkPos, arg6: BlockPos): boolean;
        func_186164_a(arg0: Internal.Direction_): void;
        func_74874_b(): Internal.MutableBoundingBox;
        func_214810_a(arg0: Internal.ChunkPos, arg1: number): boolean;
        static func_197528_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.BlockState): Internal.BlockState;
        func_214807_k(): Internal.IStructurePieceType;
        static func_74883_a(arg0: Internal.List<Internal.StructurePiece>, arg1: Internal.MutableBoundingBox): Internal.StructurePiece;
        func_143010_b(): Internal.CompoundNBT;
        func_186165_e(): Internal.Direction;
        func_181138_a(arg0: number, arg1: number, arg2: number): void;
        func_74861_a(arg0: Internal.StructurePiece, arg1: Internal.List<Internal.StructurePiece>, arg2: Internal.Random): void;
        func_214809_Y_(): Internal.Rotation;
        field_186169_c: Internal.Rotation;
        field_186168_b: Internal.Mirror;
        field_214811_d: Internal.IStructurePieceType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IStructurePieceType, arg1: Internal.CompoundNBT);
    }
    type StructurePiece_ = StructurePiece;
    interface WatchEvent$Kind <T> {
        name(): string;
        type(): Internal.Class<T>;
    }
    type WatchEvent$Kind_<T> = WatchEvent$Kind<T>;
    interface LongConsumer {
        andThen(arg0: Internal.LongConsumer_): Internal.LongConsumer;
        accept(arg0: number): void;
        (arg0: number): void;
    }
    type LongConsumer_ = ((arg0: number)=>void) | LongConsumer;
    class GuiScreenEvent$DrawScreenEvent$Post extends Internal.GuiScreenEvent$DrawScreenEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Screen, arg1: Internal.MatrixStack, arg2: number, arg3: number, arg4: number);
        constructor();
    }
    type GuiScreenEvent$DrawScreenEvent$Post_ = GuiScreenEvent$DrawScreenEvent$Post;
    interface IPrismTransmissionNode extends hellfirepvp.astralsorcery.common.util.block.ILocatable {
        readFromNBT(arg0: Internal.CompoundNBT_): void;
        notifyBlockChange(arg0: Internal.World, arg1: BlockPos): boolean;
        notifySourceLink(arg0: Internal.World, arg1: BlockPos): void;
        needsUpdate(): boolean;
        getTransmissionConsumptionMultiplier(): number;
        markDirty(arg0: Internal.World): void;
        onTransmissionTick(arg0: Internal.World, arg1: number, arg2: Internal.IWeakConstellation): void;
        getLocationPos(): BlockPos;
        update(arg0: Internal.World): void;
        notifySourceUnlink(arg0: Internal.World, arg1: BlockPos): void;
        getSources(): Internal.List<BlockPos>;
        updateFromTileEntity<T_>(arg0: T_): boolean;
        needsTransmissionUpdate(): boolean;
        notifyLink(arg0: Internal.World, arg1: BlockPos): void;
        notifyUnlink(arg0: Internal.World, arg1: BlockPos): boolean;
        queryNext(arg0: Internal.WorldNetworkHandler): Internal.List<Internal.NodeConnection<Internal.IPrismTransmissionNode>>;
        getProvider(): Internal.TransmissionProvider;
        getTransmissionProperties(): Internal.CrystalAttributes;
        getTransmissionThroughputMultiplier(): number;
        postLoad(arg0: Internal.IWorld): void;
        writeToNBT(arg0: Internal.CompoundNBT_): void;
    }
    type IPrismTransmissionNode_ = IPrismTransmissionNode;
    class ForgeConfigSpec$ValueSpec extends Document.Object {
        getClazz(): Internal.Class<any>;
        correct(arg0: any): any;
        needsWorldRestart(): boolean;
        test(arg0: any): boolean;
        getTranslationKey(): string;
        getRange<V_>(): Internal.ForgeConfigSpec$Range<V_>;
        getComment(): string;
        getDefault(): any;
        get default(): any;
        get translationKey(): string;
        get range(): Internal.ForgeConfigSpec$Range<V_>;
        get comment(): string;
        get clazz(): Internal.Class<any>;
    }
    type ForgeConfigSpec$ValueSpec_ = ForgeConfigSpec$ValueSpec;
    class StrongholdLocationCache extends Internal.WorldSavedData {
        getChunkPosList(): Internal.List<Internal.ChunkPos>;
        static getFileId(dimensionType: Internal.DimensionType): string;
        serializeNBT(): Internal.INBT;
        setChunkPosList(positions: Internal.List<Internal.ChunkPos>): void;
        get chunkPosList(): Internal.List<Internal.ChunkPos>;
        set chunkPosList(positions: Internal.List<Internal.ChunkPos>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(level: Internal.ServerWorld);
    }
    type StrongholdLocationCache_ = StrongholdLocationCache;
    class SSetExperiencePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149395_e(): number;
        func_149396_d(): number;
        func_149397_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type SSetExperiencePacket_ = SSetExperiencePacket;
    abstract class FlowersFeature <U> extends Internal.Feature<U> {
        func_225560_a_(arg0: U): number;
        func_225562_b_(arg0: Internal.Random, arg1: BlockPos, arg2: U): Internal.BlockState;
        setRegistryName(arg0: ResourceLocation_): any;
        func_225561_a_(arg0: Internal.Random, arg1: BlockPos, arg2: U): BlockPos;
        func_225559_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: U): boolean;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<U>);
    }
    type FlowersFeature_<U> = FlowersFeature<U>;
    class AddReloadListenerEvent extends net.minecraftforge.eventbus.api.Event {
        getListeners(): Internal.List<Internal.IFutureReloadListener>;
        getDataPackRegistries(): Internal.DataPackRegistries;
        addListener(arg0: Internal.IFutureReloadListener_): void;
        get listeners(): Internal.List<Internal.IFutureReloadListener>;
        get dataPackRegistries(): Internal.DataPackRegistries;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.DataPackRegistries);
    }
    type AddReloadListenerEvent_ = AddReloadListenerEvent;
    class FontRenderer extends Document.Object {
        func_238412_a_(arg0: string, arg1: number): string;
        func_238416_a_(arg0: Internal.IReorderingProcessor_, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: Internal.Matrix4f, arg6: Internal.IRenderTypeBuffer_, arg7: boolean, arg8: number, arg9: number): number;
        func_238414_a_(arg0: Internal.ITextProperties): number;
        func_238406_a_(arg0: Internal.MatrixStack, arg1: string, arg2: number, arg3: number, arg4: number, arg5: boolean): number;
        func_243245_a(arg0: Internal.IReorderingProcessor_): number;
        func_228078_a_(arg0: string, arg1: number, arg2: number, arg3: number, arg4: Internal.Matrix4f, arg5: boolean, arg6: boolean): number;
        func_78260_a(): boolean;
        func_238425_b_(arg0: Internal.ITextProperties, arg1: number): Internal.List<Internal.IReorderingProcessor>;
        func_238421_b_(arg0: Internal.MatrixStack, arg1: string, arg2: number, arg3: number, arg4: number): number;
        func_238405_a_(arg0: Internal.MatrixStack, arg1: string, arg2: number, arg3: number, arg4: number): number;
        func_78267_b(arg0: string, arg1: number): number;
        func_238417_a_(arg0: Internal.ITextProperties, arg1: number): Internal.ITextProperties;
        func_238419_a_(arg0: ResourceLocation_): net.minecraft.client.gui.fonts.Font;
        func_238411_a_(arg0: string, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: Internal.Matrix4f, arg6: Internal.IRenderTypeBuffer_, arg7: boolean, arg8: number, arg9: number, arg10: boolean): number;
        func_238407_a_(arg0: Internal.MatrixStack, arg1: Internal.IReorderingProcessor_, arg2: number, arg3: number, arg4: number): number;
        func_238413_a_(arg0: string, arg1: number, arg2: boolean): string;
        func_238426_c_(arg0: Internal.IReorderingProcessor_, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: Internal.Matrix4f, arg6: Internal.IRenderTypeBuffer_, arg7: boolean, arg8: number, arg9: number): number;
        func_228079_a_(arg0: string, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: Internal.Matrix4f, arg6: Internal.IRenderTypeBuffer_, arg7: boolean, arg8: number, arg9: number): number;
        func_243246_a(arg0: Internal.MatrixStack, arg1: Internal.ITextComponent_, arg2: number, arg3: number, arg4: number): number;
        func_243247_a(arg0: Internal.ITextComponent_, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: Internal.Matrix4f, arg6: Internal.IRenderTypeBuffer_, arg7: boolean, arg8: number, arg9: number): number;
        func_238422_b_(arg0: Internal.MatrixStack, arg1: Internal.IReorderingProcessor_, arg2: number, arg3: number, arg4: number): number;
        func_243248_b(arg0: Internal.MatrixStack, arg1: Internal.ITextComponent_, arg2: number, arg3: number, arg4: number): number;
        func_238420_b_(): Internal.CharacterManager;
        func_238418_a_(arg0: Internal.ITextProperties, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_78256_a(arg0: string): number;
        func_147647_b(arg0: string): string;
        func_228081_c_(arg0: string, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: Internal.Matrix4f, arg6: Internal.IRenderTypeBuffer_, arg7: boolean, arg8: number, arg9: number): number;
        readonly field_78289_c: Internal.Random;
        static readonly field_238401_c_: Internal.Vector3f;
        readonly field_238402_e_: Internal.CharacterManager;
        readonly field_211127_e: Internal.Function<ResourceLocation, net.minecraft.client.gui.fonts.Font>;
        readonly field_78288_b: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Function<ResourceLocation, net.minecraft.client.gui.fonts.Font>);
    }
    type FontRenderer_ = FontRenderer;
    class JigsawTileEntity$OrientationType extends Internal.Enum<Internal.JigsawTileEntity$OrientationType> implements Internal.IStringSerializable {
        static func_235673_a_(arg0: string): Internal.Optional<Internal.JigsawTileEntity$OrientationType>;
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.JigsawTileEntity$OrientationType;
        static values(): Internal.JigsawTileEntity$OrientationType[];
        static readonly ROLLABLE: Internal.JigsawTileEntity$OrientationType;
        static readonly ALIGNED: Internal.JigsawTileEntity$OrientationType;
    }
    type JigsawTileEntity$OrientationType_ = "rollable" | "aligned" | JigsawTileEntity$OrientationType;
    interface NavigableSet <E> extends Internal.SortedSet<E> {
        tailSet(arg0: E, arg1: boolean): Internal.NavigableSet<E>;
        tailSet(arg0: E): Internal.SortedSet<E>;
        ceiling(arg0: E): E;
        headSet(arg0: E, arg1: boolean): Internal.NavigableSet<E>;
        headSet(arg0: E): Internal.SortedSet<E>;
        lower(arg0: E): E;
        descendingIterator(): Internal.Iterator<E>;
        descendingSet(): Internal.NavigableSet<E>;
        pollLast(): E;
        removeLast(): E;
        iterator(): Internal.Iterator<E>;
        removeFirst(): E;
        subSet(arg0: E, arg1: boolean, arg2: E, arg3: boolean): Internal.NavigableSet<E>;
        subSet(arg0: E, arg1: E): Internal.SortedSet<E>;
        pollFirst(): E;
        floor(arg0: E): E;
        reversed(): Internal.NavigableSet<E>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.SequencedSet<any>;
        reversed(): Internal.SortedSet<any>;
        higher(arg0: E): E;
    }
    type NavigableSet_<E> = NavigableSet<E>;
    interface MinecartElement$MinecartConstructor {
        create(arg0: Internal.World, arg1: number, arg2: number, arg3: number): Internal.AbstractMinecartEntity;
        (arg0: Internal.World, arg1: number, arg2: number, arg3: number): Internal.AbstractMinecartEntity;
    }
    type MinecartElement$MinecartConstructor_ = ((arg0: Internal.World, arg1: number, arg2: number, arg3: number)=>Internal.AbstractMinecartEntity) | MinecartElement$MinecartConstructor;
    class ServerPlayerEntity extends Internal.PlayerEntity implements Internal.IContainerListener, Internal.IChunksendingPlayer {
        func_184846_L(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_175399_e(arg0: Internal.Entity): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_213850_a(arg0: Internal.SectionPos): void;
        func_71128_l(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213845_a(arg0: Internal.ChunkPos): void;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_71117_bO(): void;
        func_147099_x(): Internal.ServerStatisticsManager;
        func_71110_a(arg0: Internal.Container, arg1: Internal.NonNullList<Internal.ItemStack>): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_71112_a(arg0: Internal.Container, arg1: number, arg2: number): void;
        func_71116_b(): void;
        func_193104_a(arg0: Internal.ServerPlayerEntity, arg1: boolean): void;
        canRiderInteract(): boolean;
        func_241142_M_(): boolean;
        func_195394_a(arg0: number): void;
        func_71114_r(): string;
        func_71118_n(): void;
        func_152339_d(arg0: Internal.Entity): void;
        func_184848_d(arg0: Internal.Entity): void;
        func_200618_a(arg0: Internal.EntityAnchorArgument$Type_, arg1: Internal.Entity, arg2: Internal.EntityAnchorArgument$Type_): void;
        func_241141_L_(): Internal.RegistryKey<Internal.World>;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_241140_K_(): BlockPos;
        func_175397_a(arg0: string, arg1: string): void;
        shouldRiderSit(): boolean;
        func_143004_u(): void;
        func_110430_a(arg0: number, arg1: number, arg2: boolean, arg3: boolean): void;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_244529_Q(): Internal.IChatFilter;
        func_147096_v(): Internal.ChatVisibility;
        func_71127_g(): void;
        func_195399_b(arg0: number): void;
        func_154331_x(): number;
        func_192037_E(): Internal.ServerRecipeBook;
        func_71123_m(): void;
        func_71121_q(): Internal.ServerWorld;
        func_147100_a(arg0: Internal.CClientSettingsPacket): void;
        func_242111_a(arg0: Internal.RegistryKey<Internal.World>, arg1: BlockPos, arg2: number, arg3: boolean, arg4: boolean): void;
        func_213846_b(arg0: Internal.ServerWorld): void;
        func_192039_O(): Internal.PlayerAdvancements;
        refreshTabListName(): void;
        func_241151_a_(arg0: Internal.ITextComponent_, arg1: Internal.ChatType_, arg2: Internal.UUID): void;
        func_213844_a(arg0: Internal.ChunkPos, arg1: Internal.IPacket<any>, arg2: Internal.IPacket<any>): void;
        func_71111_a(arg0: Internal.Container, arg1: number, arg2: Internal.ItemStack): void;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        func_175398_C(): Internal.Entity;
        func_242109_L(): number;
        func_175396_E(): Internal.ITextComponent;
        getLanguage(): string;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_71113_k(): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        attachToPending(arg0: Internal.ChunkPos, arg1: Internal.IPacket<any>): boolean;
        func_193105_t(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_184850_K(): boolean;
        func_71120_a(arg0: Internal.Container): void;
        func_213842_M(): Internal.SectionPos;
        func_200619_a(arg0: Internal.ServerWorld, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        func_71122_b(arg0: number, arg1: boolean): void;
        field_71138_i: number;
        field_71136_j: boolean;
        readonly field_71133_b: Internal.MinecraftServer;
        field_184851_cj: boolean;
        readonly field_71134_c: Internal.PlayerInteractionManager;
        field_193110_cw: Vec3;
        field_71135_a: Internal.ServerPlayNetHandler;
        field_71139_cq: number;
        field_192041_cq: Internal.ServerRecipeBook;
        field_71137_h: boolean;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get language(): string;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MinecraftServer, arg1: Internal.ServerWorld, arg2: Internal.GameProfile, arg3: Internal.PlayerInteractionManager);
    }
    type ServerPlayerEntity_ = ServerPlayerEntity;
    class ItemUseContext extends Document.Object {
        func_242401_i(): Internal.BlockRayTraceResult;
        func_221532_j(): Vec3;
        func_195999_j(): Internal.PlayerEntity;
        func_221533_k(): boolean;
        func_221531_n(): Hand;
        func_195995_a(): BlockPos;
        func_195992_f(): Internal.Direction;
        func_195990_h(): number;
        func_196000_l(): Internal.Direction;
        func_195991_k(): Internal.World;
        func_225518_g_(): boolean;
        func_195996_i(): Internal.ItemStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PlayerEntity, arg1: Hand, arg2: Internal.BlockRayTraceResult);
        constructor(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: Hand, arg3: Internal.ItemStack, arg4: Internal.BlockRayTraceResult);
    }
    type ItemUseContext_ = ItemUseContext;
    class PointOfInterest extends Document.Object {
        func_218265_d(): boolean;
        func_218263_e(): boolean;
        static func_234150_a_(arg0: Internal.Runnable_): Internal.Codec<Internal.PointOfInterest>;
        func_218260_g(): Internal.PointOfInterestType;
        func_218261_f(): BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: BlockPos, arg1: Internal.PointOfInterestType, arg2: Internal.Runnable);
    }
    type PointOfInterest_ = PointOfInterest;
    class SUpdateHealthPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149331_e(): number;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149330_d(): number;
        func_149332_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type SUpdateHealthPacket_ = SUpdateHealthPacket;
    interface ByteChannel extends Internal.ReadableByteChannel, Internal.WritableByteChannel {
    }
    type ByteChannel_ = ByteChannel;
    interface Collection <E> extends Internal.Iterable<E> {
        add(arg0: E): boolean;
        spliterator(): Internal.Spliterator<E>;
        containsAll(arg0: Internal.Collection<any>): boolean;
        isEmpty(): boolean;
        clear(): void;
        remove(arg0: any): boolean;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        removeAll(arg0: Internal.Collection<any>): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<E>;
        size(): number;
        addAll(arg0: Internal.Collection<E>): boolean;
        stream(): Internal.Stream<E>;
        hashCode(): number;
        equals(arg0: any): boolean;
        toArray<T_>(arg0: T_[]): T_[];
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        toArray(): any[];
        parallelStream(): Internal.Stream<E>;
        retainAll(arg0: Internal.Collection<any>): boolean;
    }
    type Collection_<E> = Collection<E>;
    interface IFutureReloadListener$IStage {
        func_216872_a<T>(arg0: T): Internal.CompletableFuture<T>;
        (arg0: T): Internal.CompletableFuture<T>;
    }
    type IFutureReloadListener$IStage_ = ((arg0: T)=>Internal.CompletableFuture<T>) | IFutureReloadListener$IStage;
    class WitchEntity extends Internal.AbstractRaiderEntity implements Internal.IRangedAttackMob {
        shouldRiderSit(): boolean;
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        static func_234323_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_184730_o(): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_82197_f(arg0: boolean): void;
        getParts(): Internal.PartEntity<any>[];
        field_82200_e: number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.WitchEntity>, arg1: Internal.World);
    }
    type WitchEntity_ = WitchEntity;
    interface Applicative$Mu extends Internal.Functor$Mu {
    }
    type Applicative$Mu_ = Applicative$Mu;
    class CraftResultInventory extends Document.Object implements Internal.IInventory, Internal.IRecipeHolder {
        func_201560_d(arg0: Internal.PlayerEntity): void;
        func_213901_a(arg0: Internal.Item_): number;
        func_70304_b(arg0: number): Internal.ItemStack;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_174888_l(): void;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_201561_a(arg0: Internal.World, arg1: Internal.ServerPlayerEntity, arg2: Internal.IRecipe<any>): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        func_70302_i_(): number;
        func_193056_a(arg0: Internal.IRecipe<any>): void;
        func_191420_l(): boolean;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        func_193055_i(): Internal.IRecipe<any>;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_70296_d(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CraftResultInventory_ = CraftResultInventory;
    class LivingHurtEvent extends Internal.LivingEvent {
        getSource(): Internal.DamageSource;
        setAmount(arg0: number): void;
        getAmount(): number;
        get amount(): number;
        get source(): Internal.DamageSource;
        set amount(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.DamageSource, arg2: number);
    }
    type LivingHurtEvent_ = LivingHurtEvent;
    interface ModifierSource {
        canApplySource(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): boolean;
        getProviderName(): ResourceLocation;
        isEqual(arg0: Internal.ModifierSource): boolean;
        onRemove(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): void;
        onApply(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): void;
    }
    type ModifierSource_ = ModifierSource;
    class BufferSlice extends Document.Object {
        static pack(start: number, len: number): number;
        static unpackStart(slice: number): number;
        static unpackLength(slice: number): number;
        readonly len: number;
        readonly start: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(start: number, len: number);
    }
    type BufferSlice_ = BufferSlice;
    class ItemRenderer extends Document.Object implements Internal.IResourceManagerReloadListener {
        func_229111_a_(arg0: Internal.ItemStack, arg1: Internal.ItemCameraTransforms$TransformType_, arg2: boolean, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer_, arg5: number, arg6: number, arg7: Internal.IBakedModel): void;
        func_229109_a_(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: Internal.ItemCameraTransforms$TransformType_, arg3: boolean, arg4: Internal.MatrixStack, arg5: Internal.IRenderTypeBuffer_, arg6: Internal.World, arg7: number, arg8: number): void;
        static func_229113_a_(arg0: Internal.IRenderTypeBuffer_, arg1: Internal.RenderType, arg2: boolean, arg3: boolean): Internal.IVertexBuilder;
        static func_241731_a_(arg0: Internal.IRenderTypeBuffer_, arg1: Internal.RenderType, arg2: Internal.MatrixStack$Entry): Internal.IVertexBuilder;
        func_181565_a(arg0: Internal.BufferBuilder, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): void;
        func_239390_c_(arg0: Internal.ItemStack, arg1: number, arg2: number): void;
        func_180453_a(arg0: Internal.FontRenderer, arg1: Internal.ItemStack, arg2: number, arg3: number, arg4: string): void;
        func_180450_b(arg0: Internal.ItemStack, arg1: number, arg2: number): void;
        static func_241732_b_(arg0: Internal.IRenderTypeBuffer_, arg1: Internal.RenderType, arg2: Internal.MatrixStack$Entry): Internal.IVertexBuilder;
        func_175042_a(arg0: Internal.ItemStack, arg1: number, arg2: number): void;
        func_175037_a(): Internal.ItemModelMesher;
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage_, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        getResourceType(): Internal.IResourceType;
        handler$bca000$onRenderItem(arg0: Internal.ItemStack, arg1: Internal.ItemCameraTransforms$TransformType_, arg2: boolean, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer_, arg5: number, arg6: number, arg7: Internal.IBakedModel, arg8: Internal.CallbackInfo): void;
        func_229110_a_(arg0: Internal.ItemStack, arg1: Internal.ItemCameraTransforms$TransformType_, arg2: number, arg3: number, arg4: Internal.MatrixStack, arg5: Internal.IRenderTypeBuffer_): void;
        func_229112_a_(matrices: Internal.MatrixStack, vertexConsumer: Internal.IVertexBuilder, quads: Internal.List<any>, stack: Internal.ItemStack, light: number, overlay: number): void;
        func_191962_a(arg0: Internal.ItemStack, arg1: number, arg2: number, arg3: Internal.IBakedModel): void;
        func_225594_i_(): string;
        func_175030_a(arg0: Internal.FontRenderer, arg1: Internal.ItemStack, arg2: number, arg3: number): void;
        func_184391_a(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: number, arg3: number): void;
        static func_239391_c_(arg0: Internal.IRenderTypeBuffer_, arg1: Internal.RenderType, arg2: boolean, arg3: boolean): Internal.IVertexBuilder;
        func_229114_a_(model: Internal.IBakedModel, stack: Internal.ItemStack, light: number, overlay: number, matrices: Internal.MatrixStack, vertices: Internal.IVertexBuilder): void;
        func_184393_a(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.LivingEntity): Internal.IBakedModel;
        handler$chd000$renderQuads(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.List<any>, arg3: Internal.ItemStack, arg4: number, arg5: number, arg6: Internal.CallbackInfo): void;
        static func_239386_a_(arg0: Internal.IRenderTypeBuffer_, arg1: Internal.RenderType, arg2: boolean, arg3: boolean): Internal.IVertexBuilder;
        getItemColors(): Internal.ItemColors;
        field_77023_b: number;
        readonly field_184395_f: Internal.ItemColors;
        readonly field_175057_n: Internal.TextureManager;
        static readonly field_110798_h: ResourceLocation;
        get itemColors(): Internal.ItemColors;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TextureManager, arg1: Internal.ModelManager, arg2: Internal.ItemColors);
    }
    type ItemRenderer_ = ItemRenderer;
    class MinecraftGame extends Document.Object implements Internal.RunningGame {
        func_216815_b(): void;
        getVersion(): Internal.GameVersion;
        getSelectedLanguage(): Internal.Language;
        setSessionEventListener(arg0: Internal.SessionEventListener): void;
        func_216814_a(): void;
        getCurrentSession(): Internal.GameSession;
        getPerformanceMetrics(): Internal.PerformanceMetrics;
        get currentSession(): Internal.GameSession;
        get selectedLanguage(): Internal.Language;
        get performanceMetrics(): Internal.PerformanceMetrics;
        get version(): Internal.GameVersion;
        set sessionEventListener(arg0: Internal.SessionEventListener);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type MinecraftGame_ = MinecraftGame;
    interface IGuiFluidStackGroup extends Internal.IGuiIngredientGroup<Internal.FluidStack> {
        init(arg0: number, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: Internal.IDrawable): void;
        set(arg0: number, arg1: any): void;
        set(arg0: number, arg1: Internal.FluidStack): void;
        addTooltipCallback(arg0: Internal.ITooltipCallback_<Internal.FluidStack_>): void;
    }
    type IGuiFluidStackGroup_ = IGuiFluidStackGroup;
    interface ExtendedRepairContainer {
        be_getRecipes(): Internal.List<Internal.AnvilSmithingRecipe>;
        be_getCurrentRecipe(): Internal.AnvilSmithingRecipe;
        be_nextRecipe(): void;
        be_previousRecipe(): void;
        be_updateCurrentRecipe(arg0: Internal.AnvilSmithingRecipe): void;
    }
    type ExtendedRepairContainer_ = ExtendedRepairContainer;
    interface UnionLayout extends Internal.GroupLayout {
        withName(arg0: string): Internal.GroupLayout;
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.UnionLayout;
        withoutName(): Internal.GroupLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.UnionLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.UnionLayout;
        withByteAlignment(arg0: number): Internal.GroupLayout;
    }
    type UnionLayout_ = UnionLayout;
    class TileEntityType <T> extends Internal.ForgeRegistryEntry<Internal.TileEntityType<any>> implements Internal.BlockEntityTypeAccess, Internal.TileTypeAccess {
        func_226986_a_(arg0: Internal.IBlockReader, arg1: BlockPos): T;
        static func_200969_a(arg0: Internal.TileEntityType_<any>): ResourceLocation;
        func_200968_a(): T;
        func_223045_a(arg0: Internal.Block_): boolean;
        setValidBlocks(arg0: Internal.Set<any>): void;
        setRegistryName(arg0: ResourceLocation_): any;
        getTags(): Internal.Set<ResourceLocation>;
        isIn(arg0: Internal.ITag<Internal.TileEntityType<any>>): boolean;
        getValidBlocks(): Internal.Set<any>;
        field_200995_z: java_.util.function_.Supplier<T>;
        static readonly field_200994_y: Internal.TileEntityType<Internal.BedTileEntity>;
        static readonly field_222488_F: Internal.TileEntityType<Internal.CampfireTileEntity>;
        static readonly field_200987_r: Internal.TileEntityType<Internal.HopperTileEntity>;
        static readonly field_222487_E: Internal.TileEntityType<Internal.JigsawTileEntity>;
        static readonly field_200986_q: Internal.TileEntityType<Internal.DaylightDetectorTileEntity>;
        static readonly field_222486_D: Internal.TileEntityType<Internal.BellTileEntity>;
        static readonly field_200985_p: Internal.TileEntityType<Internal.SkullTileEntity>;
        static readonly field_222485_C: Internal.TileEntityType<Internal.LecternTileEntity>;
        static readonly field_200984_o: Internal.TileEntityType<Internal.BeaconTileEntity>;
        static readonly field_222484_B: Internal.TileEntityType<Internal.BlastFurnaceTileEntity>;
        static readonly field_200983_n: Internal.TileEntityType<Internal.EndPortalTileEntity>;
        static readonly field_200982_m: Internal.TileEntityType<Internal.EnchantingTableTileEntity>;
        static readonly field_222483_A: Internal.TileEntityType<Internal.SmokerTileEntity>;
        static readonly field_200981_l: Internal.TileEntityType<Internal.BrewingStandTileEntity>;
        static readonly field_222489_z: Internal.TileEntityType<Internal.BarrelTileEntity>;
        static readonly field_200980_k: Internal.TileEntityType<Internal.PistonTileEntity>;
        static readonly field_205166_z: Internal.TileEntityType<Internal.ConduitTileEntity>;
        static readonly field_200974_e: Internal.TileEntityType<Internal.EnderChestTileEntity>;
        static readonly field_200973_d: Internal.TileEntityType<Internal.TrappedChestTileEntity>;
        static readonly field_200972_c: Internal.TileEntityType<Internal.ChestTileEntity>;
        static readonly field_200971_b: Internal.TileEntityType<Internal.FurnaceTileEntity>;
        static readonly field_226985_G_: Internal.TileEntityType<Internal.BeehiveTileEntity>;
        static readonly field_200989_t: Internal.TileEntityType<Internal.BannerTileEntity>;
        static readonly field_200988_s: Internal.TileEntityType<Internal.ComparatorTileEntity>;
        static readonly field_200993_x: Internal.TileEntityType<Internal.ShulkerBoxTileEntity>;
        static readonly field_200992_w: Internal.TileEntityType<Internal.CommandBlockTileEntity>;
        static readonly field_200991_v: Internal.TileEntityType<Internal.EndGatewayTileEntity>;
        static readonly field_200990_u: Internal.TileEntityType<Internal.StructureBlockTileEntity>;
        static readonly field_200979_j: Internal.TileEntityType<Internal.MobSpawnerTileEntity>;
        field_223046_I: Internal.Set<Internal.Block>;
        static readonly field_200978_i: Internal.TileEntityType<Internal.SignTileEntity>;
        static readonly field_200977_h: Internal.TileEntityType<Internal.DropperTileEntity>;
        static readonly field_200976_g: Internal.TileEntityType<Internal.DispenserTileEntity>;
        static readonly field_200975_f: Internal.TileEntityType<Internal.JukeboxTileEntity>;
        get tags(): Internal.Set<ResourceLocation>;
        get validBlocks(): Internal.Set<any>;
        set registryName(arg0: ResourceLocation_);
        set validBlocks(arg0: Internal.Set<any>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: java_.util.function_.Supplier<T>, arg1: Internal.Set<Internal.Block>, arg2: com.mojang.datafixers.types.Type<any>);
    }
    type TileEntityType_<T> = Registry.minecraft.block_entity_type | TileEntityType<T>;
    class ServerData extends Document.Object implements Internal.ServerDataExtras {
        func_152584_a(arg0: Internal.ServerData$ServerResourceMode_): void;
        getAllowCustomScreenshot(): boolean;
        func_152586_b(): Internal.ServerData$ServerResourceMode;
        static func_78837_a(arg0: Internal.CompoundNBT_): Internal.ServerData;
        func_147407_a(arg0: string): void;
        func_181041_d(): boolean;
        func_78836_a(): Internal.CompoundNBT;
        func_147409_e(): string;
        func_152583_a(arg0: Internal.ServerData): void;
        setAllowCustomScreenshots(arg0: boolean): void;
        field_78845_b: string;
        field_78843_d: Internal.ITextComponent;
        field_78841_f: boolean;
        field_78847_a: string;
        field_82821_f: number;
        field_78846_c: Internal.ITextComponent;
        field_78844_e: number;
        forgeData: Internal.ExtendedServerListData;
        field_82822_g: Internal.ITextComponent;
        field_147412_i: Internal.List<Internal.ITextComponent>;
        get allowCustomScreenshot(): boolean;
        set allowCustomScreenshots(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: string, arg2: boolean);
    }
    type ServerData_ = ServerData;
    class TopSolidRangeConfig extends Document.Object implements Internal.IPlacementConfig {
        readonly field_242813_c: number;
        readonly field_242814_d: number;
        readonly field_242815_e: number;
        static readonly field_236985_a_: Internal.Codec<Internal.TopSolidRangeConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type TopSolidRangeConfig_ = TopSolidRangeConfig;
    interface IPackFinder {
        func_230230_a_(arg0: Internal.Consumer_<Internal.ResourcePackInfo_>, arg1: Internal.ResourcePackInfo$IFactory_): void;
        (arg0: Internal.Consumer<Internal.ResourcePackInfo>, arg1: Internal.ResourcePackInfo$IFactory): void;
    }
    type IPackFinder_ = ((arg0: Internal.Consumer<Internal.ResourcePackInfo>, arg1: Internal.ResourcePackInfo$IFactory)=>void) | IPackFinder;
    interface BufferVertexFormat {
        getStride(): number;
        (): number;
    }
    type BufferVertexFormat_ = (()=>number) | BufferVertexFormat;
    class File extends Document.Object implements Internal.Serializable, Internal.Comparable<Internal.File> {
        getUsableSpace(): number;
        static listRoots(): Internal.File[];
        renameTo(arg0: Internal.File): boolean;
        getName(): string;
        setExecutable(arg0: boolean, arg1: boolean): boolean;
        setExecutable(arg0: boolean): boolean;
        canRead(): boolean;
        getCanonicalFile(): Internal.File;
        compareTo(arg0: Internal.File): number;
        compareTo(arg0: any): number;
        delete(): boolean;
        setReadable(arg0: boolean, arg1: boolean): boolean;
        setReadable(arg0: boolean): boolean;
        getTotalSpace(): number;
        getParentFile(): Internal.File;
        getPath(): string;
        getAbsoluteFile(): Internal.File;
        listFiles(arg0: Internal.FileFilter_): Internal.File[];
        listFiles(arg0: Internal.FilenameFilter_): Internal.File[];
        listFiles(): Internal.File[];
        mkdir(): boolean;
        deleteOnExit(): void;
        canExecute(): boolean;
        getCanonicalPath(): string;
        toURL(): Internal.URL;
        getParent(): string;
        setWritable(arg0: boolean): boolean;
        setWritable(arg0: boolean, arg1: boolean): boolean;
        isFile(): boolean;
        getAbsolutePath(): string;
        toURI(): Internal.URI;
        getFreeSpace(): number;
        length(): number;
        canWrite(): boolean;
        static createTempFile(arg0: string, arg1: string): Internal.File;
        static createTempFile(arg0: string, arg1: string, arg2: Internal.File): Internal.File;
        list(): string[];
        list(arg0: Internal.FilenameFilter_): string[];
        isHidden(): boolean;
        toPath(): Internal.Path;
        mkdirs(): boolean;
        exists(): boolean;
        isAbsolute(): boolean;
        lastModified(): number;
        createNewFile(): boolean;
        setLastModified(arg0: number): boolean;
        isDirectory(): boolean;
        setReadOnly(): boolean;
        static readonly pathSeparator: ";";
        static readonly pathSeparatorChar: ";";
        static readonly separatorChar: "\\";
        static readonly separator: "\\";
        get parent(): string;
        get parentFile(): Internal.File;
        get hidden(): boolean;
        get freeSpace(): number;
        get usableSpace(): number;
        get totalSpace(): number;
        get canonicalFile(): Internal.File;
        get directory(): boolean;
        get path(): string;
        get absoluteFile(): Internal.File;
        get file(): boolean;
        get absolute(): boolean;
        get name(): string;
        get canonicalPath(): string;
        get absolutePath(): string;
        set readable(arg0: boolean);
        set executable(arg0: boolean);
        set writable(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor(arg0: string, arg1: string);
        constructor(arg0: Internal.URI);
        constructor(arg0: Internal.File, arg1: string);
    }
    type File_ = File;
    class CowEntity extends Internal.AnimalEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        static func_234188_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.CowEntity;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.CowEntity>, arg1: Internal.World);
    }
    type CowEntity_ = CowEntity;
    class BlockBuilder extends Internal.BuilderBase {
        noItem(): Internal.BlockBuilder;
        suffocating(b: boolean): Internal.BlockBuilder;
        waterlogged(): Internal.BlockBuilder;
        color(index: number, c: number): Internal.BlockBuilder;
        textureAll(tex: string): Internal.BlockBuilder;
        tagBlockAndItem(tag: string): Internal.BlockBuilder;
        box(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number, scale16: boolean): Internal.BlockBuilder;
        box(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number): Internal.BlockBuilder;
        viewBlocking(b: boolean): Internal.BlockBuilder;
        type(t: Internal.BlockType): Internal.BlockBuilder;
        transparent(b: boolean): Internal.BlockBuilder;
        fullBlock(f: boolean): Internal.BlockBuilder;
        createProperties(): Internal.AbstractBlock$Properties;
        notSolid(): Internal.BlockBuilder;
        noCollission(): Internal.BlockBuilder;
        unbreakable(): Internal.BlockBuilder;
        requiresTool(f: boolean): Internal.BlockBuilder;
        model(m: string): Internal.BlockBuilder;
        tag(tag: string): Internal.BlockBuilder;
        renderType(l: string): Internal.BlockBuilder;
        jumpFactor(f: number): Internal.BlockBuilder;
        createShape(): Internal.VoxelShape;
        defaultCutout(): Internal.BlockBuilder;
        item(i: Internal.Consumer_<Internal.BlockItemBuilder_>): Internal.BlockBuilder;
        opaque(o: boolean): Internal.BlockBuilder;
        randomTick(randomTickCallback: Internal.Consumer_<Internal.RandomTickCallbackJS_>): Internal.BlockBuilder;
        texture(id: string, tex: string): Internal.BlockBuilder;
        texture(tex: string): Internal.BlockBuilder;
        noDrops(): Internal.BlockBuilder;
        speedFactor(f: number): Internal.BlockBuilder;
        noValidSpawns(b: boolean): Internal.BlockBuilder;
        resistance(r: number): Internal.BlockBuilder;
        hardness(h: number): Internal.BlockBuilder;
        lightLevel(light: number): Internal.BlockBuilder;
        defaultTranslucent(): Internal.BlockBuilder;
        shapeCube(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number): Internal.BlockBuilder;
        material(m: Internal.MaterialJS_): Internal.BlockBuilder;
        slipperiness(f: number): Internal.BlockBuilder;
        redstoneConductor(b: boolean): Internal.BlockBuilder;
        harvestTool(tool: ToolType, level: number): Internal.BlockBuilder;
        textureSide(direction: Internal.Direction_, tex: string): Internal.BlockBuilder;
        readonly textures: Internal.JsonObject;
        defaultTags: Internal.Set<string>;
        static current: Internal.BlockBuilder;
        lootTable: Internal.Consumer<Internal.LootBuilder>;
        modelJson: Internal.JsonObject;
        blockstateJson: Internal.JsonObject;
        block: Internal.Block;
        customShape: Internal.List<Internal.AxisAlignedBB>;
        itemBuilder: Internal.BlockItemBuilder;
        harvestLevel: number;
        randomTickCallback: Internal.Consumer<Internal.RandomTickCallbackJS>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(i: string);
    }
    type BlockBuilder_ = BlockBuilder;
    class EffectType extends Internal.Enum<Internal.EffectType> {
        func_220306_a(): Internal.TextFormatting;
        static valueOf(arg0: string): Internal.EffectType;
        static values(): Internal.EffectType[];
        static readonly HARMFUL: Internal.EffectType;
        static readonly BENEFICIAL: Internal.EffectType;
        static readonly NEUTRAL: Internal.EffectType;
    }
    type EffectType_ = "beneficial" | "harmful" | "neutral" | EffectType;
    interface IItemHandler {
        extractItem(arg0: number, arg1: number, arg2: boolean): Internal.ItemStack;
        getSlotLimit(arg0: number): number;
        isItemValid(arg0: number, arg1: Internal.ItemStack): boolean;
        getStackInSlot(arg0: number): Internal.ItemStack;
        getSlots(): number;
        insertItem(arg0: number, arg1: Internal.ItemStack, arg2: boolean): Internal.ItemStack;
    }
    type IItemHandler_ = IItemHandler;
    class PlayerEvent$PlayerLoggedInEvent extends Internal.PlayerEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PlayerEntity);
        constructor();
    }
    type PlayerEvent$PlayerLoggedInEvent_ = PlayerEvent$PlayerLoggedInEvent;
    class WorldEvent$Load extends Internal.WorldEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IWorld);
        constructor();
    }
    type WorldEvent$Load_ = WorldEvent$Load;
    class PackCompatibility extends Internal.Enum<Internal.PackCompatibility> {
        func_198967_b(): Internal.ITextComponent;
        func_198968_a(): boolean;
        static valueOf(arg0: string): Internal.PackCompatibility;
        static func_198969_a(arg0: number): Internal.PackCompatibility;
        static values(): Internal.PackCompatibility[];
        func_198971_c(): Internal.ITextComponent;
        static readonly TOO_OLD: Internal.PackCompatibility;
        static readonly COMPATIBLE: Internal.PackCompatibility;
        static readonly TOO_NEW: Internal.PackCompatibility;
    }
    type PackCompatibility_ = "too_old" | "too_new" | "compatible" | PackCompatibility;
    interface ObjectSet <K> extends Internal.ObjectCollection<K>, Internal.Set<K> {
        iterator(): Internal.ObjectIterator<K>;
        iterator(): Internal.Iterator<any>;
        (): Internal.ObjectIterator<K>;
    }
    type ObjectSet_<K> = (()=>Internal.ObjectIterator<K>) | ObjectSet<K>;
    interface ExplosionAccess {
    }
    type ExplosionAccess_ = ExplosionAccess;
    interface DimensionStructuresSettingsAccess {
    }
    type DimensionStructuresSettingsAccess_ = DimensionStructuresSettingsAccess;
    interface Readable {
        read(arg0: Internal.CharBuffer): number;
        (arg0: Internal.CharBuffer): number;
    }
    type Readable_ = ((arg0: Internal.CharBuffer)=>number) | Readable;
    class LockCode extends Document.Object {
        func_180157_a(arg0: Internal.CompoundNBT_): void;
        func_219964_a(arg0: Internal.ItemStack): boolean;
        static func_180158_b(arg0: Internal.CompoundNBT_): Internal.LockCode;
        static readonly field_180162_a: Internal.LockCode;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type LockCode_ = LockCode;
    interface EntityLightSampler <T> {
        bridge$getBlockLight(arg0: T, arg1: BlockPos): number;
        bridge$getSkyLight(arg0: T, arg1: BlockPos): number;
    }
    type EntityLightSampler_<T> = EntityLightSampler<T>;
    abstract class AbstractObject2ObjectMap <K, V> extends Internal.AbstractObject2ObjectFunction<K, V> implements Internal.Object2ObjectMap<K, V>, Internal.Serializable {
        object2ObjectEntrySet(): Internal.ObjectSet<Internal.Object2ObjectMap$Entry<K, V>>;
        getOrDefault(arg0: any, arg1: V): V;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<K, V>>;
        entrySet(): Internal.Set<any>;
        apply(arg0: K): V;
        forEach(arg0: Internal.BiConsumer_<K, V>): void;
        computeIfAbsent(arg0: K, arg1: Internal.Function_<K, V>): V;
        values(): Internal.ObjectCollection<V>;
        values(): Internal.Collection<any>;
        replace(arg0: K, arg1: V, arg2: V): boolean;
        replace(arg0: K, arg1: V): V;
        clear(): void;
        isEmpty(): boolean;
        replaceAll(arg0: Internal.BiFunction_<K, V, V>): void;
        andThen<V_>(arg0: Internal.Function_<V, V_>): Internal.Function<K, V_>;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: any, arg1: any): boolean;
        containsValue(arg0: any): boolean;
        compute(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        computeIfPresent(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        compose<V_>(arg0: Internal.Function_<V_, K>): Internal.Function<V_, V>;
        merge(arg0: K, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        get(arg0: any): V;
        putAll(arg0: Internal.Map_<K, V>): void;
        putIfAbsent(arg0: K, arg1: V): V;
        keySet(): Internal.ObjectSet<K>;
        keySet(): Internal.Set<any>;
        get empty(): boolean;
    }
    type AbstractObject2ObjectMap_<K, V> = AbstractObject2ObjectMap<K, V>;
    class OxidizingRecipeJS extends Internal.MekanismRecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type OxidizingRecipeJS_ = OxidizingRecipeJS;
    class EventJS extends Document.Object {
        cancel(): void;
        isCancelled(): boolean;
        post(t: Internal.ScriptType_, id: string, sub: string): boolean;
        post(t: Internal.ScriptType_, id: string): boolean;
        canCancel(): boolean;
        get cancelled(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EventJS_ = EventJS;
    class MuleEntity extends Internal.DyingChestedHorseEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        formatLoc(arg0: Vec3): string;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.MuleEntity>, arg1: Internal.World);
    }
    type MuleEntity_ = MuleEntity;
    class ConfigLoadedEvent extends net.minecraftforge.eventbus.api.Event {
        isClientConfig(): boolean;
        getConfigClass(): Internal.Class<any>;
        getConfigId(): ResourceLocation;
        getReason(): Internal.ConfigLoadedEvent$LoadReason;
        getPath(): Internal.Path;
        get reason(): Internal.ConfigLoadedEvent$LoadReason;
        get path(): Internal.Path;
        get configId(): ResourceLocation;
        get configClass(): Internal.Class<any>;
        get clientConfig(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: ResourceLocation, arg1: Internal.Class<any>, arg2: Internal.ConfigLoadedEvent$LoadReason, arg3: boolean, arg4: Internal.Path);
    }
    type ConfigLoadedEvent_ = ConfigLoadedEvent;
    interface WorldDecoratingHelperAccess {
        getLevel(): Internal.ISeedReader;
        getGenerator(): Internal.ChunkGenerator;
    }
    type WorldDecoratingHelperAccess_ = WorldDecoratingHelperAccess;
    interface VSPartAccess {
        getZSize(): number;
        getYSize(): number;
        getXSize(): number;
    }
    type VSPartAccess_ = VSPartAccess;
    interface ShortListIterator extends Internal.ShortBidirectionalIterator, Internal.ListIterator<number> {
        next(): any;
        next(): number;
        add(arg0: number): void;
        add(arg0: any): void;
        add(arg0: number): void;
        set(arg0: any): void;
        set(arg0: number): void;
        set(arg0: number): void;
        previous(): any;
        previous(): number;
        remove(): void;
    }
    type ShortListIterator_ = ShortListIterator;
    class LivingDropsEvent extends Internal.LivingEvent {
        getLootingLevel(): number;
        getSource(): Internal.DamageSource;
        getDrops(): Internal.Collection<Internal.ItemEntity>;
        isRecentlyHit(): boolean;
        get drops(): Internal.Collection<Internal.ItemEntity>;
        get recentlyHit(): boolean;
        get lootingLevel(): number;
        get source(): Internal.DamageSource;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.DamageSource, arg2: Internal.Collection<Internal.ItemEntity>, arg3: number, arg4: boolean);
    }
    type LivingDropsEvent_ = LivingDropsEvent;
    class HopperMinecartEntity extends Internal.ContainerMinecartEntity implements Internal.IHopper {
        canBeRidden(): boolean;
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_96108_aC(): number;
        func_145831_w(): Internal.World;
        func_200100_i(): Internal.VoxelShape;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_96111_ay(): boolean;
        shouldDoRailFunctions(): boolean;
        func_98042_n(arg0: number): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        isPoweredCart(): boolean;
        func_96109_aB(): number;
        func_96112_aD(): boolean;
        func_96107_aA(): number;
        func_98043_aE(): boolean;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_213901_a(arg0: Internal.Item_): number;
        func_213968_a(arg0: number, arg1: Internal.PlayerInventory): Internal.Container;
        hasCooldown(): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        isMultipartEntity(): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_96110_f(arg0: boolean): void;
        getEntity(): Internal.Entity;
        getComparatorLevel(): number;
        getCurrentRailPosition(): BlockPos;
        asKJS(): any;
        getCartItem(): Internal.ItemStack;
        canRiderInteract(): boolean;
        getMinecart(): Internal.AbstractMinecartEntity;
        getSlopeAdjustment(): number;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getMaxCartSpeedOnRail(): number;
        get minecart(): Internal.AbstractMinecartEntity;
        get currentRailPosition(): BlockPos;
        get slopeAdjustment(): number;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get poweredCart(): boolean;
        get comparatorLevel(): number;
        get cartItem(): Internal.ItemStack;
        get maxCartSpeedOnRail(): number;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.HopperMinecartEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
    }
    type HopperMinecartEntity_ = HopperMinecartEntity;
    interface DrawCommandList extends Internal.AutoCloseable {
        multiDrawArrays(arg0: Internal.IntBuffer, arg1: Internal.IntBuffer): void;
        flush(): void;
        endTessellating(): void;
        multiDrawArraysIndirect(arg0: number, arg1: number, arg2: number): void;
        close(): void;
    }
    type DrawCommandList_ = DrawCommandList;
    class URL extends Document.Object implements Internal.Serializable {
        static setURLStreamHandlerFactory(arg0: Internal.URLStreamHandlerFactory_): void;
        getDefaultPort(): number;
        openConnection(): Internal.URLConnection;
        openConnection(arg0: Internal.Proxy): Internal.URLConnection;
        toURI(): Internal.URI;
        getContent(): any;
        getContent(arg0: Internal.Class<any>[]): any;
        getProtocol(): string;
        getAuthority(): string;
        getFile(): string;
        openStream(): Internal.InputStream;
        toExternalForm(): string;
        getPort(): number;
        getRef(): string;
        sameFile(arg0: Internal.URL): boolean;
        static of(arg0: Internal.URI, arg1: Internal.URLStreamHandler): Internal.URL;
        getPath(): string;
        getUserInfo(): string;
        getQuery(): string;
        getHost(): string;
        get defaultPort(): number;
        get path(): string;
        get userInfo(): string;
        get protocol(): string;
        get ref(): string;
        get file(): string;
        get port(): number;
        get authority(): string;
        get query(): string;
        get host(): string;
        get content(): any;
        set uRLStreamHandlerFactory(arg0: Internal.URLStreamHandlerFactory_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.URL, arg1: string, arg2: Internal.URLStreamHandler);
        constructor(arg0: Internal.URL, arg1: string);
        constructor(arg0: string);
        constructor(arg0: string, arg1: string, arg2: number, arg3: string);
        constructor(arg0: string, arg1: string, arg2: string);
        constructor(arg0: string, arg1: string, arg2: number, arg3: string, arg4: Internal.URLStreamHandler);
    }
    type URL_ = URL;
    class STBTTFontinfo$Buffer extends Internal.StructBuffer<Internal.STBTTFontinfo, Internal.STBTTFontinfo$Buffer> implements Internal.NativeResource {
        close(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
        constructor(arg0: Internal.ByteBuffer);
    }
    type STBTTFontinfo$Buffer_ = STBTTFontinfo$Buffer;
    class VexEntity extends Internal.MonsterEntity {
        shouldRiderSit(): boolean;
        func_190651_g(arg0: BlockPos): void;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_190648_a(arg0: boolean): void;
        func_190658_a(arg0: Internal.MobEntity): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_190653_a(arg0: number): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_190647_dj(): boolean;
        func_190646_di(): BlockPos;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        static func_234321_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_190645_o(): Internal.MobEntity;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.VexEntity>, arg1: Internal.World);
    }
    type VexEntity_ = VexEntity;
    class ParticleManager extends Document.Object implements Internal.IFutureReloadListener, Internal.ParticleEngineAccessor, Internal.ParticleManagerAccess {
        func_78870_a(arg0: Internal.ClientWorld): void;
        func_199281_a(arg0: Internal.Entity, arg1: Internal.IParticleData, arg2: number): void;
        func_199280_a(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.Particle;
        func_225594_i_(): string;
        func_199283_a<T_>(arg0: Internal.ParticleType_<T_>, arg1: Internal.IParticleFactory_<T_>): void;
        handler$cmm000$renderParticles(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer$Impl, arg2: Internal.LightTexture, arg3: Internal.ActiveRenderInfo, arg4: number, arg5: Internal.ClippingHelper, arg6: Internal.CallbackInfo): void;
        getTextureAtlas(): Internal.AtlasTexture;
        func_199282_a(arg0: Internal.Entity, arg1: Internal.IParticleData): void;
        func_78873_a(arg0: Internal.Particle): void;
        renderParticles(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer$Impl, arg2: Internal.LightTexture, arg3: Internal.ActiveRenderInfo, arg4: number, arg5: Internal.ClippingHelper): void;
        func_215234_a<T_>(arg0: Internal.ParticleType_<T_>, arg1: Internal.ParticleManager$IParticleMetaFactory_<T_>): void;
        func_215232_a(): void;
        func_78869_b(): string;
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage_, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        func_78868_a(): void;
        addBlockHitEffects(arg0: BlockPos, arg1: Internal.BlockRayTraceResult): void;
        invokeMakeParticle(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.Particle;
        func_228345_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer$Impl, arg2: Internal.LightTexture, arg3: Internal.ActiveRenderInfo, arg4: number): void;
        func_180533_a(arg0: BlockPos, arg1: Internal.BlockState): void;
        func_180532_a(arg0: BlockPos, arg1: Internal.Direction_): void;
        get textureAtlas(): Internal.AtlasTexture;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ClientWorld, arg1: Internal.TextureManager);
    }
    type ParticleManager_ = ParticleManager;
    class RenderGameOverlayEvent extends net.minecraftforge.eventbus.api.Event {
        getWindow(): Internal.MainWindow;
        getType(): Internal.RenderGameOverlayEvent$ElementType;
        getPartialTicks(): number;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get window(): Internal.MainWindow;
        get type(): Internal.RenderGameOverlayEvent$ElementType;
        get partialTicks(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MatrixStack, arg1: number, arg2: Internal.MainWindow);
    }
    type RenderGameOverlayEvent_ = RenderGameOverlayEvent;
    class CommandDispatcher <S> extends Document.Object {
        getSmartUsage(arg0: Internal.CommandNode<S>, arg1: S): Internal.Map<Internal.CommandNode<S>, string>;
        findAmbiguities(arg0: Internal.AmbiguityConsumer_<S>): void;
        setConsumer(arg0: Internal.ResultConsumer_<S>): void;
        getCompletionSuggestions(arg0: Internal.ParseResults<S>, arg1: number): Internal.CompletableFuture<Internal.Suggestions>;
        getCompletionSuggestions(arg0: Internal.ParseResults<S>): Internal.CompletableFuture<Internal.Suggestions>;
        getPath(arg0: Internal.CommandNode<S>): Internal.Collection<string>;
        getAllUsage(arg0: Internal.CommandNode<S>, arg1: S, arg2: boolean): string[];
        findNode(arg0: Internal.Collection<string>): Internal.CommandNode<S>;
        parse(arg0: Internal.StringReader, arg1: S): Internal.ParseResults<S>;
        parse(arg0: string, arg1: S): Internal.ParseResults<S>;
        getRoot(): Internal.RootCommandNode<S>;
        execute(arg0: Internal.ParseResults<S>): number;
        execute(arg0: Internal.StringReader, arg1: S): number;
        execute(arg0: string, arg1: S): number;
        register(arg0: Internal.LiteralArgumentBuilder<S>): Internal.LiteralCommandNode<S>;
        static readonly ARGUMENT_SEPARATOR: " ";
        static readonly ARGUMENT_SEPARATOR_CHAR: " ";
        get root(): Internal.RootCommandNode<S>;
        set consumer(arg0: Internal.ResultConsumer_<S>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.RootCommandNode<S>);
        constructor();
    }
    type CommandDispatcher_<S> = CommandDispatcher<S>;
    class NarratorStatus extends Internal.Enum<Internal.NarratorStatus> {
        func_238233_b_(): Internal.ITextComponent;
        static func_216825_a(arg0: number): Internal.NarratorStatus;
        static valueOf(arg0: string): Internal.NarratorStatus;
        func_216827_a(): number;
        static values(): Internal.NarratorStatus[];
        static readonly SYSTEM: Internal.NarratorStatus;
        static readonly ALL: Internal.NarratorStatus;
        static readonly CHAT: Internal.NarratorStatus;
        static readonly OFF: Internal.NarratorStatus;
    }
    type NarratorStatus_ = "off" | "all" | "chat" | "system" | NarratorStatus;
    /**
    */
    class RecipeEventJS extends Internal.EventJS {
        printTypes(): void;
        getRecipeFunction(id: string): Internal.RecipeFunction;
        custom(o: any): Internal.RecipeJS;
        forEachRecipe(filter: Internal.RecipeFilter_, consumer: Internal.Consumer_<any>): void;
        countRecipes(filter: Internal.RecipeFilter_): number;
        forEachRecipeAsync(filter: Internal.RecipeFilter_, consumer: Internal.Consumer_<Internal.RecipeJS_>): void;
        remove(filter: Internal.RecipeFilter_): number;
        printExamples(type: string): void;
        addRecipe(r: Internal.RecipeJS, type: Internal.RecipeTypeJS, args1: Internal.ListJS): Internal.RecipeJS;
        replaceOutput(ingredient: Internal.IngredientJS_, with_: Internal.ItemStackJS_): number;
        replaceOutput(filter: Internal.RecipeFilter_, ingredient: Internal.IngredientJS_, with_: Internal.ItemStackJS_): number;
        replaceOutput(filter: Internal.RecipeFilter_, ingredient: Internal.IngredientJS_, with_: Internal.ItemStackJS_, exact: boolean): number;
        stage(filter: Internal.RecipeFilter_, stage: string): void;
        replaceInput(filter: Internal.RecipeFilter_, ingredient: Internal.IngredientJS_, with_: Internal.IngredientJS_, exact: boolean): number;
        replaceInput(ingredient: Internal.IngredientJS_, with_: Internal.IngredientJS_): number;
        replaceInput(filter: Internal.RecipeFilter_, ingredient: Internal.IngredientJS_, with_: Internal.IngredientJS_): number;
        printAllTypes(): void;
        customFilter(filter: Internal.RecipeFilter_): Internal.RecipeFilter;
        /**
        * Holds all the recipes collected by ProbeJS.
        */
        getRecipes(): Document.RecipeHolder;
        setItemErrors(b: boolean): void;
        static instance: Internal.RecipeEventJS;
        static readonly FORGE_CONDITIONAL: "forge:conditional";
        static customIngredientMap: {};
        /**
        * Holds all the recipes collected by ProbeJS.
        */
        get recipes(): Document.RecipeHolder;
        set itemErrors(b: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(t: Internal.Map<ResourceLocation, Internal.RecipeTypeJS>);
        /**
        * Adds a smelting recipe to Minecraft.
        *
        * Used by Furnaces.
        */
        smelting(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.CookingRecipeJS;
        /**
        * Adds a smelting recipe to Minecraft.
        *
        * Used by Smokers.
        */
        smoking(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.CookingRecipeJS;
        /**
        * Adds a smelting recipe to Minecraft.
        *
        * Used by Blast Furnaces.
        */
        blasting(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.CookingRecipeJS;
        /**
        * Adds a shaped crafting recipe.
        */
        shaped(output: Internal.ItemStackJS_, pattern: string[], items: { [x in string]: Internal.IngredientJS_ }): Internal.ShapedRecipeJS;
        /**
        * Adds a shapeless crafting recipe.
        */
        shapeless(output: Internal.ItemStackJS_, inputs: Internal.IngredientJS_[]): Internal.ShapelessRecipeJS;
        /**
        * Adds a smelting recipe to Minecraft.
        *
        * Used by Campfire.
        */
        campfireCooking(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.CookingRecipeJS;
        /**
        * Adds a stonecutting recipe.
        */
        stonecutting(output: Internal.ItemStackJS_, inputs: Internal.IngredientJS_): Internal.StonecuttingRecipeJS;
        /**
        * Adds a smithing recipe.
        */
        smithing(output: Internal.ItemStackJS_, base: Internal.IngredientJS_, addition: Internal.IngredientJS_): Internal.SmithingRecipeJS;
    }
    type RecipeEventJS_ = RecipeEventJS;
    class BlockIgnoreStructureProcessor extends Internal.StructureProcessor {
        static readonly field_215204_a: Internal.BlockIgnoreStructureProcessor;
        static readonly field_237073_a_: Internal.Codec<Internal.BlockIgnoreStructureProcessor>;
        static readonly field_215206_c: Internal.BlockIgnoreStructureProcessor;
        static readonly field_215205_b: Internal.BlockIgnoreStructureProcessor;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.List<Internal.Block>);
    }
    type BlockIgnoreStructureProcessor_ = BlockIgnoreStructureProcessor;
    abstract class Feature <FC> extends Internal.ForgeRegistryEntry<Internal.Feature<any>> {
        static func_227250_b_(arg0: Internal.Block_): boolean;
        func_236292_a_(): Internal.Codec<Internal.ConfiguredFeature<FC, Internal.Feature<FC>>>;
        static func_236293_a_(arg0: Internal.IWorldGenerationBaseReader, arg1: BlockPos): boolean;
        func_241855_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos, arg4: FC): boolean;
        static func_236297_b_(arg0: Internal.IWorldGenerationBaseReader, arg1: BlockPos): boolean;
        setRegistryName(arg0: ResourceLocation_): any;
        func_225566_b_(arg0: FC): Internal.ConfiguredFeature<FC, any>;
        static readonly field_202319_S: Internal.Feature<Internal.BigMushroomFeatureConfig>;
        static readonly field_236287_R_: Internal.Feature<Internal.BlobReplacementConfig>;
        static readonly field_203234_at: Internal.SeaGrassFeature;
        static readonly field_236286_Q_: Internal.Feature<Internal.BasaltDeltasFeature>;
        static readonly field_204621_ay: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_236285_P_: Internal.Feature<Internal.ColumnConfig>;
        static readonly field_202283_ac: Internal.Feature<Internal.BlockStateFeatureConfig>;
        static readonly field_214482_aJ: Internal.Feature<Internal.ProbabilityConfig>;
        static readonly field_214486_aN: Internal.Feature<Internal.FillLayerConfig>;
        static readonly field_236281_L_: Internal.Feature<Internal.HugeFungusConfig>;
        static readonly field_205171_af: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_236282_M_: Internal.Feature<Internal.BlockStateProvidingFeatureConfig>;
        static readonly field_202293_am: Internal.Feature<Internal.TwoFeatureChoiceConfig>;
        static readonly field_202297_aq: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_202320_T: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_236284_O_: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_242773_e: Internal.FlowersFeature<Internal.BlockClusterFeatureConfig>;
        static readonly field_236283_N_: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_206922_aF: Internal.Feature<Internal.BlockWithContextConfig>;
        static readonly field_202325_Y: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_204622_az: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_227244_A_: Internal.Feature<Internal.BlockStateProvidingFeatureConfig>;
        static readonly field_202288_ah: Internal.Feature<Internal.SphereReplaceConfig>;
        static readonly field_202298_ar: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_236291_c_: Internal.Feature<Internal.BaseTreeFeatureConfig>;
        static readonly field_227247_y_: Internal.FlowersFeature<Internal.BlockClusterFeatureConfig>;
        static readonly field_202294_an: Internal.Feature<Internal.ReplaceBlockConfig>;
        static readonly field_202290_aj: Internal.Feature<Internal.OreFeatureConfig>;
        static readonly field_227248_z_: Internal.Feature<Internal.BlockClusterFeatureConfig>;
        static readonly field_202315_O: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_204914_aC: Internal.Feature<Internal.FeatureSpreadConfig>;
        static readonly field_202289_ai: Internal.Feature<Internal.BlockStateFeatureConfig>;
        static readonly field_236288_U_: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_236289_V_: Internal.Feature<Internal.OreFeatureConfig>;
        static readonly field_202285_ae: Internal.Feature<Internal.SphereReplaceConfig>;
        static readonly field_202299_as: Internal.Feature<Internal.EndGatewayConfig>;
        static readonly field_202295_ao: Internal.Feature<Internal.LiquidsConfig>;
        static readonly field_202321_U: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_204619_aA: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_202326_Z: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_203235_au: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_202282_ab: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_214483_aK: Internal.Feature<Internal.DecoratedFeatureConfig>;
        static readonly field_214487_aO: Internal.BonusChestFeature;
        static readonly field_205172_ag: Internal.Feature<Internal.BlockStateFeatureConfig>;
        static readonly field_202312_L: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_202296_ap: Internal.Feature<Internal.EndSpikeFeatureConfig>;
        static readonly field_202292_al: Internal.Feature<Internal.MultipleRandomFeatureConfig>;
        static readonly field_227245_q_: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_202316_P: Internal.Feature<Internal.NoFeatureConfig>;
        static readonly field_202318_R: Internal.Feature<Internal.BigMushroomFeatureConfig>;
        static readonly field_204620_ao: Internal.Feature<Internal.SingleRandomFeature>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<FC>);
    }
    type Feature_<FC> = Registry.minecraft.worldgen$feature | Feature<FC>;
    interface ItemFiltersStack {
        getInventoryFilterData(): Internal.ItemInventory;
        createDataIF(arg0: Internal.Item_): any;
        getItemFiltersData(): any;
        getStringValueFilterData(): Internal.StringValueData<any>;
        (): any;
    }
    type ItemFiltersStack_ = (()=>any) | ItemFiltersStack;
    interface LootTablesKJS {
        applyKJS0(map: Internal.Map_<ResourceLocation_, Internal.JsonElement_>, action: Internal.BiConsumer_<ResourceLocation_, Internal.JsonElement_>): void;
    }
    type LootTablesKJS_ = LootTablesKJS;
    abstract class DynamicConstantDesc <T> extends Document.Object implements Internal.ConstantDesc {
        static ofCanonical<T_>(arg0: Internal.DirectMethodHandleDesc, arg1: string, arg2: Internal.ClassDesc, arg3: Internal.ConstantDesc[]): Internal.ConstantDesc;
        constantType(): Internal.ClassDesc;
        bootstrapMethod(): Internal.DirectMethodHandleDesc;
        constantName(): string;
        bootstrapArgsList(): Internal.List<Internal.ConstantDesc>;
        bootstrapArgs(): Internal.ConstantDesc[];
        static of<T_>(arg0: Internal.DirectMethodHandleDesc, ...arg1: Internal.ConstantDesc[]): Internal.DynamicConstantDesc<T_>;
        static of<T_>(arg0: Internal.DirectMethodHandleDesc): Internal.DynamicConstantDesc<T_>;
        static ofNamed<T_>(arg0: Internal.DirectMethodHandleDesc, arg1: string, arg2: Internal.ClassDesc, ...arg3: Internal.ConstantDesc[]): Internal.DynamicConstantDesc<T_>;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): T;
    }
    type DynamicConstantDesc_<T> = DynamicConstantDesc<T>;
    interface SortedMap <K, V> extends Internal.SequencedMap<K, V> {
        comparator(): Internal.Comparator<K>;
        putLast(arg0: K, arg1: V): V;
        entrySet(): Internal.Set<Internal.Map$Entry<K, V>>;
        firstKey(): K;
        subMap(arg0: K, arg1: K): Internal.SortedMap<K, V>;
        values(): Internal.Collection<V>;
        lastKey(): K;
        headMap(arg0: K): Internal.SortedMap<K, V>;
        putFirst(arg0: K, arg1: V): V;
        keySet(): Internal.Set<K>;
        tailMap(arg0: K): Internal.SortedMap<K, V>;
        reversed(): Internal.SortedMap<K, V>;
        reversed(): Internal.SequencedMap<any, any>;
    }
    type SortedMap_<K, V> = SortedMap<K, V>;
    class InputEvent$KeyInputEvent extends net.minecraftforge.client.event.InputEvent {
        getKey(): number;
        getAction(): number;
        getModifiers(): number;
        getScanCode(): number;
        get action(): number;
        get modifiers(): number;
        get key(): number;
        get scanCode(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type InputEvent$KeyInputEvent_ = InputEvent$KeyInputEvent;
    interface JournalPage {
        buildRenderPage(arg0: Internal.ResearchNode, arg1: number): Internal.RenderablePage;
        (arg0: Internal.ResearchNode, arg1: number): Internal.RenderablePage;
    }
    type JournalPage_ = ((arg0: Internal.ResearchNode, arg1: number)=>Internal.RenderablePage) | JournalPage;
    class WorkbenchContainer extends Internal.RecipeBookContainer<Internal.CraftingInventory> implements Internal.AccessorWorkbenchContainer, Internal.ICraftingContainer {
        getCraftResult(): Internal.CraftResultInventory;
        getPlayer(): Internal.PlayerEntity;
        getResult(): Internal.CraftResultInventory;
        handler$cia001$quickMoveStack(arg0: Internal.PlayerEntity, arg1: number, arg2: Internal.CallbackInfoReturnable<any>): void;
        getCraftMatrix(): Internal.CraftingInventory;
        static func_217066_a(arg0: number, arg1: Internal.World, arg2: Internal.PlayerEntity, arg3: Internal.CraftingInventory, arg4: Internal.CraftResultInventory): void;
        readonly field_192390_i: Internal.PlayerEntity;
        field_75162_e: Internal.CraftingInventory;
        readonly field_75160_f: Internal.CraftResultInventory;
        get result(): Internal.CraftResultInventory;
        get craftMatrix(): Internal.CraftingInventory;
        get craftResult(): Internal.CraftResultInventory;
        get player(): Internal.PlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IWorldPosCallable);
    }
    type WorkbenchContainer_ = WorkbenchContainer;
    class SCloseWindowPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type SCloseWindowPacket_ = SCloseWindowPacket;
    interface Function13 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.Function4<T10, T11, T12, T13, R>>;
        curry12(): Internal.Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Internal.Function<T13, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function6<T8, T9, T10, T11, T12, T13, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function5<T9, T10, T11, T12, T13, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function8<T6, T7, T8, T9, T10, T11, T12, T13, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function7<T7, T8, T9, T10, T11, T12, T13, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function10<T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R>>;
        curry10(): Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Internal.Function3<T11, T12, T13, R>>;
        curry11(): Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Internal.BiFunction<T12, T13, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function9<T5, T6, T7, T8, T9, T10, T11, T12, T13, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function11<T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R>>;
        curry(): Internal.Function<T1, Internal.Function12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13): R;
    }
    type Function13_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13)=>R) | Function13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R>;
    abstract class WorldSavedData extends Document.Object implements Internal.INBTSerializable<Internal.CompoundNBT> {
        serializeNBT(): Internal.CompoundNBT;
        serializeNBT(): Internal.INBT;
        func_215158_a(arg0: Internal.File): void;
        func_76188_b(): boolean;
        func_189551_b(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_76186_a(arg0: boolean): void;
        func_76185_a(): void;
        func_195925_e(): string;
        func_76184_a(arg0: Internal.CompoundNBT_): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type WorldSavedData_ = WorldSavedData;
    class JeiRuntime extends Document.Object implements Internal.IJeiRuntime {
        getRecipeManager(): Internal.IRecipeManager;
        getIngredientListOverlay(): Internal.IngredientListOverlay;
        getIngredientListOverlay(): Internal.IIngredientListOverlay;
        getBookmarkOverlay(): Internal.IBookmarkOverlay;
        getRecipesGui(): Internal.RecipesGui;
        getRecipesGui(): Internal.IRecipesGui;
        getIngredientFilter(): Internal.IIngredientFilter;
        close(): void;
        getIngredientManager(): Internal.IIngredientManager;
        get ingredientFilter(): Internal.IIngredientFilter;
        get recipeManager(): Internal.IRecipeManager;
        get bookmarkOverlay(): Internal.IBookmarkOverlay;
        get recipesGui(): Internal.IRecipesGui;
        get ingredientListOverlay(): Internal.IIngredientListOverlay;
        get ingredientManager(): Internal.IIngredientManager;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IRecipeManager, arg1: Internal.IngredientListOverlay, arg2: Internal.IBookmarkOverlay, arg3: Internal.RecipesGui, arg4: Internal.IIngredientFilter, arg5: Internal.IIngredientManager);
    }
    type JeiRuntime_ = JeiRuntime;
    interface IItemProvider {
        func_199767_j(): Internal.Item;
        (): Internal.Item;
    }
    type IItemProvider_ = (()=>Internal.Item) | IItemProvider;
    class VertexBuffer extends Document.Object implements Internal.AutoCloseable {
        func_227874_a_(arg0: Internal.Matrix4f, arg1: number): void;
        static func_177361_b(): void;
        func_227875_a_(arg0: Internal.BufferBuilder): void;
        func_227878_b_(arg0: Internal.BufferBuilder): Internal.CompletableFuture<void>;
        func_177359_a(): void;
        close(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.VertexFormat);
    }
    type VertexBuffer_ = VertexBuffer;
    class ArrowEntity extends Internal.AbstractArrowEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        static func_191508_b(arg0: Internal.ItemStack): number;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_184558_a(arg0: Internal.EffectInstance): void;
        func_184550_j(): Internal.ItemStack;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_184555_a(arg0: Internal.ItemStack): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_184557_n(): number;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.EntityType<Internal.ArrowEntity>, arg1: Internal.World);
    }
    type ArrowEntity_ = ArrowEntity;
    abstract class Clock extends Document.Object implements Internal.InstantSource {
        withZone(arg0: Internal.ZoneId): Internal.Clock;
        static system(arg0: Internal.ZoneId): Internal.Clock;
        static tickMinutes(arg0: Internal.ZoneId): Internal.Clock;
        static tickMillis(arg0: Internal.ZoneId): Internal.Clock;
        static offset(arg0: Internal.Clock, arg1: Internal.Duration): Internal.Clock;
        static tickSeconds(arg0: Internal.ZoneId): Internal.Clock;
        static systemDefaultZone(): Internal.Clock;
        static systemUTC(): Internal.Clock;
        getZone(): Internal.ZoneId;
        static fixed(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.Clock;
        static tick(arg0: Internal.Clock, arg1: Internal.Duration): Internal.Clock;
        millis(): number;
        instant(): Internal.Instant;
        get zone(): Internal.ZoneId;
    }
    type Clock_ = Clock;
    class ModifierNBT extends Document.Object {
        static readFromNBT(arg0: Internal.INBT): Internal.ModifierNBT;
        getLevel(arg0: Internal.Modifier_): number;
        withModifier(arg0: Internal.Modifier_, arg1: number): Internal.ModifierNBT;
        withoutModifier(arg0: Internal.Modifier_, arg1: number): Internal.ModifierNBT;
        static builder(): Internal.ModifierNBT$Builder;
        isEmpty(): boolean;
        serializeToNBT(): Internal.ListNBT;
        getModifiers(): Internal.List<Internal.ModifierEntry>;
        static readonly TAG_LEVEL: "level";
        static readonly TAG_MODIFIER: "name";
        get modifiers(): Internal.List<Internal.ModifierEntry>;
        get empty(): boolean;
    }
    type ModifierNBT_ = ModifierNBT;
    class ToolStack extends Document.Object implements Internal.IModifierToolStack {
        getDefinition(): Internal.ToolDefinition;
        getStats(): Internal.StatsNBT;
        getVolatileData(): Internal.IModDataReadOnly;
        createStack(arg0: number): Internal.ItemStack;
        createStack(): Internal.ItemStack;
        static isInitialized(arg0: Internal.ItemStack): boolean;
        getItem(): Internal.Item;
        static verifyTag(arg0: Internal.Item_, arg1: Internal.CompoundNBT_, arg2: Internal.ToolDefinition): void;
        getPersistentData(): Internal.ModDataNBT;
        getPersistentData(): Internal.IModDataReadOnly;
        setDamage(arg0: number): void;
        clearCache(): void;
        replaceMaterial(arg0: number, arg1: Internal.IMaterial): void;
        getRestrictedNBT(): Internal.RestrictedCompoundTag;
        updateStack(arg0: Internal.ItemStack): Internal.ItemStack;
        getFreeSlots(arg0: Internal.SlotType): number;
        getFreeUpgrades(): number;
        ensureHasData(): void;
        static from(arg0: Internal.Item_, arg1: Internal.ToolDefinition, arg2: Internal.CompoundNBT_): Internal.ToolStack;
        static from(arg0: Internal.ItemStack): Internal.ToolStack;
        copy(): Internal.ToolStack;
        getModifiers(): Internal.ModifierNBT;
        getCurrentDurability(): number;
        getMaterialsList(): Internal.List<Internal.IMaterial>;
        validate(): Internal.ValidatedResult;
        getModifierList(): Internal.List<Internal.ModifierEntry>;
        getDamage(): number;
        hasTag(arg0: Internal.ITag<Internal.Item>): boolean;
        addModifier(arg0: Internal.Modifier_, arg1: number): void;
        rebuildStats(): void;
        getModifier(arg0: Internal.FloatToolStat): number;
        static createTool(arg0: Internal.Item_, arg1: Internal.ToolDefinition, arg2: Internal.List<Internal.IMaterial>): Internal.ToolStack;
        getFreeAbilities(): number;
        static hasMaterials(arg0: Internal.ItemStack): boolean;
        static copyFrom(arg0: Internal.ItemStack): Internal.ToolStack;
        getMaterial(arg0: number): Internal.IMaterial;
        setMaterials(arg0: Internal.List<Internal.IMaterial>): void;
        setMaterials(arg0: Internal.MaterialNBT): void;
        getMaterials(): Internal.MaterialNBT;
        static ensureInitialized(arg0: Internal.ItemStack, arg1: Internal.ToolDefinition): void;
        static ensureInitialized(arg0: Internal.ItemStack): void;
        getModifierLevel(arg0: Internal.Modifier_): number;
        isUnbreakable(): boolean;
        getUpgrades(): Internal.ModifierNBT;
        isBroken(): boolean;
        removeModifier(arg0: Internal.Modifier_, arg1: number): void;
        static readonly TAG_PERSISTENT_MOD_DATA: "tic_persistent_data";
        static readonly TAG_UPGRADES: "tic_upgrades";
        static readonly TAG_UNBREAKABLE: "Unbreakable";
        static readonly TAG_MODIFIERS: "tic_modifiers";
        static readonly TAG_HIDE_FLAGS: "HideFlags";
        static readonly ORIGINAL_DURABILITY_KEY: ResourceLocation;
        static readonly TAG_MATERIALS: "tic_materials";
        static readonly TAG_BROKEN: "tic_broken";
        static readonly TAG_VOLATILE_MOD_DATA: "tic_volatile_data";
        get broken(): boolean;
        get volatileData(): Internal.IModDataReadOnly;
        get damage(): number;
        get item(): Internal.Item;
        get materialsList(): Internal.List<Internal.IMaterial>;
        get persistentData(): Internal.IModDataReadOnly;
        get restrictedNBT(): Internal.RestrictedCompoundTag;
        get modifiers(): Internal.ModifierNBT;
        get modifierList(): Internal.List<Internal.ModifierEntry>;
        get upgrades(): Internal.ModifierNBT;
        get freeUpgrades(): number;
        get freeAbilities(): number;
        get stats(): Internal.StatsNBT;
        get materials(): Internal.MaterialNBT;
        get unbreakable(): boolean;
        get definition(): Internal.ToolDefinition;
        get currentDurability(): number;
        set damage(arg0: number);
        set materials(arg0: Internal.MaterialNBT);
    }
    type ToolStack_ = ToolStack;
    class SQueryNBTResponsePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_211712_c(): Internal.CompoundNBT;
        func_211713_b(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.CompoundNBT);
    }
    type SQueryNBTResponsePacket_ = SQueryNBTResponsePacket;
    interface IForgeAdvancementBuilder {
        save(arg0: Internal.Consumer_<Internal.Advancement_>, arg1: ResourceLocation_, arg2: Internal.ExistingFileHelper): Internal.Advancement;
        self(): Internal.Advancement$Builder;
    }
    type IForgeAdvancementBuilder_ = IForgeAdvancementBuilder;
    class Method extends Internal.Executable {
        isDefault(): boolean;
        getReturnType(): Internal.Class<any>;
        getGenericReturnType(): Internal.Type;
        getAnnotation<T_>(arg0: Internal.Class<T_>): T_;
        invoke(arg0: any, ...arg1: any[]): any;
        getTypeParameters(): any[];
        isBridge(): boolean;
        getDefaultValue(): any;
        get default(): boolean;
        get defaultValue(): any;
        get genericReturnType(): Internal.Type;
        get bridge(): boolean;
        get typeParameters(): any[];
        get returnType(): Internal.Class<any>;
    }
    type Method_ = Method;
    interface ClientWorldExtended {
        getBiomeSeed(): number;
        (): number;
    }
    type ClientWorldExtended_ = (()=>number) | ClientWorldExtended;
    class EntityEvent extends net.minecraftforge.eventbus.api.Event {
        getEntity(): Internal.Entity;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity);
    }
    type EntityEvent_ = EntityEvent;
    interface Long2ObjectSortedMap$FastSortedEntrySet <V> extends Internal.ObjectSortedSet<Internal.Long2ObjectMap$Entry<V>>, Internal.Long2ObjectMap$FastEntrySet<V> {
        fastIterator(): Internal.ObjectBidirectionalIterator<Internal.Long2ObjectMap$Entry<V>>;
        fastIterator(): Internal.ObjectIterator<any>;
        fastIterator(arg0: Internal.Long2ObjectMap$Entry_<V>): Internal.ObjectBidirectionalIterator<Internal.Long2ObjectMap$Entry<V>>;
    }
    type Long2ObjectSortedMap$FastSortedEntrySet_<V> = Long2ObjectSortedMap$FastSortedEntrySet<V>;
    interface AccessorAbstractFurnaceTileEntity {
        getItems(): Internal.NonNullList<Internal.ItemStack>;
        (): Internal.NonNullList<Internal.ItemStack>;
    }
    type AccessorAbstractFurnaceTileEntity_ = (()=>Internal.NonNullList<Internal.ItemStack>) | AccessorAbstractFurnaceTileEntity;
    class DragSourceEvent extends Internal.EventObject {
        getX(): number;
        getLocation(): Internal.Point;
        getY(): number;
        getDragSourceContext(): Internal.DragSourceContext;
        get x(): number;
        get dragSourceContext(): Internal.DragSourceContext;
        get y(): number;
        get location(): Internal.Point;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DragSourceContext);
        constructor(arg0: Internal.DragSourceContext, arg1: number, arg2: number);
    }
    type DragSourceEvent_ = DragSourceEvent;
    abstract class AbstractPiglinEntity extends Internal.MonsterEntity {
        shouldRiderSit(): boolean;
        func_242340_t(arg0: boolean): void;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        func_234424_eM_(): Internal.PiglinAction;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        func_242336_eL(): boolean;
        asKJS(): any;
        func_242337_eM(): boolean;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_242334_c: number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.AbstractPiglinEntity>, arg1: Internal.World);
    }
    type AbstractPiglinEntity_ = AbstractPiglinEntity;
    class ForgeConfigSpec$BooleanValue extends Internal.ForgeConfigSpec$ConfigValue<boolean> {
    }
    type ForgeConfigSpec$BooleanValue_ = ForgeConfigSpec$BooleanValue;
    class FeatureJigsawPiece extends Internal.JigsawPiece {
        func_214868_a(arg0: Internal.TemplateManager, arg1: Internal.Rotation_): BlockPos;
        static readonly field_236816_a_: Internal.Codec<Internal.FeatureJigsawPiece>;
        field_214870_a: java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>;
    }
    type FeatureJigsawPiece_ = FeatureJigsawPiece;
    abstract class AmbientEntity extends Internal.MobEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type AmbientEntity_ = AmbientEntity;
    class CommandContext <S> extends Document.Object {
        copyFor(arg0: S): Internal.CommandContext<S>;
        getRedirectModifier(): Internal.RedirectModifier<S>;
        hasNodes(): boolean;
        getNodes(): Internal.List<Internal.ParsedCommandNode<S>>;
        getCommand(): Internal.Command<S>;
        getRange(): Internal.StringRange;
        getSource(): S;
        isForked(): boolean;
        getChild(): Internal.CommandContext<S>;
        getArgument<V_>(arg0: string, arg1: Internal.Class<V_>): V_;
        getInput(): string;
        getLastChild(): Internal.CommandContext<S>;
        getRootNode(): Internal.CommandNode<S>;
        get input(): string;
        get nodes(): Internal.List<Internal.ParsedCommandNode<S>>;
        get lastChild(): Internal.CommandContext<S>;
        get range(): Internal.StringRange;
        get source(): S;
        get redirectModifier(): Internal.RedirectModifier<S>;
        get command(): Internal.Command<S>;
        get forked(): boolean;
        get child(): Internal.CommandContext<S>;
        get rootNode(): Internal.CommandNode<S>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: S, arg1: string, arg2: Internal.Map<string, Internal.ParsedArgument<S, any>>, arg3: Internal.Command<S>, arg4: Internal.CommandNode<S>, arg5: Internal.List<Internal.ParsedCommandNode<S>>, arg6: Internal.StringRange, arg7: Internal.CommandContext<S>, arg8: Internal.RedirectModifier<S>, arg9: boolean);
    }
    type CommandContext_<S> = CommandContext<S>;
    interface LevelKJS extends Internal.AsKJS {
        asKJS(): any;
    }
    type LevelKJS_ = LevelKJS;
    interface PaddingLayout extends Internal.MemoryLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.PaddingLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.PaddingLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.PaddingLayout;
    }
    type PaddingLayout_ = PaddingLayout;
    interface WrappedJS {
    }
    type WrappedJS_ = WrappedJS;
    class ScoreCriteria$RenderType extends Internal.Enum<Internal.ScoreCriteria$RenderType> {
        func_211838_a(): string;
        static func_211839_a(arg0: string): Internal.ScoreCriteria$RenderType;
        static valueOf(arg0: string): Internal.ScoreCriteria$RenderType;
        static values(): Internal.ScoreCriteria$RenderType[];
        static readonly HEARTS: Internal.ScoreCriteria$RenderType;
        static readonly INTEGER: Internal.ScoreCriteria$RenderType;
    }
    type ScoreCriteria$RenderType_ = "integer" | "hearts" | ScoreCriteria$RenderType;
    class ModDataNBT extends Internal.NamespacedNBT implements Internal.IModDataReadOnly {
        getCompound(arg0: ResourceLocation_): Internal.CompoundNBT;
        setSlots(arg0: Internal.SlotType, arg1: number): void;
        static readFromNBT(arg0: Internal.CompoundNBT_): Internal.ModDataNBT;
        getTraits(): number;
        addAbilities(arg0: number): void;
        getString(arg0: ResourceLocation_): string;
        getFloat(arg0: ResourceLocation_): number;
        addUpgrades(arg0: number): void;
        getInt(arg0: ResourceLocation_): number;
        getAbilities(): number;
        setUpgrades(arg0: number): void;
        setTraits(arg0: number): void;
        get(arg0: ResourceLocation_): Internal.INBT;
        getUpgrades(): number;
        getBoolean(arg0: ResourceLocation_): boolean;
        addTraits(arg0: number): void;
        getSlots(arg0: Internal.SlotType): number;
        setAbilities(arg0: number): void;
        addSlots(arg0: Internal.SlotType, arg1: number): void;
        get abilities(): number;
        get traits(): number;
        get upgrades(): number;
        set abilities(arg0: number);
        set traits(arg0: number);
        set upgrades(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ModDataNBT_ = ModDataNBT;
    class ChestLootEventJS extends Internal.LootEventJS {
        addChest(id: ResourceLocation_, b: Internal.Consumer_<Internal.LootBuilder_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(c: Internal.Map<ResourceLocation, Internal.JsonElement>);
    }
    type ChestLootEventJS_ = ChestLootEventJS;
    class GlVertexArray extends Internal.GlObject {
        static readonly NULL_ARRAY_ID: 0;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(owner: Internal.RenderDevice);
    }
    type GlVertexArray_ = GlVertexArray;
    class RepairContainer extends Internal.AbstractRepairContainer implements Internal.ExtendedRepairContainer {
        func_82850_a(arg0: string): void;
        be_getRecipes(): Internal.List<any>;
        be_getCurrentRecipe(): Internal.AnvilSmithingRecipe;
        static func_216977_d(arg0: number): number;
        setMaximumCost(arg0: number): void;
        func_216976_f(): number;
        be_nextRecipe(): void;
        handler$znp000$updateItemName(arg0: string, arg1: Internal.CallbackInfo): void;
        handler$znp000$be_initAnvilLevel(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IWorldPosCallable_, arg3: Internal.CallbackInfo): void;
        be_previousRecipe(): void;
        handler$znp000$updateRepairOutput(arg0: Internal.CallbackInfo): void;
        be_updateCurrentRecipe(arg0: Internal.AnvilSmithingRecipe): void;
        field_82856_l: number;
        set maximumCost(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IWorldPosCallable);
    }
    type RepairContainer_ = RepairContainer;
    class SwampHutStructure extends net.minecraft.world.gen.feature.structure.Structure<Internal.NoFeatureConfig> {
        getDefaultRestrictsSpawnsToInside(): boolean;
        getStructure(): net.minecraft.world.gen.feature.structure.Structure<any>;
        setRegistryName(arg0: ResourceLocation_): any;
        func_214557_a(): Internal.Structure$IStartFactory<Internal.NoFeatureConfig>;
        get defaultRestrictsSpawnsToInside(): boolean;
        get structure(): net.minecraft.world.gen.feature.structure.Structure<any>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<Internal.NoFeatureConfig>);
    }
    type SwampHutStructure_ = SwampHutStructure;
    interface TemporalAdjuster {
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        (arg0: Internal.Temporal): Internal.Temporal;
    }
    type TemporalAdjuster_ = ((arg0: Internal.Temporal)=>Internal.Temporal) | TemporalAdjuster;
    class CPlayerTryUseItemPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_187028_a(): Hand;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Hand);
    }
    type CPlayerTryUseItemPacket_ = CPlayerTryUseItemPacket;
    class SimpleMapCodec <K, V> extends Internal.MapCodec<Internal.Map<K, V>> implements Internal.BaseMapCodec<K, V> {
        encode(arg0: any, arg1: Internal.DynamicOps<any>, arg2: Internal.RecordBuilder<any>): Internal.RecordBuilder<any>;
        encode<T_>(arg0: Internal.Map_<K, V>, arg1: Internal.DynamicOps<T_>, arg2: Internal.RecordBuilder<T_>): Internal.RecordBuilder<T_>;
        flatComap<B_>(arg0: Internal.Function_<B_, Internal.DataResult_<Internal.Map_<K, V>>>): Internal.MapEncoder<B_>;
        compressedDecode<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<Internal.Map<K, V>>;
        compressedBuilder<T_>(arg0: Internal.DynamicOps<T_>): Internal.RecordBuilder<T_>;
        keyCodec(): Internal.Codec<K>;
        keys<T_>(arg0: Internal.DynamicOps<T_>): Internal.Stream<T_>;
        decoder(): Internal.Decoder<Internal.Map<K, V>>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.MapDecoder<any>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.MapEncoder<any>;
        decode<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.MapLike<T_>): Internal.DataResult<Internal.Map<K, V>>;
        encoder(): Internal.Encoder<Internal.Map<K, V>>;
        ap<E_>(arg0: Internal.MapDecoder<Internal.Function<Internal.Map<K, V>, E_>>): Internal.MapDecoder<E_>;
        flatMap<B_>(arg0: Internal.Function_<Internal.Map_<K, V>, Internal.DataResult_<B_>>): Internal.MapDecoder<B_>;
        elementCodec(): Internal.Codec<V>;
        comap<B_>(arg0: Internal.Function_<B_, Internal.Map_<K, V>>): Internal.MapEncoder<B_>;
        map<B_>(arg0: Internal.Function_<Internal.Map_<K, V>, B_>): Internal.MapDecoder<B_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<K>, arg1: Internal.Codec<V>, arg2: Internal.Keyable);
    }
    type SimpleMapCodec_<K, V> = SimpleMapCodec<K, V>;
    class PonderItemTagEventJS extends Internal.EventJS {
        add(arg0: string, arg1: any): Internal.PonderItemTagEventJS;
        remove(arg0: string, arg1: any): Internal.PonderItemTagEventJS;
        static tagField: Internal.Field;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PonderItemTagEventJS_ = PonderItemTagEventJS;
    abstract class RenderTooltipEvent extends net.minecraftforge.eventbus.api.Event {
        getX(): number;
        getY(): number;
        getFontRenderer(): Internal.FontRenderer;
        getLines(): Internal.List<Internal.ITextProperties>;
        getStack(): Internal.ItemStack;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get stack(): Internal.ItemStack;
        get x(): number;
        get y(): number;
        get lines(): Internal.List<Internal.ITextProperties>;
        get fontRenderer(): Internal.FontRenderer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ItemStack, arg1: Internal.List<Internal.ITextProperties>, arg2: Internal.MatrixStack, arg3: number, arg4: number, arg5: Internal.FontRenderer);
    }
    type RenderTooltipEvent_ = RenderTooltipEvent;
    interface MatchableState {
        getDescriptiveState(arg0: number): Internal.BlockState;
        createTileEntity(arg0: Internal.IBlockReader, arg1: number): Internal.TileEntity;
        matches(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.BlockState): boolean;
    }
    type MatchableState_ = MatchableState;
    class IronGolemEntity$Cracks extends Internal.Enum<Internal.IronGolemEntity$Cracks> {
        static func_226515_a_(arg0: number): Internal.IronGolemEntity$Cracks;
        static valueOf(arg0: string): Internal.IronGolemEntity$Cracks;
        static values(): Internal.IronGolemEntity$Cracks[];
        static readonly HIGH: Internal.IronGolemEntity$Cracks;
        static readonly MEDIUM: Internal.IronGolemEntity$Cracks;
        static readonly LOW: Internal.IronGolemEntity$Cracks;
        static readonly NONE: Internal.IronGolemEntity$Cracks;
    }
    type IronGolemEntity$Cracks_ = "none" | "low" | "medium" | "high" | IronGolemEntity$Cracks;
    class MagmatorConfig extends Internal.GeneratorConfig {
        readonly magmaticFluidsAPI: Internal.ForgeConfigSpec$BooleanValue;
        readonly magmaticFluids: Internal.ForgeConfigSpec$ConfigValue<Internal.List<string>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type MagmatorConfig_ = MagmatorConfig;
    class EntityClassification extends Internal.Enum<Internal.EntityClassification> implements Internal.IStringSerializable, Internal.IExtensibleEnum {
        func_75599_d(): boolean;
        init(): void;
        func_82705_e(): boolean;
        func_220363_a(): string;
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.EntityClassification;
        static func_233670_a_(arg0: string): Internal.EntityClassification;
        static values(): Internal.EntityClassification[];
        func_75601_b(): number;
        static create(arg0: string, arg1: string, arg2: number, arg3: boolean, arg4: boolean, arg5: number): Internal.EntityClassification;
        func_233671_f_(): number;
        func_233672_g_(): number;
        static readonly WATER_CREATURE: Internal.EntityClassification;
        static readonly WATER_AMBIENT: Internal.EntityClassification;
        static readonly field_233667_g_: Internal.Codec<Internal.EntityClassification>;
        static readonly AMBIENT: Internal.EntityClassification;
        static readonly CREATURE: Internal.EntityClassification;
        static readonly MISC: Internal.EntityClassification;
        static readonly MONSTER: Internal.EntityClassification;
    }
    type EntityClassification_ = "monster" | "creature" | "ambient" | "water_creature" | "water_ambient" | "misc" | "pvj_ambient" | "pvj_water_ambient" | "pvj_night_ambient" | EntityClassification;
    class KeyboardListener extends Document.Object {
        func_197968_a(arg0: number): void;
        func_197967_a(arg0: boolean): void;
        func_197960_a(arg0: string): void;
        func_197961_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_197965_a(): string;
        func_204870_b(): void;
        field_197975_d: boolean;
        field_197973_b: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type KeyboardListener_ = KeyboardListener;
    class BeltItemElement extends Internal.TrackedElement<Internal.TransportedItemStack> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TransportedItemStack);
    }
    type BeltItemElement_ = BeltItemElement;
    class PreUnloadWorldEvent extends net.minecraftforge.eventbus.api.Event {
        readonly nextScreen: Internal.Screen;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen);
    }
    type PreUnloadWorldEvent_ = PreUnloadWorldEvent;
    class VindicatorEntity extends Internal.AbstractIllagerEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        static func_234322_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.VindicatorEntity>, arg1: Internal.World);
    }
    type VindicatorEntity_ = VindicatorEntity;
    class InputMethodEvent extends Internal.AWTEvent {
        getCommittedCharacterCount(): number;
        isConsumed(): boolean;
        getCaret(): Internal.TextHitInfo;
        getText(): Internal.AttributedCharacterIterator;
        getWhen(): number;
        consume(): void;
        getVisiblePosition(): Internal.TextHitInfo;
        static readonly CARET_POSITION_CHANGED: 1101;
        static readonly INPUT_METHOD_TEXT_CHANGED: 1100;
        static readonly INPUT_METHOD_LAST: 1101;
        static readonly INPUT_METHOD_FIRST: 1100;
        get consumed(): boolean;
        get caret(): Internal.TextHitInfo;
        get visiblePosition(): Internal.TextHitInfo;
        get text(): Internal.AttributedCharacterIterator;
        get when(): number;
        get committedCharacterCount(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Component, arg1: number, arg2: Internal.TextHitInfo, arg3: Internal.TextHitInfo);
        constructor(arg0: Internal.Component, arg1: number, arg2: Internal.AttributedCharacterIterator, arg3: number, arg4: Internal.TextHitInfo, arg5: Internal.TextHitInfo);
        constructor(arg0: Internal.Component, arg1: number, arg2: number, arg3: Internal.AttributedCharacterIterator, arg4: number, arg5: Internal.TextHitInfo, arg6: Internal.TextHitInfo);
    }
    type InputMethodEvent_ = InputMethodEvent;
    class LivingEquipmentChangeEvent extends Internal.LivingEvent {
        getSlot(): EquipmentSlot;
        getTo(): Internal.ItemStack;
        getFrom(): Internal.ItemStack;
        get from(): Internal.ItemStack;
        get slot(): EquipmentSlot;
        get to(): Internal.ItemStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: EquipmentSlot, arg2: Internal.ItemStack, arg3: Internal.ItemStack);
    }
    type LivingEquipmentChangeEvent_ = LivingEquipmentChangeEvent;
    class FurnaceMinecartEntity extends Internal.AbstractMinecartEntity {
        canBeRidden(): boolean;
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        getComparatorLevel(): number;
        getCurrentRailPosition(): BlockPos;
        asKJS(): any;
        shouldDoRailFunctions(): boolean;
        getCartItem(): Internal.ItemStack;
        canRiderInteract(): boolean;
        getMinecart(): Internal.AbstractMinecartEntity;
        getSlopeAdjustment(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        isPoweredCart(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_94109_b: number;
        field_94111_a: number;
        get minecart(): Internal.AbstractMinecartEntity;
        get currentRailPosition(): BlockPos;
        get slopeAdjustment(): number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get poweredCart(): boolean;
        get comparatorLevel(): number;
        get cartItem(): Internal.ItemStack;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.FurnaceMinecartEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
    }
    type FurnaceMinecartEntity_ = FurnaceMinecartEntity;
    class SPlaySoundPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_186925_e(): number;
        func_186929_b(): Internal.SoundCategory;
        func_186926_d(): number;
        func_211402_a(): boolean;
        func_197698_a(): ResourceLocation;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186932_c(): number;
        func_186927_f(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_186928_g(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: ResourceLocation, arg1: Internal.SoundCategory, arg2: Vec3, arg3: number, arg4: number);
    }
    type SPlaySoundPacket_ = SPlaySoundPacket;
    class SpectatorDetails extends Document.Object {
        func_178680_a(arg0: number): Internal.ISpectatorMenuObject;
        func_178681_b(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ISpectatorMenuView, arg1: Internal.List<Internal.ISpectatorMenuObject>, arg2: number);
    }
    type SpectatorDetails_ = SpectatorDetails;
    interface IOpenableScreen extends Internal.Runnable {
        closeGui(openPrevScreen: boolean): void;
        closeGui(): void;
        openContextMenu(panel: Internal.Panel): void;
        openGui(): void;
        openGuiLater(): void;
        run(): void;
        openAfter(runnable: Internal.Runnable_): Internal.Runnable;
        closeContextMenu(): void;
        (): void;
    }
    type IOpenableScreen_ = (()=>void) | IOpenableScreen;
    class ServerTeam extends Internal.Team {
        delete(arg0: Internal.CommandSource): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TeamManager);
    }
    type ServerTeam_ = ServerTeam;
    interface HierarchyListener extends Internal.EventListener {
        hierarchyChanged(arg0: Internal.HierarchyEvent): void;
        (arg0: Internal.HierarchyEvent): void;
    }
    type HierarchyListener_ = ((arg0: Internal.HierarchyEvent)=>void) | HierarchyListener;
    abstract class ItemGroup extends Document.Object {
        func_192394_m(): boolean;
        func_78023_l(): boolean;
        func_199783_b(arg0: string): Internal.ItemGroup;
        setBackgroundImage(arg0: ResourceLocation_): Internal.ItemGroup;
        func_111229_a(...arg0: Internal.EnchantmentType[]): Internal.ItemGroup;
        func_111226_a(arg0: Internal.EnchantmentType_): boolean;
        func_78018_a(arg0: Internal.NonNullList<Internal.ItemStack>): void;
        func_78016_d(): Internal.ItemStack;
        getSlotColor(): number;
        func_78015_f(): string;
        func_111225_m(): Internal.EnchantmentType[];
        getTabsImage(): ResourceLocation;
        func_78019_g(): boolean;
        func_78017_i(): boolean;
        func_78014_h(): Internal.ItemGroup;
        getLabelColor(): number;
        getSearchbarWidth(): number;
        func_200300_c(): string;
        func_242392_c(): Internal.ITextComponent;
        static getGroupCountSafe(): number;
        hasSearchBar(): boolean;
        func_78021_a(): number;
        func_151244_d(): Internal.ItemStack;
        func_78020_k(): number;
        getBackgroundImage(): ResourceLocation;
        func_78022_j(): Internal.ItemGroup;
        func_78025_a(arg0: string): Internal.ItemGroup;
        getTabPage(): number;
        static readonly field_78028_d: Internal.ItemGroup;
        static readonly field_78026_f: Internal.ItemGroup;
        static readonly field_78029_e: Internal.ItemGroup;
        static readonly field_78027_g: Internal.ItemGroup;
        static readonly field_192395_m: Internal.ItemGroup;
        static readonly field_78040_i: Internal.ItemGroup;
        static readonly field_78039_h: Internal.ItemGroup;
        static readonly field_78037_j: Internal.ItemGroup;
        static readonly field_78035_l: Internal.ItemGroup;
        field_78033_n: number;
        static readonly field_78038_k: Internal.ItemGroup;
        static readonly field_78036_m: Internal.ItemGroup;
        readonly field_78034_o: string;
        static readonly field_78031_c: Internal.ItemGroup;
        static field_78032_a: Internal.ItemGroup[];
        static readonly field_78030_b: Internal.ItemGroup;
        get tabsImage(): ResourceLocation;
        get slotColor(): number;
        get backgroundImage(): ResourceLocation;
        get tabPage(): number;
        get searchbarWidth(): number;
        get groupCountSafe(): number;
        get labelColor(): number;
        set backgroundImage(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor(arg0: number, arg1: string);
    }
    type ItemGroup_ = ItemGroup;
    class RewriteResult <A, B> extends Document.Object {
        view(): Internal.View<A, B>;
        compose<C_>(arg0: Internal.RewriteResult<C_, A>): Internal.RewriteResult<C_, B>;
        recData(): Internal.BitSet;
        static create<A_, B_>(arg0: Internal.View<A_, B_>, arg1: Internal.BitSet): Internal.RewriteResult<A_, B_>;
        static nop<A_>(arg0: com.mojang.datafixers.types.Type<A_>): Internal.RewriteResult<A_, A_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.View<A, B>, arg1: Internal.BitSet);
    }
    type RewriteResult_<A, B> = RewriteResult<A, B>;
    class ShaderLoader extends Document.Object {
        func_195656_a(): void;
        static func_216534_a(arg0: Internal.ShaderLoader$ShaderType_, arg1: string, arg2: Internal.InputStream, arg3: string): Internal.ShaderLoader;
        func_148055_a(): string;
        func_148056_a(arg0: Internal.IShaderManager): void;
    }
    type ShaderLoader_ = ShaderLoader;
    interface IVertexProducer {
        pipe(arg0: net.minecraftforge.client.model.pipeline.IVertexConsumer): void;
        (arg0: net.minecraftforge.client.model.pipeline.IVertexConsumer): void;
    }
    type IVertexProducer_ = ((arg0: net.minecraftforge.client.model.pipeline.IVertexConsumer)=>void) | IVertexProducer;
    interface ISceneBuildingUtilJS {
        getGrid(): Internal.SceneBuildingUtil$PositionUtil;
        select(): Internal.SceneBuildingUtil$SelectionUtil;
        getSelect(): Internal.SceneBuildingUtil$SelectionUtil;
        grid(): Internal.SceneBuildingUtil$PositionUtil;
        getVector(): Internal.SceneBuildingUtil$VectorUtil;
        getInternal(): Internal.SceneBuildingUtil;
        vector(): Internal.SceneBuildingUtil$VectorUtil;
        (): Internal.SceneBuildingUtil;
    }
    type ISceneBuildingUtilJS_ = (()=>Internal.SceneBuildingUtil) | ISceneBuildingUtilJS;
    interface IPacket <T> {
        func_148833_a(arg0: T): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
    }
    type IPacket_<T> = IPacket<T>;
    interface LongStream$LongMapMultiConsumer {
        accept(arg0: number, arg1: Internal.LongConsumer_): void;
        (arg0: number, arg1: Internal.LongConsumer): void;
    }
    type LongStream$LongMapMultiConsumer_ = ((arg0: number, arg1: Internal.LongConsumer)=>void) | LongStream$LongMapMultiConsumer;
    abstract class Entity extends Internal.CapabilityProvider<Internal.Entity> implements Internal.INameable, Internal.ICommandSource, Internal.IForgeEntity, Internal.TeleportingEntity, Internal.EntityAccessor, Internal.IEntity, Internal.IDataManager, Internal.EntityKJS, Internal.EntityAccess {
        func_213297_N(): Internal.IPacket<any>;
        func_174828_a(arg0: BlockPos, arg1: number, arg2: number): void;
        func_213286_i(arg0: number): Vec3;
        func_174820_d(arg0: number, arg1: Internal.ItemStack): boolean;
        func_230245_c_(arg0: boolean): void;
        func_230268_c_(arg0: Internal.LivingEntity): Vec3;
        func_70057_ab(): void;
        func_233577_ch_(): boolean;
        func_70086_ai(): number;
        func_189511_e(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        func_226282_d_(arg0: number): number;
        func_184218_aH(): boolean;
        func_213319_R(): void;
        func_213453_ef(): boolean;
        func_174805_g(arg0: boolean): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_145773_az(): boolean;
        func_184215_y(arg0: Internal.Entity): boolean;
        func_82150_aj(): boolean;
        func_189654_d(arg0: boolean): void;
        func_94059_bO(): boolean;
        func_195039_a(): boolean;
        func_96092_aw(): boolean;
        func_70107_b(arg0: number, arg1: number, arg2: number): void;
        func_70040_Z(): Vec3;
        func_85029_a(arg0: Internal.CrashReportCategory): void;
        func_184172_bi(): Internal.Direction;
        func_226274_bn_(): boolean;
        func_204231_K(): boolean;
        func_223314_ad(): number;
        func_174811_aO(): Internal.Direction;
        func_226279_cv_(): number;
        func_70075_an(): boolean;
        canTrample(arg0: Internal.BlockState, arg1: BlockPos, arg2: number): boolean;
        func_70051_ag(): boolean;
        func_226273_bm_(): boolean;
        func_70052_a(arg0: number, arg1: boolean): void;
        func_184194_a(arg0: net.minecraft.scoreboard.Team): boolean;
        func_241849_j(arg0: Internal.Entity): boolean;
        func_213309_a(arg0: number, arg1: Vec3): void;
        func_213312_b(arg0: number, arg1: number, arg2: number): void;
        func_226287_g_(arg0: number): number;
        isDirty(): boolean;
        func_174829_m(): void;
        func_208000_a(arg0: number, arg1: number): void;
        func_184205_a(arg0: Internal.Entity, arg1: boolean): boolean;
        func_174833_aM(): boolean;
        func_241841_a(arg0: Internal.ServerWorld, arg1: Internal.LightningBoltEntity): void;
        func_174810_b(arg0: boolean): void;
        func_70030_z(): void;
        func_145769_d(arg0: number): void;
        func_180427_aV(): boolean;
        func_213301_b(arg0: Internal.Pose_): void;
        func_213324_a(arg0: number, arg1: number, arg2: boolean): Internal.RayTraceResult;
        func_190530_aW(): boolean;
        func_70026_G(): boolean;
        func_70106_y(): void;
        func_184195_f(arg0: boolean): void;
        func_70015_d(arg0: number): void;
        func_230279_az_(): boolean;
        func_70038_c(arg0: number, arg1: number, arg2: number): boolean;
        func_208600_a(arg0: Internal.ITag<Internal.Fluid>): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_226275_c_(arg0: number): number;
        func_195049_a(arg0: number, arg1: number): void;
        func_184217_a(arg0: Internal.Mirror_): number;
        func_213306_e(arg0: Vec3): Vec3;
        func_184179_bs(): Internal.Entity;
        func_242280_ah(): boolean;
        func_98034_c(arg0: Internal.PlayerEntity): boolean;
        func_184232_k(arg0: Internal.Entity): void;
        changeDimension(arg0: Internal.ServerWorld, arg1: Internal.ITeleporter): Internal.Entity;
        func_241842_k(arg0: number): Vec3;
        func_213295_a(arg0: Internal.BlockState, arg1: Vec3): void;
        getRandom(): Internal.Random;
        func_241209_g_(arg0: number): void;
        func_233579_cu_(): number;
        func_233562_a_(arg0: Internal.Entity, arg1: number): boolean;
        func_70027_ad(): boolean;
        handler$bno001$read(arg0: Internal.CompoundNBT_, arg1: Internal.CallbackInfo): void;
        func_226276_cg_(): Internal.Stream<Internal.Entity>;
        func_145747_a(arg0: Internal.ITextComponent_, arg1: Internal.UUID): void;
        func_233575_bb_(): void;
        func_184192_z(): Internal.PushReaction;
        static func_223310_a(arg0: Vec3, arg1: Internal.AxisAlignedBB, arg2: Internal.ReuseableStream<Internal.VoxelShape>): Vec3;
        handler$zgj000$isPoseClear(arg0: Internal.Pose_, arg1: Internal.CallbackInfoReturnable<any>): void;
        func_204711_a(arg0: boolean): void;
        func_226288_n_(arg0: number, arg1: number, arg2: number): void;
        func_184220_m(arg0: Internal.Entity): boolean;
        func_70094_T(): boolean;
        func_70042_X(): number;
        beGetExitPos(): BlockPos;
        static func_223307_a(arg0: Internal.Entity, arg1: Vec3, arg2: Internal.AxisAlignedBB, arg3: Internal.World, arg4: Internal.ISelectionContext, arg5: Internal.ReuseableStream<Internal.VoxelShape>): Vec3;
        func_199703_a(arg0: Internal.IItemProvider_): Internal.ItemEntity;
        func_241839_a(arg0: Internal.Direction$Axis_, arg1: Internal.TeleportationRepositioner$Result): Vec3;
        func_226285_f_(arg0: number): number;
        func_184216_O(): Internal.Set<string>;
        getEntries(arg0: boolean): Internal.Set<any>;
        onAddedToWorld(): void;
        func_70016_h(arg0: number, arg1: number, arg2: number): void;
        func_184207_aI(): boolean;
        func_70039_c(arg0: Internal.CompoundNBT_): boolean;
        func_90999_ad(): boolean;
        func_195040_b(): boolean;
        func_241206_a_(arg0: Internal.ServerWorld): Internal.Entity;
        func_200601_bK(): boolean;
        func_70031_b(arg0: boolean): void;
        func_70104_M(): boolean;
        func_195048_a(arg0: Vec3): number;
        func_213311_cf(): number;
        handler$znl000$changeDimension(arg0: Internal.ServerWorld, arg1: Internal.CallbackInfoReturnable<any>): void;
        func_213307_e(arg0: Internal.Pose_): number;
        func_189651_aD(): Vec3;
        getPersistentData(): Internal.CompoundNBT;
        getRemainingFireTicks(): number;
        func_205010_bg(): number;
        func_241843_o(arg0: number): Vec3;
        func_85031_j(arg0: Internal.Entity): boolean;
        func_145748_c_(): Internal.ITextComponent;
        getDataMap(): Internal.Map<any, any>;
        remove(arg0: boolean): void;
        func_96124_cp(): net.minecraft.scoreboard.Team;
        func_180799_ab(): boolean;
        func_70028_i(arg0: Internal.Entity): boolean;
        func_226286_f_(arg0: number, arg1: number, arg2: number): void;
        func_203005_aq(): boolean;
        func_184203_c(arg0: Internal.ServerPlayerEntity): void;
        func_195047_I_(): string;
        isAddedToWorld(): boolean;
        static func_213296_b(arg0: Vec3): number;
        func_70020_e(arg0: Internal.CompoundNBT_): void;
        func_70676_i(arg0: number): Vec3;
        hasCooldown(): boolean;
        func_189512_bd(): string;
        onRemovedFromWorld(): void;
        func_180426_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        func_82145_z(): number;
        isMultipartEntity(): boolean;
        static func_184227_b(arg0: number): void;
        func_242279_ag(): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getFirstTick(): boolean;
        func_211513_k(arg0: number): boolean;
        asKJS(): any;
        func_210500_b(arg0: Internal.ITag<Internal.Fluid>, arg1: number): boolean;
        func_181015_d(arg0: BlockPos): void;
        func_242274_V(): Vec3;
        func_213300_bk(): boolean;
        func_199702_a(arg0: Internal.IItemProvider_, arg1: number): Internal.ItemEntity;
        getValue(arg0: Internal.TrackedData<any>): any;
        func_184178_b(arg0: Internal.ServerPlayerEntity): void;
        func_213322_ci(): Vec3;
        func_203004_j(arg0: boolean): void;
        func_70032_d(arg0: Internal.Entity): number;
        func_184230_a(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        func_184226_ay(): void;
        func_174812_G(): void;
        func_70066_B(): void;
        func_82142_c(arg0: boolean): void;
        func_191956_a(arg0: Internal.Entity, arg1: number, arg2: Internal.DamageSource_): void;
        func_184211_a(arg0: string): boolean;
        func_184209_aF(): Internal.Iterable<Internal.ItemStack>;
        func_174824_e(arg0: number): Vec3;
        beSetCooldown(arg0: number): void;
        func_195051_bN(): Internal.CommandSource;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_110124_au(): Internal.UUID;
        func_180431_b(arg0: Internal.DamageSource_): boolean;
        func_226263_P_(): number;
        func_70089_S(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_184208_bv(): Internal.Entity;
        func_184193_aE(): Internal.Iterable<Internal.ItemStack>;
        func_213323_x_(): void;
        handler$znl000$baseTick(arg0: Internal.CallbackInfo): void;
        func_213293_j(arg0: number, arg1: number, arg2: number): void;
        func_184102_h(): Internal.MinecraftServer;
        func_70029_a(arg0: Internal.World): void;
        revive(): void;
        func_223102_j(arg0: number, arg1: number, arg2: number): void;
        func_195050_f(arg0: number): number;
        func_200600_R(): Internal.EntityType<any>;
        func_82147_ab(): number;
        func_130014_f_(): Internal.World;
        func_184186_bw(): boolean;
        func_70100_b_(arg0: Internal.PlayerEntity): void;
        func_225503_b_(arg0: number, arg1: number): boolean;
        func_226271_bk_(): boolean;
        func_70103_a(arg0: number): void;
        func_70067_L(): boolean;
        func_226284_e_(arg0: boolean): void;
        func_184190_l(arg0: Internal.Entity): void;
        func_184198_c(arg0: Internal.CompoundNBT_): boolean;
        func_70092_e(arg0: number, arg1: number, arg2: number): number;
        func_184187_bx(): Internal.Entity;
        func_195046_g(arg0: number): number;
        func_189652_ae(): boolean;
        func_70033_W(): number;
        func_145818_k_(): boolean;
        func_213305_a(arg0: Internal.Pose_): Internal.EntitySize;
        func_205708_a(arg0: Internal.Class<Internal.Entity>): boolean;
        func_184210_p(): void;
        func_70080_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_200203_b(arg0: Internal.ITextComponent_): void;
        func_70068_e(arg0: Internal.Entity): number;
        func_184201_a(arg0: EquipmentSlot_, arg1: Internal.ItemStack): void;
        func_180432_n(arg0: Internal.Entity): void;
        func_184221_a(arg0: Internal.UUID): void;
        func_184222_aU(): boolean;
        func_226277_ct_(): number;
        func_180428_a(arg0: Internal.Explosion, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.FluidState, arg5: number): number;
        func_205710_ba(): boolean;
        func_184229_a(arg0: Internal.Rotation_): number;
        func_233571_b_(arg0: Internal.ITag<Internal.Fluid>): number;
        func_225608_bj_(): boolean;
        beGetCooldown(): number;
        func_213317_d(arg0: Vec3): void;
        func_241845_aY(): boolean;
        func_213283_Z(): Internal.Pose;
        getEntity(): Internal.Entity;
        func_181013_g(arg0: number): void;
        getDirtyEntries(): Internal.Set<any>;
        func_70022_Q(): string;
        func_230269_aK_(): boolean;
        func_184199_a(arg0: Internal.PlayerEntity, arg1: Vec3, arg2: Hand_): Internal.ActionResultType;
        func_174813_aQ(): Internal.AxisAlignedBB;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        beResetExitPos(): void;
        func_70034_d(arg0: number): void;
        func_225510_bt_(): boolean;
        func_203002_i(arg0: boolean): void;
        func_184191_r(arg0: Internal.Entity): boolean;
        func_70099_a(arg0: Internal.ItemStack, arg1: number): Internal.ItemEntity;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        captureDrops(arg0: Internal.Collection<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        func_174826_a(arg0: Internal.AxisAlignedBB): void;
        func_199701_a_(arg0: Internal.ItemStack): Internal.ItemEntity;
        func_213303_ch(): Vec3;
        func_184213_bq(): boolean;
        func_70071_h_(): void;
        func_189653_aC(): Internal.Vector2f;
        func_233576_c_(arg0: Vec3): void;
        static func_213313_a(arg0: Vec3, arg1: Internal.AxisAlignedBB, arg2: Internal.IWorldReader, arg3: Internal.ISelectionContext, arg4: Internal.ReuseableStream<Internal.VoxelShape>): Vec3;
        func_174814_R(): boolean;
        func_226283_e_(arg0: number): number;
        func_184206_a(arg0: Internal.DataParameter<any>): void;
        func_195041_r_(): boolean;
        func_184214_aD(): Internal.Iterable<Internal.ItemStack>;
        func_233578_ci_(): boolean;
        func_70090_H(): boolean;
        getPersistentDataKJS(): Internal.CompoundNBT;
        func_70079_am(): number;
        func_184196_w(arg0: Internal.Entity): boolean;
        canUpdate(arg0: boolean): void;
        canUpdate(): boolean;
        func_174815_a(arg0: Internal.LivingEntity, arg1: Internal.Entity): void;
        func_184182_bu(): Internal.Collection<Internal.Entity>;
        func_184224_h(arg0: boolean): void;
        getEyeHeightAccess(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        canRiderInteract(): boolean;
        func_70098_U(): void;
        func_203003_aK(): boolean;
        func_203008_ap(): boolean;
        func_184212_Q(): Internal.EntityDataManager;
        func_82143_as(): number;
        func_200200_C_(): Internal.ITextComponent;
        func_70623_bb(): void;
        func_233570_aj_(): boolean;
        func_184176_by(): Internal.SoundCategory;
        func_70012_b(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_242277_a(arg0: Vec3): void;
        shouldRiderSit(): boolean;
        func_70050_g(arg0: number): void;
        func_242278_a(arg0: BlockPos, arg1: Internal.BlockState): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_174827_a(arg0: Internal.ServerPlayerEntity): boolean;
        beCanTeleport(): boolean;
        func_213314_bj(): boolean;
        func_145770_h(arg0: number, arg1: number, arg2: number): boolean;
        func_70112_a(arg0: number): boolean;
        func_184177_bl(): Internal.AxisAlignedBB;
        func_226280_cw_(): number;
        func_200602_a(arg0: Internal.EntityAnchorArgument$Type_, arg1: Vec3): void;
        setDataMap(arg0: Internal.Map_<any,any>): void;
        beSetExitPos(arg0: BlockPos): void;
        func_226272_bl_(): boolean;
        static func_184183_bd(): number;
        func_241847_a(arg0: Internal.ServerWorld, arg1: Internal.LivingEntity): void;
        func_70634_a(arg0: number, arg1: number, arg2: number): void;
        func_226278_cu_(): number;
        func_70024_g(arg0: number, arg1: number, arg2: number): void;
        func_200201_e(): Internal.ITextComponent;
        func_226281_cx_(): number;
        func_70047_e(): number;
        func_205343_av(): void;
        func_175149_v(): boolean;
        func_242281_f(arg0: number, arg1: number, arg2: number): void;
        getParts(): Internal.PartEntity<any>[];
        func_174816_a(arg0: Internal.Explosion, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: number): boolean;
        func_203007_ba(): boolean;
        func_242282_l(arg0: number): Vec3;
        func_184188_bt(): Internal.List<Internal.Entity>;
        func_213302_cg(): number;
        func_70108_f(arg0: Internal.Entity): void;
        func_209511_p(): boolean;
        func_233580_cy_(): BlockPos;
        func_184185_a(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        clean(): void;
        func_213315_a(arg0: Internal.MoverType_, arg1: Vec3): void;
        func_82149_j(arg0: Internal.Entity): void;
        func_225653_b_(arg0: number, arg1: number, arg2: number): void;
        func_145782_y(): number;
        getTouchedHoney(): boolean;
        func_184197_b(arg0: string): boolean;
        func_241205_ce_(): Vec3;
        setValue(arg0: Internal.TrackedData<any>, arg1: any): void;
        setTouchingHoney(arg0: boolean): void;
        func_184223_x(arg0: Internal.Entity): boolean;
        setRemainingFireTicks(arg0: number): void;
        func_70111_Y(): number;
        func_70097_a(arg0: Internal.DamageSource_, arg1: number): boolean;
        func_70013_c(): number;
        field_70127_C: number;
        field_70124_G: boolean;
        field_70158_ak: boolean;
        field_70160_al: boolean;
        field_242271_ac: BlockPos;
        field_70170_p: Internal.World;
        field_70125_A: number;
        field_70122_E: boolean;
        field_70162_ai: number;
        field_70126_B: number;
        field_70123_F: boolean;
        field_71087_bX: boolean;
        field_70164_aj: number;
        field_70121_D: Internal.AxisAlignedBB;
        field_70138_W: number;
        field_233557_ao_: Vec3;
        field_70137_T: number;
        field_70136_U: number;
        field_242273_aw: number;
        field_213325_aI: Internal.EntitySize;
        field_70169_q: number;
        field_70175_ag: boolean;
        field_70167_r: number;
        field_70166_s: number;
        field_70173_aa: number;
        field_70171_ac: boolean;
        field_70133_I: boolean;
        field_98038_p: boolean;
        field_82151_R: number;
        readonly field_70146_Z: Internal.Random;
        field_205013_W: boolean;
        field_70177_z: number;
        field_70145_X: boolean;
        field_70144_Y: number;
        field_82153_h: number;
        field_213326_aJ: number;
        field_184245_j: number;
        field_70143_R: number;
        field_70142_S: number;
        field_70176_ah: number;
        field_70128_L: boolean;
        field_70141_P: number;
        field_70140_Q: number;
        field_70156_m: boolean;
        field_70172_ad: number;
        get dirty(): boolean;
        get firstTick(): boolean;
        get persistentData(): Internal.CompoundNBT;
        get remainingFireTicks(): number;
        get multipartEntity(): boolean;
        get addedToWorld(): boolean;
        get dirtyEntries(): Internal.Set<any>;
        get random(): Internal.Random;
        get touchedHoney(): boolean;
        get persistentDataKJS(): Internal.CompoundNBT;
        get dataMap(): Internal.Map<any, any>;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        set remainingFireTicks(arg0: number);
        set dataMap(arg0: Internal.Map_<any,any>);
        set touchingHoney(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<any>, arg1: Internal.World);
    }
    type Entity_ = Entity;
    class NumberFormat$Style extends Internal.Enum<Internal.NumberFormat$Style> {
        static valueOf(arg0: string): Internal.NumberFormat$Style;
        static values(): Internal.NumberFormat$Style[];
        static readonly SHORT: Internal.NumberFormat$Style;
        static readonly LONG: Internal.NumberFormat$Style;
    }
    type NumberFormat$Style_ = "short" | "long" | NumberFormat$Style;
    interface FrustumExtended {
        fastAabbTest(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
    }
    type FrustumExtended_ = ((arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number)=>boolean) | FrustumExtended;
    class ChronoUnit extends Internal.Enum<Internal.ChronoUnit> implements Internal.TemporalUnit {
        isDurationEstimated(): boolean;
        getDuration(): Internal.Duration;
        static valueOf(arg0: string): Internal.ChronoUnit;
        isTimeBased(): boolean;
        static values(): Internal.ChronoUnit[];
        addTo<R_>(arg0: R_, arg1: number): R_;
        isDateBased(): boolean;
        between(arg0: Internal.Temporal, arg1: Internal.Temporal): number;
        isSupportedBy(arg0: Internal.Temporal): boolean;
        static readonly FOREVER: Internal.ChronoUnit;
        static readonly MICROS: Internal.ChronoUnit;
        static readonly SECONDS: Internal.ChronoUnit;
        static readonly DECADES: Internal.ChronoUnit;
        static readonly MILLENNIA: Internal.ChronoUnit;
        static readonly DAYS: Internal.ChronoUnit;
        static readonly MILLIS: Internal.ChronoUnit;
        static readonly HALF_DAYS: Internal.ChronoUnit;
        static readonly MONTHS: Internal.ChronoUnit;
        static readonly YEARS: Internal.ChronoUnit;
        static readonly HOURS: Internal.ChronoUnit;
        static readonly WEEKS: Internal.ChronoUnit;
        static readonly NANOS: Internal.ChronoUnit;
        static readonly CENTURIES: Internal.ChronoUnit;
        static readonly MINUTES: Internal.ChronoUnit;
        static readonly ERAS: Internal.ChronoUnit;
        get duration(): Internal.Duration;
        get durationEstimated(): boolean;
        get timeBased(): boolean;
        get dateBased(): boolean;
    }
    type ChronoUnit_ = "nanos" | "micros" | "millis" | "seconds" | "minutes" | "hours" | "half_days" | "days" | "weeks" | "months" | "years" | "decades" | "centuries" | "millennia" | "eras" | "forever" | ChronoUnit;
    class LivingDestroyBlockEvent extends Internal.LivingEvent {
        getState(): Internal.BlockState;
        getPos(): BlockPos;
        get pos(): BlockPos;
        get state(): Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: BlockPos, arg2: Internal.BlockState);
    }
    type LivingDestroyBlockEvent_ = LivingDestroyBlockEvent;
    abstract class AbstractObjectCollection <K> extends Internal.AbstractCollection<K> implements Internal.ObjectCollection<K> {
        iterator(): Internal.ObjectIterator<K>;
        iterator(): Internal.Iterator<any>;
        spliterator(): Internal.Spliterator<K>;
        stream(): Internal.Stream<K>;
        forEach(arg0: Internal.Consumer_<K>): void;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<K>;
        removeIf(arg0: Internal.Predicate_<K>): boolean;
    }
    type AbstractObjectCollection_<K> = AbstractObjectCollection<K>;
    interface VillagerTypeAccess {
    }
    type VillagerTypeAccess_ = VillagerTypeAccess;
    abstract class PlayerEntity extends Internal.LivingEntity implements Internal.PlayerEntityAccess, Internal.PlayerKJS {
        func_146097_a(arg0: Internal.ItemStack, arg1: boolean, arg2: boolean): Internal.ItemEntity;
        func_195066_a(arg0: ResourceLocation_): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_71004_bE(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_226567_ej_(): void;
        func_71059_n(arg0: Internal.Entity): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_184814_a(arg0: Internal.ItemStack, arg1: Hand_): void;
        func_184810_cG(): void;
        getSuffixes(): Internal.Collection<Internal.IFormattableTextComponent>;
        func_85040_s(arg0: number): void;
        func_71024_bL(): Internal.FoodStats;
        func_195070_dx(): boolean;
        func_184825_o(arg0: number): number;
        func_226563_dT_(): boolean;
        func_175138_ci(): number;
        func_71029_a(arg0: Internal.Stat<any>): void;
        getPrefixes(): Internal.Collection<Internal.IFormattableTextComponent>;
        static func_234570_el_(): Internal.AttributeModifierMap$MutableAttribute;
        func_175141_a(arg0: Internal.SignTileEntity): void;
        getStagesKJS(): Internal.Stages;
        func_195065_a(arg0: Internal.Collection<Internal.IRecipe<any>>): number;
        func_175144_cb(): boolean;
        func_71050_bK(): number;
        handler$chn000$diet$constructPlayer(arg0: Internal.CallbackInfo): void;
        static func_175147_b(arg0: string): Internal.UUID;
        func_71016_p(): void;
        func_184819_a(arg0: Internal.HandSide_): void;
        func_190777_m(arg0: boolean): void;
        func_195069_b(arg0: Internal.Collection<Internal.IRecipe<any>>): number;
        func_184812_l_(): boolean;
        func_96122_a(arg0: Internal.PlayerEntity): boolean;
        func_213823_a(arg0: Internal.SoundEvent_, arg1: Internal.SoundCategory_, arg2: number, arg3: number): void;
        func_184821_cY(): void;
        func_184818_cX(): number;
        func_71005_bN(): Internal.EnderChestInventory;
        func_175150_k(arg0: boolean): void;
        getEntity(): Internal.Entity;
        func_71047_c(arg0: Internal.Entity): void;
        static func_242374_a(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: number, arg3: boolean, arg4: boolean): Internal.Optional<Vec3>;
        func_71043_e(arg0: boolean): boolean;
        func_71009_b(arg0: Internal.Entity): void;
        func_225652_a_(arg0: boolean, arg1: boolean): void;
        func_71020_j(arg0: number): void;
        func_241208_cS_(): boolean;
        func_226568_ek_(): void;
        func_184826_a(arg0: Internal.AbstractHorseEntity, arg1: Internal.IInventory): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        refreshDisplayName(): void;
        getForcedPose(): Internal.Pose;
        func_175148_a(arg0: Internal.PlayerModelPart_): boolean;
        func_226566_ei_(): boolean;
        func_225609_n_(arg0: boolean): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        botania$setCritTarget(arg0: Internal.LivingEntity): void;
        func_195068_e(arg0: number): void;
        func_70065_x(): void;
        func_192027_g(arg0: Internal.CompoundNBT_): boolean;
        func_71064_a(arg0: Internal.Stat<any>, arg1: number): void;
        func_71053_j(): void;
        func_213826_a(arg0: Internal.JigsawTileEntity): void;
        func_213348_b(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_189807_a(arg0: Internal.StructureBlockTileEntity): void;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_71019_a(arg0: Internal.ItemStack, arg1: boolean): Internal.ItemEntity;
        func_175151_a(arg0: BlockPos, arg1: Internal.Direction_, arg2: Internal.ItemStack): boolean;
        getDigSpeed(arg0: Internal.BlockState, arg1: BlockPos): number;
        func_192025_dl(): Internal.CompoundNBT;
        func_146105_b(arg0: Internal.ITextComponent_, arg1: boolean): void;
        func_71037_bA(): number;
        func_223729_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.GameType_): boolean;
        func_193102_a(arg0: ResourceLocation[]): void;
        func_70996_bM(): boolean;
        func_175140_cp(): boolean;
        setForcedPose(arg0: Internal.Pose_): void;
        canRiderInteract(): boolean;
        func_234569_d_(arg0: Internal.BlockState): boolean;
        func_96123_co(): Internal.Scoreboard;
        func_184817_da(): number;
        func_82242_a(arg0: number): void;
        func_71000_j(arg0: number, arg1: number, arg2: number): void;
        func_191521_c(arg0: Internal.ItemStack): boolean;
        func_213819_a(arg0: BlockPos): Internal.Either<Internal.PlayerEntity$SleepResult, Internal.Unit>;
        getClassification(arg0: boolean): Internal.EntityClassification;
        shouldRiderSit(): boolean;
        func_195067_a(arg0: ResourceLocation_, arg1: number): void;
        redirect$ble001$elytraOverride(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        func_70664_aZ(): void;
        func_146103_bH(): Internal.GameProfile;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_175145_a(arg0: Internal.Stat<any>): void;
        func_192024_a(arg0: Internal.ItemStack, arg1: number): void;
        getStagesRawKJS(): Internal.Stages;
        static func_146094_a(arg0: Internal.GameProfile): Internal.UUID;
        func_184811_cZ(): Internal.CooldownTracker;
        func_190775_a(arg0: Internal.Entity, arg1: Hand_): Internal.ActionResultType;
        func_192023_dk(): Internal.CompoundNBT;
        func_213829_a(arg0: Internal.INamedContainerProvider_): Internal.OptionalInt;
        func_184813_a(arg0: Internal.BlockState): number;
        func_85039_t(arg0: number): void;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        func_184809_a(arg0: Internal.CommandBlockLogic): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_71026_bH(): boolean;
        asKJS(): any;
        func_71033_a(arg0: Internal.GameType_): void;
        func_175142_cm(): boolean;
        func_71060_bI(): number;
        func_213818_a(arg0: number, arg1: Internal.MerchantOffers, arg2: number, arg3: number, arg4: boolean, arg5: boolean): void;
        func_184824_a(arg0: Internal.CommandBlockTileEntity): void;
        field_71104_cf: Internal.FishingBobberEntity;
        field_71097_bO: number;
        field_71096_bN: number;
        static field_213836_b: {};
        field_71085_bR: number;
        static field_213835_bs: Internal.EntitySize;
        field_71070_bA: Internal.Container;
        field_71069_bz: Internal.PlayerContainer;
        field_71076_b: number;
        readonly field_71075_bZ: Internal.PlayerAbilities;
        readonly field_71071_by: Internal.PlayerInventory;
        field_71106_cc: number;
        field_71094_bP: number;
        field_71090_bL: number;
        field_71091_bM: number;
        field_71107_bF: number;
        field_71109_bG: number;
        field_71095_bQ: number;
        field_71068_ca: number;
        field_71067_cb: number;
        static readonly PERSISTED_NBT_TAG: "PlayerPersisted";
        get suffixes(): Internal.Collection<Internal.IFormattableTextComponent>;
        get prefixes(): Internal.Collection<Internal.IFormattableTextComponent>;
        get forcedPose(): Internal.Pose;
        get stagesKJS(): Internal.Stages;
        get stagesRawKJS(): Internal.Stages;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        set forcedPose(arg0: Internal.Pose_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: BlockPos, arg2: number, arg3: Internal.GameProfile);
    }
    type PlayerEntity_ = PlayerEntity;
    interface ActionListener extends Internal.EventListener {
        actionPerformed(arg0: Internal.ActionEvent): void;
        (arg0: Internal.ActionEvent): void;
    }
    type ActionListener_ = ((arg0: Internal.ActionEvent)=>void) | ActionListener;
    interface Decoder <A> {
        simple(): Internal.Decoder$Simple<A>;
        terminal(): Internal.Decoder$Terminal<A>;
        parse<T>(arg0: Internal.DynamicOps<T>, arg1: T): Internal.DataResult<A>;
        parse<T>(arg0: Internal.Dynamic<T>): Internal.DataResult<A>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Decoder<A>;
        decode<T>(arg0: Internal.DynamicOps<T>, arg1: T): Internal.DataResult<Internal.Pair<A, T>>;
        decode<T>(arg0: Internal.Dynamic<T>): Internal.DataResult<Internal.Pair<A, T>>;
        promotePartial(arg0: Internal.Consumer_<string>): Internal.Decoder<A>;
        flatMap<B>(arg0: Internal.Function_<A, Internal.DataResult_<B>>): Internal.Decoder<B>;
        boxed(): Internal.Decoder$Boxed<A>;
        fieldOf(arg0: string): Internal.MapDecoder<A>;
        map<B>(arg0: Internal.Function_<A, B>): Internal.Decoder<B>;
        (arg0: Internal.DynamicOps<T>, arg1: T): Internal.DataResult<Internal.Pair<A, T>>;
    }
    type Decoder_<A> = ((arg0: Internal.DynamicOps<T>, arg1: T)=>Internal.DataResult<Internal.Pair<A, T>>) | Decoder<A>;
    class DecimalStyle extends Document.Object {
        withPositiveSign(arg0: string): Internal.DecimalStyle;
        getPositiveSign(): string;
        getDecimalSeparator(): string;
        withDecimalSeparator(arg0: string): Internal.DecimalStyle;
        static of(arg0: Internal.Locale): Internal.DecimalStyle;
        withNegativeSign(arg0: string): Internal.DecimalStyle;
        getNegativeSign(): string;
        withZeroDigit(arg0: string): Internal.DecimalStyle;
        static getAvailableLocales(): Internal.Set<Internal.Locale>;
        static ofDefaultLocale(): Internal.DecimalStyle;
        getZeroDigit(): string;
        static readonly STANDARD: Internal.DecimalStyle;
        get negativeSign(): string;
        get decimalSeparator(): string;
        get zeroDigit(): string;
        get positiveSign(): string;
        get availableLocales(): Internal.Set<Internal.Locale>;
    }
    type DecimalStyle_ = DecimalStyle;
    class ShulkerBoxContainer extends Internal.Container {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IInventory);
    }
    type ShulkerBoxContainer_ = ShulkerBoxContainer;
    interface IFlinging {
        func_230290_eL_(): number;
        (): number;
    }
    type IFlinging_ = (()=>number) | IFlinging;
    class Event extends Document.Object implements Internal.Comparable<Internal.Event> {
        offset(): number;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.Event): number;
        event(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: number);
    }
    type Event_ = Event;
    interface FlavorListener extends Internal.EventListener {
        flavorsChanged(arg0: Internal.FlavorEvent): void;
        (arg0: Internal.FlavorEvent): void;
    }
    type FlavorListener_ = ((arg0: Internal.FlavorEvent)=>void) | FlavorListener;
    class PlayerJoinedWorldEvent extends Internal.JeiEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PlayerJoinedWorldEvent_ = PlayerJoinedWorldEvent;
    abstract class Button extends Internal.Widget {
        setIcon(i: Internal.Icon): Internal.Button;
        closeGui(openPrevScreen: boolean): void;
        closeGui(): void;
        openContextMenu(panel: Internal.Panel): void;
        openGui(): void;
        drawBackground(matrixStack: Internal.MatrixStack, theme: Internal.Theme, x: number, y: number, w: number, h: number): void;
        openGuiLater(): void;
        onClicked(arg0: Internal.MouseButton): void;
        setTitle(s: Internal.ITextComponent_): Internal.Button;
        run(): void;
        openAfter(runnable: Internal.Runnable_): Internal.Runnable;
        drawIcon(matrixStack: Internal.MatrixStack, theme: Internal.Theme, x: number, y: number, w: number, h: number): void;
        closeContextMenu(): void;
        set icon(i: Internal.Icon);
        set title(s: Internal.ITextComponent_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(panel: Internal.Panel, t: Internal.ITextComponent, i: Internal.Icon);
        constructor(panel: Internal.Panel);
    }
    type Button_ = Button;
    class RestrictedCompoundTag extends Document.Object {
        getCompound(arg0: string): Internal.CompoundNBT;
        putInt(arg0: string, arg1: number): void;
        putString(arg0: string, arg1: string): void;
        getString(arg0: string): string;
        getFloat(arg0: string): number;
        put(arg0: string, arg1: Internal.INBT): void;
        remove(arg0: string): void;
        putFloat(arg0: string, arg1: number): void;
        getInt(arg0: string): number;
        contains(arg0: string, arg1: number): boolean;
        getList(arg0: string, arg1: number): Internal.ListNBT;
        get(arg0: string): Internal.INBT;
        getBoolean(arg0: string): boolean;
        putBoolean(arg0: string, arg1: boolean): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CompoundNBT, arg1: Internal.Set<string>);
    }
    type RestrictedCompoundTag_ = RestrictedCompoundTag;
    abstract class SampleModel extends Document.Object {
        createSubsetSampleModel(arg0: number[]): Internal.SampleModel;
        setSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: Internal.DataBuffer): void;
        setSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: Internal.DataBuffer): void;
        setSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: Internal.DataBuffer): void;
        setPixel(arg0: number, arg1: number, arg2: number[], arg3: Internal.DataBuffer): void;
        setPixel(arg0: number, arg1: number, arg2: number[], arg3: Internal.DataBuffer): void;
        setPixel(arg0: number, arg1: number, arg2: number[], arg3: Internal.DataBuffer): void;
        setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: Internal.DataBuffer): void;
        setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: Internal.DataBuffer): void;
        setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: Internal.DataBuffer): void;
        getDataType(): number;
        getSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: Internal.DataBuffer): number[];
        getSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: Internal.DataBuffer): number[];
        getSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: Internal.DataBuffer): number[];
        getSampleFloat(arg0: number, arg1: number, arg2: number, arg3: Internal.DataBuffer): number;
        getSampleSize(arg0: number): number;
        getSampleSize(): number[];
        getPixel(arg0: number, arg1: number, arg2: number[], arg3: Internal.DataBuffer): number[];
        getPixel(arg0: number, arg1: number, arg2: number[], arg3: Internal.DataBuffer): number[];
        getPixel(arg0: number, arg1: number, arg2: number[], arg3: Internal.DataBuffer): number[];
        getNumDataElements(): number;
        getNumBands(): number;
        getWidth(): number;
        getHeight(): number;
        createDataBuffer(): Internal.DataBuffer;
        getTransferType(): number;
        createCompatibleSampleModel(arg0: number, arg1: number): Internal.SampleModel;
        getPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: Internal.DataBuffer): number[];
        getPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: Internal.DataBuffer): number[];
        getPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: Internal.DataBuffer): number[];
        getDataElements(arg0: number, arg1: number, arg2: number, arg3: number, arg4: any, arg5: Internal.DataBuffer): any;
        getDataElements(arg0: number, arg1: number, arg2: any, arg3: Internal.DataBuffer): any;
        setDataElements(arg0: number, arg1: number, arg2: any, arg3: Internal.DataBuffer): void;
        setDataElements(arg0: number, arg1: number, arg2: number, arg3: number, arg4: any, arg5: Internal.DataBuffer): void;
        getSample(arg0: number, arg1: number, arg2: number, arg3: Internal.DataBuffer): number;
        setSample(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.DataBuffer): void;
        setSample(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.DataBuffer): void;
        setSample(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.DataBuffer): void;
        getSampleDouble(arg0: number, arg1: number, arg2: number, arg3: Internal.DataBuffer): number;
        get numDataElements(): number;
        get numBands(): number;
        get dataType(): number;
        get width(): number;
        get transferType(): number;
        get sampleSize(): number[];
        get height(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type SampleModel_ = SampleModel;
    class RewardAutoClaim extends Internal.Enum<Internal.RewardAutoClaim> {
        static valueOf(arg0: string): Internal.RewardAutoClaim;
        static values(): Internal.RewardAutoClaim[];
        static readonly DISABLED: Internal.RewardAutoClaim;
        static readonly NO_TOAST: Internal.RewardAutoClaim;
        static readonly INVISIBLE: Internal.RewardAutoClaim;
        static readonly NAME_MAP: Internal.NameMap<Internal.RewardAutoClaim>;
        static readonly NAME_MAP_NO_DEFAULT: Internal.NameMap<Internal.RewardAutoClaim>;
        static readonly ENABLED: Internal.RewardAutoClaim;
        id: string;
        static readonly DEFAULT: Internal.RewardAutoClaim;
    }
    type RewardAutoClaim_ = "default" | "disabled" | "enabled" | "no_toast" | "invisible" | RewardAutoClaim;
    class ChatType extends Internal.Enum<Internal.ChatType> {
        static valueOf(arg0: string): Internal.ChatType;
        func_218690_b(): boolean;
        static values(): Internal.ChatType[];
        static func_192582_a(arg0: number): Internal.ChatType;
        func_192583_a(): number;
        static readonly SYSTEM: Internal.ChatType;
        static readonly CHAT: Internal.ChatType;
        static readonly GAME_INFO: Internal.ChatType;
    }
    type ChatType_ = "chat" | "system" | "game_info" | ChatType;
    interface ConfigData {
        validatePostLoad(): void;
    }
    type ConfigData_ = ConfigData;
    interface ObjectBidirectionalIterable <K> extends Internal.ObjectIterable<K> {
        iterator(): Internal.ObjectBidirectionalIterator<K>;
        iterator(): Internal.ObjectIterator<any>;
        iterator(): Internal.Iterator<any>;
        (): Internal.ObjectBidirectionalIterator<K>;
    }
    type ObjectBidirectionalIterable_<K> = (()=>Internal.ObjectBidirectionalIterator<K>) | ObjectBidirectionalIterable<K>;
    class BaseFunction extends Internal.IdScriptableObject implements dev.latvian.mods.rhino.Function {
        getFunctionName(): string;
        call(cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        setImmunePrototypeProperty(value: any): void;
        getLength(): number;
        construct(cx: Internal.Context, scope: Internal.Scriptable, args: any[]): Internal.Scriptable;
        getArity(): number;
        createObject(cx: Internal.Context, scope: Internal.Scriptable): Internal.Scriptable;
        get arity(): number;
        get functionName(): string;
        get length(): number;
        set immunePrototypeProperty(value: any);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(scope: Internal.Scriptable, prototype: Internal.Scriptable);
        constructor(isGenerator: boolean);
    }
    type BaseFunction_ = BaseFunction;
    class VariantBlockStateGenerator extends Document.Object {
        toJson(): Internal.JsonObject;
        variant(key: string, model: string): void;
        variant(key: string, consumer: Internal.Consumer_<Internal.VariantBlockStateGenerator$Variant_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type VariantBlockStateGenerator_ = VariantBlockStateGenerator;
    class AccessibleRelation extends Internal.AccessibleBundle {
        getKey(): string;
        getTarget(): any[];
        setTarget(arg0: any): void;
        setTarget(arg0: any[]): void;
        static readonly EMBEDS: "embeds";
        static readonly EMBEDDED_BY: "embeddedBy";
        static readonly FLOWS_FROM_PROPERTY: "flowsFromProperty";
        static readonly LABELED_BY: "labeledBy";
        static readonly MEMBER_OF: "memberOf";
        static readonly SUBWINDOW_OF: "subwindowOf";
        static readonly LABELED_BY_PROPERTY: "labeledByProperty";
        static readonly CHILD_NODE_OF: "childNodeOf";
        static readonly SUBWINDOW_OF_PROPERTY: "subwindowOfProperty";
        static readonly CONTROLLED_BY: "controlledBy";
        static readonly EMBEDDED_BY_PROPERTY: "embeddedByProperty";
        static readonly LABEL_FOR: "labelFor";
        static readonly CONTROLLER_FOR: "controllerFor";
        static readonly PARENT_WINDOW_OF: "parentWindowOf";
        static readonly EMBEDS_PROPERTY: "embedsProperty";
        static readonly CONTROLLER_FOR_PROPERTY: "controllerForProperty";
        static readonly FLOWS_TO_PROPERTY: "flowsToProperty";
        static readonly CONTROLLED_BY_PROPERTY: "controlledByProperty";
        static readonly FLOWS_FROM: "flowsFrom";
        static readonly LABEL_FOR_PROPERTY: "labelForProperty";
        static readonly CHILD_NODE_OF_PROPERTY: "childNodeOfProperty";
        static readonly PARENT_WINDOW_OF_PROPERTY: "parentWindowOfProperty";
        static readonly FLOWS_TO: "flowsTo";
        static readonly MEMBER_OF_PROPERTY: "memberOfProperty";
        get key(): string;
        get target(): any[];
        set target(arg0: any[]);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: any[]);
        constructor(arg0: string, arg1: any);
        constructor(arg0: string);
    }
    type AccessibleRelation_ = AccessibleRelation;
    class ForgeConfigSpec$Builder extends Document.Object {
        defineEnum<V_>(arg0: string, arg1: V_, arg2: Internal.Collection<V_>): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: Internal.List<string>, arg1: V_, arg2: Internal.EnumGetMethod_, ...arg3: V_[]): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: Internal.List<string>, arg1: V_, ...arg2: V_[]): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: string, arg1: V_, arg2: Internal.EnumGetMethod_, arg3: Internal.Collection<V_>): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: Internal.List<string>, arg1: V_, arg2: Internal.Collection<V_>): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: string, arg1: V_, arg2: Internal.EnumGetMethod_): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: Internal.List<string>, arg1: V_): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: Internal.List<string>, arg1: V_, arg2: Internal.EnumGetMethod_): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: string, arg1: V_, ...arg2: V_[]): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: string, arg1: V_, arg2: Internal.EnumGetMethod_, ...arg3: V_[]): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: Internal.List<string>, arg1: V_, arg2: Internal.EnumGetMethod_, arg3: Internal.Predicate_<any>): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: string, arg1: java_.util.function_.Supplier_<V_>, arg2: Internal.Predicate_<any>, arg3: Internal.Class<V_>): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: string, arg1: java_.util.function_.Supplier_<V_>, arg2: Internal.EnumGetMethod_, arg3: Internal.Predicate_<any>, arg4: Internal.Class<V_>): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<V_>, arg2: Internal.Predicate_<any>, arg3: Internal.Class<V_>): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<V_>, arg2: Internal.EnumGetMethod_, arg3: Internal.Predicate_<any>, arg4: Internal.Class<V_>): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: string, arg1: V_): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: Internal.List<string>, arg1: V_, arg2: Internal.EnumGetMethod_, arg3: Internal.Collection<V_>): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: string, arg1: V_, arg2: Internal.Predicate_<any>): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: string, arg1: V_, arg2: Internal.EnumGetMethod_, arg3: Internal.Predicate_<any>): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineEnum<V_>(arg0: Internal.List<string>, arg1: V_, arg2: Internal.Predicate_<any>): Internal.ForgeConfigSpec$EnumValue<V_>;
        defineList<T_>(arg0: string, arg1: Internal.List<T_>, arg2: Internal.Predicate_<any>): Internal.ForgeConfigSpec$ConfigValue<Internal.List<T_>>;
        defineList<T_>(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<Internal.List_<T_>>, arg2: Internal.Predicate_<any>): Internal.ForgeConfigSpec$ConfigValue<Internal.List<T_>>;
        defineList<T_>(arg0: Internal.List<string>, arg1: Internal.List<T_>, arg2: Internal.Predicate_<any>): Internal.ForgeConfigSpec$ConfigValue<Internal.List<T_>>;
        defineList<T_>(arg0: string, arg1: java_.util.function_.Supplier_<Internal.List_<T_>>, arg2: Internal.Predicate_<any>): Internal.ForgeConfigSpec$ConfigValue<Internal.List<T_>>;
        configure<T_>(arg0: Internal.Function_<Internal.ForgeConfigSpec$Builder_, T_>): org.apache.commons.lang3.tuple.Pair<T_, Internal.ForgeConfigSpec>;
        push(arg0: string): Internal.ForgeConfigSpec$Builder;
        push(arg0: Internal.List<string>): Internal.ForgeConfigSpec$Builder;
        defineInList<T_>(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<T_>, arg2: Internal.Collection<T_>): Internal.ForgeConfigSpec$ConfigValue<T_>;
        defineInList<T_>(arg0: Internal.List<string>, arg1: T_, arg2: Internal.Collection<T_>): Internal.ForgeConfigSpec$ConfigValue<T_>;
        defineInList<T_>(arg0: string, arg1: T_, arg2: Internal.Collection<T_>): Internal.ForgeConfigSpec$ConfigValue<T_>;
        defineInList<T_>(arg0: string, arg1: java_.util.function_.Supplier_<T_>, arg2: Internal.Collection<T_>): Internal.ForgeConfigSpec$ConfigValue<T_>;
        pop(): Internal.ForgeConfigSpec$Builder;
        pop(arg0: number): Internal.ForgeConfigSpec$Builder;
        defineInRange(arg0: string, arg1: java_.util.function_.Supplier_<number>, arg2: number, arg3: number): Internal.ForgeConfigSpec$DoubleValue;
        defineInRange(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<number>, arg2: number, arg3: number): Internal.ForgeConfigSpec$DoubleValue;
        defineInRange(arg0: string, arg1: number, arg2: number, arg3: number): Internal.ForgeConfigSpec$IntValue;
        defineInRange(arg0: Internal.List<string>, arg1: number, arg2: number, arg3: number): Internal.ForgeConfigSpec$IntValue;
        defineInRange(arg0: Internal.List<string>, arg1: number, arg2: number, arg3: number): Internal.ForgeConfigSpec$DoubleValue;
        defineInRange(arg0: string, arg1: number, arg2: number, arg3: number): Internal.ForgeConfigSpec$DoubleValue;
        defineInRange<V_>(arg0: string, arg1: V_, arg2: V_, arg3: V_, arg4: Internal.Class<V_>): Internal.ForgeConfigSpec$ConfigValue<V_>;
        defineInRange(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<number>, arg2: number, arg3: number): Internal.ForgeConfigSpec$LongValue;
        defineInRange(arg0: string, arg1: java_.util.function_.Supplier_<number>, arg2: number, arg3: number): Internal.ForgeConfigSpec$LongValue;
        defineInRange(arg0: Internal.List<string>, arg1: number, arg2: number, arg3: number): Internal.ForgeConfigSpec$LongValue;
        defineInRange(arg0: string, arg1: number, arg2: number, arg3: number): Internal.ForgeConfigSpec$LongValue;
        defineInRange(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<number>, arg2: number, arg3: number): Internal.ForgeConfigSpec$IntValue;
        defineInRange(arg0: string, arg1: java_.util.function_.Supplier_<number>, arg2: number, arg3: number): Internal.ForgeConfigSpec$IntValue;
        defineInRange<V_>(arg0: string, arg1: java_.util.function_.Supplier_<V_>, arg2: V_, arg3: V_, arg4: Internal.Class<V_>): Internal.ForgeConfigSpec$ConfigValue<V_>;
        defineInRange<V_>(arg0: Internal.List<string>, arg1: V_, arg2: V_, arg3: V_, arg4: Internal.Class<V_>): Internal.ForgeConfigSpec$ConfigValue<V_>;
        defineInRange<V_>(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<V_>, arg2: V_, arg3: V_, arg4: Internal.Class<V_>): Internal.ForgeConfigSpec$ConfigValue<V_>;
        worldRestart(): Internal.ForgeConfigSpec$Builder;
        build(): Internal.ForgeConfigSpec;
        define<T_>(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<T_>, arg2: Internal.Predicate_<any>, arg3: Internal.Class<any>): Internal.ForgeConfigSpec$ConfigValue<T_>;
        define<T_>(arg0: string, arg1: T_): Internal.ForgeConfigSpec$ConfigValue<T_>;
        define<T_>(arg0: Internal.List<string>, arg1: T_): Internal.ForgeConfigSpec$ConfigValue<T_>;
        define<T_>(arg0: string, arg1: T_, arg2: Internal.Predicate_<any>): Internal.ForgeConfigSpec$ConfigValue<T_>;
        define<T_>(arg0: Internal.List<string>, arg1: T_, arg2: Internal.Predicate_<any>): Internal.ForgeConfigSpec$ConfigValue<T_>;
        define<T_>(arg0: string, arg1: java_.util.function_.Supplier_<T_>, arg2: Internal.Predicate_<any>): Internal.ForgeConfigSpec$ConfigValue<T_>;
        define<T_>(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<T_>, arg2: Internal.Predicate_<any>): Internal.ForgeConfigSpec$ConfigValue<T_>;
        define(arg0: string, arg1: boolean): Internal.ForgeConfigSpec$BooleanValue;
        define(arg0: string, arg1: java_.util.function_.Supplier_<boolean>): Internal.ForgeConfigSpec$BooleanValue;
        define(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<boolean>): Internal.ForgeConfigSpec$BooleanValue;
        define<T_>(arg0: Internal.List<string>, arg1: Internal.ForgeConfigSpec$ValueSpec, arg2: java_.util.function_.Supplier_<T_>): Internal.ForgeConfigSpec$ConfigValue<T_>;
        define(arg0: Internal.List<string>, arg1: boolean): Internal.ForgeConfigSpec$BooleanValue;
        defineListAllowEmpty<T_>(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<Internal.List_<T_>>, arg2: Internal.Predicate_<any>): Internal.ForgeConfigSpec$ConfigValue<Internal.List<T_>>;
        translation(arg0: string): Internal.ForgeConfigSpec$Builder;
        comment(...arg0: string[]): Internal.ForgeConfigSpec$Builder;
        comment(arg0: string): Internal.ForgeConfigSpec$Builder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ForgeConfigSpec$Builder_ = ForgeConfigSpec$Builder;
    class RecordCodecBuilder$Mu <O> extends Document.Object implements Internal.K1 {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RecordCodecBuilder$Mu_<O> = RecordCodecBuilder$Mu<O>;
    class FixedUnit extends dev.latvian.mods.rhino.util.unit.Unit {
        newValue(v: number): dev.latvian.mods.rhino.util.unit.Unit;
        static of(value: number): Internal.FixedUnit;
        static readonly ZERO: Internal.FixedUnit;
        static readonly ONE: Internal.FixedUnit;
        static readonly POS_INFINITY: Internal.FixedUnit;
        static readonly NEG_INFINITY: Internal.FixedUnit;
        static readonly NAN: Internal.FixedUnit;
    }
    type FixedUnit_ = FixedUnit;
    interface Int2IntFunction extends it.unimi.dsi.fastutil.Function<number, number>, Internal.IntUnaryOperator {
        defaultReturnValue(): number;
        defaultReturnValue(arg0: number): void;
        applyAsInt(arg0: number): number;
        containsKey(arg0: any): boolean;
        containsKey(arg0: number): boolean;
        get(arg0: number): number;
        get(arg0: any): number;
        get(arg0: any): any;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: number): number;
        put(arg0: number, arg1: number): number;
        remove(arg0: any): number;
        remove(arg0: any): any;
        remove(arg0: number): number;
        (arg0: number): number;
    }
    type Int2IntFunction_ = ((arg0: number)=>number) | Int2IntFunction;
    class PlayerEvent$StopTracking extends Internal.PlayerEvent {
        getTarget(): Internal.Entity;
        get target(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.Entity);
    }
    type PlayerEvent$StopTracking_ = PlayerEvent$StopTracking;
    class RegisterRecipeHandlersEvent extends net.minecraftforge.eventbus.api.Event {
        registerShaped(id: ResourceLocation_): void;
        registerShapeless(id: ResourceLocation_): void;
        ignore(id: ResourceLocation_): void;
        ignore(id: string): void;
        register(type: Internal.RecipeTypeJS): void;
        register(id: ResourceLocation_, f: java_.util.function_.Supplier_<Internal.RecipeJS_>): void;
        register(id: string, f: java_.util.function_.Supplier_<Internal.RecipeJS_>): void;
        static readonly EVENT: me.shedaniel.architectury.event.Event<Internal.Consumer<Internal.RegisterRecipeHandlersEvent>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(m: Internal.Map<ResourceLocation, Internal.RecipeTypeJS>);
        constructor();
    }
    type RegisterRecipeHandlersEvent_ = RegisterRecipeHandlersEvent;
    class RPConfig$ConnectionTimeouts extends Document.Object implements Internal.ConfigData {
        validatePostLoad(): void;
        readTimeoutSeconds: number;
        keepAlivePacketIntervalSeconds: number;
        keepAliveTimeoutSeconds: number;
        loginTimeoutTicks: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RPConfig$ConnectionTimeouts_ = RPConfig$ConnectionTimeouts;
    interface ISound {
        func_147652_d(): number;
        func_147650_b(): ResourceLocation;
        func_230510_t_(): boolean;
        func_217861_m(): boolean;
        func_211503_n(): boolean;
        func_184364_b(): Internal.Sound;
        func_184366_a(arg0: Internal.SoundHandler): Internal.SoundEventAccessor;
        func_184365_d(): Internal.SoundCategory;
        func_147649_g(): number;
        func_147656_j(): Internal.ISound$AttenuationType;
        func_147654_h(): number;
        getStream(arg0: Internal.AudioStreamManager, arg1: Internal.Sound, arg2: boolean): Internal.CompletableFuture<Internal.IAudioStream>;
        func_147655_f(): number;
        func_147657_c(): boolean;
        func_147651_i(): number;
        func_147653_e(): number;
    }
    type ISound_ = ISound;
    abstract class PathNavigator extends Document.Object {
        func_75499_g(): void;
        func_189566_q(): Internal.NodeProcessor;
        func_179680_a(arg0: BlockPos, arg1: number): net.minecraft.pathfinding.Path;
        func_75501_e(): void;
        func_75500_f(): boolean;
        func_212239_d(arg0: boolean): void;
        func_220970_c(arg0: BlockPos): void;
        func_75505_d(): net.minecraft.pathfinding.Path;
        func_241390_a_(arg0: Internal.Set<BlockPos>, arg1: number): net.minecraft.pathfinding.Path;
        func_225466_a(arg0: number, arg1: number, arg2: number, arg3: number): net.minecraft.pathfinding.Path;
        func_226337_n_(): boolean;
        func_225463_a(arg0: Internal.Stream<BlockPos>, arg1: number): net.minecraft.pathfinding.Path;
        func_188554_j(): void;
        func_75492_a(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        func_188553_i(): boolean;
        func_212238_t(): boolean;
        func_75484_a(arg0: net.minecraft.pathfinding.Path, arg1: number): boolean;
        func_75494_a(arg0: Internal.Entity, arg1: number): net.minecraft.pathfinding.Path;
        func_75497_a(arg0: Internal.Entity, arg1: number): boolean;
        func_226335_a_(arg0: number): void;
        func_226336_g_(): void;
        func_244428_t(): boolean;
        func_188555_b(arg0: BlockPos): boolean;
        func_208485_j(): BlockPos;
        func_75489_a(arg0: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MobEntity, arg1: Internal.World);
    }
    type PathNavigator_ = PathNavigator;
    interface TypeDescriptor {
        descriptorString(): string;
        (): string;
    }
    type TypeDescriptor_ = (()=>string) | TypeDescriptor;
    class LocalWireNetwork extends Document.Object implements Internal.IWorldTickable {
        getConnector(pos: BlockPos): Internal.IImmersiveConnectable;
        getConnector(cp: Internal.ConnectionPoint): Internal.IImmersiveConnectable;
        getVersion(): number;
        addAsFutureTask(r: Internal.Runnable_): void;
        getAllHandlers(): Internal.Collection<Internal.LocalNetworkHandler>;
        isValid(): boolean;
        isValid(cp: Internal.ConnectionPoint): boolean;
        getConnectionPoints(): Internal.Collection<Internal.ConnectionPoint>;
        getConnectors(): Internal.Collection<BlockPos>;
        update(w: Internal.World): void;
        setInvalid(): void;
        getHandler<T_>(name: ResourceLocation_, type: Internal.Class<T_>): T_;
        writeToNBT(): Internal.CompoundNBT;
        getConnections(at: Internal.ConnectionPoint): Internal.Collection<Internal.Connection>;
        getConnections(at: BlockPos): Internal.Collection<Internal.Connection>;
        get valid(): boolean;
        get connectors(): Internal.Collection<BlockPos>;
        get allHandlers(): Internal.Collection<Internal.LocalNetworkHandler>;
        get connectionPoints(): Internal.Collection<Internal.ConnectionPoint>;
        get version(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(subnet: Internal.CompoundNBT, globalNet: Internal.GlobalWireNetwork);
        constructor(globalNet: Internal.GlobalWireNetwork);
    }
    type LocalWireNetwork_ = LocalWireNetwork;
    class EntityJoinWorldEvent extends Internal.EntityEvent {
        getWorld(): Internal.World;
        get world(): Internal.World;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity, arg1: Internal.World);
    }
    type EntityJoinWorldEvent_ = EntityJoinWorldEvent;
    interface ChunkGeneratorAccessor {
        repurposedstructures_setSettings(arg0: Internal.DimensionStructuresSettings): void;
        repurposedstructures_getCodec(): Internal.Codec<Internal.ChunkGenerator>;
    }
    type ChunkGeneratorAccessor_ = ChunkGeneratorAccessor;
    class RenderLayerEvent extends net.minecraftforge.eventbus.api.Event {
        getCamX(): number;
        getWorld(): Internal.ClientWorld;
        getType(): Internal.RenderType;
        getViewProjection(): Internal.Matrix4f;
        getLayer(): Internal.RenderLayer;
        getCamZ(): number;
        getCamY(): number;
        readonly viewProjection: Internal.Matrix4f;
        readonly stack: Internal.MatrixStack;
        readonly camY: number;
        readonly buffers: Internal.RenderTypeBuffers;
        readonly camZ: number;
        readonly camX: number;
        readonly type: Internal.RenderType;
        readonly layer: Internal.RenderLayer;
        get world(): Internal.ClientWorld;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ClientWorld, arg1: Internal.RenderType, arg2: Internal.MatrixStack, arg3: Internal.RenderTypeBuffers, arg4: number, arg5: number, arg6: number);
        constructor();
    }
    type RenderLayerEvent_ = RenderLayerEvent;
    class MinecartEntity extends Internal.AbstractMinecartEntity {
        canBeRidden(): boolean;
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        getComparatorLevel(): number;
        getCurrentRailPosition(): BlockPos;
        asKJS(): any;
        shouldDoRailFunctions(): boolean;
        getCartItem(): Internal.ItemStack;
        canRiderInteract(): boolean;
        getMinecart(): Internal.AbstractMinecartEntity;
        getSlopeAdjustment(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        isPoweredCart(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getMaxCartSpeedOnRail(): number;
        getParts(): Internal.PartEntity<any>[];
        get minecart(): Internal.AbstractMinecartEntity;
        get currentRailPosition(): BlockPos;
        get slopeAdjustment(): number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get poweredCart(): boolean;
        get comparatorLevel(): number;
        get cartItem(): Internal.ItemStack;
        get maxCartSpeedOnRail(): number;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<any>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
    }
    type MinecartEntity_ = MinecartEntity;
    class CMarkRecipeSeenPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_244321_b(): ResourceLocation;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.IRecipe<any>);
    }
    type CMarkRecipeSeenPacket_ = CMarkRecipeSeenPacket;
    interface Paint extends Internal.Transparency {
        createContext(arg0: Internal.ColorModel, arg1: Internal.Rectangle, arg2: Internal.Rectangle2D, arg3: Internal.AffineTransform, arg4: Internal.RenderingHints): Internal.PaintContext;
        (arg0: Internal.ColorModel, arg1: Internal.Rectangle, arg2: Internal.Rectangle2D, arg3: Internal.AffineTransform, arg4: Internal.RenderingHints): Internal.PaintContext;
    }
    type Paint_ = ((arg0: Internal.ColorModel, arg1: Internal.Rectangle, arg2: Internal.Rectangle2D, arg3: Internal.AffineTransform, arg4: Internal.RenderingHints)=>Internal.PaintContext) | Paint;
    class LinkedHashMap <K, V> extends Internal.HashMap<K, V> implements Internal.SequencedMap<K, V> {
        putLast(arg0: K, arg1: V): V;
        getOrDefault(arg0: any, arg1: V): V;
        static newLinkedHashMap<K_, V_>(arg0: number): Internal.LinkedHashMap<K_, V_>;
        entrySet(): Internal.Set<Internal.Map$Entry<K, V>>;
        sequencedKeySet(): Internal.SequencedSet<K>;
        values(): Internal.Collection<V>;
        sequencedValues(): Internal.SequencedCollection<V>;
        pollLastEntry(): Internal.Map$Entry<K, V>;
        pollFirstEntry(): Internal.Map$Entry<K, V>;
        lastEntry(): Internal.Map$Entry<K, V>;
        get(arg0: any): V;
        firstEntry(): Internal.Map$Entry<K, V>;
        putFirst(arg0: K, arg1: V): V;
        sequencedEntrySet(): Internal.SequencedSet<Internal.Map$Entry<K, V>>;
        keySet(): Internal.Set<K>;
        reversed(): Internal.SequencedMap<K, V>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<K, V>);
        constructor(arg0: number);
        constructor(arg0: number, arg1: number);
        constructor(arg0: number, arg1: number, arg2: boolean);
        constructor();
    }
    type LinkedHashMap_<K, V> = LinkedHashMap<K, V>;
    class JsonArray extends Internal.JsonElement implements Internal.Iterable<Internal.JsonElement> {
        add(arg0: Internal.JsonElement): void;
        add(arg0: boolean): void;
        add(arg0: string): void;
        add(arg0: string): void;
        add(arg0: Internal.Number): void;
        contains(arg0: Internal.JsonElement): boolean;
        iterator(): Internal.Iterator<Internal.JsonElement>;
        set(arg0: number, arg1: Internal.JsonElement): Internal.JsonElement;
        size(): number;
        spliterator(): Internal.Spliterator<Internal.JsonElement>;
        addAll(arg0: Internal.JsonArray): void;
        forEach(arg0: Internal.Consumer_<Internal.JsonElement_>): void;
        get(arg0: number): Internal.JsonElement;
        remove(arg0: Internal.JsonElement): boolean;
        remove(arg0: number): Internal.JsonElement;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type JsonArray_ = JsonArray;
    class CUpdateCommandBlockPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_210364_d(): boolean;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_210359_b(): string;
        func_210361_a(): BlockPos;
        func_210360_f(): Internal.CommandBlockTileEntity$Mode;
        func_210363_c(): boolean;
        func_210362_e(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: BlockPos, arg1: string, arg2: Internal.CommandBlockTileEntity$Mode, arg3: boolean, arg4: boolean, arg5: boolean);
    }
    type CUpdateCommandBlockPacket_ = CUpdateCommandBlockPacket;
    interface UnmodifiableConfig {
        getShortOrElse(arg0: Internal.List<string>, arg1: number): number;
        getShortOrElse(arg0: string, arg1: number): number;
        getByte(arg0: Internal.List<string>): number;
        getByte(arg0: string): number;
        getEnum<T>(arg0: Internal.List<string>, arg1: Internal.Class<T>): T;
        getEnum<T>(arg0: Internal.List<string>, arg1: Internal.Class<T>, arg2: Internal.EnumGetMethod_): T;
        getEnum<T>(arg0: string, arg1: Internal.Class<T>): T;
        getEnum<T>(arg0: string, arg1: Internal.Class<T>, arg2: Internal.EnumGetMethod_): T;
        getLongOrElse(arg0: string, arg1: Internal.LongSupplier_): number;
        getLongOrElse(arg0: Internal.List<string>, arg1: number): number;
        getLongOrElse(arg0: string, arg1: number): number;
        getLongOrElse(arg0: Internal.List<string>, arg1: Internal.LongSupplier_): number;
        getByteOrElse(arg0: string, arg1: number): number;
        getByteOrElse(arg0: Internal.List<string>, arg1: number): number;
        get<T>(arg0: string): T;
        get<T>(arg0: Internal.List<string>): T;
        valueMap(): Internal.Map<string, any>;
        getEnumOrElse<T>(arg0: string, arg1: T, arg2: Internal.EnumGetMethod_): T;
        getEnumOrElse<T>(arg0: Internal.List<string>, arg1: Internal.Class<T>, arg2: java_.util.function_.Supplier_<T>): T;
        getEnumOrElse<T>(arg0: string, arg1: Internal.Class<T>, arg2: Internal.EnumGetMethod_, arg3: java_.util.function_.Supplier_<T>): T;
        getEnumOrElse<T>(arg0: Internal.List<string>, arg1: T): T;
        getEnumOrElse<T>(arg0: Internal.List<string>, arg1: T, arg2: Internal.EnumGetMethod_): T;
        getEnumOrElse<T>(arg0: string, arg1: T): T;
        getEnumOrElse<T>(arg0: string, arg1: Internal.Class<T>, arg2: java_.util.function_.Supplier_<T>): T;
        getEnumOrElse<T>(arg0: Internal.List<string>, arg1: Internal.Class<T>, arg2: Internal.EnumGetMethod_, arg3: java_.util.function_.Supplier_<T>): T;
        getOrElse<T>(arg0: Internal.List<string>, arg1: T): T;
        getOrElse<T>(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<T>): T;
        getOrElse<T>(arg0: string, arg1: T): T;
        getOrElse<T>(arg0: string, arg1: java_.util.function_.Supplier_<T>): T;
        getIntOrElse(arg0: Internal.List<string>, arg1: number): number;
        getIntOrElse(arg0: string, arg1: Internal.IntSupplier_): number;
        getIntOrElse(arg0: Internal.List<string>, arg1: Internal.IntSupplier_): number;
        getIntOrElse(arg0: string, arg1: number): number;
        entrySet(): Internal.Set<Internal.UnmodifiableConfig$Entry>;
        apply<T>(arg0: string): T;
        apply<T>(arg0: Internal.List<string>): T;
        getShort(arg0: string): number;
        getShort(arg0: Internal.List<string>): number;
        configFormat(): Internal.ConfigFormat<any>;
        isEmpty(): boolean;
        getOptionalInt(arg0: string): Internal.OptionalInt;
        getOptionalInt(arg0: Internal.List<string>): Internal.OptionalInt;
        getCharOrElse(arg0: Internal.List<string>, arg1: string): string;
        getCharOrElse(arg0: string, arg1: string): string;
        getLong(arg0: Internal.List<string>): number;
        getLong(arg0: string): number;
        getInt(arg0: string): number;
        getInt(arg0: Internal.List<string>): number;
        getChar(arg0: string): string;
        getChar(arg0: Internal.List<string>): string;
        getOptional<T>(arg0: Internal.List<string>): Internal.Optional<T>;
        getOptional<T>(arg0: string): Internal.Optional<T>;
        contains(arg0: string): boolean;
        contains(arg0: Internal.List<string>): boolean;
        size(): number;
        isNull(arg0: string): boolean;
        isNull(arg0: Internal.List<string>): boolean;
        getRaw<T>(arg0: string): T;
        getRaw<T>(arg0: Internal.List<string>): T;
        getOptionalEnum<T>(arg0: Internal.List<string>, arg1: Internal.Class<T>): Internal.Optional<T>;
        getOptionalEnum<T>(arg0: Internal.List<string>, arg1: Internal.Class<T>, arg2: Internal.EnumGetMethod_): Internal.Optional<T>;
        getOptionalEnum<T>(arg0: string, arg1: Internal.Class<T>, arg2: Internal.EnumGetMethod_): Internal.Optional<T>;
        getOptionalEnum<T>(arg0: string, arg1: Internal.Class<T>): Internal.Optional<T>;
        getOptionalLong(arg0: Internal.List<string>): Internal.OptionalLong;
        getOptionalLong(arg0: string): Internal.OptionalLong;
    }
    type UnmodifiableConfig_ = UnmodifiableConfig;
    class RenderHandEvent extends net.minecraftforge.eventbus.api.Event {
        getLight(): number;
        getHand(): Hand;
        getPartialTicks(): number;
        getSwingProgress(): number;
        getEquipProgress(): number;
        getBuffers(): Internal.IRenderTypeBuffer;
        getItemStack(): Internal.ItemStack;
        getInterpolatedPitch(): number;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get itemStack(): Internal.ItemStack;
        get light(): number;
        get buffers(): Internal.IRenderTypeBuffer;
        get swingProgress(): number;
        get interpolatedPitch(): number;
        get equipProgress(): number;
        get hand(): Hand;
        get partialTicks(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Hand, arg1: Internal.MatrixStack, arg2: Internal.IRenderTypeBuffer, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: Internal.ItemStack);
    }
    type RenderHandEvent_ = RenderHandEvent;
    class DispenserTileEntity extends Internal.LockableLootTileEntity {
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_145818_k_(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        func_146019_a(arg0: Internal.ItemStack): number;
        getTileEntity(): Internal.TileEntity;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        func_146017_i(): number;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        field_146022_i: Internal.NonNullList<Internal.ItemStack>;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type DispenserTileEntity_ = DispenserTileEntity;
    class TranslationTextComponent extends Internal.TextComponent implements Internal.ITargetedTextComponent {
        func_230439_a_<T_>(arg0: Internal.ITextProperties$IStyledTextAcceptor_<T_>, arg1: Internal.Style): Internal.Optional<T_>;
        func_212636_a(arg0: number): string;
        func_230438_a_<T_>(arg0: Internal.ITextProperties$ITextAcceptor_<T_>): Internal.Optional<T_>;
        getString(): string;
        func_240699_a_(arg0: Internal.TextFormatting_): Internal.IFormattableTextComponent;
        func_240703_c_(arg0: Internal.Style): Internal.IFormattableTextComponent;
        func_150268_i(): string;
        func_240702_b_(arg0: string): Internal.IFormattableTextComponent;
        func_240700_a_(arg0: Internal.UnaryOperator<Internal.Style>): Internal.IFormattableTextComponent;
        func_230531_f_(): Internal.IFormattableTextComponent;
        func_230531_f_(): Internal.TranslationTextComponent;
        func_150271_j(): any[];
        func_240701_a_(...arg0: Internal.TextFormatting[]): Internal.IFormattableTextComponent;
        func_230534_b_<T_>(arg0: Internal.ITextProperties$IStyledTextAcceptor_<T_>, arg1: Internal.Style): Internal.Optional<T_>;
        func_150270_g(): void;
        func_230533_b_<T_>(arg0: Internal.ITextProperties$ITextAcceptor_<T_>): Internal.Optional<T_>;
        func_230535_a_(arg0: Internal.CommandSource, arg1: Internal.Entity, arg2: number): Internal.IFormattableTextComponent;
        readonly field_150278_b: Internal.List<Internal.ITextProperties>;
        get string(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor(arg0: string, arg1: any[]);
    }
    type TranslationTextComponent_ = TranslationTextComponent;
    interface AccessorRecipeManager {
        botania_getRecipes<C, T>(arg0: Internal.IRecipeType<T>): Internal.Map<ResourceLocation, Internal.IRecipe<C>>;
        (arg0: Internal.IRecipeType<T>): Internal.Map<ResourceLocation, Internal.IRecipe<C>>;
    }
    type AccessorRecipeManager_ = ((arg0: Internal.IRecipeType<T>)=>Internal.Map<ResourceLocation, Internal.IRecipe<C>>) | AccessorRecipeManager;
    class WorldSectionElement extends Internal.AnimatedSceneElement {
        add(arg0: Internal.Selection): void;
        setAnimatedOffset(arg0: Vec3, arg1: boolean): void;
        renderFirst(arg0: Internal.PonderWorld, arg1: Internal.IRenderTypeBuffer_, arg2: Internal.MatrixStack, arg3: number, arg4: number): void;
        erase(arg0: Internal.Selection): void;
        transformMS(arg0: Internal.MatrixStack, arg1: number): void;
        set(arg0: Internal.Selection): void;
        setCenterOfRotation(arg0: Vec3): void;
        resetSelectedBlock(): void;
        setEmpty(): void;
        queueRedraw(): void;
        getAnimatedRotation(): Vec3;
        isEmpty(): boolean;
        rayTrace(arg0: Internal.PonderWorld, arg1: Vec3, arg2: Vec3): com.simibubi.create.foundation.utility.Pair<Vec3, BlockPos>;
        selectBlock(arg0: BlockPos): void;
        mergeOnto(arg0: Internal.WorldSectionElement): void;
        stabilizeRotation(arg0: Vec3): void;
        getAnimatedOffset(): Vec3;
        resetAnimatedTransform(): void;
        setAnimatedRotation(arg0: Vec3, arg1: boolean): void;
        static readonly DOC_WORLD_SECTION: Internal.Compartment<com.simibubi.create.foundation.utility.Pair<number, number>>;
        get animatedRotation(): Vec3;
        get animatedOffset(): Vec3;
        get empty(): boolean;
        set centerOfRotation(arg0: Vec3);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Selection);
    }
    type WorldSectionElement_ = WorldSectionElement;
    class PerkAllocationType extends Internal.Enum<Internal.PerkAllocationType> {
        getSaveKey(): string;
        static valueOf(arg0: string): Internal.PerkAllocationType;
        static values(): Internal.PerkAllocationType[];
        static readonly UNLOCKED: Internal.PerkAllocationType;
        static readonly GRANTED: Internal.PerkAllocationType;
        get saveKey(): string;
    }
    type PerkAllocationType_ = "unlocked" | "granted" | PerkAllocationType;
    interface ModuleFinder {
        find(arg0: string): Internal.Optional<Internal.ModuleReference>;
        findAll(): Internal.Set<Internal.ModuleReference>;
    }
    type ModuleFinder_ = ModuleFinder;
    class GlObject extends Document.Object {
        handle(): number;
        invalidateHandle(): void;
        getDevice(): Internal.RenderDevice;
        get device(): Internal.RenderDevice;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(owner: Internal.RenderDevice);
    }
    type GlObject_ = GlObject;
    abstract class AbstractFishEntity extends Internal.WaterMobEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        static func_223363_b(arg0: Internal.EntityType_<Internal.AbstractFishEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_203706_r(arg0: boolean): void;
        foodEatenKJS(is: Internal.ItemStack): void;
        static func_234176_m_(): Internal.AttributeModifierMap$MutableAttribute;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_203707_dx(): Internal.ItemStack;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.AbstractFishEntity>, arg1: Internal.World);
    }
    type AbstractFishEntity_ = AbstractFishEntity;
    class AbstractPerk$PerkCategory extends Document.Object {
        getName(): Internal.IFormattableTextComponent;
        getTextFormatting(): Internal.TextFormatting;
        get textFormatting(): Internal.TextFormatting;
        get name(): Internal.IFormattableTextComponent;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.TextFormatting);
    }
    type AbstractPerk$PerkCategory_ = AbstractPerk$PerkCategory;
    interface ConstantDesc {
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): any;
        (arg0: Internal.MethodHandles$Lookup): any;
    }
    type ConstantDesc_ = ((arg0: Internal.MethodHandles$Lookup)=>any) | ConstantDesc;
    interface IRecipeType <T> {
        func_222148_a<C>(arg0: Internal.IRecipe<C>, arg1: Internal.World, arg2: C): Internal.Optional<T>;
    }
    type IRecipeType_<T> = IRecipeType<T>;
    abstract class InputStream extends Document.Object implements Internal.Closeable {
        read(arg0: number[]): number;
        read(arg0: number[], arg1: number, arg2: number): number;
        read(): number;
        markSupported(): boolean;
        available(): number;
        readAllBytes(): number[];
        static nullInputStream(): Internal.InputStream;
        readNBytes(arg0: number[], arg1: number, arg2: number): number;
        readNBytes(arg0: number): number[];
        reset(): void;
        skip(arg0: number): number;
        transferTo(arg0: Internal.OutputStream): number;
        close(): void;
        skipNBytes(arg0: number): void;
        mark(arg0: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type InputStream_ = InputStream;
    abstract class DyingEntity extends Internal.TameableEntity implements Internal.IDying {
        shouldRiderSit(): boolean;
        isDying(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        dyingInteract(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        formatLoc(arg0: Vec3): string;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get dying(): boolean;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type DyingEntity_ = DyingEntity;
    abstract class QuestFile extends Internal.QuestObject {
        readNetDataFull(arg0: Internal.PacketBuffer): void;
        clearCachedProgress(): void;
        getReward(arg0: number): Internal.Reward;
        getSubmitTasks(): Internal.List<Internal.Task>;
        getAllTasks(): Internal.List<Internal.Task>;
        getNullableTeamData(arg0: Internal.UUID): Internal.TeamData;
        newID(): number;
        canEdit(): boolean;
        getSide(): Internal.Env;
        save(): void;
        getDefaultQuestShape(): string;
        getChapter(arg0: number): Internal.Chapter;
        remove(arg0: number): Internal.QuestObjectBase;
        getFolder(): Internal.Path;
        isServerSide(): boolean;
        getAllData(): Internal.Collection<Internal.TeamData>;
        readDataFull(arg0: Internal.Path): void;
        load(): void;
        writeDataFull(arg0: Internal.Path): void;
        getAllObjects(): Internal.Collection<Internal.QuestObjectBase>;
        deleteObject(arg0: number): void;
        get(arg0: number): Internal.QuestObject;
        create(arg0: Internal.QuestObjectType_, arg1: number, arg2: Internal.CompoundNBT_): Internal.QuestObjectBase;
        getRandomLootCrate(arg0: Internal.Entity, arg1: Internal.Random): Internal.LootCrate;
        getData(arg0: Internal.Entity): Internal.TeamData;
        getData(arg0: Internal.UUID): Internal.TeamData;
        getData(arg0: Internal.TeamBase): Internal.TeamData;
        getLootCrate(arg0: string): Internal.LootCrate;
        getQuest(arg0: number): Internal.Quest;
        updateLootCrates(): void;
        writeNetDataFull(arg0: Internal.PacketBuffer): void;
        getAllChapters(): Internal.List<Internal.Chapter>;
        getFirstVisibleChapter(arg0: Internal.TeamData): Internal.Chapter;
        getRewardTable(arg0: number): Internal.RewardTable;
        addData(arg0: Internal.TeamData, arg1: boolean): void;
        getID(arg0: any): number;
        refreshGui(): void;
        isLoading(): boolean;
        refreshIDMap(): void;
        readID(arg0: Internal.INBT): number;
        readID(arg0: number): number;
        getAltTitle(): Internal.IFormattableTextComponent;
        getVisibleChapters(arg0: Internal.TeamData): Internal.List<Internal.Chapter>;
        getBase(arg0: number): Internal.QuestObjectBase;
        collect<T_>(arg0: Internal.Predicate_<Internal.QuestObjectBase_>): Internal.List<T_>;
        collect<T_>(arg0: Internal.Class<T_>): Internal.List<T_>;
        getChapterGroup(arg0: number): Internal.ChapterGroup;
        getTask(arg0: number): Internal.Task;
        defaultTeamConsumeItems: boolean;
        pauseGame: boolean;
        defaultRewardAutoClaim: Internal.RewardAutoClaim;
        readonly chapterGroups: Internal.List<Internal.ChapterGroup>;
        readonly defaultChapterGroup: Internal.DefaultChapterGroup;
        gridScale: number;
        readonly emergencyItems: Internal.List<Internal.ItemStack>;
        defaultQuestDisableJEI: boolean;
        readonly rewardTables: Internal.List<Internal.RewardTable>;
        defaultQuestShape: string;
        readonly rewardTypeIds: Internal.Int2ObjectOpenHashMap<Internal.RewardType>;
        emergencyItemsCooldown: number;
        dropLootCrates: boolean;
        readonly lootCrateNoDrop: Internal.EntityWeight;
        disableGui: boolean;
        readonly taskTypeIds: Internal.Int2ObjectOpenHashMap<Internal.TaskType>;
        lockMessage: string;
        static VERSION: 13;
        defaultRewardTeam: boolean;
        fileVersion: number;
        get serverSide(): boolean;
        get allData(): Internal.Collection<Internal.TeamData>;
        get side(): Internal.Env;
        get folder(): Internal.Path;
        get allTasks(): Internal.List<Internal.Task>;
        get allChapters(): Internal.List<Internal.Chapter>;
        get altTitle(): Internal.IFormattableTextComponent;
        get submitTasks(): Internal.List<Internal.Task>;
        get loading(): boolean;
        get allObjects(): Internal.Collection<Internal.QuestObjectBase>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type QuestFile_ = QuestFile;
    class GameType extends Internal.Enum<Internal.GameType> {
        func_196220_c(): Internal.ITextComponent;
        func_77149_b(): string;
        func_82752_c(): boolean;
        func_77144_e(): boolean;
        func_77145_d(): boolean;
        func_77148_a(): number;
        func_77147_a(arg0: Internal.PlayerAbilities): void;
        static func_77146_a(arg0: number): Internal.GameType;
        static valueOf(arg0: string): Internal.GameType;
        static values(): Internal.GameType[];
        static func_77142_a(arg0: string): Internal.GameType;
        static func_185329_a(arg0: number, arg1: Internal.GameType_): Internal.GameType;
        static func_185328_a(arg0: string, arg1: Internal.GameType_): Internal.GameType;
        static readonly SURVIVAL: Internal.GameType;
        static readonly SPECTATOR: Internal.GameType;
        static readonly NOT_SET: Internal.GameType;
        static readonly CREATIVE: Internal.GameType;
        static readonly ADVENTURE: Internal.GameType;
    }
    type GameType_ = "not_set" | "survival" | "creative" | "adventure" | "spectator" | GameType;
    class BossOverlayGui extends Internal.AbstractGui {
        func_238484_a_(arg0: Internal.MatrixStack): void;
        func_184056_f(): boolean;
        func_184055_a(arg0: Internal.SUpdateBossInfoPacket): void;
        func_184057_b(): void;
        func_184054_d(): boolean;
        func_184053_e(): boolean;
        readonly field_184060_g: Internal.Map<Internal.UUID, Internal.ClientBossInfo>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type BossOverlayGui_ = BossOverlayGui;
    interface IScreenWrapper extends Internal.IOpenableScreen {
        closeGui(openPrevScreen: boolean): void;
        openGui(): void;
        getGui(): Internal.BaseScreen;
        (): Internal.BaseScreen;
    }
    type IScreenWrapper_ = (()=>Internal.BaseScreen) | IScreenWrapper;
    class ManaNetworkEvent$ManaBlockType extends Internal.Enum<Internal.ManaNetworkEvent$ManaBlockType> {
        static valueOf(arg0: string): Internal.ManaNetworkEvent$ManaBlockType;
        static values(): Internal.ManaNetworkEvent$ManaBlockType[];
        static readonly COLLECTOR: Internal.ManaNetworkEvent$ManaBlockType;
        static readonly POOL: Internal.ManaNetworkEvent$ManaBlockType;
    }
    type ManaNetworkEvent$ManaBlockType_ = "pool" | "collector" | ManaNetworkEvent$ManaBlockType;
    interface IForgeEntity extends Internal.ICapabilitySerializable<Internal.CompoundNBT> {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        canUpdate(arg0: boolean): void;
        canUpdate(): boolean;
        onRemovedFromWorld(): void;
        captureDrops(arg0: Internal.Collection<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getPersistentData(): Internal.CompoundNBT;
        getEntity(): Internal.Entity;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        onAddedToWorld(): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        canTrample(arg0: Internal.BlockState, arg1: BlockPos, arg2: number): boolean;
        revive(): void;
        isAddedToWorld(): boolean;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
    }
    type IForgeEntity_ = IForgeEntity;
    abstract class AbstractLongSet extends Internal.AbstractLongCollection implements Internal.Cloneable, Internal.LongSet {
        iterator(): Internal.Iterator<any>;
        spliterator(): Internal.Spliterator<number>;
        stream(): Internal.Stream<number>;
        forEach(arg0: Internal.Consumer_<number>): void;
        forEach(arg0: Internal.LongConsumer_): void;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<number>;
        remove(arg0: number): boolean;
        removeIf(arg0: Internal.Predicate_<number>): boolean;
        removeIf(arg0: Internal.LongPredicate_): boolean;
    }
    type AbstractLongSet_ = AbstractLongSet;
    class HideCustomJEIEventJS extends Internal.EventJS {
        get(s: Internal.IIngredientType_<any>): Internal.HideJEIEventJS<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(r: Internal.IJeiRuntime);
    }
    type HideCustomJEIEventJS_ = HideCustomJEIEventJS;
    class EvaluatorException extends Internal.RhinoException {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(detail: string);
        constructor(detail: string, sourceName: string, lineNumber: number);
        constructor(detail: string, sourceName: string, lineNumber: number, lineSource: string, columnNumber: number);
    }
    type EvaluatorException_ = EvaluatorException;
    class SkeletonHorseEntity extends Internal.AbstractHorseEntity implements Internal.ICustomDataHolder {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_190690_dh(): boolean;
        feedRottenFlesh(arg0: Internal.PlayerEntity, arg1: Hand_, arg2: Internal.ItemStack): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        handler$zjp000$addAdditionalSaveData(arg0: Internal.CompoundNBT_, arg1: Internal.CallbackInfo): void;
        handler$zjp000$mobInteract(arg0: Internal.PlayerEntity, arg1: Hand_, arg2: Internal.CallbackInfoReturnable<any>): void;
        func_190691_p(arg0: boolean): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        handler$zjp000$readAdditionalSaveData(arg0: Internal.CompoundNBT_, arg1: Internal.CallbackInfo): void;
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        static func_234250_eJ_(): Internal.AttributeModifierMap$MutableAttribute;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        setVariable(arg0: boolean): void;
        getEntity(): Internal.Entity;
        getVariable(): boolean;
        asKJS(): any;
        canRiderInteract(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        setEating(): void;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get variable(): boolean;
        get entity(): Internal.Entity;
        set variable(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.SkeletonHorseEntity>, arg1: Internal.World);
    }
    type SkeletonHorseEntity_ = SkeletonHorseEntity;
    class RenderState$LightmapState extends Internal.RenderState$BooleanState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean);
    }
    type RenderState$LightmapState_ = RenderState$LightmapState;
    class ClientPlayerDataJS extends Internal.PlayerDataJS<Internal.PlayerEntity, Internal.ClientPlayerJS> {
        getPlayer(): Internal.PlayerJS<any>;
        getPlayer(): Internal.ClientPlayerJS;
        getMinecraftPlayer(): Internal.PlayerEntity;
        getWorld(): Internal.ClientWorldJS;
        get world(): Internal.ClientWorldJS;
        get minecraftPlayer(): Internal.PlayerEntity;
        get player(): Internal.ClientPlayerJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(w: Internal.ClientWorldJS, p: Internal.PlayerEntity, s: boolean);
    }
    type ClientPlayerDataJS_ = ClientPlayerDataJS;
    class ChatLine <T> extends Document.Object {
        func_74540_b(): number;
        func_238169_a_(): T;
        func_74539_c(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: T, arg2: number);
    }
    type ChatLine_<T> = ChatLine<T>;
    class FireworkRocketItem$Shape extends Internal.Enum<Internal.FireworkRocketItem$Shape> {
        func_196068_b(): string;
        static valueOf(arg0: string): Internal.FireworkRocketItem$Shape;
        static values(): Internal.FireworkRocketItem$Shape[];
        static func_196070_a(arg0: number): Internal.FireworkRocketItem$Shape;
        func_196071_a(): number;
        static readonly SMALL_BALL: Internal.FireworkRocketItem$Shape;
        static readonly LARGE_BALL: Internal.FireworkRocketItem$Shape;
        static readonly STAR: Internal.FireworkRocketItem$Shape;
        static readonly CREEPER: Internal.FireworkRocketItem$Shape;
        static readonly BURST: Internal.FireworkRocketItem$Shape;
    }
    type FireworkRocketItem$Shape_ = "small_ball" | "large_ball" | "star" | "creeper" | "burst" | FireworkRocketItem$Shape;
    class Dynamic <T> extends Internal.DynamicLike<T> {
        updateGeneric(arg0: T, arg1: Internal.Function_<T, T>): Internal.Dynamic<T>;
        getElementGeneric(arg0: T): Internal.DataResult<T>;
        updateMapValues(arg0: Internal.Function_<Internal.Pair_<Internal.Dynamic_<any>, Internal.Dynamic_<any>>, Internal.Pair_<Internal.Dynamic_<any>, Internal.Dynamic_<any>>>): Internal.Dynamic<T>;
        set(arg0: string, arg1: Internal.Dynamic<any>): Internal.Dynamic<T>;
        asStreamOpt(): Internal.DataResult<Internal.Stream<Internal.Dynamic<T>>>;
        asMapOpt(): Internal.DataResult<Internal.Stream<Internal.Pair<Internal.Dynamic<T>, Internal.Dynamic<T>>>>;
        getGeneric(arg0: T): Internal.DataResult<T>;
        update(arg0: string, arg1: Internal.Function_<Internal.Dynamic_<any>, Internal.Dynamic_<any>>): Internal.Dynamic<T>;
        castTyped<U_>(arg0: Internal.DynamicOps<U_>): Internal.Dynamic<U_>;
        static convert<S_, T_>(arg0: Internal.DynamicOps<S_>, arg1: Internal.DynamicOps<T_>, arg2: S_): T_;
        convert<R_>(arg0: Internal.DynamicOps<R_>): Internal.Dynamic<R_>;
        decode<A_>(arg0: Internal.Decoder_<A_>): Internal.DataResult<Internal.Pair<A_, T>>;
        remove(arg0: string): Internal.Dynamic<T>;
        getMapValues(): Internal.DataResult<Internal.Map<Internal.Dynamic<T>, Internal.Dynamic<T>>>;
        into<V_>(arg0: Internal.Function_<Internal.Dynamic_<T>, V_>): V_;
        getValue(): T;
        cast<U_>(arg0: Internal.DynamicOps<U_>): U_;
        getElement(arg0: string): Internal.DataResult<T>;
        merge(arg0: Internal.Dynamic<any>, arg1: Internal.Dynamic<any>): Internal.OptionalDynamic<T>;
        merge(arg0: Internal.Dynamic<any>): Internal.OptionalDynamic<T>;
        get(arg0: string): Internal.OptionalDynamic<T>;
        map(arg0: Internal.Function_<T, T>): Internal.Dynamic<T>;
        get mapValues(): Internal.DataResult<Internal.Map<Internal.Dynamic<T>, Internal.Dynamic<T>>>;
        get value(): T;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DynamicOps<T>);
        constructor(arg0: Internal.DynamicOps<T>, arg1: T);
    }
    type Dynamic_<T> = Dynamic<T>;
    class RenderWorldEvent extends net.minecraftforge.eventbus.api.Event {
        getPartialTicks(): number;
        getPoseStack(): Internal.MatrixStack;
        get poseStack(): Internal.MatrixStack;
        get partialTicks(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(poseStack: Internal.MatrixStack, partialTicks: number);
    }
    type RenderWorldEvent_ = RenderWorldEvent;
    class MapExtendingRecipe extends Internal.ShapedRecipe {
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_222128_h(): Internal.ItemStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type MapExtendingRecipe_ = MapExtendingRecipe;
    class ItemFrameEntity extends Internal.HangingEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_174866_q(): number;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_82336_g(arg0: number): void;
        func_82333_j(): number;
        func_82335_i(): Internal.ItemStack;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_174864_a(arg0: Internal.ItemStack, arg1: boolean): void;
        func_82334_a(arg0: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ItemFrameEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Direction);
    }
    type ItemFrameEntity_ = ItemFrameEntity;
    class ZonedDateTime extends Document.Object implements Internal.Temporal, Internal.ChronoZonedDateTime<Internal.LocalDate>, Internal.Serializable {
        plusHours(arg0: number): Internal.ZonedDateTime;
        isEqual(arg0: Internal.ChronoZonedDateTime<any>): boolean;
        toLocalTime(): Internal.LocalTime;
        compareTo(arg0: Internal.ChronoZonedDateTime<any>): number;
        compareTo(arg0: any): number;
        static ofLocal(arg0: Internal.LocalDateTime, arg1: Internal.ZoneId, arg2: Internal.ZoneOffset): Internal.ZonedDateTime;
        getDayOfWeek(): Internal.DayOfWeek;
        static ofStrict(arg0: Internal.LocalDateTime, arg1: Internal.ZoneOffset, arg2: Internal.ZoneId): Internal.ZonedDateTime;
        plusSeconds(arg0: number): Internal.ZonedDateTime;
        getMinute(): number;
        static from(arg0: Internal.TemporalAccessor): Internal.ZonedDateTime;
        getMonth(): Internal.Month;
        plusNanos(arg0: number): Internal.ZonedDateTime;
        withHour(arg0: number): Internal.ZonedDateTime;
        plusMonths(arg0: number): Internal.ZonedDateTime;
        plusYears(arg0: number): Internal.ZonedDateTime;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.ZonedDateTime;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        minusNanos(arg0: number): Internal.ZonedDateTime;
        getNano(): number;
        format(arg0: Internal.DateTimeFormatter): string;
        getZone(): Internal.ZoneId;
        isSupported(arg0: Internal.TemporalField): boolean;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoZonedDateTime<any>;
        plus(arg0: Internal.TemporalAmount): Internal.ZonedDateTime;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ZonedDateTime;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoZonedDateTime<any>;
        getYear(): number;
        toEpochSecond(): number;
        toLocalDateTime(): Internal.ChronoLocalDateTime<any>;
        toLocalDateTime(): Internal.LocalDateTime;
        withDayOfMonth(arg0: number): Internal.ZonedDateTime;
        isAfter(arg0: Internal.ChronoZonedDateTime<any>): boolean;
        withMonth(arg0: number): Internal.ZonedDateTime;
        toOffsetDateTime(): Internal.OffsetDateTime;
        static ofInstant(arg0: Internal.LocalDateTime, arg1: Internal.ZoneOffset, arg2: Internal.ZoneId): Internal.ZonedDateTime;
        static ofInstant(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.ZonedDateTime;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoZonedDateTime<any>;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ZonedDateTime;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.ChronoZonedDateTime<any>;
        minus(arg0: Internal.TemporalAmount): Internal.ZonedDateTime;
        withFixedOffsetZone(): Internal.ZonedDateTime;
        minusHours(arg0: number): Internal.ZonedDateTime;
        getOffset(): Internal.ZoneOffset;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        withYear(arg0: number): Internal.ZonedDateTime;
        plusMinutes(arg0: number): Internal.ZonedDateTime;
        minusMinutes(arg0: number): Internal.ZonedDateTime;
        plusDays(arg0: number): Internal.ZonedDateTime;
        withLaterOffsetAtOverlap(): Internal.ChronoZonedDateTime<any>;
        withLaterOffsetAtOverlap(): Internal.ZonedDateTime;
        static now(): Internal.ZonedDateTime;
        static now(arg0: Internal.Clock): Internal.ZonedDateTime;
        static now(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.ZoneId): Internal.ZonedDateTime;
        static of(arg0: Internal.LocalDate, arg1: Internal.LocalTime, arg2: Internal.ZoneId): Internal.ZonedDateTime;
        static of(arg0: Internal.LocalDateTime, arg1: Internal.ZoneId): Internal.ZonedDateTime;
        get(arg0: Internal.TemporalField): number;
        withEarlierOffsetAtOverlap(): Internal.ChronoZonedDateTime<any>;
        withEarlierOffsetAtOverlap(): Internal.ZonedDateTime;
        withZoneSameLocal(arg0: Internal.ZoneId): Internal.ChronoZonedDateTime<any>;
        withZoneSameLocal(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        getDayOfYear(): number;
        plusWeeks(arg0: number): Internal.ZonedDateTime;
        getHour(): number;
        getChronology(): Internal.Chronology;
        withMinute(arg0: number): Internal.ZonedDateTime;
        getMonthValue(): number;
        minusYears(arg0: number): Internal.ZonedDateTime;
        withZoneSameInstant(arg0: Internal.ZoneId): Internal.ChronoZonedDateTime<any>;
        withZoneSameInstant(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        minusWeeks(arg0: number): Internal.ZonedDateTime;
        withDayOfYear(arg0: number): Internal.ZonedDateTime;
        static parse(arg0: Internal.CharSequence, arg1: Internal.DateTimeFormatter): Internal.ZonedDateTime;
        static parse(arg0: Internal.CharSequence): Internal.ZonedDateTime;
        toInstant(): Internal.Instant;
        isBefore(arg0: Internal.ChronoZonedDateTime<any>): boolean;
        minusDays(arg0: number): Internal.ZonedDateTime;
        withNano(arg0: number): Internal.ZonedDateTime;
        getLong(arg0: Internal.TemporalField): number;
        minusMonths(arg0: number): Internal.ZonedDateTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ChronoZonedDateTime<any>;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ZonedDateTime;
        with(arg0: Internal.TemporalAdjuster_): Internal.ChronoZonedDateTime<any>;
        with(arg0: Internal.TemporalAdjuster_): Internal.Temporal;
        with(arg0: Internal.TemporalAdjuster_): Internal.ZonedDateTime;
        toLocalDate(): Internal.LocalDate;
        toLocalDate(): Internal.ChronoLocalDate;
        getSecond(): number;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        getDayOfMonth(): number;
        minusSeconds(arg0: number): Internal.ZonedDateTime;
        withSecond(arg0: number): Internal.ZonedDateTime;
        get offset(): Internal.ZoneOffset;
        get year(): number;
        get dayOfYear(): number;
        get nano(): number;
        get chronology(): Internal.Chronology;
        get minute(): number;
        get second(): number;
        get dayOfWeek(): Internal.DayOfWeek;
        get month(): Internal.Month;
        get hour(): number;
        get zone(): Internal.ZoneId;
        get dayOfMonth(): number;
        get monthValue(): number;
    }
    type ZonedDateTime_ = ZonedDateTime;
    interface ExplosionFTBC {
        getSourceFTBC(): Internal.Entity;
        (): Internal.Entity;
    }
    type ExplosionFTBC_ = (()=>Internal.Entity) | ExplosionFTBC;
    abstract class MachineTile extends Internal.TileEntity {
        requestModelDataUpdate(): void;
        resetProcess(): void;
        isPaused(): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        setPaused(arg0: boolean): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        getStatus(): Internal.MachineStatus;
        getMachine(): Internal.ICustomMachine;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        getComponentManager(): Internal.IMachineComponentManager;
        refreshMachine(arg0: ResourceLocation_): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get paused(): boolean;
        get modelData(): Internal.IModelData;
        get componentManager(): Internal.IMachineComponentManager;
        get machine(): Internal.ICustomMachine;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        get status(): Internal.MachineStatus;
        set paused(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TileEntityType<any>);
    }
    type MachineTile_ = MachineTile;
    interface IJigsawDeserializer <P> {
        codec(): Internal.Codec<P>;
        (): Internal.Codec<P>;
    }
    type IJigsawDeserializer_<P> = (()=>Internal.Codec<P>) | IJigsawDeserializer<P>;
    class WorldLightManager extends Document.Object implements Internal.ILightListener, Internal.StarLightLightingProvider {
        func_215572_a(arg0: Internal.LightType_, arg1: Internal.SectionPos): string;
        handler$bgb000$onBlockEmissionIncrease(arg0: BlockPos, arg1: number, arg2: Internal.CallbackInfo): void;
        getLightEngine(): Internal.StarLightInterface;
        func_215571_a(arg0: Internal.ChunkPos, arg1: boolean): void;
        func_215570_a(): boolean;
        clientRemoveLightData(arg0: Internal.ChunkPos): void;
        func_215569_a(arg0: Internal.LightType_): Internal.IWorldLightListener;
        func_215568_a(arg0: BlockPos): void;
        func_215567_a(arg0: BlockPos, arg1: boolean): void;
        func_215566_a(arg0: Internal.SectionPos, arg1: boolean): void;
        clientChunkLoad(arg0: Internal.ChunkPos, arg1: Internal.Chunk): void;
        func_215575_a(arg0: number, arg1: boolean, arg2: boolean): number;
        func_215574_a(arg0: Internal.LightType_, arg1: Internal.SectionPos, arg2: Internal.NibbleArray, arg3: boolean): void;
        func_215573_a(arg0: BlockPos, arg1: number): void;
        clientUpdateLight(arg0: Internal.LightType_, arg1: Internal.SectionPos, arg2: Internal.NibbleArray, arg3: boolean): void;
        handler$caf001$onBlockEmissionIncrease(arg0: BlockPos, arg1: number, arg2: Internal.CallbackInfo): void;
        func_223115_b(arg0: Internal.ChunkPos, arg1: boolean): void;
        func_227470_b_(arg0: BlockPos, arg1: number): number;
        handler$bdb000$construct(arg0: Internal.IChunkLightProvider, arg1: boolean, arg2: boolean, arg3: Internal.CallbackInfo): void;
        get lightEngine(): Internal.StarLightInterface;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IChunkLightProvider, arg1: boolean, arg2: boolean);
    }
    type WorldLightManager_ = WorldLightManager;
    interface ExtendedWorld {
        getChunkAtImmediately(arg0: number, arg1: number): Internal.Chunk;
        getAnyChunkImmediately(arg0: number, arg1: number): Internal.IChunk;
        getCustomLightHandler(): Internal.VariableBlockLightHandler;
        setCustomLightHandler(arg0: Internal.VariableBlockLightHandler): void;
    }
    type ExtendedWorld_ = ExtendedWorld;
    class ViewFrustum extends Document.Object {
        func_178160_a(): void;
        func_178163_a(arg0: number, arg1: number): void;
        func_217628_a(arg0: number, arg1: number, arg2: number, arg3: boolean): void;
        field_178164_f: any[];
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: Internal.World, arg2: number, arg3: Internal.WorldRenderer);
    }
    type ViewFrustum_ = ViewFrustum;
    interface BiomeGenerationSettingsBuilderAccessor {
        getFeatures(): Internal.List<Internal.List<java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>>>;
        (): Internal.List<Internal.List<java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>>>;
    }
    type BiomeGenerationSettingsBuilderAccessor_ = (()=>Internal.List<Internal.List<java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>>>) | BiomeGenerationSettingsBuilderAccessor;
    interface ICraftingRecipe extends Internal.IRecipe<Internal.CraftingInventory> {
        func_222127_g(): Internal.IRecipeType<any>;
    }
    type ICraftingRecipe_ = ICraftingRecipe;
    interface Optic <Proof, S, T, A, B> {
        eval<P>(arg0: Internal.App<Proof, P>): Internal.Function<Internal.App2<P, A, B>, Internal.App2<P, S, T>>;
        compose<Proof2, A1, B1>(arg0: Internal.Optic_<Proof2, A, B, A1, B1>): Internal.Optic<Proof2, S, T, A1, B1>;
        upCast<Proof2>(arg0: Internal.Set<Internal.TypeToken<Internal.K1>>, arg1: Internal.TypeToken<Proof2>): Internal.Optional<Internal.Optic<Proof2, S, T, A, B>>;
        composeUnchecked<Proof2, A1, B1>(arg0: Internal.Optic_<any, A, B, A1, B1>): Internal.Optic<any, S, T, A1, B1>;
        (arg0: Internal.App<Proof, P>): Internal.Function<Internal.App2<P, A, B>, Internal.App2<P, S, T>>;
    }
    type Optic_<Proof, S, T, A, B> = ((arg0: Internal.App<Proof, P>)=>Internal.Function<Internal.App2<P, A, B>, Internal.App2<P, S, T>>) | Optic<Proof, S, T, A, B>;
    class ToolDefinition extends Document.Object {
        setDefaultData(): void;
        setData(arg0: Internal.ToolDefinitionData): void;
        getDefaultMaxTier(): number;
        getId(): ResourceLocation;
        getRepairParts(): number[];
        getStatProvider(): Internal.IToolStatProvider;
        getRequiredComponents(): Internal.List<Internal.IToolPart>;
        isDataLoaded(): boolean;
        getBaseStatDefinition(): Internal.ToolBaseStatDefinition;
        getMaxRepairWeight(): number;
        static builder(arg0: ResourceLocation_): Internal.ToolDefinition$Builder;
        static builder(arg0: Internal.RegistryObject<Internal.IItemProvider>): Internal.ToolDefinition$Builder;
        static builder(arg0: Internal.ItemObject<Internal.IItemProvider>): Internal.ToolDefinition$Builder;
        isMultipart(): boolean;
        getModifiers(): Internal.List<Internal.ModifierEntry>;
        buildStats(arg0: Internal.List<Internal.IMaterial>): Internal.StatsNBT;
        getData(): Internal.ToolDefinitionData;
        validate(arg0: Internal.ToolDefinitionData): void;
        static readonly EMPTY: Internal.ToolDefinition;
        get maxRepairWeight(): number;
        get defaultMaxTier(): number;
        get dataLoaded(): boolean;
        get data(): Internal.ToolDefinitionData;
        get statProvider(): Internal.IToolStatProvider;
        get multipart(): boolean;
        get baseStatDefinition(): Internal.ToolBaseStatDefinition;
        get id(): ResourceLocation;
        get repairParts(): number[];
        get modifiers(): Internal.List<Internal.ModifierEntry>;
        get requiredComponents(): Internal.List<Internal.IToolPart>;
        set data(arg0: Internal.ToolDefinitionData);
    }
    type ToolDefinition_ = ToolDefinition;
    interface EventExecutorGroup extends Internal.ScheduledExecutorService, Internal.Iterable<Internal.EventExecutor> {
        scheduleAtFixedRate(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): io.netty.util.concurrent.ScheduledFuture<any>;
        next(): Internal.EventExecutor;
        isShuttingDown(): boolean;
        terminationFuture(): Internal.Future<any>;
        schedule(arg0: Internal.Runnable_, arg1: number, arg2: Internal.TimeUnit_): io.netty.util.concurrent.ScheduledFuture<any>;
        schedule<V_>(arg0: java_.util.concurrent.Callable_<V_>, arg1: number, arg2: Internal.TimeUnit_): io.netty.util.concurrent.ScheduledFuture<V_>;
        iterator(): Internal.Iterator<Internal.EventExecutor>;
        shutdownGracefully(): Internal.Future<any>;
        shutdownGracefully(arg0: number, arg1: number, arg2: Internal.TimeUnit_): Internal.Future<any>;
        submit<T_>(arg0: Internal.Runnable_, arg1: T_): Internal.Future<T_>;
        submit(arg0: Internal.Runnable_): Internal.Future<any>;
        submit<T_>(arg0: java_.util.concurrent.Callable_<T_>): Internal.Future<T_>;
        scheduleWithFixedDelay(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): io.netty.util.concurrent.ScheduledFuture<any>;
        shutdownNow(): Internal.List<Internal.Runnable>;
        shutdown(): void;
    }
    type EventExecutorGroup_ = EventExecutorGroup;
    class ItemTransformVec3f extends Document.Object {
        func_228830_a_(arg0: boolean, arg1: Internal.MatrixStack): void;
        static readonly field_178366_a: Internal.ItemTransformVec3f;
        readonly field_178363_d: Internal.Vector3f;
        readonly field_178365_c: Internal.Vector3f;
        readonly field_178364_b: Internal.Vector3f;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Vector3f, arg1: Internal.Vector3f, arg2: Internal.Vector3f);
    }
    type ItemTransformVec3f_ = ItemTransformVec3f;
    class DirectMethodHandleDesc$Kind extends Internal.Enum<Internal.DirectMethodHandleDesc$Kind> {
        static valueOf(arg0: number, arg1: boolean): Internal.DirectMethodHandleDesc$Kind;
        static valueOf(arg0: string): Internal.DirectMethodHandleDesc$Kind;
        static valueOf(arg0: number): Internal.DirectMethodHandleDesc$Kind;
        static values(): Internal.DirectMethodHandleDesc$Kind[];
        static readonly INTERFACE_SPECIAL: Internal.DirectMethodHandleDesc$Kind;
        readonly refKind: number;
        static readonly SETTER: Internal.DirectMethodHandleDesc$Kind;
        static readonly SPECIAL: Internal.DirectMethodHandleDesc$Kind;
        static readonly STATIC: Internal.DirectMethodHandleDesc$Kind;
        static readonly GETTER: Internal.DirectMethodHandleDesc$Kind;
        static readonly STATIC_GETTER: Internal.DirectMethodHandleDesc$Kind;
        static readonly INTERFACE_VIRTUAL: Internal.DirectMethodHandleDesc$Kind;
        static readonly STATIC_SETTER: Internal.DirectMethodHandleDesc$Kind;
        static readonly CONSTRUCTOR: Internal.DirectMethodHandleDesc$Kind;
        readonly isInterface: boolean;
        static readonly INTERFACE_STATIC: Internal.DirectMethodHandleDesc$Kind;
        static readonly VIRTUAL: Internal.DirectMethodHandleDesc$Kind;
    }
    type DirectMethodHandleDesc$Kind_ = "static" | "interface_static" | "virtual" | "interface_virtual" | "special" | "interface_special" | "constructor" | "getter" | "setter" | "static_getter" | "static_setter" | DirectMethodHandleDesc$Kind;
    interface PlayerControllerAccess {
        getDestroyProgress(): number;
        (): number;
    }
    type PlayerControllerAccess_ = (()=>number) | PlayerControllerAccess;
    class EffectIncrementer extends Document.Object {
        get(): number;
        update(arg0: boolean): void;
        getAsPercentage(): number;
        get asPercentage(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type EffectIncrementer_ = EffectIncrementer;
    class Outliner$OutlineEntry extends Document.Object {
        getOutline(): Internal.Outline;
        isAlive(): boolean;
        get outline(): Internal.Outline;
        get alive(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Outline);
    }
    type Outliner$OutlineEntry_ = Outliner$OutlineEntry;
    class SceneBuilder$WorldInstructions extends Document.Object {
        modifyEntities<T_>(arg0: Internal.Class<T_>, arg1: Internal.Consumer_<T_>): void;
        hideSection(arg0: Internal.Selection, arg1: Internal.Direction_): void;
        multiplyKineticSpeed(arg0: Internal.Selection, arg1: number): void;
        toggleRedstonePower(arg0: Internal.Selection): void;
        showIndependentSection(arg0: Internal.Selection, arg1: Internal.Direction_): Internal.ElementLink<Internal.WorldSectionElement>;
        cycleBlockProperty(arg0: BlockPos, arg1: Internal.Property<any>): void;
        setCraftingResult(arg0: BlockPos, arg1: Internal.ItemStack): void;
        setBlock(arg0: BlockPos, arg1: Internal.BlockState, arg2: boolean): void;
        modifyTileNBT(arg0: Internal.Selection, arg1: Internal.Class<Internal.TileEntity>, arg2: Internal.Consumer_<Internal.CompoundNBT_>, arg3: boolean): void;
        modifyTileNBT(arg0: Internal.Selection, arg1: Internal.Class<Internal.TileEntity>, arg2: Internal.Consumer_<Internal.CompoundNBT_>): void;
        modifyTileEntity<T_>(arg0: BlockPos, arg1: Internal.Class<T_>, arg2: Internal.Consumer_<T_>): void;
        showIndependentSectionImmediately(arg0: Internal.Selection): Internal.ElementLink<Internal.WorldSectionElement>;
        glueBlockOnto(arg0: BlockPos, arg1: Internal.Direction_, arg2: Internal.ElementLink<Internal.WorldSectionElement>): void;
        restoreBlocks(arg0: Internal.Selection): void;
        replaceBlocks(arg0: Internal.Selection, arg1: Internal.BlockState, arg2: boolean): void;
        removeItemsFromBelt(arg0: BlockPos): void;
        makeSectionIndependent(arg0: Internal.Selection): Internal.ElementLink<Internal.WorldSectionElement>;
        flapFunnel(arg0: BlockPos, arg1: boolean): void;
        setFilterData(arg0: Internal.Selection, arg1: Internal.Class<Internal.TileEntity>, arg2: Internal.ItemStack): void;
        createItemOnBelt(arg0: BlockPos, arg1: Internal.Direction_, arg2: Internal.ItemStack): Internal.ElementLink<Internal.BeltItemElement>;
        movePulley(arg0: BlockPos, arg1: number, arg2: number): void;
        changeBeltItemTo(arg0: Internal.ElementLink<Internal.BeltItemElement>, arg1: Internal.ItemStack): void;
        moveDeployer(arg0: BlockPos, arg1: number, arg2: number): void;
        modifyKineticSpeed(arg0: Internal.Selection, arg1: Internal.UnaryOperator<number>): void;
        propagatePipeChange(arg0: BlockPos): void;
        moveSection(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: Vec3, arg2: number): void;
        rotateSection(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        showSectionAndMerge(arg0: Internal.Selection, arg1: Internal.Direction_, arg2: Internal.ElementLink<Internal.WorldSectionElement>): void;
        modifyEntitiesInside<T_>(arg0: Internal.Class<T_>, arg1: Internal.Selection, arg2: Internal.Consumer_<T_>): void;
        createItemEntity(arg0: Vec3, arg1: Vec3, arg2: Internal.ItemStack): Internal.ElementLink<Internal.EntityElement>;
        setBlocks(arg0: Internal.Selection, arg1: Internal.BlockState, arg2: boolean): void;
        configureStabilization(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: Vec3): void;
        modifyEntity(arg0: Internal.ElementLink<Internal.EntityElement>, arg1: Internal.Consumer_<Internal.Entity_>): void;
        createGlueEntity(arg0: BlockPos, arg1: Internal.Direction_): Internal.ElementLink<Internal.EntityElement>;
        modifyBlock(arg0: BlockPos, arg1: Internal.UnaryOperator<Internal.BlockState>, arg2: boolean): void;
        createEntity(arg0: Internal.Function_<Internal.World_, Internal.Entity_>): Internal.ElementLink<Internal.EntityElement>;
        configureCenterOfRotation(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: Vec3): void;
        stallBeltItem(arg0: Internal.ElementLink<Internal.BeltItemElement>, arg1: boolean): void;
        setKineticSpeed(arg0: Internal.Selection, arg1: number): void;
        hideIndependentSection(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: Internal.Direction_): void;
        createItemOnBeltLike(arg0: BlockPos, arg1: Internal.Direction_, arg2: Internal.ItemStack): void;
        connectCrafterInvs(arg0: BlockPos, arg1: BlockPos): void;
        instructArm(arg0: BlockPos, arg1: Internal.ArmTileEntity$Phase_, arg2: Internal.ItemStack, arg3: number): void;
        showSection(arg0: Internal.Selection, arg1: Internal.Direction_): void;
        incrementBlockBreakingProgress(arg0: BlockPos): void;
        destroyBlock(arg0: BlockPos): void;
        rotateBearing(arg0: BlockPos, arg1: number, arg2: number): void;
        modifyBlocks(arg0: Internal.Selection, arg1: Internal.UnaryOperator<Internal.BlockState>, arg2: boolean): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SceneBuilder);
    }
    type SceneBuilder$WorldInstructions_ = SceneBuilder$WorldInstructions;
    class IdFunctionObject extends Internal.BaseFunction {
        addAsProperty(target: Internal.Scriptable): void;
        markAsConstructor(prototypeProperty: Internal.Scriptable): void;
        exportAsScopeProperty(): void;
        hasTag(tag: any): boolean;
        initFunction(name: string, scope: Internal.Scriptable): void;
        methodId(): number;
        getTag(): any;
        unknown(): Internal.RuntimeException;
        get tag(): any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(idcall: Internal.IdFunctionCall, tag: any, id: number, arity: number);
        constructor(idcall: Internal.IdFunctionCall, tag: any, id: number, name: string, arity: number, scope: Internal.Scriptable);
    }
    type IdFunctionObject_ = IdFunctionObject;
    class MathContext extends Document.Object implements Internal.Serializable {
        getRoundingMode(): Internal.RoundingMode;
        getPrecision(): number;
        static readonly DECIMAL128: Internal.MathContext;
        static readonly DECIMAL64: Internal.MathContext;
        static readonly DECIMAL32: Internal.MathContext;
        static readonly UNLIMITED: Internal.MathContext;
        get roundingMode(): Internal.RoundingMode;
        get precision(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor(arg0: number, arg1: Internal.RoundingMode);
        constructor(arg0: number);
    }
    type MathContext_ = MathContext;
    abstract class AbstractRepairContainer extends Internal.Container {
        func_82848_d(): void;
        readonly field_234644_e_: Internal.IWorldPosCallable;
        readonly field_234645_f_: Internal.PlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ContainerType<any>, arg1: number, arg2: Internal.PlayerInventory, arg3: Internal.IWorldPosCallable);
    }
    type AbstractRepairContainer_ = AbstractRepairContainer;
    class CustomMachineJSRecipeBuilder extends Internal.RecipeJS {
        consumeDropOnEnd(arg0: Internal.ItemStackJS_, arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        requireItem(arg0: Internal.ItemStackJS_): Internal.CustomMachineJSRecipeBuilder;
        requireItem(arg0: Internal.ItemStackJS_, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        consumeDropOnStart(arg0: Internal.ItemStackJS_, arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        breakBlockOnStart(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.CustomMachineJSRecipeBuilder;
        breakBlockOnStart(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        destroyBlockOnEnd(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.CustomMachineJSRecipeBuilder;
        destroyBlockOnEnd(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        requirePosition(arg0: string[]): Internal.CustomMachineJSRecipeBuilder;
        requireStructure(arg0: string[][], arg1: Internal.Map_<string, string>): Internal.CustomMachineJSRecipeBuilder;
        requireFunctionToStart(arg0: fr.frinn.custommachinery.common.integration.kubejs.function_.RecipeFunction): Internal.CustomMachineJSRecipeBuilder;
        requireEntities(arg0: number, arg1: number, arg2: string[], arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        jei(): Internal.CustomMachineJSRecipeBuilder;
        damageItem(arg0: Internal.ItemStackJS_, arg1: number, arg2: string): Internal.CustomMachineJSRecipeBuilder;
        damageItem(arg0: Internal.ItemStackJS_, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        consumeEntityHealthOnEnd(arg0: number, arg1: number, arg2: string[], arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[]): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[], arg9: boolean): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        requireRedstone(arg0: number, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        requireRedstone(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        destroyBlockOnStart(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.CustomMachineJSRecipeBuilder;
        destroyBlockOnStart(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        requireFluidTagPerTick(arg0: string, arg1: number, arg2: Internal.MapJS, arg3: string): Internal.CustomMachineJSRecipeBuilder;
        requireFluidTagPerTick(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        requireFluidTagPerTick(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSRecipeBuilder;
        produceEnergyPerTick(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        checkDrops(arg0: Internal.ItemStackJS[], arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        checkDrops(arg0: Internal.ItemStackJS[], arg1: number, arg2: number, arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        requireBlockLight(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        requireBlockLight(arg0: number, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        killEntitiesOnEnd(arg0: number, arg1: number, arg2: string[], arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        requireFunctionEachTick(arg0: fr.frinn.custommachinery.common.integration.kubejs.function_.RecipeFunction): Internal.CustomMachineJSRecipeBuilder;
        dropItemOnStart(arg0: Internal.ItemStackJS_): Internal.CustomMachineJSRecipeBuilder;
        requireFuel(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        requireFuel(): Internal.CustomMachineJSRecipeBuilder;
        produceItem(arg0: Internal.ItemStackJS_, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        produceItem(arg0: Internal.ItemStackJS_): Internal.CustomMachineJSRecipeBuilder;
        priority(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        checkDrop(arg0: Internal.ItemStackJS_, arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        consumeDropsOnEnd(arg0: Internal.ItemStackJS[], arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        consumeDropsOnEnd(arg0: Internal.ItemStackJS[], arg1: number, arg2: number, arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        requireSkyLight(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        requireSkyLight(arg0: number, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        placeBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.CustomMachineJSRecipeBuilder;
        placeBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        dimensionBlacklist(arg0: string[]): Internal.CustomMachineJSRecipeBuilder;
        giveEffectEachTick(arg0: string, arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        giveEffectEachTick(arg0: string, arg1: number, arg2: number, arg3: number, arg4: string[]): Internal.CustomMachineJSRecipeBuilder;
        giveEffectEachTick(arg0: string, arg1: number, arg2: number, arg3: any): Internal.CustomMachineJSRecipeBuilder;
        delay(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        requireFluid(arg0: Internal.FluidStackJS_): Internal.CustomMachineJSRecipeBuilder;
        requireFluid(arg0: Internal.FluidStackJS_, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        requireWeather(arg0: string): Internal.CustomMachineJSRecipeBuilder;
        produceFluid(arg0: Internal.FluidStackJS_, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        produceFluid(arg0: Internal.FluidStackJS_): Internal.CustomMachineJSRecipeBuilder;
        biomeBlacklist(arg0: string[]): Internal.CustomMachineJSRecipeBuilder;
        breakBlockOnEnd(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.CustomMachineJSRecipeBuilder;
        breakBlockOnEnd(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        repairItemTag(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSRecipeBuilder;
        repairItemTag(arg0: string, arg1: number, arg2: Internal.MapJS, arg3: string): Internal.CustomMachineJSRecipeBuilder;
        repairItemTag(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[], arg9: boolean): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[]): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.CustomMachineJSRecipeBuilder;
        requireBlock(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        requireBlock(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.CustomMachineJSRecipeBuilder;
        requireBlock(arg0: string[], arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: string): Internal.CustomMachineJSRecipeBuilder;
        consumeEntityHealthOnStart(arg0: number, arg1: number, arg2: string[], arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        lootTableOutput(arg0: string): Internal.CustomMachineJSRecipeBuilder;
        lootTableOutput(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnEnd(arg0: string, arg1: boolean): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnEnd(arg0: string, arg1: number, arg2: boolean): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnEnd(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnEnd(arg0: string): Internal.CustomMachineJSRecipeBuilder;
        consumeAnyDropOnEnd(arg0: number, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        consumeAnyDropOnStart(arg0: number, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        consumeDropsOnStart(arg0: Internal.ItemStackJS[], arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        consumeDropsOnStart(arg0: Internal.ItemStackJS[], arg1: number, arg2: number, arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        repairItem(arg0: Internal.ItemStackJS_, arg1: number, arg2: string): Internal.CustomMachineJSRecipeBuilder;
        repairItem(arg0: Internal.ItemStackJS_, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        requireItemTag(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSRecipeBuilder;
        requireItemTag(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        requireItemTag(arg0: string, arg1: number, arg2: Internal.MapJS, arg3: string): Internal.CustomMachineJSRecipeBuilder;
        checkAnyDrop(arg0: number, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[]): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        destroyAndPlaceBlockOnStart(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[], arg9: boolean): Internal.CustomMachineJSRecipeBuilder;
        requireTime(arg0: string[]): Internal.CustomMachineJSRecipeBuilder;
        requireFluidPerTick(arg0: Internal.FluidStackJS_): Internal.CustomMachineJSRecipeBuilder;
        requireFluidPerTick(arg0: Internal.FluidStackJS_, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnStart(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnStart(arg0: string): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnStart(arg0: string, arg1: number, arg2: boolean): Internal.CustomMachineJSRecipeBuilder;
        runCommandOnStart(arg0: string, arg1: boolean): Internal.CustomMachineJSRecipeBuilder;
        requireEnergy(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        killEntitiesOnStart(arg0: number, arg1: number, arg2: string[], arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        giveEffectOnEnd(arg0: string, arg1: number, arg2: number): Internal.CustomMachineJSRecipeBuilder;
        giveEffectOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: string[]): Internal.CustomMachineJSRecipeBuilder;
        giveEffectOnEnd(arg0: string, arg1: number, arg2: number, arg3: string[]): Internal.CustomMachineJSRecipeBuilder;
        giveEffectOnEnd(arg0: string, arg1: number, arg2: number, arg3: number): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[], arg9: boolean): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        breakAndPlaceBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: string[]): Internal.CustomMachineJSRecipeBuilder;
        requireFunctionOnEnd(arg0: fr.frinn.custommachinery.common.integration.kubejs.function_.RecipeFunction): Internal.CustomMachineJSRecipeBuilder;
        requireEntitiesHealth(arg0: number, arg1: number, arg2: string[], arg3: boolean): Internal.CustomMachineJSRecipeBuilder;
        chance(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        biomeWhitelist(arg0: string[]): Internal.CustomMachineJSRecipeBuilder;
        runCommandEachTick(arg0: string): Internal.CustomMachineJSRecipeBuilder;
        runCommandEachTick(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        runCommandEachTick(arg0: string, arg1: boolean): Internal.CustomMachineJSRecipeBuilder;
        runCommandEachTick(arg0: string, arg1: number, arg2: boolean): Internal.CustomMachineJSRecipeBuilder;
        placeBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.CustomMachineJSRecipeBuilder;
        placeBlockOnEnd(arg0: string, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.CustomMachineJSRecipeBuilder;
        requireFunctionOnStart(arg0: fr.frinn.custommachinery.common.integration.kubejs.function_.RecipeFunction): Internal.CustomMachineJSRecipeBuilder;
        requireEnergyPerTick(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        dimensionWhitelist(arg0: string[]): Internal.CustomMachineJSRecipeBuilder;
        produceFluidPerTick(arg0: Internal.FluidStackJS_): Internal.CustomMachineJSRecipeBuilder;
        produceFluidPerTick(arg0: Internal.FluidStackJS_, arg1: string): Internal.CustomMachineJSRecipeBuilder;
        hide(): Internal.CustomMachineJSRecipeBuilder;
        damageItemTag(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        damageItemTag(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSRecipeBuilder;
        damageItemTag(arg0: string, arg1: number, arg2: Internal.MapJS, arg3: string): Internal.CustomMachineJSRecipeBuilder;
        dropItemOnEnd(arg0: Internal.ItemStackJS_): Internal.CustomMachineJSRecipeBuilder;
        requireWeatherOnMachine(arg0: string): Internal.CustomMachineJSRecipeBuilder;
        requireFluidTag(arg0: string, arg1: number): Internal.CustomMachineJSRecipeBuilder;
        requireFluidTag(arg0: string, arg1: number, arg2: any): Internal.CustomMachineJSRecipeBuilder;
        requireFluidTag(arg0: string, arg1: number, arg2: Internal.MapJS, arg3: string): Internal.CustomMachineJSRecipeBuilder;
        produceEnergy(arg0: number): Internal.CustomMachineJSRecipeBuilder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CustomMachineJSRecipeBuilder_ = CustomMachineJSRecipeBuilder;
    interface ContentSerializable {
        getAsStacks(arg0: Internal.IBlockReader, arg1: Internal.PlayerEntity): Internal.List<Internal.ItemStack>;
    }
    type ContentSerializable_ = ContentSerializable;
    abstract class Sensor <E> extends Document.Object {
        func_220973_b(arg0: Internal.ServerWorld, arg1: E): void;
        func_220974_a(): Internal.Set<Internal.MemoryModuleType<any>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
        constructor();
    }
    type Sensor_<E> = Sensor<E>;
    class PonderBuilderJS extends Internal.AbstractPonderBuilder<ResourceLocation, Internal.PonderBuilderJS, Internal.PonderBuilderJS$SceneConsumer> {
        getSelf(): Internal.AbstractPonderBuilder<any, any, any>;
        getSelf(): Internal.PonderBuilderJS;
        tag(arg0: string[]): Internal.AbstractPonderBuilder<any, any, any>;
        tag(...arg0: string[]): Internal.PonderBuilderJS;
        scene(arg0: string, arg1: string, arg2: string, arg3: Internal.PonderBuilderJS$SceneConsumer): Internal.PonderBuilderJS;
        static scenes: {"enigmatica.latex.processing_latex":Internal.$Proxy105,"enigmatica.stoneworks.targeted_stonegen":Internal.$Proxy105,"enigmatica.stoneworks.random_stonegen":Internal.$Proxy105,"enigmatica.mutation.entity_mutation":Internal.$Proxy105,"enigmatica.stoneworks.vanilla_stonegen":Internal.$Proxy105,"portals.undergarden.undergarden_portal":Internal.$Proxy105,"enigmatica.laser_drill.ether_gas":Internal.$Proxy105,"enigmatica.respawn_ender_dragon.respawn_ender_dragon":Internal.$Proxy105,"enigmatica.nori_sheet_press.nori_sheet_press":Internal.$Proxy105,"portals.atum.atum_portal":Internal.$Proxy105,"enigmatica.mutation.mutation_chamber":Internal.$Proxy105,"enigmatica.nori_sheet_press.growing_seaweed":Internal.$Proxy105,"enigmatica.latex.extracting_fluids":Internal.$Proxy105,"enigmatica.forge_hammer.forge_hammer":Internal.$Proxy105,"enigmatica.laser_drill.lenses":Internal.$Proxy105,"enigmatica.laser_drill.fluid_drill":Internal.$Proxy105,"enigmatica.cobbleworks.targeted_cobblegen":Internal.$Proxy105,"enigmatica.nori_sheet_press.dried_seaweed_blocks":Internal.$Proxy105,"enigmatica.laser_drill.introduction":Internal.$Proxy105,"enigmatica.cobbleworks.random_cobblegen":Internal.$Proxy105,"enigmatica.cobbleworks.vanilla_cobblegen":Internal.$Proxy105,"enigmatica.mutation.pollen_mechanics":Internal.$Proxy105};
        get self(): Internal.PonderBuilderJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.ListJS);
    }
    type PonderBuilderJS_ = PonderBuilderJS;
    class ChangeObserverStructure extends Internal.ChangeObserver {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
    }
    type ChangeObserverStructure_ = ChangeObserverStructure;
    class PrintStream extends Internal.FilterOutputStream implements Internal.Appendable, Internal.Closeable {
        charset(): Internal.Charset;
        print(arg0: string): void;
        print(arg0: string[]): void;
        print(arg0: any): void;
        print(arg0: boolean): void;
        print(arg0: string): void;
        print(arg0: number): void;
        print(arg0: number): void;
        print(arg0: number): void;
        print(arg0: number): void;
        println(arg0: string): void;
        println(arg0: any): void;
        println(arg0: number): void;
        println(arg0: string[]): void;
        println(arg0: number): void;
        println(): void;
        println(arg0: boolean): void;
        println(arg0: string): void;
        println(arg0: number): void;
        println(arg0: number): void;
        writeBytes(arg0: number[]): void;
        format(arg0: Internal.Locale, arg1: string, ...arg2: any[]): Internal.PrintStream;
        format(arg0: string, ...arg1: any[]): Internal.PrintStream;
        checkError(): boolean;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.PrintStream;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.PrintStream;
        append(arg0: string): Internal.Appendable;
        append(arg0: string): Internal.PrintStream;
        printf(arg0: Internal.Locale, arg1: string, ...arg2: any[]): Internal.PrintStream;
        printf(arg0: string, ...arg1: any[]): Internal.PrintStream;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.OutputStream, arg1: boolean, arg2: string);
        constructor(arg0: Internal.OutputStream, arg1: boolean, arg2: Internal.Charset);
        constructor(arg0: string);
        constructor(arg0: string, arg1: string);
        constructor(arg0: string, arg1: Internal.Charset);
        constructor(arg0: Internal.File, arg1: string);
        constructor(arg0: Internal.File);
        constructor(arg0: Internal.File, arg1: Internal.Charset);
        constructor(arg0: Internal.OutputStream);
        constructor(arg0: Internal.OutputStream, arg1: boolean);
    }
    type PrintStream_ = PrintStream;
    class SPlaceGhostRecipePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_199615_a(): ResourceLocation;
        func_211402_a(): boolean;
        func_194313_b(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.IRecipe<any>);
    }
    type SPlaceGhostRecipePacket_ = SPlaceGhostRecipePacket;
    interface Wrapper {
        unwrap(): any;
        (): any;
    }
    type Wrapper_ = (()=>any) | Wrapper;
    class Object2ObjectLinkedOpenHashMap <K, V> extends Internal.AbstractObject2ObjectSortedMap<K, V> implements Internal.Serializable, Internal.Cloneable, Internal.Hash {
        object2ObjectEntrySet(): Internal.ObjectSet<any>;
        object2ObjectEntrySet(): Internal.ObjectSortedSet<any>;
        object2ObjectEntrySet(): Internal.Object2ObjectSortedMap$FastSortedEntrySet<K, V>;
        getOrDefault(arg0: any, arg1: V): V;
        sequencedKeySet(): Internal.SequencedSet<K>;
        computeIfAbsent(arg0: K, arg1: Internal.Function_<K, V>): V;
        values(): Internal.Collection<any>;
        values(): Internal.ObjectCollection<V>;
        replace(arg0: K, arg1: V, arg2: V): boolean;
        replace(arg0: K, arg1: V): V;
        putAndMoveToLast(arg0: K, arg1: V): V;
        getAndMoveToLast(arg0: K): V;
        replaceAll(arg0: Internal.BiFunction_<K, V, V>): void;
        removeLast(): V;
        andThen<V_>(arg0: Internal.Function_<V, V_>): Internal.Function<K, V_>;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        pollFirstEntry(): Internal.Map$Entry<K, V>;
        putAndMoveToFirst(arg0: K, arg1: V): V;
        getAndMoveToFirst(arg0: K): V;
        trim(arg0: number): boolean;
        trim(): boolean;
        merge(arg0: K, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        removeFirst(): V;
        get(arg0: any): V;
        lastKey(): K;
        firstEntry(): Internal.Map$Entry<K, V>;
        putFirst(arg0: K, arg1: V): V;
        keySet(): Internal.ObjectSet<any>;
        keySet(): Internal.ObjectSortedSet<K>;
        keySet(): Internal.Set<any>;
        putLast(arg0: K, arg1: V): V;
        entrySet(): Internal.ObjectSet<any>;
        entrySet(): Internal.ObjectSortedSet<Internal.Map$Entry<K, V>>;
        entrySet(): Internal.Set<any>;
        apply(arg0: K): V;
        forEach(arg0: Internal.BiConsumer_<K, V>): void;
        subMap(arg0: any, arg1: any): Internal.SortedMap<any, any>;
        subMap(arg0: K, arg1: K): Internal.Object2ObjectSortedMap<K, V>;
        sequencedValues(): Internal.SequencedCollection<V>;
        pollLastEntry(): Internal.Map$Entry<K, V>;
        comparator(): Internal.Comparator<K>;
        lastEntry(): Internal.Map$Entry<K, V>;
        computeIfPresent(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        compose<V_>(arg0: Internal.Function_<V_, K>): Internal.Function<V_, V>;
        firstKey(): K;
        clone(): Internal.Object2ObjectLinkedOpenHashMap<K, V>;
        clone(): any;
        headMap(arg0: any): Internal.SortedMap<any, any>;
        headMap(arg0: K): Internal.Object2ObjectSortedMap<K, V>;
        sequencedEntrySet(): Internal.SequencedSet<Internal.Map$Entry<K, V>>;
        putIfAbsent(arg0: K, arg1: V): V;
        reversed(): Internal.SortedMap<K, V>;
        reversed(): Internal.SequencedMap<any, any>;
        tailMap(arg0: K): Internal.Object2ObjectSortedMap<K, V>;
        tailMap(arg0: any): Internal.SortedMap<any, any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<K, V>);
        constructor(arg0: Internal.Object2ObjectMap<K, V>, arg1: number);
        constructor(arg0: Internal.Object2ObjectMap<K, V>);
        constructor(arg0: K[], arg1: V[], arg2: number);
        constructor(arg0: K[], arg1: V[]);
        constructor(arg0: number, arg1: number);
        constructor(arg0: number);
        constructor();
        constructor(arg0: Internal.Map<K, V>, arg1: number);
    }
    type Object2ObjectLinkedOpenHashMap_<K, V> = Object2ObjectLinkedOpenHashMap<K, V>;
    class FoxEntity$Type extends Internal.Enum<Internal.FoxEntity$Type> {
        static func_221080_a(arg0: number): Internal.FoxEntity$Type;
        func_221082_a(): string;
        static valueOf(arg0: string): Internal.FoxEntity$Type;
        static values(): Internal.FoxEntity$Type[];
        func_221083_c(): number;
        static func_242325_a(arg0: Internal.Optional<Internal.RegistryKey<Internal.Biome>>): Internal.FoxEntity$Type;
        static func_221087_a(arg0: string): Internal.FoxEntity$Type;
        static readonly RED: Internal.FoxEntity$Type;
        static readonly SNOW: Internal.FoxEntity$Type;
    }
    type FoxEntity$Type_ = "red" | "snow" | FoxEntity$Type;
    class Tuple3d extends Document.Object {
        field_181059_a: number;
        field_181060_b: number;
        field_181061_c: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type Tuple3d_ = Tuple3d;
    class DataResult$Instance$Mu extends Document.Object implements Internal.Applicative$Mu {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type DataResult$Instance$Mu_ = DataResult$Instance$Mu;
    abstract class JsonElement extends Document.Object {
        getAsBigInteger(): Internal.BigInteger;
        getAsFloat(): number;
        getAsByte(): number;
        getAsJsonObject(): Internal.JsonObject;
        getAsBigDecimal(): Internal.BigDecimal;
        getAsJsonNull(): Internal.JsonNull;
        getAsNumber(): Internal.Number;
        isJsonNull(): boolean;
        getAsCharacter(): string;
        getAsString(): string;
        isJsonArray(): boolean;
        getAsDouble(): number;
        getAsInt(): number;
        isJsonPrimitive(): boolean;
        getAsLong(): number;
        getAsJsonArray(): Internal.JsonArray;
        getAsJsonPrimitive(): Internal.JsonPrimitive;
        isJsonObject(): boolean;
        getAsBoolean(): boolean;
        getAsShort(): number;
        get asByte(): number;
        get asBigInteger(): Internal.BigInteger;
        get asJsonObject(): Internal.JsonObject;
        get asCharacter(): string;
        get jsonPrimitive(): boolean;
        get asNumber(): Internal.Number;
        get asBigDecimal(): Internal.BigDecimal;
        get jsonNull(): boolean;
        get asFloat(): number;
        get asLong(): number;
        get asInt(): number;
        get asJsonPrimitive(): Internal.JsonPrimitive;
        get asJsonNull(): Internal.JsonNull;
        get asShort(): number;
        get asDouble(): number;
        get asJsonArray(): Internal.JsonArray;
        get asString(): string;
        get jsonObject(): boolean;
        get jsonArray(): boolean;
        get asBoolean(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type JsonElement_ = JsonElement;
    interface BlockStateKJS {
        setDestroySpeedKJS(arg0: number): void;
        setLightEmissionKJS(arg0: number): void;
        setRequiresToolKJS(arg0: boolean): void;
        setMaterialKJS(arg0: Internal.Material): void;
    }
    type BlockStateKJS_ = BlockStateKJS;
    class CriterionProgress extends Document.Object {
        func_192151_a(): boolean;
        func_192153_b(): void;
        func_192154_c(): void;
        func_193140_d(): Internal.Date;
        static func_209541_a(arg0: string): Internal.CriterionProgress;
        static func_192149_a(arg0: Internal.PacketBuffer): Internal.CriterionProgress;
        func_192148_e(): Internal.JsonElement;
        func_192150_a(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CriterionProgress_ = CriterionProgress;
    class FeatureSpreadConfig extends Document.Object implements Internal.IPlacementConfig, Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        func_242799_a(): Internal.FeatureSpread;
        static readonly field_242797_a: Internal.Codec<Internal.FeatureSpreadConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
        constructor(arg0: Internal.FeatureSpread);
    }
    type FeatureSpreadConfig_ = FeatureSpreadConfig;
    class SafeBlockGetter extends Document.Object implements Internal.IBlockReader {
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        func_217301_I(): number;
        func_242403_h(arg0: BlockPos): number;
        func_201572_C(): number;
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        shouldUse(): boolean;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        func_204610_c(pos: BlockPos): Internal.FluidState;
        func_217298_h(arg0: BlockPos): number;
        func_175625_s(pos: BlockPos): Internal.TileEntity;
        func_180495_p(pos: BlockPos): Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(wrapped: Internal.ServerWorld);
    }
    type SafeBlockGetter_ = SafeBlockGetter;
    interface Movable {
        drawMoved(arg0: Internal.MatrixStack): void;
        getHeight(): number;
        getX(): number;
        move(arg0: Internal.Chapter, arg1: number, arg2: number): void;
        getY(): number;
        getShape(): string;
        getWidth(): number;
        getChapter(): Internal.Chapter;
    }
    type Movable_ = Movable;
    class ParallelDispatchEvent extends Internal.ModLifecycleEvent {
        enqueueWork<T_>(arg0: java_.util.function_.Supplier_<T_>): Internal.CompletableFuture<T_>;
        enqueueWork(arg0: Internal.Runnable_): Internal.CompletableFuture<void>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: any);
    }
    type ParallelDispatchEvent_ = ParallelDispatchEvent;
    abstract class MantleEffect extends Internal.ForgeRegistryEntry<Internal.MantleEffect> implements Internal.ITickHandler {
        getHandledTypes(): Internal.EnumSet<Internal.TickEvent$Type>;
        getName(): string;
        canFire(arg0: Internal.TickEvent$Phase_): boolean;
        setRegistryName(arg0: ResourceLocation_): any;
        tick(arg0: Internal.TickEvent$Type_, ...arg1: any[]): void;
        getAssociatedConstellation(): Internal.IWeakConstellation;
        getPlayerAffectionFlag(): Internal.PlayerAffectionFlags$AffectionFlag;
        getConfig(): Internal.MantleEffect$Config;
        get handledTypes(): Internal.EnumSet<Internal.TickEvent$Type>;
        get associatedConstellation(): Internal.IWeakConstellation;
        get name(): string;
        get playerAffectionFlag(): Internal.PlayerAffectionFlags$AffectionFlag;
        get config(): Internal.MantleEffect$Config;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IWeakConstellation);
    }
    type MantleEffect_ = Registry.astralsorcery.mantle_effect | MantleEffect;
    interface IMerchant {
        func_213707_a(arg0: Internal.PlayerEntity, arg1: Internal.ITextComponent_, arg2: number): void;
        func_213704_a(arg0: Internal.MerchantOffer): void;
        func_70931_l_(): Internal.PlayerEntity;
        func_213702_q(arg0: number): void;
        func_223340_ej(): boolean;
        func_70932_a_(arg0: Internal.PlayerEntity): void;
        func_213703_a(arg0: Internal.MerchantOffers): void;
        func_213706_dY(): Internal.MerchantOffers;
        func_110297_a_(arg0: Internal.ItemStack): void;
        func_213705_dZ(): boolean;
        func_213714_ea(): Internal.SoundEvent;
        func_190670_t_(): Internal.World;
        func_213708_dV(): number;
    }
    type IMerchant_ = IMerchant;
    interface ILevelSave {
        runWorldPersistenceHooks(arg0: Internal.SaveFormat): void;
        (arg0: Internal.SaveFormat): void;
    }
    type ILevelSave_ = ((arg0: Internal.SaveFormat)=>void) | ILevelSave;
    class StructureSpreadSettings extends Document.Object {
        func_236660_a_(): number;
        func_236663_c_(): number;
        func_236662_b_(): number;
        static readonly field_236656_a_: Internal.Codec<Internal.StructureSpreadSettings>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type StructureSpreadSettings_ = StructureSpreadSettings;
    class ChannelOption <T> extends Internal.AbstractConstant<Internal.ChannelOption<T>> {
        static valueOf<T_>(arg0: string): Internal.ChannelOption<T_>;
        static valueOf<T_>(arg0: Internal.Class<any>, arg1: string): Internal.ChannelOption<T_>;
        static exists(arg0: string): boolean;
        static newInstance<T_>(arg0: string): Internal.ChannelOption<T_>;
        validate(arg0: Internal.ChannelOption<Internal.ChannelOption<T>>): void;
        static readonly WRITE_BUFFER_HIGH_WATER_MARK: Internal.ChannelOption<number>;
        static readonly WRITE_BUFFER_LOW_WATER_MARK: Internal.ChannelOption<number>;
        static readonly DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION: Internal.ChannelOption<boolean>;
        static readonly IP_TOS: Internal.ChannelOption<number>;
        static readonly SINGLE_EVENTEXECUTOR_PER_GROUP: Internal.ChannelOption<boolean>;
        static readonly SO_SNDBUF: Internal.ChannelOption<number>;
        static readonly IP_MULTICAST_IF: Internal.ChannelOption<Internal.NetworkInterface>;
        static readonly WRITE_BUFFER_WATER_MARK: Internal.ChannelOption<Internal.WriteBufferWaterMark>;
        static readonly TCP_NODELAY: Internal.ChannelOption<boolean>;
        static readonly SO_LINGER: Internal.ChannelOption<number>;
        static readonly SO_RCVBUF: Internal.ChannelOption<number>;
        static readonly SO_KEEPALIVE: Internal.ChannelOption<boolean>;
        static readonly ALLOCATOR: Internal.ChannelOption<Internal.ByteBufAllocator>;
        static readonly IP_MULTICAST_ADDR: Internal.ChannelOption<Internal.InetAddress>;
        static readonly IP_MULTICAST_LOOP_DISABLED: Internal.ChannelOption<boolean>;
        static readonly MESSAGE_SIZE_ESTIMATOR: Internal.ChannelOption<Internal.MessageSizeEstimator>;
        static readonly WRITE_SPIN_COUNT: Internal.ChannelOption<number>;
        static readonly SO_TIMEOUT: Internal.ChannelOption<number>;
        static readonly SO_REUSEADDR: Internal.ChannelOption<boolean>;
        static readonly CONNECT_TIMEOUT_MILLIS: Internal.ChannelOption<number>;
        static readonly ALLOW_HALF_CLOSURE: Internal.ChannelOption<boolean>;
        static readonly SO_BACKLOG: Internal.ChannelOption<number>;
        static readonly MAX_MESSAGES_PER_READ: Internal.ChannelOption<number>;
        static readonly AUTO_CLOSE: Internal.ChannelOption<boolean>;
        static readonly SO_BROADCAST: Internal.ChannelOption<boolean>;
        static readonly AUTO_READ: Internal.ChannelOption<boolean>;
        static readonly IP_MULTICAST_TTL: Internal.ChannelOption<number>;
        static readonly RCVBUF_ALLOCATOR: Internal.ChannelOption<Internal.RecvByteBufAllocator>;
    }
    type ChannelOption_<T> = ChannelOption<T>;
    class EntityPredicate extends Document.Object {
        func_221014_c(): Internal.EntityPredicate;
        func_221015_a(arg0: Internal.LivingEntity, arg1: Internal.LivingEntity): boolean;
        func_221008_a(): Internal.EntityPredicate;
        func_221009_d(): Internal.EntityPredicate;
        handler$bjk000$canTarget(arg0: Internal.LivingEntity, arg1: Internal.LivingEntity, arg2: Internal.CallbackInfoReturnable<any>): void;
        func_221012_a(arg0: Internal.Predicate_<Internal.LivingEntity_>): Internal.EntityPredicate;
        func_221011_b(): Internal.EntityPredicate;
        func_221010_e(): Internal.EntityPredicate;
        func_221013_a(arg0: number): Internal.EntityPredicate;
        static readonly field_221016_a: Internal.EntityPredicate;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EntityPredicate_ = EntityPredicate;
    interface IClip {
        apply(arg0: Internal.IJoint): Internal.IJointClip;
        pastEvents(arg0: number, arg1: number): Internal.Iterable<Internal.Event>;
    }
    type IClip_ = IClip;
    class BufferBuilder extends Internal.DefaultColorVertexBuilder implements Internal.IVertexConsumer, Internal.StateManager$IResettable, Internal.VertexDrain, Internal.VertexBufferView {
        func_225582_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        ensureBufferCapacity(bytes: number): boolean;
        func_227847_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_225587_b_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_181667_k(): void;
        func_225584_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_227832_f_(): Internal.Pair<Internal.BufferBuilder$DrawState, Internal.ByteBuffer>;
        flush(vertexCount: number, format: Internal.BufferVertexFormat_): void;
        getWriterPosition(): number;
        func_178977_d(): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number[], arg3: number, arg4: number, arg5: number, arg6: number, arg7: number[], arg8: number, arg9: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        func_227886_a_(arg0: number): Internal.IVertexBuilder;
        func_227888_a_(matrix: Internal.Matrix4f, x: number, y: number, z: number): Internal.IVertexBuilder;
        func_225592_i_(): Internal.VertexFormatElement;
        func_181668_a(arg0: number, arg1: Internal.VertexFormat): void;
        handler$bhj000$onInit(bufferSizeIn: number, ci: Internal.CallbackInfo): void;
        func_227834_j_(): boolean;
        applyBakedNormals(arg0: Internal.Vector3f, arg1: Internal.ByteBuffer, arg2: Internal.Matrix3f): void;
        func_225590_a_(arg0: number, arg1: number): void;
        applyBakedLighting(arg0: number, arg1: Internal.ByteBuffer): number;
        getVertexBuilder(): Internal.IVertexBuilder;
        func_227891_b_(arg0: number): Internal.IVertexBuilder;
        resetState(): void;
        func_225589_a_(arg0: number, arg1: number): void;
        func_225585_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_178993_a(arg0: Internal.BufferBuilder$State): void;
        func_225583_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_227885_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IVertexBuilder;
        func_178965_a(): void;
        func_227889_a_(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_227887_a_(matrix: Internal.Matrix3f, x: number, y: number, z: number): Internal.IVertexBuilder;
        func_227833_h_(): void;
        func_181672_a(): Internal.BufferBuilder$State;
        func_181674_a(cameraX: number, cameraY: number, cameraZ: number): void;
        getVertexFormat(): Internal.VertexFormat;
        getVertexFormat(): Internal.BufferVertexFormat;
        putBulkData(arg0: Internal.ByteBuffer): void;
        register(): void;
        getDirectBuffer(): Internal.ByteBuffer;
        func_225591_a_(arg0: number, arg1: number): void;
        get vertexFormat(): Internal.BufferVertexFormat;
        get writerPosition(): number;
        get vertexBuilder(): Internal.IVertexBuilder;
        get directBuffer(): Internal.ByteBuffer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type BufferBuilder_ = BufferBuilder;
    interface IBookmarkOverlay {
        getIngredientUnderMouse(): any;
        (): any;
    }
    type IBookmarkOverlay_ = (()=>any) | IBookmarkOverlay;
    abstract class TileEntity extends Internal.CapabilityProvider<Internal.TileEntity> implements Internal.IForgeTileEntity, Internal.TileEntityAccess, Internal.AccessorTileEntity {
        func_189668_a(arg0: Internal.Mirror_): void;
        func_226984_a_(arg0: Internal.World, arg1: BlockPos): void;
        func_189667_a(arg0: Internal.Rotation_): void;
        func_145833_n(): number;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        handler$bma000$getUpdatePacket(cir: Internal.CallbackInfoReturnable<any>): void;
        func_230337_a_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        func_145831_w(): Internal.World;
        func_183000_F(): boolean;
        func_200662_C(): Internal.TileEntityType<any>;
        func_145837_r(): boolean;
        func_145836_u(): void;
        static func_235657_b_(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): Internal.TileEntity;
        handler$bma000$getUpdateTag(cir: Internal.CallbackInfoReturnable<any>): void;
        func_222814_r(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        onChunkUnloaded(): void;
        func_195044_w(): Internal.BlockState;
        getTileEntity(): Internal.TileEntity;
        func_189515_b(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        func_70296_d(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        func_145830_o(): boolean;
        requestModelDataUpdate(): void;
        func_145843_s(): void;
        getTileData(): Internal.CompoundNBT;
        getCachedBlockStateDirectly(): Internal.BlockState;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        setBlockState(arg0: Internal.BlockState): void;
        func_145829_t(): void;
        setType(arg0: Internal.TileEntityType_<any>): void;
        func_174877_v(): BlockPos;
        func_145842_c(arg0: number, arg1: number): boolean;
        getModelData(): Internal.IModelData;
        func_189518_D_(): Internal.SUpdateTileEntityPacket;
        func_189517_E_(): Internal.CompoundNBT;
        func_145828_a(arg0: Internal.CrashReportCategory): void;
        onLoad(): void;
        func_174878_a(arg0: BlockPos): void;
        field_195045_e: Internal.BlockState;
        static readonly field_145852_a: Internal.Logger;
        customTileData: Internal.CompoundNBT;
        field_145850_b: Internal.World;
        field_174879_c: BlockPos;
        field_145846_f: boolean;
        field_222816_g: boolean;
        field_200663_e: Internal.TileEntityType<any>;
        get modelData(): Internal.IModelData;
        get cachedBlockStateDirectly(): Internal.BlockState;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileData(): Internal.CompoundNBT;
        get tileEntity(): Internal.TileEntity;
        set blockState(arg0: Internal.BlockState);
        set type(arg0: Internal.TileEntityType_<any>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TileEntityType<any>);
    }
    type TileEntity_ = TileEntity;
    interface Transparency {
        getTransparency(): number;
        (): number;
    }
    type Transparency_ = (()=>number) | Transparency;
    class PaintingSpriteUploader extends Internal.SpriteUploader {
        func_215286_b(): Internal.TextureAtlasSprite;
        func_225594_i_(): string;
        func_215285_a(arg0: Internal.PaintingType_): Internal.TextureAtlasSprite;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TextureManager);
    }
    type PaintingSpriteUploader_ = PaintingSpriteUploader;
    abstract class DisplayEffectsScreen <T> extends Internal.ContainerScreen<T> implements Internal.DisplayEffectScreenAccessor {
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212927_b(arg0: number, arg1: number): void;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_231049_c__(arg0: boolean): boolean;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        hasEffects(): boolean;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: T, arg1: Internal.PlayerInventory, arg2: Internal.ITextComponent);
    }
    type DisplayEffectsScreen_<T> = DisplayEffectsScreen<T>;
    class InfuseType extends Internal.Chemical<Internal.InfuseType> implements Internal.IInfuseTypeProvider {
        static readFromNBT(arg0: Internal.CompoundNBT_): Internal.InfuseType;
        getName(): string;
        getStack(arg0: number): Internal.InfusionStack;
        getStack(arg0: number): Internal.ChemicalStack<any>;
        setRegistryName(arg0: ResourceLocation_): any;
        static getFromRegistry(arg0: ResourceLocation_): Internal.InfuseType;
        get name(): string;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
    }
    type InfuseType_ = Registry.mekanism.infuse_type | InfuseType;
    class GlobalPos extends Document.Object {
        func_218180_b(): BlockPos;
        static func_239648_a_(arg0: Internal.RegistryKey<Internal.World>, arg1: BlockPos): Internal.GlobalPos;
        func_239646_a_(): Internal.RegistryKey<Internal.World>;
        static readonly field_239645_a_: Internal.Codec<Internal.GlobalPos>;
    }
    type GlobalPos_ = GlobalPos;
    class ExistingFileHelper extends Document.Object {
        getResource(arg0: ResourceLocation_, arg1: Internal.ResourcePackType_, arg2: string, arg3: string): Internal.IResource;
        getResource(arg0: ResourceLocation_, arg1: Internal.ResourcePackType_): Internal.IResource;
        isEnabled(): boolean;
        exists(arg0: ResourceLocation_, arg1: Internal.ExistingFileHelper$IResourceType): boolean;
        exists(arg0: ResourceLocation_, arg1: Internal.ResourcePackType_, arg2: string, arg3: string): boolean;
        exists(arg0: ResourceLocation_, arg1: Internal.ResourcePackType_): boolean;
        trackGenerated(arg0: ResourceLocation_, arg1: Internal.ResourcePackType_, arg2: string, arg3: string): void;
        trackGenerated(arg0: ResourceLocation_, arg1: Internal.ExistingFileHelper$IResourceType): void;
        get enabled(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Collection<Internal.Path>, arg1: Internal.Set<string>, arg2: boolean, arg3: string, arg4: Internal.File);
        constructor(arg0: Internal.Collection<Internal.Path>, arg1: Internal.Set<string>, arg2: boolean);
        constructor(arg0: Internal.Collection<Internal.Path>, arg1: boolean);
    }
    type ExistingFileHelper_ = ExistingFileHelper;
    interface Member {
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        getDeclaringClass(): Internal.Class<any>;
        getName(): string;
        isSynthetic(): boolean;
        getModifiers(): number;
    }
    type Member_ = Member;
    class ConnectionPoint extends Document.Object implements Internal.Comparable<Internal.ConnectionPoint> {
        getX(): number;
        getY(): number;
        getPosition(): BlockPos;
        getZ(): number;
        createTag(): Internal.CompoundNBT;
        getIndex(): number;
        compareTo(arg0: any): number;
        compareTo(o: Internal.ConnectionPoint): number;
        get x(): number;
        get y(): number;
        get index(): number;
        get z(): number;
        get position(): BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(pos: BlockPos, index: number);
        constructor(nbt: Internal.CompoundNBT);
    }
    type ConnectionPoint_ = ConnectionPoint;
    class ChunkMeshData extends Document.Object {
        getSlices(): Internal.Iterable<Internal.Map$Entry<Internal.ModelQuadFacing, Internal.BufferSlice>>;
        hasVertexData(): boolean;
        setModelSlice(facing: Internal.ModelQuadFacing_, slice: Internal.BufferSlice): void;
        setVertexData(vertexData: Internal.VertexData): void;
        takeVertexData(): Internal.VertexData;
        getVertexDataSize(): number;
        static readonly EMPTY: Internal.ChunkMeshData;
        get slices(): Internal.Iterable<Internal.Map$Entry<Internal.ModelQuadFacing, Internal.BufferSlice>>;
        get vertexDataSize(): number;
        set vertexData(vertexData: Internal.VertexData);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ChunkMeshData_ = ChunkMeshData;
    interface LongFunction <R> {
        apply(arg0: number): R;
        (arg0: number): R;
    }
    type LongFunction_<R> = ((arg0: number)=>R) | LongFunction<R>;
    class EnergyHopperConfig extends Internal.EnergyConfig {
        getGeneration(arg0: Internal.Tier_): number;
        getChargingSpeed(arg0: Internal.Tier_): number;
        readonly nitroChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly blazingChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly basicChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly hardenedChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly nioticChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly spiritedChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly starterChargingSpeed: Internal.ForgeConfigSpec$LongValue;
        readonly chargingSpeed: Internal.Map<Internal.Tier, number>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type EnergyHopperConfig_ = EnergyHopperConfig;
    class BigMushroomFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_227274_c_: number;
        static readonly field_236528_a_: Internal.Codec<Internal.BigMushroomFeatureConfig>;
        readonly field_227272_a_: Internal.BlockStateProvider;
        readonly field_227273_b_: Internal.BlockStateProvider;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockStateProvider, arg1: Internal.BlockStateProvider, arg2: number);
    }
    type BigMushroomFeatureConfig_ = BigMushroomFeatureConfig;
    interface MinecraftServerKJS extends Internal.AsKJS {
        getServerResourcesKJS(): Internal.DataPackRegistries;
        asKJS(): any;
        (): Internal.DataPackRegistries;
    }
    type MinecraftServerKJS_ = (()=>Internal.DataPackRegistries) | MinecraftServerKJS;
    class CampfireTileEntity extends Internal.TileEntity implements Internal.IClearable, Internal.ITickableTileEntity {
        requestModelDataUpdate(): void;
        func_174888_l(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213986_d(): void;
        func_213985_c(): Internal.NonNullList<Internal.ItemStack>;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_73660_a(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        func_213984_a(arg0: Internal.ItemStack, arg1: number): boolean;
        onLoad(): void;
        func_213980_a(arg0: Internal.ItemStack): Internal.Optional<Internal.CampfireCookingRecipe>;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CampfireTileEntity_ = CampfireTileEntity;
    abstract class PlayerJS <E> extends Internal.LivingEntityJS implements Internal.WithAttachedData {
        getXpLevel(): number;
        getStats(): Internal.PlayerStatsJS;
        sendData(channel: string, data: Internal.CompoundNBT_): void;
        sendInventoryUpdate(): void;
        paint(arg0: Internal.CompoundNBT_): void;
        addXPLevels(l: number): void;
        setXpLevel(l: number): void;
        closeInventory(): void;
        getOpenInventory(): Internal.Container;
        setAirSupply(air: number): void;
        getStages(): Internal.Stages;
        setSelectedSlot(index: number): void;
        getInventory(): Internal.InventoryJS;
        boostElytraFlight(): void;
        addFood(f: number, m: number): void;
        addXP(xp: number): void;
        getData(): Internal.AttachedData;
        give(item: Internal.ItemStackJS_): void;
        giveInHand(item: Internal.ItemStackJS_): void;
        getAirSupply(): number;
        isCreativeMode(): boolean;
        isMiningBlock(): boolean;
        getSelectedSlot(): number;
        isSpectator(): boolean;
        getXp(): number;
        addItemCooldown(item: Internal.Item_, ticks: number): void;
        addExhaustion(exhaustion: number): void;
        setMouseItem(item: Internal.ItemStackJS_): void;
        getMouseItem(): Internal.ItemStackJS;
        setFoodLevel(foodLevel: number): void;
        getFoodLevel(): number;
        isFake(): boolean;
        setXp(xp: number): void;
        getMaxAirSupply(): number;
        readonly minecraftPlayer: E;
        get openInventory(): Internal.Container;
        get data(): Internal.AttachedData;
        get xpLevel(): number;
        get creativeMode(): boolean;
        get inventory(): Internal.InventoryJS;
        get airSupply(): number;
        get maxAirSupply(): number;
        get stats(): Internal.PlayerStatsJS;
        get miningBlock(): boolean;
        get selectedSlot(): number;
        get mouseItem(): Internal.ItemStackJS;
        get stages(): Internal.Stages;
        get spectator(): boolean;
        get xp(): number;
        get fake(): boolean;
        get foodLevel(): number;
        set selectedSlot(index: number);
        set xpLevel(l: number);
        set mouseItem(item: Internal.ItemStackJS_);
        set xp(xp: number);
        set foodLevel(foodLevel: number);
        set airSupply(air: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(d: Internal.PlayerDataJS<any,any>, w: Internal.WorldJS, p: E);
    }
    type PlayerJS_<E> = PlayerJS<E>;
    interface ContentHandlerFactory {
        createContentHandler(arg0: string): Internal.ContentHandler;
        (arg0: string): Internal.ContentHandler;
    }
    type ContentHandlerFactory_ = ((arg0: string)=>Internal.ContentHandler) | ContentHandlerFactory;
    class RenderState$DiffuseLightingState extends Internal.RenderState$BooleanState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean);
    }
    type RenderState$DiffuseLightingState_ = RenderState$DiffuseLightingState;
    class MobSpawnInfo$SpawnCosts extends Document.Object {
        func_242582_a(): number;
        func_242585_b(): number;
        static readonly field_242579_a: Internal.Codec<Internal.MobSpawnInfo$SpawnCosts>;
    }
    type MobSpawnInfo$SpawnCosts_ = MobSpawnInfo$SpawnCosts;
    interface Object2FloatFunction <K> extends it.unimi.dsi.fastutil.Function<K, number>, Internal.ToDoubleFunction<K> {
        defaultReturnValue(arg0: number): void;
        defaultReturnValue(): number;
        removeFloat(arg0: any): number;
        applyAsDouble(arg0: K): number;
        get(arg0: any): number;
        get(arg0: any): any;
        getFloat(arg0: any): number;
        put(arg0: any, arg1: any): any;
        put(arg0: K, arg1: number): number;
        put(arg0: K, arg1: number): number;
        remove(arg0: any): any;
        remove(arg0: any): number;
        (arg0: any): number;
    }
    type Object2FloatFunction_<K> = ((arg0: any)=>number) | Object2FloatFunction<K>;
    class HandSide extends Internal.Enum<Internal.HandSide> {
        func_188468_a(): Internal.HandSide;
        func_233609_b_(): Internal.ITextComponent;
        static valueOf(arg0: string): Internal.HandSide;
        static values(): Internal.HandSide[];
        static readonly LEFT: Internal.HandSide;
        static readonly RIGHT: Internal.HandSide;
    }
    type HandSide_ = "left" | "right" | HandSide;
    class LootParameter <T> extends Document.Object {
        func_216247_a(): ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type LootParameter_<T> = LootParameter<T>;
    abstract class AbstractChestedHorseEntity extends Internal.AbstractHorseEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        func_190697_dk(): void;
        asKJS(): any;
        func_190695_dh(): boolean;
        canRiderInteract(): boolean;
        func_190696_dl(): number;
        static func_234234_eJ_(): Internal.AttributeModifierMap$MutableAttribute;
        func_110207_m(arg0: boolean): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type AbstractChestedHorseEntity_ = AbstractChestedHorseEntity;
    interface ParticleEngineAccessor {
        getTextureAtlas(): Internal.AtlasTexture;
        (): Internal.AtlasTexture;
    }
    type ParticleEngineAccessor_ = (()=>Internal.AtlasTexture) | ParticleEngineAccessor;
    class SimpleCommandExceptionType extends Document.Object implements Internal.CommandExceptionType {
        createWithContext(arg0: Internal.ImmutableStringReader): Internal.CommandSyntaxException;
        create(): Internal.CommandSyntaxException;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Message);
    }
    type SimpleCommandExceptionType_ = SimpleCommandExceptionType;
    interface Spliterator$OfInt extends Internal.Spliterator$OfPrimitive<number, Internal.IntConsumer, Internal.Spliterator$OfInt> {
        trySplit(): Internal.Spliterator$OfPrimitive<any, any, any>;
        trySplit(): Internal.Spliterator<any>;
        trySplit(): Internal.Spliterator$OfInt;
        tryAdvance(arg0: any): boolean;
        tryAdvance(arg0: Internal.Consumer_<number>): boolean;
        tryAdvance(arg0: Internal.IntConsumer_): boolean;
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: Internal.IntConsumer_): void;
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
    }
    type Spliterator$OfInt_ = Spliterator$OfInt;
    class ZoneRules extends Document.Object implements Internal.Serializable {
        getTransitions(): Internal.List<Internal.ZoneOffsetTransition>;
        getDaylightSavings(arg0: Internal.Instant): Internal.Duration;
        getTransitionRules(): Internal.List<Internal.ZoneOffsetTransitionRule>;
        previousTransition(arg0: Internal.Instant): Internal.ZoneOffsetTransition;
        isFixedOffset(): boolean;
        getValidOffsets(arg0: Internal.LocalDateTime): Internal.List<Internal.ZoneOffset>;
        getTransition(arg0: Internal.LocalDateTime): Internal.ZoneOffsetTransition;
        getOffset(arg0: Internal.LocalDateTime): Internal.ZoneOffset;
        getOffset(arg0: Internal.Instant): Internal.ZoneOffset;
        static of(arg0: Internal.ZoneOffset, arg1: Internal.ZoneOffset, arg2: Internal.List<Internal.ZoneOffsetTransition>, arg3: Internal.List<Internal.ZoneOffsetTransition>, arg4: Internal.List<Internal.ZoneOffsetTransitionRule>): Internal.ZoneRules;
        static of(arg0: Internal.ZoneOffset): Internal.ZoneRules;
        nextTransition(arg0: Internal.Instant): Internal.ZoneOffsetTransition;
        getStandardOffset(arg0: Internal.Instant): Internal.ZoneOffset;
        isDaylightSavings(arg0: Internal.Instant): boolean;
        isValidOffset(arg0: Internal.LocalDateTime, arg1: Internal.ZoneOffset): boolean;
        get fixedOffset(): boolean;
        get transitionRules(): Internal.List<Internal.ZoneOffsetTransitionRule>;
        get transitions(): Internal.List<Internal.ZoneOffsetTransition>;
    }
    type ZoneRules_ = ZoneRules;
    class AirItem extends Internal.Item {
        canElytraFly(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        onEnchantment(arg0: Internal.ItemStack, arg1: Internal.List<Internal.EnchantmentData>): Internal.ItemStack;
        getItem(): Internal.Item;
        getSmeltingExperience(arg0: Internal.ItemStack): number;
        setDamage(arg0: Internal.ItemStack, arg1: number): void;
        canHarvestBlock(arg0: Internal.ItemStack, arg1: Internal.BlockState): boolean;
        renderHelmetOverlay(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: number, arg3: number, arg4: number): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        damageItem<T_>(arg0: Internal.ItemStack, arg1: number, arg2: T_, arg3: Internal.Consumer_<T_>): number;
        getItemEnchantability(arg0: Internal.ItemStack): number;
        isTreasureAllowed(arg0: Internal.ItemStack, arg1: boolean): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: boolean): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack): number;
        getArmorModel<A_>(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: EquipmentSlot_, arg3: A_): A_;
        readShareTag(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): void;
        onEntityItemUpdate(arg0: Internal.ItemStack, arg1: Internal.ItemEntity): boolean;
        getDamage(arg0: Internal.ItemStack): number;
        showDurabilityBar(arg0: Internal.ItemStack): boolean;
        isBookEnchantable(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.LivingEntity, arg3: Internal.LivingEntity): boolean;
        onUsingTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): void;
        createEntity(arg0: Internal.World, arg1: Internal.Entity, arg2: Internal.ItemStack): Internal.Entity;
        isPiglinCurrency(arg0: Internal.ItemStack): boolean;
        getCreativeTabs(): Internal.Collection<Internal.ItemGroup>;
        getShareTag(arg0: Internal.ItemStack): Internal.CompoundNBT;
        getRGBDurabilityForDisplay(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack, arg1: Internal.IRecipeType<any>): number;
        onDroppedByPlayer(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity): boolean;
        isDamageable(arg0: Internal.ItemStack): boolean;
        onEntitySwing(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        elytraFlightTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): boolean;
        selectEnchantments(arg0: Internal.List<Internal.EnchantmentData>, arg1: Internal.Random, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number, arg6: boolean): Internal.List<Internal.EnchantmentData>;
        getAttributeModifiers(arg0: EquipmentSlot_, arg1: Internal.ItemStack): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        onLeftClickEntity(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.Entity): boolean;
        canEquip(arg0: Internal.ItemStack, arg1: EquipmentSlot_, arg2: Internal.Entity): boolean;
        getDurabilityForDisplay(arg0: Internal.ItemStack): number;
        onBlockStartBreak(arg0: Internal.ItemStack, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.MobEntity): void;
        canContinueUsing(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getEntityLifespan(arg0: Internal.ItemStack, arg1: Internal.World): number;
        getArmorTexture(arg0: Internal.ItemStack, arg1: Internal.Entity, arg2: EquipmentSlot_, arg3: string): string;
        hasCustomEntity(arg0: Internal.ItemStack): boolean;
        getHighlightTip(arg0: Internal.ItemStack, arg1: Internal.ITextComponent_): Internal.ITextComponent;
        getMaxDamage(arg0: Internal.ItemStack): number;
        getCreatorModId(arg0: Internal.ItemStack): string;
        isDamaged(arg0: Internal.ItemStack): boolean;
        onArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.PlayerEntity): void;
        hasContainerItem(arg0: Internal.ItemStack): boolean;
        isShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        doesSneakBypassUse(arg0: Internal.ItemStack, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        onItemUseFirst(arg0: Internal.ItemStack, arg1: Internal.ItemUseContext): Internal.ActionResultType;
        getContainerItem(arg0: Internal.ItemStack): Internal.ItemStack;
        setRegistryName(arg0: ResourceLocation_): any;
        getEquipmentSlot(arg0: Internal.ItemStack): EquipmentSlot;
        initCapabilities(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): Internal.ICapabilityProvider;
        getItemStackLimit(arg0: Internal.ItemStack): number;
        getFontRenderer(arg0: Internal.ItemStack): Internal.FontRenderer;
        forciblyAllowsTableEnchantment(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        makesPiglinsNeutral(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        isEnderMask(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.EndermanEntity): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        get item(): Internal.Item;
        get creativeTabs(): Internal.Collection<Internal.ItemGroup>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Block, arg1: Internal.Item$Properties);
    }
    type AirItem_ = AirItem;
    interface ObjectIterator <K> extends Internal.Iterator<K> {
        skip(arg0: number): number;
    }
    type ObjectIterator_<K> = ObjectIterator<K>;
    interface CommentedConfig$Entry extends Internal.Config$Entry, Internal.UnmodifiableCommentedConfig$Entry {
        setComment(arg0: string): string;
        removeComment(): string;
    }
    type CommentedConfig$Entry_ = CommentedConfig$Entry;
    class ListConfig <E, CV> extends Internal.ConfigValue<Internal.List<E>> {
        getStringForGUI(v: Internal.List<E>): Internal.ITextComponent;
        getColor(v: Internal.List<E>): Internal.Color4I;
        copy(arg0: any): any;
        copy(v: Internal.List<E>): Internal.List<E>;
        static readonly COLOR: Internal.Color4I;
        static readonly EMPTY_LIST: Internal.StringTextComponent;
        static readonly NON_EMPTY_LIST: Internal.StringTextComponent;
        readonly type: CV;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(t: CV);
    }
    type ListConfig_<E, CV> = ListConfig<E, CV>;
    interface Composite {
        createContext(arg0: Internal.ColorModel, arg1: Internal.ColorModel, arg2: Internal.RenderingHints): Internal.CompositeContext;
        (arg0: Internal.ColorModel, arg1: Internal.ColorModel, arg2: Internal.RenderingHints): Internal.CompositeContext;
    }
    type Composite_ = ((arg0: Internal.ColorModel, arg1: Internal.ColorModel, arg2: Internal.RenderingHints)=>Internal.CompositeContext) | Composite;
    interface IResizeCallback <T> {
        onResize(arg0: number, arg1: T): number;
        (arg0: number, arg1: T): number;
    }
    type IResizeCallback_<T> = ((arg0: number, arg1: T)=>number) | IResizeCallback<T>;
    interface ShortIterator extends Internal.Iterator<number> {
        next(): any;
        next(): number;
        nextShort(): number;
        skip(arg0: number): number;
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
        forEachRemaining(arg0: Internal.ShortConsumer_): void;
        (): number;
    }
    type ShortIterator_ = (()=>number) | ShortIterator;
    interface Config$Entry extends Internal.UnmodifiableConfig$Entry {
        setValue<T_>(arg0: any): T_;
        (arg0: any): T_;
    }
    type Config$Entry_ = ((arg0: any)=>T_) | Config$Entry;
    abstract class MekanismRecipeJS extends Internal.RecipeJS {
        static parseChemicalStack(arg0: any): Internal.JsonElement;
        static serializeGasResult(arg0: Internal.GasStack): Internal.JsonObject;
        static parseGasResult(arg0: any): Internal.GasStack;
        static parseGasIngrdient(arg0: any): Internal.GasStackIngredient;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MekanismRecipeJS_ = MekanismRecipeJS;
    class TakeoffPhase extends Internal.Phase {
        func_188652_i(): Internal.PhaseType<Internal.TakeoffPhase>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type TakeoffPhase_ = TakeoffPhase;
    class DataResult$Instance extends Internal.Enum<Internal.DataResult$Instance> implements Internal.Applicative<Internal.DataResult$Mu, Internal.DataResult$Instance$Mu> {
        static values(): Internal.DataResult$Instance[];
        point<A_>(arg0: A_): Internal.App<Internal.DataResult$Mu, A_>;
        map<T_, R_>(arg0: Internal.Function_<T_, R_>, arg1: Internal.App<Internal.DataResult$Mu, T_>): Internal.App<Internal.DataResult$Mu, R_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>, arg4: Internal.App<Internal.DataResult$Mu, T5_>, arg5: Internal.App<Internal.DataResult$Mu, T6_>, arg6: Internal.App<Internal.DataResult$Mu, T7_>, arg7: Internal.App<Internal.DataResult$Mu, T8_>, arg8: Internal.App<Internal.DataResult$Mu, T9_>, arg9: Internal.App<Internal.DataResult$Mu, T10_>, arg10: Internal.App<Internal.DataResult$Mu, T11_>): Internal.Products$P11<Internal.DataResult$Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>, arg4: Internal.App<Internal.DataResult$Mu, T5_>, arg5: Internal.App<Internal.DataResult$Mu, T6_>, arg6: Internal.App<Internal.DataResult$Mu, T7_>, arg7: Internal.App<Internal.DataResult$Mu, T8_>, arg8: Internal.App<Internal.DataResult$Mu, T9_>, arg9: Internal.App<Internal.DataResult$Mu, T10_>): Internal.Products$P10<Internal.DataResult$Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>, arg4: Internal.App<Internal.DataResult$Mu, T5_>, arg5: Internal.App<Internal.DataResult$Mu, T6_>, arg6: Internal.App<Internal.DataResult$Mu, T7_>, arg7: Internal.App<Internal.DataResult$Mu, T8_>, arg8: Internal.App<Internal.DataResult$Mu, T9_>): Internal.Products$P9<Internal.DataResult$Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>, arg4: Internal.App<Internal.DataResult$Mu, T5_>, arg5: Internal.App<Internal.DataResult$Mu, T6_>, arg6: Internal.App<Internal.DataResult$Mu, T7_>, arg7: Internal.App<Internal.DataResult$Mu, T8_>, arg8: Internal.App<Internal.DataResult$Mu, T9_>, arg9: Internal.App<Internal.DataResult$Mu, T10_>, arg10: Internal.App<Internal.DataResult$Mu, T11_>, arg11: Internal.App<Internal.DataResult$Mu, T12_>, arg12: Internal.App<Internal.DataResult$Mu, T13_>, arg13: Internal.App<Internal.DataResult$Mu, T14_>, arg14: Internal.App<Internal.DataResult$Mu, T15_>, arg15: Internal.App<Internal.DataResult$Mu, T16_>): Internal.Products$P16<Internal.DataResult$Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>, arg4: Internal.App<Internal.DataResult$Mu, T5_>, arg5: Internal.App<Internal.DataResult$Mu, T6_>, arg6: Internal.App<Internal.DataResult$Mu, T7_>, arg7: Internal.App<Internal.DataResult$Mu, T8_>, arg8: Internal.App<Internal.DataResult$Mu, T9_>, arg9: Internal.App<Internal.DataResult$Mu, T10_>, arg10: Internal.App<Internal.DataResult$Mu, T11_>, arg11: Internal.App<Internal.DataResult$Mu, T12_>, arg12: Internal.App<Internal.DataResult$Mu, T13_>, arg13: Internal.App<Internal.DataResult$Mu, T14_>, arg14: Internal.App<Internal.DataResult$Mu, T15_>): Internal.Products$P15<Internal.DataResult$Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>, arg4: Internal.App<Internal.DataResult$Mu, T5_>, arg5: Internal.App<Internal.DataResult$Mu, T6_>, arg6: Internal.App<Internal.DataResult$Mu, T7_>, arg7: Internal.App<Internal.DataResult$Mu, T8_>, arg8: Internal.App<Internal.DataResult$Mu, T9_>, arg9: Internal.App<Internal.DataResult$Mu, T10_>, arg10: Internal.App<Internal.DataResult$Mu, T11_>, arg11: Internal.App<Internal.DataResult$Mu, T12_>, arg12: Internal.App<Internal.DataResult$Mu, T13_>, arg13: Internal.App<Internal.DataResult$Mu, T14_>): Internal.Products$P14<Internal.DataResult$Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>, arg4: Internal.App<Internal.DataResult$Mu, T5_>, arg5: Internal.App<Internal.DataResult$Mu, T6_>, arg6: Internal.App<Internal.DataResult$Mu, T7_>, arg7: Internal.App<Internal.DataResult$Mu, T8_>, arg8: Internal.App<Internal.DataResult$Mu, T9_>, arg9: Internal.App<Internal.DataResult$Mu, T10_>, arg10: Internal.App<Internal.DataResult$Mu, T11_>, arg11: Internal.App<Internal.DataResult$Mu, T12_>, arg12: Internal.App<Internal.DataResult$Mu, T13_>): Internal.Products$P13<Internal.DataResult$Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>, arg4: Internal.App<Internal.DataResult$Mu, T5_>, arg5: Internal.App<Internal.DataResult$Mu, T6_>, arg6: Internal.App<Internal.DataResult$Mu, T7_>, arg7: Internal.App<Internal.DataResult$Mu, T8_>, arg8: Internal.App<Internal.DataResult$Mu, T9_>, arg9: Internal.App<Internal.DataResult$Mu, T10_>, arg10: Internal.App<Internal.DataResult$Mu, T11_>, arg11: Internal.App<Internal.DataResult$Mu, T12_>): Internal.Products$P12<Internal.DataResult$Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_>;
        group<T1_, T2_, T3_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>): Internal.Products$P3<Internal.DataResult$Mu, T1_, T2_, T3_>;
        group<T1_, T2_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>): Internal.Products$P2<Internal.DataResult$Mu, T1_, T2_>;
        group<T1_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>): Internal.Products$P1<Internal.DataResult$Mu, T1_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>, arg4: Internal.App<Internal.DataResult$Mu, T5_>, arg5: Internal.App<Internal.DataResult$Mu, T6_>, arg6: Internal.App<Internal.DataResult$Mu, T7_>, arg7: Internal.App<Internal.DataResult$Mu, T8_>): Internal.Products$P8<Internal.DataResult$Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>, arg4: Internal.App<Internal.DataResult$Mu, T5_>, arg5: Internal.App<Internal.DataResult$Mu, T6_>, arg6: Internal.App<Internal.DataResult$Mu, T7_>): Internal.Products$P7<Internal.DataResult$Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>, arg4: Internal.App<Internal.DataResult$Mu, T5_>, arg5: Internal.App<Internal.DataResult$Mu, T6_>): Internal.Products$P6<Internal.DataResult$Mu, T1_, T2_, T3_, T4_, T5_, T6_>;
        group<T1_, T2_, T3_, T4_, T5_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>, arg4: Internal.App<Internal.DataResult$Mu, T5_>): Internal.Products$P5<Internal.DataResult$Mu, T1_, T2_, T3_, T4_, T5_>;
        group<T1_, T2_, T3_, T4_>(arg0: Internal.App<Internal.DataResult$Mu, T1_>, arg1: Internal.App<Internal.DataResult$Mu, T2_>, arg2: Internal.App<Internal.DataResult$Mu, T3_>, arg3: Internal.App<Internal.DataResult$Mu, T4_>): Internal.Products$P4<Internal.DataResult$Mu, T1_, T2_, T3_, T4_>;
        apply2<A_, B_, R_>(arg0: Internal.BiFunction_<A_, B_, R_>, arg1: Internal.App<Internal.DataResult$Mu, A_>, arg2: Internal.App<Internal.DataResult$Mu, B_>): Internal.App<Internal.DataResult$Mu, R_>;
        apply3<T1_, T2_, T3_, R_>(arg0: Internal.Function3_<T1_, T2_, T3_, R_>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>): Internal.App<Internal.DataResult$Mu, R_>;
        apply4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.Function4_<T1_, T2_, T3_, T4_, R_>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>): Internal.App<Internal.DataResult$Mu, R_>;
        ap11<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function11<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>, arg8: Internal.App<Internal.DataResult$Mu, T8_>, arg9: Internal.App<Internal.DataResult$Mu, T9_>, arg10: Internal.App<Internal.DataResult$Mu, T10_>, arg11: Internal.App<Internal.DataResult$Mu, T11_>): Internal.App<Internal.DataResult$Mu, R_>;
        ap2<A_, B_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.BiFunction<A_, B_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, A_>, arg2: Internal.App<Internal.DataResult$Mu, B_>): Internal.App<Internal.DataResult$Mu, R_>;
        apply5<T1_, T2_, T3_, T4_, T5_, R_>(arg0: Internal.Function5_<T1_, T2_, T3_, T4_, T5_, R_>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>): Internal.App<Internal.DataResult$Mu, R_>;
        ap10<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function10<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>, arg8: Internal.App<Internal.DataResult$Mu, T8_>, arg9: Internal.App<Internal.DataResult$Mu, T9_>, arg10: Internal.App<Internal.DataResult$Mu, T10_>): Internal.App<Internal.DataResult$Mu, R_>;
        lift2<A_, B_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.BiFunction<A_, B_, R_>>): Internal.BiFunction<Internal.App<Internal.DataResult$Mu, A_>, Internal.App<Internal.DataResult$Mu, B_>, Internal.App<Internal.DataResult$Mu, R_>>;
        ap4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function4<T1_, T2_, T3_, T4_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>): Internal.App<Internal.DataResult$Mu, R_>;
        lift1<A_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function<A_, R_>>): Internal.Function<Internal.App<Internal.DataResult$Mu, A_>, Internal.App<Internal.DataResult$Mu, R_>>;
        ap3<T1_, T2_, T3_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function3<T1_, T2_, T3_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>): Internal.App<Internal.DataResult$Mu, R_>;
        ap6<T1_, T2_, T3_, T4_, T5_, T6_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function6<T1_, T2_, T3_, T4_, T5_, T6_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>): Internal.App<Internal.DataResult$Mu, R_>;
        static valueOf(arg0: string): Internal.DataResult$Instance;
        ap5<T1_, T2_, T3_, T4_, T5_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function5<T1_, T2_, T3_, T4_, T5_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>): Internal.App<Internal.DataResult$Mu, R_>;
        ap8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>, arg8: Internal.App<Internal.DataResult$Mu, T8_>): Internal.App<Internal.DataResult$Mu, R_>;
        lift6<T1_, T2_, T3_, T4_, T5_, T6_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function6<T1_, T2_, T3_, T4_, T5_, T6_, R_>>): Internal.Function6<Internal.App<Internal.DataResult$Mu, T1_>, Internal.App<Internal.DataResult$Mu, T2_>, Internal.App<Internal.DataResult$Mu, T3_>, Internal.App<Internal.DataResult$Mu, T4_>, Internal.App<Internal.DataResult$Mu, T5_>, Internal.App<Internal.DataResult$Mu, T6_>, Internal.App<Internal.DataResult$Mu, R_>>;
        ap7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>): Internal.App<Internal.DataResult$Mu, R_>;
        lift5<T1_, T2_, T3_, T4_, T5_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function5<T1_, T2_, T3_, T4_, T5_, R_>>): Internal.Function5<Internal.App<Internal.DataResult$Mu, T1_>, Internal.App<Internal.DataResult$Mu, T2_>, Internal.App<Internal.DataResult$Mu, T3_>, Internal.App<Internal.DataResult$Mu, T4_>, Internal.App<Internal.DataResult$Mu, T5_>, Internal.App<Internal.DataResult$Mu, R_>>;
        lift4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function4<T1_, T2_, T3_, T4_, R_>>): Internal.Function4<Internal.App<Internal.DataResult$Mu, T1_>, Internal.App<Internal.DataResult$Mu, T2_>, Internal.App<Internal.DataResult$Mu, T3_>, Internal.App<Internal.DataResult$Mu, T4_>, Internal.App<Internal.DataResult$Mu, R_>>;
        lift3<T1_, T2_, T3_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function3<T1_, T2_, T3_, R_>>): Internal.Function3<Internal.App<Internal.DataResult$Mu, T1_>, Internal.App<Internal.DataResult$Mu, T2_>, Internal.App<Internal.DataResult$Mu, T3_>, Internal.App<Internal.DataResult$Mu, R_>>;
        ap9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>, arg8: Internal.App<Internal.DataResult$Mu, T8_>, arg9: Internal.App<Internal.DataResult$Mu, T9_>): Internal.App<Internal.DataResult$Mu, R_>;
        apply6<T1_, T2_, T3_, T4_, T5_, T6_, R_>(arg0: Internal.Function6_<T1_, T2_, T3_, T4_, T5_, T6_, R_>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>): Internal.App<Internal.DataResult$Mu, R_>;
        apply7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>(arg0: Internal.Function7_<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>): Internal.App<Internal.DataResult$Mu, R_>;
        lift9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>>): Internal.Function9<Internal.App<Internal.DataResult$Mu, T1_>, Internal.App<Internal.DataResult$Mu, T2_>, Internal.App<Internal.DataResult$Mu, T3_>, Internal.App<Internal.DataResult$Mu, T4_>, Internal.App<Internal.DataResult$Mu, T5_>, Internal.App<Internal.DataResult$Mu, T6_>, Internal.App<Internal.DataResult$Mu, T7_>, Internal.App<Internal.DataResult$Mu, T8_>, Internal.App<Internal.DataResult$Mu, T9_>, Internal.App<Internal.DataResult$Mu, R_>>;
        apply8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>(arg0: Internal.Function8_<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>, arg8: Internal.App<Internal.DataResult$Mu, T8_>): Internal.App<Internal.DataResult$Mu, R_>;
        lift8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>>): Internal.Function8<Internal.App<Internal.DataResult$Mu, T1_>, Internal.App<Internal.DataResult$Mu, T2_>, Internal.App<Internal.DataResult$Mu, T3_>, Internal.App<Internal.DataResult$Mu, T4_>, Internal.App<Internal.DataResult$Mu, T5_>, Internal.App<Internal.DataResult$Mu, T6_>, Internal.App<Internal.DataResult$Mu, T7_>, Internal.App<Internal.DataResult$Mu, T8_>, Internal.App<Internal.DataResult$Mu, R_>>;
        apply9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>(arg0: Internal.Function9_<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>, arg8: Internal.App<Internal.DataResult$Mu, T8_>, arg9: Internal.App<Internal.DataResult$Mu, T9_>): Internal.App<Internal.DataResult$Mu, R_>;
        lift7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>>): Internal.Function7<Internal.App<Internal.DataResult$Mu, T1_>, Internal.App<Internal.DataResult$Mu, T2_>, Internal.App<Internal.DataResult$Mu, T3_>, Internal.App<Internal.DataResult$Mu, T4_>, Internal.App<Internal.DataResult$Mu, T5_>, Internal.App<Internal.DataResult$Mu, T6_>, Internal.App<Internal.DataResult$Mu, T7_>, Internal.App<Internal.DataResult$Mu, R_>>;
        ap<A_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function<A_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, A_>): Internal.App<Internal.DataResult$Mu, R_>;
        ap<A_, R_>(arg0: Internal.Function_<A_, R_>, arg1: Internal.App<Internal.DataResult$Mu, A_>): Internal.App<Internal.DataResult$Mu, R_>;
        ap16<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function16<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>, arg8: Internal.App<Internal.DataResult$Mu, T8_>, arg9: Internal.App<Internal.DataResult$Mu, T9_>, arg10: Internal.App<Internal.DataResult$Mu, T10_>, arg11: Internal.App<Internal.DataResult$Mu, T11_>, arg12: Internal.App<Internal.DataResult$Mu, T12_>, arg13: Internal.App<Internal.DataResult$Mu, T13_>, arg14: Internal.App<Internal.DataResult$Mu, T14_>, arg15: Internal.App<Internal.DataResult$Mu, T15_>, arg16: Internal.App<Internal.DataResult$Mu, T16_>): Internal.App<Internal.DataResult$Mu, R_>;
        ap13<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function13<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>, arg8: Internal.App<Internal.DataResult$Mu, T8_>, arg9: Internal.App<Internal.DataResult$Mu, T9_>, arg10: Internal.App<Internal.DataResult$Mu, T10_>, arg11: Internal.App<Internal.DataResult$Mu, T11_>, arg12: Internal.App<Internal.DataResult$Mu, T12_>, arg13: Internal.App<Internal.DataResult$Mu, T13_>): Internal.App<Internal.DataResult$Mu, R_>;
        ap12<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function12<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>, arg8: Internal.App<Internal.DataResult$Mu, T8_>, arg9: Internal.App<Internal.DataResult$Mu, T9_>, arg10: Internal.App<Internal.DataResult$Mu, T10_>, arg11: Internal.App<Internal.DataResult$Mu, T11_>, arg12: Internal.App<Internal.DataResult$Mu, T12_>): Internal.App<Internal.DataResult$Mu, R_>;
        ap15<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function15<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>, arg8: Internal.App<Internal.DataResult$Mu, T8_>, arg9: Internal.App<Internal.DataResult$Mu, T9_>, arg10: Internal.App<Internal.DataResult$Mu, T10_>, arg11: Internal.App<Internal.DataResult$Mu, T11_>, arg12: Internal.App<Internal.DataResult$Mu, T12_>, arg13: Internal.App<Internal.DataResult$Mu, T13_>, arg14: Internal.App<Internal.DataResult$Mu, T14_>, arg15: Internal.App<Internal.DataResult$Mu, T15_>): Internal.App<Internal.DataResult$Mu, R_>;
        ap14<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, R_>(arg0: Internal.App<Internal.DataResult$Mu, Internal.Function14<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, R_>>, arg1: Internal.App<Internal.DataResult$Mu, T1_>, arg2: Internal.App<Internal.DataResult$Mu, T2_>, arg3: Internal.App<Internal.DataResult$Mu, T3_>, arg4: Internal.App<Internal.DataResult$Mu, T4_>, arg5: Internal.App<Internal.DataResult$Mu, T5_>, arg6: Internal.App<Internal.DataResult$Mu, T6_>, arg7: Internal.App<Internal.DataResult$Mu, T7_>, arg8: Internal.App<Internal.DataResult$Mu, T8_>, arg9: Internal.App<Internal.DataResult$Mu, T9_>, arg10: Internal.App<Internal.DataResult$Mu, T10_>, arg11: Internal.App<Internal.DataResult$Mu, T11_>, arg12: Internal.App<Internal.DataResult$Mu, T12_>, arg13: Internal.App<Internal.DataResult$Mu, T13_>, arg14: Internal.App<Internal.DataResult$Mu, T14_>): Internal.App<Internal.DataResult$Mu, R_>;
        static readonly INSTANCE: Internal.DataResult$Instance;
    }
    type DataResult$Instance_ = "instance" | DataResult$Instance;
    abstract class RenderingHints$Key extends Document.Object {
        isCompatibleValue(arg0: any): boolean;
    }
    type RenderingHints$Key_ = RenderingHints$Key;
    interface LinkableTileEntity {
        onBlockLinkCreate(arg0: Internal.PlayerEntity, arg1: BlockPos): void;
        doesAcceptLinks(): boolean;
        tryUnlink(arg0: Internal.PlayerEntity, arg1: BlockPos): boolean;
        onEntityLinkCreate(arg0: Internal.PlayerEntity, arg1: Internal.LivingEntity): void;
        tryLinkEntity(arg0: Internal.PlayerEntity, arg1: Internal.LivingEntity): boolean;
        tryLinkBlock(arg0: Internal.PlayerEntity, arg1: BlockPos): boolean;
        getLinkWorld(): Internal.World;
        getUnLocalizedDisplayName(): string;
        getLinkedPositions(): Internal.List<BlockPos>;
        getLinkPos(): BlockPos;
        onSelect(arg0: Internal.PlayerEntity): boolean;
    }
    type LinkableTileEntity_ = LinkableTileEntity;
    interface GameVersion {
        getProtocolVersion(): number;
        getReleaseTarget(): string;
        getPackVersion(): number;
        getName(): string;
        getBuildTime(): Internal.Date;
        getWorldVersion(): number;
        getId(): string;
        isStable(): boolean;
    }
    type GameVersion_ = GameVersion;
    class Level extends Document.Object implements Internal.Comparable<Internal.Level>, Internal.Serializable {
        isLessSpecificThan(level: Internal.Level): boolean;
        isMoreSpecificThan(level: Internal.Level): boolean;
        static forName(name: string, intValue: number): Internal.Level;
        static valueOf<T_>(enumType: Internal.Class<T_>, name: string): T_;
        static valueOf(name: string): Internal.Level;
        static values(): Internal.Level[];
        isInRange(minLevel: Internal.Level, maxLevel: Internal.Level): boolean;
        compareTo(other: any): number;
        compareTo(other: Internal.Level): number;
        intLevel(): number;
        static getLevel(name: string): Internal.Level;
        getDeclaringClass(): Internal.Class<Internal.Level>;
        static toLevel(name: string, defaultLevel: Internal.Level): Internal.Level;
        static toLevel(sArg: string): Internal.Level;
        getStandardLevel(): Internal.StandardLevel;
        clone(): any;
        clone(): Internal.Level;
        name(): string;
        static readonly TRACE: Internal.Level;
        static readonly ALL: Internal.Level;
        static readonly CATEGORY: "Level";
        static readonly ERROR: Internal.Level;
        static readonly INFO: Internal.Level;
        static readonly FATAL: Internal.Level;
        static readonly DEBUG: Internal.Level;
        static readonly OFF: Internal.Level;
        static readonly WARN: Internal.Level;
        get declaringClass(): Internal.Class<Internal.Level>;
        get standardLevel(): Internal.StandardLevel;
    }
    type Level_ = Level;
    class EventsJS extends Document.Object {
        postToHandlers(id: string, list: Internal.List<Internal.EventsJS$ScriptEventHandler>, event: Internal.EventJS): boolean;
        handlers(id: string): Internal.List<Internal.EventsJS$ScriptEventHandler>;
        clear(): void;
        listen(id: string, handler: Internal.IEventHandler_): void;
        readonly scriptManager: Internal.ScriptManager;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(t: Internal.ScriptManager);
    }
    type EventsJS_ = EventsJS;
    class RenderType$Type extends Internal.RenderType {
        readonly field_228668_S_: Internal.RenderType$State;
    }
    type RenderType$Type_ = RenderType$Type;
    interface IntBidirectionalIterator extends Internal.IntIterator, Internal.ObjectBidirectionalIterator<number> {
        previousInt(): number;
        previous(): number;
        previous(): any;
        back(arg0: number): number;
        skip(arg0: number): number;
        (): number;
    }
    type IntBidirectionalIterator_ = (()=>number) | IntBidirectionalIterator;
    class BufferedWriter extends Internal.Writer {
        newLine(): void;
        append(arg0: string): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Writer);
        constructor(arg0: Internal.Writer, arg1: number);
    }
    type BufferedWriter_ = BufferedWriter;
    class BiomeAmbience extends Document.Object {
        func_235218_c_(): number;
        func_235226_g_(): Internal.Optional<Internal.SoundAdditionsAmbience>;
        func_242527_d(): number;
        func_235216_b_(): number;
        func_242528_e(): Internal.Optional<number>;
        func_235222_e_(): Internal.Optional<Internal.SoundEvent>;
        func_235220_d_(): Internal.Optional<Internal.ParticleEffectAmbience>;
        func_242529_f(): Internal.Optional<number>;
        func_235224_f_(): Internal.Optional<Internal.MoodSoundAmbience>;
        func_235213_a_(): number;
        func_235228_h_(): Internal.Optional<Internal.BackgroundMusicSelector>;
        func_242531_g(): Internal.BiomeAmbience$GrassColorModifier;
        field_235206_c_: number;
        field_242526_h: Internal.BiomeAmbience$GrassColorModifier;
        field_235207_d_: number;
        field_242525_g: Internal.Optional<number>;
        field_242524_f: Internal.Optional<number>;
        field_235205_b_: number;
        static readonly field_235204_a_: Internal.Codec<Internal.BiomeAmbience>;
        field_242523_e: number;
        field_235210_g_: Internal.Optional<Internal.MoodSoundAmbience>;
        field_235211_h_: Internal.Optional<Internal.SoundAdditionsAmbience>;
        field_235212_i_: Internal.Optional<Internal.BackgroundMusicSelector>;
        field_235209_f_: Internal.Optional<Internal.SoundEvent>;
        field_235208_e_: Internal.Optional<Internal.ParticleEffectAmbience>;
    }
    type BiomeAmbience_ = BiomeAmbience;
    interface IMaterial extends Internal.Comparable<Internal.IMaterial> {
        isCraftable(): boolean;
        getDisplayName(): Internal.ITextComponent;
        getTranslationKey(): string;
        getIdentifier(): Internal.MaterialId;
        getColor(): Internal.Color;
        getColoredDisplayName(): Internal.ITextComponent;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.IMaterial): number;
        getTier(): number;
        getSortOrder(): number;
        isHidden(): boolean;
    }
    type IMaterial_ = IMaterial;
    interface IChunk extends Internal.IBlockReader, Internal.IStructureReader, Internal.ChunkMixin, Internal.ExtendedChunk {
        func_201593_f(): boolean;
        getWorldForge(): Internal.IWorld;
        func_201576_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_201594_d(arg0: BlockPos): void;
        func_225549_i_(): Internal.BiomeContainer;
        func_203066_o(): Internal.Set<BlockPos>;
        func_201612_a(arg0: Internal.Map_<net.minecraft.world.gen.feature.structure.Structure_<any>, Internal.StructureStart_<any>>): void;
        func_201591_a(arg0: Internal.CompoundNBT_): void;
        func_217310_r(): boolean;
        func_201636_b(arg0: number, arg1: number): void;
        func_177426_a(arg0: BlockPos, arg1: Internal.TileEntity): void;
        func_177425_e(arg0: BlockPos): void;
        func_76632_l(): Internal.ChunkPos;
        func_201589_g(): Internal.ChunkStatus;
        func_186031_y(): Internal.ChunkSection;
        func_217303_b(arg0: Internal.Heightmap$Type_): Internal.Heightmap;
        func_177427_f(arg0: boolean): void;
        func_205218_i_(): Internal.ITickList<Internal.Block>;
        func_217305_b(arg0: boolean): void;
        func_76587_i(): Internal.ChunkSection[];
        func_201609_c(): Internal.Map<net.minecraft.world.gen.feature.structure.Structure<any>, Internal.StructureStart<any>>;
        func_212247_j(): Internal.ITickList<Internal.Fluid>;
        func_76625_h(): number;
        func_76606_c(arg0: number, arg1: number): boolean;
        func_217304_m(): Internal.Stream<BlockPos>;
        func_177416_w(): number;
        func_201607_a(arg0: Internal.Heightmap$Type_, arg1: number[]): void;
        func_201614_D(): Internal.ShortList[];
        func_76612_a(arg0: Internal.Entity): void;
        func_177415_c(arg0: number): void;
        func_177432_b(arg0: number): void;
        func_196966_y(): Internal.UpgradeData;
        func_177436_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: boolean): Internal.BlockState;
        func_201579_g(arg0: BlockPos): Internal.CompoundNBT;
        func_223134_j(arg0: BlockPos): Internal.CompoundNBT;
        func_217311_f(): Internal.Collection<Internal.Map$Entry<Internal.Heightmap$Type, Internal.Heightmap>>;
    }
    type IChunk_ = IChunk;
    abstract class AnimatedOverlayElement extends Internal.PonderOverlayElement {
        setFade(arg0: number): void;
        set fade(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AnimatedOverlayElement_ = AnimatedOverlayElement;
    class FMLStatusPing extends Document.Object implements Internal.IFMLStatPingExtensions {
        isTruncated(): boolean;
        getRemoteChannels(): Internal.Map<ResourceLocation, org.apache.commons.lang3.tuple.Pair<string, boolean>>;
        getMods(): Internal.Map<any, any>;
        getChannels(): Internal.Map<any, any>;
        getRemoteModData(): Internal.Map<string, string>;
        getFMLNetworkVer(): number;
        getFMLNetworkVersion(): number;
        get remoteChannels(): Internal.Map<ResourceLocation, org.apache.commons.lang3.tuple.Pair<string, boolean>>;
        get mods(): Internal.Map<any, any>;
        get fMLNetworkVer(): number;
        get channels(): Internal.Map<any, any>;
        get truncated(): boolean;
        get remoteModData(): Internal.Map<string, string>;
        get fMLNetworkVersion(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FMLStatusPing_ = FMLStatusPing;
    interface IRenderTypeBuffer {
        getBuffer(arg0: Internal.RenderType): Internal.IVertexBuilder;
        (arg0: Internal.RenderType): Internal.IVertexBuilder;
    }
    type IRenderTypeBuffer_ = ((arg0: Internal.RenderType)=>Internal.IVertexBuilder) | IRenderTypeBuffer;
    class RenderGameOverlayEvent$Post extends Internal.RenderGameOverlayEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MatrixStack, arg1: Internal.RenderGameOverlayEvent, arg2: Internal.RenderGameOverlayEvent$ElementType);
    }
    type RenderGameOverlayEvent$Post_ = RenderGameOverlayEvent$Post;
    class WitherEntity extends Internal.MonsterEntity implements Internal.IChargeableMob, Internal.IRangedAttackMob, Internal.AccessorWitherEntity {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_82207_a(arg0: number): number;
        static func_234258_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        botania_getHeadX(arg0: number): number;
        botania_getHeadY(arg0: number): number;
        foodEatenKJS(is: Internal.ItemStack): void;
        botania_getHeadZ(arg0: number): number;
        func_82206_m(): void;
        func_82203_t(arg0: number): number;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        hasCooldown(): boolean;
        func_82212_n(): number;
        static func_181033_a(arg0: Internal.BlockState): boolean;
        func_82210_r(arg0: number): number;
        isMultipartEntity(): boolean;
        func_82211_c(arg0: number, arg1: number): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_225509_J__(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_82215_s(arg0: number): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.WitherEntity>, arg1: Internal.World);
    }
    type WitherEntity_ = WitherEntity;
    class HuskEntity extends Internal.ZombieEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        static func_223334_b(arg0: Internal.EntityType_<Internal.HuskEntity_>, arg1: Internal.IServerWorld_, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.HuskEntity>, arg1: Internal.World);
    }
    type HuskEntity_ = HuskEntity;
    class IToast$Visibility extends Internal.Enum<Internal.IToast$Visibility> {
        static valueOf(arg0: string): Internal.IToast$Visibility;
        static values(): Internal.IToast$Visibility[];
        func_194169_a(arg0: Internal.SoundHandler): void;
        static readonly HIDE: Internal.IToast$Visibility;
        static readonly SHOW: Internal.IToast$Visibility;
    }
    type IToast$Visibility_ = "show" | "hide" | IToast$Visibility;
    abstract class RuleTest extends Document.Object {
        func_215181_a(arg0: Internal.BlockState, arg1: Internal.Random): boolean;
        static readonly field_237127_c_: Internal.Codec<Internal.RuleTest>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RuleTest_ = RuleTest;
    interface Compressable extends Internal.Keyable {
        compressor<T_>(arg0: Internal.DynamicOps<T_>): Internal.KeyCompressor<T_>;
        (arg0: Internal.DynamicOps<T_>): Internal.KeyCompressor<T_>;
    }
    type Compressable_ = ((arg0: Internal.DynamicOps<T_>)=>Internal.KeyCompressor<T_>) | Compressable;
    class SchematicWorld extends Internal.WrappedWorld implements Internal.IServerWorld {
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_226666_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.Stream<Internal.VoxelShape>;
        func_217298_h(arg0: BlockPos): number;
        getBounds(): Internal.MutableBoundingBox;
        func_175647_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<T_>): Internal.List<T_>;
        func_225521_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity): boolean;
        func_190525_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Predicate_<Internal.Entity_>): Internal.PlayerEntity;
        func_226668_i_(arg0: Internal.Entity): boolean;
        func_217361_a<T_>(arg0: Internal.List<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number): T_;
        func_175707_a(arg0: BlockPos, arg1: BlockPos): boolean;
        func_217344_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        func_226669_j_(arg0: Internal.Entity): boolean;
        func_217348_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus_): Internal.IChunk;
        func_226659_b_(arg0: BlockPos, arg1: number): number;
        func_72953_d(arg0: Internal.AxisAlignedBB): boolean;
        func_241851_ab(): number;
        func_234939_c_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_217374_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: Internal.AxisAlignedBB): Internal.List<T_>;
        func_242403_h(arg0: BlockPos): number;
        func_201672_e(): Internal.ServerWorld;
        func_217370_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity): Internal.PlayerEntity;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_217372_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number): Internal.PlayerEntity;
        func_175710_j(arg0: BlockPos): boolean;
        func_217359_a(arg0: Internal.EntityPredicate, arg1: number, arg2: number, arg3: number): Internal.PlayerEntity;
        getBlockMap(): Internal.Map<BlockPos, Internal.BlockState>;
        getEntities(): Internal.Stream<Internal.Entity>;
        func_242405_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): boolean;
        func_225317_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217357_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217301_I(): number;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        func_242413_ae(): number;
        func_226663_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.ISelectionContext): boolean;
        func_226660_f_(arg0: BlockPos): boolean;
        func_212866_a_(arg0: number, arg1: number): Internal.IChunk;
        func_242417_l(arg0: Internal.Entity): void;
        func_234938_ad_(): number;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_230547_a_(arg0: BlockPos, arg1: Internal.Block_): void;
        func_175627_a(arg0: BlockPos, arg1: Internal.Direction_): number;
        func_175623_d(arg0: BlockPos): boolean;
        func_242415_f(arg0: number): number;
        func_217362_a(arg0: Internal.Entity, arg1: number): Internal.PlayerEntity;
        func_72839_b(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.List<Internal.Entity>;
        getAllPositions(): Internal.Set<BlockPos>;
        func_201671_F(arg0: BlockPos): boolean;
        func_217360_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        func_205049_d(arg0: BlockPos, arg1: number): number;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
        func_217366_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): Internal.PlayerEntity;
        getPartEntities(): Internal.Collection<Internal.PartEntity<any>>;
        func_205052_D(arg0: BlockPos): number;
        func_201572_C(): number;
        func_242414_af(): number;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        getRenderedTileEntities(): Internal.Iterable<Internal.TileEntity>;
        func_225525_a_(arg0: BlockPos, arg1: Internal.ColorResolver_): number;
        func_226664_a_(arg0: Internal.AxisAlignedBB): boolean;
        asKJS(): any;
        func_175659_aa(): Internal.Difficulty;
        func_241457_a_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): Internal.Stream<Internal.VoxelShape>;
        func_217373_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: Internal.AxisAlignedBB): Internal.List<Internal.PlayerEntity>;
        func_242406_i(arg0: BlockPos): Internal.Optional<Internal.RegistryKey<Internal.Biome>>;
        func_226665_a__(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): boolean;
        func_217371_b(arg0: Internal.UUID): Internal.PlayerEntity;
        func_217349_x(arg0: BlockPos): Internal.IChunk;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        isAreaLoaded(arg0: BlockPos, arg1: number): boolean;
        func_217379_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_234865_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): boolean;
        func_217354_b(arg0: number, arg1: number): boolean;
        func_225318_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        func_234867_d_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_217358_a(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        renderMode: boolean;
        anchor: BlockPos;
        get allPositions(): Internal.Set<BlockPos>;
        get partEntities(): Internal.Collection<Internal.PartEntity<any>>;
        get renderedTileEntities(): Internal.Iterable<Internal.TileEntity>;
        get entities(): Internal.Stream<Internal.Entity>;
        get bounds(): Internal.MutableBoundingBox;
        get blockMap(): Internal.Map<BlockPos, Internal.BlockState>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World);
        constructor(arg0: BlockPos, arg1: Internal.World);
    }
    type SchematicWorld_ = SchematicWorld;
    class EntitySenses extends Document.Object {
        func_75522_a(arg0: Internal.Entity): boolean;
        func_75523_a(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MobEntity);
    }
    type EntitySenses_ = EntitySenses;
    class AttackIndicatorStatus extends Internal.Enum<Internal.AttackIndicatorStatus> {
        func_216748_b(): string;
        static func_216749_a(arg0: number): Internal.AttackIndicatorStatus;
        static valueOf(arg0: string): Internal.AttackIndicatorStatus;
        static values(): Internal.AttackIndicatorStatus[];
        func_216751_a(): number;
        static readonly CROSSHAIR: Internal.AttackIndicatorStatus;
        static readonly HOTBAR: Internal.AttackIndicatorStatus;
        static readonly OFF: Internal.AttackIndicatorStatus;
    }
    type AttackIndicatorStatus_ = "off" | "crosshair" | "hotbar" | AttackIndicatorStatus;
    interface GameRulesAccessor {
    }
    type GameRulesAccessor_ = GameRulesAccessor;
    class PotionColorCalculationEvent extends Internal.LivingEvent {
        getEffects(): Internal.Collection<Internal.EffectInstance>;
        setColor(arg0: number): void;
        shouldHideParticles(arg0: boolean): void;
        areParticlesHidden(): boolean;
        getColor(): number;
        get effects(): Internal.Collection<Internal.EffectInstance>;
        get color(): number;
        set color(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: number, arg2: boolean, arg3: Internal.Collection<Internal.EffectInstance>);
    }
    type PotionColorCalculationEvent_ = PotionColorCalculationEvent;
    class AxisRotatingBlockStateProvider extends Internal.BlockStateProvider {
        static readonly field_236807_b_: Internal.Codec<Internal.AxisRotatingBlockStateProvider>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Block);
    }
    type AxisRotatingBlockStateProvider_ = AxisRotatingBlockStateProvider;
    interface SecondaryLoop {
        exit(): boolean;
        enter(): boolean;
    }
    type SecondaryLoop_ = SecondaryLoop;
    abstract class RecursiveEventLoop <R> extends Internal.ThreadTaskExecutor<R> {
        func_213141_a<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Source_>, R>): Internal.CompletableFuture<Source_>;
        func_233528_c_<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Internal.Either_<Source_, Internal.Exception_>>, R>): Internal.CompletableFuture<Source_>;
        close(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type RecursiveEventLoop_<R> = RecursiveEventLoop<R>;
    abstract class ASPacket <T> extends Document.Object {
        handler(): Internal.ASPacket$Handler<T>;
        decoder(): Internal.ASPacket$Decoder<T>;
        encoder(): Internal.ASPacket$Encoder<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ASPacket_<T> = ASPacket<T>;
    interface ChannelId extends Internal.Serializable, Internal.Comparable<Internal.ChannelId> {
        asShortText(): string;
        asLongText(): string;
    }
    type ChannelId_ = ChannelId;
    interface IngredientKJS extends Internal.AsKJS {
        getItemsKJS(): Internal.ItemStack[];
        asKJS(): any;
        (): Internal.ItemStack[];
    }
    type IngredientKJS_ = (()=>Internal.ItemStack[]) | IngredientKJS;
    class Rectangle2D$Float extends Internal.Rectangle2D implements Internal.Serializable {
        setRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
        x: number;
        width: number;
        y: number;
        height: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type Rectangle2D$Float_ = Rectangle2D$Float;
    abstract class AccessibleContext extends Document.Object {
        getAccessibleRelationSet(): Internal.AccessibleRelationSet;
        getAccessibleStateSet(): Internal.AccessibleStateSet;
        firePropertyChange(arg0: string, arg1: any, arg2: any): void;
        getAccessibleName(): string;
        getAccessibleIndexInParent(): number;
        setAccessibleParent(arg0: Internal.Accessible_): void;
        setAccessibleName(arg0: string): void;
        getAccessibleValue(): Internal.AccessibleValue;
        removePropertyChangeListener(arg0: Internal.PropertyChangeListener_): void;
        getAccessibleText(): Internal.AccessibleText;
        getAccessibleTable(): Internal.AccessibleTable;
        getAccessibleAction(): Internal.AccessibleAction;
        getAccessibleDescription(): string;
        getAccessibleEditableText(): Internal.AccessibleEditableText;
        getAccessibleIcon(): any[];
        getAccessibleChild(arg0: number): Internal.Accessible;
        setAccessibleDescription(arg0: string): void;
        getAccessibleRole(): Internal.AccessibleRole;
        getAccessibleSelection(): Internal.AccessibleSelection;
        getAccessibleParent(): Internal.Accessible;
        addPropertyChangeListener(arg0: Internal.PropertyChangeListener_): void;
        getAccessibleChildrenCount(): number;
        getLocale(): Internal.Locale;
        getAccessibleComponent(): Internal.AccessibleComponent;
        static readonly ACCESSIBLE_COMPONENT_BOUNDS_CHANGED: "accessibleComponentBoundsChanged";
        static readonly ACCESSIBLE_INVALIDATE_CHILDREN: "accessibleInvalidateChildren";
        static readonly ACCESSIBLE_VISIBLE_DATA_PROPERTY: "AccessibleVisibleData";
        static readonly ACCESSIBLE_TABLE_ROW_HEADER_CHANGED: "accessibleTableRowHeaderChanged";
        static readonly ACCESSIBLE_SELECTION_PROPERTY: "AccessibleSelection";
        static readonly ACCESSIBLE_NAME_PROPERTY: "AccessibleName";
        static readonly ACCESSIBLE_HYPERTEXT_OFFSET: "AccessibleHypertextOffset";
        static readonly ACCESSIBLE_TEXT_ATTRIBUTES_CHANGED: "accessibleTextAttributesChanged";
        static readonly ACCESSIBLE_TABLE_SUMMARY_CHANGED: "accessibleTableSummaryChanged";
        static readonly ACCESSIBLE_CHILD_PROPERTY: "AccessibleChild";
        static readonly ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY: "AccessibleActiveDescendant";
        static readonly ACCESSIBLE_DESCRIPTION_PROPERTY: "AccessibleDescription";
        static readonly ACCESSIBLE_TABLE_ROW_DESCRIPTION_CHANGED: "accessibleTableRowDescriptionChanged";
        static readonly ACCESSIBLE_CARET_PROPERTY: "AccessibleCaret";
        static readonly ACCESSIBLE_ACTION_PROPERTY: "accessibleActionProperty";
        static readonly ACCESSIBLE_VALUE_PROPERTY: "AccessibleValue";
        static readonly ACCESSIBLE_TABLE_MODEL_CHANGED: "accessibleTableModelChanged";
        static readonly ACCESSIBLE_TABLE_COLUMN_DESCRIPTION_CHANGED: "accessibleTableColumnDescriptionChanged";
        static readonly ACCESSIBLE_STATE_PROPERTY: "AccessibleState";
        static readonly ACCESSIBLE_TABLE_COLUMN_HEADER_CHANGED: "accessibleTableColumnHeaderChanged";
        static readonly ACCESSIBLE_TEXT_PROPERTY: "AccessibleText";
        static readonly ACCESSIBLE_TABLE_CAPTION_CHANGED: "accessibleTableCaptionChanged";
        get accessibleChildrenCount(): number;
        get accessibleTable(): Internal.AccessibleTable;
        get locale(): Internal.Locale;
        get accessibleRole(): Internal.AccessibleRole;
        get accessibleSelection(): Internal.AccessibleSelection;
        get accessibleDescription(): string;
        get accessibleAction(): Internal.AccessibleAction;
        get accessibleParent(): Internal.Accessible;
        get accessibleIcon(): any[];
        get accessibleValue(): Internal.AccessibleValue;
        get accessibleStateSet(): Internal.AccessibleStateSet;
        get accessibleIndexInParent(): number;
        get accessibleComponent(): Internal.AccessibleComponent;
        get accessibleName(): string;
        get accessibleEditableText(): Internal.AccessibleEditableText;
        get accessibleText(): Internal.AccessibleText;
        get accessibleRelationSet(): Internal.AccessibleRelationSet;
        set accessibleDescription(arg0: string);
        set accessibleParent(arg0: Internal.Accessible_);
        set accessibleName(arg0: string);
    }
    type AccessibleContext_ = AccessibleContext;
    class SimplePlayerEventJS extends Internal.PlayerEventJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(p: Internal.PlayerEntity);
    }
    type SimplePlayerEventJS_ = SimplePlayerEventJS;
    class PotionEntity extends Internal.ProjectileItemEntity implements Internal.IRendersAsItem {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        static readonly field_190546_d: Internal.Predicate<Internal.LivingEntity>;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity);
        constructor(arg0: Internal.EntityType<Internal.PotionEntity>, arg1: Internal.World);
    }
    type PotionEntity_ = PotionEntity;
    class BufferContext extends Internal.BufferBuilder {
        func_225582_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        applyBakedLighting(arg0: number, arg1: Internal.ByteBuffer): number;
        getVertexBuilder(): Internal.IVertexBuilder;
        func_227847_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_225587_b_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_227891_b_(arg0: number): Internal.IVertexBuilder;
        draw(): void;
        func_225585_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225583_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225584_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_227885_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IVertexBuilder;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number[], arg3: number, arg4: number, arg5: number, arg6: number, arg7: number[], arg8: number, arg9: boolean): void;
        addVertexData(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        func_227889_a_(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_227886_a_(arg0: number): Internal.IVertexBuilder;
        func_227888_a_(matrix: Internal.Matrix4f, x: number, y: number, z: number): Internal.IVertexBuilder;
        func_227887_a_(matrix: Internal.Matrix3f, x: number, y: number, z: number): Internal.IVertexBuilder;
        getVertexFormat(): Internal.BufferVertexFormat;
        applyBakedNormals(arg0: Internal.Vector3f, arg1: Internal.ByteBuffer, arg2: Internal.Matrix3f): void;
        register(): void;
        get vertexFormat(): Internal.BufferVertexFormat;
        get vertexBuilder(): Internal.IVertexBuilder;
    }
    type BufferContext_ = BufferContext;
    interface ShortCollection extends Internal.Collection<number>, Internal.ShortIterable {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        add(arg0: number): boolean;
        toShortArray(arg0: number[]): number[];
        toShortArray(): number[];
        removeAll(arg0: Internal.ShortCollection): boolean;
        contains(arg0: any): boolean;
        contains(arg0: number): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.ShortIterator;
        addAll(arg0: Internal.ShortCollection): boolean;
        containsAll(arg0: Internal.ShortCollection): boolean;
        toArray(arg0: number[]): number[];
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.ShortCollection): boolean;
        removeIf(arg0: Internal.IntPredicate_): boolean;
        removeIf(arg0: Internal.Predicate_<number>): boolean;
    }
    type ShortCollection_ = ShortCollection;
    class ServerEventJS extends Internal.EventJS {
        getServer(): Internal.ServerJS;
        get server(): Internal.ServerJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ServerEventJS_ = ServerEventJS;
    abstract class FastMapKey <T> extends Document.Object {
        getProperty(): Internal.Property<T>;
        numValues(): number;
        get property(): Internal.Property<T>;
    }
    type FastMapKey_<T> = FastMapKey<T>;
    class WorldSettings extends Document.Object {
        func_234953_b_(): Internal.GameType;
        func_234955_d_(): Internal.Difficulty;
        func_234949_a_(arg0: Internal.DatapackCodec): Internal.WorldSettings;
        func_234954_c_(): boolean;
        func_234948_a_(arg0: Internal.Difficulty_): Internal.WorldSettings;
        func_234956_e_(): boolean;
        func_234947_a_(): string;
        func_234950_a_(arg0: Internal.GameType_): Internal.WorldSettings;
        func_234957_f_(): Internal.GameRules;
        static func_234951_a_(arg0: Internal.Dynamic<any>, arg1: Internal.DatapackCodec): Internal.WorldSettings;
        func_234958_g_(): Internal.DatapackCodec;
        func_234959_h_(): Internal.WorldSettings;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.GameType, arg2: boolean, arg3: Internal.Difficulty, arg4: boolean, arg5: Internal.GameRules, arg6: Internal.DatapackCodec);
    }
    type WorldSettings_ = WorldSettings;
    class Excluder extends Document.Object implements Internal.TypeAdapterFactory, Internal.Cloneable {
        withExclusionStrategy(arg0: Internal.ExclusionStrategy, arg1: boolean, arg2: boolean): Internal.Excluder;
        disableInnerClassSerialization(): Internal.Excluder;
        withModifiers(...arg0: number[]): Internal.Excluder;
        create<T_>(arg0: Internal.Gson, arg1: com.google.gson.reflect.TypeToken<T_>): Internal.TypeAdapter<T_>;
        excludeClass(arg0: Internal.Class<any>, arg1: boolean): boolean;
        withVersion(arg0: number): Internal.Excluder;
        excludeField(arg0: Internal.Field, arg1: boolean): boolean;
        excludeFieldsWithoutExposeAnnotation(): Internal.Excluder;
        static readonly DEFAULT: Internal.Excluder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Excluder_ = Excluder;
    class ChargingPlayerPhase extends Internal.Phase {
        func_188668_a(arg0: Vec3): void;
        func_188652_i(): Internal.PhaseType<Internal.ChargingPlayerPhase>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type ChargingPlayerPhase_ = ChargingPlayerPhase;
    class JsonNull extends Internal.JsonElement {
        static readonly INSTANCE: Internal.JsonNull;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type JsonNull_ = JsonNull;
    interface IBellConnection {
        getConnected(): Internal.IBellConnection$BellConnection;
        setConnected(arg0: Internal.IBellConnection$BellConnection_): void;
    }
    type IBellConnection_ = IBellConnection;
    interface App2 <F, A, B> {
    }
    type App2_<F, A, B> = App2<F, A, B>;
    interface ISelectionContext extends Internal.IForgeSelectionContext {
        func_216375_a(arg0: Internal.Item_): boolean;
        func_216378_a(arg0: Internal.VoxelShape, arg1: BlockPos, arg2: boolean): boolean;
        func_230426_a_(arg0: Internal.FluidState, arg1: Internal.FlowingFluid): boolean;
        func_225581_b_(): boolean;
    }
    type ISelectionContext_ = ISelectionContext;
    class ConfigSpec$CorrectionAction extends Internal.Enum<Internal.ConfigSpec$CorrectionAction> {
        static valueOf(arg0: string): Internal.ConfigSpec$CorrectionAction;
        static values(): Internal.ConfigSpec$CorrectionAction[];
        static readonly ADD: Internal.ConfigSpec$CorrectionAction;
        static readonly REMOVE: Internal.ConfigSpec$CorrectionAction;
        static readonly REPLACE: Internal.ConfigSpec$CorrectionAction;
    }
    type ConfigSpec$CorrectionAction_ = "add" | "replace" | "remove" | ConfigSpec$CorrectionAction;
    abstract class ThermalRecipeJS extends Internal.RecipeJS {
        energyMod(arg0: number): Internal.ThermalRecipeJS;
        energy(arg0: number): Internal.ThermalRecipeJS;
        fluidFrom(arg0: Internal.FluidStackJS_): Internal.FluidIngredient;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ThermalRecipeJS_ = ThermalRecipeJS;
    class ExplosionContext extends Document.Object {
        func_230311_a_(arg0: Internal.Explosion, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: number): boolean;
        func_230312_a_(arg0: Internal.Explosion, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.FluidState): Internal.Optional<number>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ExplosionContext_ = ExplosionContext;
    interface Language {
        getName(): string;
        getRegion(): string;
        getCode(): string;
    }
    type Language_ = Language;
    interface Keyable {
        keys<T>(arg0: Internal.DynamicOps<T>): Internal.Stream<T>;
        (arg0: Internal.DynamicOps<T>): Internal.Stream<T>;
    }
    type Keyable_ = ((arg0: Internal.DynamicOps<T>)=>Internal.Stream<T>) | Keyable;
    class EventQueue extends Document.Object {
        static getCurrentEvent(): Internal.AWTEvent;
        createSecondaryLoop(): Internal.SecondaryLoop;
        static getMostRecentEventTime(): number;
        peekEvent(): Internal.AWTEvent;
        peekEvent(arg0: number): Internal.AWTEvent;
        getNextEvent(): Internal.AWTEvent;
        static invokeLater(arg0: Internal.Runnable_): void;
        static invokeAndWait(arg0: Internal.Runnable_): void;
        push(arg0: Internal.EventQueue): void;
        static isDispatchThread(): boolean;
        postEvent(arg0: Internal.AWTEvent): void;
        get dispatchThread(): boolean;
        get currentEvent(): Internal.AWTEvent;
        get mostRecentEventTime(): number;
        get nextEvent(): Internal.AWTEvent;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EventQueue_ = EventQueue;
    interface ContainerAccess {
        getListeners(): Internal.List<Internal.IContainerListener>;
        (): Internal.List<Internal.IContainerListener>;
    }
    type ContainerAccess_ = (()=>Internal.List<Internal.IContainerListener>) | ContainerAccess;
    class ShulkerBoxTileEntity extends Internal.LockableLootTileEntity implements Internal.ISidedInventory, Internal.ITickableTileEntity {
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_235676_l_(): boolean;
        func_73660_a(): void;
        func_145818_k_(): boolean;
        func_190591_p(): Internal.ShulkerBoxTileEntity$AnimationStatus;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_190592_s(): Internal.DyeColor;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        func_190584_a(arg0: Internal.BlockState): Internal.AxisAlignedBB;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_190585_a(arg0: number): number;
        handler$zjo000$canInsertItem(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_, arg3: Internal.CallbackInfoReturnable<any>): void;
        func_190580_f(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_190587_b(arg0: Internal.Direction_): Internal.AxisAlignedBB;
        func_190586_e(arg0: Internal.CompoundNBT_): void;
        func_180463_a(arg0: Internal.Direction_): number[];
        func_180462_a(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        func_180461_b(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        getModelData(): Internal.IModelData;
        onLoad(): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DyeColor);
        constructor();
    }
    type ShulkerBoxTileEntity_ = ShulkerBoxTileEntity;
    class ColumnBlockPlacer extends Internal.BlockPlacer {
        static readonly field_236439_b_: Internal.Codec<Internal.ColumnBlockPlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
    }
    type ColumnBlockPlacer_ = ColumnBlockPlacer;
    class Point extends Internal.Point2D implements Internal.Serializable {
        move(arg0: number, arg1: number): void;
        getLocation(): Internal.Point;
        setLocation(arg0: Internal.Point): void;
        setLocation(arg0: number, arg1: number): void;
        translate(arg0: number, arg1: number): void;
        x: number;
        y: number;
        get location(): Internal.Point;
        set location(arg0: Internal.Point);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
        constructor(arg0: Internal.Point);
        constructor();
    }
    type Point_ = Point;
    class ClickEvent$Action extends Internal.Enum<Internal.ClickEvent$Action> {
        func_150673_b(): string;
        func_150674_a(): boolean;
        static valueOf(arg0: string): Internal.ClickEvent$Action;
        static func_150672_a(arg0: string): Internal.ClickEvent$Action;
        static values(): Internal.ClickEvent$Action[];
        static readonly RUN_COMMAND: Internal.ClickEvent$Action;
        static readonly CHANGE_PAGE: Internal.ClickEvent$Action;
        static readonly COPY_TO_CLIPBOARD: Internal.ClickEvent$Action;
        static readonly SUGGEST_COMMAND: Internal.ClickEvent$Action;
        static readonly OPEN_FILE: Internal.ClickEvent$Action;
        static readonly OPEN_URL: Internal.ClickEvent$Action;
    }
    type ClickEvent$Action_ = "open_url" | "open_file" | "run_command" | "suggest_command" | "change_page" | "copy_to_clipboard" | ClickEvent$Action;
    interface LongToIntFunction {
        applyAsInt(arg0: number): number;
        (arg0: number): number;
    }
    type LongToIntFunction_ = ((arg0: number)=>number) | LongToIntFunction;
    class ExtendedServerListData extends Document.Object {
        numberOfMods: number;
        extraReason: string;
        readonly truncated: boolean;
        readonly type: string;
        readonly isCompatible: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: boolean, arg2: number, arg3: string);
        constructor(arg0: string, arg1: boolean, arg2: number, arg3: string, arg4: boolean);
    }
    type ExtendedServerListData_ = ExtendedServerListData;
    class ForgeConfigSpec$IntValue extends Internal.ForgeConfigSpec$ConfigValue<number> {
    }
    type ForgeConfigSpec$IntValue_ = ForgeConfigSpec$IntValue;
    class RuinedPortalStructure$Location extends Internal.Enum<Internal.RuinedPortalStructure$Location> implements Internal.IStringSerializable {
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.RuinedPortalStructure$Location;
        static values(): Internal.RuinedPortalStructure$Location[];
        static func_236346_a_(arg0: string): Internal.RuinedPortalStructure$Location;
        func_236347_b_(): string;
        static readonly field_236342_h_: Internal.Codec<Internal.RuinedPortalStructure$Location>;
        static readonly JUNGLE: Internal.RuinedPortalStructure$Location;
        static readonly NETHER: Internal.RuinedPortalStructure$Location;
        static readonly OCEAN: Internal.RuinedPortalStructure$Location;
        static readonly MOUNTAIN: Internal.RuinedPortalStructure$Location;
        static readonly DESERT: Internal.RuinedPortalStructure$Location;
        static readonly SWAMP: Internal.RuinedPortalStructure$Location;
        static readonly STANDARD: Internal.RuinedPortalStructure$Location;
    }
    type RuinedPortalStructure$Location_ = "standard" | "desert" | "jungle" | "swamp" | "mountain" | "ocean" | "nether" | RuinedPortalStructure$Location;
    interface TypeRewriteRule {
        rewrite<A>(arg0: com.mojang.datafixers.types.Type<A>): Internal.Optional<Internal.RewriteResult<A, any>>;
        (arg0: com.mojang.datafixers.types.Type<A>): Internal.Optional<Internal.RewriteResult<A, any>>;
    }
    type TypeRewriteRule_ = ((arg0: com.mojang.datafixers.types.Type<A>)=>Internal.Optional<Internal.RewriteResult<A, any>>) | TypeRewriteRule;
    interface ScriptSource {
        createStream(arg0: Internal.ScriptFileInfo): Internal.InputStream;
        (arg0: Internal.ScriptFileInfo): Internal.InputStream;
    }
    type ScriptSource_ = ((arg0: Internal.ScriptFileInfo)=>Internal.InputStream) | ScriptSource;
    interface PrimitiveCodec <A> extends Internal.Codec<A> {
        encode<T_>(arg0: A, arg1: Internal.DynamicOps<T_>, arg2: T_): Internal.DataResult<T_>;
        read<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<A>;
        decode<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<Internal.Pair<A, T_>>;
        write<T_>(arg0: Internal.DynamicOps<T_>, arg1: A): T_;
    }
    type PrimitiveCodec_<A> = PrimitiveCodec<A>;
    class ModuleDescriptor$Modifier extends Internal.Enum<Internal.ModuleDescriptor$Modifier> {
        static valueOf(arg0: string): Internal.ModuleDescriptor$Modifier;
        static values(): Internal.ModuleDescriptor$Modifier[];
        static readonly AUTOMATIC: Internal.ModuleDescriptor$Modifier;
        static readonly SYNTHETIC: Internal.ModuleDescriptor$Modifier;
        static readonly MANDATED: Internal.ModuleDescriptor$Modifier;
        static readonly OPEN: Internal.ModuleDescriptor$Modifier;
    }
    type ModuleDescriptor$Modifier_ = "open" | "automatic" | "synthetic" | "mandated" | ModuleDescriptor$Modifier;
    abstract class ArgumentBuilder <S, T> extends Document.Object {
        redirect(arg0: Internal.CommandNode<S>): T;
        redirect(arg0: Internal.CommandNode<S>, arg1: Internal.SingleRedirectModifier_<S>): T;
        getRedirectModifier(): Internal.RedirectModifier<S>;
        getRequirement(): Internal.Predicate<S>;
        fork(arg0: Internal.CommandNode<S>, arg1: Internal.RedirectModifier_<S>): T;
        getRedirect(): Internal.CommandNode<S>;
        build(): Internal.CommandNode<S>;
        getCommand(): Internal.Command<S>;
        forward(arg0: Internal.CommandNode<S>, arg1: Internal.RedirectModifier_<S>, arg2: boolean): T;
        getArguments(): Internal.Collection<Internal.CommandNode<S>>;
        then(arg0: Internal.CommandNode<S>): T;
        then(arg0: Internal.ArgumentBuilder<S, any>): T;
        executes(arg0: Internal.Command_<S>): T;
        isFork(): boolean;
        requires(arg0: Internal.Predicate_<S>): T;
        get arguments(): Internal.Collection<Internal.CommandNode<S>>;
        get requirement(): Internal.Predicate<S>;
        get redirectModifier(): Internal.RedirectModifier<S>;
        get command(): Internal.Command<S>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ArgumentBuilder_<S, T> = ArgumentBuilder<S, T>;
    class SmithingRecipe extends Document.Object implements Internal.IRecipe<Internal.IInventory>, Internal.AccessorSmithingRecipe {
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_222127_g(): Internal.IRecipeType<any>;
        func_199560_c(): ResourceLocation;
        func_192399_d(): boolean;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        func_241456_a_(arg0: Internal.ItemStack): boolean;
        func_193358_e(): string;
        func_222128_h(): Internal.ItemStack;
        getAddition(): Internal.Ingredient;
        func_77571_b(): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<Internal.ItemStack>;
        getBase(): Internal.Ingredient;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        field_234838_b_: Internal.Ingredient;
        field_234837_a_: Internal.Ingredient;
        field_234839_c_: Internal.ItemStack;
        get addition(): Internal.Ingredient;
        get base(): Internal.Ingredient;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.Ingredient, arg2: Internal.Ingredient, arg3: Internal.ItemStack);
    }
    type SmithingRecipe_ = SmithingRecipe;
    class GuiScreenEvent$KeyboardKeyPressedEvent$Post extends Internal.GuiScreenEvent$KeyboardKeyPressedEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number);
    }
    type GuiScreenEvent$KeyboardKeyPressedEvent$Post_ = GuiScreenEvent$KeyboardKeyPressedEvent$Post;
    class SoundAdditionsAmbience extends Document.Object {
        func_235021_a_(): Internal.SoundEvent;
        func_235024_b_(): number;
        static readonly field_235018_a_: Internal.Codec<Internal.SoundAdditionsAmbience>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SoundEvent, arg1: number);
    }
    type SoundAdditionsAmbience_ = SoundAdditionsAmbience;
    interface StateHolderMixin <O> {
        setInstance(arg0: O): void;
        (arg0: O): void;
    }
    type StateHolderMixin_<O> = ((arg0: O)=>void) | StateHolderMixin<O>;
    class JobAttributes$DialogType extends Internal.AttributeValue {
        static readonly NATIVE: Internal.JobAttributes$DialogType;
        static readonly COMMON: Internal.JobAttributes$DialogType;
        static readonly NONE: Internal.JobAttributes$DialogType;
    }
    type JobAttributes$DialogType_ = JobAttributes$DialogType;
    interface ContainerListener extends Internal.EventListener {
        componentRemoved(arg0: Internal.ContainerEvent): void;
        componentAdded(arg0: Internal.ContainerEvent): void;
    }
    type ContainerListener_ = ContainerListener;
    interface IJumpingMount {
        func_184777_r_(): void;
        func_110206_u(arg0: number): void;
        func_184776_b(): boolean;
        func_184775_b(arg0: number): void;
    }
    type IJumpingMount_ = IJumpingMount;
    interface Script {
        exec(arg0: Internal.Context, arg1: Internal.Scriptable): any;
        (arg0: Internal.Context, arg1: Internal.Scriptable): any;
    }
    type Script_ = ((arg0: Internal.Context, arg1: Internal.Scriptable)=>any) | Script;
    interface IBlockDisplayReader extends Internal.IBlockReader {
        func_226659_b_(arg0: BlockPos, arg1: number): number;
        func_226658_a_(arg0: Internal.LightType_, arg1: BlockPos): number;
        func_226660_f_(arg0: BlockPos): boolean;
        func_225524_e_(): Internal.WorldLightManager;
        func_230487_a_(arg0: Internal.Direction_, arg1: boolean): number;
        func_225525_a_(arg0: BlockPos, arg1: Internal.ColorResolver_): number;
    }
    type IBlockDisplayReader_ = IBlockDisplayReader;
    class CrusherRecipeJS extends Internal.IERecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CrusherRecipeJS_ = CrusherRecipeJS;
    interface Float2FloatFunction extends it.unimi.dsi.fastutil.Function<number, number>, Internal.DoubleUnaryOperator {
        defaultReturnValue(): number;
        defaultReturnValue(arg0: number): void;
        applyAsDouble(arg0: number): number;
        containsKey(arg0: any): boolean;
        containsKey(arg0: number): boolean;
        get(arg0: number): number;
        get(arg0: any): number;
        get(arg0: any): any;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: number): number;
        put(arg0: number, arg1: number): number;
        remove(arg0: any): number;
        remove(arg0: any): any;
        remove(arg0: number): number;
        (arg0: number): number;
    }
    type Float2FloatFunction_ = ((arg0: number)=>number) | Float2FloatFunction;
    interface SequencedCollection <E> extends Internal.Collection<E> {
        addLast(arg0: E): void;
        getFirst(): E;
        removeFirst(): E;
        removeLast(): E;
        getLast(): E;
        reversed(): Internal.SequencedCollection<E>;
        addFirst(arg0: E): void;
        (): Internal.SequencedCollection<E>;
    }
    type SequencedCollection_<E> = (()=>Internal.SequencedCollection<E>) | SequencedCollection<E>;
    class PlayerSwimEvent extends Internal.PlayerEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity);
    }
    type PlayerSwimEvent_ = PlayerSwimEvent;
    class TickPriority extends Internal.Enum<Internal.TickPriority> {
        static func_205397_a(arg0: number): Internal.TickPriority;
        static valueOf(arg0: string): Internal.TickPriority;
        static values(): Internal.TickPriority[];
        func_205398_a(): number;
        static readonly EXTREMELY_LOW: Internal.TickPriority;
        static readonly VERY_HIGH: Internal.TickPriority;
        static readonly HIGH: Internal.TickPriority;
        static readonly LOW: Internal.TickPriority;
        static readonly VERY_LOW: Internal.TickPriority;
        static readonly EXTREMELY_HIGH: Internal.TickPriority;
        static readonly NORMAL: Internal.TickPriority;
    }
    type TickPriority_ = "extremely_high" | "very_high" | "high" | "normal" | "low" | "very_low" | "extremely_low" | TickPriority;
    interface LongUnaryOperator {
        applyAsLong(arg0: number): number;
        compose(arg0: Internal.LongUnaryOperator_): Internal.LongUnaryOperator;
        andThen(arg0: Internal.LongUnaryOperator_): Internal.LongUnaryOperator;
        (arg0: number): number;
    }
    type LongUnaryOperator_ = ((arg0: number)=>number) | LongUnaryOperator;
    interface IIngredientRenderer <T> {
        getTooltip(arg0: T, arg1: Internal.ITooltipFlag_): Internal.List<Internal.ITextComponent>;
        getFontRenderer(arg0: Internal.Minecraft, arg1: T): Internal.FontRenderer;
        render(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: T): void;
    }
    type IIngredientRenderer_<T> = IIngredientRenderer<T>;
    class SPlayerPositionLookPacket$Flags extends Internal.Enum<Internal.SPlayerPositionLookPacket$Flags> {
        static valueOf(arg0: string): Internal.SPlayerPositionLookPacket$Flags;
        static values(): Internal.SPlayerPositionLookPacket$Flags[];
        static func_187040_a(arg0: Internal.Set<Internal.SPlayerPositionLookPacket$Flags>): number;
        static func_187044_a(arg0: number): Internal.Set<Internal.SPlayerPositionLookPacket$Flags>;
        static readonly Y_ROT: Internal.SPlayerPositionLookPacket$Flags;
        static readonly X_ROT: Internal.SPlayerPositionLookPacket$Flags;
        static readonly X: Internal.SPlayerPositionLookPacket$Flags;
        static readonly Y: Internal.SPlayerPositionLookPacket$Flags;
        static readonly Z: Internal.SPlayerPositionLookPacket$Flags;
    }
    type SPlayerPositionLookPacket$Flags_ = "x" | "y" | "z" | "y_rot" | "x_rot" | SPlayerPositionLookPacket$Flags;
    class CUpdateRecipeBookStatusPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_244318_c(): boolean;
        func_211402_a(): boolean;
        func_244317_b(): Internal.RecipeBookCategory;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_244319_d(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.RecipeBookCategory, arg1: boolean, arg2: boolean);
    }
    type CUpdateRecipeBookStatusPacket_ = CUpdateRecipeBookStatusPacket;
    class SCommandListPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_197693_a(): Internal.RootCommandNode<Internal.ISuggestionProvider>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.RootCommandNode<Internal.ISuggestionProvider>);
    }
    type SCommandListPacket_ = SCommandListPacket;
    interface SegmentAllocator {
        allocate(arg0: Internal.ValueLayout$OfFloat, arg1: number): Internal.MemorySegment;
        allocate(arg0: Internal.MemoryLayout): Internal.MemorySegment;
        allocate(arg0: Internal.ValueLayout$OfDouble, arg1: number): Internal.MemorySegment;
        allocate(arg0: Internal.AddressLayout, arg1: Internal.MemorySegment): Internal.MemorySegment;
        allocate(arg0: number, arg1: number): Internal.MemorySegment;
        allocate(arg0: number): Internal.MemorySegment;
        allocate(arg0: Internal.ValueLayout$OfLong, arg1: number): Internal.MemorySegment;
        allocate(arg0: Internal.ValueLayout$OfByte, arg1: number): Internal.MemorySegment;
        allocate(arg0: Internal.ValueLayout$OfChar, arg1: string): Internal.MemorySegment;
        allocate(arg0: Internal.ValueLayout$OfShort, arg1: number): Internal.MemorySegment;
        allocate(arg0: Internal.ValueLayout$OfInt, arg1: number): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfShort, ...arg1: number[]): Internal.MemorySegment;
        allocateArray(arg0: Internal.MemoryLayout, arg1: number): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfByte, ...arg1: number[]): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfChar, ...arg1: string[]): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfFloat, ...arg1: number[]): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfLong, ...arg1: number[]): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfDouble, ...arg1: number[]): Internal.MemorySegment;
        allocateArray(arg0: Internal.ValueLayout$OfInt, ...arg1: number[]): Internal.MemorySegment;
        allocateUtf8String(arg0: string): Internal.MemorySegment;
        (arg0: number, arg1: number): Internal.MemorySegment;
    }
    type SegmentAllocator_ = ((arg0: number, arg1: number)=>Internal.MemorySegment) | SegmentAllocator;
    abstract class AbstractRenderableTexture extends Document.Object {
        bindTexture(): void;
        getKey(): ResourceLocation;
        getVWidth(): number;
        getUVOffset(): Internal.Tuple<number, number>;
        getUWidth(): number;
        asState(): Internal.RenderState$TextureState;
        get uWidth(): number;
        get vWidth(): number;
        get uVOffset(): Internal.Tuple<number, number>;
        get key(): ResourceLocation;
    }
    type AbstractRenderableTexture_ = AbstractRenderableTexture;
    class AbstractPerk extends Document.Object implements Internal.ModifierSource {
        setName<T_>(arg0: string): T_;
        clearCaches(arg0: Internal.LogicalSide_): void;
        getName(): Internal.IFormattableTextComponent;
        serializePerk(): Internal.JsonObject;
        isEqual(arg0: Internal.ModifierSource): boolean;
        getOffset(): Internal.Point2D$Float;
        serializeData(arg0: Internal.JsonObject): void;
        handleMouseClick(arg0: Internal.ScreenJournalPerkTree, arg1: number, arg2: number): boolean;
        onRemovePerkServer(arg0: Internal.PlayerEntity, arg1: Internal.PerkAllocationType_, arg2: Internal.PlayerProgress, arg3: Internal.CompoundNBT_): void;
        getDescription(): Internal.Collection<Internal.IFormattableTextComponent>;
        onUnlockPerkServer(arg0: Internal.PlayerEntity, arg1: Internal.PerkAllocationType_, arg2: Internal.PlayerProgress, arg3: Internal.CompoundNBT_): void;
        deserializeData(arg0: Internal.JsonObject): void;
        canApplySource(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): boolean;
        getPerkData(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): Internal.CompoundNBT;
        setCategory<T_>(arg0: Internal.AbstractPerk$PerkCategory): T_;
        getLocalizedTooltip(): Internal.Collection<Internal.IFormattableTextComponent>;
        clearClientTextCaches(): void;
        onApply(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): void;
        mayUnlockPerk(arg0: Internal.PlayerProgress, arg1: Internal.PlayerEntity): boolean;
        getPoint(): Internal.PerkTreePoint<Internal.AbstractPerk>;
        setHiddenUnlessAllocated<T_>(arg0: boolean): T_;
        getPerkStatus(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): Internal.AllocationStatus;
        getProviderName(): ResourceLocation;
        getCategory(): Internal.AbstractPerk$PerkCategory;
        getRegistryName(): ResourceLocation;
        isVisible(arg0: Internal.PlayerProgress, arg1: Internal.PlayerEntity): boolean;
        addLocalizedTooltip(arg0: Internal.Collection<Internal.IFormattableTextComponent>): boolean;
        getSource(): Internal.Collection<Internal.IFormattableTextComponent>;
        onRemove(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): void;
        setCustomPerkType(arg0: ResourceLocation_): void;
        getCustomPerkType(): ResourceLocation;
        static readonly CATEGORY_ROOT: Internal.AbstractPerk$PerkCategory;
        static readonly CATEGORY_KEY: Internal.AbstractPerk$PerkCategory;
        static readonly CATEGORY_FOCUS: Internal.AbstractPerk$PerkCategory;
        static readonly CATEGORY_MAJOR: Internal.AbstractPerk$PerkCategory;
        static readonly CATEGORY_BASE: Internal.AbstractPerk$PerkCategory;
        static readonly CATEGORY_EPIPHANY: Internal.AbstractPerk$PerkCategory;
        get customPerkType(): ResourceLocation;
        get offset(): Internal.Point2D$Float;
        get localizedTooltip(): Internal.Collection<Internal.IFormattableTextComponent>;
        get name(): Internal.IFormattableTextComponent;
        get description(): Internal.Collection<Internal.IFormattableTextComponent>;
        get source(): Internal.Collection<Internal.IFormattableTextComponent>;
        get category(): Internal.AbstractPerk$PerkCategory;
        get registryName(): ResourceLocation;
        get point(): Internal.PerkTreePoint<Internal.AbstractPerk>;
        get providerName(): ResourceLocation;
        set customPerkType(arg0: ResourceLocation_);
        set hiddenUnlessAllocated(arg0: boolean);
        set category(arg0: Internal.AbstractPerk$PerkCategory);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: number, arg2: number);
    }
    type AbstractPerk_ = AbstractPerk;
    interface Spliterator$OfDouble extends Internal.Spliterator$OfPrimitive<number, Internal.DoubleConsumer, Internal.Spliterator$OfDouble> {
        trySplit(): Internal.Spliterator$OfPrimitive<any, any, any>;
        trySplit(): Internal.Spliterator<any>;
        trySplit(): Internal.Spliterator$OfDouble;
        tryAdvance(arg0: any): boolean;
        tryAdvance(arg0: Internal.Consumer_<number>): boolean;
        tryAdvance(arg0: Internal.DoubleConsumer_): boolean;
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: Internal.DoubleConsumer_): void;
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
    }
    type Spliterator$OfDouble_ = Spliterator$OfDouble;
    interface IWorldGenerationBaseReader {
        func_217375_a(arg0: BlockPos, arg1: Internal.Predicate_<Internal.BlockState_>): boolean;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
    }
    type IWorldGenerationBaseReader_ = IWorldGenerationBaseReader;
    class FMLServerStartedEvent extends Internal.ServerLifecycleEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MinecraftServer);
        constructor();
    }
    type FMLServerStartedEvent_ = FMLServerStartedEvent;
    interface LongSupplier {
        getAsLong(): number;
        (): number;
    }
    type LongSupplier_ = (()=>number) | LongSupplier;
    class CookingRecipeSerializer <T> extends Internal.ForgeRegistryEntry<Internal.IRecipeSerializer<any>> implements Internal.IRecipeSerializer<T> {
        func_199425_a_(arg0: ResourceLocation_, arg1: Internal.JsonObject): Internal.IRecipe<any>;
        func_199425_a_(arg0: ResourceLocation_, arg1: Internal.JsonObject): T;
        func_199426_a_(arg0: ResourceLocation_, arg1: Internal.PacketBuffer): Internal.IRecipe<any>;
        func_199426_a_(arg0: ResourceLocation_, arg1: Internal.PacketBuffer): T;
        func_199427_a_(arg0: Internal.PacketBuffer, arg1: Internal.IRecipe<any>): void;
        func_199427_a_(arg0: Internal.PacketBuffer, arg1: T): void;
        setRegistryName(arg0: ResourceLocation_): any;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: number);
    }
    type CookingRecipeSerializer_<T> = CookingRecipeSerializer<T>;
    interface Function8 <T1, T2, T3, T4, T5, T6, T7, T8, R> {
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function<T8, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function3<T6, T7, T8, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.BiFunction<T7, T8, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function5<T4, T5, T6, T7, T8, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function4<T5, T6, T7, T8, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function6<T3, T4, T5, T6, T7, T8, R>>;
        curry(): Internal.Function<T1, Internal.Function7<T2, T3, T4, T5, T6, T7, T8, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8): R;
    }
    type Function8_<T1, T2, T3, T4, T5, T6, T7, T8, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8)=>R) | Function8<T1, T2, T3, T4, T5, T6, T7, T8, R>;
    class TextureAtlasSprite extends Document.Object implements Internal.AutoCloseable, Internal.IForgeTextureAtlasSprite, Internal.SpriteExtended {
        func_195668_m(): ResourceLocation;
        getDependencies(): Internal.Collection<ResourceLocation>;
        func_195663_q(): void;
        func_94211_a(): number;
        func_94219_l(): void;
        func_229241_m_(): Internal.AtlasTexture;
        hasCustomLoader(arg0: Internal.IResourceManager, arg1: ResourceLocation_): boolean;
        func_110970_k(): number;
        func_94209_e(): number;
        getPixelRGBA(arg0: number, arg1: number, arg2: number): number;
        func_94206_g(): number;
        load(arg0: Internal.IResourceManager, arg1: ResourceLocation_, arg2: Internal.Function_<ResourceLocation_, Internal.TextureAtlasSprite_>): boolean;
        func_229242_p_(): number;
        func_195662_a(arg0: number, arg1: number, arg2: number): boolean;
        func_229230_a_(arg0: Internal.IVertexBuilder): Internal.IVertexBuilder;
        func_94214_a(arg0: number): number;
        markActive(): void;
        func_94212_f(): number;
        func_94210_h(): number;
        func_94216_b(): number;
        close(): void;
        func_130098_m(): boolean;
        func_94207_b(arg0: number): number;
        field_110980_m: number;
        readonly field_110975_c: number;
        readonly field_110974_d: number;
        readonly field_195670_c: Internal.NativeImage[];
        field_110978_o: number;
        field_110979_l: number;
        field_110977_n: number;
        readonly field_229226_c_: Internal.TextureAtlasSprite$Info;
        get dependencies(): Internal.Collection<ResourceLocation>;
    }
    type TextureAtlasSprite_ = TextureAtlasSprite;
    interface ErrorReporter {
        runtimeError(arg0: string, arg1: string, arg2: number, arg3: string, arg4: number): Internal.EvaluatorException;
        warning(arg0: string, arg1: string, arg2: number, arg3: string, arg4: number): void;
        error(arg0: string, arg1: string, arg2: number, arg3: string, arg4: number): void;
    }
    type ErrorReporter_ = ErrorReporter;
    class GuiScreenEvent$KeyboardKeyPressedEvent$Pre extends Internal.GuiScreenEvent$KeyboardKeyPressedEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number);
    }
    type GuiScreenEvent$KeyboardKeyPressedEvent$Pre_ = GuiScreenEvent$KeyboardKeyPressedEvent$Pre;
    class PointOfInterestDebugRenderer$POIInfo extends Document.Object {
        field_217756_b: string;
        field_217757_c: number;
        readonly field_217755_a: BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: BlockPos, arg1: string, arg2: number);
    }
    type PointOfInterestDebugRenderer$POIInfo_ = PointOfInterestDebugRenderer$POIInfo;
    abstract class AbstractHorseEntity extends Internal.AnimalEntity implements Internal.IInventoryChangedListener, Internal.IJumpingMount, Internal.IEquipable, Internal.HorseEntityAccessor, Internal.AccessorAbstractHorseEntity {
        func_184779_b(arg0: Internal.UUID): void;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_110215_cj(): number;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_110205_ce(): boolean;
        func_110209_cd(): boolean;
        func_230266_a_(arg0: Internal.SoundCategory_): void;
        func_184775_b(arg0: number): void;
        func_110201_q(arg0: number): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_110199_f(arg0: Internal.PlayerEntity): void;
        func_110246_bZ(): boolean;
        func_241395_b_(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack): Internal.ActionResultType;
        foodEatenKJS(is: Internal.ItemStack): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_110234_j(arg0: boolean): void;
        func_110255_k(arg0: boolean): void;
        func_184780_dh(): Internal.UUID;
        func_110226_cD(): void;
        canRiderInteract(): boolean;
        static getFoodItems_$md$e571c7$1(): Internal.Ingredient;
        func_230277_fr_(): boolean;
        func_110238_s(arg0: number): void;
        getHorseChest(): Internal.Inventory;
        func_110219_q(arg0: boolean): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        shouldRiderSit(): boolean;
        func_110248_bS(): boolean;
        func_110263_g(arg0: Internal.PlayerEntity): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_110198_t(arg0: number): number;
        func_230264_L__(): boolean;
        func_110242_l(arg0: boolean): void;
        func_184776_b(): boolean;
        func_110223_p(arg0: number): number;
        func_110227_p(arg0: boolean): void;
        func_110252_cg(): number;
        func_110206_u(arg0: number): void;
        func_190684_dE(): boolean;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        func_190676_dC(): number;
        func_230276_fq_(): boolean;
        func_76316_a(arg0: Internal.IInventory): void;
        func_190682_f(arg0: Internal.ItemStack): boolean;
        func_184777_r_(): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        static setFoodItems_$md$e571c7$0(arg0: Internal.Ingredient): void;
        func_110204_cc(): boolean;
        getEntity(): Internal.Entity;
        static func_234237_fg_(): Internal.AttributeModifierMap$MutableAttribute;
        asKJS(): any;
        func_110258_o(arg0: number): number;
        func_110257_ck(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_190687_dF(): void;
        field_110278_bp: number;
        field_110279_bq: number;
        field_110296_bG: Internal.Inventory;
        get foodItems_$md$e571c7$1(): Internal.Ingredient;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get horseChest(): Internal.Inventory;
        get entity(): Internal.Entity;
        set foodItems_$md$e571c7$0(arg0: Internal.Ingredient);
    }
    type AbstractHorseEntity_ = AbstractHorseEntity;
    class BlockClusterFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236587_a_: Internal.Codec<Internal.BlockClusterFeatureConfig>;
        readonly field_227296_i_: number;
        readonly field_227293_f_: number;
        readonly field_227295_h_: number;
        readonly field_227294_g_: number;
        readonly field_227291_c_: Internal.Set<Internal.Block>;
        readonly field_227298_k_: boolean;
        readonly field_227292_d_: Internal.Set<Internal.BlockState>;
        readonly field_227297_j_: boolean;
        readonly field_227289_a_: Internal.BlockStateProvider;
        readonly field_227299_l_: boolean;
        readonly field_227290_b_: Internal.BlockPlacer;
    }
    type BlockClusterFeatureConfig_ = BlockClusterFeatureConfig;
    interface GasStackIngredient extends Internal.IChemicalStackIngredient<Internal.Gas, Internal.GasStack> {
        getIngredientInfo(): Internal.ChemicalIngredientInfo<Internal.Gas, Internal.GasStack>;
    }
    type GasStackIngredient_ = GasStackIngredient;
    class SharedSeedRandom extends Internal.Random {
        nextFloat(arg0: number): number;
        nextFloat(arg0: number, arg1: number): number;
        func_202427_a(arg0: number, arg1: number, arg2: number, arg3: number): number;
        func_202426_b(arg0: number, arg1: number, arg2: number): number;
        func_202425_c(arg0: number, arg1: number, arg2: number): number;
        isDeprecated(): boolean;
        nextInt(arg0: number, arg1: number): number;
        nextLong(arg0: number, arg1: number): number;
        nextLong(arg0: number): number;
        nextGaussian(arg0: number, arg1: number): number;
        nextDouble(arg0: number): number;
        nextDouble(arg0: number, arg1: number): number;
        nextExponential(): number;
        static func_205190_a(arg0: number, arg1: number, arg2: number, arg3: number): Internal.Random;
        func_202423_a(arg0: number): void;
        func_202424_a(arg0: number, arg1: number, arg2: number): number;
        func_202422_a(arg0: number, arg1: number): number;
        get deprecated(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type SharedSeedRandom_ = SharedSeedRandom;
    class RenderContext extends Document.Object implements Internal.Cloneable {
        preConcetenateTransform(arg0: Internal.AffineTransform): void;
        getAreaOfInterest(): Internal.Shape;
        concetenateTransform(arg0: Internal.AffineTransform): void;
        setTransform(arg0: Internal.AffineTransform): void;
        setAreaOfInterest(arg0: Internal.Shape): void;
        setRenderingHints(arg0: Internal.RenderingHints): void;
        preConcatenateTransform(arg0: Internal.AffineTransform): void;
        concatenateTransform(arg0: Internal.AffineTransform): void;
        clone(): any;
        getRenderingHints(): Internal.RenderingHints;
        getTransform(): Internal.AffineTransform;
        get transform(): Internal.AffineTransform;
        get areaOfInterest(): Internal.Shape;
        get renderingHints(): Internal.RenderingHints;
        set transform(arg0: Internal.AffineTransform);
        set areaOfInterest(arg0: Internal.Shape);
        set renderingHints(arg0: Internal.RenderingHints);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.AffineTransform, arg1: Internal.Shape);
        constructor(arg0: Internal.AffineTransform, arg1: Internal.RenderingHints);
        constructor(arg0: Internal.AffineTransform);
        constructor(arg0: Internal.AffineTransform, arg1: Internal.Shape, arg2: Internal.RenderingHints);
    }
    type RenderContext_ = RenderContext;
    class TextureQuery extends Document.Object {
        resolve(): Internal.AbstractRenderableTexture;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: string[]);
    }
    type TextureQuery_ = TextureQuery;
    interface Object2ObjectMap <K, V> extends Internal.Object2ObjectFunction<K, V>, Internal.Map<K, V> {
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        object2ObjectEntrySet(): Internal.ObjectSet<Internal.Object2ObjectMap$Entry<K, V>>;
        size(): number;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<K, V>>;
        entrySet(): Internal.Set<any>;
        containsKey(arg0: any): boolean;
        values(): Internal.ObjectCollection<V>;
        values(): Internal.Collection<any>;
        clear(): void;
        keySet(): Internal.ObjectSet<K>;
        keySet(): Internal.Set<any>;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
    }
    type Object2ObjectMap_<K, V> = Object2ObjectMap<K, V>;
    class TwoLayerFeature extends Internal.AbstractFeatureSizeType {
        static readonly field_236728_c_: Internal.Codec<Internal.TwoLayerFeature>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
        constructor(arg0: number, arg1: number, arg2: number, arg3: Internal.OptionalInt);
    }
    type TwoLayerFeature_ = TwoLayerFeature;
    abstract class WaterMobEntity extends Internal.CreatureEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type WaterMobEntity_ = WaterMobEntity;
    class LivingAttackEvent extends Internal.LivingEvent {
        getSource(): Internal.DamageSource;
        getAmount(): number;
        get amount(): number;
        get source(): Internal.DamageSource;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.DamageSource, arg2: number);
    }
    type LivingAttackEvent_ = LivingAttackEvent;
    class TagEventJS <T> extends Internal.EventJS {
        add(tag: ResourceLocation_, ids: any): Internal.TagEventJS$TagWrapper<T>;
        removeAll(tag: ResourceLocation_): Internal.TagEventJS$TagWrapper<T>;
        post(event: string): void;
        getType(): string;
        removeAllTagsFrom(ids: any): void;
        get(id: ResourceLocation_): Internal.TagEventJS$TagWrapper<T>;
        setGlobalPriorityList(o: any): void;
        remove(tag: ResourceLocation_, ids: any): Internal.TagEventJS$TagWrapper<T>;
        get type(): string;
        set globalPriorityList(o: any);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(t: string, m: Internal.Map<ResourceLocation, any>, r: Internal.Function<ResourceLocation, Internal.Optional<T>>);
    }
    type TagEventJS_<T> = TagEventJS<T>;
    class Quaternion extends Document.Object {
        func_227067_f_(): void;
        func_227068_g_(): Internal.Quaternion;
        func_195891_b(): number;
        func_195894_d(): number;
        func_195892_e(): void;
        func_195893_c(): number;
        func_195889_a(): number;
        func_227066_a_(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_227065_a_(arg0: number): void;
        func_195890_a(arg0: Internal.Quaternion): void;
        static readonly field_227060_a_: Internal.Quaternion;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Quaternion);
        constructor(arg0: number, arg1: number, arg2: number, arg3: boolean);
        constructor(arg0: Internal.Vector3f, arg1: number, arg2: boolean);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type Quaternion_ = Quaternion;
    class PigmentStack extends Internal.ChemicalStack<Internal.Pigment> {
        static readFromNBT(arg0: Internal.CompoundNBT_): Internal.PigmentStack;
        static readFromPacket(arg0: Internal.PacketBuffer): Internal.PigmentStack;
        copy(): Internal.PigmentStack;
        copy(): Internal.ChemicalStack<any>;
        static readonly EMPTY: Internal.PigmentStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IPigmentProvider, arg1: number);
        constructor(arg0: Internal.PigmentStack, arg1: number);
    }
    type PigmentStack_ = PigmentStack;
    class CokeOvenRecipeJS extends Internal.IERecipeJS {
        creosote(c: number): Internal.CokeOvenRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CokeOvenRecipeJS_ = CokeOvenRecipeJS;
    class EffectInstance extends Document.Object implements Internal.Comparable<Internal.EffectInstance>, Internal.IForgeEffectInstance {
        renderInventoryEffect(arg0: Internal.DisplayEffectsScreen<any>, arg1: Internal.MatrixStack, arg2: number, arg3: number, arg4: number): void;
        func_76455_a(arg0: Internal.LivingEntity, arg1: Internal.Runnable_): boolean;
        func_76453_d(): string;
        shouldRenderInvText(): boolean;
        func_76457_b(arg0: Internal.LivingEntity): void;
        func_76454_e(): number;
        compareTo(arg0: Internal.EffectInstance): number;
        compareTo(arg0: any): number;
        func_230117_a_(arg0: Internal.EffectInstance): void;
        func_205348_f(): boolean;
        getEffectInstance(): Internal.EffectInstance;
        static func_82722_b(arg0: Internal.CompoundNBT_): Internal.EffectInstance;
        func_82720_e(): boolean;
        shouldRender(): boolean;
        func_100011_g(): boolean;
        func_100012_b(arg0: boolean): void;
        shouldRenderHUD(): boolean;
        func_188418_e(): boolean;
        addCurativeItem(arg0: Internal.ItemStack): void;
        func_188419_a(): Internal.Effect;
        writeCurativeItems(arg0: Internal.CompoundNBT_): void;
        func_76458_c(): number;
        func_76459_b(): number;
        setCurativeItems(arg0: Internal.List<Internal.ItemStack>): void;
        func_199308_a(arg0: Internal.EffectInstance): boolean;
        isCurativeItem(arg0: Internal.ItemStack): boolean;
        func_82719_a(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        renderHUDEffect(arg0: Internal.AbstractGui, arg1: Internal.MatrixStack, arg2: number, arg3: number, arg4: number, arg5: number): void;
        field_230115_j_: Internal.EffectInstance;
        field_76460_b: number;
        field_76461_c: number;
        get curativeItems(): Internal.List<Internal.ItemStack>;
        get effectInstance(): Internal.EffectInstance;
        set curativeItems(arg0: Internal.List<Internal.ItemStack>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Effect, arg1: number, arg2: number, arg3: boolean, arg4: boolean);
        constructor(arg0: Internal.Effect, arg1: number, arg2: number, arg3: boolean, arg4: boolean, arg5: boolean);
        constructor(arg0: Internal.Effect, arg1: number, arg2: number, arg3: boolean, arg4: boolean, arg5: boolean, arg6: Internal.EffectInstance);
        constructor(arg0: Internal.EffectInstance);
        constructor(arg0: Internal.Effect);
        constructor(arg0: Internal.Effect, arg1: number);
        constructor(arg0: Internal.Effect, arg1: number, arg2: number);
    }
    type EffectInstance_ = EffectInstance;
    abstract class QuestObject extends Internal.QuestObjectBase {
        getChildren(): Internal.Collection<Internal.QuestObject>;
        getProgressColor(arg0: Internal.TeamData, arg1: boolean): Internal.Color4I;
        getProgressColor(arg0: Internal.TeamData): Internal.Color4I;
        isCompletedRaw(arg0: Internal.TeamData): boolean;
        static getRelativeProgressFromChildren(arg0: number, arg1: number): number;
        getRelativeProgressFromChildren(arg0: Internal.TeamData): number;
        onStarted(arg0: Internal.QuestProgressEventData<any>): void;
        onCompleted(arg0: Internal.QuestProgressEventData<any>): void;
        hasUnclaimedRewardsRaw(arg0: Internal.TeamData, arg1: Internal.UUID): boolean;
        isVisible(arg0: Internal.TeamData): boolean;
        countsTowardParentCompletion(): boolean;
        cacheProgress(): boolean;
        disableToast: boolean;
        get children(): Internal.Collection<Internal.QuestObject>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type QuestObject_ = QuestObject;
    class Properties extends Internal.Hashtable<any, any> {
        getOrDefault(arg0: any, arg1: any): any;
        getProperty(arg0: string): string;
        getProperty(arg0: string, arg1: string): string;
        loadFromXML(arg0: Internal.InputStream): void;
        entrySet(): Internal.Set<Internal.Map$Entry<any, any>>;
        keys(): Internal.Enumeration<any>;
        stringPropertyNames(): Internal.Set<string>;
        computeIfAbsent(arg0: any, arg1: Internal.Function_<any, any>): any;
        values(): Internal.Collection<any>;
        save(arg0: Internal.OutputStream, arg1: string): void;
        replace(arg0: any, arg1: any): any;
        store(arg0: Internal.OutputStream, arg1: string): void;
        store(arg0: Internal.Writer, arg1: string): void;
        list(arg0: Internal.PrintStream): void;
        list(arg0: Internal.PrintWriter): void;
        storeToXML(arg0: Internal.OutputStream, arg1: string, arg2: string): void;
        storeToXML(arg0: Internal.OutputStream, arg1: string, arg2: Internal.Charset): void;
        storeToXML(arg0: Internal.OutputStream, arg1: string): void;
        put(arg0: any, arg1: any): any;
        remove(arg0: any): any;
        compute(arg0: any, arg1: Internal.BiFunction_<any, any, any>): any;
        computeIfPresent(arg0: any, arg1: Internal.BiFunction_<any, any, any>): any;
        load(arg0: Internal.Reader): void;
        load(arg0: Internal.InputStream): void;
        propertyNames(): Internal.Enumeration<any>;
        setProperty(arg0: string, arg1: string): any;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any, any, any>): any;
        elements(): Internal.Enumeration<any>;
        get(arg0: any): any;
        keySet(): Internal.Set<any>;
        putIfAbsent(arg0: any, arg1: any): any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Properties);
        constructor(arg0: number);
        constructor();
    }
    type Properties_ = Properties;
    class VertexData extends Document.Object {
        readonly format: Internal.GlVertexFormat<any>;
        readonly buffer: Internal.ByteBuffer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(buffer: Internal.ByteBuffer, format: Internal.GlVertexFormat<any>);
    }
    type VertexData_ = VertexData;
    abstract class RayTraceResult extends Document.Object {
        func_216346_c(): Internal.RayTraceResult$Type;
        func_237486_a_(arg0: Internal.Entity): number;
        func_216347_e(): Vec3;
        field_72307_f: Vec3;
        subHit: number;
        hitInfo: any;
    }
    type RayTraceResult_ = RayTraceResult;
    class KnownWaystonesEvent extends net.minecraftforge.eventbus.api.Event {
        getWaystones(): Internal.List<Internal.IWaystone>;
        get waystones(): Internal.List<Internal.IWaystone>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.List<Internal.IWaystone>);
    }
    type KnownWaystonesEvent_ = KnownWaystonesEvent;
    class AssetJsonGenerator extends Internal.JsonGenerator {
        multipartState(id: ResourceLocation_, consumer: Internal.Consumer_<Internal.MultipartBlockStateGenerator_>): void;
        blockState(id: ResourceLocation_, consumer: Internal.Consumer_<Internal.VariantBlockStateGenerator_>): void;
        blockModel(id: ResourceLocation_, consumer: Internal.Consumer_<Internal.ModelGenerator_>): void;
        itemModel(id: ResourceLocation_, consumer: Internal.Consumer_<Internal.ModelGenerator_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(m: Internal.Map<ResourceLocation, Internal.JsonElement>);
    }
    type AssetJsonGenerator_ = AssetJsonGenerator;
    class CClientStatusPacket$State extends Internal.Enum<Internal.CClientStatusPacket$State> {
        static valueOf(arg0: string): Internal.CClientStatusPacket$State;
        static values(): Internal.CClientStatusPacket$State[];
        static readonly REQUEST_STATS: Internal.CClientStatusPacket$State;
        static readonly PERFORM_RESPAWN: Internal.CClientStatusPacket$State;
    }
    type CClientStatusPacket$State_ = "perform_respawn" | "request_stats" | CClientStatusPacket$State;
    class RecordCodecBuilder <O, F> extends Document.Object implements Internal.App<Internal.RecordCodecBuilder$Mu<O>, F> {
        static instance<O_>(): Internal.RecordCodecBuilder$Instance<O_>;
        static mapCodec<O_>(arg0: Internal.Function_<Internal.RecordCodecBuilder$Instance_<O_>, Internal.App_<Internal.RecordCodecBuilder$Mu_<O_>, O_>>): Internal.MapCodec<O_>;
        static build<O_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O_>, O_>): Internal.MapCodec<O_>;
        static stable<O_, F_>(arg0: F_): Internal.RecordCodecBuilder<O_, F_>;
        static unbox<O_, F_>(arg0: Internal.App<Internal.RecordCodecBuilder$Mu<O_>, F_>): Internal.RecordCodecBuilder<O_, F_>;
        static deprecated<O_, F_>(arg0: F_, arg1: number): Internal.RecordCodecBuilder<O_, F_>;
        static of<O_, F_>(arg0: Internal.Function_<O_, F_>, arg1: string, arg2: Internal.Codec<F_>): Internal.RecordCodecBuilder<O_, F_>;
        static of<O_, F_>(arg0: Internal.Function_<O_, F_>, arg1: Internal.MapCodec<F_>): Internal.RecordCodecBuilder<O_, F_>;
        static create<O_>(arg0: Internal.Function_<Internal.RecordCodecBuilder$Instance_<O_>, Internal.App_<Internal.RecordCodecBuilder$Mu_<O_>, O_>>): Internal.Codec<O_>;
        dependent<E_>(arg0: Internal.Function_<O, E_>, arg1: Internal.MapEncoder<E_>, arg2: Internal.Function_<Internal.RecordCodecBuilder$Mu_<O>, Internal.MapDecoder_<E_>>): Internal.RecordCodecBuilder<O, E_>;
        static point<O_, F_>(arg0: F_): Internal.RecordCodecBuilder<O_, F_>;
        static point<O_, F_>(arg0: F_, arg1: Internal.Lifecycle): Internal.RecordCodecBuilder<O_, F_>;
    }
    type RecordCodecBuilder_<O, F> = RecordCodecBuilder<O, F>;
    class WeightedReward extends Document.Object implements Internal.Comparable<Internal.WeightedReward> {
        compareTo(arg0: Internal.WeightedReward): number;
        compareTo(arg0: any): number;
        static chanceString(arg0: number, arg1: number, arg2: boolean): string;
        static chanceString(arg0: number, arg1: number): string;
        readonly reward: Internal.Reward;
        weight: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Reward, arg1: number);
    }
    type WeightedReward_ = WeightedReward;
    class ModuleDescriptor$Provides extends Document.Object implements Internal.Comparable<Internal.ModuleDescriptor$Provides> {
        service(): string;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.ModuleDescriptor$Provides): number;
        providers(): Internal.List<string>;
    }
    type ModuleDescriptor$Provides_ = ModuleDescriptor$Provides;
    class STitlePacket$Type extends Internal.Enum<Internal.STitlePacket$Type> {
        static valueOf(arg0: string): Internal.STitlePacket$Type;
        static values(): Internal.STitlePacket$Type[];
        static readonly ACTIONBAR: Internal.STitlePacket$Type;
        static readonly TIMES: Internal.STitlePacket$Type;
        static readonly TITLE: Internal.STitlePacket$Type;
        static readonly RESET: Internal.STitlePacket$Type;
        static readonly SUBTITLE: Internal.STitlePacket$Type;
        static readonly CLEAR: Internal.STitlePacket$Type;
    }
    type STitlePacket$Type_ = "title" | "subtitle" | "actionbar" | "times" | "clear" | "reset" | STitlePacket$Type;
    class SuperRenderTypeBuffer extends Document.Object implements Internal.IRenderTypeBuffer {
        getEarlyBuffer(arg0: Internal.RenderType): Internal.IVertexBuilder;
        getLateBuffer(arg0: Internal.RenderType): Internal.IVertexBuilder;
        getBuffer(arg0: Internal.RenderType): Internal.IVertexBuilder;
        draw(arg0: Internal.RenderType): void;
        draw(): void;
        static getInstance(): Internal.SuperRenderTypeBuffer;
        get instance(): Internal.SuperRenderTypeBuffer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SuperRenderTypeBuffer_ = SuperRenderTypeBuffer;
    class PonderScene$SceneTransform extends Document.Object {
        screenToScene(arg0: number, arg1: number, arg2: number, arg3: number): Vec3;
        updateScreenParams(arg0: number, arg1: number, arg2: number): void;
        apply(arg0: Internal.MatrixStack, arg1: number, arg2: boolean): Internal.MatrixStack;
        apply(arg0: Internal.MatrixStack): Internal.MatrixStack;
        updateSceneRVE(arg0: number): void;
        sceneToScreen(arg0: Vec3, arg1: number): Internal.Vector2f;
        tick(): void;
        xRotation: Internal.LerpedFloat;
        yRotation: Internal.LerpedFloat;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PonderScene);
    }
    type PonderScene$SceneTransform_ = PonderScene$SceneTransform;
    abstract class PlayerAffectionFlags$AffectionFlag extends Document.Object implements Internal.TimeoutList$TimeoutDelegate<Internal.UUID> {
        onTimeout(arg0: Internal.UUID): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type PlayerAffectionFlags$AffectionFlag_ = PlayerAffectionFlags$AffectionFlag;
    interface IntList extends Internal.List<number>, Internal.Comparable<Internal.List<number>>, Internal.IntCollection {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        add(arg0: number, arg1: any): void;
        add(arg0: number): boolean;
        add(arg0: number, arg1: number): void;
        add(arg0: number, arg1: number): void;
        subList(arg0: number, arg1: number): Internal.IntList;
        subList(arg0: number, arg1: number): Internal.List<any>;
        set(arg0: number, arg1: any): any;
        set(arg0: number, arg1: number): number;
        set(arg0: number, arg1: number): number;
        removeInt(arg0: number): number;
        removeElements(arg0: number, arg1: number): void;
        remove(arg0: number): number;
        remove(arg0: number): any;
        remove(arg0: any): boolean;
        lastIndexOf(arg0: number): number;
        lastIndexOf(arg0: any): number;
        getInt(arg0: number): number;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.IntIterator;
        iterator(): Internal.IntListIterator;
        size(arg0: number): void;
        addAll(arg0: Internal.IntList): boolean;
        addAll(arg0: number, arg1: Internal.IntCollection): boolean;
        addAll(arg0: number, arg1: Internal.IntList): boolean;
        addElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
        addElements(arg0: number, arg1: number[]): void;
        getElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
        get(arg0: number): number;
        get(arg0: number): any;
        listIterator(arg0: number): Internal.ListIterator<any>;
        listIterator(arg0: number): Internal.IntListIterator;
        listIterator(): Internal.IntListIterator;
        listIterator(): Internal.ListIterator<any>;
        indexOf(arg0: any): number;
        indexOf(arg0: number): number;
    }
    type IntList_ = IntList;
    class BanList extends Internal.UserList<Internal.GameProfile, Internal.ProfileBanEntry> {
        func_152702_a(arg0: Internal.GameProfile): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File);
    }
    type BanList_ = BanList;
    interface DropTargetListener extends Internal.EventListener {
        drop(arg0: Internal.DropTargetDropEvent): void;
        dragEnter(arg0: Internal.DropTargetDragEvent): void;
        dropActionChanged(arg0: Internal.DropTargetDragEvent): void;
        dragOver(arg0: Internal.DropTargetDragEvent): void;
        dragExit(arg0: Internal.DropTargetEvent): void;
    }
    type DropTargetListener_ = DropTargetListener;
    class ChestMinecartEntity extends Internal.ContainerMinecartEntity {
        canBeRidden(): boolean;
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        shouldDoRailFunctions(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        isPoweredCart(): boolean;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_213901_a(arg0: Internal.Item_): number;
        func_213968_a(arg0: number, arg1: Internal.PlayerInventory): Internal.Container;
        hasCooldown(): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        isMultipartEntity(): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        getComparatorLevel(): number;
        getCurrentRailPosition(): BlockPos;
        asKJS(): any;
        getCartItem(): Internal.ItemStack;
        canRiderInteract(): boolean;
        getMinecart(): Internal.AbstractMinecartEntity;
        getSlopeAdjustment(): number;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getMaxCartSpeedOnRail(): number;
        get minecart(): Internal.AbstractMinecartEntity;
        get currentRailPosition(): BlockPos;
        get slopeAdjustment(): number;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get poweredCart(): boolean;
        get comparatorLevel(): number;
        get cartItem(): Internal.ItemStack;
        get maxCartSpeedOnRail(): number;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ChestMinecartEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
    }
    type ChestMinecartEntity_ = ChestMinecartEntity;
    class MagmaCubeEntity extends Internal.SlimeEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        static func_223367_b(arg0: Internal.EntityType_<Internal.MagmaCubeEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        static func_234294_m_(): Internal.AttributeModifierMap$MutableAttribute;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.MagmaCubeEntity>, arg1: Internal.World);
    }
    type MagmaCubeEntity_ = MagmaCubeEntity;
    interface IPackNameDecorator {
        decorate(arg0: Internal.ITextComponent_): Internal.ITextComponent;
        (arg0: Internal.ITextComponent): Internal.ITextComponent;
    }
    type IPackNameDecorator_ = ((arg0: Internal.ITextComponent)=>Internal.ITextComponent) | IPackNameDecorator;
    class FurnaceTileEntity extends Internal.AbstractFurnaceTileEntity {
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_201561_a(arg0: Internal.World, arg1: Internal.ServerPlayerEntity, arg2: Internal.IRecipe<any>): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_145818_k_(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FurnaceTileEntity_ = FurnaceTileEntity;
    class Schema extends Document.Object {
        types(): Internal.Set<string>;
        getParent(): Internal.Schema;
        registerSimple(arg0: Internal.Map_<string, java_.util.function_.Supplier_<Internal.TypeTemplate_>>, arg1: string): void;
        registerBlockEntities(arg0: Internal.Schema): Internal.Map<string, java_.util.function_.Supplier<Internal.TypeTemplate>>;
        resolveTemplate(arg0: string): Internal.TypeTemplate;
        registerType(arg0: boolean, arg1: Internal.DSL$TypeReference_, arg2: java_.util.function_.Supplier_<Internal.TypeTemplate_>): void;
        getTypeRaw(arg0: Internal.DSL$TypeReference_): com.mojang.datafixers.types.Type<any>;
        registerEntities(arg0: Internal.Schema): Internal.Map<string, java_.util.function_.Supplier<Internal.TypeTemplate>>;
        findChoiceType(arg0: Internal.DSL$TypeReference_): Internal.TaggedChoice$TaggedChoiceType<any>;
        getVersionKey(): number;
        getType(arg0: Internal.DSL$TypeReference_): com.mojang.datafixers.types.Type<any>;
        registerTypes(arg0: Internal.Schema, arg1: Internal.Map_<string, java_.util.function_.Supplier_<Internal.TypeTemplate_>>, arg2: Internal.Map_<string, java_.util.function_.Supplier_<Internal.TypeTemplate_>>): void;
        id(arg0: string): Internal.TypeTemplate;
        getChoiceType(arg0: Internal.DSL$TypeReference_, arg1: string): com.mojang.datafixers.types.Type<any>;
        register(arg0: Internal.Map_<string, java_.util.function_.Supplier_<Internal.TypeTemplate_>>, arg1: string, arg2: java_.util.function_.Supplier_<Internal.TypeTemplate_>): void;
        register(arg0: Internal.Map_<string, java_.util.function_.Supplier_<Internal.TypeTemplate_>>, arg1: string, arg2: Internal.Function_<string, Internal.TypeTemplate_>): void;
        get parent(): Internal.Schema;
        get versionKey(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.Schema);
    }
    type Schema_ = Schema;
    class CustomDecorationType <D, M> extends Document.Object {
        getWorldMarkerFromWorld(arg0: Internal.IBlockReader, arg1: BlockPos): M;
        loadMarkerFromNBT(arg0: Internal.CompoundNBT_): M;
        loadDecorationFromBuffer(arg0: Internal.PacketBuffer): D;
        hasMarker(): boolean;
        getId(): ResourceLocation;
        getRegistryId(): string;
        get registryId(): string;
        get id(): ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: java_.util.function_.Supplier<M>, arg2: Internal.BiFunction<Internal.IBlockReader, BlockPos, M>, arg3: Internal.BiFunction<Internal.CustomDecorationType<any, any>, Internal.PacketBuffer, D>);
        constructor(arg0: ResourceLocation, arg1: Internal.BiFunction<Internal.CustomDecorationType<any, any>, Internal.PacketBuffer, D>);
    }
    type CustomDecorationType_<D, M> = CustomDecorationType<D, M>;
    abstract class CharsetEncoder extends Document.Object {
        encode(arg0: Internal.CharBuffer, arg1: Internal.ByteBuffer, arg2: boolean): Internal.CoderResult;
        encode(arg0: Internal.CharBuffer): Internal.ByteBuffer;
        charset(): Internal.Charset;
        onUnmappableCharacter(arg0: Internal.CodingErrorAction): Internal.CharsetEncoder;
        maxBytesPerChar(): number;
        isLegalReplacement(arg0: number[]): boolean;
        unmappableCharacterAction(): Internal.CodingErrorAction;
        malformedInputAction(): Internal.CodingErrorAction;
        flush(arg0: Internal.ByteBuffer): Internal.CoderResult;
        canEncode(arg0: Internal.CharSequence): boolean;
        canEncode(arg0: string): boolean;
        averageBytesPerChar(): number;
        onMalformedInput(arg0: Internal.CodingErrorAction): Internal.CharsetEncoder;
        reset(): Internal.CharsetEncoder;
        replacement(): number[];
        replaceWith(arg0: number[]): Internal.CharsetEncoder;
    }
    type CharsetEncoder_ = CharsetEncoder;
    interface ChannelPipeline extends Internal.ChannelInboundInvoker, Internal.ChannelOutboundInvoker, Internal.Iterable<Internal.Map$Entry<string, Internal.ChannelHandler>> {
        fireChannelWritabilityChanged(): Internal.ChannelPipeline;
        channel(): Internal.Channel;
        replace(arg0: string, arg1: string, arg2: Internal.ChannelHandler): Internal.ChannelHandler;
        replace<T_>(arg0: Internal.Class<T_>, arg1: string, arg2: Internal.ChannelHandler): T_;
        replace(arg0: Internal.ChannelHandler, arg1: string, arg2: Internal.ChannelHandler): Internal.ChannelPipeline;
        fireExceptionCaught(arg0: Internal.Throwable): Internal.ChannelPipeline;
        fireChannelActive(): Internal.ChannelPipeline;
        removeLast(): Internal.ChannelHandler;
        remove<T_>(arg0: Internal.Class<T_>): T_;
        remove(arg0: Internal.ChannelHandler): Internal.ChannelPipeline;
        remove(arg0: string): Internal.ChannelHandler;
        addLast(arg0: Internal.EventExecutorGroup, arg1: string, arg2: Internal.ChannelHandler): Internal.ChannelPipeline;
        addLast(arg0: string, arg1: Internal.ChannelHandler): Internal.ChannelPipeline;
        addLast(...arg0: Internal.ChannelHandler[]): Internal.ChannelPipeline;
        addLast(arg0: Internal.EventExecutorGroup, ...arg1: Internal.ChannelHandler[]): Internal.ChannelPipeline;
        addAfter(arg0: string, arg1: string, arg2: Internal.ChannelHandler): Internal.ChannelPipeline;
        addAfter(arg0: Internal.EventExecutorGroup, arg1: string, arg2: string, arg3: Internal.ChannelHandler): Internal.ChannelPipeline;
        flush(): Internal.ChannelPipeline;
        removeFirst(): Internal.ChannelHandler;
        get<T_>(arg0: Internal.Class<T_>): T_;
        get(arg0: string): Internal.ChannelHandler;
        context(arg0: Internal.ChannelHandler): Internal.ChannelHandlerContext;
        context(arg0: string): Internal.ChannelHandlerContext;
        context(arg0: Internal.Class<Internal.ChannelHandler>): Internal.ChannelHandlerContext;
        firstContext(): Internal.ChannelHandlerContext;
        fireChannelInactive(): Internal.ChannelPipeline;
        fireChannelReadComplete(): Internal.ChannelPipeline;
        last(): Internal.ChannelHandler;
        fireChannelRegistered(): Internal.ChannelPipeline;
        addBefore(arg0: string, arg1: string, arg2: Internal.ChannelHandler): Internal.ChannelPipeline;
        addBefore(arg0: Internal.EventExecutorGroup, arg1: string, arg2: string, arg3: Internal.ChannelHandler): Internal.ChannelPipeline;
        fireChannelRead(arg0: any): Internal.ChannelPipeline;
        names(): Internal.List<string>;
        toMap(): Internal.Map<string, Internal.ChannelHandler>;
        fireUserEventTriggered(arg0: any): Internal.ChannelPipeline;
        lastContext(): Internal.ChannelHandlerContext;
        fireChannelUnregistered(): Internal.ChannelPipeline;
        addFirst(arg0: string, arg1: Internal.ChannelHandler): Internal.ChannelPipeline;
        addFirst(arg0: Internal.EventExecutorGroup, ...arg1: Internal.ChannelHandler[]): Internal.ChannelPipeline;
        addFirst(arg0: Internal.EventExecutorGroup, arg1: string, arg2: Internal.ChannelHandler): Internal.ChannelPipeline;
        addFirst(...arg0: Internal.ChannelHandler[]): Internal.ChannelPipeline;
        first(): Internal.ChannelHandler;
    }
    type ChannelPipeline_ = ChannelPipeline;
    class AccessibleStateSet extends Document.Object {
        add(arg0: Internal.AccessibleState): boolean;
        contains(arg0: Internal.AccessibleState): boolean;
        addAll(arg0: Internal.AccessibleState[]): void;
        toArray(): Internal.AccessibleState[];
        clear(): void;
        remove(arg0: Internal.AccessibleState): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.AccessibleState[]);
    }
    type AccessibleStateSet_ = AccessibleStateSet;
    class FireworksJS extends Document.Object {
        static of(o: any): Internal.FireworksJS;
        createFireworkRocket(w: Internal.World, x: number, y: number, z: number): Internal.FireworkRocketEntity;
        flight: number;
        lifetime: number;
        readonly explosions: Internal.List<Internal.FireworksJS$Explosion>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FireworksJS_ = FireworksJS;
    interface MethodTypeDesc extends Internal.ConstantDesc, Internal.TypeDescriptor$OfMethod<Internal.ClassDesc, Internal.MethodTypeDesc> {
        parameterType(arg0: number): Internal.TypeDescriptor$OfField<any>;
        parameterType(arg0: number): Internal.ClassDesc;
        dropParameterTypes(arg0: number, arg1: number): Internal.TypeDescriptor$OfMethod<any, any>;
        dropParameterTypes(arg0: number, arg1: number): Internal.MethodTypeDesc;
        parameterCount(): number;
        changeReturnType(arg0: Internal.ClassDesc): Internal.MethodTypeDesc;
        changeReturnType(arg0: Internal.TypeDescriptor$OfField<any>): Internal.TypeDescriptor$OfMethod<any, any>;
        descriptorString(): string;
        insertParameterTypes(arg0: number, ...arg1: Internal.ClassDesc[]): Internal.MethodTypeDesc;
        insertParameterTypes(arg0: number, arg1: Internal.TypeDescriptor$OfField[]): Internal.TypeDescriptor$OfMethod<any, any>;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): any;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): Internal.MethodType;
        changeParameterType(arg0: number, arg1: Internal.ClassDesc): Internal.MethodTypeDesc;
        changeParameterType(arg0: number, arg1: Internal.TypeDescriptor$OfField<any>): Internal.TypeDescriptor$OfMethod<any, any>;
        parameterArray(): Internal.TypeDescriptor$OfField[];
        parameterArray(): Internal.ClassDesc[];
        equals(arg0: any): boolean;
        parameterList(): Internal.List<Internal.ClassDesc>;
        displayDescriptor(): string;
        returnType(): Internal.ClassDesc;
        returnType(): Internal.TypeDescriptor$OfField<any>;
    }
    type MethodTypeDesc_ = MethodTypeDesc;
    class Products$P6 <F, T1, T2, T3, T4, T5, T6> extends Document.Object {
        t4(): Internal.App<F, T4>;
        t5(): Internal.App<F, T5>;
        t6(): Internal.App<F, T6>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function6_<T1, T2, T3, T4, T5, T6, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function6<T1, T2, T3, T4, T5, T6, R_>>): Internal.App<F, R_>;
        and<T7_>(arg0: Internal.App<F, T7_>): Internal.Products$P7<F, T1, T2, T3, T4, T5, T6, T7_>;
        and<T7_, T8_>(arg0: Internal.Products$P2<F, T7_, T8_>): Internal.Products$P8<F, T1, T2, T3, T4, T5, T6, T7_, T8_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        t3(): Internal.App<F, T3>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>, arg4: Internal.App<F, T5>, arg5: Internal.App<F, T6>);
    }
    type Products$P6_<F, T1, T2, T3, T4, T5, T6> = Products$P6<F, T1, T2, T3, T4, T5, T6>;
    class FunctionReloader extends Document.Object implements Internal.IFutureReloadListener {
        func_240943_b_(arg0: ResourceLocation_): Internal.ITag<Internal.FunctionObject>;
        func_240931_a_(): Internal.Map<ResourceLocation, Internal.FunctionObject>;
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage_, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        func_225594_i_(): string;
        func_240940_a_(arg0: ResourceLocation_): Internal.Optional<Internal.FunctionObject>;
        func_240942_b_(): Internal.ITagCollection<Internal.FunctionObject>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.CommandDispatcher<Internal.CommandSource>);
    }
    type FunctionReloader_ = FunctionReloader;
    class MovementInput extends Document.Object {
        func_190020_b(): Internal.Vector2f;
        func_225607_a_(arg0: boolean): void;
        func_223135_b(): boolean;
        field_187256_d: boolean;
        field_187257_e: boolean;
        field_78902_a: number;
        field_187255_c: boolean;
        field_228350_h_: boolean;
        field_192832_b: number;
        field_78901_c: boolean;
        field_187258_f: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MovementInput_ = MovementInput;
    interface IProfiler {
        func_219894_a(): void;
        func_230035_c_(arg0: string): void;
        func_230036_c_(arg0: java_.util.function_.Supplier_<string>): void;
        func_76319_b(): void;
        func_194340_a(arg0: java_.util.function_.Supplier_<string>): void;
        func_219897_b(): void;
        func_76320_a(arg0: string): void;
        func_194339_b(arg0: java_.util.function_.Supplier_<string>): void;
        func_219895_b(arg0: string): void;
    }
    type IProfiler_ = IProfiler;
    interface IPlacementConfig {
    }
    type IPlacementConfig_ = IPlacementConfig;
    interface IGuiIngredientGroup <T> {
        init(arg0: number, arg1: boolean, arg2: Internal.IIngredientRenderer<T>, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): void;
        init(arg0: number, arg1: boolean, arg2: number, arg3: number): void;
        set(arg0: number, arg1: T): void;
        set(arg0: number, arg1: Internal.List<T>): void;
        set(arg0: Internal.IIngredients): void;
        getGuiIngredients(): Internal.Map<number, Internal.IGuiIngredient<T>>;
        addTooltipCallback(arg0: Internal.ITooltipCallback_<T>): void;
        setOverrideDisplayFocus(arg0: Internal.IFocus<T>): void;
        setBackground(arg0: number, arg1: Internal.IDrawable): void;
    }
    type IGuiIngredientGroup_<T> = IGuiIngredientGroup<T>;
    class CartographyContainer extends Internal.Container {
        readonly field_216998_c: Internal.IInventory;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IWorldPosCallable);
    }
    type CartographyContainer_ = CartographyContainer;
    class EntityWalkEvent extends net.minecraftforge.eventbus.api.Event {
        static onEntityWalk(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Entity): boolean;
        getWorld(): Internal.World;
        getPos(): BlockPos;
        getEntity(): Internal.Entity;
        get world(): Internal.World;
        get pos(): BlockPos;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Entity);
        constructor();
    }
    type EntityWalkEvent_ = EntityWalkEvent;
    class ItemModificationProperties extends Document.Object {
        setCraftingReminder(i: Internal.Item_): void;
        setBurnTime(i: number): void;
        setMaxDamage(i: number): void;
        setMaxStackSize(i: number): void;
        setTier(c: Internal.Consumer_<Internal.ModifiedToolTier_>): void;
        setCraftingRemainder(i: Internal.Item_): void;
        setFireResistant(b: boolean): void;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder_>): void;
        setRarity(r: Rarity): void;
        readonly item: Internal.ItemKJS;
        set maxStackSize(i: number);
        set tier(c: Internal.Consumer_<Internal.ModifiedToolTier_>);
        set craftingReminder(i: Internal.Item_);
        set burnTime(i: number);
        set maxDamage(i: number);
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder_>);
        set craftingRemainder(i: Internal.Item_);
        set fireResistant(b: boolean);
        set rarity(r: Rarity);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(i: Internal.ItemKJS);
    }
    type ItemModificationProperties_ = ItemModificationProperties;
    abstract class Property <T> extends Document.Object {
        func_177699_b(): Internal.Class<T>;
        func_185929_b(arg0: string): Internal.Optional<T>;
        func_241491_c_(): Internal.Stream<Internal.Property$ValuePair<T>>;
        func_177701_a(): string;
        func_241492_e_(): Internal.Codec<Internal.Property$ValuePair<T>>;
        func_177700_c(): Internal.Collection<T>;
        func_177702_a(arg0: T): string;
        func_241489_a_(arg0: Internal.StateHolder<any, any>): Internal.Property$ValuePair<T>;
        func_206906_c(): number;
        func_241490_b_(arg0: T): Internal.Property$ValuePair<T>;
    }
    type Property_<T> = Property<T>;
    class EnchantmentType extends Internal.Enum<Internal.EnchantmentType> implements Internal.IExtensibleEnum {
        init(): void;
        static valueOf(arg0: string): Internal.EnchantmentType;
        static values(): Internal.EnchantmentType[];
        func_77557_a(arg0: Internal.Item_): boolean;
        static create(arg0: string, arg1: Internal.Predicate_<Internal.Item_>): Internal.EnchantmentType;
        static readonly ARMOR_HEAD: Internal.EnchantmentType;
        static readonly BREAKABLE: Internal.EnchantmentType;
        static readonly ARMOR: Internal.EnchantmentType;
        static readonly ARMOR_LEGS: Internal.EnchantmentType;
        static readonly FISHING_ROD: Internal.EnchantmentType;
        static readonly BOW: Internal.EnchantmentType;
        static readonly ARMOR_FEET: Internal.EnchantmentType;
        static readonly TRIDENT: Internal.EnchantmentType;
        static readonly VANISHABLE: Internal.EnchantmentType;
        static readonly ARMOR_CHEST: Internal.EnchantmentType;
        static readonly WEARABLE: Internal.EnchantmentType;
        static readonly WEAPON: Internal.EnchantmentType;
        static readonly DIGGER: Internal.EnchantmentType;
        static readonly CROSSBOW: Internal.EnchantmentType;
    }
    type EnchantmentType_ = "armor" | "armor_feet" | "armor_legs" | "armor_chest" | "armor_head" | "weapon" | "digger" | "fishing_rod" | "trident" | "breakable" | "bow" | "wearable" | "crossbow" | "vanishable" | "hoe" | "shield" | "anvil" | "shears" | "axe" | "pickaxe" | "enchantable" | "pickaxe_or_shovel" | "sword_or_axe" | "sword_or_axe_or_crossbow" | "knife" | "straddleboard" | "mythicbotany_mjoellnir" | "travel_anchors_teleportable_no_staff" | "travel_anchors_teleportable" | EnchantmentType;
    interface FluidIngredient$IFluidList {
        getFluids(): Internal.Collection<Internal.FluidStack>;
        serialize(): Internal.JsonObject;
    }
    type FluidIngredient$IFluidList_ = FluidIngredient$IFluidList;
    interface IForgeBakedModel {
        getBakedModel(): Internal.IBakedModel;
        isAmbientOcclusion(arg0: Internal.BlockState): boolean;
        doesHandlePerspectives(): boolean;
        getModelData(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.IModelData): Internal.IModelData;
        isLayered(): boolean;
        handlePerspective(arg0: Internal.ItemCameraTransforms$TransformType_, arg1: Internal.MatrixStack): Internal.IBakedModel;
        getQuads(arg0: Internal.BlockState, arg1: Internal.Direction_, arg2: Internal.Random, arg3: Internal.IModelData): Internal.List<Internal.BakedQuad>;
        getParticleTexture(arg0: Internal.IModelData): Internal.TextureAtlasSprite;
        getLayerModels(arg0: Internal.ItemStack, arg1: boolean): Internal.List<Internal.Pair<Internal.IBakedModel, Internal.RenderType>>;
    }
    type IForgeBakedModel_ = IForgeBakedModel;
    class OptionalInt extends Document.Object {
        orElseGet(arg0: Internal.IntSupplier_): number;
        stream(): Internal.IntStream;
        ifPresentOrElse(arg0: Internal.IntConsumer_, arg1: Internal.Runnable_): void;
        ifPresent(arg0: Internal.IntConsumer_): void;
        static of(arg0: number): Internal.OptionalInt;
        isEmpty(): boolean;
        isPresent(): boolean;
        orElse(arg0: number): number;
        getAsInt(): number;
        orElseThrow<X_>(arg0: java_.util.function_.Supplier_<X_>): number;
        orElseThrow(): number;
        static empty(): Internal.OptionalInt;
        get asInt(): number;
        get present(): boolean;
    }
    type OptionalInt_ = OptionalInt;
    class PointOfInterestManager extends Internal.RegionSectionCache<Internal.PointOfInterestData> {
        func_219140_a(arg0: BlockPos): void;
        func_219142_b(arg0: BlockPos): boolean;
        func_219163_a(arg0: Internal.Predicate_<Internal.PointOfInterestType_>, arg1: Internal.Predicate_<BlockPos_>, arg2: Internal.PointOfInterestManager$Status_, arg3: BlockPos, arg4: number, arg5: Internal.Random): Internal.Optional<BlockPos>;
        func_219145_a(arg0: Internal.Predicate_<Internal.PointOfInterestType_>, arg1: BlockPos, arg2: number, arg3: Internal.PointOfInterestManager$Status_): number;
        func_219135_a(arg0: BlockPos, arg1: Internal.PointOfInterestType_): void;
        func_219146_b(arg0: Internal.Predicate_<Internal.PointOfInterestType_>, arg1: BlockPos, arg2: number, arg3: Internal.PointOfInterestManager$Status_): Internal.Stream<Internal.PointOfInterest>;
        func_219157_a(arg0: Internal.Predicate_<Internal.PointOfInterestType_>, arg1: Internal.Predicate_<BlockPos_>, arg2: BlockPos, arg3: number): Internal.Optional<BlockPos>;
        func_234148_d_(arg0: Internal.Predicate_<Internal.PointOfInterestType_>, arg1: BlockPos, arg2: number, arg3: Internal.PointOfInterestManager$Status_): Internal.Optional<BlockPos>;
        func_219137_a(arg0: Internal.Predicate_<Internal.PointOfInterestType_>, arg1: Internal.ChunkPos, arg2: Internal.PointOfInterestManager$Status_): Internal.Stream<Internal.PointOfInterest>;
        func_234135_a_(arg0: Internal.PointOfInterestType_, arg1: BlockPos): boolean;
        func_219138_a(arg0: BlockPos, arg1: Internal.Predicate_<Internal.PointOfInterestType_>): boolean;
        func_219127_a(arg0: Internal.Predicate_<Internal.PointOfInterestType_>, arg1: Internal.Predicate_<BlockPos_>, arg2: BlockPos, arg3: number, arg4: Internal.PointOfInterestManager$Status_): Internal.Optional<BlockPos>;
        func_219139_a(arg0: Internal.ChunkPos, arg1: Internal.ChunkSection): void;
        func_219148_c(arg0: BlockPos): Internal.Optional<Internal.PointOfInterestType>;
        func_226347_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: number): void;
        func_242324_b(arg0: Internal.Predicate_<Internal.PointOfInterestType_>, arg1: Internal.Predicate_<BlockPos_>, arg2: BlockPos, arg3: number, arg4: Internal.PointOfInterestManager$Status_): Internal.Stream<BlockPos>;
        func_219115_a(arg0: Internal.BooleanSupplier_): void;
        func_225399_a(arg0: Internal.Predicate_<Internal.PointOfInterestType_>, arg1: Internal.Predicate_<BlockPos_>, arg2: BlockPos, arg3: number, arg4: Internal.PointOfInterestManager$Status_): Internal.Stream<BlockPos>;
        func_226353_b_(arg0: Internal.Predicate_<Internal.PointOfInterestType_>, arg1: BlockPos, arg2: number, arg3: Internal.PointOfInterestManager$Status_): Internal.Stream<Internal.PointOfInterest>;
        func_219150_a(arg0: Internal.SectionPos): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File, arg1: Internal.DataFixer, arg2: boolean);
    }
    type PointOfInterestManager_ = PointOfInterestManager;
    class TagEventJS$TagWrapper <T> extends Document.Object {
        add(ids: any): Internal.TagEventJS$TagWrapper<T>;
        removeAll(): Internal.TagEventJS$TagWrapper<T>;
        sort(): boolean;
        setPriorityList(o: any): void;
        remove(ids: any): Internal.TagEventJS$TagWrapper<T>;
        set priorityList(o: any);
    }
    type TagEventJS$TagWrapper_<T> = TagEventJS$TagWrapper<T>;
    interface ObjIntConsumer <T> {
        accept(arg0: T, arg1: number): void;
        (arg0: T, arg1: number): void;
    }
    type ObjIntConsumer_<T> = ((arg0: T, arg1: number)=>void) | ObjIntConsumer<T>;
    class SEntityVelocityPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149409_f(): number;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149412_c(): number;
        func_149411_d(): number;
        func_149410_e(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Vec3);
        constructor(arg0: Internal.Entity);
        constructor();
    }
    type SEntityVelocityPacket_ = SEntityVelocityPacket;
    interface EventListener {
    }
    type EventListener_ = EventListener;
    interface IVertexBuilder extends Internal.IForgeVertexBuilder, Internal.VertexDrain {
        func_225582_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_225587_b_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_227891_b_(arg0: number): Internal.IVertexBuilder;
        func_225588_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number): void;
        func_227890_a_(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number[], arg3: number, arg4: number, arg5: number, arg6: number[], arg7: number, arg8: boolean): void;
        func_225585_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225586_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IVertexBuilder;
        func_225583_a_(arg0: number, arg1: number): Internal.IVertexBuilder;
        func_225584_a_(arg0: number, arg1: number, arg2: number): Internal.IVertexBuilder;
        func_227885_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IVertexBuilder;
        createSink(factory: Internal.VertexType_<any>): Internal.VertexSink;
        func_181675_d(): void;
        func_227889_a_(arg0: Internal.MatrixStack$Entry, arg1: Internal.BakedQuad, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_227886_a_(arg0: number): Internal.IVertexBuilder;
        func_227888_a_(matrix: Internal.Matrix4f, x: number, y: number, z: number): Internal.IVertexBuilder;
        func_227887_a_(matrix: Internal.Matrix3f, x: number, y: number, z: number): Internal.IVertexBuilder;
    }
    type IVertexBuilder_ = IVertexBuilder;
    class NetworkEvent$Context extends Document.Object {
        getNetworkManager(): Internal.NetworkManager;
        getDirection(): Internal.NetworkDirection;
        enqueueWork(arg0: Internal.Runnable_): Internal.CompletableFuture<void>;
        setPacketHandled(arg0: boolean): void;
        getSender(): Internal.ServerPlayerEntity;
        attr<T_>(arg0: Internal.AttributeKey<T_>): Internal.Attribute<T_>;
        getPacketDispatcher(): Internal.PacketDispatcher;
        getPacketHandled(): boolean;
        get networkManager(): Internal.NetworkManager;
        get sender(): Internal.ServerPlayerEntity;
        get packetHandled(): boolean;
        get direction(): Internal.NetworkDirection;
        get packetDispatcher(): Internal.PacketDispatcher;
        set packetHandled(arg0: boolean);
    }
    type NetworkEvent$Context_ = NetworkEvent$Context;
    class CombatTracker extends Document.Object {
        func_180135_h(): Internal.LivingEntity;
        func_94547_a(arg0: Internal.DamageSource_, arg1: number, arg2: number): void;
        func_180134_f(): number;
        func_94545_a(): void;
        func_94549_h(): void;
        func_94550_c(): Internal.LivingEntity;
        func_151521_b(): Internal.ITextComponent;
        field_94552_d: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LivingEntity);
    }
    type CombatTracker_ = CombatTracker;
    class RegisterDimensionEvent extends net.minecraftforge.eventbus.api.Event {
        getDimensionRegistry(): Internal.SimpleRegistry<net.minecraft.world.Dimension>;
        getDimensionSettingsRegistry(): Internal.Registry<Internal.DimensionSettings>;
        getSeed(): number;
        getDimensionTypeRegistry(): Internal.Registry<Internal.DimensionType>;
        getBiomeRegistry(): Internal.Registry<Internal.Biome>;
        register(arg0: Internal.RegistryKey<net.minecraft.world.Dimension>, arg1: net.minecraft.world.Dimension): void;
        get dimensionTypeRegistry(): Internal.Registry<Internal.DimensionType>;
        get seed(): number;
        get biomeRegistry(): Internal.Registry<Internal.Biome>;
        get dimensionRegistry(): Internal.SimpleRegistry<net.minecraft.world.Dimension>;
        get dimensionSettingsRegistry(): Internal.Registry<Internal.DimensionSettings>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.SimpleRegistry<net.minecraft.world.Dimension>, arg1: Internal.Registry<Internal.DimensionType>, arg2: Internal.Registry<Internal.Biome>, arg3: Internal.Registry<Internal.DimensionSettings>, arg4: number);
    }
    type RegisterDimensionEvent_ = RegisterDimensionEvent;
    class PotionDiffuserBoostRecipeJS extends Internal.ThermalRecipeJS {
        amplifier(arg0: number): Internal.PotionDiffuserBoostRecipeJS;
        cycles(arg0: number): Internal.PotionDiffuserBoostRecipeJS;
        durationMod(arg0: number): Internal.PotionDiffuserBoostRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PotionDiffuserBoostRecipeJS_ = PotionDiffuserBoostRecipeJS;
    abstract class RandomTickEvent extends net.minecraftforge.eventbus.api.Event {
        getWorld(): Internal.World;
        getPos(): BlockPos;
        getRand(): Internal.Random;
        get rand(): Internal.Random;
        get world(): Internal.World;
        get pos(): BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RandomTickEvent_ = RandomTickEvent;
    class OceanRuinConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_204032_b: number;
        readonly field_204033_c: number;
        static readonly field_236561_a_: Internal.Codec<Internal.OceanRuinConfig>;
        readonly field_204031_a: Internal.OceanRuinStructure$Type;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.OceanRuinStructure$Type, arg1: number, arg2: number);
    }
    type OceanRuinConfig_ = OceanRuinConfig;
    interface ValueLayout extends Internal.MemoryLayout {
        carrier(): Internal.Class<any>;
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        arrayElementVarHandle(...arg0: number[]): Internal.VarHandle;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout;
        order(): Internal.ByteOrder;
    }
    type ValueLayout_ = ValueLayout;
    interface INamedContainerProvider extends Internal.IContainerProvider {
        func_145748_c_(): Internal.ITextComponent;
        (): Internal.ITextComponent;
    }
    type INamedContainerProvider_ = (()=>Internal.ITextComponent) | INamedContainerProvider;
    class MapJS extends Internal.LinkedHashMap<string, any> implements Internal.StringBuilderAppendable, Internal.ChangeListener<any>, Internal.Copyable, Internal.JsonSerializable, Internal.NBTSerializable {
        static nbt(map: any): Internal.CompoundNBT;
        appendString(builder: Internal.StringBuilder): void;
        onChanged(o: any): void;
        containsAll(other: Internal.MapJS): boolean;
        containsAny(other: Internal.MapJS): boolean;
        static isNbt(o: any): boolean;
        put(arg0: any, arg1: any): any;
        put(key: string, value: any): any;
        remove(key: any): any;
        pollLastEntry(): Internal.Map$Entry<string, any>;
        pollFirstEntry(): Internal.Map$Entry<string, any>;
        toJson(): Internal.JsonObject;
        toJson(): Internal.JsonElement;
        lastEntry(): Internal.Map$Entry<string, any>;
        toNBT(): Internal.CompoundNBT;
        toNBT(): Internal.INBT;
        getOrNewList(id: string): Internal.ListJS;
        getOrNewMap(id: string): Internal.MapJS;
        static of(o: any): Internal.MapJS;
        static json(map: any): Internal.JsonObject;
        getLength(): number;
        firstEntry(): Internal.Map$Entry<string, any>;
        copy(): Internal.Copyable;
        copy(): Internal.MapJS;
        changeListener: Internal.ChangeListener<Internal.MapJS>;
        get length(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(s: number);
    }
    type MapJS_ = MapJS;
    interface BakedQuadAccessor {
        getSprite(): Internal.TextureAtlasSprite;
        (): Internal.TextureAtlasSprite;
    }
    type BakedQuadAccessor_ = (()=>Internal.TextureAtlasSprite) | BakedQuadAccessor;
    class PlayStreamingSourceEvent extends Internal.SoundEvent$SoundSourceEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SoundEngine, arg1: Internal.ISound, arg2: Internal.SoundSource);
        constructor();
    }
    type PlayStreamingSourceEvent_ = PlayStreamingSourceEvent;
    interface ByteBufAllocator {
        directBuffer(arg0: number, arg1: number): Internal.ByteBuf;
        directBuffer(arg0: number): Internal.ByteBuf;
        directBuffer(): Internal.ByteBuf;
        isDirectBufferPooled(): boolean;
        calculateNewCapacity(arg0: number, arg1: number): number;
        compositeDirectBuffer(arg0: number): Internal.CompositeByteBuf;
        compositeDirectBuffer(): Internal.CompositeByteBuf;
        ioBuffer(): Internal.ByteBuf;
        ioBuffer(arg0: number): Internal.ByteBuf;
        ioBuffer(arg0: number, arg1: number): Internal.ByteBuf;
        compositeBuffer(): Internal.CompositeByteBuf;
        compositeBuffer(arg0: number): Internal.CompositeByteBuf;
        compositeHeapBuffer(): Internal.CompositeByteBuf;
        compositeHeapBuffer(arg0: number): Internal.CompositeByteBuf;
        buffer(): Internal.ByteBuf;
        buffer(arg0: number, arg1: number): Internal.ByteBuf;
        buffer(arg0: number): Internal.ByteBuf;
        heapBuffer(): Internal.ByteBuf;
        heapBuffer(arg0: number, arg1: number): Internal.ByteBuf;
        heapBuffer(arg0: number): Internal.ByteBuf;
    }
    type ByteBufAllocator_ = ByteBufAllocator;
    interface IChargeableMob {
        func_225509_J__(): boolean;
        (): boolean;
    }
    type IChargeableMob_ = (()=>boolean) | IChargeableMob;
    class DelegatedStencilElement extends Internal.StencilElement {
        withStencilRenderer<T_>(arg0: Internal.DelegatedStencilElement$ElementRenderer_): T_;
        withElementRenderer<T_>(arg0: Internal.DelegatedStencilElement$ElementRenderer_): T_;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.DelegatedStencilElement$ElementRenderer, arg1: Internal.DelegatedStencilElement$ElementRenderer);
    }
    type DelegatedStencilElement_ = DelegatedStencilElement;
    class DropTargetDropEvent extends Internal.DropTargetEvent {
        getDropAction(): number;
        acceptDrop(arg0: number): void;
        getCurrentDataFlavorsAsList(): Internal.List<Internal.DataFlavor>;
        getLocation(): Internal.Point;
        isDataFlavorSupported(arg0: Internal.DataFlavor): boolean;
        rejectDrop(): void;
        dropComplete(arg0: boolean): void;
        getCurrentDataFlavors(): Internal.DataFlavor[];
        getSourceActions(): number;
        isLocalTransfer(): boolean;
        getTransferable(): Internal.Transferable;
        get sourceActions(): number;
        get localTransfer(): boolean;
        get transferable(): Internal.Transferable;
        get location(): Internal.Point;
        get currentDataFlavors(): Internal.DataFlavor[];
        get dropAction(): number;
        get currentDataFlavorsAsList(): Internal.List<Internal.DataFlavor>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DropTargetContext, arg1: Internal.Point, arg2: number, arg3: number);
        constructor(arg0: Internal.DropTargetContext, arg1: Internal.Point, arg2: number, arg3: number, arg4: boolean);
    }
    type DropTargetDropEvent_ = DropTargetDropEvent;
    class Products$P4 <F, T1, T2, T3, T4> extends Document.Object {
        t4(): Internal.App<F, T4>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function4_<T1, T2, T3, T4, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function4<T1, T2, T3, T4, R_>>): Internal.App<F, R_>;
        and<T5_, T6_, T7_>(arg0: Internal.Products$P3<F, T5_, T6_, T7_>): Internal.Products$P7<F, T1, T2, T3, T4, T5_, T6_, T7_>;
        and<T5_, T6_, T7_, T8_>(arg0: Internal.Products$P4<F, T5_, T6_, T7_, T8_>): Internal.Products$P8<F, T1, T2, T3, T4, T5_, T6_, T7_, T8_>;
        and<T5_, T6_>(arg0: Internal.Products$P2<F, T5_, T6_>): Internal.Products$P6<F, T1, T2, T3, T4, T5_, T6_>;
        and<T5_>(arg0: Internal.App<F, T5_>): Internal.Products$P5<F, T1, T2, T3, T4, T5_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        t3(): Internal.App<F, T3>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>);
    }
    type Products$P4_<F, T1, T2, T3, T4> = Products$P4<F, T1, T2, T3, T4>;
    abstract class Direction$Axis extends Internal.Enum<Internal.Direction$Axis> implements Internal.IStringSerializable, Internal.Predicate<Internal.Direction> {
        static func_176717_a(arg0: string): Internal.Direction$Axis;
        or(arg0: Internal.Predicate_<Internal.Direction_>): Internal.Predicate<Internal.Direction>;
        test(arg0: any): boolean;
        test(arg0: Internal.Direction_): boolean;
        func_176719_a(): string;
        func_176716_d(): Internal.Direction$Plane;
        static valueOf(arg0: string): Internal.Direction$Axis;
        static values(): Internal.Direction$Axis[];
        func_196052_a(arg0: number, arg1: number, arg2: number): number;
        func_176722_c(): boolean;
        func_200128_b(): boolean;
        func_196051_a(arg0: number, arg1: number, arg2: number): number;
        static func_239634_a_(arg0: Internal.Random): Internal.Direction$Axis;
        and(arg0: Internal.Predicate_<Internal.Direction_>): Internal.Predicate<Internal.Direction>;
        negate(): Internal.Predicate<Internal.Direction>;
        func_176610_l(): string;
        static readonly X: Internal.Direction$Axis;
        static readonly Y: Internal.Direction$Axis;
        static readonly Z: Internal.Direction$Axis;
        static readonly field_239632_d_: Internal.Codec<Internal.Direction$Axis>;
    }
    type Direction$Axis_ = "x" | "y" | "z" | Direction$Axis;
    interface Comparable <T> {
        compareTo(arg0: T): number;
        (arg0: T): number;
    }
    type Comparable_<T> = ((arg0: T)=>number) | Comparable<T>;
    abstract class Format extends Document.Object implements Internal.Serializable, Internal.Cloneable {
        formatToCharacterIterator(arg0: any): Internal.AttributedCharacterIterator;
        format(arg0: any, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        format(arg0: any): string;
        clone(): any;
        parseObject(arg0: string): any;
        parseObject(arg0: string, arg1: Internal.ParsePosition): any;
    }
    type Format_ = Format;
    class RecipesAfterLoadEventJS extends Internal.EventJS {
        forEachRecipe(filter: Internal.RecipeFilter_, consumer: Internal.Consumer_<Internal.RecipeJS_>): void;
        countRecipes(filter: Internal.RecipeFilter_): number;
        forEachRecipeAsync(filter: Internal.RecipeFilter_, consumer: Internal.Consumer_<Internal.RecipeJS_>): void;
        remove(filter: Internal.RecipeFilter_): number;
    }
    type RecipesAfterLoadEventJS_ = RecipesAfterLoadEventJS;
    class BrewingStandTileEntity extends Internal.LockableTileEntity implements Internal.ISidedInventory, Internal.ITickableTileEntity {
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_73660_a(): void;
        func_174902_m(): boolean[];
        func_180463_a(arg0: Internal.Direction_): number[];
        func_145818_k_(): boolean;
        func_180462_a(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        func_180461_b(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        field_145946_k: number;
        field_184278_m: number;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BrewingStandTileEntity_ = BrewingStandTileEntity;
    class Modifier extends Document.Object implements Internal.IForgeRegistryEntry<Internal.Modifier> {
        getRepairFactor(arg0: Internal.IModifierToolStack, arg1: number, arg2: number): number;
        onEntityUse(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.PlayerEntity, arg3: Internal.LivingEntity, arg4: Hand_): Internal.ActionResultType;
        addVolatileData(arg0: Internal.ToolRebuildContext, arg1: number, arg2: Internal.ModDataNBT): void;
        addVolatileData(arg0: Internal.Item_, arg1: Internal.ToolDefinition, arg2: Internal.StatsNBT, arg3: Internal.IModDataReadOnly_, arg4: number, arg5: Internal.ModDataNBT): void;
        addVolatileData(arg0: Internal.ToolDefinition, arg1: Internal.StatsNBT, arg2: Internal.IModDataReadOnly_, arg3: number, arg4: Internal.ModDataNBT): void;
        onUnequip(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.EquipmentChangeContext): void;
        getModule<T_>(arg0: Internal.Class<T_>): T_;
        addAttributes(arg0: Internal.IModifierToolStack, arg1: number, arg2: EquipmentSlot_, arg3: Internal.BiConsumer_<net.minecraft.entity.ai.attributes.Attribute_, Internal.AttributeModifier_>): void;
        afterBlockUse(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.ItemUseContext): Internal.ActionResultType;
        afterBlockUse(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.ItemUseContext, arg3: EquipmentSlot_): Internal.ActionResultType;
        onFinishUsing(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.World, arg3: Internal.LivingEntity): boolean;
        removeBlock(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.ToolHarvestContext): boolean;
        getLootingValue(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.LivingEntity, arg3: Internal.Entity, arg4: Internal.DamageSource_, arg5: number): number;
        addToolStats(arg0: Internal.Item_, arg1: Internal.ToolDefinition, arg2: Internal.StatsNBT, arg3: Internal.IModDataReadOnly_, arg4: Internal.IModDataReadOnly_, arg5: number, arg6: Internal.ModifierStatsBuilder): void;
        addToolStats(arg0: Internal.ToolRebuildContext, arg1: number, arg2: Internal.ModifierStatsBuilder): void;
        addToolStats(arg0: Internal.ToolDefinition, arg1: Internal.StatsNBT, arg2: Internal.IModDataReadOnly_, arg3: Internal.IModDataReadOnly_, arg4: number, arg5: Internal.ModifierStatsBuilder): void;
        static getMiningModifier(arg0: Internal.LivingEntity): number;
        attackWithArmor(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.EquipmentContext, arg3: EquipmentSlot_, arg4: Internal.LivingEntity, arg5: Internal.DamageSource_, arg6: number, arg7: boolean): void;
        addInformation(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.List<Internal.ITextComponent>, arg3: boolean, arg4: boolean): void;
        addInformation(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.List<Internal.ITextComponent>, arg3: Internal.TooltipFlag_): void;
        addInformation(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.PlayerEntity, arg3: Internal.List<Internal.ITextComponent>, arg4: Internal.TooltipKey_, arg5: Internal.TooltipFlag_): void;
        onEquip(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.EquipmentChangeContext): void;
        showDurabilityBar(arg0: Internal.IModifierToolStack, arg1: number): boolean;
        getUseAction(arg0: Internal.IModifierToolStack, arg1: number): Internal.UseAction;
        beforeBlockUse(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.ItemUseContext): Internal.ActionResultType;
        beforeBlockUse(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.ItemUseContext, arg3: EquipmentSlot_): Internal.ActionResultType;
        getDescriptionList(arg0: Internal.IModifierToolStack, arg1: number): Internal.List<Internal.ITextComponent>;
        getDescriptionList(arg0: number): Internal.List<Internal.ITextComponent>;
        getDescriptionList(): Internal.List<Internal.ITextComponent>;
        getProtectionModifier(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.EquipmentContext, arg3: EquipmentSlot_, arg4: Internal.DamageSource_, arg5: number): number;
        beforeEntityHit(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.ToolAttackContext, arg3: number, arg4: number, arg5: number): number;
        failedEntityHit(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.ToolAttackContext): void;
        getDurabilityRGB(arg0: Internal.IModifierToolStack, arg1: number): number;
        beforeRemoved(arg0: Internal.IModifierToolStack, arg1: Internal.RestrictedCompoundTag): void;
        onDamageTool(arg0: Internal.IModifierToolStack, arg1: number, arg2: number): number;
        onDamageTool(arg0: Internal.IModifierToolStack, arg1: number, arg2: number, arg3: Internal.LivingEntity): number;
        getDisplayName(arg0: number): Internal.ITextComponent;
        getDisplayName(): Internal.ITextComponent;
        getDisplayName(arg0: Internal.IModifierToolStack, arg1: number): Internal.ITextComponent;
        onEntityUseFirst(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.PlayerEntity, arg3: Internal.Entity, arg4: Hand_): Internal.ActionResultType;
        getRegistryType(): Internal.Class<Internal.Modifier>;
        processLoot(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.List<Internal.ItemStack>, arg3: Internal.LootContext): Internal.List<Internal.ItemStack>;
        onRemoved(arg0: Internal.IModifierToolStack): void;
        getEntityDamage(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.ToolAttackContext, arg3: number, arg4: number): number;
        beforeEntityUse(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.PlayerEntity, arg3: Internal.Entity, arg4: Hand_, arg5: EquipmentSlot_): Internal.ActionResultType;
        onEquipmentChange(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.EquipmentChangeContext, arg3: EquipmentSlot_): void;
        onToolUse(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.World, arg3: Internal.PlayerEntity, arg4: Hand_, arg5: EquipmentSlot_): Internal.ActionResultType;
        onToolUse(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.World, arg3: Internal.PlayerEntity, arg4: Hand_): Internal.ActionResultType;
        getDamagePercentage(arg0: Internal.IModifierToolStack, arg1: number): number;
        applyStyle(arg0: Internal.IFormattableTextComponent): Internal.IFormattableTextComponent;
        finishBreakingBlocks(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.ToolHarvestContext): void;
        getId(): Internal.ModifierId;
        afterEntityHit(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.ToolAttackContext, arg3: number): number;
        getDescription(arg0: Internal.IModifierToolStack, arg1: number): Internal.ITextComponent;
        getDescription(arg0: number): Internal.ITextComponent;
        getDescription(): Internal.ITextComponent;
        onAttacked(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.EquipmentContext, arg3: EquipmentSlot_, arg4: Internal.DamageSource_, arg5: number, arg6: boolean): void;
        afterEntityUse(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.PlayerEntity, arg3: Internal.LivingEntity, arg4: Hand_, arg5: EquipmentSlot_): Internal.ActionResultType;
        onInventoryTick(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.World, arg3: Internal.LivingEntity, arg4: number, arg5: boolean, arg6: boolean, arg7: Internal.ItemStack): void;
        afterBlockBreak(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.ToolHarvestContext): void;
        isSourceBlocked(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.EquipmentContext, arg3: EquipmentSlot_, arg4: Internal.DamageSource_, arg5: number): boolean;
        validate(arg0: Internal.IModifierToolStack, arg1: number): Internal.ValidatedResult;
        onBreakSpeed(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.PlayerEvent$BreakSpeed, arg3: Internal.Direction_, arg4: boolean, arg5: number): void;
        addRawData(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.RestrictedCompoundTag): void;
        applyHarvestEnchantments(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.ToolHarvestContext, arg3: Internal.BiConsumer_<Internal.Enchantment_, number>): void;
        getTranslationKey(): string;
        getColor(): number;
        getRegistryName(): Internal.ModifierId;
        getRegistryName(): ResourceLocation;
        setRegistryName(arg0: ResourceLocation_): Internal.Modifier;
        setRegistryName(arg0: ResourceLocation_): any;
        onStoppedUsing(arg0: Internal.IModifierToolStack, arg1: number, arg2: Internal.World, arg3: Internal.LivingEntity, arg4: number): boolean;
        getPriority(): number;
        shouldDisplay(arg0: boolean): boolean;
        getUseDuration(arg0: Internal.IModifierToolStack, arg1: number): number;
        static getHeldTool(arg0: Internal.LivingEntity, arg1: Hand_): Internal.ToolStack;
        static getHeldTool(arg0: Internal.LivingEntity, arg1: EquipmentSlot_): Internal.ToolStack;
        static readonly DEFAULT_PRIORITY: 100;
        get registryType(): Internal.Class<Internal.Modifier>;
        get translationKey(): string;
        get color(): number;
        get descriptionList(): Internal.List<Internal.ITextComponent>;
        get displayName(): Internal.ITextComponent;
        get description(): Internal.ITextComponent;
        get id(): Internal.ModifierId;
        get registryName(): ResourceLocation;
        get priority(): number;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type Modifier_ = Registry.tconstruct.modifiers | Modifier;
    class SoulForgeRecipeJS extends Internal.BMRecipeJS {
        minimumDrain(arg0: number): Internal.SoulForgeRecipeJS;
        drain(arg0: number): Internal.SoulForgeRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SoulForgeRecipeJS_ = SoulForgeRecipeJS;
    class FluidRenderer extends Document.Object {
        render(world: Internal.IBlockDisplayReader, fluidState: Internal.FluidState, pos: BlockPos, buffers: Internal.ChunkModelBuffers): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(client: Internal.Minecraft, lighters: any, biomeColorBlender: any);
    }
    type FluidRenderer_ = FluidRenderer;
    interface Long2ObjectMap$Entry <V> extends Internal.Map$Entry<number, V> {
        getKey(): number;
        getKey(): any;
        getLongKey(): number;
        (): number;
    }
    type Long2ObjectMap$Entry_<V> = (()=>number) | Long2ObjectMap$Entry<V>;
    class EggEntity extends Internal.ProjectileItemEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity);
        constructor(arg0: Internal.EntityType<Internal.EggEntity>, arg1: Internal.World);
    }
    type EggEntity_ = EggEntity;
    abstract class FlyingEntity extends Internal.MobEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type FlyingEntity_ = FlyingEntity;
    interface IWeatherRenderHandler {
        render(arg0: number, arg1: number, arg2: Internal.ClientWorld, arg3: Internal.Minecraft, arg4: Internal.LightTexture, arg5: number, arg6: number, arg7: number): void;
        (arg0: number, arg1: number, arg2: Internal.ClientWorld, arg3: Internal.Minecraft, arg4: Internal.LightTexture, arg5: number, arg6: number, arg7: number): void;
    }
    type IWeatherRenderHandler_ = ((arg0: number, arg1: number, arg2: Internal.ClientWorld, arg3: Internal.Minecraft, arg4: Internal.LightTexture, arg5: number, arg6: number, arg7: number)=>void) | IWeatherRenderHandler;
    interface IntConsumer {
        andThen(arg0: Internal.IntConsumer_): Internal.IntConsumer;
        accept(arg0: number): void;
        (arg0: number): void;
    }
    type IntConsumer_ = ((arg0: number)=>void) | IntConsumer;
    class SearchTreeManager$Key <T> extends Document.Object {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SearchTreeManager$Key_<T> = SearchTreeManager$Key<T>;
    interface LongBinaryOperator {
        applyAsLong(arg0: number, arg1: number): number;
        (arg0: number, arg1: number): number;
    }
    type LongBinaryOperator_ = ((arg0: number, arg1: number)=>number) | LongBinaryOperator;
    class TNTEntity extends Internal.Entity implements Internal.TNTEntityAccess {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        func_184534_a(arg0: number): void;
        asKJS(): any;
        setOwner(arg0: Internal.LivingEntity): void;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_184536_l(): number;
        func_94083_c(): Internal.LivingEntity;
        func_184535_k(): number;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_70516_a: number;
        field_94084_b: Internal.LivingEntity;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        set owner(arg0: Internal.LivingEntity);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.TNTEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: Internal.LivingEntity);
    }
    type TNTEntity_ = TNTEntity;
    class OverlayTexture extends Document.Object implements Internal.AutoCloseable {
        func_229198_a_(): void;
        static func_229199_a_(arg0: number): number;
        static func_229202_a_(arg0: boolean): number;
        func_229203_b_(): void;
        static func_229200_a_(arg0: number, arg1: boolean): number;
        static func_229201_a_(arg0: number, arg1: number): number;
        close(): void;
        static readonly field_229196_a_: 655360;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type OverlayTexture_ = OverlayTexture;
    interface IHasTextComponent {
        getTextComponent(): Internal.ITextComponent;
        (): Internal.ITextComponent;
    }
    type IHasTextComponent_ = (()=>Internal.ITextComponent) | IHasTextComponent;
    class LeashKnotEntity extends Internal.HangingEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        static func_213855_a(arg0: Internal.World, arg1: BlockPos): Internal.LeashKnotEntity;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_174859_a(arg0: Internal.Direction_): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.LeashKnotEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: BlockPos);
    }
    type LeashKnotEntity_ = LeashKnotEntity;
    class Rarity extends Internal.Enum<Internal.Rarity> implements Internal.IExtensibleEnum {
        init(): void;
        static valueOf(arg0: string): Internal.Rarity;
        static values(): Internal.Rarity[];
        static create(arg0: string, arg1: Internal.TextFormatting_): Internal.Rarity;
        readonly field_77937_e: Internal.TextFormatting;
        static readonly RARE: Internal.Rarity;
        static readonly EPIC: Internal.Rarity;
        static readonly UNCOMMON: Internal.Rarity;
        static readonly COMMON: Internal.Rarity;
    }
    type Rarity_ = "common" | "uncommon" | "rare" | "epic" | "pity" | "simple" | "advanced" | "supreme" | "as_celestial" | "as_artifact" | "as_vestige" | "forgotten" | "ie_masterwork" | "relic" | Rarity;
    class BeaconTileEntity extends Internal.TileEntity implements Internal.INamedContainerProvider, Internal.ITickableTileEntity {
        requestModelDataUpdate(): void;
        func_174907_n(): Internal.List<Internal.BeaconTileEntity$BeamSegment>;
        createMenu(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity): Internal.Container;
        constant$cfh000$tick(arg0: number): number;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_73660_a(): void;
        func_205736_a(arg0: Internal.SoundEvent_): void;
        func_191979_s(): number;
        func_145748_c_(): Internal.ITextComponent;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        func_200227_a(arg0: Internal.ITextComponent_): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        field_213934_g: Internal.List<Internal.BeaconTileEntity$BeamSegment>;
        field_213935_i: number;
        field_174909_f: Internal.List<Internal.BeaconTileEntity$BeamSegment>;
        field_146008_p: Internal.ITextComponent;
        static readonly field_146009_a: Internal.Effect[][];
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BeaconTileEntity_ = BeaconTileEntity;
    interface IPhase {
        func_221113_a(arg0: Internal.DamageSource_, arg1: number): number;
        func_188660_d(): void;
        func_188658_e(): void;
        func_188659_c(): void;
        func_188657_b(): void;
        func_188653_h(): number;
        func_188652_i(): Internal.PhaseType<Internal.IPhase>;
        func_188654_a(): boolean;
        func_188651_f(): number;
        func_188650_g(): Vec3;
        func_188655_a(arg0: Internal.EnderCrystalEntity, arg1: BlockPos, arg2: Internal.DamageSource_, arg3: Internal.PlayerEntity): void;
    }
    type IPhase_ = IPhase;
    class ColumnConfig extends Document.Object implements Internal.IFeatureConfig {
        func_242794_am_(): Internal.FeatureSpread;
        func_242795_b(): Internal.FeatureSpread;
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236465_a_: Internal.Codec<Internal.ColumnConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FeatureSpread, arg1: Internal.FeatureSpread);
    }
    type ColumnConfig_ = ColumnConfig;
    interface ISurfaceBuilderConfig {
        func_204108_a(): Internal.BlockState;
        func_204109_b(): Internal.BlockState;
    }
    type ISurfaceBuilderConfig_ = ISurfaceBuilderConfig;
    class AccessFlag extends Internal.Enum<Internal.AccessFlag> {
        static maskToAccessFlags(arg0: number, arg1: Internal.AccessFlag$Location_): Internal.Set<Internal.AccessFlag>;
        static valueOf(arg0: string): Internal.AccessFlag;
        static values(): Internal.AccessFlag[];
        sourceModifier(): boolean;
        locations(): Internal.Set<Internal.AccessFlag$Location>;
        locations(arg0: Internal.ClassFileFormatVersion_): Internal.Set<Internal.AccessFlag$Location>;
        mask(): number;
        static readonly TRANSITIVE: Internal.AccessFlag;
        static readonly SYNCHRONIZED: Internal.AccessFlag;
        static readonly VOLATILE: Internal.AccessFlag;
        static readonly VARARGS: Internal.AccessFlag;
        static readonly STRICT: Internal.AccessFlag;
        static readonly ENUM: Internal.AccessFlag;
        static readonly SUPER: Internal.AccessFlag;
        static readonly NATIVE: Internal.AccessFlag;
        static readonly SYNTHETIC: Internal.AccessFlag;
        static readonly FINAL: Internal.AccessFlag;
        static readonly BRIDGE: Internal.AccessFlag;
        static readonly ABSTRACT: Internal.AccessFlag;
        static readonly STATIC: Internal.AccessFlag;
        static readonly PRIVATE: Internal.AccessFlag;
        static readonly OPEN: Internal.AccessFlag;
        static readonly STATIC_PHASE: Internal.AccessFlag;
        static readonly MODULE: Internal.AccessFlag;
        static readonly INTERFACE: Internal.AccessFlag;
        static readonly ANNOTATION: Internal.AccessFlag;
        static readonly PUBLIC: Internal.AccessFlag;
        static readonly MANDATED: Internal.AccessFlag;
        static readonly PROTECTED: Internal.AccessFlag;
        static readonly TRANSIENT: Internal.AccessFlag;
    }
    type AccessFlag_ = "public" | "private" | "protected" | "static" | "final" | "super" | "open" | "transitive" | "synchronized" | "static_phase" | "volatile" | "bridge" | "transient" | "varargs" | "native" | "interface" | "abstract" | "strict" | "synthetic" | "annotation" | "enum" | "mandated" | "module" | AccessFlag;
    interface ExtendedChunk {
        setSkyNibbles(arg0: any[]): void;
        getSkyEmptinessMap(): boolean[];
        getSkyNibbles(): any[];
        getBlockNibbles(): any[];
        setBlockEmptinessMap(arg0: boolean[]): void;
        setSkyEmptinessMap(arg0: boolean[]): void;
        getBlockEmptinessMap(): boolean[];
        setBlockNibbles(arg0: any[]): void;
    }
    type ExtendedChunk_ = ExtendedChunk;
    class Clipboard extends Document.Object {
        getName(): string;
        addFlavorListener(arg0: Internal.FlavorListener_): void;
        isDataFlavorAvailable(arg0: Internal.DataFlavor): boolean;
        getAvailableDataFlavors(): Internal.DataFlavor[];
        getFlavorListeners(): Internal.FlavorListener[];
        getContents(arg0: any): Internal.Transferable;
        removeFlavorListener(arg0: Internal.FlavorListener_): void;
        setContents(arg0: Internal.Transferable, arg1: Internal.ClipboardOwner_): void;
        getData(arg0: Internal.DataFlavor): any;
        get flavorListeners(): Internal.FlavorListener[];
        get availableDataFlavors(): Internal.DataFlavor[];
        get name(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type Clipboard_ = Clipboard;
    class LiquidsConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_227366_f_: Internal.Set<Internal.Block>;
        static readonly field_236649_a_: Internal.Codec<Internal.LiquidsConfig>;
        readonly field_214678_a: Internal.FluidState;
        readonly field_227363_b_: boolean;
        readonly field_227364_c_: number;
        readonly field_227365_d_: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FluidState, arg1: boolean, arg2: number, arg3: number, arg4: Internal.Set<Internal.Block>);
    }
    type LiquidsConfig_ = LiquidsConfig;
    abstract class ConfigWithVariants <T> extends Internal.ConfigValue<T> {
        getIteration(arg0: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>, arg1: boolean): Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ConfigWithVariants_<T> = ConfigWithVariants<T>;
    interface IDrone extends Internal.ICapabilityProvider {
        setDugBlock(arg0: BlockPos): void;
        setName(arg0: Internal.ITextComponent_): void;
        getFluidTank(): Internal.IFluidTank;
        getOwnerUUID(): Internal.UUID;
        getFakePlayer(): Internal.FakePlayer;
        getControllerPos(): BlockPos;
        isBlockValidPathfindBlock(arg0: BlockPos): boolean;
        getOwner(): Internal.PlayerEntity;
        getTargetAI(): Internal.GoalSelector;
        onItemPickupEvent(arg0: Internal.ItemEntity, arg1: number): void;
        getDeployPos(): BlockPos;
        getDronePos(): Vec3;
        isAIOverridden(): boolean;
        dropItem(arg0: Internal.ItemStack): void;
        world(): Internal.World;
        getInv(): Internal.IItemHandlerModifiable;
        getCarryingEntities(): Internal.List<Internal.Entity>;
        setCarryingEntity(arg0: Internal.Entity): void;
        getPathNavigator(): Internal.IPathNavigator;
        sendWireframeToClient(arg0: BlockPos): void;
        getUpgrades(arg0: Internal.EnumUpgrade_): number;
        setEmittingRedstone(arg0: Internal.Direction_, arg1: number): void;
    }
    type IDrone_ = IDrone;
    class Memory <T> extends Document.Object {
        static func_234069_a_<T_>(arg0: T_, arg1: number): Internal.Memory<T_>;
        static func_234068_a_<T_>(arg0: T_): Internal.Memory<T_>;
        func_234072_c_(): T;
        static func_234066_a_<T_>(arg0: Internal.Codec<T_>): Internal.Codec<Internal.Memory<T_>>;
        func_234064_a_(): void;
        func_234074_e_(): boolean;
        func_234073_d_(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: T, arg1: number);
    }
    type Memory_<T> = Memory<T>;
    class BlockLeftClickEventJS extends Internal.PlayerEventJS {
        getBlock(): Internal.BlockContainerJS;
        getItem(): Internal.ItemStackJS;
        getFacing(): Internal.Direction;
        get item(): Internal.ItemStackJS;
        get facing(): Internal.Direction;
        get block(): Internal.BlockContainerJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.PlayerEntity, hand: Hand, pos: BlockPos, direction: Internal.Direction);
    }
    type BlockLeftClickEventJS_ = BlockLeftClickEventJS;
    class StructureManager extends Document.Object {
        func_235005_a_(): boolean;
        func_235011_a_(arg0: Internal.SectionPos, arg1: net.minecraft.world.gen.feature.structure.Structure_<any>): Internal.Stream<Internal.StructureStart<any>>;
        func_235010_a_(arg0: BlockPos, arg1: boolean, arg2: net.minecraft.world.gen.feature.structure.Structure_<any>): Internal.StructureStart<any>;
        func_235013_a_(arg0: Internal.SectionPos, arg1: net.minecraft.world.gen.feature.structure.Structure_<any>, arg2: Internal.IStructureReader): Internal.StructureStart<any>;
        func_235012_a_(arg0: Internal.SectionPos, arg1: net.minecraft.world.gen.feature.structure.Structure_<any>, arg2: number, arg3: Internal.IStructureReader): void;
        func_235014_a_(arg0: Internal.SectionPos, arg1: net.minecraft.world.gen.feature.structure.Structure_<any>, arg2: Internal.StructureStart<any>, arg3: Internal.IStructureReader): void;
        func_241464_a_(arg0: Internal.WorldGenRegion): Internal.StructureManager;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IWorld, arg1: Internal.DimensionGeneratorSettings);
    }
    type StructureManager_ = StructureManager;
    class RenderLayer extends Internal.Enum<Internal.RenderLayer> {
        static fromRenderType(arg0: Internal.RenderType): Internal.RenderLayer;
        static valueOf(arg0: string): Internal.RenderLayer;
        static values(): Internal.RenderLayer[];
        static readonly CUTOUT: Internal.RenderLayer;
        static readonly SOLID: Internal.RenderLayer;
        static readonly TRANSPARENT: Internal.RenderLayer;
    }
    type RenderLayer_ = "solid" | "cutout" | "transparent" | RenderLayer;
    class Dynamic2CommandExceptionType extends Document.Object implements Internal.CommandExceptionType {
        createWithContext(arg0: Internal.ImmutableStringReader, arg1: any, arg2: any): Internal.CommandSyntaxException;
        create(arg0: any, arg1: any): Internal.CommandSyntaxException;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
    }
    type Dynamic2CommandExceptionType_ = Dynamic2CommandExceptionType;
    class DayOfWeek extends Internal.Enum<Internal.DayOfWeek> implements Internal.TemporalAccessor, Internal.TemporalAdjuster {
        minus(arg0: number): Internal.DayOfWeek;
        static valueOf(arg0: string): Internal.DayOfWeek;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        static values(): Internal.DayOfWeek[];
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        isSupported(arg0: Internal.TemporalField): boolean;
        plus(arg0: number): Internal.DayOfWeek;
        getLong(arg0: Internal.TemporalField): number;
        getValue(): number;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        static of(arg0: number): Internal.DayOfWeek;
        get(arg0: Internal.TemporalField): number;
        static from(arg0: Internal.TemporalAccessor): Internal.DayOfWeek;
        static readonly WEDNESDAY: Internal.DayOfWeek;
        static readonly MONDAY: Internal.DayOfWeek;
        static readonly THURSDAY: Internal.DayOfWeek;
        static readonly SUNDAY: Internal.DayOfWeek;
        static readonly TUESDAY: Internal.DayOfWeek;
        static readonly FRIDAY: Internal.DayOfWeek;
        static readonly SATURDAY: Internal.DayOfWeek;
        get value(): number;
    }
    type DayOfWeek_ = "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday" | DayOfWeek;
    class CQueryTileEntityNBTPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_211716_b(): number;
        func_211717_c(): BlockPos;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: BlockPos);
    }
    type CQueryTileEntityNBTPacket_ = CQueryTileEntityNBTPacket;
    class BlockFaceUV extends Document.Object {
        func_178346_b(arg0: number): number;
        func_178345_c(arg0: number): number;
        func_178348_a(arg0: number): number;
        func_178349_a(arg0: number[]): void;
        field_178351_a: number[];
        readonly field_178350_b: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number[], arg1: number);
    }
    type BlockFaceUV_ = BlockFaceUV;
    abstract class FocusTraversalPolicy extends Document.Object {
        getInitialComponent(arg0: Internal.Window): Internal.Component;
        getComponentBefore(arg0: java_.awt.Container, arg1: Internal.Component): Internal.Component;
        getFirstComponent(arg0: java_.awt.Container): Internal.Component;
        getLastComponent(arg0: java_.awt.Container): Internal.Component;
        getComponentAfter(arg0: java_.awt.Container, arg1: Internal.Component): Internal.Component;
        getDefaultComponent(arg0: java_.awt.Container): Internal.Component;
    }
    type FocusTraversalPolicy_ = FocusTraversalPolicy;
    interface Supplier <T> {
        get(): T;
        (): T;
    }
    type Supplier_<T> = (()=>T) | Supplier<T>;
    class Window$Type extends Internal.Enum<Internal.Window$Type> {
        static valueOf(arg0: string): Internal.Window$Type;
        static values(): Internal.Window$Type[];
        static readonly POPUP: Internal.Window$Type;
        static readonly UTILITY: Internal.Window$Type;
        static readonly NORMAL: Internal.Window$Type;
    }
    type Window$Type_ = "normal" | "utility" | "popup" | Window$Type;
    class PktPlayEffect extends Internal.ASPacket<Internal.PktPlayEffect> {
        handler(): Internal.ASPacket$Handler<Internal.PktPlayEffect>;
        getExtraData(): Internal.PacketBuffer;
        addData(arg0: Internal.Consumer_<Internal.PacketBuffer_>): Internal.PktPlayEffect;
        decoder(): Internal.ASPacket$Decoder<Internal.PktPlayEffect>;
        encoder(): Internal.ASPacket$Encoder<Internal.PktPlayEffect>;
        get extraData(): Internal.PacketBuffer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: any);
    }
    type PktPlayEffect_ = PktPlayEffect;
    class DrawHighlightEvent extends net.minecraftforge.eventbus.api.Event {
        getTarget(): Internal.RayTraceResult;
        getMatrix(): Internal.MatrixStack;
        getInfo(): Internal.ActiveRenderInfo;
        getPartialTicks(): number;
        getBuffers(): Internal.IRenderTypeBuffer;
        getContext(): Internal.WorldRenderer;
        get buffers(): Internal.IRenderTypeBuffer;
        get context(): Internal.WorldRenderer;
        get matrix(): Internal.MatrixStack;
        get target(): Internal.RayTraceResult;
        get info(): Internal.ActiveRenderInfo;
        get partialTicks(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.WorldRenderer, arg1: Internal.ActiveRenderInfo, arg2: Internal.RayTraceResult, arg3: number, arg4: Internal.MatrixStack, arg5: Internal.IRenderTypeBuffer);
    }
    type DrawHighlightEvent_ = DrawHighlightEvent;
    interface CharSequence {
        isEmpty(): boolean;
        length(): number;
        toString(): string;
        subSequence(arg0: number, arg1: number): Internal.CharSequence;
        chars(): Internal.IntStream;
        charAt(arg0: number): string;
        codePoints(): Internal.IntStream;
    }
    type CharSequence_ = CharSequence;
    class SolarConfig extends Internal.GeneratorConfig {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type SolarConfig_ = SolarConfig;
    interface IObjectIntIterable <T> extends Internal.Iterable<T> {
        func_148757_b(arg0: T): number;
        func_148745_a(arg0: number): T;
    }
    type IObjectIntIterable_<T> = IObjectIntIterable<T>;
    class KeyBinding extends Document.Object implements Internal.Comparable<Internal.KeyBinding>, Internal.IForgeKeybinding {
        func_197979_b(arg0: Internal.InputMappings$Input): void;
        func_151466_e(): string;
        func_197977_i(): Internal.InputMappings$Input;
        func_151464_g(): string;
        func_151468_f(): boolean;
        static func_186704_a(): void;
        getKeyModifier(): Internal.KeyModifier;
        hasKeyCodeModifierConflict(arg0: Internal.KeyBinding): boolean;
        compareTo(arg0: Internal.KeyBinding): number;
        compareTo(arg0: any): number;
        func_197976_a(arg0: number, arg1: number): boolean;
        setKeyModifierAndCode(arg0: Internal.KeyModifier_, arg1: Internal.InputMappings$Input): void;
        setKeyConflictContext(arg0: Internal.IKeyConflictContext): void;
        getKeyModifierDefault(): Internal.KeyModifier;
        static func_197980_a(arg0: Internal.InputMappings$Input, arg1: boolean): void;
        getKeyConflictContext(): Internal.IKeyConflictContext;
        func_238171_j_(): Internal.ITextComponent;
        getKey(): Internal.InputMappings$Input;
        func_197986_j(): boolean;
        func_197985_l(): boolean;
        isConflictContextAndModifierActive(): boolean;
        static func_193626_b(arg0: string): java_.util.function_.Supplier<Internal.ITextComponent>;
        func_197982_m(): string;
        func_197984_a(arg0: number): boolean;
        func_197983_b(arg0: Internal.KeyBinding): boolean;
        static func_197981_a(arg0: Internal.InputMappings$Input): void;
        func_151470_d(): boolean;
        static func_74506_a(): void;
        setToDefault(): void;
        isActiveAndMatches(arg0: Internal.InputMappings$Input): boolean;
        getKeyBinding(): Internal.KeyBinding;
        func_225593_a_(arg0: boolean): void;
        static func_74508_b(): void;
        field_151472_e: Internal.InputMappings$Input;
        field_74513_e: boolean;
        static readonly field_74516_a: {"key.jei.previousPage":Internal.KeyBinding,"quark.keybind.patreon_emote.dance":Internal.SortedKeyBinding,"key.craftingtweaks.decompressAll":Internal.KeyBinding,"key.immersiveengineering.magnetEquip":Internal.KeyBinding,"ping.key.alert":Internal.KeyBinding,"key.ars_nouveau.previous_slot":Internal.KeyBinding,"quark.keybind.autorun":Internal.KeyBinding,"key.occultism.familiar.devil_familiar":Internal.KeyBinding,"key.jei.showUses":Internal.KeyBinding,"key.occultism.familiar.shub_niggurath_familiar":Internal.KeyBinding,"key.buildinggadgets.undo":Internal.KeyBinding,"key.secondarySprint":Internal.KeyBinding,"key.occultism.familiar.beaver_familiar":Internal.KeyBinding,"key.buildinggadgets.fuzzy":Internal.KeyBinding,"quark.keybind.change_hotbar":Internal.KeyBinding,"key.integratedterminals.terminal.portable.open":Internal.KeyBinding,"key.craftingtweaks.refill_last":Internal.KeyBinding,"key.occultism.familiar.headless_familiar":Internal.KeyBinding,"create.keyinfo.toolmenu":Internal.KeyBinding,"key.attack":Internal.KeyBinding,"bloodmagic.keybind.cycle_holding_pos":Internal.KeyBindingBloodMagic,"key.use":Internal.KeyBinding,"key.loadToolbarActivator":Internal.KeyBinding,"pneumaticcraft.chestplate.launcher":Internal.KeyBinding,"fpsreducer.key.forceIdle":Internal.KeyBinding,"key.back":Internal.KeyBinding,"quark.emote.yes":Internal.SortedKeyBinding,"key.immersivepetroleum.projector.flip":Internal.KeyBinding,"key.buildinggadgets.rotate_mirror":Internal.KeyBinding,"key.inventory":Internal.KeyBinding,"Open Config":Internal.KeyBinding,"key.drop":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.magnet":Internal.KeyBinding,"key.mekanism.key_boost":Internal.MekKeyBinding,"key.buildinggadgets.material_list":Internal.KeyBinding,"quark.emote.point":Internal.SortedKeyBinding,"keybind.sophisticatedbackpacks.toggle_upgrade_5":Internal.KeyBinding,"keybind.sophisticatedbackpacks.toggle_upgrade_4":Internal.KeyBinding,"keybind.sophisticatedbackpacks.toggle_upgrade_3":Internal.KeyBinding,"key.craftingtweaks.clear":Internal.KeyBinding,"keybind.sophisticatedbackpacks.inventory_interaction":Internal.KeyBinding,"tetra.toolbelt.binding.restock":Internal.KeyBinding,"key.toggle_focus.desc":Internal.KeyBinding,"key.jei.showRecipe":Internal.KeyBinding,"key.occultism.familiar.dragon_familiar":Internal.KeyBinding,"create.keyinfo.toolbelt":Internal.KeyBinding,"key.observable.profile":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.core_components":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.scuba":Internal.KeyBinding,"bloodmagic.keybind.open_holding":Internal.KeyBindingBloodMagic,"keybind.sophisticatedbackpacks.toggle_upgrade_2":Internal.KeyBinding,"keybind.sophisticatedbackpacks.toggle_upgrade_1":Internal.KeyBinding,"keybind.sophisticatedbackpacks.open_backpack":Internal.KeyBinding,"key.integratedterminals.terminal.tab.previous":Internal.KeyBinding,"key.invtweaks_sort_either.desc":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.block_tracker.module.hackables":Internal.KeyBinding,"key.advancements":Internal.KeyBinding,"key.curios.open.desc":Internal.KeyBinding,"key.ftbchunks.map":Internal.KeyBinding,"quark.keybind.transfer_insert":Internal.KeyBinding,"quark.emote.wave":Internal.SortedKeyBinding,"key.saveToolbarActivator":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.block_tracker.module.energy":Internal.KeyBinding,"key.craftingtweaks.toggleButtons":Internal.KeyBinding,"key.gui":Internal.KeyBinding,"tetra.toolbelt.binding.access":Internal.KeyBinding,"key.invtweaks_sort_player.desc":Internal.KeyBinding,"key.prevDestination":Internal.KeyBinding,"key.ping":Internal.KeyBinding,"key.jei.nextCategory":Internal.KeyBinding,"key.sneak":Internal.ToggleableKeyBinding,"key.buildinggadgets.range":Internal.KeyBinding,"quark.keybind.patreon_emote.jet":Internal.SortedKeyBinding,"pneumaticcraft.helmet.hack":Internal.KeyBinding,"key.botania_corporea_request":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.block_tracker.module.end_portal":Internal.KeyBinding,"key.tconstruct.leggings_interact":Internal.KeyBinding,"key.occultism.familiar.goat_familiar":Internal.KeyBinding,"key.craftingtweaks.compressOne":Internal.KeyBinding,"key.integratedterminals.terminal.craftinggrid.clearplayer":Internal.KeyBinding,"key.occultism.familiar.chimera_familiar":Internal.KeyBinding,"key.chat":Internal.KeyBinding,"key.findme.search":Internal.KeyBinding,"key.occultism.familiar.blacksmith_familiar":Internal.KeyBinding,"quark.emote.shrug":Internal.SortedKeyBinding,"key.fullscreen":Internal.KeyBinding,"key.ars_nouveau.selection_hud":Internal.KeyBinding,"key.nextDestination":Internal.KeyBinding,"key.occultism.familiar.beholder_familiar":Internal.KeyBinding,"key.integratedterminals.terminal.tab.next":Internal.KeyBinding,"key.ftbchunks.minimap.zoomIn":Internal.KeyBinding,"key.jei.nextPage":Internal.KeyBinding,"key.diet.open.desc":Internal.KeyBinding,"key.jei.toggleEditMode":Internal.KeyBinding,"key.toastcontrol.clear":Internal.KeyBinding,"Cycle Profile":Internal.KeyBinding,"key.occultism.familiar.deer_familiar":Internal.KeyBinding,"quark.keybind.sort_container":Internal.KeyBinding,"key.command":Internal.KeyBinding,"pneumaticcraft.boots.kick":Internal.KeyBinding,"key.jei.recipeBack":Internal.KeyBinding,"key.moreoverlays.chunkbounds.desc":Internal.KeyBinding,"key.inventoryhud.toggle":Internal.KeyBinding,"quark.keybind.patreon_emote.zombie":Internal.SortedKeyBinding,"key.farsight_spyglasses.zooming_key":Internal.KeyBinding,"quark.emote.clap":Internal.SortedKeyBinding,"key.immersiveengineering.chemthrowerSwitch":Internal.KeyBinding,"key.integratedterminals.terminal.craftinggrid.clearstorage":Internal.KeyBinding,"key.toggleLiquids":Internal.KeyBinding,"keybind.sophisticatedbackpacks.tool_swap":Internal.KeyBinding,"key.craftingtweaks.decompressOne":Internal.KeyBinding,"key.narrator":Internal.KeyBinding,"key.hotbar.8":Internal.KeyBinding,"key.hotbar.7":Internal.KeyBinding,"key.hotbar.6":Internal.KeyBinding,"keybind.sophisticatedbackpacks.sort":Internal.KeyBinding,"key.hotbar.5":Internal.KeyBinding,"Remove Block":Internal.KeyBinding,"key.hotbar.4":Internal.KeyBinding,"key.hotbar.3":Internal.KeyBinding,"quark.keybind.lock_rotation":Internal.KeyBinding,"key.hotbar.2":Internal.KeyBinding,"key.hotbar.1":Internal.KeyBinding,"key.mekanism.module_tweaker":Internal.MekKeyBinding,"key.spectatorOutlines":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.block_tracker.module.spawner":Internal.KeyBinding,"key.jei.focusSearch":Internal.KeyBinding,"key.astralsorcery.disable_perk_abilities":Internal.KeyBinding,"key.occultism.familiar.bat_familiar":Internal.KeyBinding,"key.plonk.place":Internal.KeyBinding,"quark.emote.no":Internal.SortedKeyBinding,"pneumaticcraft.armor.upgrade.jet_boots.module.builder_mode":Internal.KeyBinding,"jecalculation.key.gui_craft":Internal.KeyBinding,"quark.keybind.sort_player":Internal.KeyBinding,"key.buildinggadgets.anchor":Internal.KeyBinding,"key.jei.toggleCheatMode":Internal.KeyBinding,"key.hotbar.9":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.search":Internal.KeyBinding,"key.integrateddynamics.logic_programmer_focus_search":Internal.KeyBinding,"quark.keybind.patreon_emote.exorcist":Internal.SortedKeyBinding,"key.screenshot":Internal.KeyBinding,"tetra.toolbelt.binding.open":Internal.KeyBinding,"quark.keybind.back":Internal.KeyBinding,"key.industrialforegoing.backpack.desc":Internal.KeyBinding,"quark.emote.salute":Internal.SortedKeyBinding,"key.occultism.storage_remote":Internal.KeyBinding,"ping.key.goto":Internal.KeyBinding,"placebo.toggleTrails":Internal.KeyBinding,"cos.key.opencosarmorinventory":Internal.KeyBinding,"key.cofh.mode_change_decrement":Internal.KeyBindingModeChange$Decrement,"ping.key.mine":Internal.KeyBinding,"key.ars_nouveau.open_book":Internal.KeyBinding,"quark.keybind.transfer_extract":Internal.KeyBinding,"key.shrink.shrink":Internal.KeyBinding,"key.togglePerspective":Internal.KeyBinding,"quark.keybind.camera_mode":Internal.KeyBinding,"create.keyinfo.":Internal.KeyBinding,"key.left":Internal.KeyBinding,"key.clienttweaks.disableStepAssist":Internal.KeyBinding,"key.integratedadditions.show":Internal.KeyBinding,"key.ftbchunks.minimap.zoomOut":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.night_vision":Internal.KeyBinding,"key.craftingtweaks.rotate":Internal.KeyBinding,"pneumaticcraft.helmet.debugging.drone":Internal.KeyBinding,"key.forward":Internal.KeyBinding,"key.jei.toggleOverlay":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.step_assist":Internal.KeyBinding,"key.craftingtweaks.refill_last_stack":Internal.KeyBinding,"key.tconstruct.helmet_interact":Internal.KeyBinding,"key.buildinggadgets.connected_area":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.jet_boots.module.smart_hover":Internal.KeyBinding,"key.ftbultimine":Internal.KeyBinding,"key.occultism.backpack":Internal.KeyBinding,"quark.keybind.shift_lock":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.run_speed":Internal.KeyBinding,"key.mekanism.mode":Internal.MekKeyBinding,"key.inventoryhud.toggleall":Internal.KeyBinding,"key.mekanism.head_mode":Internal.MekKeyBinding,"key.craftingtweaks.spread":Internal.KeyBinding,"key.integratedadditions.set":Internal.KeyBinding,"key.ars_nouveau.next_slot":Internal.KeyBinding,"key.modularrouters.moduleInfo":Internal.KeyBinding,"placebo.toggleWings":Internal.KeyBinding,"fpsreducer.key.openGui":Internal.KeyBinding,"quark.emote.headbang":Internal.SortedKeyBinding,"key.moreoverlays.lightoverlay.desc":Internal.KeyBinding,"key.craftingtweaks.compressAll":Internal.KeyBinding,"key.occultism.familiar.fairy_familiar":Internal.KeyBinding,"key.occultism.familiar.mummy_familiar":Internal.KeyBinding,"key.jei.bookmark":Internal.KeyBinding,"key.mekanism.key_hud":Internal.MekKeyBinding,"Open sound muffler screen":Internal.KeyBinding,"key.ftbquests.quests":Internal.KeyBinding,"key.openManual":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.block_tracker.module.fluids":Internal.KeyBinding,"key.swapOffhand":Internal.KeyBinding,"key.integrateddynamics.logic_programmer_open_rename":Internal.KeyBinding,"key.mekanism.chest_mode":Internal.MekKeyBinding,"quark.emote.cheer":Internal.SortedKeyBinding,"quark.emote.weep":Internal.SortedKeyBinding,"key.modularrouters.configure":Internal.KeyBinding,"key.integratedterminals.terminal.craftinggrid.balance":Internal.KeyBinding,"key.craftingtweaks.force_clear":Internal.KeyBinding,"key.jump":Internal.KeyBinding,"key.mekanism.legs_mode":Internal.MekKeyBinding,"key.modernfix.config":Internal.KeyBinding,"quark.emote.facepalm":Internal.SortedKeyBinding,"key.playerlist":Internal.KeyBinding,"key.craftingtweaks.balance":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.charging":Internal.KeyBinding,"Dress World":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.block_tracker.module.misc":Internal.KeyBinding,"key.immersiveengineering.railgunZoom":Internal.KeyBinding,"pneumaticcraft.armor.options":Internal.KeyBinding,"key.sprint":Internal.ToggleableKeyBinding,"quark.emote.think":Internal.SortedKeyBinding,"key.openNotes":Internal.KeyBinding,"key.mekanism.description":Internal.MekKeyBinding,"key.inventoryhud.togglearm":Internal.KeyBinding,"key.debugInfo":Internal.KeyBinding,"key.occultism.familiar.otherworld_bird":Internal.KeyBinding,"key.inventoryhud.togglepot":Internal.KeyBinding,"key.craftingtweaks.decompressStack":Internal.KeyBinding,"key.losttrinkets.magneto":Internal.KeyBinding,"key.integratedadditions.copy":Internal.KeyBinding,"key.occultism.familiar.cthulhu_familiar":Internal.KeyBinding,"key.dismount":Internal.KeyBinding,"key.mekanism.details":Internal.MekKeyBinding,"key.smoothCamera":Internal.KeyBinding,"jecalculation.key.gui_math":Internal.KeyBinding,"key.cofh.mode_change_increment":Internal.KeyBindingModeChange$Increment,"key.invtweaks_sort_inventory.desc":Internal.KeyBinding,"Add Block":Internal.KeyBinding,"key.jei.previousCategory":Internal.KeyBinding,"key.pause":Internal.KeyBinding,"key.clienttweaks.hideOffhandItem":Internal.KeyBinding,"ping.key.look":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.entity_tracker":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.block_tracker":Internal.KeyBinding,"key.losttrinkets.trinket":Internal.KeyBinding,"key.mekanism.feet_mode":Internal.MekKeyBinding,"key.craftingtweaks.compressStack":Internal.KeyBinding,"key.enchdesc.show":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.block_tracker.module.inventories":Internal.KeyBinding,"key.integratedadditions.clear":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.jump_boost":Internal.KeyBinding,"key.occultism.familiar.guardian_familiar":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.reach_distance":Internal.KeyBinding,"Strip World":Internal.KeyBinding,"key.pickItem":Internal.KeyBinding,"key.socialInteractions":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.coordinate_tracker":Internal.KeyBinding,"key.craftingtweaks.rotate_counter_clockwise":Internal.KeyBinding,"key.occultism.familiar.greedy_familiar":Internal.KeyBinding,"quark.keybind.patreon_emote.tpose":Internal.SortedKeyBinding,"pneumaticcraft.armor.upgrade.air_conditioning":Internal.KeyBinding,"key.right":Internal.KeyBinding,"bloodmagic.keybind.cycle_holding_neg":Internal.KeyBindingBloodMagic,"pneumaticcraft.armor.upgrade.jet_boots.module.flight_stabilizers":Internal.KeyBinding,"pneumaticcraft.boots.jet_boots":Internal.KeyBinding,"quark.keybind.patreon_emote.dab":Internal.SortedKeyBinding,"key.inventoryhud.openconfig":Internal.KeyBinding,"key.jei.toggleBookmarkOverlay":Internal.KeyBinding,"pneumaticcraft.armor.upgrade.jet_boots":Internal.KeyBinding,"key.toggleVisible":Internal.KeyBinding,"key.buildinggadgets.settings_menu":Internal.KeyBinding};
        field_74512_d: Internal.InputMappings$Input;
        get keyBinding(): Internal.KeyBinding;
        get keyModifier(): Internal.KeyModifier;
        get conflictContextAndModifierActive(): boolean;
        get keyConflictContext(): Internal.IKeyConflictContext;
        get keyModifierDefault(): Internal.KeyModifier;
        get key(): Internal.InputMappings$Input;
        set keyConflictContext(arg0: Internal.IKeyConflictContext);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.IKeyConflictContext, arg2: Internal.KeyModifier, arg3: Internal.InputMappings$Type, arg4: number, arg5: string);
        constructor(arg0: string, arg1: Internal.InputMappings$Type, arg2: number, arg3: string);
        constructor(arg0: string, arg1: number, arg2: string);
        constructor(arg0: string, arg1: Internal.IKeyConflictContext, arg2: Internal.KeyModifier, arg3: Internal.InputMappings$Input, arg4: string);
        constructor(arg0: string, arg1: Internal.IKeyConflictContext, arg2: Internal.InputMappings$Input, arg3: string);
        constructor(arg0: string, arg1: Internal.IKeyConflictContext, arg2: Internal.InputMappings$Type, arg3: number, arg4: string);
    }
    type KeyBinding_ = KeyBinding;
    abstract class SyncedTileEntity extends Internal.TileEntity {
        requestModelDataUpdate(): void;
        causeBlockUpdate(): void;
        sendData(): void;
        writeToClient(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        readClientUpdate(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        notifyUpdate(): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        containedChunk(): Internal.Chunk;
        getTileEntity(): Internal.TileEntity;
        packetTarget(): Internal.PacketDistributor$PacketTarget;
        onLoad(): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TileEntityType<any>);
    }
    type SyncedTileEntity_ = SyncedTileEntity;
    interface Config extends Internal.UnmodifiableConfig {
        add(arg0: Internal.List<string>, arg1: any): boolean;
        add(arg0: string, arg1: any): boolean;
        set<T_>(arg0: string, arg1: any): T_;
        set<T_>(arg0: Internal.List<string>, arg1: any): T_;
        entrySet(): Internal.Set<Internal.Config$Entry>;
        clear(): void;
        update(arg0: string, arg1: any): void;
        update(arg0: Internal.List<string>, arg1: any): void;
        remove<T_>(arg0: Internal.List<string>): T_;
        remove<T_>(arg0: string): T_;
        removeAll(arg0: Internal.UnmodifiableConfig): void;
        unmodifiable(): Internal.UnmodifiableConfig;
        addAll(arg0: Internal.UnmodifiableConfig): void;
        putAll(arg0: Internal.UnmodifiableConfig): void;
        valueMap(): Internal.Map<string, any>;
        checked(): Internal.Config;
        createSubConfig(): Internal.Config;
    }
    type Config_ = Config;
    abstract class AbstractInt2ObjectMap <V> extends Internal.AbstractInt2ObjectFunction<V> implements Internal.Int2ObjectMap<V>, Internal.Serializable {
        getOrDefault(arg0: any, arg1: V): V;
        getOrDefault(arg0: number, arg1: V): V;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<number, V>>;
        entrySet(): Internal.Set<any>;
        apply(arg0: number): V;
        apply(arg0: number): V;
        forEach(arg0: Internal.BiConsumer_<number, V>): void;
        containsKey(arg0: any): boolean;
        computeIfAbsent(arg0: any, arg1: Internal.Function_<any,any>): any;
        computeIfAbsent(arg0: number, arg1: Internal.IntFunction_<V>): V;
        computeIfAbsent(arg0: number, arg1: Internal.Function_<number, V>): V;
        values(): Internal.ObjectCollection<V>;
        values(): Internal.Collection<any>;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        clear(): void;
        isEmpty(): boolean;
        computeIfAbsentPartial(arg0: number, arg1: Internal.Int2ObjectFunction_<V>): V;
        replaceAll(arg0: Internal.BiFunction_<number, V, V>): void;
        andThen<V_>(arg0: Internal.Function_<V, V_>): Internal.Function<number, V_>;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        put(arg0: number, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: number): V;
        remove(arg0: number, arg1: any): boolean;
        remove(arg0: any, arg1: any): boolean;
        containsValue(arg0: any): boolean;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        compute(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        int2ObjectEntrySet(): Internal.ObjectSet<Internal.Int2ObjectMap$Entry<V>>;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compose<V_>(arg0: Internal.Function_<V_, number>): Internal.Function<V_, V>;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        get(arg0: any): V;
        putAll(arg0: Internal.Map_<number, V>): void;
        putIfAbsent(arg0: number, arg1: V): V;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: number, arg1: V): V;
        keySet(): Internal.IntSet;
        keySet(): Internal.Set<any>;
        get empty(): boolean;
    }
    type AbstractInt2ObjectMap_<V> = AbstractInt2ObjectMap<V>;
    class SuggestionsBuilder extends Document.Object {
        add(arg0: Internal.SuggestionsBuilder): Internal.SuggestionsBuilder;
        createOffset(arg0: number): Internal.SuggestionsBuilder;
        getStart(): number;
        restart(): Internal.SuggestionsBuilder;
        build(): Internal.Suggestions;
        buildFuture(): Internal.CompletableFuture<Internal.Suggestions>;
        getRemaining(): string;
        suggest(arg0: string): Internal.SuggestionsBuilder;
        suggest(arg0: string, arg1: Internal.Message_): Internal.SuggestionsBuilder;
        suggest(arg0: number, arg1: Internal.Message_): Internal.SuggestionsBuilder;
        suggest(arg0: number): Internal.SuggestionsBuilder;
        getInput(): string;
        get input(): string;
        get start(): number;
        get remaining(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: number);
    }
    type SuggestionsBuilder_ = SuggestionsBuilder;
    class RecipeTypeJS extends Document.Object {
        getMod(): string;
        isCustom(): boolean;
        getId(): string;
        getIdRL(): ResourceLocation;
        readonly factory: java_.util.function_.Supplier<Internal.RecipeJS>;
        readonly serializer: Internal.IRecipeSerializer<any>;
        get mod(): string;
        get idRL(): ResourceLocation;
        get custom(): boolean;
        get id(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(s: Internal.IRecipeSerializer<any>, f: java_.util.function_.Supplier<Internal.RecipeJS>);
    }
    type RecipeTypeJS_ = RecipeTypeJS;
    class ChunkPrimerWrapper extends Internal.ChunkPrimer implements Internal.IChunk, Internal.ExtendedChunk {
        func_217301_I(): number;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        getWorldForge(): Internal.IWorld;
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        func_212247_j(): Internal.ITickList<any>;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_76625_h(): number;
        func_76606_c(arg0: number, arg1: number): boolean;
        func_217298_h(arg0: BlockPos): number;
        func_217336_u(): Internal.Chunk;
        func_242403_h(arg0: BlockPos): number;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        func_186031_y(): Internal.ChunkSection;
        func_205218_i_(): Internal.ITickList<any>;
        get worldForge(): Internal.IWorld;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Chunk);
    }
    type ChunkPrimerWrapper_ = ChunkPrimerWrapper;
    class FireballEntity extends Internal.AbstractFireballEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_92057_e: number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number);
        constructor(arg0: Internal.EntityType<Internal.FireballEntity>, arg1: Internal.World);
    }
    type FireballEntity_ = FireballEntity;
    interface Map$Entry <K, V> {
        getKey(): K;
        getValue(): V;
        hashCode(): number;
        setValue(arg0: V): V;
        equals(arg0: any): boolean;
    }
    type Map$Entry_<K, V> = Map$Entry<K, V>;
    interface RenderableImage {
        createRendering(arg0: Internal.RenderContext): Internal.RenderedImage;
        getHeight(): number;
        isDynamic(): boolean;
        getProperty(arg0: string): any;
        createScaledRendering(arg0: number, arg1: number, arg2: Internal.RenderingHints): Internal.RenderedImage;
        getPropertyNames(): string[];
        createDefaultRendering(): Internal.RenderedImage;
        getSources(): Internal.Vector<Internal.RenderableImage>;
        getWidth(): number;
        getMinX(): number;
        getMinY(): number;
    }
    type RenderableImage_ = RenderableImage;
    class EnergyConversionRecipeJS extends Internal.MekanismRecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EnergyConversionRecipeJS_ = EnergyConversionRecipeJS;
    class GossipManager extends Document.Object {
        func_234057_a_(arg0: Internal.Dynamic<any>): void;
        func_220916_a(arg0: Internal.UUID, arg1: Internal.GossipType_, arg2: number): void;
        func_234058_a_<T_>(arg0: Internal.DynamicOps<T_>): Internal.Dynamic<T_>;
        func_223538_b(): void;
        func_220912_a(arg0: Internal.GossipManager, arg1: Internal.Random, arg2: number): void;
        func_220921_a(arg0: Internal.UUID, arg1: Internal.Predicate_<Internal.GossipType_>): number;
        readonly field_220928_a: Internal.Map<Internal.UUID, Internal.GossipManager$Gossips>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type GossipManager_ = GossipManager;
    class FoliagePlacer$Foliage extends Document.Object {
        func_236765_c_(): boolean;
        func_236763_a_(): BlockPos;
        func_236764_b_(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: BlockPos, arg1: number, arg2: boolean);
    }
    type FoliagePlacer$Foliage_ = FoliagePlacer$Foliage;
    abstract class GlyphVector extends Document.Object implements Internal.Cloneable {
        setGlyphPosition(arg0: number, arg1: Internal.Point2D): void;
        getGlyphCodes(arg0: number, arg1: number, arg2: number[]): number[];
        getGlyphPosition(arg0: number): Internal.Point2D;
        getGlyphPixelBounds(arg0: number, arg1: Internal.FontRenderContext, arg2: number, arg3: number): Internal.Rectangle;
        getLogicalBounds(): Internal.Rectangle2D;
        getGlyphCharIndices(arg0: number, arg1: number, arg2: number[]): number[];
        getGlyphLogicalBounds(arg0: number): Internal.Shape;
        getPixelBounds(arg0: Internal.FontRenderContext, arg1: number, arg2: number): Internal.Rectangle;
        getVisualBounds(): Internal.Rectangle2D;
        getNumGlyphs(): number;
        getGlyphTransform(arg0: number): Internal.AffineTransform;
        getGlyphCharIndex(arg0: number): number;
        getOutline(arg0: number, arg1: number): Internal.Shape;
        getOutline(): Internal.Shape;
        getGlyphJustificationInfo(arg0: number): Internal.GlyphJustificationInfo;
        performDefaultLayout(): void;
        getFontRenderContext(): Internal.FontRenderContext;
        getGlyphMetrics(arg0: number): Internal.GlyphMetrics;
        equals(arg0: Internal.GlyphVector): boolean;
        getGlyphVisualBounds(arg0: number): Internal.Shape;
        getFont(): Internal.Font;
        getGlyphPositions(arg0: number, arg1: number, arg2: number[]): number[];
        getGlyphCode(arg0: number): number;
        getGlyphOutline(arg0: number): Internal.Shape;
        getGlyphOutline(arg0: number, arg1: number, arg2: number): Internal.Shape;
        setGlyphTransform(arg0: number, arg1: Internal.AffineTransform): void;
        getLayoutFlags(): number;
        static readonly FLAG_HAS_TRANSFORMS: 1;
        static readonly FLAG_HAS_POSITION_ADJUSTMENTS: 2;
        static readonly FLAG_MASK: 15;
        static readonly FLAG_COMPLEX_GLYPHS: 8;
        static readonly FLAG_RUN_RTL: 4;
        get outline(): Internal.Shape;
        get logicalBounds(): Internal.Rectangle2D;
        get numGlyphs(): number;
        get fontRenderContext(): Internal.FontRenderContext;
        get visualBounds(): Internal.Rectangle2D;
        get font(): Internal.Font;
        get layoutFlags(): number;
    }
    type GlyphVector_ = GlyphVector;
    class FireworkRocketEntity extends Internal.ProjectileEntity implements Internal.IRendersAsItem, Internal.FireworkRocketEntityKJS {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_184543_l(): Internal.ItemStack;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        setLifetimeKJS(arg0: number): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_213889_i(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213281_b(arg0: Internal.CompoundNBT_): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70037_a(arg0: Internal.CompoundNBT_): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_92055_b: number;
        static readonly field_184566_a: Internal.DataParameter<Internal.ItemStack>;
        static readonly field_191512_b: Internal.DataParameter<Internal.OptionalInt>;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        set lifetimeKJS(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: Internal.ItemStack, arg2: Internal.Entity, arg3: number, arg4: number, arg5: number, arg6: boolean);
        constructor(arg0: Internal.World, arg1: Internal.ItemStack, arg2: number, arg3: number, arg4: number, arg5: boolean);
        constructor(arg0: Internal.World, arg1: Internal.ItemStack, arg2: Internal.LivingEntity);
        constructor(arg0: Internal.EntityType<Internal.FireworkRocketEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: Internal.ItemStack);
        constructor(arg0: Internal.World, arg1: Internal.Entity, arg2: number, arg3: number, arg4: number, arg5: Internal.ItemStack);
    }
    type FireworkRocketEntity_ = FireworkRocketEntity;
    class InsolatorRecipeJS extends Internal.ThermalRecipeJS {
        minTicks(arg0: number): Internal.InsolatorRecipeJS;
        waterMod(arg0: number): Internal.InsolatorRecipeJS;
        experience(arg0: number): Internal.InsolatorRecipeJS;
        water(arg0: number): Internal.InsolatorRecipeJS;
        inKey: string;
        outKey: string;
        outputFluids: Internal.ArrayList<Internal.FluidStackJS>;
        inputFluids: Internal.ArrayList<Internal.FluidIngredient>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type InsolatorRecipeJS_ = InsolatorRecipeJS;
    class LogicalSide extends Internal.Enum<Internal.LogicalSide> {
        isServer(): boolean;
        static valueOf(arg0: string): Internal.LogicalSide;
        static values(): Internal.LogicalSide[];
        isClient(): boolean;
        static readonly SERVER: Internal.LogicalSide;
        static readonly CLIENT: Internal.LogicalSide;
        get server(): boolean;
        get client(): boolean;
    }
    type LogicalSide_ = "client" | "server" | LogicalSide;
    interface IConstellation extends Internal.IForgeRegistryEntry<Internal.IConstellation>, Internal.Comparable<Internal.IConstellation> {
        getEngravingEffect(): Internal.EngravingEffect;
        getStars(): Internal.List<Internal.StarLocation>;
        getConstellationSignatureItems(): Internal.List<Internal.Ingredient>;
        getStarConnections(): Internal.List<Internal.StarConnection>;
        getTranslationKey(): string;
        getSortingId(): number;
        addConnection(arg0: Internal.StarLocation, arg1: Internal.StarLocation): Internal.StarConnection;
        getConstellationColor(): java_.awt.Color;
        getConstellationName(): Internal.IFormattableTextComponent;
        getConstellationTypeDescription(): Internal.IFormattableTextComponent;
        canDiscover(arg0: Internal.PlayerEntity, arg1: Internal.PlayerProgress): boolean;
        getRegistryType(): Internal.Class<Internal.IConstellation>;
        getConstellationEnchantmentDescription(): Internal.IFormattableTextComponent;
        getTierRenderColor(): java_.awt.Color;
        addStar(arg0: number, arg1: number): Internal.StarLocation;
        getSimpleName(): string;
        addSignatureItem(arg0: java_.util.function_.Supplier_<Internal.Ingredient_>): Internal.IConstellation;
        addSignatureItem(arg0: Internal.ITag<Internal.Item>): Internal.IConstellation;
        addSignatureItem(arg0: Internal.IItemProvider_): Internal.IConstellation;
        addSignatureItem(arg0: Internal.ItemStack): Internal.IConstellation;
        getConstellationDescription(): Internal.IFormattableTextComponent;
        writeToNBT(arg0: Internal.CompoundNBT_, arg1: string): void;
        writeToNBT(arg0: Internal.CompoundNBT_): void;
        getConstellationTag(): Internal.IFormattableTextComponent;
    }
    type IConstellation_ = Registry.astralsorcery.constellations | IConstellation;
    class ParsedArgument <S, T> extends Document.Object {
        getRange(): Internal.StringRange;
        getResult(): T;
        get result(): T;
        get range(): Internal.StringRange;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: T);
    }
    type ParsedArgument_<S, T> = ParsedArgument<S, T>;
    interface IBiomeArray {
        setBiome(arg0: Internal.Biome_, arg1: BlockPos): void;
        (arg0: Internal.Biome, arg1: BlockPos): void;
    }
    type IBiomeArray_ = ((arg0: Internal.Biome, arg1: BlockPos)=>void) | IBiomeArray;
    class Vector4f extends Document.Object {
        setW(arg0: number): void;
        setY(arg0: number): void;
        setX(arg0: number): void;
        set(arg0: number[]): void;
        func_229372_a_(arg0: Internal.Matrix4f): void;
        func_229373_a_(arg0: Internal.Vector4f): number;
        func_229374_e_(): boolean;
        func_195915_d(): number;
        setZ(arg0: number): void;
        func_195909_a(arg0: Internal.Vector3f): void;
        func_229375_f_(): void;
        func_195913_b(): number;
        func_195914_c(): number;
        func_195911_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_195910_a(): number;
        func_195912_a(arg0: Internal.Quaternion): void;
        set w(arg0: number);
        set x(arg0: number);
        set y(arg0: number);
        set z(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Vector3f);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
        constructor();
    }
    type Vector4f_ = Vector4f;
    interface ImmutableStringReader {
        getCursor(): number;
        getRemainingLength(): number;
        getTotalLength(): number;
        canRead(): boolean;
        canRead(arg0: number): boolean;
        getRemaining(): string;
        getRead(): string;
        getString(): string;
        peek(arg0: number): string;
        peek(): string;
    }
    type ImmutableStringReader_ = ImmutableStringReader;
    interface MerchantContainerAccessor {
        setTrader(arg0: Internal.IMerchant): void;
        setTradeContainer(arg0: Internal.MerchantInventory): void;
    }
    type MerchantContainerAccessor_ = MerchantContainerAccessor;
    class ModelBakery extends Document.Object implements Internal.AccessorModelBakery {
        getBakedModel(arg0: ResourceLocation_, arg1: Internal.IModelTransform, arg2: Internal.Function_<Internal.RenderMaterial_, Internal.TextureAtlasSprite_>): Internal.IBakedModel;
        func_209597_a(arg0: ResourceLocation_): Internal.IUnbakedModel;
        handler$bap000$bakeContainsKeyInjected(arg0: ResourceLocation_, arg1: Internal.IModelTransform, arg2: Internal.Function_<any,any>, arg3: Internal.CallbackInfoReturnable<any>, arg4: Internal.Triple<any, any, any>): void;
        getSpriteMap(): Internal.SpriteMap;
        static func_209605_a(arg0: Internal.StateContainer<Internal.Block, Internal.BlockState>, arg1: string): Internal.Predicate<Internal.BlockState>;
        func_217845_a(arg0: ResourceLocation_, arg1: Internal.IModelTransform): Internal.IBakedModel;
        func_209593_a(arg0: ResourceLocation_, arg1: Internal.IUnbakedModel): void;
        func_217846_a(): Internal.Map<ResourceLocation, Internal.IBakedModel>;
        getSpecialModels(): Internal.Set<ResourceLocation>;
        func_229333_a_(arg0: Internal.TextureManager, arg1: Internal.IProfiler): Internal.SpriteMap;
        func_225354_b(): Internal.Object2IntMap<Internal.BlockState>;
        static getMaterials_$md$e571c7$0(): Internal.Set<any>;
        redirect$bap000$bakeContainsKeyRedirected(arg0: Internal.Map_<any,any>, arg1: any): boolean;
        static readonly field_207763_a: Internal.RenderMaterial;
        static readonly field_229318_i_: [undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined];
        static readonly field_229319_j_: [undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined];
        static readonly field_207764_b: Internal.RenderMaterial;
        static readonly field_207766_d: Internal.RenderMaterial;
        static readonly field_207769_g: Internal.RenderMaterial;
        static readonly field_177604_a: Internal.ModelResourceLocation;
        static readonly field_229320_k_: [undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined];
        static readonly field_207768_f: Internal.RenderMaterial;
        static readonly field_177602_b: Internal.Set<Internal.RenderMaterial>;
        static readonly field_188641_d: "{    \"textures\": {       \"particle\": \"missingno\",       \"missingno\": \"missingno\"    },    \"elements\": [         {  \"from\": [ 0, 0, 0 ],            \"to\": [ 16, 16, 16 ],            \"faces\": {                \"down\":  { \"uv\": [ 0, 0, 16, 16 ], \"cullface\": \"down\",  \"texture\": \"#missingno\" },                \"up\":    { \"uv\": [ 0, 0, 16, 16 ], \"cullface\": \"up\",    \"texture\": \"#missingno\" },                \"north\": { \"uv\": [ 0, 0, 16, 16 ], \"cullface\": \"north\", \"texture\": \"#missingno\" },                \"south\": { \"uv\": [ 0, 0, 16, 16 ], \"cullface\": \"south\", \"texture\": \"#missingno\" },                \"west\":  { \"uv\": [ 0, 0, 16, 16 ], \"cullface\": \"west\",  \"texture\": \"#missingno\" },                \"east\":  { \"uv\": [ 0, 0, 16, 16 ], \"cullface\": \"east\",  \"texture\": \"#missingno\" }            }        }    ]}";
        static field_209607_C: {};
        static readonly field_229315_f_: Internal.RenderMaterial;
        static readonly field_229317_h_: Internal.RenderMaterial;
        static readonly field_177606_o: Internal.BlockModel;
        static readonly field_229316_g_: Internal.RenderMaterial;
        static readonly field_177616_r: Internal.BlockModel;
        get spriteMap(): Internal.SpriteMap;
        get materials_$md$e571c7$0(): Internal.Set<any>;
        get specialModels(): Internal.Set<ResourceLocation>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IResourceManager, arg1: Internal.BlockColors, arg2: Internal.IProfiler, arg3: number);
    }
    type ModelBakery_ = ModelBakery;
    class SaveFormat$LevelSave extends Document.Object implements Internal.AutoCloseable, Internal.ILevelSave {
        func_237296_d_(): Internal.WorldSummary;
        func_237297_e_(): Internal.DatapackCodec;
        func_237300_h_(): number;
        func_237299_g_(): void;
        func_237292_b_(): Internal.PlayerData;
        func_237298_f_(): Internal.File;
        func_237290_a_(arg0: string): void;
        func_237291_a_(arg0: Internal.RegistryKey<Internal.World>): Internal.File;
        runWorldPersistenceHooks(format: Internal.SaveFormat): void;
        func_237295_c_(): boolean;
        func_237285_a_(arg0: Internal.FolderName): Internal.Path;
        func_237284_a_(arg0: Internal.DynamicOps<Internal.INBT>, arg1: Internal.DatapackCodec): Internal.IServerConfiguration;
        getWorldDir(): Internal.Path;
        func_237282_a_(): string;
        func_237288_a_(arg0: Internal.DynamicRegistries, arg1: Internal.IServerConfiguration, arg2: Internal.CompoundNBT_): void;
        func_237283_a_(arg0: Internal.IProgressUpdate): boolean;
        close(): void;
        func_237287_a_(arg0: Internal.DynamicRegistries, arg1: Internal.IServerConfiguration): void;
        get worldDir(): Internal.Path;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SaveFormat, arg1: string);
    }
    type SaveFormat$LevelSave_ = SaveFormat$LevelSave;
    class PropertyMap extends Internal.ForwardingMultimap<string, com.mojang.authlib.properties.Property> {
        forEach(arg0: Internal.BiConsumer_<string, com.mojang.authlib.properties.Property_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PropertyMap_ = PropertyMap;
    class AllSpecialTextures extends Internal.Enum<Internal.AllSpecialTextures> {
        getLocation(): ResourceLocation;
        bind(): void;
        static valueOf(arg0: string): Internal.AllSpecialTextures;
        static values(): Internal.AllSpecialTextures[];
        static readonly BLANK: Internal.AllSpecialTextures;
        static readonly CUTOUT_CHECKERED: Internal.AllSpecialTextures;
        static readonly CHECKERED: Internal.AllSpecialTextures;
        static readonly THIN_CHECKERED: Internal.AllSpecialTextures;
        static readonly ASSET_PATH: "textures/special/";
        static readonly SELECTION: Internal.AllSpecialTextures;
        static readonly HIGHLIGHT_CHECKERED: Internal.AllSpecialTextures;
        get location(): ResourceLocation;
    }
    type AllSpecialTextures_ = "blank" | "checkered" | "thin_checkered" | "cutout_checkered" | "highlight_checkered" | "selection" | AllSpecialTextures;
    class SMountEntityPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149403_d(): number;
        func_149402_e(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity, arg1: Internal.Entity);
    }
    type SMountEntityPacket_ = SMountEntityPacket;
    interface ICustomDataHolder {
        setVariable(arg0: boolean): void;
        getVariable(): boolean;
    }
    type ICustomDataHolder_ = ICustomDataHolder;
    abstract class RectangularShape extends Document.Object implements Internal.Shape, Internal.Cloneable {
        intersects(arg0: Internal.Rectangle2D): boolean;
        intersects(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        getFrame(): Internal.Rectangle2D;
        getMaxX(): number;
        isEmpty(): boolean;
        getMaxY(): number;
        getWidth(): number;
        getBounds(): Internal.Rectangle;
        setFrameFromCenter(arg0: Internal.Point2D, arg1: Internal.Point2D): void;
        setFrameFromCenter(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setFrameFromDiagonal(arg0: Internal.Point2D, arg1: Internal.Point2D): void;
        setFrameFromDiagonal(arg0: number, arg1: number, arg2: number, arg3: number): void;
        getHeight(): number;
        getX(): number;
        contains(arg0: Internal.Point2D): boolean;
        contains(arg0: Internal.Rectangle2D): boolean;
        contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        contains(arg0: number, arg1: number): boolean;
        getY(): number;
        getPathIterator(arg0: Internal.AffineTransform, arg1: number): Internal.PathIterator;
        getPathIterator(arg0: Internal.AffineTransform): Internal.PathIterator;
        setFrame(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setFrame(arg0: Internal.Rectangle2D): void;
        setFrame(arg0: Internal.Point2D, arg1: Internal.Dimension2D): void;
        getBounds2D(): Internal.Rectangle2D;
        clone(): any;
        getCenterY(): number;
        getCenterX(): number;
        getMinX(): number;
        getMinY(): number;
        get centerY(): number;
        get centerX(): number;
        get maxY(): number;
        get maxX(): number;
        get bounds2D(): Internal.Rectangle2D;
        get empty(): boolean;
        get minY(): number;
        get minX(): number;
        get width(): number;
        get bounds(): Internal.Rectangle;
        get x(): number;
        get y(): number;
        get frame(): Internal.Rectangle2D;
        get height(): number;
        set frame(arg0: Internal.Rectangle2D);
    }
    type RectangularShape_ = RectangularShape;
    class ToolEquipmentChangeEvent extends Internal.LivingEvent {
        getContext(): Internal.EquipmentChangeContext;
        get context(): Internal.EquipmentChangeContext;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.EquipmentChangeContext);
    }
    type ToolEquipmentChangeEvent_ = ToolEquipmentChangeEvent;
    class ThermoConfig extends Internal.GeneratorConfig {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type ThermoConfig_ = ThermoConfig;
    interface DoubleList extends Internal.List<number>, Internal.Comparable<Internal.List<number>>, Internal.DoubleCollection {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        add(arg0: number, arg1: any): void;
        add(arg0: number): boolean;
        add(arg0: number, arg1: number): void;
        add(arg0: number, arg1: number): void;
        subList(arg0: number, arg1: number): Internal.DoubleList;
        subList(arg0: number, arg1: number): Internal.List<any>;
        set(arg0: number, arg1: any): any;
        set(arg0: number, arg1: number): number;
        set(arg0: number, arg1: number): number;
        getDouble(arg0: number): number;
        removeElements(arg0: number, arg1: number): void;
        remove(arg0: number): number;
        remove(arg0: number): any;
        remove(arg0: any): boolean;
        lastIndexOf(arg0: number): number;
        lastIndexOf(arg0: any): number;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.DoubleIterator;
        iterator(): Internal.DoubleListIterator;
        size(arg0: number): void;
        addAll(arg0: Internal.DoubleList): boolean;
        addAll(arg0: number, arg1: Internal.DoubleCollection): boolean;
        addAll(arg0: number, arg1: Internal.DoubleList): boolean;
        addElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
        addElements(arg0: number, arg1: number[]): void;
        removeDouble(arg0: number): number;
        getElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
        get(arg0: number): number;
        get(arg0: number): any;
        listIterator(arg0: number): Internal.ListIterator<any>;
        listIterator(arg0: number): Internal.DoubleListIterator;
        listIterator(): Internal.DoubleListIterator;
        listIterator(): Internal.ListIterator<any>;
        indexOf(arg0: any): number;
        indexOf(arg0: number): number;
    }
    type DoubleList_ = DoubleList;
    interface ProgressiveFuture <V> extends Internal.Future<V> {
        removeListeners(...arg0: Internal.GenericFutureListener<Internal.Future<V>>[]): Internal.ProgressiveFuture<V>;
        syncUninterruptibly(): Internal.ProgressiveFuture<V>;
        await(): Internal.ProgressiveFuture<V>;
        awaitUninterruptibly(): Internal.ProgressiveFuture<V>;
        removeListener(arg0: Internal.GenericFutureListener_<Internal.Future_<V>>): Internal.ProgressiveFuture<V>;
        addListeners(...arg0: Internal.GenericFutureListener<Internal.Future<V>>[]): Internal.ProgressiveFuture<V>;
        sync(): Internal.ProgressiveFuture<V>;
        addListener(arg0: Internal.GenericFutureListener_<Internal.Future_<V>>): Internal.ProgressiveFuture<V>;
    }
    type ProgressiveFuture_<V> = ProgressiveFuture<V>;
    class SRespawnPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_149083_e(): Internal.GameType;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_240829_g_(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_244303_b(): Internal.DimensionType;
        func_240828_f_(): boolean;
        func_240830_h_(): boolean;
        func_240827_c_(): Internal.RegistryKey<Internal.World>;
        func_241788_f_(): Internal.GameType;
        func_229747_c_(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.DimensionType, arg1: Internal.RegistryKey<Internal.World>, arg2: number, arg3: Internal.GameType, arg4: Internal.GameType, arg5: boolean, arg6: boolean, arg7: boolean);
    }
    type SRespawnPacket_ = SRespawnPacket;
    abstract class EntityComplexFX extends Document.Object {
        getAge(): number;
        move<T_>(arg0: Internal.Vector3): T_;
        setMaxAge<T_>(arg0: number): T_;
        getOrCreateData<T_>(arg0: string, arg1: java_.util.function_.Supplier_<T_>): T_;
        refresh<T_>(arg0: Internal.RefreshFunction_<any>): T_;
        addPosition<T_>(arg0: Internal.Vector3): T_;
        getId(): number;
        tick(): void;
        requestRemoval(): void;
        flagAsRemoved(): void;
        getAgeRefreshCount(): number;
        setPosition<T_>(arg0: Internal.Vector3): T_;
        canRemove(): boolean;
        isRemoved(): boolean;
        setActive(): void;
        getPosition(): Internal.Vector3;
        getMaxAge(): number;
        resetLifespan(): void;
        getData<T_>(arg0: string): T_;
        get removed(): boolean;
        get maxAge(): number;
        get id(): number;
        get position(): Internal.Vector3;
        get ageRefreshCount(): number;
        get age(): number;
        set maxAge(arg0: number);
        set position(arg0: Internal.Vector3);
    }
    type EntityComplexFX_ = EntityComplexFX;
    interface EntityAccess {
        setRemainingFireTicks(arg0: number): void;
        getRemainingFireTicks(): number;
    }
    type EntityAccess_ = EntityAccess;
    class SimpleTexture extends Internal.Texture {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type SimpleTexture_ = SimpleTexture;
    interface EntityKJS extends Internal.AsKJS {
        getPersistentDataKJS(): Internal.CompoundNBT;
        asKJS(): any;
        (): Internal.CompoundNBT;
    }
    type EntityKJS_ = (()=>Internal.CompoundNBT) | EntityKJS;
    abstract class AbstractReferenceCountedByteBuf extends Internal.AbstractByteBuf {
        retain(): Internal.ReferenceCounted;
        retain(arg0: number): Internal.ReferenceCounted;
        touch(arg0: any): Internal.ReferenceCounted;
        touch(): Internal.ReferenceCounted;
    }
    type AbstractReferenceCountedByteBuf_ = AbstractReferenceCountedByteBuf;
    /**
    */
    class AttachedData extends Internal.HashMap<string, any> {
        getParent(): any;
        get parent(): any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(p: any);
        [x: string]: any;
    }
    type AttachedData_ = AttachedData;
    class EvokerFangsEntity extends Internal.Entity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        func_190552_j(): Internal.LivingEntity;
        canRiderInteract(): boolean;
        func_190549_a(arg0: Internal.LivingEntity): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_190550_a(arg0: number): number;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.EvokerFangsEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.LivingEntity);
    }
    type EvokerFangsEntity_ = EvokerFangsEntity;
    interface LogBuilder {
        withLocation(): Internal.LogBuilder;
        withLocation(location: Internal.StackTraceElement): Internal.LogBuilder;
        log(message: string, p0: any, p1: any, p2: any, p3: any): void;
        log(message: string, p0: any, p1: any, p2: any, p3: any, p4: any): void;
        log(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
        log(message: string, p0: any, p1: any, p2: any): void;
        log(message: string, p0: any, p1: any): void;
        log(message: string, p0: any): void;
        log(): void;
        log(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
        log(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
        log(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
        log(message: string, p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
        log(message: string, ...params: Internal.Supplier<any>[]): void;
        log(message: string, ...params: any[]): void;
        log(message: string): void;
        log(message: Internal.CharSequence): void;
        log(message: any): void;
        log(messageSupplier: Internal.Supplier_<org.apache.logging.log4j.message.Message_>): void;
        log(message: org.apache.logging.log4j.message.Message): void;
        withMarker(marker: Internal.Marker): Internal.LogBuilder;
        withThrowable(throwable: Internal.Throwable): Internal.LogBuilder;
    }
    type LogBuilder_ = LogBuilder;
    class BushFoliagePlacer extends Internal.BlobFoliagePlacer {
        static readonly field_236743_c_: Internal.Codec<Internal.BushFoliagePlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FeatureSpread, arg1: Internal.FeatureSpread, arg2: number);
    }
    type BushFoliagePlacer_ = BushFoliagePlacer;
    class ActionResultType extends Internal.Enum<Internal.ActionResultType> {
        static func_233537_a_(arg0: boolean): Internal.ActionResultType;
        static valueOf(arg0: string): Internal.ActionResultType;
        static values(): Internal.ActionResultType[];
        func_226247_b_(): boolean;
        func_226246_a_(): boolean;
        static readonly SUCCESS: Internal.ActionResultType;
        static readonly PASS: Internal.ActionResultType;
        static readonly CONSUME: Internal.ActionResultType;
        static readonly FAIL: Internal.ActionResultType;
    }
    type ActionResultType_ = "success" | "consume" | "pass" | "fail" | ActionResultType;
    class EntityEvent$Size extends Internal.EntityEvent {
        getOldEyeHeight(): number;
        getNewSize(): Internal.EntitySize;
        getPose(): Internal.Pose;
        setNewSize(arg0: Internal.EntitySize): void;
        setNewSize(arg0: Internal.EntitySize, arg1: boolean): void;
        getOldSize(): Internal.EntitySize;
        getNewEyeHeight(): number;
        setNewEyeHeight(arg0: number): void;
        get oldEyeHeight(): number;
        get pose(): Internal.Pose;
        get newSize(): Internal.EntitySize;
        get newEyeHeight(): number;
        get oldSize(): Internal.EntitySize;
        set newSize(arg0: Internal.EntitySize);
        set newEyeHeight(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity, arg1: Internal.Pose, arg2: Internal.EntitySize, arg3: Internal.EntitySize, arg4: number, arg5: number);
        constructor(arg0: Internal.Entity, arg1: Internal.Pose, arg2: Internal.EntitySize, arg3: number);
    }
    type EntityEvent$Size_ = EntityEvent$Size;
    interface ILightListener {
        func_215567_a(arg0: BlockPos, arg1: boolean): void;
        func_215566_a(arg0: Internal.SectionPos, arg1: boolean): void;
        (arg0: Internal.SectionPos, arg1: boolean): void;
    }
    type ILightListener_ = ((arg0: Internal.SectionPos, arg1: boolean)=>void) | ILightListener;
    class Pose extends Internal.Enum<Internal.Pose> {
        static valueOf(arg0: string): Internal.Pose;
        static values(): Internal.Pose[];
        static readonly SLEEPING: Internal.Pose;
        static readonly FALL_FLYING: Internal.Pose;
        static readonly DYING: Internal.Pose;
        static readonly CROUCHING: Internal.Pose;
        static readonly STANDING: Internal.Pose;
        static readonly SWIMMING: Internal.Pose;
        static readonly SPIN_ATTACK: Internal.Pose;
    }
    type Pose_ = "standing" | "fall_flying" | "sleeping" | "swimming" | "spin_attack" | "crouching" | "dying" | Pose;
    class CommandBlockTileEntity$Mode extends Internal.Enum<Internal.CommandBlockTileEntity$Mode> {
        static valueOf(arg0: string): Internal.CommandBlockTileEntity$Mode;
        static values(): Internal.CommandBlockTileEntity$Mode[];
        static readonly AUTO: Internal.CommandBlockTileEntity$Mode;
        static readonly REDSTONE: Internal.CommandBlockTileEntity$Mode;
        static readonly SEQUENCE: Internal.CommandBlockTileEntity$Mode;
    }
    type CommandBlockTileEntity$Mode_ = "sequence" | "auto" | "redstone" | CommandBlockTileEntity$Mode;
    class EndSpikeFeature$EndSpike extends Document.Object {
        func_186152_b(): number;
        func_186154_a(arg0: BlockPos): boolean;
        func_186150_e(): boolean;
        func_186151_a(): number;
        func_186148_c(): number;
        func_186149_d(): number;
        func_186153_f(): Internal.AxisAlignedBB;
        static readonly field_236357_a_: Internal.Codec<Internal.EndSpikeFeature$EndSpike>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean);
    }
    type EndSpikeFeature$EndSpike_ = EndSpikeFeature$EndSpike;
    class Criterion extends Document.Object {
        func_200287_b(): Internal.JsonElement;
        static func_232633_a_(arg0: Internal.JsonObject, arg1: Internal.ConditionArrayParser): Internal.Criterion;
        static func_192146_b(arg0: Internal.PacketBuffer): Internal.Criterion;
        static func_192142_c(arg0: Internal.PacketBuffer): Internal.Map<string, Internal.Criterion>;
        func_192143_a(): Internal.ICriterionInstance;
        static func_232634_b_(arg0: Internal.JsonObject, arg1: Internal.ConditionArrayParser): Internal.Map<string, Internal.Criterion>;
        static func_192141_a(arg0: Internal.Map_<string, Internal.Criterion_>, arg1: Internal.PacketBuffer): void;
        func_192140_a(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ICriterionInstance);
        constructor();
    }
    type Criterion_ = Criterion;
    class BufferCapabilities extends Document.Object implements Internal.Cloneable {
        isPageFlipping(): boolean;
        getFlipContents(): Internal.BufferCapabilities$FlipContents;
        isFullScreenRequired(): boolean;
        getBackBufferCapabilities(): Internal.ImageCapabilities;
        clone(): any;
        isMultiBufferAvailable(): boolean;
        getFrontBufferCapabilities(): Internal.ImageCapabilities;
        get pageFlipping(): boolean;
        get fullScreenRequired(): boolean;
        get flipContents(): Internal.BufferCapabilities$FlipContents;
        get backBufferCapabilities(): Internal.ImageCapabilities;
        get frontBufferCapabilities(): Internal.ImageCapabilities;
        get multiBufferAvailable(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ImageCapabilities, arg1: Internal.ImageCapabilities, arg2: Internal.BufferCapabilities$FlipContents);
    }
    type BufferCapabilities_ = BufferCapabilities;
    class LootPool extends Document.Object implements Internal.LootPoolMixin {
        setRolls(arg0: Internal.RandomValueRange): void;
        freeze(): void;
        getName(): string;
        getBonusRolls(): Internal.IRandomRange;
        setBonusRolls(arg0: Internal.RandomValueRange): void;
        static func_216096_a(): Internal.LootPool$Builder;
        getRolls(): Internal.IRandomRange;
        func_216091_a(arg0: Internal.Consumer_<Internal.ItemStack_>, arg1: Internal.LootContext): void;
        func_227505_a_(arg0: Internal.ValidationTracker): void;
        getConditions(): Internal.List<any>;
        getLootEntries(): Internal.List<any>;
        isFrozen(): boolean;
        get name(): string;
        get frozen(): boolean;
        get lootEntries(): Internal.List<any>;
        get rolls(): Internal.IRandomRange;
        get conditions(): Internal.List<any>;
        get bonusRolls(): Internal.IRandomRange;
    }
    type LootPool_ = LootPool;
    interface VoxelShapes$ILineConsumer {
        consume(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
    }
    type VoxelShapes$ILineConsumer_ = ((arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number)=>void) | VoxelShapes$ILineConsumer;
    abstract class TextComponent extends Document.Object implements Internal.IFormattableTextComponent {
        func_230439_a_<T_>(arg0: Internal.ITextProperties$IStyledTextAcceptor_<T_>, arg1: Internal.Style): Internal.Optional<T_>;
        func_212636_a(arg0: number): string;
        func_230438_a_<T_>(arg0: Internal.ITextProperties$ITextAcceptor_<T_>): Internal.Optional<T_>;
        getString(): string;
        func_240699_a_(arg0: Internal.TextFormatting_): Internal.IFormattableTextComponent;
        func_230529_a_(arg0: Internal.ITextComponent_): Internal.IFormattableTextComponent;
        func_241878_f(): Internal.IReorderingProcessor;
        func_240703_c_(arg0: Internal.Style): Internal.IFormattableTextComponent;
        func_240702_b_(arg0: string): Internal.IFormattableTextComponent;
        func_240700_a_(arg0: Internal.UnaryOperator<Internal.Style>): Internal.IFormattableTextComponent;
        func_230531_f_(): Internal.IFormattableTextComponent;
        func_230531_f_(): Internal.TextComponent;
        func_230532_e_(): Internal.IFormattableTextComponent;
        func_150253_a(): Internal.List<Internal.ITextComponent>;
        func_240701_a_(...arg0: Internal.TextFormatting[]): Internal.IFormattableTextComponent;
        func_230530_a_(arg0: Internal.Style): Internal.IFormattableTextComponent;
        func_230534_b_<T_>(arg0: Internal.ITextProperties$IStyledTextAcceptor_<T_>, arg1: Internal.Style): Internal.Optional<T_>;
        func_150256_b(): Internal.Style;
        func_150261_e(): string;
        func_230533_b_<T_>(arg0: Internal.ITextProperties$ITextAcceptor_<T_>): Internal.Optional<T_>;
        get string(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TextComponent_ = TextComponent;
    class BiomeContainer extends Document.Object implements Internal.BiomeManager$IBiomeReader, Internal.IBiomeArray, Internal.BiomeContainerAccess {
        static getVERTICAL_MASK_$md$e571c7$2(): number;
        getBiomes(): Internal.Biome[];
        static getWIDTH_BITS_$md$e571c7$0(): number;
        static getHORIZONTAL_MASK_$md$e571c7$1(): number;
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_227055_a_(): number[];
        setBiome(arg0: Internal.Biome_, arg1: BlockPos): void;
        field_227054_f_: Internal.Biome[];
        static readonly field_227049_a_: 1024;
        static readonly field_227051_c_: 63;
        static readonly field_227050_b_: 3;
        get biomes(): Internal.Biome[];
        get wIDTH_BITS_$md$e571c7$0(): number;
        get vERTICAL_MASK_$md$e571c7$2(): number;
        get hORIZONTAL_MASK_$md$e571c7$1(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IObjectIntIterable<Internal.Biome>, arg1: Internal.ChunkPos, arg2: Internal.BiomeProvider, arg3: number[]);
        constructor(arg0: Internal.IObjectIntIterable<Internal.Biome>, arg1: Internal.ChunkPos, arg2: Internal.BiomeProvider);
        constructor(arg0: Internal.IObjectIntIterable<Internal.Biome>, arg1: number[]);
        constructor(arg0: Internal.IObjectIntIterable<Internal.Biome>, arg1: Internal.Biome[]);
    }
    type BiomeContainer_ = BiomeContainer;
    interface VillagerTrades$ITrade {
        func_221182_a(arg0: Internal.Entity, arg1: Internal.Random): Internal.MerchantOffer;
        (arg0: Internal.Entity, arg1: Internal.Random): Internal.MerchantOffer;
    }
    type VillagerTrades$ITrade_ = ((arg0: Internal.Entity, arg1: Internal.Random)=>Internal.MerchantOffer) | VillagerTrades$ITrade;
    class AccessibleObject extends Document.Object implements Internal.AnnotatedElement {
        trySetAccessible(): boolean;
        isAccessible(): boolean;
        static setAccessible(arg0: Internal.AccessibleObject[], arg1: boolean): void;
        setAccessible(arg0: boolean): void;
        getAnnotationsByType<T_>(arg0: Internal.Class<T_>): T_[];
        getDeclaredAnnotationsByType<T_>(arg0: Internal.Class<T_>): T_[];
        getAnnotation<T_>(arg0: Internal.Class<T_>): T_;
        isAnnotationPresent(arg0: Internal.Class<Internal.Annotation>): boolean;
        canAccess(arg0: any): boolean;
        getDeclaredAnnotation<T_>(arg0: Internal.Class<T_>): T_;
        getAnnotations(): Internal.Annotation[];
        getDeclaredAnnotations(): Internal.Annotation[];
        get accessible(): boolean;
        get declaredAnnotations(): Internal.Annotation[];
        get annotations(): Internal.Annotation[];
        set accessible(arg0: boolean);
    }
    type AccessibleObject_ = AccessibleObject;
    class MouseButton extends Document.Object {
        isRight(): boolean;
        isLeft(): boolean;
        static get(i: number): Internal.MouseButton;
        getId(): number;
        isMiddle(): boolean;
        static readonly LEFT: Internal.MouseButton;
        static readonly NEXT: Internal.MouseButton;
        static readonly RIGHT: Internal.MouseButton;
        static readonly BACK: Internal.MouseButton;
        readonly id: number;
        static readonly MIDDLE: Internal.MouseButton;
        get middle(): boolean;
        get left(): boolean;
        get right(): boolean;
    }
    type MouseButton_ = MouseButton;
    interface Multimap <K, V> {
        containsEntry(arg0: any, arg1: any): boolean;
        asMap(): Internal.Map<K, Internal.Collection<V>>;
        keys(): Internal.Multiset<K>;
        containsKey(arg0: any): boolean;
        forEach(arg0: Internal.BiConsumer_<K, V>): void;
        values(): Internal.Collection<V>;
        isEmpty(): boolean;
        clear(): void;
        replaceValues(arg0: K, arg1: Internal.Iterable_<V>): Internal.Collection<V>;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): boolean;
        remove(arg0: any, arg1: any): boolean;
        removeAll(arg0: any): Internal.Collection<V>;
        entries(): Internal.Collection<Internal.Map$Entry<K, V>>;
        size(): number;
        hashCode(): number;
        putAll(arg0: K, arg1: Internal.Iterable_<V>): boolean;
        putAll(arg0: Internal.Multimap<K, V>): boolean;
        equals(arg0: any): boolean;
        get(arg0: K): Internal.Collection<V>;
        keySet(): Internal.Set<K>;
    }
    type Multimap_<K, V> = Multimap<K, V>;
    class PerkStatistic extends Document.Object {
        getSuffix(): string;
        getType(): Internal.PerkAttributeType;
        getPerkValue(): string;
        getPostProcessInfo(): string;
        getUnlocPerkTypeName(): string;
        get unlocPerkTypeName(): string;
        get postProcessInfo(): string;
        get suffix(): string;
        get type(): Internal.PerkAttributeType;
        get perkValue(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PerkAttributeType, arg1: string, arg2: string, arg3: string);
    }
    type PerkStatistic_ = PerkStatistic;
    class MultipleRandomFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_202452_d: java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236583_a_: Internal.Codec<Internal.MultipleRandomFeatureConfig>;
        readonly field_202449_a: Internal.List<Internal.ConfiguredRandomFeatureList>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.List<Internal.ConfiguredRandomFeatureList>, arg1: Internal.ConfiguredFeature<any, any>);
    }
    type MultipleRandomFeatureConfig_ = MultipleRandomFeatureConfig;
    class HoglinMobsSensor extends Internal.Sensor<Internal.HoglinEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type HoglinMobsSensor_ = HoglinMobsSensor;
    class JsonButton extends net.minecraft.client.gui.widget.button.Button {
        dropShadow(arg0: boolean): Internal.JsonButton;
        trimStringToWidth(arg0: Internal.ITextProperties, arg1: number): Internal.ITextProperties;
        usesWidgets(arg0: boolean): Internal.JsonButton;
        func_212927_b(arg0: number, arg1: number): void;
        texture(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.JsonButton;
        scale(arg0: number, arg1: number): Internal.JsonButton;
        func_231042_a_(arg0: string, arg1: number): boolean;
        static drawCenteredStringNoShadow(arg0: Internal.MatrixStack, arg1: Internal.FontRenderer, arg2: string, arg3: number, arg4: number, arg5: number): void;
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        tickScrollCounter(): void;
        textOffsets(arg0: number, arg1: number): Internal.JsonButton;
        anchor(arg0: Internal.AnchorPoint_): Internal.JsonButton;
        setup(arg0: Internal.ExtendedMenuScreen): Internal.JsonButton;
        drawCenteredString0(arg0: Internal.MatrixStack, arg1: Internal.FontRenderer, arg2: string, arg3: number, arg4: number, arg5: number): void;
        hoverText(arg0: string): Internal.JsonButton;
        static deserialize(arg0: Internal.JsonObject): Internal.JsonButton;
        set up(arg0: Internal.ExtendedMenuScreen);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: string, arg7: any);
    }
    type JsonButton_ = JsonButton;
    interface FocusListener extends Internal.EventListener {
        focusGained(arg0: Internal.FocusEvent): void;
        focusLost(arg0: Internal.FocusEvent): void;
    }
    type FocusListener_ = FocusListener;
    class ModifierNBT$Builder extends Document.Object {
        add(arg0: Internal.ModifierNBT): Internal.ModifierNBT$Builder;
        add(arg0: Internal.Modifier_, arg1: number): Internal.ModifierNBT$Builder;
        add(arg0: Internal.List<Internal.ModifierEntry>): Internal.ModifierNBT$Builder;
        add(arg0: Internal.ModifierEntry): Internal.ModifierNBT$Builder;
        build(): Internal.ModifierNBT;
    }
    type ModifierNBT$Builder_ = ModifierNBT$Builder;
    interface FastMapStateHolder <S> {
        getStateIndex(): number;
        getNeighborTable(): Internal.Table<Internal.Property<any>, Internal.Comparable<any>, S>;
        setNeighborTable(arg0: Internal.Table<Internal.Property<any>, Internal.Comparable<any>, S>): void;
        setStateIndex(arg0: number): void;
        setStateMap(arg0: Internal.FastMap<S>): void;
        getVanillaPropertyMap(): Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>;
        getStateMap(): Internal.FastMap<S>;
        replacePropertyMap(arg0: Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>): void;
    }
    type FastMapStateHolder_<S> = FastMapStateHolder<S>;
    interface IntSupplier {
        getAsInt(): number;
        (): number;
    }
    type IntSupplier_ = (()=>number) | IntSupplier;
    class PainterObjectStorage extends Document.Object {
        createScreenObjects(): any[];
        getObject(key: string): Internal.PainterObject;
        createWorldObjects(): any[];
        clear(): void;
        handle(root: Internal.CompoundNBT_): void;
        remove(id: string): void;
        getObjects(): Internal.Collection<Internal.PainterObject>;
        get objects(): Internal.Collection<Internal.PainterObject>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PainterObjectStorage_ = PainterObjectStorage;
    class ModelGenerator$Face extends Document.Object {
        uv(u0: number, v0: number, u1: number, v1: number): Internal.ModelGenerator$Face;
        toJson(): Internal.JsonObject;
        tex(t: string): Internal.ModelGenerator$Face;
        cull(d: Internal.Direction_): Internal.ModelGenerator$Face;
        cull(): Internal.ModelGenerator$Face;
        tintindex(i: number): Internal.ModelGenerator$Face;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ModelGenerator$Face_ = ModelGenerator$Face;
    class AtlasTexture extends Internal.Texture implements Internal.ITickable {
        handler$bed000$stealAtlasData(arg0: Internal.IResourceManager, arg1: Internal.Stream<any>, arg2: Internal.IProfiler, arg3: number, arg4: Internal.CallbackInfoReturnable<any>): void;
        func_195424_a(arg0: ResourceLocation_): Internal.TextureAtlasSprite;
        func_229221_b_(arg0: Internal.AtlasTexture$SheetData): void;
        func_195419_g(): void;
        func_229220_a_(arg0: Internal.IResourceManager, arg1: Internal.Stream<ResourceLocation>, arg2: Internal.IProfiler, arg3: number): Internal.AtlasTexture$SheetData;
        func_229223_g_(): ResourceLocation;
        func_110550_d(): void;
        func_94248_c(): void;
        func_215260_a(arg0: Internal.AtlasTexture$SheetData): void;
        static readonly field_110575_b: ResourceLocation;
        readonly field_94258_i: Internal.List<Internal.TextureAtlasSprite>;
        static readonly field_215262_g: ResourceLocation;
        readonly field_94252_e: Internal.Map<ResourceLocation, Internal.TextureAtlasSprite>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type AtlasTexture_ = AtlasTexture;
    class SceneBuildingUtil$SelectionUtil extends Document.Object {
        cuboid(arg0: BlockPos, arg1: Vec3i): Internal.Selection;
        everywhere(): Internal.Selection;
        layersFrom(arg0: number): Internal.Selection;
        column(arg0: number, arg1: number): Internal.Selection;
        layers(arg0: number, arg1: number): Internal.Selection;
        position(arg0: BlockPos): Internal.Selection;
        position(arg0: number, arg1: number, arg2: number): Internal.Selection;
        fromTo(arg0: BlockPos, arg1: BlockPos): Internal.Selection;
        fromTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.Selection;
        layer(arg0: number): Internal.Selection;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SceneBuildingUtil);
    }
    type SceneBuildingUtil$SelectionUtil_ = SceneBuildingUtil$SelectionUtil;
    abstract class LootEntry$Builder <T> extends Document.Object implements Internal.ILootConditionConsumer<T> {
        func_216081_b(): Internal.LootEntry;
        func_216080_a(arg0: Internal.LootEntry$Builder<any>): Internal.AlternativesLootEntry$Builder;
        func_212862_c_(): T;
        func_212862_c_(): any;
        func_212840_b_(arg0: Internal.ILootCondition$IBuilder_): any;
        func_212840_b_(arg0: Internal.ILootCondition$IBuilder_): T;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type LootEntry$Builder_<T> = LootEntry$Builder<T>;
    class BlockIDPredicate$PropertyObject extends Document.Object {
    }
    type BlockIDPredicate$PropertyObject_ = BlockIDPredicate$PropertyObject;
    interface Type$TypeMatcher <FT, FR> {
        match<S>(arg0: com.mojang.datafixers.types.Type<S>): Internal.Either<Internal.TypedOptic<S, any, FT, FR>, Internal.Type$FieldNotFoundException>;
        (arg0: com.mojang.datafixers.types.Type<S>): Internal.Either<Internal.TypedOptic<S, any, FT, FR>, Internal.Type$FieldNotFoundException>;
    }
    type Type$TypeMatcher_<FT, FR> = ((arg0: com.mojang.datafixers.types.Type<S>)=>Internal.Either<Internal.TypedOptic<S, any, FT, FR>, Internal.Type$FieldNotFoundException>) | Type$TypeMatcher<FT, FR>;
    class SHeldItemChangePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149385_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type SHeldItemChangePacket_ = SHeldItemChangePacket;
    class AttributeModifierManager extends Document.Object implements Internal.AttributeEvent$EntityModifierManager {
        func_233779_a_(arg0: net.minecraft.entity.ai.attributes.Attribute_): Internal.ModifiableAttributeInstance;
        getLivingEntity(): Internal.LivingEntity;
        setLivingEntity(arg0: Internal.LivingEntity): void;
        func_233782_a_(arg0: net.minecraft.entity.ai.attributes.Attribute_, arg1: Internal.UUID): boolean;
        func_233784_a_(arg0: Internal.AttributeModifierManager): void;
        func_233778_a_(): Internal.Set<Internal.ModifiableAttributeInstance>;
        func_233785_a_(arg0: Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>): void;
        func_233795_c_(arg0: net.minecraft.entity.ai.attributes.Attribute_): number;
        func_233797_d_(arg0: net.minecraft.entity.ai.attributes.Attribute_): number;
        func_233791_b_(arg0: net.minecraft.entity.ai.attributes.Attribute_, arg1: Internal.UUID): number;
        func_233789_b_(): Internal.Collection<Internal.ModifiableAttributeInstance>;
        func_233788_a_(arg0: Internal.ListNBT): void;
        func_233794_c_(): Internal.ListNBT;
        func_233790_b_(arg0: net.minecraft.entity.ai.attributes.Attribute_): boolean;
        func_233793_b_(arg0: Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>): void;
        astralSorceryEntityReference: Internal.LivingEntity;
        get livingEntity(): Internal.LivingEntity;
        set livingEntity(arg0: Internal.LivingEntity);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.AttributeModifierMap);
    }
    type AttributeModifierManager_ = AttributeModifierManager;
    interface Function6 <T1, T2, T3, T4, T5, T6, R> {
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6): R;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function<T6, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function3<T4, T5, T6, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.BiFunction<T5, T6, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function4<T3, T4, T5, T6, R>>;
        curry(): Internal.Function<T1, Internal.Function5<T2, T3, T4, T5, T6, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6): R;
    }
    type Function6_<T1, T2, T3, T4, T5, T6, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6)=>R) | Function6<T1, T2, T3, T4, T5, T6, R>;
    abstract class MutableRegistry <T> extends Internal.Registry<T> {
        flatComapMap<S_>(arg0: Internal.Function_<T, S_>, arg1: Internal.Function_<S_, Internal.DataResult_<T>>): Internal.Codec<S_>;
        func_241874_a<V_>(arg0: Internal.OptionalInt, arg1: Internal.RegistryKey<T>, arg2: V_, arg3: Internal.Lifecycle): V_;
        dispatch<E_>(arg0: Internal.Function_<E_, T>, arg1: Internal.Function_<T, Internal.Codec_<E_>>): Internal.Codec<E_>;
        dispatch<E_>(arg0: string, arg1: Internal.Function_<E_, T>, arg2: Internal.Function_<T, Internal.Codec_<E_>>): Internal.Codec<E_>;
        deprecated(arg0: number): Internal.Codec<T>;
        simple(): Internal.Decoder$Simple<T>;
        dispatchMap<E_>(arg0: Internal.Function_<E_, T>, arg1: Internal.Function_<T, Internal.Codec_<E_>>): Internal.MapCodec<E_>;
        dispatchMap<E_>(arg0: string, arg1: Internal.Function_<E_, T>, arg2: Internal.Function_<T, Internal.Codec_<E_>>): Internal.MapCodec<E_>;
        func_218381_a<V_>(arg0: Internal.RegistryKey<T>, arg1: V_, arg2: Internal.Lifecycle): V_;
        func_218382_a<V_>(arg0: number, arg1: Internal.RegistryKey<T>, arg2: V_, arg3: Internal.Lifecycle): V_;
        decode<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<Internal.Pair<T, T_>>;
        comapFlatMap<S_>(arg0: Internal.Function_<T, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, T>): Internal.Codec<S_>;
        promotePartial(arg0: Internal.Consumer_<any>): Internal.Decoder<any>;
        promotePartial(arg0: Internal.Consumer_<string>): Internal.Codec<T>;
        flatXmap<S_>(arg0: Internal.Function_<T, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, Internal.DataResult_<T>>): Internal.Codec<S_>;
        comap<B_>(arg0: Internal.Function_<B_, T>): Internal.Encoder<B_>;
        fieldOf(arg0: string): Internal.MapDecoder<any>;
        fieldOf(arg0: string): Internal.MapCodec<T>;
        fieldOf(arg0: string): Internal.MapEncoder<any>;
        listOf(): Internal.Codec<Internal.List<T>>;
        xmap<S_>(arg0: Internal.Function_<T, S_>, arg1: Internal.Function_<S_, T>): Internal.Codec<S_>;
        map<B_>(arg0: Internal.Function_<T, B_>): Internal.Decoder<B_>;
        encodeStart<T_>(arg0: Internal.DynamicOps<T_>, arg1: T): Internal.DataResult<T_>;
        optionalFieldOf(arg0: string, arg1: Internal.Lifecycle, arg2: T, arg3: Internal.Lifecycle): Internal.MapCodec<T>;
        optionalFieldOf(arg0: string, arg1: T): Internal.MapCodec<T>;
        optionalFieldOf(arg0: string, arg1: T, arg2: Internal.Lifecycle): Internal.MapCodec<T>;
        optionalFieldOf(arg0: string): Internal.MapCodec<Internal.Optional<T>>;
        flatComap<B_>(arg0: Internal.Function_<B_, Internal.DataResult_<T>>): Internal.Encoder<B_>;
        spliterator(): Internal.Spliterator<T>;
        forEach(arg0: Internal.Consumer_<T>): void;
        partialDispatch<E_>(arg0: string, arg1: Internal.Function_<E_, Internal.DataResult_<T>>, arg2: Internal.Function_<T, Internal.DataResult_<Internal.Codec_<E_>>>): Internal.Codec<E_>;
        terminal(): Internal.Decoder$Terminal<T>;
        parse<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<T>;
        parse<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<T>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Codec<T>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Encoder<any>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Decoder<any>;
        orElse(arg0: T): Internal.Codec<T>;
        orElse(arg0: Internal.Consumer_<string>, arg1: T): Internal.Codec<T>;
        orElse(arg0: Internal.UnaryOperator<string>, arg1: T): Internal.Codec<T>;
        flatMap<B_>(arg0: Internal.Function_<T, Internal.DataResult_<B_>>): Internal.Decoder<B_>;
        boxed(): Internal.Decoder$Boxed<T>;
        dispatchStable<E_>(arg0: Internal.Function_<E_, T>, arg1: Internal.Function_<T, Internal.Codec_<E_>>): Internal.Codec<E_>;
        orElseGet(arg0: java_.util.function_.Supplier_<T>): Internal.Codec<T>;
        orElseGet(arg0: Internal.Consumer_<string>, arg1: java_.util.function_.Supplier_<T>): Internal.Codec<T>;
        orElseGet(arg0: Internal.UnaryOperator<string>, arg1: java_.util.function_.Supplier_<T>): Internal.Codec<T>;
        stable(): Internal.Codec<T>;
        mapResult(arg0: Internal.Codec$ResultFunction<T>): Internal.Codec<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.RegistryKey<Internal.Registry<T>>, arg1: Internal.Lifecycle);
    }
    type MutableRegistry_<T> = MutableRegistry<T>;
    interface IChunkLightProvider {
        func_212864_k_(): Internal.IBlockReader;
        func_217202_b(arg0: number, arg1: number): Internal.IBlockReader;
        func_217201_a(arg0: Internal.LightType_, arg1: Internal.SectionPos): void;
    }
    type IChunkLightProvider_ = IChunkLightProvider;
    class Vector <E> extends Internal.AbstractList<E> implements Internal.List<E>, Internal.RandomAccess, Internal.Cloneable, Internal.Serializable {
        firstElement(): E;
        removeLast(): E;
        getLast(): E;
        remove(arg0: number): E;
        capacity(): number;
        addLast(arg0: E): void;
        iterator(): Internal.Iterator<E>;
        setSize(arg0: number): void;
        stream(): Internal.Stream<E>;
        setElementAt(arg0: E, arg1: number): void;
        getFirst(): E;
        removeFirst(): E;
        get(arg0: number): E;
        removeElementAt(arg0: number): void;
        elementAt(arg0: number): E;
        toArray<T_>(arg0: T_[]): T_[];
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<E>;
        indexOf(arg0: any, arg1: number): number;
        removeAllElements(): void;
        subList(arg0: number, arg1: number): Internal.List<E>;
        trimToSize(): void;
        set(arg0: number, arg1: E): E;
        spliterator(): Internal.Spliterator<E>;
        copyInto(arg0: any[]): void;
        lastIndexOf(arg0: any, arg1: number): number;
        insertElementAt(arg0: E, arg1: number): void;
        lastElement(): E;
        elements(): Internal.Enumeration<E>;
        clone(): any;
        listIterator(): Internal.ListIterator<E>;
        listIterator(arg0: number): Internal.ListIterator<E>;
        addElement(arg0: E): void;
        ensureCapacity(arg0: number): void;
        removeElement(arg0: any): boolean;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<E>;
        addFirst(arg0: E): void;
        get last(): E;
        get first(): E;
        set size(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Collection<E>);
        constructor();
        constructor(arg0: number);
        constructor(arg0: number, arg1: number);
    }
    type Vector_<E> = Vector<E>;
    class IntConfig extends Internal.NumberConfig<number> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(mn: number, mx: number);
    }
    type IntConfig_ = IntConfig;
    class SodiumWorldRenderer extends Document.Object implements Internal.ChunkStatusListener {
        drawChunkLayer(renderLayer: Internal.RenderType, matrixStack: Internal.MatrixStack, x: number, y: number, z: number): void;
        scheduleTerrainUpdate(): void;
        static getInstanceNullable(): Internal.SodiumWorldRenderer;
        getActiveChunkRenderCaches(): Internal.Collection<Internal.ChunkRenderCacheLocal>;
        isEntityVisible(entity: Internal.Entity): boolean;
        isTerrainRenderComplete(): boolean;
        scheduleRebuildForBlockArea(minX: number, minY: number, minZ: number, maxX: number, maxY: number, maxZ: number, important: boolean): void;
        scheduleRebuildForChunk(x: number, y: number, z: number, important: boolean): void;
        updateChunks(camera: Internal.ActiveRenderInfo, frustum: Internal.ClippingHelper, hasForcedFrustum: boolean, frame: number, spectator: boolean): void;
        onChunkRemoved(x: number, z: number): void;
        onChunkAdded(x: number, z: number): void;
        reload(): void;
        getFrustum(): Internal.ClippingHelper;
        getChunksDebugString(): string;
        onChunkRenderUpdated(x: number, y: number, z: number, meshBefore: Internal.ChunkRenderData, meshAfter: Internal.ChunkRenderData): void;
        getVisibleChunkCount(): number;
        static create(): Internal.SodiumWorldRenderer;
        getChunkRenderer(): Internal.ChunkRenderBackend<any>;
        static getInstance(): Internal.SodiumWorldRenderer;
        renderTileEntities(matrices: Internal.MatrixStack, bufferBuilders: Internal.RenderTypeBuffers, blockBreakingProgressions: Internal.Long2ObjectMap<Internal.SortedSet<Internal.DestroyBlockProgress>>, camera: Internal.ActiveRenderInfo, tickDelta: number): void;
        setWorld(world: Internal.ClientWorld): void;
        scheduleRebuildForChunks(minX: number, minY: number, minZ: number, maxX: number, maxY: number, maxZ: number, important: boolean): void;
        static hasChanges: false;
        get instanceNullable(): Internal.SodiumWorldRenderer;
        get visibleChunkCount(): number;
        get chunkRenderer(): Internal.ChunkRenderBackend<any>;
        get instance(): Internal.SodiumWorldRenderer;
        get activeChunkRenderCaches(): Internal.Collection<Internal.ChunkRenderCacheLocal>;
        get terrainRenderComplete(): boolean;
        get chunksDebugString(): string;
        get frustum(): Internal.ClippingHelper;
        set world(world: Internal.ClientWorld);
    }
    type SodiumWorldRenderer_ = SodiumWorldRenderer;
    class BiomeGenerationSettings$Builder extends Document.Object implements Internal.BiomeGenerationSettingsBuilderAccessor {
        func_242517_a(arg0: Internal.ConfiguredSurfaceBuilder<any>): Internal.BiomeGenerationSettings$Builder;
        func_242508_a(): Internal.BiomeGenerationSettings;
        func_242519_a(arg0: java_.util.function_.Supplier_<Internal.ConfiguredSurfaceBuilder_<any>>): Internal.BiomeGenerationSettings$Builder;
        getFeatures(): Internal.List<any>;
        func_242510_a(arg0: number, arg1: java_.util.function_.Supplier_<Internal.ConfiguredFeature_<any, any>>): Internal.BiomeGenerationSettings$Builder;
        func_242512_a<C_>(arg0: CarvingGenerationStep_, arg1: Internal.ConfiguredCarver<C_>): Internal.BiomeGenerationSettings$Builder;
        func_242513_a(arg0: DecorationGenerationStep_, arg1: Internal.ConfiguredFeature<any, any>): Internal.BiomeGenerationSettings$Builder;
        func_242516_a(arg0: Internal.StructureFeature<any, any>): Internal.BiomeGenerationSettings$Builder;
        get features(): Internal.List<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BiomeGenerationSettings$Builder_ = BiomeGenerationSettings$Builder;
    interface EventHandlerImplCommon$WorldEventAttachment {
        architectury$getAttachedLevel(): Internal.IWorld;
        architectury$attachLevel(arg0: Internal.IWorld): void;
    }
    type EventHandlerImplCommon$WorldEventAttachment_ = EventHandlerImplCommon$WorldEventAttachment;
    class DimensionRenderInfo$FogType extends Internal.Enum<Internal.DimensionRenderInfo$FogType> {
        static valueOf(arg0: string): Internal.DimensionRenderInfo$FogType;
        static values(): Internal.DimensionRenderInfo$FogType[];
        static readonly END: Internal.DimensionRenderInfo$FogType;
        static readonly NONE: Internal.DimensionRenderInfo$FogType;
        static readonly NORMAL: Internal.DimensionRenderInfo$FogType;
    }
    type DimensionRenderInfo$FogType_ = "none" | "normal" | "end" | DimensionRenderInfo$FogType;
    class ItemSmeltedEventJS extends Internal.PlayerEventJS {
        getItem(): Internal.ItemStackJS;
        get item(): Internal.ItemStackJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.PlayerEntity, smelted: Internal.ItemStack);
    }
    type ItemSmeltedEventJS_ = ItemSmeltedEventJS;
    interface MinecraftAccess {
        getFontManager(): Internal.FontResourceManager;
        (): Internal.FontResourceManager;
    }
    type MinecraftAccess_ = (()=>Internal.FontResourceManager) | MinecraftAccess;
    class EquipmentChangeContext extends Internal.EquipmentContext {
        getReplacement(): Internal.ItemStack;
        getReplacementTool(): Internal.IModifierToolStack;
        getOriginal(): Internal.ItemStack;
        getChangedSlot(): EquipmentSlot;
        getOriginalTool(): Internal.IModifierToolStack;
        get original(): Internal.ItemStack;
        get originalTool(): Internal.IModifierToolStack;
        get replacementTool(): Internal.IModifierToolStack;
        get changedSlot(): EquipmentSlot;
        get replacement(): Internal.ItemStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LivingEntity, arg1: EquipmentSlot, arg2: Internal.ItemStack, arg3: Internal.ItemStack);
    }
    type EquipmentChangeContext_ = EquipmentChangeContext;
    class BlockMosinessProcessor extends Internal.StructureProcessor {
        static readonly field_237062_a_: Internal.Codec<Internal.BlockMosinessProcessor>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type BlockMosinessProcessor_ = BlockMosinessProcessor;
    class IronGolemEntity extends Internal.GolemEntity implements Internal.IAngerable {
        shouldRiderSit(): boolean;
        func_230256_F__(): number;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        static func_234200_m_(): Internal.AttributeModifierMap$MutableAttribute;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_230260_a__(arg0: number): void;
        func_233682_c_(arg0: Internal.CompoundNBT_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_233681_b_(arg0: Internal.PlayerEntity): void;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_241358_a_(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT_): void;
        func_226512_l_(): Internal.IronGolemEntity$Cracks;
        func_230257_G__(): Internal.UUID;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_70849_f(arg0: boolean): void;
        func_233678_J__(): boolean;
        func_70850_q(): boolean;
        hasCooldown(): boolean;
        func_70854_o(): number;
        func_70853_p(): number;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        func_230258_H__(): void;
        func_241355_J__(): void;
        canRiderInteract(): boolean;
        func_233680_b_(arg0: Internal.LivingEntity): boolean;
        func_70851_e(arg0: boolean): void;
        func_241359_a_(arg0: Internal.ServerWorld, arg1: boolean): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_241357_a_(arg0: Internal.World): boolean;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_241356_K__(): void;
        func_230259_a_(arg0: Internal.UUID): void;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.IronGolemEntity>, arg1: Internal.World);
    }
    type IronGolemEntity_ = IronGolemEntity;
    interface FireworkRocketEntityKJS {
        setLifetimeKJS(arg0: number): void;
        (arg0: number): void;
    }
    type FireworkRocketEntityKJS_ = ((arg0: number)=>void) | FireworkRocketEntityKJS;
    class Template$Palette extends Document.Object implements Internal.PaletteAccess {
        static construct_$md$e571c7$0(arg0: Internal.List<any>): Internal.Template$Palette;
        func_237158_a_(arg0: Internal.Block_): Internal.List<Internal.Template$BlockInfo>;
        func_237157_a_(): Internal.List<Internal.Template$BlockInfo>;
    }
    type Template$Palette_ = Template$Palette;
    abstract class AbstractObject2ObjectSortedMap <K, V> extends Internal.AbstractObject2ObjectMap<K, V> implements Internal.Object2ObjectSortedMap<K, V> {
        object2ObjectEntrySet(): Internal.ObjectSortedSet<Internal.Object2ObjectMap$Entry<K, V>>;
        object2ObjectEntrySet(): Internal.ObjectSet<any>;
        getOrDefault(arg0: any, arg1: V): V;
        sequencedKeySet(): Internal.SequencedSet<K>;
        computeIfAbsent(arg0: K, arg1: Internal.Function_<K, V>): V;
        values(): Internal.Collection<any>;
        values(): Internal.ObjectCollection<V>;
        replace(arg0: K, arg1: V, arg2: V): boolean;
        replace(arg0: K, arg1: V): V;
        replaceAll(arg0: Internal.BiFunction_<K, V, V>): void;
        andThen<V_>(arg0: Internal.Function_<V, V_>): Internal.Function<K, V_>;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        pollFirstEntry(): Internal.Map$Entry<K, V>;
        merge(arg0: K, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        get(arg0: any): V;
        lastKey(): K;
        firstEntry(): Internal.Map$Entry<K, V>;
        putFirst(arg0: K, arg1: V): V;
        keySet(): Internal.Set<any>;
        keySet(): Internal.ObjectSet<any>;
        keySet(): Internal.ObjectSortedSet<K>;
        putLast(arg0: K, arg1: V): V;
        entrySet(): Internal.ObjectSet<any>;
        entrySet(): Internal.ObjectSortedSet<Internal.Map$Entry<K, V>>;
        entrySet(): Internal.Set<any>;
        apply(arg0: K): V;
        forEach(arg0: Internal.BiConsumer_<K, V>): void;
        subMap(arg0: any, arg1: any): Internal.SortedMap<any, any>;
        subMap(arg0: K, arg1: K): Internal.Object2ObjectSortedMap<K, V>;
        clear(): void;
        sequencedValues(): Internal.SequencedCollection<V>;
        pollLastEntry(): Internal.Map$Entry<K, V>;
        comparator(): Internal.Comparator<K>;
        lastEntry(): Internal.Map$Entry<K, V>;
        computeIfPresent(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        compose<V_>(arg0: Internal.Function_<V_, K>): Internal.Function<V_, V>;
        firstKey(): K;
        headMap(arg0: any): Internal.SortedMap<any, any>;
        headMap(arg0: K): Internal.Object2ObjectSortedMap<K, V>;
        sequencedEntrySet(): Internal.SequencedSet<Internal.Map$Entry<K, V>>;
        putIfAbsent(arg0: K, arg1: V): V;
        reversed(): Internal.SortedMap<K, V>;
        reversed(): Internal.SequencedMap<any, any>;
        tailMap(arg0: any): Internal.SortedMap<any, any>;
        tailMap(arg0: K): Internal.Object2ObjectSortedMap<K, V>;
    }
    type AbstractObject2ObjectSortedMap_<K, V> = AbstractObject2ObjectSortedMap<K, V>;
    interface MessageSizeEstimator$Handle {
        size(arg0: any): number;
        (arg0: any): number;
    }
    type MessageSizeEstimator$Handle_ = ((arg0: any)=>number) | MessageSizeEstimator$Handle;
    class KeyPair extends Document.Object implements Internal.Serializable {
        getPrivate(): Internal.PrivateKey;
        getPublic(): Internal.PublicKey;
        get private(): Internal.PrivateKey;
        get public(): Internal.PublicKey;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PublicKey, arg1: Internal.PrivateKey);
    }
    type KeyPair_ = KeyPair;
    interface LongStream extends Internal.BaseStream<number, Internal.LongStream> {
        average(): Internal.OptionalDouble;
        sequential(): Internal.BaseStream<any, any>;
        sequential(): Internal.LongStream;
        takeWhile(arg0: Internal.LongPredicate_): Internal.LongStream;
        distinct(): Internal.LongStream;
        findFirst(): Internal.OptionalLong;
        sum(): number;
        skip(arg0: number): Internal.LongStream;
        allMatch(arg0: Internal.LongPredicate_): boolean;
        mapToObj<U_>(arg0: Internal.LongFunction_<U_>): Internal.Stream<U_>;
        mapMulti(arg0: Internal.LongStream$LongMapMultiConsumer_): Internal.LongStream;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.PrimitiveIterator$OfLong;
        asDoubleStream(): Internal.DoubleStream;
        min(): Internal.OptionalLong;
        parallel(): Internal.LongStream;
        parallel(): Internal.BaseStream<any, any>;
        noneMatch(arg0: Internal.LongPredicate_): boolean;
        findAny(): Internal.OptionalLong;
        limit(arg0: number): Internal.LongStream;
        toArray(): number[];
        forEachOrdered(arg0: Internal.LongConsumer_): void;
        anyMatch(arg0: Internal.LongPredicate_): boolean;
        map(arg0: Internal.LongUnaryOperator_): Internal.LongStream;
        mapToDouble(arg0: Internal.LongToDoubleFunction_): Internal.DoubleStream;
        reduce(arg0: Internal.LongBinaryOperator_): Internal.OptionalLong;
        reduce(arg0: number, arg1: Internal.LongBinaryOperator_): number;
        spliterator(): Internal.Spliterator$OfLong;
        spliterator(): Internal.Spliterator<any>;
        max(): Internal.OptionalLong;
        forEach(arg0: Internal.LongConsumer_): void;
        count(): number;
        dropWhile(arg0: Internal.LongPredicate_): Internal.LongStream;
        peek(arg0: Internal.LongConsumer_): Internal.LongStream;
        flatMap(arg0: Internal.LongFunction_<Internal.LongStream_>): Internal.LongStream;
        filter(arg0: Internal.LongPredicate_): Internal.LongStream;
        sorted(): Internal.LongStream;
        boxed(): Internal.Stream<number>;
        summaryStatistics(): Internal.LongSummaryStatistics;
        mapToInt(arg0: Internal.LongToIntFunction_): Internal.IntStream;
        collect<R_>(arg0: java_.util.function_.Supplier_<R_>, arg1: Internal.ObjLongConsumer_<R_>, arg2: Internal.BiConsumer_<R_, R_>): R_;
    }
    type LongStream_ = LongStream;
    interface IUnbakedModel extends Internal.IForgeUnbakedModel {
        func_225614_a_(arg0: Internal.Function_<ResourceLocation_, Internal.IUnbakedModel_>, arg1: Internal.Set<Internal.Pair<string, string>>): Internal.Collection<Internal.RenderMaterial>;
        func_225613_a_(arg0: Internal.ModelBakery, arg1: Internal.Function_<Internal.RenderMaterial_, Internal.TextureAtlasSprite_>, arg2: Internal.IModelTransform, arg3: ResourceLocation_): Internal.IBakedModel;
        func_187965_e(): Internal.Collection<ResourceLocation>;
    }
    type IUnbakedModel_ = IUnbakedModel;
    class MapItemRenderer extends Document.Object implements Internal.AutoCloseable {
        func_148249_a(): void;
        func_148246_a(arg0: Internal.MapData): void;
        func_228086_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: Internal.MapData, arg3: boolean, arg4: number): void;
        func_191207_a(arg0: Internal.MapItemRenderer$Instance): Internal.MapData;
        func_191205_a(arg0: string): Internal.MapItemRenderer$Instance;
        close(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TextureManager);
    }
    type MapItemRenderer_ = MapItemRenderer;
    interface ButtonAccessor {
        setOnPress(arg0: Internal.Button$IPressable_): void;
        (arg0: Internal.Button$IPressable): void;
    }
    type ButtonAccessor_ = ((arg0: Internal.Button$IPressable)=>void) | ButtonAccessor;
    class VillageConfig extends Document.Object implements Internal.IFeatureConfig {
        func_242810_c(): java_.util.function_.Supplier<Internal.JigsawPattern>;
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        func_236534_a_(): number;
        static readonly field_236533_a_: Internal.Codec<Internal.VillageConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: java_.util.function_.Supplier<Internal.JigsawPattern>, arg1: number);
    }
    type VillageConfig_ = VillageConfig;
    interface IForgeTextureAtlasSprite {
        load(arg0: Internal.IResourceManager, arg1: ResourceLocation_, arg2: Internal.Function_<ResourceLocation_, Internal.TextureAtlasSprite_>): boolean;
        getDependencies(): Internal.Collection<ResourceLocation>;
        hasCustomLoader(arg0: Internal.IResourceManager, arg1: ResourceLocation_): boolean;
    }
    type IForgeTextureAtlasSprite_ = IForgeTextureAtlasSprite;
    abstract class ImmutableSet <E> extends Internal.ImmutableCollection<E> implements Internal.Set<E> {
        iterator(): Internal.UnmodifiableIterator<E>;
        iterator(): Internal.Iterator<any>;
        stream(): Internal.Stream<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        static of<E_>(): Internal.ImmutableSet<E_>;
        static of<E_>(arg0: E_, arg1: E_): Internal.ImmutableSet<E_>;
        static of<E_>(arg0: E_): Internal.ImmutableSet<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, ...arg6: E_[]): Internal.ImmutableSet<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_): Internal.ImmutableSet<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_): Internal.ImmutableSet<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_): Internal.ImmutableSet<E_>;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        static builder<E_>(): Internal.ImmutableSet$Builder<E_>;
        parallelStream(): Internal.Stream<E>;
        static copyOf<E_>(arg0: E_[]): Internal.ImmutableSet<E_>;
        static copyOf<E_>(arg0: Internal.Collection<E_>): Internal.ImmutableSet<E_>;
        static copyOf<E_>(arg0: Internal.Iterable_<E_>): Internal.ImmutableSet<E_>;
        static copyOf<E_>(arg0: Internal.Iterator<E_>): Internal.ImmutableSet<E_>;
        asList(): Internal.ImmutableList<E>;
        static toImmutableSet<E_>(): Internal.Collector<E_, any, Internal.ImmutableSet<E_>>;
    }
    type ImmutableSet_<E> = ImmutableSet<E>;
    abstract class TreeDecorator extends Document.Object {
        func_225576_a_(arg0: Internal.ISeedReader, arg1: Internal.Random, arg2: Internal.List<BlockPos>, arg3: Internal.List<BlockPos>, arg4: Internal.Set<BlockPos>, arg5: Internal.MutableBoundingBox): void;
        static readonly field_236874_c_: Internal.Codec<Internal.TreeDecorator>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TreeDecorator_ = TreeDecorator;
    interface BlockKJS {
        getBlockStatesKJS(): Internal.List<Internal.BlockState>;
        setSoundTypeKJS(arg0: Internal.SoundType): void;
        getBlockBuilderKJS(): Internal.BlockBuilder;
        setExplosionResistanceKJS(arg0: number): void;
        setJumpFactorKJS(arg0: number): void;
        setBlockBuilderKJS(arg0: Internal.BlockBuilder): void;
        setSpeedFactorKJS(arg0: number): void;
        setFrictionKJS(arg0: number): void;
        setIsRandomlyTickingKJS(arg0: boolean): void;
        setHasCollisionKJS(arg0: boolean): void;
        setMaterialKJS(arg0: Internal.Material): void;
    }
    type BlockKJS_ = BlockKJS;
    interface IModifierToolStack extends Internal.IToolContext {
        getDamage(): number;
        getModifier(arg0: Internal.FloatToolStat): number;
        isUnbreakable(): boolean;
        getFreeSlots(arg0: Internal.SlotType): number;
        getFreeUpgrades(): number;
        getFreeAbilities(): number;
        getPersistentData(): Internal.IModDataReadOnly;
        getPersistentData(): Internal.ModDataNBT;
        setDamage(arg0: number): void;
        getCurrentDurability(): number;
        isBroken(): boolean;
    }
    type IModifierToolStack_ = IModifierToolStack;
    class ChunkHolder$LocationType extends Internal.Enum<Internal.ChunkHolder$LocationType> {
        func_219065_a(arg0: Internal.ChunkHolder$LocationType_): boolean;
        static valueOf(arg0: string): Internal.ChunkHolder$LocationType;
        static values(): Internal.ChunkHolder$LocationType[];
        static readonly ENTITY_TICKING: Internal.ChunkHolder$LocationType;
        static readonly INACCESSIBLE: Internal.ChunkHolder$LocationType;
        static readonly BORDER: Internal.ChunkHolder$LocationType;
        static readonly TICKING: Internal.ChunkHolder$LocationType;
    }
    type ChunkHolder$LocationType_ = "inaccessible" | "border" | "ticking" | "entity_ticking" | ChunkHolder$LocationType;
    class SceneBuilder extends Document.Object {
        addInstruction(arg0: Internal.PonderInstruction): void;
        addInstruction(arg0: Internal.Consumer_<Internal.PonderScene_>): void;
        showBasePlate(): void;
        addKeyframe(): void;
        idleSeconds(arg0: number): void;
        setSceneOffsetY(arg0: number): void;
        idle(arg0: number): void;
        markAsFinished(): void;
        configureBasePlate(arg0: number, arg1: number, arg2: number): void;
        title(arg0: string, arg1: string): void;
        rotateCameraY(arg0: number): void;
        addLazyKeyframe(): void;
        scaleSceneView(arg0: number): void;
        readonly special: Internal.SceneBuilder$SpecialInstructions;
        readonly effects: Internal.SceneBuilder$EffectInstructions;
        readonly world: Internal.SceneBuilder$WorldInstructions;
        readonly debug: Internal.SceneBuilder$DebugInstructions;
        readonly overlay: Internal.SceneBuilder$OverlayInstructions;
        set sceneOffsetY(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PonderScene);
    }
    type SceneBuilder_ = SceneBuilder;
    interface IStringSerializable {
        func_176610_l(): string;
        (): string;
    }
    type IStringSerializable_ = (()=>string) | IStringSerializable;
    class SetRestrictedField <T> extends Document.Object {
        static startInitializing(client: boolean): void;
        getValue(): T;
        static common<T_>(): Internal.SetRestrictedField<T_>;
        setValue(value: T): void;
        isInitialized(): boolean;
        static client<T_>(): Internal.SetRestrictedField<T_>;
        static lock(client: boolean): void;
        get initialized(): boolean;
        get value(): T;
        set value(value: T);
    }
    type SetRestrictedField_<T> = SetRestrictedField<T>;
    interface AccessibleAction {
        getAccessibleActionDescription(arg0: number): string;
        doAccessibleAction(arg0: number): boolean;
        getAccessibleActionCount(): number;
    }
    type AccessibleAction_ = AccessibleAction;
    class LivingSpawnEvent$SpecialSpawn extends Internal.LivingSpawnEvent {
        getSpawner(): Internal.AbstractSpawner;
        getSpawnReason(): Internal.SpawnReason;
        get spawnReason(): Internal.SpawnReason;
        get spawner(): Internal.AbstractSpawner;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MobEntity, arg1: Internal.World, arg2: number, arg3: number, arg4: number, arg5: Internal.AbstractSpawner, arg6: Internal.SpawnReason);
    }
    type LivingSpawnEvent$SpecialSpawn_ = LivingSpawnEvent$SpecialSpawn;
    class PushReaction extends Internal.Enum<Internal.PushReaction> {
        static valueOf(arg0: string): Internal.PushReaction;
        static values(): Internal.PushReaction[];
        static readonly DESTROY: Internal.PushReaction;
        static readonly BLOCK: Internal.PushReaction;
        static readonly PUSH_ONLY: Internal.PushReaction;
        static readonly IGNORE: Internal.PushReaction;
        static readonly NORMAL: Internal.PushReaction;
    }
    type PushReaction_ = "normal" | "destroy" | "block" | "ignore" | "push_only" | PushReaction;
    class SoundType extends Document.Object {
        func_185845_c(): Internal.SoundEvent;
        func_185844_d(): Internal.SoundEvent;
        func_185847_b(): number;
        func_185842_g(): Internal.SoundEvent;
        func_185841_e(): Internal.SoundEvent;
        func_185846_f(): Internal.SoundEvent;
        func_185843_a(): number;
        static readonly field_235593_O_: Internal.SoundType;
        static readonly field_222475_v: Internal.SoundType;
        static readonly field_235594_P_: Internal.SoundType;
        static readonly field_235595_Q_: Internal.SoundType;
        static readonly field_222473_t: Internal.SoundType;
        static readonly field_222471_r: Internal.SoundType;
        static readonly field_185849_b: Internal.SoundType;
        readonly field_185860_m: number;
        static readonly field_235599_U_: Internal.SoundType;
        static readonly field_235598_T_: Internal.SoundType;
        static readonly field_235597_S_: Internal.SoundType;
        static readonly field_185859_l: Internal.SoundType;
        static readonly field_235590_L_: Internal.SoundType;
        static readonly field_235596_R_: Internal.SoundType;
        static readonly field_235591_M_: Internal.SoundType;
        static readonly field_235592_N_: Internal.SoundType;
        static readonly field_235579_A_: Internal.SoundType;
        static readonly field_185856_i: Internal.SoundType;
        static readonly field_222468_o: Internal.SoundType;
        static readonly field_211383_n: Internal.SoundType;
        static readonly field_185858_k: Internal.SoundType;
        static readonly field_185852_e: Internal.SoundType;
        static readonly field_185854_g: Internal.SoundType;
        static readonly field_185850_c: Internal.SoundType;
        static readonly field_235601_w_: Internal.SoundType;
        readonly field_185861_n: number;
        static readonly field_222474_u: Internal.SoundType;
        static readonly field_222472_s: Internal.SoundType;
        static readonly field_222470_q: Internal.SoundType;
        static readonly field_235588_J_: Internal.SoundType;
        static readonly field_185848_a: Internal.SoundType;
        static readonly field_235589_K_: Internal.SoundType;
        static readonly field_235600_d_: Internal.SoundType;
        static readonly field_235586_H_: Internal.SoundType;
        static readonly field_235587_I_: Internal.SoundType;
        static readonly field_235585_G_: Internal.SoundType;
        static readonly field_235584_F_: Internal.SoundType;
        static readonly field_235583_E_: Internal.SoundType;
        static readonly field_235582_D_: Internal.SoundType;
        static readonly field_185855_h: Internal.SoundType;
        static readonly field_235580_B_: Internal.SoundType;
        static readonly field_235581_C_: Internal.SoundType;
        static readonly field_185857_j: Internal.SoundType;
        static readonly field_226947_m_: Internal.SoundType;
        static readonly field_222469_p: Internal.SoundType;
        static readonly field_185851_d: Internal.SoundType;
        static readonly field_185853_f: Internal.SoundType;
        static readonly field_211382_m: Internal.SoundType;
        static readonly field_235602_z_: Internal.SoundType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: Internal.SoundEvent, arg3: Internal.SoundEvent, arg4: Internal.SoundEvent, arg5: Internal.SoundEvent, arg6: Internal.SoundEvent);
    }
    type SoundType_ = SoundType;
    class SAnimateHandPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148977_d(): number;
        func_148978_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity, arg1: number);
    }
    type SAnimateHandPacket_ = SAnimateHandPacket;
    interface Int2ObjectMap$Entry <V> extends Internal.Map$Entry<number, V> {
        getIntKey(): number;
        getKey(): number;
        getKey(): any;
        (): number;
    }
    type Int2ObjectMap$Entry_<V> = (()=>number) | Int2ObjectMap$Entry<V>;
    class RegionSectionCache <R> extends Document.Object implements Internal.AutoCloseable {
        func_219112_a(arg0: Internal.ChunkPos): void;
        close(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File, arg1: Internal.Function<Internal.Runnable, Internal.Codec<R>>, arg2: Internal.Function<Internal.Runnable, R>, arg3: Internal.DataFixer, arg4: any, arg5: boolean);
    }
    type RegionSectionCache_<R> = RegionSectionCache<R>;
    abstract class JigsawPiece extends Document.Object {
        func_230378_a_(arg0: Internal.TemplateManager, arg1: Internal.ISeedReader, arg2: Internal.StructureManager, arg3: Internal.ChunkGenerator, arg4: BlockPos, arg5: BlockPos, arg6: Internal.Rotation_, arg7: Internal.MutableBoundingBox, arg8: Internal.Random, arg9: boolean): boolean;
        func_214846_a(arg0: Internal.IWorld, arg1: Internal.Template$BlockInfo, arg2: BlockPos, arg3: Internal.Rotation_, arg4: Internal.Random, arg5: Internal.MutableBoundingBox): void;
        func_214845_a(arg0: Internal.JigsawPattern$PlacementBehaviour_): Internal.JigsawPiece;
        func_214854_c(): Internal.JigsawPattern$PlacementBehaviour;
        func_214849_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_, arg3: Internal.Random): Internal.List<Internal.Template$BlockInfo>;
        func_214852_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_): Internal.MutableBoundingBox;
        func_214850_d(): number;
        static func_242845_a(arg0: Internal.ConfiguredFeature<any, any>): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.FeatureJigsawPiece>;
        func_214853_a(): Internal.IJigsawDeserializer<any>;
        static func_242851_a(arg0: string, arg1: Internal.StructureProcessorList): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.LegacySingleJigsawPiece>;
        static func_242861_b(arg0: string, arg1: Internal.StructureProcessorList): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.SingleJigsawPiece>;
        static func_242853_a(arg0: Internal.List<Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.JigsawPiece>>): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.ListJigsawPiece>;
        static func_242864_g(): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.EmptyJigsawPiece>;
        static func_242849_a(arg0: string): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.LegacySingleJigsawPiece>;
        static func_242859_b(arg0: string): Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.SingleJigsawPiece>;
        static readonly field_236847_e_: Internal.Codec<Internal.JigsawPiece>;
    }
    type JigsawPiece_ = JigsawPiece;
    class SUpdateViewDistancePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218758_b(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type SUpdateViewDistancePacket_ = SUpdateViewDistancePacket;
    interface IForgeKeybinding {
        getKeyModifierDefault(): Internal.KeyModifier;
        getKey(): Internal.InputMappings$Input;
        isConflictContextAndModifierActive(): boolean;
        getKeyConflictContext(): Internal.IKeyConflictContext;
        setToDefault(): void;
        isActiveAndMatches(arg0: Internal.InputMappings$Input): boolean;
        getKeyModifier(): Internal.KeyModifier;
        getKeyBinding(): Internal.KeyBinding;
        hasKeyCodeModifierConflict(arg0: Internal.KeyBinding): boolean;
        setKeyModifierAndCode(arg0: Internal.KeyModifier_, arg1: Internal.InputMappings$Input): void;
        setKeyConflictContext(arg0: Internal.IKeyConflictContext): void;
    }
    type IForgeKeybinding_ = IForgeKeybinding;
    interface AccessorSmithingRecipe {
        getBase(): Internal.Ingredient;
        getAddition(): Internal.Ingredient;
    }
    type AccessorSmithingRecipe_ = AccessorSmithingRecipe;
    abstract class LivingRenderer <T, M> extends Internal.EntityRenderer<T> implements Internal.IEntityRenderer<T, M> {
        func_217764_d(): M;
        func_177094_a(arg0: Internal.LayerRenderer<T, M>): boolean;
        func_225623_a_(arg0: T, arg1: number, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer_, arg5: number): void;
        static func_229117_c_(arg0: Internal.LivingEntity, arg1: number): number;
        field_77045_g: M;
        field_177097_h: Internal.List<Internal.LayerRenderer<T, M>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityRendererManager, arg1: M, arg2: number);
    }
    type LivingRenderer_<T, M> = LivingRenderer<T, M>;
    class ServerStatisticsManager extends Internal.StatisticsManager {
        func_150883_b(): void;
        func_150876_a(arg0: Internal.ServerPlayerEntity): void;
        func_199062_a(arg0: Internal.DataFixer, arg1: string): void;
        func_150877_d(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MinecraftServer, arg1: Internal.File);
    }
    type ServerStatisticsManager_ = ServerStatisticsManager;
    class Field extends Internal.AccessibleObject implements Internal.Member {
        setByte(arg0: any, arg1: number): void;
        getByte(arg0: any): number;
        getName(): string;
        isSynthetic(): boolean;
        getDouble(arg0: any): number;
        setShort(arg0: any, arg1: number): void;
        getFloat(arg0: any): number;
        setDouble(arg0: any, arg1: number): void;
        setChar(arg0: any, arg1: string): void;
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        getDeclaringClass(): Internal.Class<any>;
        getAnnotationsByType<T_>(arg0: Internal.Class<T_>): T_[];
        toGenericString(): string;
        get(arg0: any): any;
        getBoolean(arg0: any): boolean;
        getGenericType(): Internal.Type;
        getModifiers(): number;
        getAnnotatedType(): Internal.AnnotatedType;
        setFloat(arg0: any, arg1: number): void;
        set(arg0: any, arg1: any): void;
        getShort(arg0: any): number;
        setInt(arg0: any, arg1: number): void;
        getLong(arg0: any): number;
        getInt(arg0: any): number;
        getChar(arg0: any): string;
        setLong(arg0: any, arg1: number): void;
        getType(): Internal.Class<any>;
        getAnnotation<T_>(arg0: Internal.Class<T_>): T_;
        isEnumConstant(): boolean;
        setBoolean(arg0: any, arg1: boolean): void;
        get synthetic(): boolean;
        get annotatedType(): Internal.AnnotatedType;
        get enumConstant(): boolean;
        get name(): string;
        get genericType(): Internal.Type;
        get modifiers(): number;
        get type(): Internal.Class<any>;
        get declaringClass(): Internal.Class<any>;
    }
    type Field_ = Field;
    abstract class AbstractVillagerEntity extends Internal.AgeableEntity implements Internal.INPC, Internal.IMerchant, Internal.ICustomDataHolder {
        shouldRiderSit(): boolean;
        func_213707_a(arg0: Internal.PlayerEntity, arg1: Internal.ITextComponent_, arg2: number): void;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_213704_a(arg0: Internal.MerchantOffer): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213703_a(arg0: Internal.MerchantOffers): void;
        func_213705_dZ(): boolean;
        func_213720_r(arg0: number): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        architectury$handleOffer(offer: Internal.MerchantOffer): Internal.MerchantOffer;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213719_ec(): number;
        func_213716_dX(): boolean;
        localvar$bmg000$handleOffer(offer: Internal.MerchantOffer): Internal.MerchantOffer;
        func_213702_q(arg0: number): void;
        func_223340_ej(): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_190670_t_(): Internal.World;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_213715_ed(): Internal.Inventory;
        func_213711_eb(): void;
        hasCooldown(): boolean;
        func_70931_l_(): Internal.PlayerEntity;
        func_213706_dY(): Internal.MerchantOffers;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        setVariable(arg0: boolean): void;
        getEntity(): Internal.Entity;
        getVariable(): boolean;
        asKJS(): any;
        architectury$getMaxOfferOverride(): number;
        redirect$bmg000$overrideIterator(set: Internal.Set<any>, offers: Internal.MerchantOffers, itemListings: Internal.VillagerTrades$ITrade[], maxOffers: number): Internal.Iterator<any>;
        canRiderInteract(): boolean;
        func_70932_a_(arg0: Internal.PlayerEntity): void;
        func_110297_a_(arg0: Internal.ItemStack): void;
        func_213714_ea(): Internal.SoundEvent;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_213708_dV(): number;
        getClassification(arg0: boolean): Internal.EntityClassification;
        breeding: boolean;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get variable(): boolean;
        get entity(): Internal.Entity;
        set variable(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.AbstractVillagerEntity>, arg1: Internal.World);
    }
    type AbstractVillagerEntity_ = AbstractVillagerEntity;
    interface CharacterIterator extends Internal.Cloneable {
        next(): string;
        current(): string;
        getIndex(): number;
        previous(): string;
        last(): string;
        setIndex(arg0: number): string;
        getEndIndex(): number;
        clone(): any;
        getBeginIndex(): number;
        first(): string;
    }
    type CharacterIterator_ = CharacterIterator;
    class InputEvent$RawMouseEvent extends net.minecraftforge.client.event.InputEvent {
        getButton(): number;
        getMods(): number;
        getAction(): number;
        get button(): number;
        get mods(): number;
        get action(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type InputEvent$RawMouseEvent_ = InputEvent$RawMouseEvent;
    interface ServerChunkCacheAccessor {
        getDistanceManager(): Internal.TicketManager;
        (): Internal.TicketManager;
    }
    type ServerChunkCacheAccessor_ = (()=>Internal.TicketManager) | ServerChunkCacheAccessor;
    interface MerchantOfferAccess {
        setMaxUses(arg0: number): void;
        (arg0: number): void;
    }
    type MerchantOfferAccess_ = ((arg0: number)=>void) | MerchantOfferAccess;
    class DummySensor extends Internal.Sensor<Internal.LivingEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type DummySensor_ = DummySensor;
    abstract class IngredientAction extends Internal.IngredientActionFilter {
        static readList(buf: Internal.PacketBuffer): Internal.List<Internal.IngredientAction>;
        toJson(json: Internal.JsonObject): void;
        toJson(): Internal.JsonObject;
        transform(arg0: Internal.ItemStack, arg1: number, arg2: Internal.CraftingInventory): Internal.ItemStack;
        static writeList(buf: Internal.PacketBuffer, list: Internal.List<Internal.IngredientAction>): void;
        getType(): string;
        static getRemaining(container: Internal.CraftingInventory, index: number, ingredientActions: Internal.List<Internal.IngredientAction>): Internal.ItemStack;
        static parseList(json: Internal.JsonElement): Internal.List<Internal.IngredientAction>;
        static readonly FACTORY_MAP: {"damage":any,"custom":any,"keep":any,"replace":any};
        get type(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type IngredientAction_ = IngredientAction;
    class StatsNBT$Builder extends Document.Object {
        set(arg0: Internal.IToolStat<any>, arg1: number): Internal.StatsNBT$Builder;
        build(): Internal.StatsNBT;
    }
    type StatsNBT$Builder_ = StatsNBT$Builder;
    class ResolvedModule extends Document.Object {
        reference(): Internal.ModuleReference;
        configuration(): java_.lang.module.Configuration;
        reads(): Internal.Set<Internal.ResolvedModule>;
        name(): string;
    }
    type ResolvedModule_ = ResolvedModule;
    class ClientTickEventJS extends Internal.ClientEventJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ClientTickEventJS_ = ClientTickEventJS;
    class ImmutableList$Builder <E> extends Internal.ImmutableCollection$ArrayBasedBuilder<E> {
        add(arg0: any[]): Internal.ImmutableCollection$Builder<any>;
        add(...arg0: E[]): Internal.ImmutableList$Builder<E>;
        add(arg0: any): Internal.ImmutableCollection$Builder<any>;
        add(arg0: any): Internal.ImmutableCollection$ArrayBasedBuilder<any>;
        add(arg0: E): Internal.ImmutableList$Builder<E>;
        build(): Internal.ImmutableList<E>;
        build(): Internal.ImmutableCollection<any>;
        addAll(arg0: Internal.Iterable_<E>): Internal.ImmutableList$Builder<E>;
        addAll(arg0: Internal.Iterable_<any>): Internal.ImmutableCollection$Builder<any>;
        addAll(arg0: Internal.Iterator<any>): Internal.ImmutableCollection$Builder<any>;
        addAll(arg0: Internal.Iterator<E>): Internal.ImmutableList$Builder<E>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ImmutableList$Builder_<E> = ImmutableList$Builder<E>;
    interface IChunkStatusListener {
        func_219510_b(): void;
        func_219509_a(arg0: Internal.ChunkPos): void;
        func_219508_a(arg0: Internal.ChunkPos, arg1: Internal.ChunkStatus_): void;
    }
    type IChunkStatusListener_ = IChunkStatusListener;
    class InventoryChangedEventJS extends Internal.PlayerEventJS {
        getSlot(): number;
        getItem(): Internal.ItemStackJS;
        get item(): Internal.ItemStackJS;
        get slot(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(p: Internal.ServerPlayerEntity, is: Internal.ItemStack, s: number);
    }
    type InventoryChangedEventJS_ = InventoryChangedEventJS;
    class CombiningRecipeJS extends Internal.MekanismRecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CombiningRecipeJS_ = CombiningRecipeJS;
    interface ICriterionInstance {
        func_230240_a_(arg0: Internal.ConditionArraySerializer): Internal.JsonObject;
        func_192244_a(): ResourceLocation;
    }
    type ICriterionInstance_ = ICriterionInstance;
    class ObjectIntIdentityMap <T> extends Document.Object implements Internal.IObjectIntIterable<T> {
        func_148757_b(arg0: T): number;
        func_148745_a(arg0: number): T;
        iterator(): Internal.Iterator<T>;
        func_148746_a(arg0: T, arg1: number): void;
        spliterator(): Internal.Spliterator<T>;
        forEach(arg0: Internal.Consumer_<T>): void;
        func_186804_a(): number;
        func_195867_b(arg0: T): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type ObjectIntIdentityMap_<T> = ObjectIntIdentityMap<T>;
    abstract class ShoulderRidingEntity extends Internal.TameableEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_213439_d(arg0: Internal.ServerPlayerEntity): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_191995_du(): boolean;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type ShoulderRidingEntity_ = ShoulderRidingEntity;
    class FisherBoostRecipeJS extends Internal.ThermalRecipeJS {
        output(arg0: number): Internal.FisherBoostRecipeJS;
        lootTable(arg0: string): Internal.FisherBoostRecipeJS;
        useChance(arg0: number): Internal.FisherBoostRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FisherBoostRecipeJS_ = FisherBoostRecipeJS;
    class SpectralArrowEntity extends Internal.AbstractArrowEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity);
        constructor(arg0: Internal.EntityType<Internal.SpectralArrowEntity>, arg1: Internal.World);
    }
    type SpectralArrowEntity_ = SpectralArrowEntity;
    class GuiScreenEvent$MouseReleasedEvent$Post extends Internal.GuiScreenEvent$MouseReleasedEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number);
    }
    type GuiScreenEvent$MouseReleasedEvent$Post_ = GuiScreenEvent$MouseReleasedEvent$Post;
    abstract class BanEntry <T> extends Internal.UserListEntry<T> {
        func_73686_f(): string;
        func_199040_b(): string;
        func_199041_e(): Internal.ITextComponent;
        func_73680_d(): Internal.Date;
        static readonly field_73698_a: Internal.SimpleDateFormat;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: T, arg1: Internal.Date, arg2: string, arg3: Internal.Date, arg4: string);
    }
    type BanEntry_<T> = BanEntry<T>;
    interface Function12 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.Function3<T10, T11, T12, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function5<T8, T9, T10, T11, T12, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function4<T9, T10, T11, T12, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function7<T6, T7, T8, T9, T10, T11, T12, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function6<T7, T8, T9, T10, T11, T12, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function9<T4, T5, T6, T7, T8, T9, T10, T11, T12, R>>;
        curry10(): Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Internal.BiFunction<T11, T12, R>>;
        curry11(): Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Internal.Function<T12, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function8<T5, T6, T7, T8, T9, T10, T11, T12, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function10<T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R>>;
        curry(): Internal.Function<T1, Internal.Function11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12): R;
    }
    type Function12_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12)=>R) | Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R>;
    class Team$CollisionRule extends Internal.Enum<Internal.Team$CollisionRule> {
        static valueOf(arg0: string): Internal.Team$CollisionRule;
        static func_186686_a(arg0: string): Internal.Team$CollisionRule;
        static values(): Internal.Team$CollisionRule[];
        func_197907_b(): Internal.ITextComponent;
        static readonly PUSH_OTHER_TEAMS: Internal.Team$CollisionRule;
        static readonly NEVER: Internal.Team$CollisionRule;
        static readonly PUSH_OWN_TEAM: Internal.Team$CollisionRule;
        readonly field_186694_f: number;
        static readonly ALWAYS: Internal.Team$CollisionRule;
        readonly field_186693_e: string;
    }
    type Team$CollisionRule_ = "always" | "never" | "push_other_teams" | "push_own_team" | Team$CollisionRule;
    class MerchantInventory extends Document.Object implements Internal.IInventory {
        func_213901_a(arg0: Internal.Item_): number;
        func_70304_b(arg0: number): Internal.ItemStack;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_174888_l(): void;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_70471_c(arg0: number): void;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        func_70302_i_(): number;
        func_191420_l(): boolean;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        func_214025_g(): Internal.MerchantOffer;
        func_214024_h(): number;
        func_70470_g(): void;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_70296_d(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IMerchant);
    }
    type MerchantInventory_ = MerchantInventory;
    class FilterOutputStream extends Internal.OutputStream {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.OutputStream);
    }
    type FilterOutputStream_ = FilterOutputStream;
    class Date extends Document.Object implements Internal.Serializable, Internal.Cloneable, Internal.Comparable<Internal.Date> {
        static UTC(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        before(arg0: Internal.Date): boolean;
        getTime(): number;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.Date): number;
        getHours(): number;
        setHours(arg0: number): void;
        setSeconds(arg0: number): void;
        getDate(): number;
        static from(arg0: Internal.Instant): Internal.Date;
        getMonth(): number;
        after(arg0: Internal.Date): boolean;
        setTime(arg0: number): void;
        setMonth(arg0: number): void;
        setMinutes(arg0: number): void;
        static parse(arg0: string): number;
        setYear(arg0: number): void;
        toInstant(): Internal.Instant;
        getDay(): number;
        getMinutes(): number;
        toGMTString(): string;
        getTimezoneOffset(): number;
        getSeconds(): number;
        getYear(): number;
        clone(): any;
        setDate(arg0: number): void;
        toLocaleString(): string;
        get date(): number;
        get hours(): number;
        get seconds(): number;
        get month(): number;
        get timezoneOffset(): number;
        get year(): number;
        get minutes(): number;
        get time(): number;
        get day(): number;
        set date(arg0: number);
        set seconds(arg0: number);
        set hours(arg0: number);
        set month(arg0: number);
        set year(arg0: number);
        set minutes(arg0: number);
        set time(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number);
        constructor();
        constructor(arg0: number);
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type Date_ = Date;
    class RandomValueRange extends Document.Object implements Internal.IRandomRange, Internal.JsonSerializableKJS {
        func_186512_b(): number;
        func_215830_a(): ResourceLocation;
        static func_215837_a(arg0: number, arg1: number): Internal.RandomValueRange;
        func_186510_a(arg0: number): boolean;
        func_186511_a(arg0: Internal.Random): number;
        func_186507_b(arg0: Internal.Random): number;
        func_186509_a(): number;
        toJsonKJS(): Internal.JsonElement;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
        constructor(arg0: number);
    }
    type RandomValueRange_ = RandomValueRange;
    interface BeeEntityAccessor {
        callSetFlag(arg0: number, arg1: boolean): void;
        callDoesHiveHaveSpace(arg0: BlockPos): boolean;
    }
    type BeeEntityAccessor_ = BeeEntityAccessor;
    class DyeColor extends Internal.Enum<Internal.DyeColor> implements Internal.IStringSerializable, dev.latvian.mods.rhino.mod.util.color.Color {
        static func_204271_a(arg0: string, arg1: Internal.DyeColor_): Internal.DyeColor;
        getRgbKJS(): number;
        static valueOf(arg0: string): Internal.DyeColor;
        func_218388_g(): number;
        static values(): Internal.DyeColor[];
        func_196060_f(): number;
        static getColor(arg0: Internal.ItemStack): Internal.DyeColor;
        getSerializeKJS(): string;
        getTag(): Internal.Tags$IOptionalNamedTag<Internal.Item>;
        func_193349_f(): number[];
        func_176762_d(): string;
        static func_196056_a(arg0: number): Internal.DyeColor;
        func_176610_l(): string;
        func_196055_e(): Internal.MaterialColor;
        func_196059_a(): number;
        static func_196058_b(arg0: number): Internal.DyeColor;
        getHexKJS(): string;
        createTextColorKJS(): Internal.Color;
        getArgbKJS(): number;
        getFireworkColorKJS(): number;
        getColorValue(): number;
        specialEquals(o: any, shallow: boolean): boolean;
        static readonly WHITE: Internal.DyeColor;
        static readonly GRAY: Internal.DyeColor;
        static readonly BLUE: Internal.DyeColor;
        static readonly PURPLE: Internal.DyeColor;
        static readonly GREEN: Internal.DyeColor;
        static readonly RED: Internal.DyeColor;
        static readonly PINK: Internal.DyeColor;
        static readonly LIGHT_GRAY: Internal.DyeColor;
        static readonly LIGHT_BLUE: Internal.DyeColor;
        static readonly LIME: Internal.DyeColor;
        static readonly MAGENTA: Internal.DyeColor;
        static readonly BLACK: Internal.DyeColor;
        static readonly YELLOW: Internal.DyeColor;
        static readonly CYAN: Internal.DyeColor;
        static readonly BROWN: Internal.DyeColor;
        static readonly ORANGE: Internal.DyeColor;
        get fireworkColorKJS(): number;
        get rgbKJS(): number;
        get argbKJS(): number;
        get serializeKJS(): string;
        get hexKJS(): string;
        get colorValue(): number;
        get tag(): Internal.Tags$IOptionalNamedTag<Internal.Item>;
    }
    type DyeColor_ = "white" | "orange" | "magenta" | "light_blue" | "yellow" | "lime" | "pink" | "gray" | "light_gray" | "cyan" | "purple" | "blue" | "brown" | "green" | "red" | "black" | DyeColor;
    class DrawHighlightEvent$HighlightBlock extends Internal.DrawHighlightEvent {
        getTarget(): Internal.BlockRayTraceResult;
        get target(): Internal.BlockRayTraceResult;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.WorldRenderer, arg1: Internal.ActiveRenderInfo, arg2: Internal.RayTraceResult, arg3: number, arg4: Internal.MatrixStack, arg5: Internal.IRenderTypeBuffer);
    }
    type DrawHighlightEvent$HighlightBlock_ = DrawHighlightEvent$HighlightBlock;
    class ScriptPackInfo extends Document.Object {
        readonly displayName: Internal.ITextComponent;
        readonly namespace: string;
        readonly pathStart: string;
        readonly scripts: Internal.List<Internal.ScriptFileInfo>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(n: string, p: string);
    }
    type ScriptPackInfo_ = ScriptPackInfo;
    class RemoveSpawnsByIDProperties extends Document.Object {
        readonly biomes: Internal.WorldgenEntryList;
        readonly entities: Internal.WorldgenEntryList;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RemoveSpawnsByIDProperties_ = RemoveSpawnsByIDProperties;
    interface RefreshFunction <T> {
        shouldRefresh(arg0: T): boolean;
        (arg0: T): boolean;
    }
    type RefreshFunction_<T> = ((arg0: T)=>boolean) | RefreshFunction<T>;
    class NewChatGui extends Internal.AbstractGui implements Internal.NewChatGuiAccess {
        callRemoveById(arg0: number): void;
        func_146240_d(): void;
        func_194815_g(): number;
        static func_194816_c(arg0: number): number;
        func_146231_a(arg0: boolean): void;
        func_146245_b(): void;
        func_146234_a(arg0: Internal.ITextComponent_, arg1: number): void;
        func_146242_c(arg0: number): void;
        func_146241_e(): boolean;
        func_146227_a(arg0: Internal.ITextComponent_): void;
        func_194813_a(arg0: number): void;
        func_146238_c(): Internal.List<string>;
        func_146232_i(): number;
        func_146239_a(arg0: string): void;
        callAddMessage(arg0: Internal.ITextComponent_, arg1: number): void;
        func_146228_f(): number;
        func_146246_g(): number;
        static func_194814_b(arg0: number): number;
        func_238491_a_(arg0: number, arg1: number): boolean;
        func_238492_a_(arg0: Internal.MatrixStack, arg1: number): void;
        func_238493_a_(arg0: Internal.ITextComponent_, arg1: number, arg2: number, arg3: boolean): void;
        func_238495_b_(arg0: Internal.ITextComponent_): void;
        func_238494_b_(arg0: number, arg1: number): Internal.Style;
        readonly field_146253_i: Internal.List<Internal.ChatLine<Internal.IReorderingProcessor>>;
        field_146250_j: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type NewChatGui_ = NewChatGui;
    abstract class Icon extends Document.Object implements Internal.Drawable {
        drawStatic(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number): void;
        withBorder(color: Internal.Color4I, roundEdges: boolean): Internal.Icon;
        withColor(color: Internal.Color4I): Internal.Icon;
        isEmpty(): boolean;
        withUV(x: number, y: number, w: number, h: number, tw: number, th: number): Internal.Icon;
        withUV(u0: number, v0: number, u1: number, v1: number): Internal.Icon;
        draw(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number): void;
        withTint(color: Internal.Color4I): Internal.Icon;
        draw3D(matrixStack: Internal.MatrixStack): void;
        static getIcon(id: ResourceLocation_): Internal.Icon;
        static getIcon(json: Internal.JsonElement): Internal.Icon;
        static getIcon(id: string): Internal.Icon;
        createPixelBuffer(): Internal.PixelBuffer;
        getIngredient(): any;
        withPadding(padding: number): Internal.Icon;
        copy(): Internal.Icon;
        hasPixelBuffer(): boolean;
        combineWith(icon: Internal.Icon): Internal.Icon;
        combineWith(...icons: Internal.Icon[]): Internal.Icon;
        getJson(): Internal.JsonElement;
        static readonly EMPTY: Internal.Color4I;
        get ingredient(): any;
        get json(): Internal.JsonElement;
        get empty(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Icon_ = Icon;
    class BeehiveTreeDecorator extends Internal.TreeDecorator {
        static readonly field_236863_a_: Internal.Codec<Internal.BeehiveTreeDecorator>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type BeehiveTreeDecorator_ = BeehiveTreeDecorator;
    interface ObservableArea {
        observes(arg0: Vec3i): boolean;
        calculateAffectedChunks(arg0: Vec3i, arg1: Vec3i): Internal.Collection<Internal.ChunkPos>;
        calculateAffectedChunks(arg0: Internal.AxisAlignedBB, arg1: Vec3i): Internal.Collection<Internal.ChunkPos>;
        getAffectedChunks(arg0: Vec3i): Internal.Collection<Internal.ChunkPos>;
    }
    type ObservableArea_ = ObservableArea;
    abstract class AsynchronousFileChannel extends Document.Object implements Internal.AsynchronousChannel {
        isOpen(): boolean;
        read(arg0: Internal.ByteBuffer, arg1: number): java_.util.concurrent.Future<number>;
        read<A_>(arg0: Internal.ByteBuffer, arg1: number, arg2: A_, arg3: Internal.CompletionHandler<number, A_>): void;
        truncate(arg0: number): Internal.AsynchronousFileChannel;
        size(): number;
        lock(arg0: number, arg1: number, arg2: boolean): java_.util.concurrent.Future<Internal.FileLock>;
        lock<A_>(arg0: A_, arg1: Internal.CompletionHandler<Internal.FileLock, A_>): void;
        lock<A_>(arg0: number, arg1: number, arg2: boolean, arg3: A_, arg4: Internal.CompletionHandler<Internal.FileLock, A_>): void;
        lock(): java_.util.concurrent.Future<Internal.FileLock>;
        force(arg0: boolean): void;
        close(): void;
        write(arg0: Internal.ByteBuffer, arg1: number): java_.util.concurrent.Future<number>;
        write<A_>(arg0: Internal.ByteBuffer, arg1: number, arg2: A_, arg3: Internal.CompletionHandler<number, A_>): void;
        tryLock(): Internal.FileLock;
        tryLock(arg0: number, arg1: number, arg2: boolean): Internal.FileLock;
        static open(arg0: Internal.Path, arg1: Internal.Set<Internal.OpenOption>, arg2: Internal.ExecutorService, ...arg3: any[]): Internal.AsynchronousFileChannel;
        static open(arg0: Internal.Path, ...arg1: Internal.OpenOption[]): Internal.AsynchronousFileChannel;
    }
    type AsynchronousFileChannel_ = AsynchronousFileChannel;
    interface ValueLayout$OfBoolean extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfBoolean;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfBoolean;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout$OfBoolean;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfBoolean;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfBoolean_ = ValueLayout$OfBoolean;
    /**
    *
    * Represents an Ingredient, which can match one or multiple ItemStacks.
    *
    * Can be casted from several object, which has different usages.
    *
    * If you want to specify nbt to check in ItemStack, use either Item.of() or {type: "forge:nbt"}.
    *
    * Using {item: ItemStackJS} will NOT preserve NBT in any form.
    */
    interface IngredientJS extends Internal.JsonSerializable, Internal.WrappedJS, Internal.Copyable {
        getItemIds(): Internal.Set<string>;
        anyStackMatches(ingredient: Internal.IngredientJS_): boolean;
        testVanillaItem(item: Internal.Item_): boolean;
        test(arg0: Internal.ItemStackJS_): boolean;
        getStacks(): Internal.Set<Internal.ItemStackJS>;
        getVanillaItems(): Internal.Set<Internal.Item>;
        isEmpty(): boolean;
        isInvalidRecipeIngredient(): boolean;
        asIngredientStack(): Internal.IngredientStackJS;
        getVanillaPredicate(): Internal.Predicate<Internal.ItemStack>;
        filter(filter: Internal.IngredientJS_): Internal.IngredientJS;
        createVanillaIngredient(): Internal.Ingredient;
        toJson(): Internal.JsonElement;
        not(): Internal.IngredientJS;
        withCount(count: number): Internal.IngredientJS;
        unwrapStackIngredient(): Internal.List<Internal.IngredientJS>;
        getFirst(): Internal.ItemStackJS;
        testVanilla(stack: Internal.ItemStack): boolean;
        x(c: number): Internal.IngredientJS;
        copy(): Internal.IngredientJS;
        copy(): Internal.Copyable;
        getCount(): number;
        (arg0: Internal.ItemStackJS): boolean;
    }
    type IngredientJS_ = Internal.ItemStackJS_ | Internal.FluidStackJS_ | "*" | "" | "-" | "air" | "minecraft:air" | `%${string}` | `@${platform.modids}` | `#${Tag.items}` | RegExp | Internal.Ingredient | Internal.IngredientJS_[] | {type: string} | {item: Internal.ItemStackJS_, count?: number} | {fluid: Internal.FluidStackJS_} | {value: object} | {ingredient: object} | ((arg0: Internal.ItemStackJS)=>boolean) | IngredientJS;
    interface IWorldGenerationReader extends Internal.IWorldGenerationBaseReader, Internal.IWorldWriter {
    }
    type IWorldGenerationReader_ = IWorldGenerationReader;
    class BlockPlaceEventJS extends Internal.EntityEventJS {
        getBlock(): Internal.BlockContainerJS;
        get block(): Internal.BlockContainerJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(entity: Internal.Entity, world: Internal.World, pos: BlockPos, state: Internal.BlockState);
    }
    type BlockPlaceEventJS_ = BlockPlaceEventJS;
    interface ChannelOutboundBuffer$MessageProcessor {
        processMessage(arg0: any): boolean;
        (arg0: any): boolean;
    }
    type ChannelOutboundBuffer$MessageProcessor_ = ((arg0: any)=>boolean) | ChannelOutboundBuffer$MessageProcessor;
    class MachineAppearanceProperty <T> extends Internal.ForgeRegistryEntry<Internal.MachineAppearanceProperty<any>> {
        getCodec(): Internal.Codec<T>;
        setRegistryName(arg0: ResourceLocation_): any;
        getDefaultValue(): T;
        get codec(): Internal.Codec<T>;
        get defaultValue(): T;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<T>, arg1: T);
    }
    type MachineAppearanceProperty_<T> = Registry.custommachinery.appearance_property | MachineAppearanceProperty<T>;
    class DropTarget extends Document.Object implements Internal.DropTargetListener, Internal.Serializable {
        removeDropTargetListener(arg0: Internal.DropTargetListener): void;
        getDropTargetContext(): Internal.DropTargetContext;
        drop(arg0: Internal.DropTargetDropEvent): void;
        dragEnter(arg0: Internal.DropTargetDragEvent): void;
        setComponent(arg0: Internal.Component): void;
        dropActionChanged(arg0: Internal.DropTargetDragEvent): void;
        isActive(): boolean;
        addDropTargetListener(arg0: Internal.DropTargetListener): void;
        setFlavorMap(arg0: Internal.FlavorMap): void;
        getFlavorMap(): Internal.FlavorMap;
        setActive(arg0: boolean): void;
        addNotify(): void;
        removeNotify(): void;
        dragOver(arg0: Internal.DropTargetDragEvent): void;
        getComponent(): Internal.Component;
        dragExit(arg0: Internal.DropTargetEvent): void;
        setDefaultActions(arg0: number): void;
        getDefaultActions(): number;
        get flavorMap(): Internal.FlavorMap;
        get component(): Internal.Component;
        get defaultActions(): number;
        get active(): boolean;
        get dropTargetContext(): Internal.DropTargetContext;
        set flavorMap(arg0: Internal.FlavorMap);
        set component(arg0: Internal.Component);
        set defaultActions(arg0: number);
        set active(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Component, arg1: number, arg2: Internal.DropTargetListener);
        constructor(arg0: Internal.Component, arg1: Internal.DropTargetListener);
        constructor();
        constructor(arg0: Internal.Component, arg1: number, arg2: Internal.DropTargetListener, arg3: boolean);
        constructor(arg0: Internal.Component, arg1: number, arg2: Internal.DropTargetListener, arg3: boolean, arg4: Internal.FlavorMap);
    }
    type DropTarget_ = DropTarget;
    interface LongIterable extends Internal.Iterable<number> {
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.LongIterator;
        forEach(arg0: Internal.LongConsumer_): void;
        forEach(arg0: Internal.Consumer_<number>): void;
        (): Internal.LongIterator;
    }
    type LongIterable_ = (()=>Internal.LongIterator) | LongIterable;
    abstract class ConstellationEffect extends Document.Object {
        readFromNBT(arg0: Internal.CompoundNBT_): void;
        playClientEffect(arg0: Internal.World, arg1: BlockPos, arg2: Internal.TileRitualPedestal, arg3: number, arg4: boolean): void;
        getPedestal(arg0: Internal.World, arg1: BlockPos): Internal.TileRitualPedestal;
        playEffect(arg0: Internal.World, arg1: BlockPos, arg2: Internal.ConstellationEffectProperties, arg3: Internal.IMinorConstellation_): boolean;
        clearCache(): void;
        getOwningPlayerInWorld(arg0: Internal.World, arg1: BlockPos): Internal.PlayerEntity;
        getConfig(): Internal.ConstellationEffect$Config;
        static playConstellationPing(arg0: Internal.PktPlayEffect): void;
        static sendConstellationPing(arg0: Internal.World, arg1: Internal.Vector3, arg2: Internal.IConstellation_): void;
        sendConstellationPing(arg0: Internal.World, arg1: Internal.Vector3): void;
        createProperties(arg0: number): Internal.ConstellationEffectProperties;
        getPos(): hellfirepvp.astralsorcery.common.util.block.ILocatable;
        needsChunkToBeLoaded(): boolean;
        getConstellation(): Internal.IWeakConstellation;
        getPlayerAffectionFlag(): Internal.PlayerAffectionFlags$AffectionFlag;
        writeToNBT(arg0: Internal.CompoundNBT_): void;
        get constellation(): Internal.IWeakConstellation;
        get pos(): hellfirepvp.astralsorcery.common.util.block.ILocatable;
        get playerAffectionFlag(): Internal.PlayerAffectionFlags$AffectionFlag;
        get config(): Internal.ConstellationEffect$Config;
    }
    type ConstellationEffect_ = ConstellationEffect;
    class MinecartElement extends Internal.AnimatedSceneElement {
        getRotation(): Vec3;
        setPositionOffset(arg0: Vec3, arg1: boolean): void;
        setRotation(arg0: number, arg1: boolean): void;
        getPositionOffset(): Vec3;
        get rotation(): Vec3;
        get positionOffset(): Vec3;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Vec3, arg1: number, arg2: Internal.MinecartElement$MinecartConstructor);
    }
    type MinecartElement_ = MinecartElement;
    class BoatEntity$Type extends Internal.Enum<Internal.BoatEntity$Type> {
        func_195933_b(): Internal.Block;
        func_184980_a(): string;
        static valueOf(arg0: string): Internal.BoatEntity$Type;
        static func_184981_a(arg0: string): Internal.BoatEntity$Type;
        static values(): Internal.BoatEntity$Type[];
        static func_184979_a(arg0: number): Internal.BoatEntity$Type;
        static readonly SPRUCE: Internal.BoatEntity$Type;
        static readonly BIRCH: Internal.BoatEntity$Type;
        static readonly JUNGLE: Internal.BoatEntity$Type;
        static readonly ACACIA: Internal.BoatEntity$Type;
        static readonly OAK: Internal.BoatEntity$Type;
        static readonly DARK_OAK: Internal.BoatEntity$Type;
    }
    type BoatEntity$Type_ = "oak" | "spruce" | "birch" | "jungle" | "acacia" | "dark_oak" | BoatEntity$Type;
    class PaintEventJS extends Internal.ClientEventJS {
        bindTexture(tex: ResourceLocation_): void;
        vertex(m: Internal.Matrix4f, x: number, y: number, z: number, col: number): void;
        vertex(m: Internal.Matrix4f, x: number, y: number, z: number, col: number, u: number, v: number): void;
        setSmoothShade(smooth: boolean): void;
        beginQuads(format: Internal.VertexFormat): void;
        beginQuads(texture: boolean): void;
        setTextureEnabled(enabled: boolean): void;
        getTextureAtlas(): Internal.AtlasTexture;
        scale(x: number, y: number, z: number): void;
        translate(x: number, y: number, z: number): void;
        push(): void;
        pop(): void;
        getMatrix(): Internal.Matrix4f;
        end(): void;
        begin(type: number, format: Internal.VertexFormat): void;
        readonly mc: Internal.Minecraft;
        readonly delta: number;
        readonly screen: Internal.Screen;
        readonly tesselator: Internal.Tessellator;
        readonly buffer: Internal.BufferBuilder;
        readonly matrices: Internal.MatrixStack;
        readonly font: Internal.FontRenderer;
        get textureAtlas(): Internal.AtlasTexture;
        get matrix(): Internal.Matrix4f;
        set smoothShade(smooth: boolean);
        set textureEnabled(enabled: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(m: Internal.Minecraft, p: Internal.MatrixStack, d: number, s: Internal.Screen);
    }
    type PaintEventJS_ = PaintEventJS;
    class Collector$Characteristics extends Internal.Enum<Internal.Collector$Characteristics> {
        static valueOf(arg0: string): Internal.Collector$Characteristics;
        static values(): Internal.Collector$Characteristics[];
        static readonly IDENTITY_FINISH: Internal.Collector$Characteristics;
        static readonly UNORDERED: Internal.Collector$Characteristics;
        static readonly CONCURRENT: Internal.Collector$Characteristics;
    }
    type Collector$Characteristics_ = "concurrent" | "unordered" | "identity_finish" | Collector$Characteristics;
    class CommandStorage extends Document.Object {
        func_227489_a_(arg0: ResourceLocation_, arg1: Internal.CompoundNBT_): void;
        func_227488_a_(arg0: ResourceLocation_): Internal.CompoundNBT;
        func_227484_a_(): Internal.Stream<ResourceLocation>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DimensionSavedDataManager);
    }
    type CommandStorage_ = CommandStorage;
    class NetworkManager extends Internal.SimpleChannelInboundHandler<Internal.IPacket<any>> {
        func_179293_l(): void;
        getDirection(): Internal.PacketDirection;
        static func_150722_a(arg0: Internal.SocketAddress): Internal.NetworkManager;
        channel(): Internal.Channel;
        func_150723_a(arg0: Internal.ProtocolType_): void;
        func_150731_c(): boolean;
        func_211390_n(): number;
        func_150730_f(): Internal.ITextComponent;
        func_201058_a(arg0: Internal.IPacket<any>, arg1: Internal.GenericFutureListener_<Internal.Future_<void>>): void;
        func_74428_b(): void;
        func_211393_m(): number;
        func_150721_g(): void;
        func_150724_d(): boolean;
        func_150718_a(arg0: Internal.ITextComponent_): void;
        func_150719_a(arg0: Internal.INetHandler): void;
        func_150729_e(): Internal.INetHandler;
        func_244777_a(arg0: Internal.Cipher, arg1: Internal.Cipher): void;
        static func_181124_a(arg0: Internal.InetAddress, arg1: number, arg2: boolean): Internal.NetworkManager;
        func_179290_a(arg0: Internal.IPacket<any>): void;
        func_74430_c(): Internal.SocketAddress;
        func_179289_a(arg0: number): void;
        func_179291_h(): boolean;
        func_179292_f(): boolean;
        static readonly field_150740_a: Internal.Marker;
        static readonly field_150739_c: Internal.AttributeKey<Internal.ProtocolType>;
        static readonly field_181125_e: Internal.LazyValue<Internal.EpollEventLoopGroup>;
        static readonly field_179296_e: Internal.LazyValue<Internal.DefaultEventLoopGroup>;
        static readonly field_150738_b: Internal.Marker;
        static readonly field_179295_d: Internal.LazyValue<Internal.NioEventLoopGroup>;
        get direction(): Internal.PacketDirection;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PacketDirection);
    }
    type NetworkManager_ = NetworkManager;
    class EndGatewayConfig extends Document.Object implements Internal.IFeatureConfig {
        func_214701_c(): boolean;
        static func_214702_a(arg0: BlockPos, arg1: boolean): Internal.EndGatewayConfig;
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        func_214700_b(): Internal.Optional<BlockPos>;
        static func_214698_a(): Internal.EndGatewayConfig;
        static readonly field_236522_a_: Internal.Codec<Internal.EndGatewayConfig>;
    }
    type EndGatewayConfig_ = EndGatewayConfig;
    interface ReferenceCounted {
        refCnt(): number;
        release(): boolean;
        release(arg0: number): boolean;
        retain(): Internal.ReferenceCounted;
        retain(arg0: number): Internal.ReferenceCounted;
        touch(arg0: any): Internal.ReferenceCounted;
        touch(): Internal.ReferenceCounted;
    }
    type ReferenceCounted_ = ReferenceCounted;
    interface IParticleFactory <T> {
        func_199234_a(arg0: T, arg1: Internal.ClientWorld, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.Particle;
        (arg0: T, arg1: Internal.ClientWorld, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.Particle;
    }
    type IParticleFactory_<T> = ((arg0: T, arg1: Internal.ClientWorld, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number)=>Internal.Particle) | IParticleFactory<T>;
    interface IChunksendingPlayer {
        attachToPending(arg0: Internal.ChunkPos, arg1: Internal.IPacket<any>): boolean;
        (arg0: Internal.ChunkPos, arg1: Internal.IPacket<any>): boolean;
    }
    type IChunksendingPlayer_ = ((arg0: Internal.ChunkPos, arg1: Internal.IPacket<any>)=>boolean) | IChunksendingPlayer;
    class ServerStatusResponse$Version extends Document.Object {
        func_151304_b(): number;
        func_151303_a(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: number);
    }
    type ServerStatusResponse$Version_ = ServerStatusResponse$Version;
    class Products$P7 <F, T1, T2, T3, T4, T5, T6, T7> extends Document.Object {
        t4(): Internal.App<F, T4>;
        t5(): Internal.App<F, T5>;
        t6(): Internal.App<F, T6>;
        t7(): Internal.App<F, T7>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function7<T1, T2, T3, T4, T5, T6, T7, R_>>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function7_<T1, T2, T3, T4, T5, T6, T7, R_>): Internal.App<F, R_>;
        and<T8_>(arg0: Internal.App<F, T8_>): Internal.Products$P8<F, T1, T2, T3, T4, T5, T6, T7, T8_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        t3(): Internal.App<F, T3>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>, arg4: Internal.App<F, T5>, arg5: Internal.App<F, T6>, arg6: Internal.App<F, T7>);
    }
    type Products$P7_<F, T1, T2, T3, T4, T5, T6, T7> = Products$P7<F, T1, T2, T3, T4, T5, T6, T7>;
    interface PoseStackAccessor {
        getPoseStack(): Internal.Deque<Internal.MatrixStack$Entry>;
        (): Internal.Deque<Internal.MatrixStack$Entry>;
    }
    type PoseStackAccessor_ = (()=>Internal.Deque<Internal.MatrixStack$Entry>) | PoseStackAccessor;
    class Rectangle2d extends Document.Object {
        func_199319_b(): number;
        func_199317_d(): number;
        func_199315_b(arg0: number, arg1: number): boolean;
        func_199316_c(): number;
        func_199318_a(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type Rectangle2d_ = Rectangle2d;
    interface Condition {
        signalAll(): void;
        awaitNanos(arg0: number): number;
        await(arg0: number, arg1: Internal.TimeUnit_): boolean;
        await(): void;
        awaitUninterruptibly(): void;
        signal(): void;
        awaitUntil(arg0: Internal.Date): boolean;
    }
    type Condition_ = Condition;
    class JsonReader extends Document.Object implements Internal.Closeable {
        skipValue(): void;
        isLenient(): boolean;
        hasNext(): boolean;
        nextInt(): number;
        nextString(): string;
        endArray(): void;
        nextLong(): number;
        setLenient(arg0: boolean): void;
        nextDouble(): number;
        endObject(): void;
        peek(): Internal.JsonToken;
        beginArray(): void;
        beginObject(): void;
        getPath(): string;
        nextBoolean(): boolean;
        nextName(): string;
        close(): void;
        nextNull(): void;
        get path(): string;
        get lenient(): boolean;
        set lenient(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Reader);
    }
    type JsonReader_ = JsonReader;
    interface IForgeItem {
        getToolTypes(arg0: Internal.ItemStack): Internal.Set<Internal.ToolType>;
        canElytraFly(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        getItemStackTileEntityRenderer(): Internal.ItemStackTileEntityRenderer;
        getHarvestLevel(arg0: Internal.ItemStack, arg1: Internal.ToolType, arg2: Internal.PlayerEntity, arg3: Internal.BlockState): number;
        getItem(): Internal.Item;
        getTags(): Internal.Set<ResourceLocation>;
        getSmeltingExperience(arg0: Internal.ItemStack): number;
        setDamage(arg0: Internal.ItemStack, arg1: number): void;
        canHarvestBlock(arg0: Internal.ItemStack, arg1: Internal.BlockState): boolean;
        renderHelmetOverlay(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: number, arg3: number, arg4: number): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        damageItem<T>(arg0: Internal.ItemStack, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        getItemEnchantability(arg0: Internal.ItemStack): number;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: boolean): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack): number;
        getArmorModel<A>(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: EquipmentSlot_, arg3: A): A;
        readShareTag(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): void;
        onEntityItemUpdate(arg0: Internal.ItemStack, arg1: Internal.ItemEntity): boolean;
        getDamage(arg0: Internal.ItemStack): number;
        showDurabilityBar(arg0: Internal.ItemStack): boolean;
        isBookEnchantable(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.LivingEntity, arg3: Internal.LivingEntity): boolean;
        onUsingTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): void;
        createEntity(arg0: Internal.World, arg1: Internal.Entity, arg2: Internal.ItemStack): Internal.Entity;
        isPiglinCurrency(arg0: Internal.ItemStack): boolean;
        getCreativeTabs(): Internal.Collection<Internal.ItemGroup>;
        isRepairable(arg0: Internal.ItemStack): boolean;
        getShareTag(arg0: Internal.ItemStack): Internal.CompoundNBT;
        getRGBDurabilityForDisplay(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack, arg1: Internal.IRecipeType<any>): number;
        onDroppedByPlayer(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity): boolean;
        isDamageable(arg0: Internal.ItemStack): boolean;
        onEntitySwing(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        elytraFlightTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): boolean;
        getAttributeModifiers(arg0: EquipmentSlot_, arg1: Internal.ItemStack): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        onLeftClickEntity(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.Entity): boolean;
        canEquip(arg0: Internal.ItemStack, arg1: EquipmentSlot_, arg2: Internal.Entity): boolean;
        getDurabilityForDisplay(arg0: Internal.ItemStack): number;
        onBlockStartBreak(arg0: Internal.ItemStack, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.MobEntity): void;
        canContinueUsing(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getEntityLifespan(arg0: Internal.ItemStack, arg1: Internal.World): number;
        getArmorTexture(arg0: Internal.ItemStack, arg1: Internal.Entity, arg2: EquipmentSlot_, arg3: string): string;
        hasCustomEntity(arg0: Internal.ItemStack): boolean;
        getHighlightTip(arg0: Internal.ItemStack, arg1: Internal.ITextComponent_): Internal.ITextComponent;
        getMaxDamage(arg0: Internal.ItemStack): number;
        getCreatorModId(arg0: Internal.ItemStack): string;
        isDamaged(arg0: Internal.ItemStack): boolean;
        onArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.PlayerEntity): void;
        hasContainerItem(arg0: Internal.ItemStack): boolean;
        isShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        doesSneakBypassUse(arg0: Internal.ItemStack, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        onItemUseFirst(arg0: Internal.ItemStack, arg1: Internal.ItemUseContext): Internal.ActionResultType;
        getContainerItem(arg0: Internal.ItemStack): Internal.ItemStack;
        getEquipmentSlot(arg0: Internal.ItemStack): EquipmentSlot;
        initCapabilities(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): Internal.ICapabilityProvider;
        getItemStackLimit(arg0: Internal.ItemStack): number;
        getFontRenderer(arg0: Internal.ItemStack): Internal.FontRenderer;
        makesPiglinsNeutral(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        isEnderMask(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.EndermanEntity): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
    }
    type IForgeItem_ = IForgeItem;
    interface DoubleToIntFunction {
        applyAsInt(arg0: number): number;
        (arg0: number): number;
    }
    type DoubleToIntFunction_ = ((arg0: number)=>number) | DoubleToIntFunction;
    class GlMutableBuffer extends Internal.GlBuffer {
        getSize(): number;
        setSize(size: number): void;
        get size(): number;
        set size(size: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(owner: Internal.RenderDevice, usage: Internal.GlBufferUsage);
    }
    type GlMutableBuffer_ = GlMutableBuffer;
    interface PalettedContainerExtended <T> {
        getDataArray(): Internal.BitArray;
        getPalette(): Internal.IPalette<T>;
        getPaletteSize(): number;
        getDefaultValue(): T;
    }
    type PalettedContainerExtended_<T> = PalettedContainerExtended<T>;
    class ProcessingRecipeJS extends Internal.RecipeJS {
        superheated(): Internal.ProcessingRecipeJS;
        heatRequirement(req: string): Internal.ProcessingRecipeJS;
        heated(): Internal.ProcessingRecipeJS;
        processingTime(t: number): Internal.ProcessingRecipeJS;
        readonly outputFluids: Internal.List<Internal.FluidStack>;
        readonly inputFluids: Internal.List<com.simibubi.create.foundation.fluid.FluidIngredient>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ProcessingRecipeJS_ = ProcessingRecipeJS;
    abstract class TameableEntity extends Internal.AnimalEntity {
        shouldRiderSit(): boolean;
        func_70909_n(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_70902_q(): Internal.LivingEntity;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_184753_b(): Internal.UUID;
        func_184754_b(arg0: Internal.UUID): void;
        func_152114_e(arg0: Internal.LivingEntity): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_70903_f(arg0: boolean): void;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_233686_v_(arg0: boolean): void;
        func_233687_w_(arg0: boolean): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_233685_eM_(): boolean;
        hasCooldown(): boolean;
        func_142018_a(arg0: Internal.LivingEntity, arg1: Internal.LivingEntity): boolean;
        func_193101_c(arg0: Internal.PlayerEntity): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_233684_eK_(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
    }
    type TameableEntity_ = TameableEntity;
    interface Object2FloatMap$Entry <K> extends Internal.Map$Entry<K, number> {
        getValue(): number;
        getValue(): any;
        getFloatValue(): number;
        setValue(arg0: any): any;
        setValue(arg0: number): number;
        setValue(arg0: number): number;
    }
    type Object2FloatMap$Entry_<K> = Object2FloatMap$Entry<K>;
    class DatapackCodec extends Document.Object {
        addModPacks(arg0: Internal.List<string>): void;
        func_234884_a_(): Internal.List<string>;
        func_234887_b_(): Internal.List<string>;
        static readonly field_234881_b_: Internal.Codec<Internal.DatapackCodec>;
        static readonly field_234880_a_: Internal.DatapackCodec;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.List<string>, arg1: Internal.List<string>);
    }
    type DatapackCodec_ = DatapackCodec;
    class DateTimeFormatter extends Document.Object {
        withLocale(arg0: Internal.Locale): Internal.DateTimeFormatter;
        parseBest(arg0: Internal.CharSequence, ...arg1: Internal.TemporalQuery<any>[]): Internal.TemporalAccessor;
        static ofLocalizedDateTime(arg0: Internal.FormatStyle_, arg1: Internal.FormatStyle_): Internal.DateTimeFormatter;
        static ofLocalizedDateTime(arg0: Internal.FormatStyle_): Internal.DateTimeFormatter;
        getResolverFields(): Internal.Set<Internal.TemporalField>;
        static ofPattern(arg0: string): Internal.DateTimeFormatter;
        static ofPattern(arg0: string, arg1: Internal.Locale): Internal.DateTimeFormatter;
        static ofLocalizedDate(arg0: Internal.FormatStyle_): Internal.DateTimeFormatter;
        formatTo(arg0: Internal.TemporalAccessor, arg1: Internal.Appendable): void;
        static parsedLeapSecond(): Internal.TemporalQuery<boolean>;
        static ofLocalizedPattern(arg0: string): Internal.DateTimeFormatter;
        getChronology(): Internal.Chronology;
        withChronology(arg0: Internal.Chronology): Internal.DateTimeFormatter;
        withDecimalStyle(arg0: Internal.DecimalStyle): Internal.DateTimeFormatter;
        localizedBy(arg0: Internal.Locale): Internal.DateTimeFormatter;
        withZone(arg0: Internal.ZoneId): Internal.DateTimeFormatter;
        static parsedExcessDays(): Internal.TemporalQuery<Internal.Period>;
        withResolverStyle(arg0: Internal.ResolverStyle_): Internal.DateTimeFormatter;
        getResolverStyle(): Internal.ResolverStyle;
        format(arg0: Internal.TemporalAccessor): string;
        getZone(): Internal.ZoneId;
        parse(arg0: Internal.CharSequence, arg1: Internal.ParsePosition): Internal.TemporalAccessor;
        parse<T_>(arg0: Internal.CharSequence, arg1: Internal.TemporalQuery_<T_>): T_;
        parse(arg0: Internal.CharSequence): Internal.TemporalAccessor;
        getDecimalStyle(): Internal.DecimalStyle;
        toFormat(arg0: Internal.TemporalQuery_<any>): Internal.Format;
        toFormat(): Internal.Format;
        static ofLocalizedTime(arg0: Internal.FormatStyle_): Internal.DateTimeFormatter;
        withResolverFields(...arg0: Internal.TemporalField[]): Internal.DateTimeFormatter;
        withResolverFields(arg0: Internal.Set<Internal.TemporalField>): Internal.DateTimeFormatter;
        getLocale(): Internal.Locale;
        parseUnresolved(arg0: Internal.CharSequence, arg1: Internal.ParsePosition): Internal.TemporalAccessor;
        static readonly ISO_OFFSET_TIME: Internal.DateTimeFormatter;
        static readonly ISO_LOCAL_DATE_TIME: Internal.DateTimeFormatter;
        static readonly RFC_1123_DATE_TIME: Internal.DateTimeFormatter;
        static readonly ISO_INSTANT: Internal.DateTimeFormatter;
        static readonly ISO_ZONED_DATE_TIME: Internal.DateTimeFormatter;
        static readonly ISO_OFFSET_DATE_TIME: Internal.DateTimeFormatter;
        static readonly ISO_DATE_TIME: Internal.DateTimeFormatter;
        static readonly ISO_DATE: Internal.DateTimeFormatter;
        static readonly ISO_TIME: Internal.DateTimeFormatter;
        static readonly ISO_LOCAL_TIME: Internal.DateTimeFormatter;
        static readonly ISO_OFFSET_DATE: Internal.DateTimeFormatter;
        static readonly ISO_ORDINAL_DATE: Internal.DateTimeFormatter;
        static readonly ISO_LOCAL_DATE: Internal.DateTimeFormatter;
        static readonly BASIC_ISO_DATE: Internal.DateTimeFormatter;
        static readonly ISO_WEEK_DATE: Internal.DateTimeFormatter;
        get resolverFields(): Internal.Set<Internal.TemporalField>;
        get zone(): Internal.ZoneId;
        get decimalStyle(): Internal.DecimalStyle;
        get resolverStyle(): Internal.ResolverStyle;
        get chronology(): Internal.Chronology;
        get locale(): Internal.Locale;
    }
    type DateTimeFormatter_ = DateTimeFormatter;
    abstract class KeyModifier extends Internal.Enum<Internal.KeyModifier> {
        static isKeyCodeModifier(arg0: Internal.InputMappings$Input): boolean;
        static valueOf(arg0: string): Internal.KeyModifier;
        static values(): Internal.KeyModifier[];
        getCombinedName(arg0: Internal.InputMappings$Input, arg1: java_.util.function_.Supplier_<Internal.ITextComponent_>): Internal.ITextComponent;
        static valueFromString(arg0: string): Internal.KeyModifier;
        isActive(arg0: Internal.IKeyConflictContext): boolean;
        matches(arg0: Internal.InputMappings$Input): boolean;
        static getActiveModifier(): Internal.KeyModifier;
        static readonly SHIFT: Internal.KeyModifier;
        static readonly MODIFIER_VALUES: Internal.KeyModifier[];
        static readonly ALT: Internal.KeyModifier;
        static readonly NONE: Internal.KeyModifier;
        static readonly CONTROL: Internal.KeyModifier;
        get activeModifier(): Internal.KeyModifier;
    }
    type KeyModifier_ = "control" | "shift" | "alt" | "none" | KeyModifier;
    class PiglinBruteEntity extends Internal.AbstractPiglinEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_213375_cj(): Internal.Brain<Internal.PiglinBruteEntity>;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_234422_eK_(): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        static func_242344_eS(): Internal.AttributeModifierMap$MutableAttribute;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.PiglinBruteEntity>, arg1: Internal.World);
    }
    type PiglinBruteEntity_ = PiglinBruteEntity;
    /**
    */
    abstract class Text extends Document.Object implements Internal.Iterable<Internal.Text>, Internal.Comparable<Internal.Text>, Internal.JsonSerializable, Internal.WrappedJS {
        rawCopy(): Internal.Text;
        color(c: dev.latvian.mods.rhino.mod.util.color.Color_): Internal.Text;
        yellow(): Internal.Text;
        hasStyle(): boolean;
        compareTo(other: Internal.Text_): number;
        compareTo(arg0: any): number;
        darkBlue(): Internal.Text;
        italic(): Internal.Text;
        italic(value: boolean): Internal.Text;
        static componentOf(o: any): Internal.ITextComponent;
        gold(): Internal.Text;
        red(): Internal.Text;
        aqua(): Internal.Text;
        hover(text: any): Internal.Text;
        iterator(): Internal.Iterator<Internal.Text>;
        gray(): Internal.Text;
        white(): Internal.Text;
        darkRed(): Internal.Text;
        static of(o: any): Internal.Text;
        noColor(): Internal.Text;
        darkPurple(): Internal.Text;
        strikethrough(): Internal.Text;
        strikethrough(value: boolean): Internal.Text;
        copy(): Internal.Text;
        static join(separator: Internal.Text_, texts: Internal.Iterable_<Internal.Text_>): Internal.Text;
        rawComponent(): Internal.IFormattableTextComponent;
        obfuscated(): Internal.Text;
        obfuscated(value: boolean): Internal.Text;
        write(buffer: Internal.PacketBuffer): void;
        createStyleJson(): Internal.JsonObject;
        hasSiblings(): boolean;
        green(): Internal.Text;
        static read(buffer: Internal.PacketBuffer): Internal.Text;
        spliterator(): Internal.Spliterator<Internal.Text>;
        darkGreen(): Internal.Text;
        forEach(arg0: Internal.Consumer_<Internal.Text_>): void;
        lightPurple(): Internal.Text;
        black(): Internal.Text;
        getSiblings(): Internal.List<Internal.Text>;
        bold(value: boolean): Internal.Text;
        bold(): Internal.Text;
        getString(): string;
        click(value: string): Internal.Text;
        getStyleAndSiblingJson(): Internal.JsonObject;
        darkAqua(): Internal.Text;
        toJson(): Internal.JsonElement;
        component(): Internal.ITextComponent;
        blue(): Internal.Text;
        underlined(): Internal.Text;
        underlined(value: boolean): Internal.Text;
        darkGray(): Internal.Text;
        insertion(value: string): Internal.Text;
        createStyle(): Internal.Style;
        append(sibling: any): Internal.Text;
        font(value: string): Internal.Text;
        get siblings(): Internal.List<Internal.Text>;
        get string(): string;
        get styleAndSiblingJson(): Internal.JsonObject;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Text_ = string | Text;
    class NativeImage extends Document.Object implements Internal.AutoCloseable {
        func_227788_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: boolean): void;
        static func_227786_a_(arg0: number): number;
        static func_227791_b_(arg0: number): number;
        static func_195713_a(arg0: Internal.InputStream): Internal.NativeImage;
        func_195715_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_195714_b(): number;
        func_195710_e(): void;
        func_195717_a(arg0: number, arg1: boolean): void;
        func_195711_f(): void;
        static func_227795_d_(arg0: number): number;
        func_227796_e_(): number[];
        func_195716_c(): number[];
        func_209271_a(arg0: Internal.File): void;
        func_209270_a(arg0: Internal.Path): void;
        close(): void;
        func_227789_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: boolean, arg9: boolean, arg10: boolean): void;
        static func_227787_a_(arg0: number, arg1: number, arg2: number, arg3: number): number;
        func_195700_a(arg0: number, arg1: number, arg2: number): void;
        func_195702_a(): number;
        static func_195704_a(arg0: Internal.ByteBuffer): Internal.NativeImage;
        func_195703_a(arg0: Internal.NativeImage): void;
        static func_227793_c_(arg0: number): number;
        func_195708_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.NativeImage): void;
        func_195699_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: boolean): void;
        func_211675_e(arg0: number, arg1: number): number;
        static func_211679_a(arg0: Internal.NativeImage$PixelFormat_, arg1: Internal.InputStream): Internal.NativeImage;
        func_195709_a(arg0: number, arg1: number): number;
        func_211676_a(arg0: Internal.STBTTFontinfo, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        static func_211677_a(arg0: Internal.NativeImage$PixelFormat_, arg1: Internal.ByteBuffer): Internal.NativeImage;
        func_195697_a(arg0: number, arg1: number, arg2: number, arg3: boolean): void;
        static func_216511_b(arg0: string): Internal.NativeImage;
        func_211678_c(): Internal.NativeImage$PixelFormat;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.NativeImage$PixelFormat, arg1: number, arg2: number, arg3: boolean);
        constructor(arg0: number, arg1: number, arg2: boolean);
    }
    type NativeImage_ = NativeImage;
    interface Arena extends Internal.SegmentAllocator, Internal.AutoCloseable {
        allocate(arg0: number, arg1: number): Internal.MemorySegment;
        scope(): Internal.MemorySegment$Scope;
        close(): void;
    }
    type Arena_ = Arena;
    interface IGuiItemStackGroup extends Internal.IGuiIngredientGroup<Internal.ItemStack> {
        init(arg0: number, arg1: boolean, arg2: number, arg3: number): void;
        set(arg0: number, arg1: any): void;
        set(arg0: number, arg1: Internal.ItemStack): void;
        addTooltipCallback(arg0: Internal.ITooltipCallback_<Internal.ItemStack_>): void;
    }
    type IGuiItemStackGroup_ = IGuiItemStackGroup;
    abstract class WorldJS extends Document.Object implements Internal.WithAttachedData {
        getServer(): Internal.ServerJS;
        getLivingEntity(entity: Internal.Entity): Internal.LivingEntityJS;
        getPlayer(entity: Internal.Entity): Internal.PlayerJS<any>;
        getBlock(pos: BlockPos): Internal.BlockContainerJS;
        getBlock(x: number, y: number, z: number): Internal.BlockContainerJS;
        getBlock(blockEntity: Internal.TileEntity): Internal.BlockContainerJS;
        getEntitiesWithin(aabb: Internal.AxisAlignedBB): Internal.EntityArrayList;
        getPlayerData(arg0: Internal.PlayerEntity): Internal.PlayerDataJS<any, any>;
        spawnFireworks(x: number, y: number, z: number, f: Internal.FireworksJS): void;
        getTime(): number;
        isOverworld(): boolean;
        getSide(): Internal.ScriptType;
        createExplosion(x: number, y: number, z: number): Internal.ExplosionJS;
        getGameRules(): Internal.GameRulesJS;
        getEntity(e: Internal.Entity): Internal.EntityJS;
        createEntity(id: ResourceLocation_): Internal.EntityJS;
        spawnLightning(x: number, y: number, z: number, effectOnly: boolean, player: Internal.EntityJS): void;
        spawnLightning(x: number, y: number, z: number, effectOnly: boolean): void;
        setRainStrength(strength: number): void;
        getLocalTime(): number;
        isThundering(): boolean;
        getDimension(): string;
        getEntities(): Internal.EntityArrayList;
        isDaytime(): boolean;
        createEntityList(entities: Internal.Collection<Internal.Entity>): Internal.EntityArrayList;
        isRaining(): boolean;
        getPlayers(): Internal.EntityArrayList;
        getData(): Internal.AttachedData;
        readonly minecraftLevel: Internal.World;
        readonly minecraftWorld: Internal.World;
        get server(): Internal.ServerJS;
        get side(): Internal.ScriptType;
        get data(): Internal.AttachedData;
        get players(): Internal.EntityArrayList;
        get raining(): boolean;
        get thundering(): boolean;
        get overworld(): boolean;
        get gameRules(): Internal.GameRulesJS;
        get localTime(): number;
        get entities(): Internal.EntityArrayList;
        get time(): number;
        get dimension(): string;
        get daytime(): boolean;
        set rainStrength(strength: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(w: Internal.World);
    }
    type WorldJS_ = WorldJS;
    class SServerDifficultyPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179831_b(): Internal.Difficulty;
        func_179830_a(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Difficulty, arg1: boolean);
    }
    type SServerDifficultyPacket_ = SServerDifficultyPacket;
    interface TileObserver {
        tileUpdate(arg0: Internal.WritableRenderedImage, arg1: number, arg2: number, arg3: boolean): void;
        (arg0: Internal.WritableRenderedImage, arg1: number, arg2: number, arg3: boolean): void;
    }
    type TileObserver_ = ((arg0: Internal.WritableRenderedImage, arg1: number, arg2: number, arg3: boolean)=>void) | TileObserver;
    class AttributeKey <T> extends Internal.AbstractConstant<Internal.AttributeKey<T>> {
        static valueOf<T_>(arg0: string): Internal.AttributeKey<T_>;
        static valueOf<T_>(arg0: Internal.Class<any>, arg1: string): Internal.AttributeKey<T_>;
        static exists(arg0: string): boolean;
        static newInstance<T_>(arg0: string): Internal.AttributeKey<T_>;
    }
    type AttributeKey_<T> = AttributeKey<T>;
    abstract class ForwardingCollection <E> extends Internal.ForwardingObject implements Internal.Collection<E> {
        add(arg0: E): boolean;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        containsAll(arg0: Internal.Collection<any>): boolean;
        isEmpty(): boolean;
        clear(): void;
        remove(arg0: any): boolean;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        removeAll(arg0: Internal.Collection<any>): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<E>;
        size(): number;
        stream(): Internal.Stream<E>;
        addAll(arg0: Internal.Collection<E>): boolean;
        toArray(): any[];
        toArray<T_>(arg0: T_[]): T_[];
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<E>;
        retainAll(arg0: Internal.Collection<any>): boolean;
        get empty(): boolean;
    }
    type ForwardingCollection_<E> = ForwardingCollection<E>;
    class FunctionManager extends Document.Object {
        func_195446_d(): Internal.CommandDispatcher<Internal.CommandSource>;
        func_193065_c(): number;
        func_240949_f_(): Internal.Iterable<ResourceLocation>;
        func_240950_g_(): Internal.Iterable<ResourceLocation>;
        func_195448_f(): Internal.CommandSource;
        func_73660_a(): void;
        func_240947_b_(arg0: ResourceLocation_): Internal.ITag<Internal.FunctionObject>;
        func_240946_a_(arg0: Internal.FunctionReloader): void;
        func_195447_a(arg0: Internal.FunctionObject, arg1: Internal.CommandSource): number;
        func_215361_a(arg0: ResourceLocation_): Internal.Optional<Internal.FunctionObject>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MinecraftServer, arg1: Internal.FunctionReloader);
    }
    type FunctionManager_ = FunctionManager;
    class EnergyDischargerConfig extends Internal.EnergyConfig {
        getGeneration(arg0: Internal.Tier_): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type EnergyDischargerConfig_ = EnergyDischargerConfig;
    interface IntFunction <R> {
        apply(arg0: number): R;
        (arg0: number): R;
    }
    type IntFunction_<R> = ((arg0: number)=>R) | IntFunction<R>;
    class BossInfo$Color extends Internal.Enum<Internal.BossInfo$Color> {
        static valueOf(arg0: string): Internal.BossInfo$Color;
        func_201480_b(): string;
        static func_201481_a(arg0: string): Internal.BossInfo$Color;
        static values(): Internal.BossInfo$Color[];
        func_201482_a(): Internal.TextFormatting;
        static readonly RED: Internal.BossInfo$Color;
        static readonly WHITE: Internal.BossInfo$Color;
        static readonly PINK: Internal.BossInfo$Color;
        static readonly BLUE: Internal.BossInfo$Color;
        static readonly YELLOW: Internal.BossInfo$Color;
        static readonly PURPLE: Internal.BossInfo$Color;
        static readonly GREEN: Internal.BossInfo$Color;
    }
    type BossInfo$Color_ = "pink" | "blue" | "red" | "green" | "yellow" | "purple" | "white" | BossInfo$Color;
    interface ChunkModelBuffers {
        getRenderData(): Internal.ChunkRenderData$Builder;
        getSink(arg0: Internal.ModelQuadFacing_): Internal.ModelVertexSink;
    }
    type ChunkModelBuffers_ = ChunkModelBuffers;
    class BeeDebugRenderer$Bee extends Document.Object {
        func_229008_a_(arg0: BlockPos): boolean;
        func_229009_b_(): string;
        func_229007_a_(): Internal.UUID;
        func_229010_c_(): boolean;
        readonly field_228999_b_: number;
        readonly field_229000_c_: Internal.IPosition;
        readonly field_229001_d_: net.minecraft.pathfinding.Path;
        readonly field_229006_i_: Internal.Set<BlockPos>;
        readonly field_229002_e_: BlockPos;
        readonly field_229005_h_: Internal.List<string>;
        readonly field_229003_f_: BlockPos;
        readonly field_229004_g_: number;
        readonly field_228998_a_: Internal.UUID;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.UUID, arg1: number, arg2: Internal.IPosition, arg3: net.minecraft.pathfinding.Path, arg4: BlockPos, arg5: BlockPos, arg6: number);
    }
    type BeeDebugRenderer$Bee_ = BeeDebugRenderer$Bee;
    interface AnnotatedElement {
        getAnnotationsByType<T>(arg0: Internal.Class<T>): T[];
        getDeclaredAnnotationsByType<T>(arg0: Internal.Class<T>): T[];
        getAnnotation<T>(arg0: Internal.Class<T>): T;
        isAnnotationPresent(arg0: Internal.Class<Internal.Annotation>): boolean;
        getDeclaredAnnotation<T>(arg0: Internal.Class<T>): T;
        getAnnotations(): Internal.Annotation[];
        getDeclaredAnnotations(): Internal.Annotation[];
    }
    type AnnotatedElement_ = AnnotatedElement;
    class Fraction extends Internal.Number implements Internal.Comparable<Internal.Fraction> {
        getNumerator(): number;
        add(other: Internal.Fraction): Internal.Fraction;
        inverse(): Internal.Fraction;
        isLessThan(fraction: Internal.Fraction): boolean;
        minus(other: Internal.Fraction): Internal.Fraction;
        isGreaterThan(fraction: Internal.Fraction): boolean;
        compareTo(fraction: Internal.Fraction): number;
        compareTo(arg0: any): number;
        getDenominator(): number;
        static zero(): Internal.Fraction;
        static of(whole: number, numerator: number, denominator: number): Internal.Fraction;
        static of(numerator: number, denominator: number): Internal.Fraction;
        divide(other: Internal.Fraction): Internal.Fraction;
        static from(value: number): Internal.Fraction;
        simplify(): Internal.Fraction;
        static ofWhole(whole: number): Internal.Fraction;
        toDecimalString(): string;
        multiply(other: Internal.Fraction): Internal.Fraction;
        get numerator(): number;
        get denominator(): number;
    }
    type Fraction_ = Fraction;
    class RemoveJEICategoriesEvent extends Internal.EventJS {
        yeetIf(filter: Internal.Predicate_<Internal.IRecipeCategory_<any>>): void;
        yeet(...categoriesToRemove: string[]): void;
        getCategories(): Internal.Collection<Internal.IRecipeCategory<any>>;
        getCategoryIds(): Internal.Collection<ResourceLocation>;
        remove(...categoriesToYeet: string[]): void;
        removeIf(filter: Internal.Predicate_<Internal.IRecipeCategory_<any>>): void;
        get categoryIds(): Internal.Collection<ResourceLocation>;
        get categories(): Internal.Collection<Internal.IRecipeCategory<any>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(r: Internal.IJeiRuntime);
    }
    type RemoveJEICategoriesEvent_ = RemoveJEICategoriesEvent;
    class GuiScreenEvent$BackgroundDrawnEvent extends Internal.GuiScreenEvent {
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: Internal.MatrixStack);
    }
    type GuiScreenEvent$BackgroundDrawnEvent_ = GuiScreenEvent$BackgroundDrawnEvent;
    class HorseEntity extends Internal.DyingHorseEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213803_dV(): Internal.ItemStack;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        func_234240_eM_(): Internal.CoatTypes;
        asKJS(): any;
        canRiderInteract(): boolean;
        formatLoc(arg0: Vec3): string;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_234239_eK_(): Internal.CoatColors;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.HorseEntity>, arg1: Internal.World);
    }
    type HorseEntity_ = HorseEntity;
    interface MenuContainer {
        getFont(): Internal.Font;
        remove(arg0: Internal.MenuComponent): void;
        postEvent(arg0: java_.awt.Event): boolean;
    }
    type MenuContainer_ = MenuContainer;
    class RenderTooltipEvent$PostBackground extends Internal.RenderTooltipEvent$Post {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ItemStack, arg1: Internal.List<Internal.ITextProperties>, arg2: Internal.MatrixStack, arg3: number, arg4: number, arg5: Internal.FontRenderer, arg6: number, arg7: number);
    }
    type RenderTooltipEvent$PostBackground_ = RenderTooltipEvent$PostBackground;
    interface Stream <T> extends Internal.BaseStream<T, Internal.Stream<T>> {
        takeWhile(arg0: Internal.Predicate_<T>): Internal.Stream<T>;
        distinct(): Internal.Stream<T>;
        findFirst(): Internal.Optional<T>;
        skip(arg0: number): Internal.Stream<T>;
        toList(): Internal.List<T>;
        allMatch(arg0: Internal.Predicate_<T>): boolean;
        mapMultiToDouble(arg0: Internal.BiConsumer_<T, Internal.DoubleConsumer_>): Internal.DoubleStream;
        mapMulti<R_>(arg0: Internal.BiConsumer_<T, Internal.Consumer_<R_>>): Internal.Stream<R_>;
        flatMapToInt(arg0: Internal.Function_<T, Internal.IntStream_>): Internal.IntStream;
        min(arg0: Internal.Comparator<T>): Internal.Optional<T>;
        flatMapToLong(arg0: Internal.Function_<T, Internal.LongStream_>): Internal.LongStream;
        mapToLong(arg0: Internal.ToLongFunction_<T>): Internal.LongStream;
        noneMatch(arg0: Internal.Predicate_<T>): boolean;
        findAny(): Internal.Optional<T>;
        limit(arg0: number): Internal.Stream<T>;
        toArray(): any[];
        toArray<A_>(arg0: Internal.IntFunction_<A_[]>): A_[];
        forEachOrdered(arg0: Internal.Consumer_<T>): void;
        anyMatch(arg0: Internal.Predicate_<T>): boolean;
        map<R_>(arg0: Internal.Function_<T, R_>): Internal.Stream<R_>;
        mapToDouble(arg0: Internal.ToDoubleFunction_<T>): Internal.DoubleStream;
        mapMultiToLong(arg0: Internal.BiConsumer_<T, Internal.LongConsumer_>): Internal.LongStream;
        mapMultiToInt(arg0: Internal.BiConsumer_<T, Internal.IntConsumer_>): Internal.IntStream;
        reduce<U_>(arg0: U_, arg1: Internal.BiFunction_<U_, T, U_>, arg2: Internal.BinaryOperator<U_>): U_;
        reduce(arg0: T, arg1: Internal.BinaryOperator<T>): T;
        reduce(arg0: Internal.BinaryOperator<T>): Internal.Optional<T>;
        max(arg0: Internal.Comparator<T>): Internal.Optional<T>;
        forEach(arg0: Internal.Consumer_<T>): void;
        count(): number;
        dropWhile(arg0: Internal.Predicate_<T>): Internal.Stream<T>;
        flatMapToDouble(arg0: Internal.Function_<T, Internal.DoubleStream_>): Internal.DoubleStream;
        peek(arg0: Internal.Consumer_<T>): Internal.Stream<T>;
        flatMap<R_>(arg0: Internal.Function_<T, Internal.Stream_<R_>>): Internal.Stream<R_>;
        filter(arg0: Internal.Predicate_<T>): Internal.Stream<T>;
        sorted(arg0: Internal.Comparator<T>): Internal.Stream<T>;
        sorted(): Internal.Stream<T>;
        mapToInt(arg0: Internal.ToIntFunction_<T>): Internal.IntStream;
        collect<R_>(arg0: java_.util.function_.Supplier_<R_>, arg1: Internal.BiConsumer_<R_, T>, arg2: Internal.BiConsumer_<R_, R_>): R_;
        collect<R_, A_>(arg0: Internal.Collector<T, A_, R_>): R_;
    }
    type Stream_<T> = Stream<T>;
    class ModuleDescriptor$Exports$Modifier extends Internal.Enum<Internal.ModuleDescriptor$Exports$Modifier> {
        static valueOf(arg0: string): Internal.ModuleDescriptor$Exports$Modifier;
        static values(): Internal.ModuleDescriptor$Exports$Modifier[];
        static readonly SYNTHETIC: Internal.ModuleDescriptor$Exports$Modifier;
        static readonly MANDATED: Internal.ModuleDescriptor$Exports$Modifier;
    }
    type ModuleDescriptor$Exports$Modifier_ = "synthetic" | "mandated" | ModuleDescriptor$Exports$Modifier;
    interface ComponentListener extends Internal.EventListener {
        componentHidden(arg0: Internal.ComponentEvent): void;
        componentResized(arg0: Internal.ComponentEvent): void;
        componentShown(arg0: Internal.ComponentEvent): void;
        componentMoved(arg0: Internal.ComponentEvent): void;
    }
    type ComponentListener_ = ComponentListener;
    interface ObjectListIterator <K> extends Internal.ObjectBidirectionalIterator<K>, Internal.ListIterator<K> {
        add(arg0: K): void;
        set(arg0: K): void;
        remove(): void;
    }
    type ObjectListIterator_<K> = ObjectListIterator<K>;
    class GlVertexAttributeFormat extends Document.Object {
        getSize(): number;
        getGlFormat(): number;
        static readonly FLOAT: Internal.GlVertexAttributeFormat;
        static readonly UNSIGNED_SHORT: Internal.GlVertexAttributeFormat;
        static readonly UNSIGNED_BYTE: Internal.GlVertexAttributeFormat;
        get glFormat(): number;
        get size(): number;
    }
    type GlVertexAttributeFormat_ = GlVertexAttributeFormat;
    abstract class BookEvent extends net.minecraftforge.eventbus.api.Event {
        readonly book: ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
        constructor();
    }
    type BookEvent_ = BookEvent;
    class FakeServerPlayerDataJS extends Internal.ServerPlayerDataJS {
        getPlayer(): Internal.PlayerJS<any>;
        getMinecraftPlayer(): Internal.PlayerEntity;
        player: Internal.ServerPlayerEntity;
        get minecraftPlayer(): Internal.PlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(s: Internal.ServerJS, p: Internal.ServerPlayerEntity);
    }
    type FakeServerPlayerDataJS_ = FakeServerPlayerDataJS;
    interface LerpedFloat$Chaser {
        chase(arg0: number, arg1: number, arg2: number): number;
        (arg0: number, arg1: number, arg2: number): number;
    }
    type LerpedFloat$Chaser_ = ((arg0: number, arg1: number, arg2: number)=>number) | LerpedFloat$Chaser;
    class ActionEvent extends Internal.AWTEvent {
        getWhen(): number;
        getActionCommand(): string;
        getModifiers(): number;
        static readonly SHIFT_MASK: 1;
        static readonly ACTION_LAST: 1001;
        static readonly ACTION_PERFORMED: 1001;
        static readonly CTRL_MASK: 2;
        static readonly ALT_MASK: 8;
        static readonly ACTION_FIRST: 1001;
        static readonly META_MASK: 4;
        get actionCommand(): string;
        get modifiers(): number;
        get when(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: number, arg2: string);
        constructor(arg0: any, arg1: number, arg2: string, arg3: number, arg4: number);
        constructor(arg0: any, arg1: number, arg2: string, arg3: number);
    }
    type ActionEvent_ = ActionEvent;
    class PlayerContainerEvent extends Internal.PlayerEvent {
        getContainer(): Internal.Container;
        get container(): Internal.Container;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.Container);
    }
    type PlayerContainerEvent_ = PlayerContainerEvent;
    class PathPoint extends Document.Object {
        func_224759_a(): BlockPos;
        func_224757_c(arg0: Internal.PathPoint): number;
        func_224758_c(arg0: BlockPos): number;
        func_75832_b(arg0: Internal.PathPoint): number;
        func_186283_a(arg0: number, arg1: number, arg2: number): Internal.PathPoint;
        static func_186282_b(arg0: Internal.PacketBuffer): Internal.PathPoint;
        func_75831_a(): boolean;
        static func_75830_a(arg0: number, arg1: number, arg2: number): number;
        func_75829_a(arg0: Internal.PathPoint): number;
        field_222861_j: number;
        readonly field_75838_c: number;
        field_75836_e: number;
        field_75834_g: number;
        field_186286_l: number;
        readonly field_75839_a: number;
        field_75842_i: boolean;
        readonly field_75837_b: number;
        field_75835_d: number;
        field_75833_f: number;
        field_75841_h: Internal.PathPoint;
        field_186287_m: Internal.PathNodeType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type PathPoint_ = PathPoint;
    interface ChunkRenderListIterator <T> {
        getGraphicsState(): T;
        hasNext(): boolean;
        getVisibleFaces(): number;
        advance(): void;
    }
    type ChunkRenderListIterator_<T> = ChunkRenderListIterator<T>;
    class BasicThermalRecipeJS extends Internal.ThermalRecipeJS {
        minTicks(arg0: number): Internal.BasicThermalRecipeJS;
        experience(arg0: number): Internal.BasicThermalRecipeJS;
        inKey: string;
        outKey: string;
        outputFluids: Internal.ArrayList<Internal.FluidStackJS>;
        inputFluids: Internal.ArrayList<Internal.FluidIngredient>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BasicThermalRecipeJS_ = BasicThermalRecipeJS;
    interface Shape {
        contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        contains(arg0: number, arg1: number): boolean;
        contains(arg0: Internal.Rectangle2D): boolean;
        contains(arg0: Internal.Point2D): boolean;
        getPathIterator(arg0: Internal.AffineTransform, arg1: number): Internal.PathIterator;
        getPathIterator(arg0: Internal.AffineTransform): Internal.PathIterator;
        intersects(arg0: Internal.Rectangle2D): boolean;
        intersects(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        getBounds2D(): Internal.Rectangle2D;
        getBounds(): Internal.Rectangle;
    }
    type Shape_ = Shape;
    interface LootContext$IDynamicDropProvider {
        add(arg0: Internal.LootContext, arg1: Internal.Consumer_<Internal.ItemStack_>): void;
        (arg0: Internal.LootContext, arg1: Internal.Consumer<Internal.ItemStack>): void;
    }
    type LootContext$IDynamicDropProvider_ = ((arg0: Internal.LootContext, arg1: Internal.Consumer<Internal.ItemStack>)=>void) | LootContext$IDynamicDropProvider;
    abstract class Certificate extends Document.Object implements Internal.Serializable {
        getType(): string;
        getEncoded(): number[];
        verify(arg0: Internal.PublicKey): void;
        verify(arg0: Internal.PublicKey, arg1: string): void;
        verify(arg0: Internal.PublicKey, arg1: Internal.Provider): void;
        getPublicKey(): Internal.PublicKey;
        get publicKey(): Internal.PublicKey;
        get type(): string;
        get encoded(): number[];
    }
    type Certificate_ = Certificate;
    class PonderRegistryEventJS extends Internal.EventJS {
        static regenerateLangIntoFile(): void;
        static regenerateLang(): void;
        create(arg0: string, arg1: any): Internal.PonderBuilderJS;
        static runAllRegistration(): void;
        static rerunScripts(): void;
        static rerunScripts(arg0: Internal.ScriptType_, arg1: string, arg2: string, arg3: string): void;
        register(arg0: Internal.FMLClientSetupEvent): void;
        static rerun: true;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PonderRegistryEventJS_ = PonderRegistryEventJS;
    class BlockIDPredicate extends Document.Object implements Internal.BlockPredicate {
        getBlockProperties(): Internal.List<Internal.BlockIDPredicate$PropertyObject>;
        with(key: string, value: string): Internal.BlockIDPredicate;
        checkState(state: Internal.BlockState): boolean;
        check(b: Internal.BlockContainerJS): boolean;
        getBlockState(): Internal.BlockState;
        get blockState(): Internal.BlockState;
        get blockProperties(): Internal.List<Internal.BlockIDPredicate$PropertyObject>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(i: ResourceLocation);
    }
    type BlockIDPredicate_ = BlockIDPredicate;
    interface AbstractBlock$IExtendedPositionPredicate <A> {
        test(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: A): boolean;
        (arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: A): boolean;
    }
    type AbstractBlock$IExtendedPositionPredicate_<A> = ((arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: A)=>boolean) | AbstractBlock$IExtendedPositionPredicate<A>;
    interface DoublePredicate {
        or(arg0: Internal.DoublePredicate_): Internal.DoublePredicate;
        test(arg0: number): boolean;
        and(arg0: Internal.DoublePredicate_): Internal.DoublePredicate;
        negate(): Internal.DoublePredicate;
        (arg0: number): boolean;
    }
    type DoublePredicate_ = ((arg0: number)=>boolean) | DoublePredicate;
    class InputScreen extends Internal.Screen {
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212927_b(arg0: number, arg1: number): void;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_231049_c__(arg0: boolean): boolean;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        isCurrentlyDragging(): boolean;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        get currentlyDragging(): boolean;
    }
    type InputScreen_ = InputScreen;
    abstract class TileNetwork <T> extends Internal.TileEntityTick {
        requestModelDataUpdate(): void;
        onBreak(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        needsNetworkSync(): boolean;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        onLoad(): void;
        getNetworkNode(): Internal.CompoundNBT;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get networkNode(): Internal.CompoundNBT;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
    }
    type TileNetwork_<T> = TileNetwork<T>;
    class SEntityPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_149065_a(arg0: Internal.World): Internal.Entity;
        func_149066_f(): number;
        static func_218743_a(arg0: number): number;
        static func_218744_a(arg0: number, arg1: number, arg2: number): Vec3;
        func_244300_a(arg0: Vec3): Vec3;
        func_179742_g(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149060_h(): boolean;
        func_149063_g(): number;
        func_229745_h_(): boolean;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        static func_244299_a(arg0: number): number;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type SEntityPacket_ = SEntityPacket;
    abstract class LivingEntityEventJS extends Internal.EntityEventJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type LivingEntityEventJS_ = LivingEntityEventJS;
    class SSpawnExperienceOrbPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148985_c(): number;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186884_d(): number;
        func_148986_g(): number;
        func_186885_b(): number;
        func_186886_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ExperienceOrbEntity);
    }
    type SSpawnExperienceOrbPacket_ = SSpawnExperienceOrbPacket;
    class ChunkMeshAttribute extends Internal.Enum<Internal.ChunkMeshAttribute> {
        static valueOf(name: string): Internal.ChunkMeshAttribute;
        static values(): Internal.ChunkMeshAttribute[];
        static readonly POSITION: Internal.ChunkMeshAttribute;
        static readonly TEXTURE: Internal.ChunkMeshAttribute;
        static readonly COLOR: Internal.ChunkMeshAttribute;
        static readonly LIGHT: Internal.ChunkMeshAttribute;
    }
    type ChunkMeshAttribute_ = "position" | "color" | "texture" | "light" | ChunkMeshAttribute;
    class ServerChunkProvider extends Internal.AbstractChunkProvider implements Internal.ServerChunkCacheAccessor {
        func_212863_j_(): Internal.ServerWorldLightManager;
        func_225315_a(arg0: number, arg1: Internal.IChunk, arg2: Internal.ChunkStatus_): void;
        func_217210_a(arg0: boolean): void;
        func_217232_b(arg0: number, arg1: number, arg2: Internal.ChunkStatus_, arg3: boolean): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_212864_k_(): Internal.World;
        func_217230_c(arg0: Internal.Entity): void;
        func_217231_i(): Internal.PointOfInterestManager;
        func_217216_a(arg0: Internal.Entity, arg1: Internal.IPacket<any>): void;
        func_217217_a(arg0: BlockPos): void;
        handler$bdg000$onSaveALlChunks(arg0: boolean, arg1: Internal.CallbackInfo): void;
        func_217219_a(arg0: number): void;
        func_217218_b(arg0: Internal.Entity, arg1: Internal.IPacket<any>): void;
        func_217233_c(arg0: number, arg1: number, arg2: Internal.ChunkStatus_, arg3: boolean): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_217234_d(): boolean;
        func_201711_g(): Internal.ChunkGenerator;
        func_217227_h(): Internal.DimensionSavedDataManager;
        func_217221_a(arg0: Internal.ServerPlayerEntity): void;
        func_217226_b(arg0: Internal.Entity): void;
        func_217228_a<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        func_217229_b(): number;
        func_217208_a(arg0: Internal.ChunkPos): string;
        func_217222_b<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        getDistanceManager(): Internal.TicketManager;
        func_217207_a(arg0: Internal.BooleanSupplier_): void;
        func_73152_e(): number;
        registerTickingTicket<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        func_241101_k_(): Internal.WorldEntitySpawner$EntityDensityManager;
        releaseTickingTicket<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        func_225314_f(): number;
        readonly field_217241_g: Internal.Thread;
        readonly field_217237_a: Internal.ChunkManager;
        readonly field_186029_c: Internal.ChunkGenerator;
        readonly field_217243_i: Internal.ServerChunkProvider$ChunkExecutor;
        readonly field_222877_p: Internal.IChunk[];
        readonly field_73251_h: Internal.ServerWorld;
        readonly field_222876_o: Internal.ChunkStatus[];
        readonly field_222875_n: number[];
        get distanceManager(): Internal.TicketManager;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ServerWorld, arg1: Internal.SaveFormat$LevelSave, arg2: Internal.DataFixer, arg3: Internal.TemplateManager, arg4: Internal.Executor, arg5: Internal.ChunkGenerator, arg6: number, arg7: boolean, arg8: Internal.IChunkStatusListener, arg9: java_.util.function_.Supplier<Internal.DimensionSavedDataManager>);
    }
    type ServerChunkProvider_ = ServerChunkProvider;
    class Products$P13 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function13_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>, arg4: Internal.App<F, T5>, arg5: Internal.App<F, T6>, arg6: Internal.App<F, T7>, arg7: Internal.App<F, T8>, arg8: Internal.App<F, T9>, arg9: Internal.App<F, T10>, arg10: Internal.App<F, T11>, arg11: Internal.App<F, T12>, arg12: Internal.App<F, T13>);
    }
    type Products$P13_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> = Products$P13<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>;
    class PlayerTeam extends Internal.Team {
        updatePresence(): void;
        createParty(arg0: Internal.ServerPlayerEntity, arg1: string, arg2: string, arg3: number, arg4: Internal.Set<Internal.GameProfile>): void;
        getPlayer(): Internal.ServerPlayerEntity;
        hasTeam(): boolean;
        actualTeam: Internal.Team;
        playerName: string;
        online: boolean;
        get player(): Internal.ServerPlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TeamManager);
    }
    type PlayerTeam_ = PlayerTeam;
    interface Scriptable {
        setPrototype(arg0: Internal.Scriptable): void;
        getPrototype(): Internal.Scriptable;
        hasInstance(arg0: Internal.Scriptable): boolean;
        setParentScope(arg0: Internal.Scriptable): void;
        get(arg0: number, arg1: Internal.Scriptable): any;
        get(arg0: string, arg1: Internal.Scriptable): any;
        getIds(): any[];
        has(arg0: number, arg1: Internal.Scriptable): boolean;
        has(arg0: string, arg1: Internal.Scriptable): boolean;
        getClassName(): string;
        getParentScope(): Internal.Scriptable;
        delete(arg0: string): void;
        delete(arg0: number): void;
        put(arg0: string, arg1: Internal.Scriptable, arg2: any): void;
        put(arg0: number, arg1: Internal.Scriptable, arg2: any): void;
        getDefaultValue(arg0: Internal.Class<any>): any;
    }
    type Scriptable_ = Scriptable;
    class ServerLifecycleEvent extends net.minecraftforge.eventbus.api.Event {
        getServer(): Internal.MinecraftServer;
        get server(): Internal.MinecraftServer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MinecraftServer);
    }
    type ServerLifecycleEvent_ = ServerLifecycleEvent;
    class StageChangeEvent extends Document.Object {
        getStage(): string;
        getPlayer(): Internal.PlayerEntity;
        getPlayerStages(): Internal.Stages;
        get stage(): string;
        get playerStages(): Internal.Stages;
        get player(): Internal.PlayerEntity;
    }
    type StageChangeEvent_ = StageChangeEvent;
    class HotbarSnapshot extends Internal.ForwardingList<Internal.ItemStack> {
        spliterator(): Internal.Spliterator<Internal.ItemStack>;
        forEach(arg0: Internal.Consumer_<Internal.ItemStack_>): void;
        sort(arg0: Internal.Comparator<Internal.ItemStack>): void;
        removeLast(): Internal.ItemStack;
        getLast(): Internal.ItemStack;
        replaceAll(arg0: Internal.UnaryOperator<Internal.ItemStack>): void;
        removeIf(arg0: Internal.Predicate_<Internal.ItemStack_>): boolean;
        addLast(arg0: Internal.ItemStack): void;
        stream(): Internal.Stream<Internal.ItemStack>;
        getFirst(): Internal.ItemStack;
        removeFirst(): Internal.ItemStack;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        func_192833_a(arg0: Internal.ListNBT): void;
        parallelStream(): Internal.Stream<Internal.ItemStack>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<Internal.ItemStack>;
        addFirst(arg0: Internal.ItemStack): void;
        func_192834_a(): Internal.ListNBT;
        get last(): Internal.ItemStack;
        get first(): Internal.ItemStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type HotbarSnapshot_ = HotbarSnapshot;
    class CompletableFuture <T> extends Document.Object implements java_.util.concurrent.Future<T>, Internal.CompletionStage<T> {
        cancel(arg0: boolean): boolean;
        obtrudeValue(arg0: T): void;
        exceptionallyAsync(arg0: Internal.Function_<Internal.Throwable_, T>, arg1: Internal.Executor_): Internal.CompletableFuture<T>;
        exceptionallyAsync(arg0: Internal.Function_<any,any>, arg1: Internal.Executor_): Internal.CompletionStage<any>;
        exceptionallyAsync(arg0: Internal.Function_<Internal.Throwable_, T>): Internal.CompletableFuture<T>;
        exceptionallyAsync(arg0: Internal.Function_<any,any>): Internal.CompletionStage<any>;
        static failedStage<U_>(arg0: Internal.Throwable): Internal.CompletionStage<U_>;
        exceptionNow(): Internal.Throwable;
        runAfterBothAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_): Internal.CompletableFuture<void>;
        runAfterBothAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_): Internal.CompletionStage<any>;
        runAfterBothAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_, arg2: Internal.Executor_): Internal.CompletableFuture<void>;
        runAfterBothAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_, arg2: Internal.Executor_): Internal.CompletionStage<any>;
        obtrudeException(arg0: Internal.Throwable): void;
        thenAcceptBoth(arg0: Internal.CompletionStage<any>, arg1: Internal.BiConsumer_<any,any>): Internal.CompletionStage<any>;
        thenAcceptBoth<U_>(arg0: Internal.CompletionStage<U_>, arg1: Internal.BiConsumer_<T, U_>): Internal.CompletableFuture<void>;
        exceptionallyCompose(arg0: Internal.Function_<any,any>): Internal.CompletionStage<any>;
        exceptionallyCompose(arg0: Internal.Function_<Internal.Throwable_, Internal.CompletionStage_<T>>): Internal.CompletableFuture<T>;
        state(): Internal.Future$State;
        join(): T;
        isCompletedExceptionally(): boolean;
        applyToEither<U_>(arg0: Internal.CompletionStage<T>, arg1: Internal.Function_<T, U_>): Internal.CompletableFuture<U_>;
        applyToEither(arg0: Internal.CompletionStage<any>, arg1: Internal.Function_<any,any>): Internal.CompletionStage<any>;
        completeAsync(arg0: java_.util.function_.Supplier_<T>, arg1: Internal.Executor_): Internal.CompletableFuture<T>;
        completeAsync(arg0: java_.util.function_.Supplier_<T>): Internal.CompletableFuture<T>;
        thenApply<U_>(arg0: Internal.Function_<T, U_>): Internal.CompletableFuture<U_>;
        thenApply(arg0: Internal.Function_<any,any>): Internal.CompletionStage<any>;
        thenRun(arg0: Internal.Runnable_): Internal.CompletableFuture<void>;
        thenRun(arg0: Internal.Runnable_): Internal.CompletionStage<any>;
        orTimeout(arg0: number, arg1: Internal.TimeUnit_): Internal.CompletableFuture<T>;
        getNow(arg0: T): T;
        exceptionally(arg0: Internal.Function_<Internal.Throwable_, T>): Internal.CompletableFuture<T>;
        exceptionally(arg0: Internal.Function_<any,any>): Internal.CompletionStage<any>;
        handle(arg0: Internal.BiFunction_<any,any,any>): Internal.CompletionStage<any>;
        handle<U_>(arg0: Internal.BiFunction_<T, Internal.Throwable_, U_>): Internal.CompletableFuture<U_>;
        thenCompose(arg0: Internal.Function_<any,any>): Internal.CompletionStage<any>;
        thenCompose<U_>(arg0: Internal.Function_<T, Internal.CompletionStage_<U_>>): Internal.CompletableFuture<U_>;
        static failedFuture<U_>(arg0: Internal.Throwable): Internal.CompletableFuture<U_>;
        thenCombineAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.BiFunction_<any,any,any>, arg2: Internal.Executor_): Internal.CompletionStage<any>;
        thenCombineAsync<U_, V_>(arg0: Internal.CompletionStage<U_>, arg1: Internal.BiFunction_<T, U_, V_>, arg2: Internal.Executor_): Internal.CompletableFuture<V_>;
        thenCombineAsync<U_, V_>(arg0: Internal.CompletionStage<U_>, arg1: Internal.BiFunction_<T, U_, V_>): Internal.CompletableFuture<V_>;
        thenCombineAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.BiFunction_<any,any,any>): Internal.CompletionStage<any>;
        static completedFuture<U_>(arg0: U_): Internal.CompletableFuture<U_>;
        getNumberOfDependents(): number;
        whenCompleteAsync(arg0: Internal.BiConsumer_<T, Internal.Throwable_>): Internal.CompletableFuture<T>;
        whenCompleteAsync(arg0: Internal.BiConsumer_<any,any>): Internal.CompletionStage<any>;
        whenCompleteAsync(arg0: Internal.BiConsumer_<T, Internal.Throwable_>, arg1: Internal.Executor_): Internal.CompletableFuture<T>;
        whenCompleteAsync(arg0: Internal.BiConsumer_<any,any>, arg1: Internal.Executor_): Internal.CompletionStage<any>;
        thenApplyAsync(arg0: Internal.Function_<any,any>, arg1: Internal.Executor_): Internal.CompletionStage<any>;
        thenApplyAsync<U_>(arg0: Internal.Function_<T, U_>, arg1: Internal.Executor_): Internal.CompletableFuture<U_>;
        thenApplyAsync<U_>(arg0: Internal.Function_<T, U_>): Internal.CompletableFuture<U_>;
        thenApplyAsync(arg0: Internal.Function_<any,any>): Internal.CompletionStage<any>;
        thenAcceptAsync(arg0: Internal.Consumer_<T>, arg1: Internal.Executor_): Internal.CompletableFuture<void>;
        thenAcceptAsync(arg0: Internal.Consumer_<any>, arg1: Internal.Executor_): Internal.CompletionStage<any>;
        thenAcceptAsync(arg0: Internal.Consumer_<T>): Internal.CompletableFuture<void>;
        thenAcceptAsync(arg0: Internal.Consumer_<any>): Internal.CompletionStage<any>;
        toCompletableFuture(): Internal.CompletableFuture<T>;
        static runAsync(arg0: Internal.Runnable_, arg1: Internal.Executor_): Internal.CompletableFuture<void>;
        static runAsync(arg0: Internal.Runnable_): Internal.CompletableFuture<void>;
        thenRunAsync(arg0: Internal.Runnable_, arg1: Internal.Executor_): Internal.CompletionStage<any>;
        thenRunAsync(arg0: Internal.Runnable_, arg1: Internal.Executor_): Internal.CompletableFuture<void>;
        thenRunAsync(arg0: Internal.Runnable_): Internal.CompletionStage<any>;
        thenRunAsync(arg0: Internal.Runnable_): Internal.CompletableFuture<void>;
        static allOf(...arg0: Internal.CompletableFuture<any>[]): Internal.CompletableFuture<void>;
        applyToEitherAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Function_<any,any>, arg2: Internal.Executor_): Internal.CompletionStage<any>;
        applyToEitherAsync<U_>(arg0: Internal.CompletionStage<T>, arg1: Internal.Function_<T, U_>, arg2: Internal.Executor_): Internal.CompletableFuture<U_>;
        applyToEitherAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Function_<any,any>): Internal.CompletionStage<any>;
        applyToEitherAsync<U_>(arg0: Internal.CompletionStage<T>, arg1: Internal.Function_<T, U_>): Internal.CompletableFuture<U_>;
        newIncompleteFuture<U_>(): Internal.CompletableFuture<U_>;
        acceptEitherAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Consumer_<any>): Internal.CompletionStage<any>;
        acceptEitherAsync(arg0: Internal.CompletionStage<T>, arg1: Internal.Consumer_<T>): Internal.CompletableFuture<void>;
        acceptEitherAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Consumer_<any>, arg2: Internal.Executor_): Internal.CompletionStage<any>;
        acceptEitherAsync(arg0: Internal.CompletionStage<T>, arg1: Internal.Consumer_<T>, arg2: Internal.Executor_): Internal.CompletableFuture<void>;
        runAfterEitherAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_): Internal.CompletableFuture<void>;
        runAfterEitherAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_): Internal.CompletionStage<any>;
        runAfterEitherAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_, arg2: Internal.Executor_): Internal.CompletableFuture<void>;
        runAfterEitherAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_, arg2: Internal.Executor_): Internal.CompletionStage<any>;
        acceptEither(arg0: Internal.CompletionStage<any>, arg1: Internal.Consumer_<any>): Internal.CompletionStage<any>;
        acceptEither(arg0: Internal.CompletionStage<T>, arg1: Internal.Consumer_<T>): Internal.CompletableFuture<void>;
        get(arg0: number, arg1: Internal.TimeUnit_): T;
        get(): T;
        copy(): Internal.CompletableFuture<T>;
        runAfterEither(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_): Internal.CompletionStage<any>;
        runAfterEither(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_): Internal.CompletableFuture<void>;
        thenComposeAsync(arg0: Internal.Function_<any,any>): Internal.CompletionStage<any>;
        thenComposeAsync<U_>(arg0: Internal.Function_<T, Internal.CompletionStage_<U_>>): Internal.CompletableFuture<U_>;
        thenComposeAsync<U_>(arg0: Internal.Function_<T, Internal.CompletionStage_<U_>>, arg1: Internal.Executor_): Internal.CompletableFuture<U_>;
        thenComposeAsync(arg0: Internal.Function_<any,any>, arg1: Internal.Executor_): Internal.CompletionStage<any>;
        thenAccept(arg0: Internal.Consumer_<any>): Internal.CompletionStage<any>;
        thenAccept(arg0: Internal.Consumer_<T>): Internal.CompletableFuture<void>;
        isCancelled(): boolean;
        runAfterBoth(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_): Internal.CompletableFuture<void>;
        runAfterBoth(arg0: Internal.CompletionStage<any>, arg1: Internal.Runnable_): Internal.CompletionStage<any>;
        static anyOf(...arg0: Internal.CompletableFuture<any>[]): Internal.CompletableFuture<any>;
        completeOnTimeout(arg0: T, arg1: number, arg2: Internal.TimeUnit_): Internal.CompletableFuture<T>;
        handleAsync<U_>(arg0: Internal.BiFunction_<T, Internal.Throwable_, U_>): Internal.CompletableFuture<U_>;
        handleAsync(arg0: Internal.BiFunction_<any,any,any>): Internal.CompletionStage<any>;
        handleAsync(arg0: Internal.BiFunction_<any,any,any>, arg1: Internal.Executor_): Internal.CompletionStage<any>;
        handleAsync<U_>(arg0: Internal.BiFunction_<T, Internal.Throwable_, U_>, arg1: Internal.Executor_): Internal.CompletableFuture<U_>;
        defaultExecutor(): Internal.Executor;
        static supplyAsync<U_>(arg0: java_.util.function_.Supplier_<U_>, arg1: Internal.Executor_): Internal.CompletableFuture<U_>;
        static supplyAsync<U_>(arg0: java_.util.function_.Supplier_<U_>): Internal.CompletableFuture<U_>;
        completeExceptionally(arg0: Internal.Throwable): boolean;
        isDone(): boolean;
        whenComplete(arg0: Internal.BiConsumer_<T, Internal.Throwable_>): Internal.CompletableFuture<T>;
        whenComplete(arg0: Internal.BiConsumer_<any,any>): Internal.CompletionStage<any>;
        thenAcceptBothAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.BiConsumer_<any,any>, arg2: Internal.Executor_): Internal.CompletionStage<any>;
        thenAcceptBothAsync<U_>(arg0: Internal.CompletionStage<U_>, arg1: Internal.BiConsumer_<T, U_>, arg2: Internal.Executor_): Internal.CompletableFuture<void>;
        thenAcceptBothAsync<U_>(arg0: Internal.CompletionStage<U_>, arg1: Internal.BiConsumer_<T, U_>): Internal.CompletableFuture<void>;
        thenAcceptBothAsync(arg0: Internal.CompletionStage<any>, arg1: Internal.BiConsumer_<any,any>): Internal.CompletionStage<any>;
        static delayedExecutor(arg0: number, arg1: Internal.TimeUnit_): Internal.Executor;
        static delayedExecutor(arg0: number, arg1: Internal.TimeUnit_, arg2: Internal.Executor_): Internal.Executor;
        exceptionallyComposeAsync(arg0: Internal.Function_<Internal.Throwable_, Internal.CompletionStage_<T>>): Internal.CompletableFuture<T>;
        exceptionallyComposeAsync(arg0: Internal.Function_<any,any>): Internal.CompletionStage<any>;
        exceptionallyComposeAsync(arg0: Internal.Function_<any,any>, arg1: Internal.Executor_): Internal.CompletionStage<any>;
        exceptionallyComposeAsync(arg0: Internal.Function_<Internal.Throwable_, Internal.CompletionStage_<T>>, arg1: Internal.Executor_): Internal.CompletableFuture<T>;
        resultNow(): T;
        thenCombine(arg0: Internal.CompletionStage<any>, arg1: Internal.BiFunction_<any,any,any>): Internal.CompletionStage<any>;
        thenCombine<U_, V_>(arg0: Internal.CompletionStage<U_>, arg1: Internal.BiFunction_<T, U_, V_>): Internal.CompletableFuture<V_>;
        minimalCompletionStage(): Internal.CompletionStage<T>;
        complete(arg0: T): boolean;
        static completedStage<U_>(arg0: U_): Internal.CompletionStage<U_>;
        get numberOfDependents(): number;
        get cancelled(): boolean;
        get completedExceptionally(): boolean;
        get done(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CompletableFuture_<T> = CompletableFuture<T>;
    class TextureManager extends Document.Object implements Internal.IFutureReloadListener, Internal.ITickable, Internal.AutoCloseable {
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage_, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        func_215268_a(arg0: ResourceLocation_, arg1: Internal.Executor_): Internal.CompletableFuture<void>;
        func_225594_i_(): string;
        func_229263_a_(arg0: ResourceLocation_, arg1: Internal.Texture): void;
        func_110577_a(arg0: ResourceLocation_): void;
        func_147645_c(arg0: ResourceLocation_): void;
        func_110550_d(): void;
        func_110578_a(arg0: string, arg1: Internal.DynamicTexture): ResourceLocation;
        close(): void;
        func_229267_b_(arg0: ResourceLocation_): Internal.Texture;
        static readonly field_194008_a: ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IResourceManager);
    }
    type TextureManager_ = TextureManager;
    class MutableBoundingBox extends Document.Object {
        func_175898_b(arg0: Vec3i): boolean;
        func_78880_d(): number;
        static func_175899_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.MutableBoundingBox;
        func_215127_b(arg0: number, arg1: number, arg2: number): Internal.MutableBoundingBox;
        func_175896_b(): Vec3i;
        func_78882_c(): number;
        func_78884_a(arg0: Internal.MutableBoundingBox): boolean;
        func_78883_b(): number;
        static func_175897_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: Internal.Direction_): Internal.MutableBoundingBox;
        func_78885_a(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        func_78886_a(arg0: number, arg1: number, arg2: number): void;
        static func_78887_a(): Internal.MutableBoundingBox;
        func_78888_b(arg0: Internal.MutableBoundingBox): void;
        func_151535_h(): Internal.IntArrayNBT;
        static func_236990_b_(): Internal.MutableBoundingBox;
        func_236989_a_(arg0: Vec3i): void;
        func_215126_f(): Vec3i;
        field_78895_b: number;
        field_78893_d: number;
        field_78897_a: number;
        field_78892_f: number;
        field_78896_c: number;
        field_78894_e: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MutableBoundingBox);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number);
        constructor(arg0: Vec3i, arg1: Vec3i);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
        constructor(arg0: number[]);
        constructor();
    }
    type MutableBoundingBox_ = MutableBoundingBox;
    class LivingEvent$LivingVisibilityEvent extends Internal.LivingEvent {
        getLookingEntity(): Internal.Entity;
        getVisibilityModifier(): number;
        modifyVisibility(arg0: number): void;
        get visibilityModifier(): number;
        get lookingEntity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.Entity, arg2: number);
    }
    type LivingEvent$LivingVisibilityEvent_ = LivingEvent$LivingVisibilityEvent;
    class AdvancementProgress extends Document.Object implements Internal.Comparable<Internal.AdvancementProgress> {
        func_192107_d(): Internal.Iterable<string>;
        func_192106_c(arg0: string): Internal.CriterionProgress;
        func_192109_a(arg0: string): boolean;
        func_192108_b(): boolean;
        func_192102_e(): Internal.Iterable<string>;
        func_192104_a(arg0: Internal.PacketBuffer): void;
        func_192103_c(): number;
        func_192099_a(arg0: Internal.Map_<string, Internal.Criterion_>, arg1: string[][]): void;
        func_192105_a(): boolean;
        func_192101_b(arg0: string): boolean;
        func_193126_d(): string;
        static func_192100_b(arg0: Internal.PacketBuffer): Internal.AdvancementProgress;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.AdvancementProgress): number;
        func_193128_g(): Internal.Date;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AdvancementProgress_ = AdvancementProgress;
    class OffsetTime extends Document.Object implements Internal.Temporal, Internal.TemporalAdjuster, Internal.Comparable<Internal.OffsetTime>, Internal.Serializable {
        static ofInstant(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.OffsetTime;
        minus(arg0: Internal.TemporalAmount): Internal.OffsetTime;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.OffsetTime;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plusHours(arg0: number): Internal.OffsetTime;
        minusHours(arg0: number): Internal.OffsetTime;
        isEqual(arg0: Internal.OffsetTime): boolean;
        getOffset(): Internal.ZoneOffset;
        atDate(arg0: Internal.LocalDate): Internal.OffsetDateTime;
        toLocalTime(): Internal.LocalTime;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.OffsetTime): number;
        plusMinutes(arg0: number): Internal.OffsetTime;
        withOffsetSameLocal(arg0: Internal.ZoneOffset): Internal.OffsetTime;
        minusMinutes(arg0: number): Internal.OffsetTime;
        static now(): Internal.OffsetTime;
        static now(arg0: Internal.ZoneId): Internal.OffsetTime;
        static now(arg0: Internal.Clock): Internal.OffsetTime;
        static of(arg0: Internal.LocalTime, arg1: Internal.ZoneOffset): Internal.OffsetTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.ZoneOffset): Internal.OffsetTime;
        get(arg0: Internal.TemporalField): number;
        plusSeconds(arg0: number): Internal.OffsetTime;
        getMinute(): number;
        getHour(): number;
        static from(arg0: Internal.TemporalAccessor): Internal.OffsetTime;
        plusNanos(arg0: number): Internal.OffsetTime;
        withMinute(arg0: number): Internal.OffsetTime;
        withHour(arg0: number): Internal.OffsetTime;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.OffsetTime;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        minusNanos(arg0: number): Internal.OffsetTime;
        getNano(): number;
        format(arg0: Internal.DateTimeFormatter): string;
        static parse(arg0: Internal.CharSequence): Internal.OffsetTime;
        static parse(arg0: Internal.CharSequence, arg1: Internal.DateTimeFormatter): Internal.OffsetTime;
        isSupported(arg0: Internal.TemporalField): boolean;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isBefore(arg0: Internal.OffsetTime): boolean;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.OffsetTime;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.OffsetTime;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        withNano(arg0: number): Internal.OffsetTime;
        getLong(arg0: Internal.TemporalField): number;
        with(arg0: Internal.TemporalAdjuster_): Internal.OffsetTime;
        with(arg0: Internal.TemporalAdjuster_): Internal.Temporal;
        with(arg0: Internal.TemporalField, arg1: number): Internal.OffsetTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        withOffsetSameInstant(arg0: Internal.ZoneOffset): Internal.OffsetTime;
        toEpochSecond(arg0: Internal.LocalDate): number;
        getSecond(): number;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        minusSeconds(arg0: number): Internal.OffsetTime;
        isAfter(arg0: Internal.OffsetTime): boolean;
        withSecond(arg0: number): Internal.OffsetTime;
        static readonly MIN: Internal.OffsetTime;
        static readonly MAX: Internal.OffsetTime;
        get offset(): Internal.ZoneOffset;
        get hour(): number;
        get nano(): number;
        get minute(): number;
        get second(): number;
    }
    type OffsetTime_ = OffsetTime;
    class FluidRegistryEventJS extends Internal.StartupEventJS {
        create(name: string): Internal.FluidBuilder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FluidRegistryEventJS_ = FluidRegistryEventJS;
    interface WatchService extends Internal.Closeable {
        take(): Internal.WatchKey;
        poll(arg0: number, arg1: Internal.TimeUnit_): Internal.WatchKey;
        poll(): Internal.WatchKey;
        close(): void;
    }
    type WatchService_ = WatchService;
    interface InputMethodListener extends Internal.EventListener {
        inputMethodTextChanged(arg0: Internal.InputMethodEvent): void;
        caretPositionChanged(arg0: Internal.InputMethodEvent): void;
    }
    type InputMethodListener_ = InputMethodListener;
    interface IFluidRecipeInput {
        isI2FInput(): boolean;
        isF2FInput(): boolean;
    }
    type IFluidRecipeInput_ = IFluidRecipeInput;
    class LivingEntityDropsEventJS extends Internal.LivingEntityEventJS {
        addDrop(item: any, chance: number): Internal.ItemEntityJS;
        addDrop(item: any): Internal.ItemEntityJS;
        getLootingLevel(): number;
        getSource(): Internal.DamageSourceJS;
        getDrops(): Internal.List<Internal.ItemEntityJS>;
        isRecentlyHit(): boolean;
        eventDrops: Internal.List<Internal.ItemEntityJS>;
        get drops(): Internal.List<Internal.ItemEntityJS>;
        get recentlyHit(): boolean;
        get lootingLevel(): number;
        get source(): Internal.DamageSourceJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(e: Internal.LivingDropsEvent);
    }
    type LivingEntityDropsEventJS_ = LivingEntityDropsEventJS;
    class FieldPosition extends Document.Object {
        getEndIndex(): number;
        getFieldAttribute(): Internal.Format$Field;
        getField(): number;
        setEndIndex(arg0: number): void;
        getBeginIndex(): number;
        setBeginIndex(arg0: number): void;
        get field(): number;
        get fieldAttribute(): Internal.Format$Field;
        get endIndex(): number;
        get beginIndex(): number;
        set endIndex(arg0: number);
        set beginIndex(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Format$Field, arg1: number);
        constructor(arg0: Internal.Format$Field);
        constructor(arg0: number);
    }
    type FieldPosition_ = FieldPosition;
    interface IServerLevel {
        mfix$getStrongholdCache(): Internal.StrongholdLocationCache;
        (): Internal.StrongholdLocationCache;
    }
    type IServerLevel_ = (()=>Internal.StrongholdLocationCache) | IServerLevel;
    class ChannelMetadata extends Document.Object {
        hasDisconnect(): boolean;
        defaultMaxMessagesPerRead(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean);
        constructor(arg0: boolean, arg1: number);
    }
    type ChannelMetadata_ = ChannelMetadata;
    class LlamaSpitEntity extends Internal.ProjectileEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number);
        constructor(arg0: Internal.World, arg1: Internal.LlamaEntity);
        constructor(arg0: Internal.EntityType<Internal.LlamaSpitEntity>, arg1: Internal.World);
    }
    type LlamaSpitEntity_ = LlamaSpitEntity;
    class Instant extends Document.Object implements Internal.Temporal, Internal.TemporalAdjuster, Internal.Comparable<Internal.Instant>, Internal.Serializable {
        static ofEpochSecond(arg0: number): Internal.Instant;
        static ofEpochSecond(arg0: number, arg1: number): Internal.Instant;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.Instant;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Instant;
        static ofEpochMilli(arg0: number): Internal.Instant;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        minusMillis(arg0: number): Internal.Instant;
        compareTo(arg0: Internal.Instant): number;
        compareTo(arg0: any): number;
        static now(): Internal.Instant;
        static now(arg0: Internal.Clock): Internal.Instant;
        get(arg0: Internal.TemporalField): number;
        plusSeconds(arg0: number): Internal.Instant;
        static from(arg0: Internal.TemporalAccessor): Internal.Instant;
        plusNanos(arg0: number): Internal.Instant;
        atOffset(arg0: Internal.ZoneOffset): Internal.OffsetDateTime;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.Instant;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        minusNanos(arg0: number): Internal.Instant;
        getNano(): number;
        toEpochMilli(): number;
        static parse(arg0: Internal.CharSequence): Internal.Instant;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isSupported(arg0: Internal.TemporalField): boolean;
        atZone(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        isBefore(arg0: Internal.Instant): boolean;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Instant;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.Instant;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        getLong(arg0: Internal.TemporalField): number;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Instant;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        with(arg0: Internal.TemporalAdjuster_): Internal.Instant;
        with(arg0: Internal.TemporalAdjuster_): Internal.Temporal;
        plusMillis(arg0: number): Internal.Instant;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        minusSeconds(arg0: number): Internal.Instant;
        getEpochSecond(): number;
        isAfter(arg0: Internal.Instant): boolean;
        static readonly MIN: Internal.Instant;
        static readonly MAX: Internal.Instant;
        static readonly EPOCH: Internal.Instant;
        get nano(): number;
        get epochSecond(): number;
    }
    type Instant_ = Instant;
    interface URLStreamHandlerFactory {
        createURLStreamHandler(arg0: string): Internal.URLStreamHandler;
        (arg0: string): Internal.URLStreamHandler;
    }
    type URLStreamHandlerFactory_ = ((arg0: string)=>Internal.URLStreamHandler) | URLStreamHandlerFactory;
    interface PerformanceMetrics {
        getAverageTime(): number;
        getSampleCount(): number;
        getMaxTime(): number;
        getMinTime(): number;
    }
    type PerformanceMetrics_ = PerformanceMetrics;
    class PandaEntity$Gene extends Internal.Enum<Internal.PandaEntity$Gene> {
        func_221100_b(): string;
        static valueOf(arg0: string): Internal.PandaEntity$Gene;
        static values(): Internal.PandaEntity$Gene[];
        func_221107_c(): boolean;
        static func_221108_a(arg0: string): Internal.PandaEntity$Gene;
        static func_221105_a(arg0: number): Internal.PandaEntity$Gene;
        func_221106_a(): number;
        static func_221104_a(arg0: Internal.Random): Internal.PandaEntity$Gene;
        static readonly WEAK: Internal.PandaEntity$Gene;
        static readonly WORRIED: Internal.PandaEntity$Gene;
        static readonly LAZY: Internal.PandaEntity$Gene;
        static readonly PLAYFUL: Internal.PandaEntity$Gene;
        static readonly AGGRESSIVE: Internal.PandaEntity$Gene;
        static readonly NORMAL: Internal.PandaEntity$Gene;
        static readonly BROWN: Internal.PandaEntity$Gene;
    }
    type PandaEntity$Gene_ = "normal" | "lazy" | "worried" | "playful" | "brown" | "weak" | "aggressive" | PandaEntity$Gene;
    class SEntityMetadataPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149376_c(): Internal.List<Internal.EntityDataManager$DataEntry<any>>;
        func_149375_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.EntityDataManager, arg2: boolean);
    }
    type SEntityMetadataPacket_ = SEntityMetadataPacket;
    interface IProfileResult {
        func_219917_a(arg0: string): Internal.List<Internal.DataPoint>;
        func_219924_f(): number;
        func_219918_a(): number;
        func_219925_g(): number;
        func_219919_a(arg0: Internal.File): boolean;
        func_219922_b(): number;
        func_219921_d(): number;
        func_219923_c(): number;
    }
    type IProfileResult_ = IProfileResult;
    class EquipmentContext extends Document.Object {
        hasModifiableArmor(): boolean;
        getTinkerData(): Internal.LazyOptional<Internal.TinkerDataCapability$Holder>;
        getEntity(): Internal.LivingEntity;
        getToolInSlot(arg0: EquipmentSlot_): Internal.IModifierToolStack;
        get tinkerData(): Internal.LazyOptional<Internal.TinkerDataCapability$Holder>;
        get entity(): Internal.LivingEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LivingEntity);
    }
    type EquipmentContext_ = EquipmentContext;
    class DietEvent extends Internal.PlayerEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PlayerEntity);
        constructor();
    }
    type DietEvent_ = DietEvent;
    abstract class AbstractPonderBuilder <T, S, C> extends Document.Object {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.List<T>);
    }
    type AbstractPonderBuilder_<T, S, C> = AbstractPonderBuilder<T, S, C>;
    class LazyValue <T> extends Document.Object {
        func_179281_c(): T;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: java_.util.function_.Supplier<T>);
    }
    type LazyValue_<T> = LazyValue<T>;
    class CampfireCookingRecipe extends Internal.AbstractCookingRecipe {
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<Internal.ItemStack>;
        func_192399_d(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: string, arg2: Internal.Ingredient, arg3: Internal.ItemStack, arg4: number, arg5: number);
    }
    type CampfireCookingRecipe_ = CampfireCookingRecipe;
    class CPlayerTryUseItemOnBlockPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218794_c(): Internal.BlockRayTraceResult;
        func_187022_c(): Hand;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Hand, arg1: Internal.BlockRayTraceResult);
    }
    type CPlayerTryUseItemOnBlockPacket_ = CPlayerTryUseItemOnBlockPacket;
    class BlockStateProvidingFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_227268_a_: Internal.BlockStateProvider;
        static readonly field_236453_a_: Internal.Codec<Internal.BlockStateProvidingFeatureConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockStateProvider);
    }
    type BlockStateProvidingFeatureConfig_ = BlockStateProvidingFeatureConfig;
    interface NonNullFunction <T, R> {
        apply(arg0: T): R;
        (arg0: T): R;
    }
    type NonNullFunction_<T, R> = ((arg0: T)=>R) | NonNullFunction<T, R>;
    class PlayerPerkAllocation extends Document.Object {
        static unlock(): Internal.PlayerPerkAllocation;
        static granted(arg0: Internal.UUID): Internal.PlayerPerkAllocation;
    }
    type PlayerPerkAllocation_ = PlayerPerkAllocation;
    abstract class Toolkit extends Document.Object {
        beep(): void;
        isModalityTypeSupported(arg0: Internal.Dialog$ModalityType_): boolean;
        createDragGestureRecognizer<T_>(arg0: Internal.Class<T_>, arg1: Internal.DragSource, arg2: Internal.Component, arg3: number, arg4: Internal.DragGestureListener_): T_;
        getScreenInsets(arg0: Internal.GraphicsConfiguration): Internal.Insets;
        getMenuShortcutKeyMaskEx(): number;
        addAWTEventListener(arg0: Internal.AWTEventListener_, arg1: number): void;
        getLockingKeyState(arg0: number): boolean;
        getFontMetrics(arg0: Internal.Font): Internal.FontMetrics;
        areExtraMouseButtonsEnabled(): boolean;
        getAWTEventListeners(arg0: number): Internal.AWTEventListener[];
        getAWTEventListeners(): Internal.AWTEventListener[];
        checkImage(arg0: Internal.Image, arg1: number, arg2: number, arg3: Internal.ImageObserver_): number;
        getScreenResolution(): number;
        removeAWTEventListener(arg0: Internal.AWTEventListener_): void;
        getPrintJob(arg0: Internal.Frame, arg1: string, arg2: Internal.JobAttributes, arg3: Internal.PageAttributes): Internal.PrintJob;
        getPrintJob(arg0: Internal.Frame, arg1: string, arg2: Internal.Properties): Internal.PrintJob;
        getSystemEventQueue(): Internal.EventQueue;
        getBestCursorSize(arg0: number, arg1: number): Internal.Dimension;
        createCustomCursor(arg0: Internal.Image, arg1: Internal.Point, arg2: string): Internal.Cursor;
        getScreenSize(): Internal.Dimension;
        isFrameStateSupported(arg0: number): boolean;
        addPropertyChangeListener(arg0: string, arg1: Internal.PropertyChangeListener_): void;
        isAlwaysOnTopSupported(): boolean;
        getSystemClipboard(): Internal.Clipboard;
        getDesktopProperty(arg0: string): any;
        getFontList(): string[];
        getColorModel(): Internal.ColorModel;
        getPropertyChangeListeners(): Internal.PropertyChangeListener[];
        getPropertyChangeListeners(arg0: string): Internal.PropertyChangeListener[];
        static getProperty(arg0: string, arg1: string): string;
        createImage(arg0: Internal.ImageProducer): Internal.Image;
        createImage(arg0: number[]): Internal.Image;
        createImage(arg0: number[], arg1: number, arg2: number): Internal.Image;
        createImage(arg0: string): Internal.Image;
        createImage(arg0: Internal.URL): Internal.Image;
        static getDefaultToolkit(): Internal.Toolkit;
        isDynamicLayoutActive(): boolean;
        getSystemSelection(): Internal.Clipboard;
        removePropertyChangeListener(arg0: string, arg1: Internal.PropertyChangeListener_): void;
        sync(): void;
        setLockingKeyState(arg0: number, arg1: boolean): void;
        isModalExclusionTypeSupported(arg0: Internal.Dialog$ModalExclusionType_): boolean;
        prepareImage(arg0: Internal.Image, arg1: number, arg2: number, arg3: Internal.ImageObserver_): boolean;
        getMenuShortcutKeyMask(): number;
        getMaximumCursorColors(): number;
        setDynamicLayout(arg0: boolean): void;
        getImage(arg0: Internal.URL): Internal.Image;
        getImage(arg0: string): Internal.Image;
        mapInputMethodHighlight(arg0: Internal.InputMethodHighlight): Internal.Map<Internal.TextAttribute, any>;
        get dynamicLayoutActive(): boolean;
        get menuShortcutKeyMaskEx(): number;
        get aWTEventListeners(): Internal.AWTEventListener[];
        get systemClipboard(): Internal.Clipboard;
        get fontList(): string[];
        get systemEventQueue(): Internal.EventQueue;
        get screenSize(): Internal.Dimension;
        get systemSelection(): Internal.Clipboard;
        get colorModel(): Internal.ColorModel;
        get maximumCursorColors(): number;
        get screenResolution(): number;
        get propertyChangeListeners(): Internal.PropertyChangeListener[];
        get alwaysOnTopSupported(): boolean;
        get defaultToolkit(): Internal.Toolkit;
        get menuShortcutKeyMask(): number;
        set dynamicLayout(arg0: boolean);
    }
    type Toolkit_ = Toolkit;
    interface LootTableMixin {
        getPools(): Internal.List<Internal.LootPool>;
        (): Internal.List<Internal.LootPool>;
    }
    type LootTableMixin_ = (()=>Internal.List<Internal.LootPool>) | LootTableMixin;
    class Tristate extends Internal.Enum<Internal.Tristate> {
        isTrue(): boolean;
        isDefault(): boolean;
        static read(nbt: Internal.CompoundNBT_, key: string): Internal.Tristate;
        static read(buffer: Internal.PacketBuffer): Internal.Tristate;
        static valueOf(name: string): Internal.Tristate;
        static values(): Internal.Tristate[];
        get(def: boolean): boolean;
        getOpposite(): Internal.Tristate;
        isFalse(): boolean;
        write(buffer: Internal.PacketBuffer): void;
        write(nbt: Internal.CompoundNBT_, key: string): void;
        readonly result: Internal.ActionResultType;
        readonly color: Internal.Color4I;
        static readonly NAME_MAP: Internal.NameMap<Internal.Tristate>;
        readonly displayName: string;
        readonly name: string;
        readonly icon: Internal.Icon;
        static readonly TRUE: Internal.Tristate;
        static readonly FALSE: Internal.Tristate;
        static readonly VALUES: Internal.Tristate[];
        static readonly DEFAULT: Internal.Tristate;
        get default(): boolean;
        get true(): boolean;
        get false(): boolean;
        get opposite(): Internal.Tristate;
    }
    type Tristate_ = "false" | "true" | "default" | Tristate;
    interface ResourceLocationAccess {
        setPath(arg0: string): void;
        setNamespace(arg0: string): void;
    }
    type ResourceLocationAccess_ = ResourceLocationAccess;
    interface DSL$TypeReference {
        in(arg0: Internal.Schema): Internal.TypeTemplate;
        typeName(): string;
        (): string;
    }
    type DSL$TypeReference_ = (()=>string) | DSL$TypeReference;
    class NodeConnection <T> extends Document.Object {
        canConnect(): boolean;
        getTo(): BlockPos;
        getNode(): T;
        get node(): T;
        get to(): BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: T, arg1: BlockPos, arg2: boolean);
    }
    type NodeConnection_<T> = NodeConnection<T>;
    class VanillaPack extends Document.Object implements Internal.IResourcePack, Internal.IPackResources {
        getExistenceByResource(): Internal.Map<string, boolean>;
        func_195762_a(): string;
        func_195761_a(arg0: Internal.ResourcePackType_, arg1: ResourceLocation_): Internal.InputStream;
        func_195760_a<T_>(arg0: Internal.IMetadataSectionSerializer<T_>): T_;
        handler$bbf000$initHeadInjected(arg0: string[], arg1: Internal.CallbackInfo): void;
        handler$bbf001$hasResourceHeadInjected(arg0: Internal.ResourcePackType_, arg1: ResourceLocation_, arg2: Internal.CallbackInfoReturnable<any>): void;
        func_195764_b(arg0: Internal.ResourcePackType_, arg1: ResourceLocation_): boolean;
        func_225637_a_(arg0: Internal.ResourcePackType_, arg1: string, arg2: string, arg3: number, arg4: Internal.Predicate_<string>): Internal.Collection<ResourceLocation>;
        func_195763_b(arg0: string): Internal.InputStream;
        func_195759_a(arg0: Internal.ResourcePackType_): Internal.Set<string>;
        cacheExists(arg0: Internal.ResourcePackType_, arg1: string, arg2: boolean): void;
        persistAndClearCache(): void;
        isHidden(): boolean;
        setExistenceByResource(arg0: Internal.Map_<string, boolean>): void;
        handler$bbf000$hasResourceReturnInjected(arg0: Internal.ResourcePackType_, arg1: ResourceLocation_, arg2: Internal.CallbackInfoReturnable<any>): void;
        exists(arg0: Internal.ResourcePackType_, arg1: string): boolean;
        close(): void;
        static field_211688_b: Internal.Class<any>;
        static field_199754_a: Internal.Path;
        readonly field_195783_a: Internal.Set<string>;
        get hidden(): boolean;
        get existenceByResource(): Internal.Map<string, boolean>;
        set existenceByResource(arg0: Internal.Map_<string, boolean>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string[]);
    }
    type VanillaPack_ = VanillaPack;
    class InputMappings$Input extends Document.Object {
        func_237520_d_(): Internal.ITextComponent;
        func_197935_d(): string;
        func_197937_c(): number;
        func_197938_b(): Internal.InputMappings$Type;
        func_241552_e_(): Internal.OptionalInt;
        static readonly field_199875_d: {"key.keyboard.period":Internal.InputMappings$Input,"key.mouse.middle":Internal.InputMappings$Input,"key.keyboard.enter":Internal.InputMappings$Input,"key.mouse.right":Internal.InputMappings$Input,"key.keyboard.up":Internal.InputMappings$Input,"key.keyboard.f8":Internal.InputMappings$Input,"key.keyboard.left.control":Internal.InputMappings$Input,"key.keyboard.f9":Internal.InputMappings$Input,"key.keyboard.f6":Internal.InputMappings$Input,"key.keyboard.f7":Internal.InputMappings$Input,"key.keyboard.keypad.equal":Internal.InputMappings$Input,"key.keyboard.f1":Internal.InputMappings$Input,"key.keyboard.comma":Internal.InputMappings$Input,"key.keyboard.f4":Internal.InputMappings$Input,"key.keyboard.f5":Internal.InputMappings$Input,"key.keyboard.f2":Internal.InputMappings$Input,"key.keyboard.f3":Internal.InputMappings$Input,"key.keyboard.world.1":Internal.InputMappings$Input,"key.keyboard.right.bracket":Internal.InputMappings$Input,"key.keyboard.keypad.subtract":Internal.InputMappings$Input,"key.keyboard.world.2":Internal.InputMappings$Input,"key.keyboard.left.win":Internal.InputMappings$Input,"key.keyboard.home":Internal.InputMappings$Input,"key.keyboard.scroll.lock":Internal.InputMappings$Input,"key.keyboard.9":Internal.InputMappings$Input,"key.keyboard.8":Internal.InputMappings$Input,"key.keyboard.left.bracket":Internal.InputMappings$Input,"key.keyboard.backspace":Internal.InputMappings$Input,"key.mouse.left":Internal.InputMappings$Input,"key.keyboard.left":Internal.InputMappings$Input,"key.keyboard.equal":Internal.InputMappings$Input,"key.keyboard.right.alt":Internal.InputMappings$Input,"key.keyboard.keypad.add":Internal.InputMappings$Input,"key.keyboard.slash":Internal.InputMappings$Input,"key.keyboard.left.alt":Internal.InputMappings$Input,"key.keyboard.grave.accent":Internal.InputMappings$Input,"key.keyboard.5":Internal.InputMappings$Input,"key.keyboard.4":Internal.InputMappings$Input,"key.keyboard.7":Internal.InputMappings$Input,"key.keyboard.semicolon":Internal.InputMappings$Input,"key.keyboard.6":Internal.InputMappings$Input,"key.keyboard.1":Internal.InputMappings$Input,"key.keyboard.0":Internal.InputMappings$Input,"key.keyboard.keypad.enter":Internal.InputMappings$Input,"key.keyboard.3":Internal.InputMappings$Input,"key.keyboard.2":Internal.InputMappings$Input,"key.keyboard.tab":Internal.InputMappings$Input,"key.keyboard.apostrophe":Internal.InputMappings$Input,"key.keyboard.unknown":Internal.InputMappings$Input,"key.keyboard.f22":Internal.InputMappings$Input,"key.keyboard.f23":Internal.InputMappings$Input,"key.keyboard.f20":Internal.InputMappings$Input,"key.keyboard.keypad.0":Internal.InputMappings$Input,"key.keyboard.keypad.decimal":Internal.InputMappings$Input,"key.keyboard.f21":Internal.InputMappings$Input,"key.keyboard.keypad.1":Internal.InputMappings$Input,"key.keyboard.print.screen":Internal.InputMappings$Input,"key.keyboard.page.up":Internal.InputMappings$Input,"key.keyboard.pause":Internal.InputMappings$Input,"key.keyboard.right.shift":Internal.InputMappings$Input,"key.keyboard.y":Internal.InputMappings$Input,"key.keyboard.x":Internal.InputMappings$Input,"key.keyboard.z":Internal.InputMappings$Input,"key.keyboard.right.win":Internal.InputMappings$Input,"key.keyboard.keypad.2":Internal.InputMappings$Input,"key.keyboard.delete":Internal.InputMappings$Input,"key.keyboard.keypad.3":Internal.InputMappings$Input,"key.keyboard.f24":Internal.InputMappings$Input,"key.keyboard.keypad.4":Internal.InputMappings$Input,"key.keyboard.f25":Internal.InputMappings$Input,"key.keyboard.keypad.5":Internal.InputMappings$Input,"key.keyboard.keypad.6":Internal.InputMappings$Input,"key.keyboard.keypad.7":Internal.InputMappings$Input,"key.keyboard.keypad.8":Internal.InputMappings$Input,"key.keyboard.keypad.9":Internal.InputMappings$Input,"key.keyboard.e":Internal.InputMappings$Input,"key.keyboard.d":Internal.InputMappings$Input,"key.keyboard.g":Internal.InputMappings$Input,"key.keyboard.f":Internal.InputMappings$Input,"key.keyboard.a":Internal.InputMappings$Input,"key.keyboard.c":Internal.InputMappings$Input,"key.keyboard.b":Internal.InputMappings$Input,"key.keyboard.u":Internal.InputMappings$Input,"key.keyboard.t":Internal.InputMappings$Input,"key.keyboard.w":Internal.InputMappings$Input,"key.keyboard.v":Internal.InputMappings$Input,"key.keyboard.num.lock":Internal.InputMappings$Input,"key.keyboard.q":Internal.InputMappings$Input,"key.keyboard.insert":Internal.InputMappings$Input,"key.keyboard.p":Internal.InputMappings$Input,"key.keyboard.s":Internal.InputMappings$Input,"key.keyboard.r":Internal.InputMappings$Input,"key.keyboard.m":Internal.InputMappings$Input,"key.keyboard.menu":Internal.InputMappings$Input,"key.keyboard.l":Internal.InputMappings$Input,"key.keyboard.o":Internal.InputMappings$Input,"key.keyboard.n":Internal.InputMappings$Input,"key.keyboard.i":Internal.InputMappings$Input,"key.keyboard.h":Internal.InputMappings$Input,"key.keyboard.k":Internal.InputMappings$Input,"key.keyboard.j":Internal.InputMappings$Input,"key.keyboard.escape":Internal.InputMappings$Input,"key.keyboard.end":Internal.InputMappings$Input,"key.keyboard.keypad.multiply":Internal.InputMappings$Input,"key.keyboard.right.control":Internal.InputMappings$Input,"key.mouse.8":Internal.InputMappings$Input,"key.keyboard.left.shift":Internal.InputMappings$Input,"key.keyboard.f11":Internal.InputMappings$Input,"key.keyboard.f12":Internal.InputMappings$Input,"key.keyboard.space":Internal.InputMappings$Input,"key.keyboard.f10":Internal.InputMappings$Input,"key.keyboard.keypad.divide":Internal.InputMappings$Input,"key.mouse.6":Internal.InputMappings$Input,"key.mouse.7":Internal.InputMappings$Input,"key.keyboard.minus":Internal.InputMappings$Input,"key.mouse.4":Internal.InputMappings$Input,"key.mouse.5":Internal.InputMappings$Input,"key.keyboard.right":Internal.InputMappings$Input,"key.keyboard.down":Internal.InputMappings$Input,"key.keyboard.caps.lock":Internal.InputMappings$Input,"key.keyboard.f15":Internal.InputMappings$Input,"key.keyboard.page.down":Internal.InputMappings$Input,"key.keyboard.f16":Internal.InputMappings$Input,"key.keyboard.backslash":Internal.InputMappings$Input,"key.keyboard.f13":Internal.InputMappings$Input,"key.keyboard.f14":Internal.InputMappings$Input,"key.keyboard.f19":Internal.InputMappings$Input,"key.keyboard.f17":Internal.InputMappings$Input,"key.keyboard.f18":Internal.InputMappings$Input};
    }
    type InputMappings$Input_ = InputMappings$Input;
    class PlayerContainer extends Internal.RecipeBookContainer<Internal.CraftingInventory> implements Internal.AccessorPlayerContainer, Internal.ICraftingContainer {
        getCraftResult(): Internal.CraftResultInventory;
        handler$chp000$quickMoveStack(arg0: Internal.PlayerEntity, arg1: number, arg2: Internal.CallbackInfoReturnable<any>): void;
        getPlayer(): Internal.PlayerEntity;
        func_234641_j_(): Internal.CraftingInventory;
        getResult(): Internal.CraftResultInventory;
        getCraftMatrix(): Internal.CraftingInventory;
        static readonly field_226619_g_: ResourceLocation;
        readonly field_75179_f: Internal.CraftResultInventory;
        static readonly field_200829_h: ResourceLocation[];
        static readonly field_226618_f_: ResourceLocation;
        static readonly field_226617_e_: ResourceLocation;
        static readonly field_226620_h_: ResourceLocation;
        readonly field_75180_g: boolean;
        static readonly field_226616_d_: ResourceLocation;
        static readonly field_226615_c_: ResourceLocation;
        field_75181_e: Internal.CraftingInventory;
        readonly field_82862_h: Internal.PlayerEntity;
        get result(): Internal.CraftResultInventory;
        get craftMatrix(): Internal.CraftingInventory;
        get craftResult(): Internal.CraftResultInventory;
        get player(): Internal.PlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PlayerInventory, arg1: boolean, arg2: Internal.PlayerEntity);
    }
    type PlayerContainer_ = PlayerContainer;
    class PonderTagRegistryEventJS extends Internal.EventJS {
        create(arg0: string, arg1: ResourceLocation_, arg2: string, arg3: string, arg4: any): Internal.PonderTagRegistryEventJS;
        create(arg0: string, arg1: ResourceLocation_, arg2: string, arg3: string): Internal.PonderTagRegistryEventJS;
        remove(...arg0: string[]): Internal.PonderTagRegistryEventJS;
        remove(arg0: boolean, ...arg1: string[]): Internal.PonderTagRegistryEventJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PonderTagRegistryEventJS_ = PonderTagRegistryEventJS;
    class MovementController extends Document.Object {
        func_75640_a(): boolean;
        func_188488_a(arg0: number, arg1: number): void;
        func_75641_c(): void;
        func_75642_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_179917_d(): number;
        func_179918_f(): number;
        func_179919_e(): number;
        func_75638_b(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MobEntity);
    }
    type MovementController_ = MovementController;
    class AttachPlayerDataEvent extends Internal.AttachDataEvent<Internal.PlayerDataJS> {
        invoke(): void;
        static readonly EVENT: me.shedaniel.architectury.event.Event<Internal.Consumer<Internal.AttachPlayerDataEvent>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(p: Internal.PlayerDataJS<any,any>);
    }
    type AttachPlayerDataEvent_ = AttachPlayerDataEvent;
    class SuggestionContext <S> extends Document.Object {
        readonly parent: Internal.CommandNode<S>;
        readonly startPos: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CommandNode<S>, arg1: number);
    }
    type SuggestionContext_<S> = SuggestionContext<S>;
    interface Object2IntMap <K> extends Internal.Object2IntFunction<K>, Internal.Map<K, number> {
        object2IntEntrySet(): Internal.ObjectSet<Internal.Object2IntMap$Entry<K>>;
        computeIntIfAbsentPartial(arg0: K, arg1: Internal.Object2IntFunction_<K>): number;
        getOrDefault(arg0: any, arg1: number): number;
        getOrDefault(arg0: any, arg1: number): number;
        getOrDefault(arg0: any, arg1: any): any;
        entrySet(): Internal.Set<any>;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<K, number>>;
        containsKey(arg0: any): boolean;
        values(): Internal.IntCollection;
        values(): Internal.Collection<any>;
        replace(arg0: K, arg1: number): number;
        replace(arg0: K, arg1: number, arg2: number): boolean;
        replace(arg0: K, arg1: number, arg2: number): boolean;
        replace(arg0: K, arg1: number): number;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        clear(): void;
        containsValue(arg0: number): boolean;
        containsValue(arg0: any): boolean;
        put(arg0: any, arg1: any): any;
        put(arg0: K, arg1: number): number;
        remove(arg0: any, arg1: any): boolean;
        remove(arg0: any): number;
        remove(arg0: any): any;
        remove(arg0: any, arg1: number): boolean;
        mergeInt(arg0: K, arg1: number, arg2: Internal.BiFunction_<number, number, number>): number;
        defaultReturnValue(arg0: number): void;
        defaultReturnValue(): number;
        computeIntIfAbsent(arg0: K, arg1: Internal.ToIntFunction_<K>): number;
        size(): number;
        computeIntIfPresent(arg0: K, arg1: Internal.BiFunction_<K, number, number>): number;
        merge(arg0: K, arg1: number, arg2: Internal.BiFunction_<number, number, number>): number;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        get(arg0: any): any;
        get(arg0: any): number;
        computeInt(arg0: K, arg1: Internal.BiFunction_<K, number, number>): number;
        keySet(): Internal.Set<any>;
        keySet(): Internal.ObjectSet<K>;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: K, arg1: number): number;
        putIfAbsent(arg0: K, arg1: number): number;
    }
    type Object2IntMap_<K> = Object2IntMap<K>;
    class SmithingTableContainer extends Internal.AbstractRepairContainer {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IWorldPosCallable);
    }
    type SmithingTableContainer_ = SmithingTableContainer;
    class SKeepAlivePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149134_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type SKeepAlivePacket_ = SKeepAlivePacket;
    abstract class PerkConverter extends Internal.ForgeRegistryEntry<Internal.PerkConverter> {
        gainExtraModifiers(arg0: Internal.PlayerEntity, arg1: Internal.PlayerProgress, arg2: Internal.PerkAttributeModifier_, arg3: Internal.ModifierSource): Internal.Collection<Internal.PerkAttributeModifier>;
        convertModifier(arg0: Internal.PlayerEntity, arg1: Internal.PlayerProgress, arg2: Internal.PerkAttributeModifier_, arg3: Internal.ModifierSource): Internal.PerkAttributeModifier;
        asRangedConverter(arg0: Internal.Point2D$Float, arg1: number): Internal.PerkConverter$Radius;
        setRegistryName(arg0: ResourceLocation_): any;
        onRemove(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): void;
        onApply(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): void;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type PerkConverter_ = Registry.astralsorcery.perk_attribute_converters | PerkConverter;
    class AlloyRecipeJS extends Internal.IERecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AlloyRecipeJS_ = AlloyRecipeJS;
    class Ingredient extends Document.Object implements Internal.Predicate<Internal.ItemStack>, Internal.IngredientKJS {
        or(arg0: Internal.Predicate_<Internal.ItemStack_>): Internal.Predicate<Internal.ItemStack>;
        static func_199802_a(arg0: Internal.JsonElement): Internal.Ingredient;
        func_199564_a(arg0: Internal.PacketBuffer): void;
        test(arg0: Internal.ItemStack): boolean;
        test(arg0: any): boolean;
        static func_199803_a(arg0: Internal.JsonObject): Internal.Ingredient$IItemList;
        func_193365_a(): Internal.ItemStack[];
        isVanilla(): boolean;
        static func_193369_a(...arg0: Internal.ItemStack[]): Internal.Ingredient;
        static func_199804_a(...arg0: Internal.IItemProvider[]): Internal.Ingredient;
        static func_199805_a(arg0: Internal.ITag<Internal.Item>): Internal.Ingredient;
        func_200304_c(): Internal.JsonElement;
        asKJS(): any;
        func_194139_b(): Internal.IntList;
        static func_209357_a(arg0: Internal.Stream<Internal.Ingredient$IItemList>): Internal.Ingredient;
        func_203189_d(): boolean;
        getSerializer(): Internal.IIngredientSerializer<Internal.Ingredient>;
        static invalidateAll(): void;
        and(arg0: Internal.Predicate_<Internal.ItemStack_>): Internal.Predicate<Internal.ItemStack>;
        negate(): Internal.Predicate<Internal.ItemStack>;
        static func_234819_a_(arg0: Internal.Stream<Internal.ItemStack>): Internal.Ingredient;
        static merge(arg0: Internal.Collection<Internal.Ingredient>): Internal.Ingredient;
        isSimple(): boolean;
        static func_199566_b(arg0: Internal.PacketBuffer): Internal.Ingredient;
        getItemsKJS(): Internal.ItemStack[];
        static readonly field_193370_a: Internal.Ingredient;
        readonly field_199807_b: Internal.Ingredient$IItemList[];
        get serializer(): Internal.IIngredientSerializer<Internal.Ingredient>;
        get itemsKJS(): Internal.ItemStack[];
        get simple(): boolean;
        get vanilla(): boolean;
    }
    type Ingredient_ = Ingredient;
    class BlockPart extends Document.Object {
        func_178236_a(arg0: Internal.Direction_): number[];
        readonly field_178239_b: Internal.Vector3f;
        readonly field_178237_d: Internal.BlockPartRotation;
        readonly field_178238_e: boolean;
        readonly field_178240_c: Internal.Map<Internal.Direction, Internal.BlockPartFace>;
        readonly field_178241_a: Internal.Vector3f;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Vector3f, arg1: Internal.Vector3f, arg2: Internal.Map<Internal.Direction, Internal.BlockPartFace>, arg3: Internal.BlockPartRotation, arg4: boolean);
    }
    type BlockPart_ = BlockPart;
    class Hashtable <K, V> extends Internal.Dictionary<K, V> implements Internal.Map<K, V>, Internal.Cloneable, Internal.Serializable {
        getOrDefault(arg0: any, arg1: V): V;
        entrySet(): Internal.Set<Internal.Map$Entry<K, V>>;
        keys(): Internal.Enumeration<K>;
        containsKey(arg0: any): boolean;
        forEach(arg0: Internal.BiConsumer_<K, V>): void;
        computeIfAbsent(arg0: K, arg1: Internal.Function_<K, V>): V;
        values(): Internal.Collection<V>;
        replace(arg0: K, arg1: V, arg2: V): boolean;
        replace(arg0: K, arg1: V): V;
        clear(): void;
        replaceAll(arg0: Internal.BiFunction_<K, V, V>): void;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): V;
        remove(arg0: any, arg1: any): boolean;
        remove(arg0: any): V;
        compute(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        contains(arg0: any): boolean;
        computeIfPresent(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        putAll(arg0: Internal.Map_<K, V>): void;
        merge(arg0: K, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        elements(): Internal.Enumeration<V>;
        get(arg0: any): V;
        clone(): any;
        keySet(): Internal.Set<K>;
        putIfAbsent(arg0: K, arg1: V): V;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<K, V>);
        constructor();
        constructor(arg0: number);
        constructor(arg0: number, arg1: number);
    }
    type Hashtable_<K, V> = Hashtable<K, V>;
    class Configs extends Document.Object {
        static register(): void;
        static readonly BATTERY: Internal.BatteryConfig;
        static readonly ALL: Internal.Set<Internal.IConfig>;
        static readonly ENERGY_HOPPER: Internal.EnergyHopperConfig;
        static readonly MAGMATOR: Internal.MagmatorConfig;
        static readonly ENERGY_DISCHARGER: Internal.EnergyDischargerConfig;
        static readonly SOLAR_PANEL: Internal.SolarConfig;
        static readonly GENERAL: Internal.GeneralConfig;
        static readonly ENERGIZING: Internal.EnergizingConfig;
        static readonly THERMO: Internal.ThermoConfig;
        static readonly ENDER_GATE: Internal.EnderGateConfig;
        static readonly ENERGY_CELL: Internal.EnergyCellConfig;
        static readonly ENDER_CELL: Internal.EnderCellConfig;
        static readonly CABLE: Internal.CableConfig;
        static readonly REACTOR: Internal.ReactorConfig;
        static readonly PLAYER_TRANSMITTER: Internal.PlayerTransmitterConfig;
        static readonly FURNATOR: Internal.FurnatorConfig;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Configs_ = Configs;
    interface HorseEntityAccessor {
    }
    type HorseEntityAccessor_ = HorseEntityAccessor;
    class NibbleArray extends Document.Object {
        func_76581_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_76582_a(arg0: number, arg1: number, arg2: number): number;
        func_215654_b(): Internal.NibbleArray;
        func_215655_c(): boolean;
        func_177481_a(): number[];
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number[]);
        constructor();
    }
    type NibbleArray_ = NibbleArray;
    class ToolAttackContext extends Document.Object {
        getTarget(): Internal.Entity;
        getLivingTarget(): Internal.LivingEntity;
        getPlayerAttacker(): Internal.PlayerEntity;
        getHand(): Hand;
        getSlotType(): EquipmentSlot;
        isExtraAttack(): boolean;
        isCritical(): boolean;
        isFullyCharged(): boolean;
        getCooldown(): number;
        getAttacker(): Internal.LivingEntity;
        get slotType(): EquipmentSlot;
        get critical(): boolean;
        get playerAttacker(): Internal.PlayerEntity;
        get extraAttack(): boolean;
        get cooldown(): number;
        get attacker(): Internal.LivingEntity;
        get fullyCharged(): boolean;
        get livingTarget(): Internal.LivingEntity;
        get target(): Internal.Entity;
        get hand(): Hand;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LivingEntity, arg1: Internal.PlayerEntity, arg2: Hand, arg3: EquipmentSlot, arg4: Internal.Entity, arg5: Internal.LivingEntity, arg6: boolean, arg7: number, arg8: boolean);
        constructor(arg0: Internal.LivingEntity, arg1: Internal.PlayerEntity, arg2: Hand, arg3: Internal.Entity, arg4: Internal.LivingEntity, arg5: boolean, arg6: number, arg7: boolean);
    }
    type ToolAttackContext_ = ToolAttackContext;
    class MaterialJS extends Document.Object {
        getMinecraftMaterial(): Internal.Material;
        getId(): string;
        getSound(): Internal.SoundType;
        get minecraftMaterial(): Internal.Material;
        get sound(): Internal.SoundType;
        get id(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(i: string, m: Internal.Material, s: Internal.SoundType);
    }
    type MaterialJS_ = "sponge" | "explosive" | "wool" | "ice" | "air" | "vegetable" | "clay" | "slime" | "rock" | "lava" | "leaves" | "web" | "grass" | "coral" | "cake" | "honey" | "plants" | "wood" | "dragon_egg" | "portal" | "organic" | "gourd" | "glass" | "metal" | "dirt" | "water" | "lantern" | "stone" | "sand" | "snow" | "plant" | "earth" | "iron" | "tnt" | "berry_bush" | MaterialJS;
    class GlyphMetrics extends Document.Object {
        isLigature(): boolean;
        getRSB(): number;
        isStandard(): boolean;
        getType(): number;
        isCombining(): boolean;
        getAdvance(): number;
        getBounds2D(): Internal.Rectangle2D;
        isWhitespace(): boolean;
        getAdvanceY(): number;
        getLSB(): number;
        getAdvanceX(): number;
        isComponent(): boolean;
        static readonly COMBINING: 2;
        static readonly WHITESPACE: 4;
        static readonly LIGATURE: 1;
        static readonly COMPONENT: 3;
        static readonly STANDARD: 0;
        get rSB(): number;
        get standard(): boolean;
        get advanceY(): number;
        get advanceX(): number;
        get component(): boolean;
        get ligature(): boolean;
        get combining(): boolean;
        get lSB(): number;
        get type(): number;
        get bounds2D(): Internal.Rectangle2D;
        get whitespace(): boolean;
        get advance(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.Rectangle2D, arg2: number);
        constructor(arg0: boolean, arg1: number, arg2: number, arg3: Internal.Rectangle2D, arg4: number);
    }
    type GlyphMetrics_ = GlyphMetrics;
    interface SingleJigsawAccess {
    }
    type SingleJigsawAccess_ = SingleJigsawAccess;
    interface ChangeSubscriber <T> {
        isValid(arg0: Internal.World): boolean;
        getCurrentChangeSet(): Internal.BlockChangeSet;
        getObserver(): T;
    }
    type ChangeSubscriber_<T> = ChangeSubscriber<T>;
    class Tutorial extends Document.Object {
        func_244698_a(arg0: Internal.TutorialToast, arg1: number): void;
        func_193292_a(arg0: Internal.TutorialSteps_): void;
        static func_193291_a(arg0: string): Internal.ITextComponent;
        func_193294_a(arg0: Internal.ClientWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: number): void;
        func_193293_a(arg0: Internal.MovementInput): void;
        func_194072_f(): Internal.GameType;
        func_195872_a(arg0: number, arg1: number): void;
        func_193295_e(): Internal.Minecraft;
        func_193303_d(): void;
        func_193296_a(): void;
        func_193302_c(): void;
        func_193297_a(arg0: Internal.ClientWorld, arg1: Internal.RayTraceResult): void;
        func_193300_b(): void;
        func_193301_a(arg0: Internal.ItemStack): void;
        func_244697_a(arg0: Internal.TutorialToast): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type Tutorial_ = Tutorial;
    class ItemObject <I> extends Document.Object implements java_.util.function_.Supplier<I>, Internal.IItemProvider {
        get(): I;
        get(): any;
        getRegistryName(): ResourceLocation;
        func_199767_j(): Internal.Item;
        getOrNull(): I;
        get registryName(): ResourceLocation;
        get orNull(): I;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: java_.util.function_.Supplier<I>, arg1: ResourceLocation);
        constructor(arg0: Internal.RegistryObject<I>);
        constructor(arg0: Internal.ForgeRegistryEntry<I>);
    }
    type ItemObject_<I> = ItemObject<I>;
    interface IWorldWriter {
        func_225521_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity): boolean;
        func_180501_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: number): boolean;
        func_217376_c(arg0: Internal.Entity): boolean;
        func_217377_a(arg0: BlockPos, arg1: boolean): boolean;
        func_175655_b(arg0: BlockPos, arg1: boolean): boolean;
        func_241212_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity, arg3: number): boolean;
        func_241211_a_(arg0: BlockPos, arg1: Internal.BlockState, arg2: number, arg3: number): boolean;
    }
    type IWorldWriter_ = IWorldWriter;
    interface AttributedCharacterIterator extends Internal.CharacterIterator {
        getAttribute(arg0: Internal.AttributedCharacterIterator$Attribute): any;
        getAttributes(): Internal.Map<Internal.AttributedCharacterIterator$Attribute, any>;
        getRunLimit(arg0: Internal.AttributedCharacterIterator$Attribute): number;
        getRunLimit(): number;
        getRunLimit(arg0: Internal.Set<Internal.AttributedCharacterIterator$Attribute>): number;
        getRunStart(): number;
        getRunStart(arg0: Internal.Set<Internal.AttributedCharacterIterator$Attribute>): number;
        getRunStart(arg0: Internal.AttributedCharacterIterator$Attribute): number;
        getAllAttributeKeys(): Internal.Set<Internal.AttributedCharacterIterator$Attribute>;
    }
    type AttributedCharacterIterator_ = AttributedCharacterIterator;
    interface IScreenRenderable {
        draw(arg0: Internal.MatrixStack, arg1: Internal.AbstractGui, arg2: number, arg3: number): void;
        draw(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        (arg0: Internal.MatrixStack, arg1: Internal.AbstractGui, arg2: number, arg3: number): void;
    }
    type IScreenRenderable_ = ((arg0: Internal.MatrixStack, arg1: Internal.AbstractGui, arg2: number, arg3: number)=>void) | IScreenRenderable;
    interface DoubleSupplier {
        getAsDouble(): number;
        (): number;
    }
    type DoubleSupplier_ = (()=>number) | DoubleSupplier;
    interface DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        (arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: number, arg4: number): void;
    }
    type DebugRenderer$IDebugRenderer_ = ((arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: number, arg4: number)=>void) | DebugRenderer$IDebugRenderer;
    class Agent extends Document.Object {
        getVersion(): number;
        getName(): string;
        static readonly SCROLLS: Internal.Agent;
        static readonly MINECRAFT: Internal.Agent;
        get name(): string;
        get version(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: number);
    }
    type Agent_ = Agent;
    interface Ingredient$IItemList {
        func_199799_a(): Internal.Collection<Internal.ItemStack>;
        func_200303_b(): Internal.JsonObject;
    }
    type Ingredient$IItemList_ = Ingredient$IItemList;
    class BatchPerkContext$TextureObjectGroup extends Document.Object implements Internal.Comparable<Internal.BatchPerkContext$TextureObjectGroup> {
        getResource(): Internal.AbstractRenderableTexture;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.BatchPerkContext$TextureObjectGroup): number;
        get resource(): Internal.AbstractRenderableTexture;
    }
    type BatchPerkContext$TextureObjectGroup_ = BatchPerkContext$TextureObjectGroup;
    class PlayerAbilities extends Document.Object {
        func_82877_b(arg0: number): void;
        func_75091_a(arg0: Internal.CompoundNBT_): void;
        func_195931_a(arg0: number): void;
        func_75093_a(): number;
        func_75094_b(): number;
        func_75095_b(arg0: Internal.CompoundNBT_): void;
        field_75101_c: boolean;
        field_75102_a: boolean;
        field_75100_b: boolean;
        field_75098_d: boolean;
        field_75099_e: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PlayerAbilities_ = PlayerAbilities;
    class TextureAtlasSprite$Info extends Document.Object {
        func_229252_c_(): number;
        func_229248_a_(): ResourceLocation;
        func_229250_b_(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: number, arg2: number, arg3: any);
    }
    type TextureAtlasSprite$Info_ = TextureAtlasSprite$Info;
    interface ChannelHandlerContext extends Internal.AttributeMap, Internal.ChannelInboundInvoker, Internal.ChannelOutboundInvoker {
        handler(): Internal.ChannelHandler;
        fireChannelInactive(): Internal.ChannelHandlerContext;
        read(): Internal.ChannelHandlerContext;
        fireChannelReadComplete(): Internal.ChannelHandlerContext;
        fireChannelWritabilityChanged(): Internal.ChannelHandlerContext;
        channel(): Internal.Channel;
        hasAttr<T_>(arg0: Internal.AttributeKey<T_>): boolean;
        fireExceptionCaught(arg0: Internal.Throwable): Internal.ChannelHandlerContext;
        fireChannelActive(): Internal.ChannelHandlerContext;
        fireChannelRegistered(): Internal.ChannelHandlerContext;
        pipeline(): Internal.ChannelPipeline;
        fireChannelRead(arg0: any): Internal.ChannelHandlerContext;
        isRemoved(): boolean;
        flush(): Internal.ChannelHandlerContext;
        executor(): Internal.EventExecutor;
        name(): string;
        fireUserEventTriggered(arg0: any): Internal.ChannelHandlerContext;
        fireChannelUnregistered(): Internal.ChannelHandlerContext;
        alloc(): Internal.ByteBufAllocator;
        attr<T_>(arg0: Internal.AttributeKey<T_>): Internal.Attribute<T_>;
    }
    type ChannelHandlerContext_ = ChannelHandlerContext;
    class MaterialNBT extends Document.Object {
        getMaterials(): Internal.List<Internal.IMaterial>;
        getMaterial(arg0: number): Internal.IMaterial;
        static readFromNBT(arg0: Internal.INBT): Internal.MaterialNBT;
        serializeToNBT(): Internal.ListNBT;
        replaceMaterial(arg0: number, arg1: Internal.IMaterial): Internal.MaterialNBT;
        get materials(): Internal.List<Internal.IMaterial>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.List<Internal.IMaterial>);
    }
    type MaterialNBT_ = MaterialNBT;
    class CommandSyntaxException extends Internal.Exception {
        getCursor(): number;
        getType(): Internal.CommandExceptionType;
        getRawMessage(): Internal.Message;
        getInput(): string;
        getContext(): string;
        static BUILT_IN_EXCEPTIONS: Internal.BuiltInExceptionProvider;
        static ENABLE_COMMAND_STACK_TRACES: false;
        static readonly CONTEXT_AMOUNT: 10;
        get cursor(): number;
        get input(): string;
        get context(): string;
        get type(): Internal.CommandExceptionType;
        get rawMessage(): Internal.Message;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CommandExceptionType, arg1: Internal.Message);
        constructor(arg0: Internal.CommandExceptionType, arg1: Internal.Message, arg2: string, arg3: number);
    }
    type CommandSyntaxException_ = CommandSyntaxException;
    class FoodValues extends Document.Object {
        getSaturationIncrement(): number;
        readonly saturationModifier: number;
        readonly hunger: number;
        get saturationIncrement(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
    }
    type FoodValues_ = FoodValues;
    class InterModComms$IMCMessage extends Document.Object {
        getModId(): string;
        getSenderModId(): string;
        getMethod(): string;
        getMessageSupplier<T_>(): java_.util.function_.Supplier<T_>;
        get messageSupplier(): java_.util.function_.Supplier<T_>;
        get method(): string;
        get senderModId(): string;
        get modId(): string;
    }
    type InterModComms$IMCMessage_ = InterModComms$IMCMessage;
    class IFocus$Mode extends Internal.Enum<Internal.IFocus$Mode> {
        static valueOf(arg0: string): Internal.IFocus$Mode;
        static values(): Internal.IFocus$Mode[];
        static readonly INPUT: Internal.IFocus$Mode;
        static readonly OUTPUT: Internal.IFocus$Mode;
    }
    type IFocus$Mode_ = "input" | "output" | IFocus$Mode;
    interface TypeAdapterFactory {
        create<T>(arg0: Internal.Gson, arg1: com.google.gson.reflect.TypeToken<T>): Internal.TypeAdapter<T>;
        (arg0: Internal.Gson, arg1: com.google.gson.reflect.TypeToken<T>): Internal.TypeAdapter<T>;
    }
    type TypeAdapterFactory_ = ((arg0: Internal.Gson, arg1: com.google.gson.reflect.TypeToken<T>)=>Internal.TypeAdapter<T>) | TypeAdapterFactory;
    class ChunkCameraContext extends Document.Object {
        getChunkModelOffset(chunkBlockPos: number, cameraBlockPos: number, cameraPos: number): number;
        readonly blockOriginY: number;
        readonly originZ: number;
        readonly blockOriginZ: number;
        readonly blockOriginX: number;
        readonly originX: number;
        readonly originY: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(x: number, y: number, z: number);
    }
    type ChunkCameraContext_ = ChunkCameraContext;
    interface StateContainerMixin <O> {
        setOwner(arg0: O): void;
        (arg0: O): void;
    }
    type StateContainerMixin_<O> = ((arg0: O)=>void) | StateContainerMixin<O>;
    class NetworkPlayerInfo extends Document.Object {
        func_178853_c(): number;
        func_178861_h(): ResourceLocation;
        func_178859_a(arg0: Internal.ITextComponent_): void;
        func_178857_c(arg0: number): void;
        func_178836_b(arg0: number): void;
        func_178850_i(): Internal.ScorePlayerTeam;
        func_178846_a(arg0: number): void;
        func_178851_f(): string;
        func_178844_b(arg0: number): void;
        func_178843_c(arg0: number): void;
        func_178845_a(): Internal.GameProfile;
        func_178856_e(): boolean;
        func_178848_b(): Internal.GameType;
        func_178860_m(): number;
        func_178837_g(): ResourceLocation;
        func_178854_k(): Internal.ITextComponent;
        func_178847_n(): number;
        func_178855_p(): number;
        func_178835_l(): number;
        func_178858_o(): number;
        func_187106_i(): ResourceLocation;
        readonly field_187107_a: Internal.Map<Internal.MinecraftProfileTexture$Type, ResourceLocation>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SPlayerListItemPacket$AddPlayerData);
    }
    type NetworkPlayerInfo_ = NetworkPlayerInfo;
    abstract class DateFormat extends Internal.Format {
        getTimeZone(): Internal.TimeZone;
        isLenient(): boolean;
        format(arg0: Internal.Date): string;
        format(arg0: Internal.Date, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        parse(arg0: string): Internal.Date;
        parse(arg0: string, arg1: Internal.ParsePosition): Internal.Date;
        static getTimeInstance(arg0: number, arg1: Internal.Locale): Internal.DateFormat;
        static getTimeInstance(arg0: number): Internal.DateFormat;
        static getTimeInstance(): Internal.DateFormat;
        setNumberFormat(arg0: Internal.NumberFormat): void;
        getCalendar(): Internal.Calendar;
        setLenient(arg0: boolean): void;
        static getDateInstance(arg0: number): Internal.DateFormat;
        static getDateInstance(arg0: number, arg1: Internal.Locale): Internal.DateFormat;
        static getDateInstance(): Internal.DateFormat;
        getNumberFormat(): Internal.NumberFormat;
        setCalendar(arg0: Internal.Calendar): void;
        static getDateTimeInstance(arg0: number, arg1: number): Internal.DateFormat;
        static getDateTimeInstance(arg0: number, arg1: number, arg2: Internal.Locale): Internal.DateFormat;
        static getDateTimeInstance(): Internal.DateFormat;
        setTimeZone(arg0: Internal.TimeZone): void;
        static getInstance(): Internal.DateFormat;
        static getAvailableLocales(): Internal.Locale[];
        static readonly DAY_OF_YEAR_FIELD: 10;
        static readonly DATE_FIELD: 3;
        static readonly MILLISECOND_FIELD: 8;
        static readonly MEDIUM: 2;
        static readonly YEAR_FIELD: 1;
        static readonly DAY_OF_WEEK_IN_MONTH_FIELD: 11;
        static readonly MINUTE_FIELD: 6;
        static readonly FULL: 0;
        static readonly ERA_FIELD: 0;
        static readonly AM_PM_FIELD: 14;
        static readonly SHORT: 3;
        static readonly HOUR_OF_DAY1_FIELD: 4;
        static readonly MONTH_FIELD: 2;
        static readonly DAY_OF_WEEK_FIELD: 9;
        static readonly WEEK_OF_YEAR_FIELD: 12;
        static readonly HOUR1_FIELD: 15;
        static readonly HOUR_OF_DAY0_FIELD: 5;
        static readonly WEEK_OF_MONTH_FIELD: 13;
        static readonly TIMEZONE_FIELD: 17;
        static readonly HOUR0_FIELD: 16;
        static readonly DEFAULT: 2;
        static readonly SECOND_FIELD: 7;
        static readonly LONG: 1;
        get timeInstance(): Internal.DateFormat;
        get calendar(): Internal.Calendar;
        get instance(): Internal.DateFormat;
        get numberFormat(): Internal.NumberFormat;
        get dateInstance(): Internal.DateFormat;
        get timeZone(): Internal.TimeZone;
        get dateTimeInstance(): Internal.DateFormat;
        get lenient(): boolean;
        get availableLocales(): Internal.Locale[];
        set calendar(arg0: Internal.Calendar);
        set numberFormat(arg0: Internal.NumberFormat);
        set timeZone(arg0: Internal.TimeZone);
        set lenient(arg0: boolean);
    }
    type DateFormat_ = DateFormat;
    class RequirementIOMode extends Internal.Enum<Internal.RequirementIOMode> {
        getTranslationKey(): string;
        static valueOf(arg0: string): Internal.RequirementIOMode;
        static values(): Internal.RequirementIOMode[];
        static value(arg0: string): Internal.RequirementIOMode;
        static readonly INPUT: Internal.RequirementIOMode;
        static readonly OUTPUT: Internal.RequirementIOMode;
        get translationKey(): string;
    }
    type RequirementIOMode_ = "input" | "output" | RequirementIOMode;
    class PerkAttributeType extends Internal.ForgeRegistryEntry<Internal.PerkAttributeType> implements Internal.ReadWriteLockable {
        static makeDefault(arg0: ResourceLocation_, arg1: boolean): Internal.PerkAttributeType;
        read(arg0: Internal.Runnable_): void;
        read<T_>(arg0: java_.util.function_.Supplier_<T_>): T_;
        getLock(): Internal.ReadWriteLock;
        getReader(): Internal.PerkAttributeReader;
        isMultiplicative(): boolean;
        setRegistryName(arg0: ResourceLocation_): any;
        static clearCache(arg0: Internal.LogicalSide_): void;
        hasTypeApplied(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): boolean;
        getUnlocalizedName(): string;
        onModeApply(arg0: Internal.PlayerEntity, arg1: Internal.ModifierType_, arg2: Internal.LogicalSide_): void;
        onModeRemove(arg0: Internal.PlayerEntity, arg1: Internal.ModifierType_, arg2: Internal.LogicalSide_, arg3: boolean): void;
        getTranslatedName(): Internal.ITextComponent;
        lock<T_>(arg0: java_.util.function_.Supplier_<Internal.Lock_>, arg1: java_.util.function_.Supplier_<T_>): T_;
        onRemove(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_, arg2: boolean, arg3: Internal.ModifierSource): void;
        write(arg0: Internal.Runnable_): void;
        write<T_>(arg0: java_.util.function_.Supplier_<T_>): T_;
        createModifier(arg0: number, arg1: Internal.ModifierType_): Internal.PerkAttributeModifier;
        onApply(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_, arg2: Internal.ModifierSource): void;
        get unlocalizedName(): string;
        get reader(): Internal.PerkAttributeReader;
        get multiplicative(): boolean;
        get translatedName(): Internal.ITextComponent;
        set registryName(arg0: ResourceLocation_);
    }
    type PerkAttributeType_ = Registry.astralsorcery.perk_attribute_types | PerkAttributeType;
    interface IFlyingAnimal {
    }
    type IFlyingAnimal_ = IFlyingAnimal;
    interface MapCodec$ResultFunction <A> {
        apply<T>(arg0: Internal.DynamicOps<T>, arg1: Internal.MapLike<T>, arg2: Internal.DataResult<A>): Internal.DataResult<A>;
        coApply<T>(arg0: Internal.DynamicOps<T>, arg1: A, arg2: Internal.RecordBuilder<T>): Internal.RecordBuilder<T>;
    }
    type MapCodec$ResultFunction_<A> = MapCodec$ResultFunction<A>;
    interface TileEntityAccess {
        getCachedBlockStateDirectly(): Internal.BlockState;
        setBlockState(arg0: Internal.BlockState): void;
    }
    type TileEntityAccess_ = TileEntityAccess;
    abstract class VoxelShapePart extends Document.Object implements Internal.VSPartAccess {
        func_199624_b(arg0: Internal.Direction$Axis_): number;
        func_199625_a(arg0: number, arg1: number, arg2: number, arg3: boolean, arg4: boolean): void;
        func_199623_a(arg0: Internal.Direction$Axis_): number;
        getYSize(): number;
        func_197836_b(arg0: Internal.Direction$Axis_, arg1: number, arg2: number): number;
        func_197823_b(): number;
        func_197821_d(): number;
        func_197824_a(arg0: Internal.AxisRotation_, arg1: number, arg2: number, arg3: number): boolean;
        func_197835_b(arg0: number, arg1: number, arg2: number): boolean;
        func_197828_a(arg0: Internal.VoxelShapePart$ILineConsumer_, arg1: boolean): void;
        func_197818_c(arg0: number, arg1: number, arg2: number): boolean;
        func_197819_a(arg0: Internal.Direction$Axis_): number;
        func_197829_b(arg0: Internal.AxisRotation_, arg1: number, arg2: number, arg3: number): boolean;
        getZSize(): number;
        func_197830_a(): boolean;
        getXSize(): number;
        func_211540_a(arg0: Internal.VoxelShapePart$IFaceConsumer_): void;
        func_197820_c(): number;
        func_197831_b(arg0: Internal.VoxelShapePart$ILineConsumer_, arg1: boolean): void;
        get zSize(): number;
        get ySize(): number;
        get xSize(): number;
    }
    type VoxelShapePart_ = VoxelShapePart;
    class ThreeLayerFeature extends Internal.AbstractFeatureSizeType {
        static readonly field_236716_c_: Internal.Codec<Internal.ThreeLayerFeature>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.OptionalInt);
    }
    type ThreeLayerFeature_ = ThreeLayerFeature;
    class SensorType <U> extends Internal.ForgeRegistryEntry<Internal.SensorType<any>> {
        setRegistryName(arg0: ResourceLocation_): any;
        func_220995_a(): U;
        static readonly field_221002_f: Internal.SensorType<Internal.HurtBySensor>;
        static readonly field_242317_j: Internal.SensorType<Internal.GolemLastSeenSensor>;
        static readonly field_221003_g: Internal.SensorType<Internal.VillagerHostilesSensor>;
        static readonly field_242318_l: Internal.SensorType<Internal.PiglinBruteSpecificSensor>;
        static readonly field_221001_e: Internal.SensorType<Internal.NearestBedSensor>;
        static readonly field_234129_b_: Internal.SensorType<Internal.WantedItemsSensor>;
        static readonly field_220998_b: Internal.SensorType<Internal.NearestLivingEntitiesSensor>;
        static readonly field_234130_l_: Internal.SensorType<Internal.PiglinMobsSensor>;
        static readonly field_220999_c: Internal.SensorType<Internal.NearestPlayersSensor>;
        static readonly field_234132_n_: Internal.SensorType<Internal.MateSensor>;
        static readonly field_234131_m_: Internal.SensorType<Internal.HoglinMobsSensor>;
        static readonly field_220997_a: Internal.SensorType<Internal.DummySensor>;
        static readonly field_221004_h: Internal.SensorType<Internal.VillagerBabiesSensor>;
        static readonly field_221005_i: Internal.SensorType<Internal.SecondaryPositionSensor>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: java_.util.function_.Supplier<U>);
    }
    type SensorType_<U> = Registry.minecraft.sensor_type | SensorType<U>;
    interface ITagCollectionSupplier extends Internal.IForgeTagCollectionSupplier {
        func_242210_a(arg0: Internal.PacketBuffer): void;
        func_241838_d(): Internal.ITagCollection<Internal.EntityType<any>>;
        func_241837_c(): Internal.ITagCollection<Internal.Fluid>;
        func_241836_b(): Internal.ITagCollection<Internal.Item>;
        func_241835_a(): Internal.ITagCollection<Internal.Block>;
        func_242212_e(): void;
    }
    type ITagCollectionSupplier_ = ITagCollectionSupplier;
    class ClientWorldJS extends Internal.WorldJS {
        getMinecraftPlayer(): Internal.ClientPlayerEntity;
        getPlayerData(player: Internal.PlayerEntity): Internal.ClientPlayerDataJS;
        static getInstance(): Internal.ClientWorldJS;
        getMinecraft(): Internal.Minecraft;
        static setInstance(instance: Internal.ClientWorldJS): void;
        readonly clientPlayerData: Internal.ClientPlayerDataJS;
        get minecraft(): Internal.Minecraft;
        get instance(): Internal.ClientWorldJS;
        get minecraftPlayer(): Internal.ClientPlayerEntity;
        set instance(instance: Internal.ClientWorldJS);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(mc: Internal.Minecraft, e: Internal.ClientPlayerEntity);
    }
    type ClientWorldJS_ = ClientWorldJS;
    class BlockModel extends Document.Object implements Internal.IUnbakedModel, Internal.ICachedMaterialsModel {
        getParentLocation(): ResourceLocation;
        func_228816_c_(arg0: string): Internal.RenderMaterial;
        func_178300_b(arg0: string): boolean;
        func_225614_a_(arg0: Internal.Function_<ResourceLocation_, Internal.IUnbakedModel_>, arg1: Internal.Set<Internal.Pair<string, string>>): Internal.Collection<Internal.RenderMaterial>;
        func_225613_a_(arg0: Internal.ModelBakery, arg1: Internal.Function_<Internal.RenderMaterial_, Internal.TextureAtlasSprite_>, arg2: Internal.IModelTransform, arg3: ResourceLocation_): Internal.IBakedModel;
        func_187966_f(): Internal.List<Internal.ItemOverride>;
        getOverrides(arg0: Internal.ModelBakery, arg1: Internal.BlockModel, arg2: Internal.Function_<Internal.RenderMaterial_, Internal.TextureAtlasSprite_>): Internal.ItemOverrideList;
        static func_178294_a(arg0: string): Internal.BlockModel;
        func_187965_e(): Internal.Collection<ResourceLocation>;
        func_178298_a(): Internal.List<Internal.BlockPart>;
        bakeVanilla(arg0: Internal.ModelBakery, arg1: Internal.BlockModel, arg2: Internal.Function_<Internal.RenderMaterial_, Internal.TextureAtlasSprite_>, arg3: Internal.IModelTransform, arg4: ResourceLocation_, arg5: boolean): Internal.IBakedModel;
        func_178309_b(): boolean;
        func_181682_g(): Internal.ItemCameraTransforms;
        func_230176_c_(): Internal.BlockModel$GuiLight;
        clearMaterialsCache(): void;
        handler$bbl000$getMaterialsReturnInjected(arg0: Internal.Function_<any,any>, arg1: Internal.Set<any>, arg2: Internal.CallbackInfoReturnable<any>): void;
        static func_228812_a_(arg0: Internal.BlockPart, arg1: Internal.BlockPartFace, arg2: Internal.TextureAtlasSprite, arg3: Internal.Direction_, arg4: Internal.IModelTransform, arg5: ResourceLocation_): Internal.BakedQuad;
        handler$bbl000$getMaterialsHeadInjected(arg0: Internal.Function_<any,any>, arg1: Internal.Set<any>, arg2: Internal.CallbackInfoReturnable<any>): void;
        func_228813_a_(arg0: Internal.ModelBakery, arg1: Internal.BlockModel, arg2: Internal.Function_<Internal.RenderMaterial_, Internal.TextureAtlasSprite_>, arg3: Internal.IModelTransform, arg4: ResourceLocation_, arg5: boolean): Internal.IBakedModel;
        getClip(arg0: string): Internal.Optional<Internal.IClip>;
        static makeBakedQuad(arg0: Internal.BlockPart, arg1: Internal.BlockPartFace, arg2: Internal.TextureAtlasSprite, arg3: Internal.Direction_, arg4: Internal.IModelTransform, arg5: ResourceLocation_): Internal.BakedQuad;
        func_178310_f(): Internal.BlockModel;
        static func_178307_a(arg0: Internal.Reader): Internal.BlockModel;
        static readonly field_217647_g: Internal.FaceBakery;
        field_178317_b: string;
        field_178315_d: Internal.BlockModel;
        static readonly field_178319_a: Internal.Gson;
        readonly field_178322_i: boolean;
        field_178318_c: Internal.Map<string, Internal.Either<Internal.RenderMaterial, string>>;
        field_178316_e: ResourceLocation;
        readonly customData: Internal.BlockModelConfiguration;
        get parentLocation(): ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.List<Internal.BlockPart>, arg2: Internal.Map<string, Internal.Either<Internal.RenderMaterial, string>>, arg3: boolean, arg4: Internal.BlockModel$GuiLight, arg5: Internal.ItemCameraTransforms, arg6: Internal.List<Internal.ItemOverride>);
    }
    type BlockModel_ = BlockModel;
    class Polygon extends Document.Object implements Internal.Shape, Internal.Serializable {
        contains(arg0: number, arg1: number): boolean;
        contains(arg0: number, arg1: number): boolean;
        contains(arg0: Internal.Point): boolean;
        contains(arg0: Internal.Point2D): boolean;
        contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        contains(arg0: Internal.Rectangle2D): boolean;
        getPathIterator(arg0: Internal.AffineTransform): Internal.PathIterator;
        getPathIterator(arg0: Internal.AffineTransform, arg1: number): Internal.PathIterator;
        intersects(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        intersects(arg0: Internal.Rectangle2D): boolean;
        getBounds2D(): Internal.Rectangle2D;
        reset(): void;
        invalidate(): void;
        inside(arg0: number, arg1: number): boolean;
        getBoundingBox(): Internal.Rectangle;
        addPoint(arg0: number, arg1: number): void;
        translate(arg0: number, arg1: number): void;
        getBounds(): Internal.Rectangle;
        ypoints: number[];
        xpoints: number[];
        npoints: number;
        get boundingBox(): Internal.Rectangle;
        get bounds(): Internal.Rectangle;
        get bounds2D(): Internal.Rectangle2D;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number[], arg1: number[], arg2: number);
    }
    type Polygon_ = Polygon;
    interface ValueLayout$OfDouble extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfDouble;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfDouble;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout$OfDouble;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfDouble;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfDouble_ = ValueLayout$OfDouble;
    class ChestTileEntity extends Internal.LockableLootTileEntity implements Internal.IChestLid, Internal.ITickableTileEntity {
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        static func_213977_a(arg0: Internal.World, arg1: Internal.LockableTileEntity, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): number;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_195480_a(arg0: number): number;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        static func_213976_a(arg0: Internal.World, arg1: Internal.LockableTileEntity, arg2: number, arg3: number, arg4: number): number;
        static func_195481_a(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_73660_a(): void;
        func_145818_k_(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        static func_199722_a(arg0: Internal.ChestTileEntity, arg1: Internal.ChestTileEntity): void;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        field_145987_o: number;
        field_145985_p: Internal.NonNullList<Internal.ItemStack>;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ChestTileEntity_ = ChestTileEntity;
    class RenderCloudsEvent extends Internal.WorldRenderEvent {
        getPartialTicks(): number;
        getViewEntityX(): number;
        getViewEntityY(): number;
        getViewEntityZ(): number;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get viewEntityX(): number;
        get viewEntityY(): number;
        get viewEntityZ(): number;
        get partialTicks(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number);
    }
    type RenderCloudsEvent_ = RenderCloudsEvent;
    interface BaseStream <T, S> extends Internal.AutoCloseable {
        unordered(): S;
        onClose(arg0: Internal.Runnable_): S;
        iterator(): Internal.Iterator<T>;
        parallel(): S;
        spliterator(): Internal.Spliterator<T>;
        sequential(): S;
        isParallel(): boolean;
        close(): void;
    }
    type BaseStream_<T, S> = BaseStream<T, S>;
    class MutableColor4I extends Internal.Color4I {
        drawStatic(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number): void;
        addBrightness(b: number): Internal.Color4I;
        set(r: number, g: number, b: number, a: number): Internal.Color4I;
        set(col: Internal.Color4I, a: number): Internal.Color4I;
        set(col: Internal.Color4I): Internal.Color4I;
        set(col: number, a: number): Internal.Color4I;
        set(col: number): Internal.Color4I;
        setAlpha(a: number): Internal.Color4I;
        setFromHSB(h: number, s: number, b: number): Internal.Color4I;
        copy(): Internal.MutableColor4I;
        copy(): Internal.Icon;
        withTint(arg0: Internal.Color4I): Internal.Icon;
        draw3D(matrixStack: Internal.MatrixStack): void;
        static readonly TEMP: Internal.Color4I;
        set alpha(a: number);
    }
    type MutableColor4I_ = MutableColor4I;
    class GuiScreenEvent$DrawScreenEvent$Pre extends Internal.GuiScreenEvent$DrawScreenEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: Internal.MatrixStack, arg2: number, arg3: number, arg4: number);
    }
    type GuiScreenEvent$DrawScreenEvent$Pre_ = GuiScreenEvent$DrawScreenEvent$Pre;
    class ConfiguredSurfaceBuilder <SC> extends Document.Object {
        func_215452_a(): SC;
        func_215450_a(arg0: Internal.Random, arg1: Internal.IChunk, arg2: Internal.Biome_, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.BlockState, arg8: Internal.BlockState, arg9: number, arg10: number): void;
        func_215451_a(arg0: number): void;
        readonly field_215454_b: SC;
        static readonly field_237168_a_: Internal.Codec<Internal.ConfiguredSurfaceBuilder<any>>;
        readonly field_215453_a: Internal.SurfaceBuilder<SC>;
        static readonly field_244393_b_: Internal.Codec<java_.util.function_.Supplier<Internal.ConfiguredSurfaceBuilder<any>>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SurfaceBuilder<SC>, arg1: SC);
    }
    type ConfiguredSurfaceBuilder_<SC> = ConfiguredSurfaceBuilder<SC>;
    class PiglinAction extends Internal.Enum<Internal.PiglinAction> {
        static valueOf(arg0: string): Internal.PiglinAction;
        static values(): Internal.PiglinAction[];
        static readonly CROSSBOW_HOLD: Internal.PiglinAction;
        static readonly ATTACKING_WITH_MELEE_WEAPON: Internal.PiglinAction;
        static readonly CROSSBOW_CHARGE: Internal.PiglinAction;
        static readonly DANCING: Internal.PiglinAction;
        static readonly DEFAULT: Internal.PiglinAction;
        static readonly ADMIRING_ITEM: Internal.PiglinAction;
    }
    type PiglinAction_ = "attacking_with_melee_weapon" | "crossbow_hold" | "crossbow_charge" | "admiring_item" | "dancing" | "default" | PiglinAction;
    class FakePlayer extends Internal.ServerPlayerEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ServerWorld, arg1: Internal.GameProfile);
    }
    type FakePlayer_ = FakePlayer;
    interface IIngredients {
        setInputs<T>(arg0: Internal.IIngredientType_<T>, arg1: Internal.List<T>): void;
        setOutputs<T>(arg0: Internal.IIngredientType_<T>, arg1: Internal.List<T>): void;
        getOutputs<T>(arg0: Internal.IIngredientType_<T>): Internal.List<Internal.List<T>>;
        setOutputLists<T>(arg0: Internal.IIngredientType_<T>, arg1: Internal.List<Internal.List<T>>): void;
        setInputIngredients(arg0: Internal.List<Internal.Ingredient>): void;
        setInputLists<T>(arg0: Internal.IIngredientType_<T>, arg1: Internal.List<Internal.List<T>>): void;
        getInputs<T>(arg0: Internal.IIngredientType_<T>): Internal.List<Internal.List<T>>;
        setOutput<T>(arg0: Internal.IIngredientType_<T>, arg1: T): void;
        setInput<T>(arg0: Internal.IIngredientType_<T>, arg1: T): void;
    }
    type IIngredients_ = IIngredients;
    class HoverEvent$EntityHover extends Document.Object {
        static func_240682_a_(arg0: Internal.JsonElement): Internal.HoverEvent$EntityHover;
        func_240684_b_(): Internal.List<Internal.ITextComponent>;
        func_240681_a_(): Internal.JsonElement;
        static func_240683_a_(arg0: Internal.ITextComponent_): Internal.HoverEvent$EntityHover;
        readonly field_240679_c_: Internal.ITextComponent;
        readonly field_240678_b_: Internal.UUID;
        readonly field_240677_a_: Internal.EntityType<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<any>, arg1: Internal.UUID, arg2: Internal.ITextComponent);
    }
    type HoverEvent$EntityHover_ = HoverEvent$EntityHover;
    abstract class DynamicLike <T> extends Document.Object {
        createIntList(arg0: Internal.IntStream): Internal.Dynamic<any>;
        createLong(arg0: number): Internal.Dynamic<T>;
        getElementGeneric(arg0: T): Internal.DataResult<T>;
        getElementGeneric(arg0: T, arg1: T): T;
        asLongStreamOpt(): Internal.DataResult<Internal.LongStream>;
        createDouble(arg0: number): Internal.Dynamic<T>;
        createLongList(arg0: Internal.LongStream): Internal.Dynamic<any>;
        readMap<K_, V_>(arg0: Internal.Decoder_<K_>, arg1: Internal.Function_<K_, Internal.Decoder_<V_>>): Internal.DataResult<Internal.List<Internal.Pair<K_, V_>>>;
        readMap<R_>(arg0: Internal.DataResult<R_>, arg1: Internal.Function3_<R_, Internal.Dynamic_<T>, Internal.Dynamic_<T>, Internal.DataResult_<R_>>): Internal.DataResult<R_>;
        readMap<K_, V_>(arg0: Internal.Decoder_<K_>, arg1: Internal.Decoder_<V_>): Internal.DataResult<Internal.List<Internal.Pair<K_, V_>>>;
        asListOpt<U_>(arg0: Internal.Function_<Internal.Dynamic_<T>, U_>): Internal.DataResult<Internal.List<U_>>;
        asStreamOpt(): Internal.DataResult<Internal.Stream<Internal.Dynamic<T>>>;
        createShort(arg0: number): Internal.Dynamic<T>;
        asMap<K_, V_>(arg0: Internal.Function_<Internal.Dynamic_<T>, K_>, arg1: Internal.Function_<Internal.Dynamic_<T>, V_>): Internal.Map<K_, V_>;
        asIntStream(): Internal.IntStream;
        createByteList(arg0: Internal.ByteBuffer): Internal.Dynamic<any>;
        asByteBuffer(): Internal.ByteBuffer;
        asFloat(arg0: number): number;
        decode<A_>(arg0: Internal.Decoder_<A_>): Internal.DataResult<Internal.Pair<A_, T>>;
        asIntStreamOpt(): Internal.DataResult<Internal.IntStream>;
        asLongStream(): Internal.LongStream;
        createBoolean(arg0: boolean): Internal.Dynamic<T>;
        asList<U_>(arg0: Internal.Function_<Internal.Dynamic_<T>, U_>): Internal.List<U_>;
        asInt(arg0: number): number;
        readList<E_>(arg0: Internal.Decoder_<E_>): Internal.DataResult<Internal.List<E_>>;
        readList<E_>(arg0: Internal.Function_<Internal.Dynamic_<any>, Internal.DataResult_<E_>>): Internal.DataResult<Internal.List<E_>>;
        emptyList(): Internal.Dynamic<T>;
        asShort(arg0: number): number;
        get(arg0: string): Internal.OptionalDynamic<T>;
        emptyMap(): Internal.Dynamic<T>;
        createNumeric(arg0: Internal.Number): Internal.Dynamic<T>;
        asString(arg0: string): string;
        asString(): Internal.DataResult<string>;
        asByte(arg0: number): number;
        createList(arg0: Internal.Stream<Internal.Dynamic<any>>): Internal.Dynamic<T>;
        asByteBufferOpt(): Internal.DataResult<Internal.ByteBuffer>;
        read<A_>(arg0: Internal.Decoder_<A_>): Internal.DataResult<A_>;
        asMapOpt<K_, V_>(arg0: Internal.Function_<Internal.Dynamic_<T>, K_>, arg1: Internal.Function_<Internal.Dynamic_<T>, V_>): Internal.DataResult<Internal.Map<K_, V_>>;
        asMapOpt(): Internal.DataResult<Internal.Stream<Internal.Pair<Internal.Dynamic<T>, Internal.Dynamic<T>>>>;
        asNumber(arg0: Internal.Number): Internal.Number;
        asNumber(): Internal.DataResult<Internal.Number>;
        getGeneric(arg0: T): Internal.DataResult<T>;
        createString(arg0: string): Internal.Dynamic<T>;
        asStream(): Internal.Stream<Internal.Dynamic<T>>;
        createMap(arg0: Internal.Map_<Internal.Dynamic_<any>, Internal.Dynamic_<any>>): Internal.Dynamic<T>;
        asLong(arg0: number): number;
        createByte(arg0: number): Internal.Dynamic<T>;
        createFloat(arg0: number): Internal.Dynamic<T>;
        getOps(): Internal.DynamicOps<T>;
        getElement(arg0: string): Internal.DataResult<T>;
        getElement(arg0: string, arg1: T): T;
        asDouble(arg0: number): number;
        createInt(arg0: number): Internal.Dynamic<T>;
        asBoolean(arg0: boolean): boolean;
        get ops(): Internal.DynamicOps<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DynamicOps<T>);
    }
    type DynamicLike_<T> = DynamicLike<T>;
    interface ISceneBuilderJS$IWorldInstructionsJS {
        modifyEntities<T>(arg0: Internal.Class<T>, arg1: Internal.Consumer_<T>): void;
        hideSection(arg0: Internal.Selection, arg1: Internal.Direction_): void;
        multiplyKineticSpeed(arg0: Internal.Selection, arg1: number): void;
        toggleRedstonePower(arg0: Internal.Selection): void;
        showIndependentSection(arg0: Internal.Selection, arg1: Internal.Direction_): Internal.ElementLink<Internal.WorldSectionElement>;
        cycleBlockProperty(arg0: BlockPos, arg1: Internal.Property<any>): void;
        setCraftingResult(arg0: BlockPos, arg1: Internal.ItemStack): void;
        setBlock(arg0: BlockPos, arg1: Internal.BlockState, arg2: boolean): void;
        modifyTileNBT(arg0: Internal.Selection, arg1: Internal.Class<Internal.TileEntity>, arg2: Internal.Consumer_<Internal.CompoundNBT_>): void;
        modifyTileNBT(arg0: Internal.Selection, arg1: Internal.Class<Internal.TileEntity>, arg2: Internal.Consumer_<Internal.CompoundNBT_>, arg3: boolean): void;
        modifyTileEntity<T>(arg0: BlockPos, arg1: Internal.Class<T>, arg2: Internal.Consumer_<T>): void;
        showIndependentSectionImmediately(arg0: Internal.Selection): Internal.ElementLink<Internal.WorldSectionElement>;
        glueBlockOnto(arg0: BlockPos, arg1: Internal.Direction_, arg2: Internal.ElementLink<Internal.WorldSectionElement>): void;
        restoreBlocks(arg0: Internal.Selection): void;
        replaceBlocks(arg0: Internal.Selection, arg1: Internal.BlockState, arg2: boolean): void;
        removeItemsFromBelt(arg0: BlockPos): void;
        makeSectionIndependent(arg0: Internal.Selection): Internal.ElementLink<Internal.WorldSectionElement>;
        flapFunnel(arg0: BlockPos, arg1: boolean): void;
        setFilterData(arg0: Internal.Selection, arg1: Internal.Class<Internal.TileEntity>, arg2: Internal.ItemStack): void;
        createItemOnBelt(arg0: BlockPos, arg1: Internal.Direction_, arg2: Internal.ItemStack): Internal.ElementLink<Internal.BeltItemElement>;
        movePulley(arg0: BlockPos, arg1: number, arg2: number): void;
        changeBeltItemTo(arg0: Internal.ElementLink<Internal.BeltItemElement>, arg1: Internal.ItemStack): void;
        moveDeployer(arg0: BlockPos, arg1: number, arg2: number): void;
        modifyKineticSpeed(arg0: Internal.Selection, arg1: Internal.UnaryOperator<number>): void;
        propagatePipeChange(arg0: BlockPos): void;
        moveSection(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: Vec3, arg2: number): void;
        rotateSection(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        showSectionAndMerge(arg0: Internal.Selection, arg1: Internal.Direction_, arg2: Internal.ElementLink<Internal.WorldSectionElement>): void;
        modifyEntitiesInside<T>(arg0: Internal.Class<T>, arg1: Internal.Selection, arg2: Internal.Consumer_<T>): void;
        createItemEntity(arg0: Vec3, arg1: Vec3, arg2: Internal.ItemStack): Internal.ElementLink<Internal.EntityElement>;
        setBlocks(arg0: Internal.Selection, arg1: Internal.BlockState, arg2: boolean): void;
        configureStabilization(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: Vec3): void;
        createGlueEntity(arg0: BlockPos, arg1: Internal.Direction_): Internal.ElementLink<Internal.EntityElement>;
        getInternal(): Internal.SceneBuilder$WorldInstructions;
        modifyBlock(arg0: BlockPos, arg1: Internal.UnaryOperator<Internal.BlockState>, arg2: boolean): void;
        createEntity(arg0: Internal.Function_<Internal.World_, Internal.Entity_>): Internal.ElementLink<Internal.EntityElement>;
        configureCenterOfRotation(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: Vec3): void;
        stallBeltItem(arg0: Internal.ElementLink<Internal.BeltItemElement>, arg1: boolean): void;
        setKineticSpeed(arg0: Internal.Selection, arg1: number): void;
        hideIndependentSection(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: Internal.Direction_): void;
        createItemOnBeltLike(arg0: BlockPos, arg1: Internal.Direction_, arg2: Internal.ItemStack): void;
        connectCrafterInvs(arg0: BlockPos, arg1: BlockPos): void;
        instructArm(arg0: BlockPos, arg1: Internal.ArmTileEntity$Phase_, arg2: Internal.ItemStack, arg3: number): void;
        showSection(arg0: Internal.Selection, arg1: Internal.Direction_): void;
        incrementBlockBreakingProgress(arg0: BlockPos): void;
        destroyBlock(arg0: BlockPos): void;
        rotateBearing(arg0: BlockPos, arg1: number, arg2: number): void;
        modifyBlocks(arg0: Internal.Selection, arg1: Internal.UnaryOperator<Internal.BlockState>, arg2: boolean): void;
        (): Internal.SceneBuilder$WorldInstructions;
    }
    type ISceneBuilderJS$IWorldInstructionsJS_ = (()=>Internal.SceneBuilder$WorldInstructions) | ISceneBuilderJS$IWorldInstructionsJS;
    interface DebuggableObject {
        getAllIds(): any[];
        (): any[];
    }
    type DebuggableObject_ = (()=>any[]) | DebuggableObject;
    class MateSensor extends Internal.Sensor<Internal.AgeableEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MateSensor_ = MateSensor;
    abstract class IntReferenceHolder extends Document.Object {
        func_221495_b(): number;
        func_221496_c(): boolean;
        static func_221497_a(arg0: number[], arg1: number): Internal.IntReferenceHolder;
        static func_221492_a(): Internal.IntReferenceHolder;
        func_221494_a(arg0: number): void;
        static func_221493_a(arg0: Internal.IIntArray, arg1: number): Internal.IntReferenceHolder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type IntReferenceHolder_ = IntReferenceHolder;
    class LiteralCommandNode <S> extends Internal.CommandNode<S> {
        createBuilder(): Internal.ArgumentBuilder<any, any>;
        createBuilder(): Internal.LiteralArgumentBuilder<S>;
        getLiteral(): string;
        isValidInput(arg0: string): boolean;
        get literal(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Command<S>, arg2: Internal.Predicate<S>, arg3: Internal.CommandNode<S>, arg4: Internal.RedirectModifier<S>, arg5: boolean);
    }
    type LiteralCommandNode_<S> = LiteralCommandNode<S>;
    class ValidatedResult extends Document.Object {
        static success(arg0: Internal.ItemStack): Internal.ValidatedResult;
        static failure(arg0: string, ...arg1: any[]): Internal.ValidatedResult;
        getResult(): Internal.ItemStack;
        getMessage(): Internal.ITextComponent;
        hasError(): boolean;
        isSuccess(): boolean;
        static readonly PASS: Internal.ValidatedResult;
        get result(): Internal.ItemStack;
        get message(): Internal.ITextComponent;
    }
    type ValidatedResult_ = ValidatedResult;
    class EntityArrayList extends Internal.ArrayList<Internal.EntityJS> implements Internal.MessageSender {
        sendData(channel: string, data: Internal.CompoundNBT_): void;
        setStatusMessage(message: Internal.ITextComponent_): void;
        getWorld(): Internal.WorldJS;
        getName(): Internal.Text;
        tell(message: Internal.ITextComponent_): void;
        kill(): void;
        runCommandSilent(command: string): number;
        filter(filter: Internal.Predicate_<Internal.EntityJS_>): Internal.EntityArrayList;
        stream(): Internal.Stream<Internal.EntityJS>;
        getDisplayName(): Internal.Text;
        getFirst(): Internal.EntityJS;
        playSound(id: Internal.SoundEvent_): void;
        playSound(id: Internal.SoundEvent_, volume: number, pitch: number): void;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<Internal.EntityJS>;
        runCommand(command: string): number;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<Internal.EntityJS>;
        get world(): Internal.WorldJS;
        get displayName(): Internal.Text;
        get name(): Internal.Text;
        get first(): Internal.EntityJS;
        set statusMessage(message: Internal.ITextComponent_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(w: Internal.WorldJS, c: Internal.Iterable<Internal.Entity>);
        constructor(w: Internal.WorldJS, size: number);
    }
    type EntityArrayList_ = EntityArrayList;
    interface ShortIterable extends Internal.Iterable<number> {
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.ShortIterator;
        forEach(arg0: Internal.IntConsumer_): void;
        forEach(arg0: Internal.Consumer_<number>): void;
        (): Internal.ShortIterator;
    }
    type ShortIterable_ = (()=>Internal.ShortIterator) | ShortIterable;
    abstract class Triple <L, M, R> extends Document.Object implements Internal.Comparable<Internal.Triple<L, M, R>>, Internal.Serializable {
        getRight(): R;
        getMiddle(): M;
        static of<L_, M_, R_>(arg0: L_, arg1: M_, arg2: R_): Internal.Triple<L_, M_, R_>;
        toString(arg0: string): string;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.Triple<L, M, R>): number;
        getLeft(): L;
        get middle(): M;
        get left(): L;
        get right(): R;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Triple_<L, M, R> = Triple<L, M, R>;
    abstract class MultithreadEventLoopGroup extends Internal.MultithreadEventExecutorGroup implements Internal.EventLoopGroup {
        scheduleAtFixedRate(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        next(): Internal.EventLoop;
        schedule(arg0: java_.util.concurrent.Callable_<any>, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        schedule(arg0: Internal.Runnable_, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        submit(arg0: java_.util.concurrent.Callable_<any>): java_.util.concurrent.Future<any>;
        submit(arg0: Internal.Runnable_): java_.util.concurrent.Future<any>;
        submit(arg0: Internal.Runnable_, arg1: any): java_.util.concurrent.Future<any>;
        spliterator(): Internal.Spliterator<Internal.EventExecutor>;
        forEach(arg0: Internal.Consumer_<Internal.EventExecutor_>): void;
        scheduleWithFixedDelay(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        close(): void;
        register(arg0: Internal.Channel): Internal.ChannelFuture;
        register(arg0: Internal.Channel, arg1: Internal.ChannelPromise): Internal.ChannelFuture;
        register(arg0: Internal.ChannelPromise): Internal.ChannelFuture;
    }
    type MultithreadEventLoopGroup_ = MultithreadEventLoopGroup;
    class ScoreCriteria extends Document.Object {
        static func_216390_a(arg0: string): Internal.Optional<Internal.ScoreCriteria>;
        func_96637_b(): boolean;
        func_178790_c(): Internal.ScoreCriteria$RenderType;
        func_96636_a(): string;
        static readonly field_186702_l: Internal.ScoreCriteria;
        static readonly field_178791_c: Internal.ScoreCriteria;
        static readonly field_186700_j: Internal.ScoreCriteria;
        static readonly field_186699_i: Internal.ScoreCriteria;
        static readonly field_186701_k: Internal.ScoreCriteria;
        static readonly field_186698_h: Internal.ScoreCriteria;
        static readonly field_197913_m: Internal.ScoreCriteria[];
        static readonly field_96638_f: Internal.ScoreCriteria;
        static readonly field_96639_d: Internal.ScoreCriteria;
        static readonly field_197914_n: Internal.ScoreCriteria[];
        static readonly field_96641_b: Internal.ScoreCriteria;
        static readonly field_96643_a: {"minecraft.custom:minecraft.pig_one_cm":Internal.Stat<any>,"minecraft.used:tconstruct.seared_fuel_tank":Internal.Stat<any>,"minecraft.used:upgrade_aquatic.glow_squid_bucket":Internal.Stat<any>,"minecraft.picked_up:aeadditions.fluid_storage_component_4096":Internal.Stat<any>,"minecraft.picked_up:alexsmobs.raccoon_tail":Internal.Stat<any>,"minecraft.used:minecraft.pufferfish_bucket":Internal.Stat<any>,"minecraft.used:tconstruct.seared_bricks":Internal.Stat<any>,"minecraft.killed:alexsmobs.tiger":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.gold_chunk":Internal.Stat<any>,"minecraft.picked_up:upgrade_aquatic.polar_kelp":Internal.Stat<any>,"minecraft.picked_up:pneumaticcraft.cod_n_chips":Internal.Stat<any>,"minecraft.picked_up:minecraft.blaze_rod":Internal.Stat<any>,"minecraft.custom:minecraft.climb_one_cm":Internal.Stat<any>,"minecraft.picked_up:minecraft.emerald":Internal.Stat<any>,"minecraft.picked_up:kubejs.constantan_larva":Internal.Stat<any>,"minecraft.used:emendatusenigmatica.bitumen_gravel_ore":Internal.Stat<any>,"minecraft.picked_up:minecraft.ink_sac":Internal.Stat<any>,"minecraft.used:resourcefulbees.bee_nest":Internal.Stat<any>,"minecraft.used:create.schematicannon":Internal.Stat<any>,"minecraft.picked_up:astralsorcery.altar_attunement":Internal.Stat<any>,"minecraft.killed:environmental.koi":Internal.Stat<any>,"minecraft.picked_up:sophisticatedbackpacks.backpack":Internal.Stat<any>,"minecraft.picked_up:minecraft.arrow":Internal.Stat<any>,"minecraft.used:alexsmobs.spawn_egg_elephant":Internal.Stat<any>,"minecraft.used:appliedenergistics2.inscriber":Internal.Stat<any>,"minecraft.picked_up:minecraft.dandelion":Internal.Stat<any>,"minecraft.used:minecraft.cow_spawn_egg":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.aluminum_chunk":Internal.Stat<any>,"minecraft.killed:atum.sergeant":Internal.Stat<any>,"minecraft.used:atum.stonewarden_spawn_egg":Internal.Stat<any>,"minecraft.used:betterendforge.bucket_cubozoa":Internal.Stat<any>,"minecraft.used:trofers.trophy":Internal.Stat<any>,"minecraft.used:lootr.lootr_chest":Internal.Stat<any>,"minecraft.picked_up:minecraft.stonecutter":Internal.Stat<any>,"minecraft.picked_up:astralsorcery.celestial_gateway":Internal.Stat<any>,"minecraft.custom:minecraft.mob_kills":Internal.Stat<any>,"minecraft.used:create.creative_crate":Internal.Stat<any>,"minecraft.picked_up:astralsorcery.constellation_paper":Internal.Stat<any>,"minecraft.picked_up:quark.chute":Internal.Stat<any>,"minecraft.used:ars_nouveau.arcane_core":Internal.Stat<any>,"minecraft.custom:minecraft.clean_armor":Internal.Stat<any>,"minecraft.used:minecraft.conduit":Internal.Stat<any>,"minecraft.dropped:emendatusenigmatica.ender_dust":Internal.Stat<any>,"minecraft.killed:minecraft.chicken":Internal.Stat<any>,"minecraft.picked_up:minecraft.wheat_seeds":Internal.Stat<any>,"minecraft.used:minecraft.anvil":Internal.Stat<any>,"minecraft.used:undergarden.gloomper_spawn_egg":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.lapis_chunk":Internal.Stat<any>,"minecraft.custom:minecraft.clean_shulker_box":Internal.Stat<any>,"minecraft.used:industrialforegoing.infinity_hammer":Internal.Stat<any>,"minecraft.killed:atum.mummy":Internal.Stat<any>,"minecraft.picked_up:minecraft.egg":Internal.Stat<any>,"minecraft.picked_up:ars_elemental.curio_bag":Internal.Stat<any>,"minecraft.picked_up:aquaculture.fish_bones":Internal.Stat<any>,"food":Internal.ScoreCriteria,"minecraft.custom:minecraft.bell_ring":Internal.Stat<any>,"minecraft.picked_up:tconstruct.flint_shuriken":Internal.Stat<any>,"minecraft.used:undergarden.mog_spawn_egg":Internal.Stat<any>,"minecraft.killed:undergarden.sploogie":Internal.Stat<any>,"minecraft.picked_up:minecraft.ender_pearl":Internal.Stat<any>,"minecraft.used:pneumaticcraft.reinforced_chest":Internal.Stat<any>,"minecraft.custom:minecraft.fall_one_cm":Internal.Stat<any>,"minecraft.killed:occultism.possessed_enderman":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_anvil":Internal.Stat<any>,"minecraft.custom:minecraft.sneak_time":Internal.Stat<any>,"minecraft.used:supplementaries.bomb":Internal.Stat<any>,"minecraft.picked_up:undergarden.raw_gloomper_leg":Internal.Stat<any>,"minecraft.picked_up:minecraft.spruce_sapling":Internal.Stat<any>,"minecraft.used:alexsmobs.spawn_egg_soul_vulture":Internal.Stat<any>,"minecraft.used:astralsorcery.liquid_starlight_bucket":Internal.Stat<any>,"minecraft.used:minecraft.emerald_block":Internal.Stat<any>,"killedByTeam.dark_green":Internal.ScoreCriteria,"minecraft.dropped:minecraft.stonecutter":Internal.Stat<any>,"minecraft.used:atum.crystal_glass":Internal.Stat<any>,"minecraft.custom:minecraft.damage_absorbed":Internal.Stat<any>,"minecraft.used:industrialforegoing.sewage_composter":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_furnace":Internal.Stat<any>,"minecraft.picked_up:tetra.modular_single":Internal.Stat<any>,"minecraft.killed:atum.barbarian":Internal.Stat<any>,"minecraft.picked_up:upgrade_aquatic.ochre_kelp":Internal.Stat<any>,"minecraft.picked_up:materialis.psimetal_exosuit_leggings":Internal.Stat<any>,"minecraft.custom:botania.tiny_potatoes_petted":Internal.Stat<any>,"minecraft.picked_up:astralsorcery.attuned_rock_crystal":Internal.Stat<any>,"minecraft.killed:alexsmobs.cockroach":Internal.Stat<any>,"minecraft.used:appliedenergistics2.controller":Internal.Stat<any>,"minecraft.custom:minecraft.animals_bred":Internal.Stat<any>,"minecraft.used:immersiveengineering.heavy_engineering":Internal.Stat<any>,"minecraft.used:appliedenergistics2.condenser":Internal.Stat<any>,"minecraft.picked_up:tconstruct.blank_sand_cast":Internal.Stat<any>,"minecraft.picked_up:bloodmagic.largebloodstonebrick":Internal.Stat<any>,"minecraft.custom:minecraft.turned_cranks":Internal.Stat<any>,"minecraft.picked_up:minecraft.stick":Internal.Stat<any>,"minecraft.dropped:itemfilters.or":Internal.Stat<any>,"minecraft.used:chipped.mason_table":Internal.Stat<any>,"minecraft.dropped:astralsorcery.constellation_paper":Internal.Stat<any>,"minecraft.picked_up:tconstruct.efln_ball":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.fluorite_chunk":Internal.Stat<any>,"killedByTeam.aqua":Internal.ScoreCriteria,"armor":Internal.ScoreCriteria,"minecraft.used:quark.chute":Internal.Stat<any>,"minecraft.used:minecraft.crafting_table":Internal.Stat<any>,"minecraft.killed:occultism.marid":Internal.Stat<any>,"minecraft.picked_up:undergarden.raw_dweller_meat":Internal.Stat<any>,"minecraft.picked_up:kubejs.abbee_larva":Internal.Stat<any>,"minecraft.killed:alexsmobs.elephant":Internal.Stat<any>,"minecraft.used:environmental.koi_bucket":Internal.Stat<any>,"minecraft.dropped:packagedauto.crafter":Internal.Stat<any>,"minecraft.picked_up:atum.coin_dirty":Internal.Stat<any>,"minecraft.picked_up:minecraft.skeleton_skull":Internal.Stat<any>,"minecraft.used:tetra.scroll_rolled":Internal.Stat<any>,"minecraft.custom:minecraft.open_shulker_box":Internal.Stat<any>,"minecraft.used:atum.mummy_spawn_egg":Internal.Stat<any>,"minecraft.used:artifacts.everlasting_beef":Internal.Stat<any>,"teamkill.red":Internal.ScoreCriteria,"minecraft.custom:minecraft.damage_dealt_absorbed":Internal.Stat<any>,"minecraft.used:ars_nouveau.glyph_press":Internal.Stat<any>,"minecraft.dropped:occultism.datura_seeds":Internal.Stat<any>,"minecraft.used:astralsorcery.infuser":Internal.Stat<any>,"minecraft.killed:undergarden.brute":Internal.Stat<any>,"minecraft.custom:minecraft.sleep_in_bed":Internal.Stat<any>,"minecraft.custom:minecraft.inspect_dispenser":Internal.Stat<any>,"teamkill.dark_green":Internal.ScoreCriteria,"minecraft.custom:minecraft.swim_one_cm":Internal.Stat<any>,"minecraft.killed:occultism.possessed_skeleton":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.silver_chunk":Internal.Stat<any>,"minecraft.used:redstonepen.control_box":Internal.Stat<any>,"minecraft.used:ironchest.wood_to_iron_chest_upgrade":Internal.Stat<any>,"minecraft.used:akashictome.tome":Internal.Stat<any>,"minecraft.used:apotheosis.prismatic_altar":Internal.Stat<any>,"minecraft.used:packagedauto.crafter":Internal.Stat<any>,"minecraft.crafted:minecraft.crafting_table":Internal.Stat<any>,"minecraft.picked_up:tetra.modular_double":Internal.Stat<any>,"minecraft.custom:minecraft.drop":Internal.Stat<any>,"minecraft.picked_up:undergarden.mogmoss":Internal.Stat<any>,"minecraft.used:thermal.dynamo_numismatic":Internal.Stat<any>,"minecraft.used:quark.gold_button":Internal.Stat<any>,"killedByTeam.gray":Internal.ScoreCriteria,"minecraft.used:minecraft.enchanting_table":Internal.Stat<any>,"minecraft.used:ftbquests.barrier":Internal.Stat<any>,"minecraft.used:minecraft.cauldron":Internal.Stat<any>,"minecraft.dropped:pneumaticcraft.ingot_iron_compressed":Internal.Stat<any>,"minecraft.used:atum.arrow_trap":Internal.Stat<any>,"minecraft.used:ironchest.silver_chest":Internal.Stat<any>,"minecraft.used:alexsmobs.enderiophage_rocket":Internal.Stat<any>,"minecraft.used:occultism.book_of_calling_foliot_cleaner":Internal.Stat<any>,"killedByTeam.blue":Internal.ScoreCriteria,"minecraft.custom:minecraft.eat_cake_slice":Internal.Stat<any>,"minecraft.picked_up:sushigocrafting.shrimp_nigiri":Internal.Stat<any>,"minecraft.used:upgrade_aquatic.squid_bucket":Internal.Stat<any>,"killedByTeam.gold":Internal.ScoreCriteria,"minecraft.used:bloodmagic.largebloodstonebrick":Internal.Stat<any>,"killedByTeam.dark_purple":Internal.ScoreCriteria,"minecraft.used:waystones.waystone":Internal.Stat<any>,"dummy":Internal.ScoreCriteria,"minecraft.used:appliedenergistics2.creative_energy_cell":Internal.Stat<any>,"minecraft.used:appliedenergistics2.interface":Internal.Stat<any>,"minecraft.used:occultism.spawn_egg/possessed_endermite":Internal.Stat<any>,"minecraft.used:botania.redstone_spreader":Internal.Stat<any>,"minecraft.used:tetra.modular_single":Internal.Stat<any>,"minecraft.used:industrialforegoing.infinity_trident":Internal.Stat<any>,"minecraft.killed:atum.forsaken":Internal.Stat<any>,"minecraft.used:create.item_drain":Internal.Stat<any>,"minecraft.picked_up:minecraft.charcoal":Internal.Stat<any>,"minecraft.custom:minecraft.horse_one_cm":Internal.Stat<any>,"minecraft.used:immersiveengineering.steel_scaffolding_standard":Internal.Stat<any>,"minecraft.killed:resourcefulbees.abbee_bee":Internal.Stat<any>,"minecraft.used:industrialforegoing.spores_recreator":Internal.Stat<any>,"minecraft.used:appliedenergistics2.tiny_tnt":Internal.Stat<any>,"killedByTeam.white":Internal.ScoreCriteria,"minecraft.used:atum.brigand_spawn_egg":Internal.Stat<any>,"minecraft.custom:minecraft.target_hit":Internal.Stat<any>,"minecraft.custom:minecraft.waystone_activated":Internal.Stat<any>,"minecraft.used:astralsorcery.celestial_collector_crystal":Internal.Stat<any>,"minecraft.used:occultism.spawn_egg/wild_hunt_skeleton":Internal.Stat<any>,"minecraft.picked_up:minecraft.dirt":Internal.Stat<any>,"minecraft.used:atum.sergeant_spawn_egg":Internal.Stat<any>,"minecraft.custom:lootr.looted_stat":Internal.Stat<any>,"minecraft.used:undergarden.masticator_spawn_egg":Internal.Stat<any>,"minecraft.custom:minecraft.items_extracted":Internal.Stat<any>,"minecraft.used:tiab.timeinabottle":Internal.Stat<any>,"minecraft.used:projectvibrantjourneys.clam_bucket":Internal.Stat<any>,"minecraft.used:atum.stoneguard_spawn_egg":Internal.Stat<any>,"minecraft.picked_up:occultism.afrit_essence":Internal.Stat<any>,"air":Internal.ScoreCriteria,"teamkill.gold":Internal.ScoreCriteria,"minecraft.picked_up:immersiveengineering.seed":Internal.Stat<any>,"minecraft.picked_up:minecraft.coal":Internal.Stat<any>,"minecraft.used:masterfulmachinery.structure_generator":Internal.Stat<any>,"minecraft.dropped:kubejs.superheated_steel_ingot":Internal.Stat<any>,"minecraft.used:industrialforegoing.sludge_refiner":Internal.Stat<any>,"teamkill.blue":Internal.ScoreCriteria,"minecraft.used:astralsorcery.rock_collector_crystal":Internal.Stat<any>,"minecraft.dropped:atum.coin_dirty":Internal.Stat<any>,"minecraft.picked_up:minecraft.seagrass":Internal.Stat<any>,"minecraft.picked_up:undergarden.froststeel_nugget":Internal.Stat<any>,"minecraft.used:minecraft.dirt":Internal.Stat<any>,"minecraft.used:minecraft.honey_bottle":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_campfire":Internal.Stat<any>,"minecraft.used:immersiveengineering.conveyor_basic":Internal.Stat<any>,"minecraft.used:tconstruct.smeltery_controller":Internal.Stat<any>,"minecraft.used:undergarden.forgotten_guardian_spawn_egg":Internal.Stat<any>,"minecraft.picked_up:aeadditions.item_storage_component_4096":Internal.Stat<any>,"minecraft.picked_up:occultism.datura_seeds":Internal.Stat<any>,"health":Internal.ScoreCriteria,"minecraft.used:minecraft.dispenser":Internal.Stat<any>,"minecraft.used:masterfulmachinery.industrial_deuterium_plant_spinny_port_create_rotation_input":Internal.Stat<any>,"trigger":Internal.ScoreCriteria,"minecraft.picked_up:astralsorcery.altar_discovery":Internal.Stat<any>,"minecraft.used:botania.apothecary_default":Internal.Stat<any>,"minecraft.used:ars_nouveau.enchanting_apparatus":Internal.Stat<any>,"minecraft.killed:undergarden.mog":Internal.Stat<any>,"minecraft.used:storagedrawers.oak_full_drawers_4":Internal.Stat<any>,"minecraft.killed:atum.assassin":Internal.Stat<any>,"minecraft.picked_up:atum.camel":Internal.Stat<any>,"minecraft.used:storagedrawers.oak_full_drawers_1":Internal.Stat<any>,"minecraft.picked_up:undergarden.forgotten_nugget":Internal.Stat<any>,"minecraft.custom:minecraft.trigger_trapped_chest":Internal.Stat<any>,"minecraft.dropped:minecraft.wheat":Internal.Stat<any>,"minecraft.used:minecraft.netherite_sword":Internal.Stat<any>,"minecraft.used:minecraft.blaze_spawn_egg":Internal.Stat<any>,"minecraft.dropped:minecraft.lead":Internal.Stat<any>,"minecraft.picked_up:undergarden.goo_ball":Internal.Stat<any>,"minecraft.used:thermal.tinker_bench":Internal.Stat<any>,"minecraft.used:tconstruct.molten_ender_bucket":Internal.Stat<any>,"minecraft.custom:minecraft.strider_one_cm":Internal.Stat<any>,"minecraft.used:quark.iron_button":Internal.Stat<any>,"minecraft.custom:minecraft.bounties_done":Internal.Stat<any>,"minecraft.used:undergarden.dweller_spawn_egg":Internal.Stat<any>,"minecraft.custom:minecraft.minecart_one_cm":Internal.Stat<any>,"minecraft.used:byg.aspen_sapling":Internal.Stat<any>,"minecraft.used:minecraft.lava_bucket":Internal.Stat<any>,"minecraft.used:tconstruct.seared_ladder":Internal.Stat<any>,"playerKillCount":Internal.ScoreCriteria,"minecraft.custom:botania.corporea_items_requested":Internal.Stat<any>,"minecraft.used:supplementaries.firefly_spawn_egg":Internal.Stat<any>,"level":Internal.ScoreCriteria,"minecraft.picked_up:minecraft.clay":Internal.Stat<any>,"minecraft.used:occultism.spawn_egg/afrit_wild":Internal.Stat<any>,"minecraft.custom:minecraft.jump":Internal.Stat<any>,"minecraft.custom:botania.luminizer_one_cm":Internal.Stat<any>,"minecraft.used:appliedenergistics2.fluix_glass_cable":Internal.Stat<any>,"minecraft.used:minecraft.hopper":Internal.Stat<any>,"minecraft.used:botania.creative_pool":Internal.Stat<any>,"minecraft.used:bloodmagic.telepositionsigil":Internal.Stat<any>,"minecraft.killed:ars_nouveau.drygmy":Internal.Stat<any>,"minecraft.killed:occultism.djinni":Internal.Stat<any>,"minecraft.used:botaniaadditions.terra_bow":Internal.Stat<any>,"teamkill.white":Internal.ScoreCriteria,"minecraft.custom:minecraft.interact_with_blast_furnace":Internal.Stat<any>,"minecraft.picked_up:minecraft.gunpowder":Internal.Stat<any>,"minecraft.used:ironchest.gold_chest":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_grindstone":Internal.Stat<any>,"minecraft.used:occultism.spawn_egg/djinni":Internal.Stat<any>,"minecraft.killed:undergarden.masticator":Internal.Stat<any>,"minecraft.custom:minecraft.talked_to_villager":Internal.Stat<any>,"minecraft.used:ironchest.copper_chest":Internal.Stat<any>,"minecraft.picked_up:atum.coin_gold":Internal.Stat<any>,"minecraft.used:ars_nouveau.bookwyrm_lectern":Internal.Stat<any>,"minecraft.used:atum.black_stained_crystal_glass":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.copper_block":Internal.Stat<any>,"minecraft.used:industrialforegoing.latex_processing_unit":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.nickel_chunk":Internal.Stat<any>,"minecraft.dropped:appliedenergistics2.charged_certus_quartz_crystal":Internal.Stat<any>,"minecraft.used:astralsorcery.lens":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_beacon":Internal.Stat<any>,"minecraft.used:astralsorcery.ritual_pedestal":Internal.Stat<any>,"minecraft.used:minecraft.trapped_chest":Internal.Stat<any>,"minecraft.picked_up:itemfilters.or":Internal.Stat<any>,"minecraft.custom:minecraft.pot_flower":Internal.Stat<any>,"minecraft.used:minecraft.blue_bed":Internal.Stat<any>,"minecraft.used:minecraft.barrel":Internal.Stat<any>,"minecraft.used:plonk.placed_items":Internal.Stat<any>,"minecraft.used:resourcefulbees.constantan_bee_spawn_egg":Internal.Stat<any>,"minecraft.dropped:astralsorcery.altar_discovery":Internal.Stat<any>,"teamkill.dark_blue":Internal.ScoreCriteria,"minecraft.custom:minecraft.items_inserted":Internal.Stat<any>,"minecraft.used:byg.rainbow_eucalyptus_sapling":Internal.Stat<any>,"minecraft.used:minecraft.stone_button":Internal.Stat<any>,"killedByTeam.dark_blue":Internal.ScoreCriteria,"minecraft.used:mekanism.teleporter_frame":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_lectern":Internal.Stat<any>,"minecraft.picked_up:minecraft.wither_skeleton_skull":Internal.Stat<any>,"minecraft.custom:minecraft.open_barrel":Internal.Stat<any>,"minecraft.custom:minecraft.open_chest":Internal.Stat<any>,"minecraft.used:minecraft.redstone_torch":Internal.Stat<any>,"minecraft.used:minecraft.flint_and_steel":Internal.Stat<any>,"minecraft.used:immersiveengineering.workbench":Internal.Stat<any>,"minecraft.picked_up:appliedenergistics2.quantum_entangled_singularity":Internal.Stat<any>,"minecraft.used:minecraft.zombie_spawn_egg":Internal.Stat<any>,"minecraft.used:immersiveengineering.excavator":Internal.Stat<any>,"minecraft.used:minecraft.spruce_sapling":Internal.Stat<any>,"minecraft.picked_up:undergarden.depthrock_pebble":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.tin_chunk":Internal.Stat<any>,"minecraft.used:minecraft.heavy_weighted_pressure_plate":Internal.Stat<any>,"minecraft.dropped:upgrade_aquatic.squid_bucket":Internal.Stat<any>,"minecraft.killed:undergarden.nargoyle":Internal.Stat<any>,"minecraft.used:mekanism.basic_logistical_transporter":Internal.Stat<any>,"minecraft.killed:alexsmobs.alligator_snapping_turtle":Internal.Stat<any>,"minecraft.killed:atum.wraith":Internal.Stat<any>,"minecraft.used:create.brass_funnel":Internal.Stat<any>,"minecraft.used:trofers.large_trophy":Internal.Stat<any>,"minecraft.custom:minecraft.boat_one_cm":Internal.Stat<any>,"minecraft.picked_up:bloodmagic.slate_ampoule":Internal.Stat<any>,"minecraft.picked_up:minecraft.bone":Internal.Stat<any>,"minecraft.used:redstone_arsenal.flux_gem_block":Internal.Stat<any>,"minecraft.custom:minecraft.aviate_one_cm":Internal.Stat<any>,"minecraft.dropped:appliedenergistics2.singularity":Internal.Stat<any>,"minecraft.killed:atum.desert_wolf":Internal.Stat<any>,"minecraft.used:byg.green_enchanted_planks":Internal.Stat<any>,"minecraft.custom:minecraft.deaths":Internal.Stat<any>,"minecraft.used:alexsmobs.spawn_egg_alligator_snapping_turtle":Internal.Stat<any>,"minecraft.picked_up:artifacts.thorn_pendant":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.bitumen_chunk":Internal.Stat<any>,"minecraft.picked_up:pneumaticcraft.ingot_iron_compressed":Internal.Stat<any>,"minecraft.used:atum.wraith_spawn_egg":Internal.Stat<any>,"minecraft.used:mctb.archwood_crafting_table":Internal.Stat<any>,"minecraft.used:betterendforge.quartz_pedestal":Internal.Stat<any>,"minecraft.crafted:minecraft.cobblestone_slab":Internal.Stat<any>,"minecraft.dropped:astralsorcery.attuned_rock_crystal":Internal.Stat<any>,"minecraft.killed:atum.stoneguard":Internal.Stat<any>,"minecraft.picked_up:quark.gold_button":Internal.Stat<any>,"minecraft.used:minecraft.stonecutter":Internal.Stat<any>,"minecraft.used:supplementaries.item_shelf":Internal.Stat<any>,"minecraft.used:minecraft.barrier":Internal.Stat<any>,"minecraft.used:minecraft.diamond_axe":Internal.Stat<any>,"minecraft.used:alexsmobs.spawn_egg_cockroach":Internal.Stat<any>,"minecraft.used:immersiveengineering.hammer":Internal.Stat<any>,"minecraft.used:ars_nouveau.creative_mana_jar":Internal.Stat<any>,"minecraft.crafted:minecraft.sugar":Internal.Stat<any>,"minecraft.used:minecraft.bow":Internal.Stat<any>,"minecraft.used:mctb.wisteria_crafting_table":Internal.Stat<any>,"minecraft.used:astralsorcery.ritual_link":Internal.Stat<any>,"minecraft.used:astralsorcery.altar_discovery":Internal.Stat<any>,"minecraft.dropped:quark.chute":Internal.Stat<any>,"minecraft.used:quark.weather_sensor":Internal.Stat<any>,"minecraft.picked_up:dummmmmmy.target_dummy_placer":Internal.Stat<any>,"killedByTeam.yellow":Internal.ScoreCriteria,"minecraft.used:occultism.spawn_egg/afrit":Internal.Stat<any>,"minecraft.killed:minecraft.zombie":Internal.Stat<any>,"minecraft.used:minecraft.dragon_head":Internal.Stat<any>,"minecraft.crafted:mctb.archwood_crafting_table":Internal.Stat<any>,"minecraft.used:astralsorcery.observatory":Internal.Stat<any>,"minecraft.picked_up:byg.rainbow_eucalyptus_sapling":Internal.Stat<any>,"minecraft.used:occultism.spawn_egg/marid":Internal.Stat<any>,"minecraft.used:chipped.lantern_1":Internal.Stat<any>,"killedByTeam.dark_red":Internal.ScoreCriteria,"minecraft.custom:minecraft.player_kills":Internal.Stat<any>,"minecraft.used:occultism.spawn_egg/wild_hunt_wither_skeleton":Internal.Stat<any>,"minecraft.used:ars_nouveau.arcane_relay":Internal.Stat<any>,"minecraft.custom:minecraft.play_noteblock":Internal.Stat<any>,"minecraft.used:alexsmobs.spawn_egg_mungus":Internal.Stat<any>,"minecraft.picked_up:sushigocrafting.soy_seeds":Internal.Stat<any>,"minecraft.used:atum.godforged_block":Internal.Stat<any>,"minecraft.custom:minecraft.use_cauldron":Internal.Stat<any>,"minecraft.used:aeadditions.chemical_import_bus":Internal.Stat<any>,"teamkill.light_purple":Internal.ScoreCriteria,"minecraft.used:minecraft.bucket":Internal.Stat<any>,"minecraft.picked_up:minecraft.writable_book":Internal.Stat<any>,"minecraft.used:aeadditions.chemical_interface":Internal.Stat<any>,"minecraft.killed:atum.stonewarden":Internal.Stat<any>,"minecraft.picked_up:minecraft.enchanted_book":Internal.Stat<any>,"minecraft.used:supplementaries.jar":Internal.Stat<any>,"minecraft.used:minecraft.grass_block":Internal.Stat<any>,"killedByTeam.red":Internal.ScoreCriteria,"minecraft.picked_up:atum.khnumite":Internal.Stat<any>,"minecraft.killed:alexsmobs.roadrunner":Internal.Stat<any>,"minecraft.picked_up:minecraft.leather":Internal.Stat<any>,"minecraft.used:redstone_arsenal.flux_trident":Internal.Stat<any>,"minecraft.used:supplementaries.sconce_lever":Internal.Stat<any>,"minecraft.used:powah.energy_cell_creative":Internal.Stat<any>,"minecraft.used:minecraft.dark_oak_log":Internal.Stat<any>,"minecraft.used:decorative_blocks_abnormals.ender_brazier":Internal.Stat<any>,"minecraft.used:minecraft.tnt":Internal.Stat<any>,"minecraft.picked_up:minecraft.lead":Internal.Stat<any>,"minecraft.mined:minecraft.grass":Internal.Stat<any>,"minecraft.used:mctb.time_crafting_table":Internal.Stat<any>,"minecraft.used:occultism.spawn_egg/possessed_enderman":Internal.Stat<any>,"minecraft.killed:minecraft.cow":Internal.Stat<any>,"minecraft.killed:occultism.wild_hunt_skeleton":Internal.Stat<any>,"minecraft.used:atum.nomad_spawn_egg":Internal.Stat<any>,"minecraft.used:betterendforge.flavolite_furnace":Internal.Stat<any>,"minecraft.dropped:minecraft.trident":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.uranium_chunk":Internal.Stat<any>,"minecraft.custom:minecraft.raid_win":Internal.Stat<any>,"minecraft.custom:minecraft.fish_caught":Internal.Stat<any>,"minecraft.custom:minecraft.damage_dealt_resisted":Internal.Stat<any>,"minecraft.custom:immersiveengineering.skyhook_distance":Internal.Stat<any>,"minecraft.custom:minecraft.damage_resisted":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_crafting_table":Internal.Stat<any>,"minecraft.used:byg.nightshade_berry_pie":Internal.Stat<any>,"minecraft.used:atum.forsaken_spawn_egg":Internal.Stat<any>,"teamkill.dark_purple":Internal.ScoreCriteria,"minecraft.dropped:astralsorcery.altar_attunement":Internal.Stat<any>,"minecraft.custom:minecraft.walk_one_cm":Internal.Stat<any>,"minecraft.custom:minecraft.walk_under_water_one_cm":Internal.Stat<any>,"minecraft.used:thermal.machine_crafter":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.osmium_chunk":Internal.Stat<any>,"minecraft.custom:minecraft.play_record":Internal.Stat<any>,"minecraft.used:industrialforegoing.infinity_launcher":Internal.Stat<any>,"minecraft.used:minecraft.stone":Internal.Stat<any>,"minecraft.custom:minecraft.sprint_one_cm":Internal.Stat<any>,"minecraft.dropped:itemfilters.tag":Internal.Stat<any>,"minecraft.used:astralsorcery.marble_raw":Internal.Stat<any>,"minecraft.custom:minecraft.inspect_hopper":Internal.Stat<any>,"minecraft.used:tconstruct.molten_enderium_bucket":Internal.Stat<any>,"minecraft.used:mekanism.configurator":Internal.Stat<any>,"minecraft.used:minecraft.potion":Internal.Stat<any>,"minecraft.used:ars_nouveau.dominion_wand":Internal.Stat<any>,"minecraft.used:quark.matrix_enchanter":Internal.Stat<any>,"minecraft.custom:immersiveengineering.wire_deaths":Internal.Stat<any>,"minecraft.used:tconstruct.part_builder":Internal.Stat<any>,"minecraft.used:byg.cherry_planks":Internal.Stat<any>,"minecraft.used:industrialforegoing.fertilizer":Internal.Stat<any>,"minecraft.used:immersiveengineering.metal_press":Internal.Stat<any>,"minecraft.used:ars_nouveau.mana_jar":Internal.Stat<any>,"minecraft.used:atum.desert_wolf_spawn_egg":Internal.Stat<any>,"minecraft.picked_up:create.wheat_flour":Internal.Stat<any>,"minecraft.picked_up:minecraft.trident":Internal.Stat<any>,"minecraft.used:thermal.device_collector":Internal.Stat<any>,"minecraft.killed:alexsmobs.raccoon":Internal.Stat<any>,"minecraft.used:alexsmobs.spawn_egg_raccoon":Internal.Stat<any>,"minecraft.killed:minecraft.wandering_trader":Internal.Stat<any>,"minecraft.dropped:astralsorcery.attuned_celestial_crystal":Internal.Stat<any>,"minecraft.used:tconstruct.crafting_station":Internal.Stat<any>,"minecraft.used:minecraft.water_bucket":Internal.Stat<any>,"minecraft.picked_up:kubejs.superheated_steel_ingot":Internal.Stat<any>,"minecraft.killed:resourcefulbees.constantan_bee":Internal.Stat<any>,"minecraft.picked_up:atum.stoneguard_greatsword":Internal.Stat<any>,"minecraft.used:minecraft.torch":Internal.Stat<any>,"teamkill.dark_red":Internal.ScoreCriteria,"minecraft.custom:minecraft.enchant_item":Internal.Stat<any>,"minecraft.picked_up:tetra.modular_sword":Internal.Stat<any>,"minecraft.used:atum.assassin_spawn_egg":Internal.Stat<any>,"minecraft.picked_up:astralsorcery.aquamarine":Internal.Stat<any>,"minecraft.picked_up:tconstruct.seared_lantern":Internal.Stat<any>,"minecraft.mined:minecraft.grass_block":Internal.Stat<any>,"minecraft.picked_up:undergarden.brute_tusk":Internal.Stat<any>,"minecraft.used:littlelogistics.fluid_hopper":Internal.Stat<any>,"minecraft.used:minecraft.chest":Internal.Stat<any>,"minecraft.used:occultism.spawn_egg/foliot":Internal.Stat<any>,"minecraft.killed:alexsmobs.mungus":Internal.Stat<any>,"minecraft.used:chipped.glassblower":Internal.Stat<any>,"xp":Internal.ScoreCriteria,"minecraft.used:betterendforge.spawn_egg_shadow_walker":Internal.Stat<any>,"killedByTeam.light_purple":Internal.ScoreCriteria,"minecraft.used:chipped.special_soul_lantern_1":Internal.Stat<any>,"minecraft.killed:atum.bandit_warlord":Internal.Stat<any>,"minecraft.picked_up:astralsorcery.wand":Internal.Stat<any>,"minecraft.used:betterendforge.infusion_pedestal":Internal.Stat<any>,"minecraft.killed:undergarden.muncher":Internal.Stat<any>,"minecraft.custom:minecraft.time_since_rest":Internal.Stat<any>,"minecraft.killed:betterendforge.shadow_walker":Internal.Stat<any>,"minecraft.used:ars_nouveau.wixie_charm":Internal.Stat<any>,"minecraft.used:masterfulmachinery.auto_iridescent_altar_starlight_port_astral_starlight_input":Internal.Stat<any>,"minecraft.used:undergarden.sploogie_spawn_egg":Internal.Stat<any>,"minecraft.killed:undergarden.dweller":Internal.Stat<any>,"minecraft.custom:minecraft.time_since_death":Internal.Stat<any>,"minecraft.dropped:minecraft.ink_sac":Internal.Stat<any>,"minecraft.used:environmental.cattail":Internal.Stat<any>,"minecraft.picked_up:create.andesite_alloy":Internal.Stat<any>,"minecraft.used:integrateddynamics.part_world_reader":Internal.Stat<any>,"minecraft.used:astralsorcery.celestial_gateway":Internal.Stat<any>,"minecraft.custom:minecraft.clean_banner":Internal.Stat<any>,"minecraft.killed:occultism.afrit_wild":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.diamond_chunk":Internal.Stat<any>,"minecraft.used:atum.barbarian_spawn_egg":Internal.Stat<any>,"minecraft.used:mekanism.basic_fluid_tank":Internal.Stat<any>,"minecraft.used:minecraft.granite":Internal.Stat<any>,"minecraft.picked_up:alexsmobs.cockroach_wing_fragment":Internal.Stat<any>,"killedByTeam.green":Internal.ScoreCriteria,"minecraft.used:mcwwindows.one_way_glass":Internal.Stat<any>,"minecraft.picked_up:undergarden.cloggrum_nugget":Internal.Stat<any>,"minecraft.used:thermal.fluid_cell":Internal.Stat<any>,"minecraft.used:resourcefulbees.abbee_bee_spawn_egg":Internal.Stat<any>,"minecraft.used:supplementaries.speaker_block":Internal.Stat<any>,"minecraft.used:decorative_blocks.chain":Internal.Stat<any>,"minecraft.custom:minecraft.inspect_dropper":Internal.Stat<any>,"minecraft.picked_up:thermal.tin_coin":Internal.Stat<any>,"minecraft.custom:minecraft.bounties_done_1":Internal.Stat<any>,"minecraft.custom:minecraft.bounties_done_0":Internal.Stat<any>,"minecraft.custom:minecraft.bounties_done_3":Internal.Stat<any>,"minecraft.picked_up:minecraft.end_stone":Internal.Stat<any>,"minecraft.custom:minecraft.bounties_done_2":Internal.Stat<any>,"minecraft.custom:minecraft.use_wand":Internal.Stat<any>,"minecraft.custom:minecraft.fill_cauldron":Internal.Stat<any>,"minecraft.used:undergarden.scintling_spawn_egg":Internal.Stat<any>,"minecraft.dropped:minecraft.polished_andesite":Internal.Stat<any>,"minecraft.picked_up:astralsorcery.attuned_celestial_crystal":Internal.Stat<any>,"minecraft.used:alexsmobs.spawn_egg_tiger":Internal.Stat<any>,"minecraft.used:astralsorcery.chalice":Internal.Stat<any>,"minecraft.killed:occultism.foliot":Internal.Stat<any>,"minecraft.killed:minecraft.blaze":Internal.Stat<any>,"minecraft.used:atum.camel_spawn_egg":Internal.Stat<any>,"minecraft.picked_up:materialis.psimetal_exosuit_helmet":Internal.Stat<any>,"minecraft.custom:minecraft.play_one_minute":Internal.Stat<any>,"minecraft.used:astralsorcery.marble_pillar":Internal.Stat<any>,"minecraft.used:thermal.glowstone_tnt":Internal.Stat<any>,"minecraft.used:minecraft.netherrack":Internal.Stat<any>,"minecraft.picked_up:appliedenergistics2.charged_certus_quartz_crystal":Internal.Stat<any>,"minecraft.picked_up:tetra.modular_shield":Internal.Stat<any>,"totalKillCount":Internal.ScoreCriteria,"minecraft.used:constructionwand.diamond_wand":Internal.Stat<any>,"deathCount":Internal.ScoreCriteria,"teamkill.gray":Internal.ScoreCriteria,"minecraft.used:tetra.basic_workbench":Internal.Stat<any>,"minecraft.used:minecraft.fire_charge":Internal.Stat<any>,"minecraft.used:create.tree_fertilizer":Internal.Stat<any>,"minecraft.custom:minecraft.open_enderchest":Internal.Stat<any>,"minecraft.killed:alexsmobs.komodo_dragon":Internal.Stat<any>,"minecraft.used:create.chute":Internal.Stat<any>,"minecraft.crafted:minecraft.charcoal":Internal.Stat<any>,"minecraft.used:immersiveengineering.rs_engineering":Internal.Stat<any>,"minecraft.used:minecraft.writable_book":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_smithing_table":Internal.Stat<any>,"minecraft.used:minecraft.bone_meal":Internal.Stat<any>,"minecraft.used:dummmmmmy.target_dummy_placer":Internal.Stat<any>,"teamkill.black":Internal.ScoreCriteria,"minecraft.dropped:minecraft.ender_pearl":Internal.Stat<any>,"minecraft.used:minecraft.obsidian":Internal.Stat<any>,"minecraft.killed:undergarden.forgotten_guardian":Internal.Stat<any>,"minecraft.killed:ars_nouveau.whelp":Internal.Stat<any>,"minecraft.dropped:appliedenergistics2.quantum_entangled_singularity":Internal.Stat<any>,"minecraft.killed:betterendforge.cubozoa":Internal.Stat<any>,"minecraft.picked_up:upgrade_aquatic.squid_bucket":Internal.Stat<any>,"minecraft.picked_up:minecraft.feather":Internal.Stat<any>,"minecraft.used:minecraft.oak_leaves":Internal.Stat<any>,"minecraft.killed:atum.nomad":Internal.Stat<any>,"minecraft.used:astralsorcery.spectral_relay":Internal.Stat<any>,"minecraft.used:masterfulmachinery.structure_gen_device":Internal.Stat<any>,"minecraft.used:tconstruct.tinker_station":Internal.Stat<any>,"minecraft.used:appliedenergistics2.network_tool":Internal.Stat<any>,"minecraft.crafted:minecraft.stone":Internal.Stat<any>,"minecraft.killed:undergarden.scintling":Internal.Stat<any>,"minecraft.killed:occultism.wild_hunt_wither_skeleton":Internal.Stat<any>,"minecraft.used:undergarden.muncher_spawn_egg":Internal.Stat<any>,"minecraft.killed:atum.camel":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_cartography_table":Internal.Stat<any>,"minecraft.picked_up:upgrade_aquatic.glowing_ink_sac":Internal.Stat<any>,"minecraft.custom:minecraft.tune_noteblock":Internal.Stat<any>,"minecraft.crafted:astralsorcery.celestial_gateway":Internal.Stat<any>,"minecraft.dropped:appliedenergistics2.ender_dust":Internal.Stat<any>,"minecraft.picked_up:materialis.psimetal_exosuit_chestplate":Internal.Stat<any>,"minecraft.used:minecraft.oak_planks":Internal.Stat<any>,"minecraft.used:astralsorcery.altar_attunement":Internal.Stat<any>,"minecraft.used:environmental.koi":Internal.Stat<any>,"minecraft.custom:minecraft.raid_trigger":Internal.Stat<any>,"minecraft.mined:environmental.giant_tall_grass":Internal.Stat<any>,"minecraft.used:integrateddynamics.cable":Internal.Stat<any>,"teamkill.dark_aqua":Internal.ScoreCriteria,"minecraft.picked_up:minecraft.soul_sand":Internal.Stat<any>,"minecraft.used:occultism.spawn_egg/possessed_skeleton":Internal.Stat<any>,"killedByTeam.dark_aqua":Internal.ScoreCriteria,"minecraft.used:mekanism.creative_energy_cube":Internal.Stat<any>,"minecraft.custom:minecraft.leave_game":Internal.Stat<any>,"minecraft.used:tconstruct.tinkers_anvil":Internal.Stat<any>,"minecraft.killed:undergarden.gloomper":Internal.Stat<any>,"minecraft.used:occultism.dimensional_mineshaft":Internal.Stat<any>,"minecraft.used:minecraft.creeper_spawn_egg":Internal.Stat<any>,"minecraft.used:minecraft.milk_bucket":Internal.Stat<any>,"minecraft.dropped:minecraft.iron_ingot":Internal.Stat<any>,"minecraft.mined:projectvibrantjourneys.short_grass":Internal.Stat<any>,"minecraft.crafted:minecraft.diamond_axe":Internal.Stat<any>,"minecraft.used:undergarden.brute_spawn_egg":Internal.Stat<any>,"minecraft.used:thermal.redstone_grenade":Internal.Stat<any>,"minecraft.killed:minecraft.squid":Internal.Stat<any>,"minecraft.custom:minecraft.crouch_one_cm":Internal.Stat<any>,"minecraft.picked_up:immersiveengineering.shader_bag_epic":Internal.Stat<any>,"minecraft.used:minecraft.command_block":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_stonecutter":Internal.Stat<any>,"minecraft.picked_up:appliedenergistics2.singularity":Internal.Stat<any>,"minecraft.used:undergarden.stoneborn_spawn_egg":Internal.Stat<any>,"minecraft.custom:minecraft.traded_with_villager":Internal.Stat<any>,"minecraft.used:astralsorcery.attunement_altar":Internal.Stat<any>,"minecraft.custom:minecraft.damage_blocked_by_shield":Internal.Stat<any>,"minecraft.used:minecraft.piston":Internal.Stat<any>,"minecraft.used:thermal.fluid_reservoir":Internal.Stat<any>,"minecraft.picked_up:ars_nouveau.arcane_pedestal":Internal.Stat<any>,"minecraft.picked_up:undergarden.masticator_scales":Internal.Stat<any>,"minecraft.used:undergarden.nargoyle_spawn_egg":Internal.Stat<any>,"minecraft.custom:minecraft.damage_dealt":Internal.Stat<any>,"minecraft.used:ae2fc.part_fluid_pattern_terminal":Internal.Stat<any>,"minecraft.picked_up:botania.brew_flask":Internal.Stat<any>,"minecraft.used:appliedenergistics2.wireless_access_point":Internal.Stat<any>,"minecraft.picked_up:minecraft.kelp":Internal.Stat<any>,"minecraft.used:projectvibrantjourneys.snail_spawn_egg":Internal.Stat<any>,"minecraft.used:atum.bandit_warlord_spawn_egg":Internal.Stat<any>,"minecraft.killed:occultism.possessed_endermite":Internal.Stat<any>,"minecraft.used:custommachinery.custom_machine_item":Internal.Stat<any>,"minecraft.used:thermal.fire_grenade":Internal.Stat<any>,"teamkill.green":Internal.ScoreCriteria,"minecraft.crafted:minecraft.oak_planks":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.copper_chunk":Internal.Stat<any>,"minecraft.picked_up:quark.ravager_hide":Internal.Stat<any>,"minecraft.used:alexsmobs.spawn_egg_komodo_dragon":Internal.Stat<any>,"minecraft.custom:minecraft.fly_one_cm":Internal.Stat<any>,"minecraft.used:alexsmobs.spawn_egg_roadrunner":Internal.Stat<any>,"minecraft.used:trofers.small_trophy":Internal.Stat<any>,"minecraft.custom:minecraft.walk_on_water_one_cm":Internal.Stat<any>,"minecraft.custom:minecraft.bounties_taken":Internal.Stat<any>,"minecraft.picked_up:waystones.warp_scroll":Internal.Stat<any>,"minecraft.picked_up:ars_nouveau.whelp_charm":Internal.Stat<any>,"minecraft.used:masterfulmachinery.projector":Internal.Stat<any>,"minecraft.used:minecraft.trident":Internal.Stat<any>,"minecraft.killed:undergarden.stoneborn":Internal.Stat<any>,"minecraft.used:appliedenergistics2.security_station":Internal.Stat<any>,"minecraft.used:create.schematic_table":Internal.Stat<any>,"minecraft.used:naturesaura.auto_crafter":Internal.Stat<any>,"minecraft.custom:minecraft.damage_taken":Internal.Stat<any>,"minecraft.picked_up:materialis.psimetal_exosuit_boots":Internal.Stat<any>,"minecraft.picked_up:sushigocrafting.tobiko":Internal.Stat<any>,"minecraft.used:appliedenergistics2.certus_quartz_wrench":Internal.Stat<any>,"minecraft.killed:minecraft.ravager":Internal.Stat<any>,"minecraft.used:mekanism.ultimate_logistical_transporter":Internal.Stat<any>,"minecraft.used:kubejs.matter_block":Internal.Stat<any>,"minecraft.picked_up:itemfilters.tag":Internal.Stat<any>,"minecraft.custom:minecraft.interact_with_brewingstand":Internal.Stat<any>,"minecraft.used:thermal.explosive_grenade":Internal.Stat<any>,"minecraft.picked_up:tconstruct.pattern":Internal.Stat<any>,"minecraft.used:ars_nouveau.arcane_pedestal":Internal.Stat<any>,"minecraft.used:minecraft.furnace":Internal.Stat<any>,"minecraft.picked_up:minecraft.compass":Internal.Stat<any>,"killedByTeam.black":Internal.ScoreCriteria,"minecraft.custom:minecraft.interact_with_loom":Internal.Stat<any>,"minecraft.picked_up:ars_nouveau.wixie_charm":Internal.Stat<any>,"teamkill.yellow":Internal.ScoreCriteria,"minecraft.used:tconstruct.seared_lantern":Internal.Stat<any>,"minecraft.killed:atum.brigand":Internal.Stat<any>,"minecraft.used:redstone_arsenal.flux_controller":Internal.Stat<any>,"minecraft.picked_up:tconstruct.copper_can":Internal.Stat<any>,"minecraft.killed:projectvibrantjourneys.snail":Internal.Stat<any>,"minecraft.picked_up:minecraft.crafting_table":Internal.Stat<any>,"minecraft.dropped:waystones.warp_scroll":Internal.Stat<any>,"minecraft.used:astralsorcery.marble_runed":Internal.Stat<any>,"minecraft.used:tconstruct.scorched_anvil":Internal.Stat<any>,"teamkill.dark_gray":Internal.ScoreCriteria,"minecraft.killed:occultism.afrit":Internal.Stat<any>,"minecraft.picked_up:minecraft.beef":Internal.Stat<any>,"minecraft.used:tconstruct.scorched_fuel_gauge":Internal.Stat<any>,"minecraft.picked_up:emendatusenigmatica.lead_chunk":Internal.Stat<any>,"teamkill.aqua":Internal.ScoreCriteria,"minecraft.custom:minecraft.interact_with_smoker":Internal.Stat<any>,"minecraft.killed:minecraft.creeper":Internal.Stat<any>,"minecraft.picked_up:appliedenergistics2.ender_dust":Internal.Stat<any>,"killedByTeam.dark_gray":Internal.ScoreCriteria,"minecraft.used:minecraft.ravager_spawn_egg":Internal.Stat<any>};
        static readonly field_96642_c: Internal.ScoreCriteria;
        static readonly field_96640_e: Internal.ScoreCriteria;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type ScoreCriteria_ = ScoreCriteria;
    interface IEventListener {
        listenerName(): string;
        invoke(arg0: net.minecraftforge.eventbus.api.Event): void;
        (arg0: net.minecraftforge.eventbus.api.Event): void;
    }
    type IEventListener_ = ((arg0: net.minecraftforge.eventbus.api.Event)=>void) | IEventListener;
    class DestroyBlockProgress extends Document.Object implements Internal.Comparable<Internal.DestroyBlockProgress> {
        func_82744_b(arg0: number): void;
        func_180246_b(): BlockPos;
        func_82743_f(): number;
        func_73107_a(arg0: number): void;
        compareTo(arg0: Internal.DestroyBlockProgress): number;
        compareTo(arg0: any): number;
        func_73106_e(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: BlockPos);
    }
    type DestroyBlockProgress_ = DestroyBlockProgress;
    class Widget extends Document.Object implements Internal.IScreenWrapper {
        static isMouseButtonDown(button: Internal.MouseButton): boolean;
        closeGui(openPrevScreen: boolean): void;
        closeGui(): void;
        setY(v: number): void;
        collidesWith(x: number, y: number, w: number, h: number): boolean;
        setX(v: number): void;
        shouldDraw(): boolean;
        acceptGhostIngredient(ingredient: any): void;
        isGhostIngredientTarget(ingredient: any): boolean;
        run(): void;
        getGui(): Internal.BaseScreen;
        mousePressed(button: Internal.MouseButton): boolean;
        setPos(x: number, y: number): void;
        getTitle(): Internal.ITextComponent;
        static getClipboardString(): string;
        static isCtrlKeyDown(): boolean;
        updateMouseOver(mouseX: number, mouseY: number): void;
        getScreen(): Internal.MainWindow;
        getMouseY(): number;
        onClosed(): void;
        isMouseOver(): boolean;
        keyPressed(key: dev.ftb.mods.ftblibrary.ui.input.Key): boolean;
        getMouseX(): number;
        openGui(): void;
        setPosAndSize(x: number, y: number, w: number, h: number): Internal.Widget;
        tick(): void;
        setHeight(v: number): void;
        addMouseOverText(list: Internal.TooltipList): void;
        playClickSound(): void;
        handleClick(click: string): boolean;
        handleClick(scheme: string, path: string): boolean;
        isEnabled(): boolean;
        charTyped(c: string, modifiers: Internal.KeyModifiers): boolean;
        mouseDoubleClicked(button: Internal.MouseButton): boolean;
        mouseScrolled(scroll: number): boolean;
        shouldAddMouseOverText(): boolean;
        openAfter(runnable: Internal.Runnable_): Internal.Runnable;
        closeContextMenu(): void;
        mouseReleased(button: Internal.MouseButton): void;
        setSize(w: number, h: number): void;
        getPartialTicks(): number;
        openGuiLater(): void;
        static isKeyDown(key: number): boolean;
        keyReleased(key: dev.ftb.mods.ftblibrary.ui.input.Key): void;
        static setClipboardString(string: string): void;
        static isShiftKeyDown(): boolean;
        getCursor(): Internal.CursorType;
        getWidgetType(): Internal.WidgetType;
        draw(matrixStack: Internal.MatrixStack, theme: Internal.Theme, x: number, y: number, w: number, h: number): void;
        checkMouseOver(mouseX: number, mouseY: number): boolean;
        setWidth(v: number): void;
        openContextMenu(panel: Internal.Panel): void;
        getX(): number;
        getY(): number;
        getIngredientUnderMouse(): any;
        posX: number;
        parent: Internal.Panel;
        posY: number;
        width: number;
        height: number;
        get mouseX(): number;
        get cursor(): Internal.CursorType;
        get ingredientUnderMouse(): any;
        get clipboardString(): string;
        get mouseY(): number;
        get shiftKeyDown(): boolean;
        get mouseOver(): boolean;
        get screen(): Internal.MainWindow;
        get title(): Internal.ITextComponent;
        get enabled(): boolean;
        get widgetType(): Internal.WidgetType;
        get ctrlKeyDown(): boolean;
        get x(): number;
        get y(): number;
        get gui(): Internal.BaseScreen;
        get partialTicks(): number;
        set clipboardString(string: string);
        set x(v: number);
        set y(v: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(p: Internal.Panel);
    }
    type Widget_ = Widget;
    class SingleJigsawPiece extends Internal.JigsawPiece implements Internal.SingleJigsawPieceAccessor {
        getTemplate(): Internal.Either<any, any>;
        getProcessors(): java_.util.function_.Supplier<any>;
        func_214857_a(arg0: Internal.TemplateManager, arg1: BlockPos, arg2: Internal.Rotation_, arg3: boolean): Internal.List<Internal.Template$BlockInfo>;
        field_236839_c_: Internal.Either<ResourceLocation, Internal.Template>;
        static readonly field_236838_b_: Internal.Codec<Internal.SingleJigsawPiece>;
        get template(): Internal.Either<any, any>;
        get processors(): java_.util.function_.Supplier<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Template);
    }
    type SingleJigsawPiece_ = SingleJigsawPiece;
    interface ObjectInput extends Internal.DataInput, Internal.AutoCloseable {
        read(arg0: number[], arg1: number, arg2: number): number;
        read(arg0: number[]): number;
        read(): number;
        available(): number;
        skip(arg0: number): number;
        close(): void;
        readObject(): any;
    }
    type ObjectInput_ = ObjectInput;
    interface BufferVertexType <T> extends Internal.VertexType<T> {
        getBufferVertexFormat(): Internal.BufferVertexFormat;
        (): Internal.BufferVertexFormat;
    }
    type BufferVertexType_<T> = (()=>Internal.BufferVertexFormat) | BufferVertexType<T>;
    interface IIngredientSerializer <T> {
        parse(arg0: Internal.JsonObject): T;
        parse(arg0: Internal.PacketBuffer): T;
        write(arg0: Internal.PacketBuffer, arg1: T): void;
    }
    type IIngredientSerializer_<T> = IIngredientSerializer<T>;
    class AttributedCharacterIterator$Attribute extends Document.Object implements Internal.Serializable {
        static readonly LANGUAGE: Internal.AttributedCharacterIterator$Attribute;
        static readonly INPUT_METHOD_SEGMENT: Internal.AttributedCharacterIterator$Attribute;
        static readonly READING: Internal.AttributedCharacterIterator$Attribute;
    }
    type AttributedCharacterIterator$Attribute_ = AttributedCharacterIterator$Attribute;
    class MinecraftProfileTexture$Type extends Internal.Enum<Internal.MinecraftProfileTexture$Type> {
        static valueOf(arg0: string): Internal.MinecraftProfileTexture$Type;
        static values(): Internal.MinecraftProfileTexture$Type[];
        static readonly ELYTRA: Internal.MinecraftProfileTexture$Type;
        static readonly SKIN: Internal.MinecraftProfileTexture$Type;
        static readonly CAPE: Internal.MinecraftProfileTexture$Type;
    }
    type MinecraftProfileTexture$Type_ = "skin" | "cape" | "elytra" | MinecraftProfileTexture$Type;
    interface AccessorBiomeManager {
        getZoomer(): Internal.IBiomeMagnifier;
        (): Internal.IBiomeMagnifier;
    }
    type AccessorBiomeManager_ = (()=>Internal.IBiomeMagnifier) | AccessorBiomeManager;
    class SaveFormat extends Document.Object implements Internal.SaveFormatAccessor {
        func_197712_e(): Internal.Path;
        func_207742_d(arg0: string): boolean;
        invokeReadLevelData(arg0: Internal.File, arg1: Internal.BiFunction_<any,any,any>): any;
        func_237274_c_(arg0: string): Internal.SaveFormat$LevelSave;
        func_75799_b(): Internal.List<Internal.WorldSummary>;
        func_215781_c(): Internal.Path;
        static func_237269_a_(arg0: Internal.Path): Internal.SaveFormat;
        func_90033_f(arg0: string): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Path, arg1: Internal.Path, arg2: Internal.DataFixer);
    }
    type SaveFormat_ = SaveFormat;
    interface FileNameMap {
        getContentTypeFor(arg0: string): string;
        (arg0: string): string;
    }
    type FileNameMap_ = ((arg0: string)=>string) | FileNameMap;
    interface ChannelFuture extends Internal.Future<void> {
        removeListeners(...arg0: Internal.GenericFutureListener<Internal.Future<void>>[]): Internal.ChannelFuture;
        isVoid(): boolean;
        syncUninterruptibly(): Internal.ChannelFuture;
        channel(): Internal.Channel;
        await(): Internal.ChannelFuture;
        awaitUninterruptibly(): Internal.ChannelFuture;
        removeListener(arg0: Internal.GenericFutureListener_<Internal.Future_<void>>): Internal.ChannelFuture;
        addListeners(...arg0: Internal.GenericFutureListener<Internal.Future<void>>[]): Internal.ChannelFuture;
        sync(): Internal.ChannelFuture;
        addListener(arg0: Internal.GenericFutureListener_<Internal.Future_<void>>): Internal.ChannelFuture;
    }
    type ChannelFuture_ = ChannelFuture;
    abstract class AbstractGui extends Document.Object {
        static func_238461_a_(arg0: Internal.Matrix4f, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        func_238459_a_(arg0: number, arg1: number, arg2: Internal.BiConsumer_<number, number>): void;
        static func_238462_a_(arg0: Internal.Matrix4f, arg1: Internal.BufferBuilder, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): void;
        static func_238463_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): void;
        static func_238467_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        static func_238466_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number): void;
        static func_238464_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        static func_238469_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number): void;
        func_230927_p_(): number;
        static func_238472_a_(arg0: Internal.MatrixStack, arg1: Internal.FontRenderer, arg2: Internal.ITextComponent_, arg3: number, arg4: number, arg5: number): void;
        static func_238471_a_(arg0: Internal.MatrixStack, arg1: Internal.FontRenderer, arg2: string, arg3: number, arg4: number, arg5: number): void;
        static func_238470_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.TextureAtlasSprite): void;
        func_230926_e_(arg0: number): void;
        static func_238475_b_(arg0: Internal.MatrixStack, arg1: Internal.FontRenderer, arg2: Internal.ITextComponent_, arg3: number, arg4: number, arg5: number): void;
        func_238474_b_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        static func_238476_c_(arg0: Internal.MatrixStack, arg1: Internal.FontRenderer, arg2: string, arg3: number, arg4: number, arg5: number): void;
        static readonly field_230665_h_: ResourceLocation;
        static readonly field_230663_f_: ResourceLocation;
        static readonly field_230664_g_: ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AbstractGui_ = AbstractGui;
    class CodingErrorAction extends Document.Object {
        static readonly REPORT: Internal.CodingErrorAction;
        static readonly IGNORE: Internal.CodingErrorAction;
        static readonly REPLACE: Internal.CodingErrorAction;
    }
    type CodingErrorAction_ = CodingErrorAction;
    class VillagerHostilesSensor extends Internal.Sensor<Internal.LivingEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type VillagerHostilesSensor_ = VillagerHostilesSensor;
    interface Object2ObjectMap$FastEntrySet <K, V> extends Internal.ObjectSet<Internal.Object2ObjectMap$Entry<K, V>> {
        fastForEach(arg0: Internal.Consumer_<Internal.Object2ObjectMap$Entry_<Internal.Object2ObjectMap$Entry_<Internal.Object2ObjectMap$Entry_<K, V>, V>, V>>): void;
        fastIterator(): Internal.ObjectIterator<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<K, V>, V>, V>>;
        (): Internal.ObjectIterator<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<K, V>, V>, V>>;
    }
    type Object2ObjectMap$FastEntrySet_<K, V> = (()=>Internal.ObjectIterator<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<Internal.Object2ObjectMap$Entry<K, V>, V>, V>>) | Object2ObjectMap$FastEntrySet<K, V>;
    interface SeekableByteChannel extends Internal.ByteChannel {
        read(arg0: Internal.ByteBuffer): number;
        truncate(arg0: number): Internal.SeekableByteChannel;
        size(): number;
        position(arg0: number): Internal.SeekableByteChannel;
        position(): number;
        write(arg0: Internal.ByteBuffer): number;
    }
    type SeekableByteChannel_ = SeekableByteChannel;
    interface ILootSerializer <T> {
        func_230424_a_(arg0: Internal.JsonObject, arg1: T, arg2: Internal.JsonSerializationContext): void;
        func_230423_a_(arg0: Internal.JsonObject, arg1: Internal.JsonDeserializationContext_): T;
    }
    type ILootSerializer_<T> = ILootSerializer<T>;
    interface DragSourceMotionListener extends Internal.EventListener {
        dragMouseMoved(arg0: Internal.DragSourceDragEvent): void;
        (arg0: Internal.DragSourceDragEvent): void;
    }
    type DragSourceMotionListener_ = ((arg0: Internal.DragSourceDragEvent)=>void) | DragSourceMotionListener;
    interface Iterator <E> {
        next(): E;
        hasNext(): boolean;
        forEachRemaining(arg0: Internal.Consumer_<E>): void;
        remove(): void;
    }
    type Iterator_<E> = Iterator<E>;
    class AccessibleState extends Internal.AccessibleBundle {
        static readonly ACTIVE: Internal.AccessibleState;
        static readonly MANAGES_DESCENDANTS: Internal.AccessibleState;
        static readonly EDITABLE: Internal.AccessibleState;
        static readonly FOCUSED: Internal.AccessibleState;
        static readonly CHECKED: Internal.AccessibleState;
        static readonly VISIBLE: Internal.AccessibleState;
        static readonly PRESSED: Internal.AccessibleState;
        static readonly SINGLE_LINE: Internal.AccessibleState;
        static readonly VERTICAL: Internal.AccessibleState;
        static readonly COLLAPSED: Internal.AccessibleState;
        static readonly INDETERMINATE: Internal.AccessibleState;
        static readonly ARMED: Internal.AccessibleState;
        static readonly SHOWING: Internal.AccessibleState;
        static readonly FOCUSABLE: Internal.AccessibleState;
        static readonly BUSY: Internal.AccessibleState;
        static readonly EXPANDED: Internal.AccessibleState;
        static readonly MULTISELECTABLE: Internal.AccessibleState;
        static readonly ICONIFIED: Internal.AccessibleState;
        static readonly RESIZABLE: Internal.AccessibleState;
        static readonly SELECTABLE: Internal.AccessibleState;
        static readonly EXPANDABLE: Internal.AccessibleState;
        static readonly MODAL: Internal.AccessibleState;
        static readonly SELECTED: Internal.AccessibleState;
        static readonly TRUNCATED: Internal.AccessibleState;
        static readonly OPAQUE: Internal.AccessibleState;
        static readonly ENABLED: Internal.AccessibleState;
        static readonly HORIZONTAL: Internal.AccessibleState;
        static readonly TRANSIENT: Internal.AccessibleState;
        static readonly MULTI_LINE: Internal.AccessibleState;
    }
    type AccessibleState_ = AccessibleState;
    class IntegerProperty extends Internal.Property<number> {
        static func_177719_a(arg0: string, arg1: number, arg2: number): Internal.IntegerProperty;
        func_185929_b(arg0: string): Internal.Optional<number>;
        func_177700_c(): Internal.Collection<number>;
        func_177702_a(arg0: number): string;
    }
    type IntegerProperty_ = IntegerProperty;
    interface IForgeWorldServer extends Internal.IForgeWorld {
        getWorldServer(): Internal.ServerWorld;
    }
    type IForgeWorldServer_ = IForgeWorldServer;
    interface BucketItemKJS {
        getFluidKJS(): Internal.Fluid;
        (): Internal.Fluid;
    }
    type BucketItemKJS_ = (()=>Internal.Fluid) | BucketItemKJS;
    interface IForgeTransformationMatrix {
        inverse(): Internal.TransformationMatrix;
        applyOrigin(arg0: Internal.Vector3f): Internal.TransformationMatrix;
        blockCornerToCenter(): Internal.TransformationMatrix;
        compose(arg0: Internal.TransformationMatrix): Internal.TransformationMatrix;
        rotateTransform(arg0: Internal.Direction_): Internal.Direction;
        isIdentity(): boolean;
        transformPosition(arg0: Internal.Vector4f): void;
        getTransformaion(): Internal.TransformationMatrix;
        transformNormal(arg0: Internal.Vector3f): void;
        push(arg0: Internal.MatrixStack): void;
        blockCenterToCorner(): Internal.TransformationMatrix;
    }
    type IForgeTransformationMatrix_ = IForgeTransformationMatrix;
    interface BiomeManagerFTBC {
        getBiomeZoomSeedFTBC(): number;
        (): number;
    }
    type BiomeManagerFTBC_ = (()=>number) | BiomeManagerFTBC;
    interface IGlowable {
        isGlowing(): boolean;
        setGlowing(arg0: boolean): boolean;
    }
    type IGlowable_ = IGlowable;
    class NetworkDirection extends Internal.Enum<Internal.NetworkDirection> {
        getReceptionSide(): Internal.LogicalSide;
        getEvent(arg0: Internal.ICustomPacket<any>, arg1: java_.util.function_.Supplier_<Internal.NetworkEvent$Context_>): Internal.NetworkEvent;
        static directionFor<T_>(arg0: Internal.Class<T_>): Internal.NetworkDirection;
        buildPacket<T_>(arg0: org.apache.commons.lang3.tuple.Pair<Internal.PacketBuffer, number>, arg1: ResourceLocation_): Internal.ICustomPacket<T_>;
        static valueOf(arg0: string): Internal.NetworkDirection;
        static values(): Internal.NetworkDirection[];
        reply(): Internal.NetworkDirection;
        getOriginationSide(): Internal.LogicalSide;
        static readonly LOGIN_TO_CLIENT: Internal.NetworkDirection;
        static readonly PLAY_TO_SERVER: Internal.NetworkDirection;
        static readonly LOGIN_TO_SERVER: Internal.NetworkDirection;
        static readonly PLAY_TO_CLIENT: Internal.NetworkDirection;
        get receptionSide(): Internal.LogicalSide;
        get originationSide(): Internal.LogicalSide;
    }
    type NetworkDirection_ = "play_to_server" | "play_to_client" | "login_to_server" | "login_to_client" | NetworkDirection;
    interface IServerWorld extends Internal.IWorld {
        func_201672_e(): Internal.ServerWorld;
        func_242417_l(arg0: Internal.Entity): void;
        (): Internal.ServerWorld;
    }
    type IServerWorld_ = (()=>Internal.ServerWorld) | IServerWorld;
    class Framebuffer extends Document.Object {
        func_147610_a(arg0: boolean): void;
        enableStencil(): void;
        isStencilEnabled(): boolean;
        func_216493_b(arg0: boolean): void;
        func_216492_b(arg0: number, arg1: number, arg2: boolean): void;
        func_242996_f(): number;
        func_216491_a(arg0: number, arg1: number, arg2: boolean): void;
        func_242997_g(): number;
        func_147609_e(): void;
        func_178038_a(arg0: number, arg1: number, arg2: boolean): void;
        func_147606_d(): void;
        func_147608_a(): void;
        func_237506_a_(arg0: Internal.Framebuffer): void;
        func_147607_a(arg0: number): void;
        func_147615_c(arg0: number, arg1: number): void;
        func_147612_c(): void;
        func_147611_b(): void;
        func_147604_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        field_147621_c: number;
        field_147622_a: number;
        field_147620_b: number;
        field_147618_d: number;
        field_147616_f: number;
        field_147623_j: number;
        readonly field_147619_e: boolean;
        readonly field_147625_i: number[];
        get stencilEnabled(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: boolean, arg3: boolean);
    }
    type Framebuffer_ = Framebuffer;
    class CUseEntityPacket$Action extends Internal.Enum<Internal.CUseEntityPacket$Action> {
        static valueOf(arg0: string): Internal.CUseEntityPacket$Action;
        static values(): Internal.CUseEntityPacket$Action[];
        static readonly INTERACT_AT: Internal.CUseEntityPacket$Action;
        static readonly INTERACT: Internal.CUseEntityPacket$Action;
        static readonly ATTACK: Internal.CUseEntityPacket$Action;
    }
    type CUseEntityPacket$Action_ = "interact" | "attack" | "interact_at" | CUseEntityPacket$Action;
    abstract class ProjectileEntity extends Internal.Entity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_234615_h_(): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_212361_a(arg0: Internal.Entity): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_234612_a_(arg0: Internal.Entity, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_70186_c(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_234616_v_(): Internal.Entity;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_234611_d_: boolean;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ProjectileEntity>, arg1: Internal.World);
    }
    type ProjectileEntity_ = ProjectileEntity;
    interface Function4 <T1, T2, T3, T4, R> {
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4): R;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function<T4, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.BiFunction<T3, T4, R>>;
        curry(): Internal.Function<T1, Internal.Function3<T2, T3, T4, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4): R;
    }
    type Function4_<T1, T2, T3, T4, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4)=>R) | Function4<T1, T2, T3, T4, R>;
    interface ValueLayout$OfLong extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfLong;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfLong;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout$OfLong;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfLong;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfLong_ = ValueLayout$OfLong;
    interface ExtendedAbstractBlockState {
        getOpacityIfCached(): number;
        isConditionallyFullOpaque(): boolean;
    }
    type ExtendedAbstractBlockState_ = ExtendedAbstractBlockState;
    class RenderGameOverlayEvent$Text extends Internal.RenderGameOverlayEvent$Pre {
        getRight(): Internal.ArrayList<string>;
        getLeft(): Internal.ArrayList<string>;
        get left(): Internal.ArrayList<string>;
        get right(): Internal.ArrayList<string>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MatrixStack, arg1: Internal.RenderGameOverlayEvent, arg2: Internal.ArrayList<string>, arg3: Internal.ArrayList<string>);
    }
    type RenderGameOverlayEvent$Text_ = RenderGameOverlayEvent$Text;
    class EnergizingConfig extends Internal.EnergyConfig {
        getGeneration(arg0: Internal.Tier_): number;
        readonly range: Internal.ForgeConfigSpec$IntValue;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type EnergizingConfig_ = EnergizingConfig;
    abstract class Invokable <T, R> extends Internal.Element implements Internal.GenericDeclaration {
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        getExceptionTypes(): Internal.ImmutableList<Internal.TypeToken<Internal.Throwable>>;
        getDeclaringClass(): Internal.Class<T>;
        getReturnType(): Internal.TypeToken<R>;
        returning<R1_>(arg0: Internal.TypeToken<R1_>): Internal.Invokable<T, R1_>;
        returning<R1_>(arg0: Internal.Class<R1_>): Internal.Invokable<T, R1_>;
        isVarArgs(): boolean;
        getParameters(): Internal.ImmutableList<Internal.Parameter>;
        isOverridable(): boolean;
        static from(arg0: Internal.Method): Internal.Invokable<any, any>;
        static from<T_>(arg0: Internal.Constructor<T_>): Internal.Invokable<T_, T_>;
        invoke(arg0: T, ...arg1: any[]): R;
        getTypeParameters(): any[];
        getOwnerType(): Internal.TypeToken<T>;
        get ownerType(): Internal.TypeToken<T>;
        get exceptionTypes(): Internal.ImmutableList<Internal.TypeToken<Internal.Throwable>>;
        get overridable(): boolean;
        get parameters(): Internal.ImmutableList<Internal.Parameter>;
        get typeParameters(): any[];
        get returnType(): Internal.TypeToken<R>;
        get declaringClass(): Internal.Class<T>;
        get varArgs(): boolean;
    }
    type Invokable_<T, R> = Invokable<T, R>;
    interface EventLoop extends Internal.OrderedEventExecutor, Internal.EventLoopGroup {
        parent(): Internal.EventLoopGroup;
        (): Internal.EventLoopGroup;
    }
    type EventLoop_ = (()=>Internal.EventLoopGroup) | EventLoop;
    class DropTargetDragEvent extends Internal.DropTargetEvent {
        getDropAction(): number;
        getCurrentDataFlavorsAsList(): Internal.List<Internal.DataFlavor>;
        getLocation(): Internal.Point;
        isDataFlavorSupported(arg0: Internal.DataFlavor): boolean;
        rejectDrag(): void;
        acceptDrag(arg0: number): void;
        getCurrentDataFlavors(): Internal.DataFlavor[];
        getSourceActions(): number;
        getTransferable(): Internal.Transferable;
        get sourceActions(): number;
        get transferable(): Internal.Transferable;
        get location(): Internal.Point;
        get currentDataFlavors(): Internal.DataFlavor[];
        get dropAction(): number;
        get currentDataFlavorsAsList(): Internal.List<Internal.DataFlavor>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DropTargetContext, arg1: Internal.Point, arg2: number, arg3: number);
    }
    type DropTargetDragEvent_ = DropTargetDragEvent;
    class ContainerEvent extends Internal.ComponentEvent {
        getContainer(): java_.awt.Container;
        getChild(): Internal.Component;
        static readonly CONTAINER_LAST: 301;
        static readonly COMPONENT_REMOVED: 301;
        static readonly CONTAINER_FIRST: 300;
        static readonly COMPONENT_ADDED: 300;
        get container(): java_.awt.Container;
        get child(): Internal.Component;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Component, arg1: number, arg2: Internal.Component);
    }
    type ContainerEvent_ = ContainerEvent;
    class SOpenSignMenuPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179777_a(): BlockPos;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: BlockPos);
    }
    type SOpenSignMenuPacket_ = SOpenSignMenuPacket;
    class GlVertexFormat$Builder <T> extends Document.Object {
        build(): Internal.GlVertexFormat<T>;
        addElement(type: T, pointer: number, format: Internal.GlVertexAttributeFormat, count: number, normalized: boolean): Internal.GlVertexFormat$Builder<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(type: Internal.Class<T>, stride: number);
    }
    type GlVertexFormat$Builder_<T> = GlVertexFormat$Builder<T>;
    interface TaskType$Provider {
        create(arg0: Internal.Quest): Internal.Task;
        (arg0: Internal.Quest): Internal.Task;
    }
    type TaskType$Provider_ = ((arg0: Internal.Quest)=>Internal.Task) | TaskType$Provider;
    class Heightmap$Type extends Internal.Enum<Internal.Heightmap$Type> implements Internal.IStringSerializable {
        func_222683_c(): boolean;
        func_176610_l(): string;
        func_222681_b(): boolean;
        static valueOf(arg0: string): Internal.Heightmap$Type;
        static values(): Internal.Heightmap$Type[];
        func_203500_b(): string;
        static func_203501_a(arg0: string): Internal.Heightmap$Type;
        func_222684_d(): Internal.Predicate<Internal.BlockState>;
        static readonly OCEAN_FLOOR: Internal.Heightmap$Type;
        static readonly MOTION_BLOCKING_NO_LEAVES: Internal.Heightmap$Type;
        static readonly field_236078_g_: Internal.Codec<Internal.Heightmap$Type>;
        static readonly MOTION_BLOCKING: Internal.Heightmap$Type;
        static readonly WORLD_SURFACE: Internal.Heightmap$Type;
        static readonly OCEAN_FLOOR_WG: Internal.Heightmap$Type;
        static readonly WORLD_SURFACE_WG: Internal.Heightmap$Type;
    }
    type Heightmap$Type_ = "world_surface_wg" | "world_surface" | "ocean_floor_wg" | "ocean_floor" | "motion_blocking" | "motion_blocking_no_leaves" | Heightmap$Type;
    class PointerBuffer extends Internal.CustomBuffer<Internal.PointerBuffer> implements Internal.Comparable<Internal.PointerBuffer> {
        static allocateDirect(arg0: number): Internal.PointerBuffer;
        getFloatBuffer(arg0: number, arg1: number): Internal.FloatBuffer;
        getFloatBuffer(arg0: number): Internal.FloatBuffer;
        getStringUTF8(): string;
        getStringUTF8(arg0: number): string;
        getIntBuffer(arg0: number, arg1: number): Internal.IntBuffer;
        getIntBuffer(arg0: number): Internal.IntBuffer;
        getByteBuffer(arg0: number, arg1: number): Internal.ByteBuffer;
        getByteBuffer(arg0: number): Internal.ByteBuffer;
        putAddressOf(arg0: number, arg1: Internal.CustomBuffer<any>): Internal.PointerBuffer;
        putAddressOf(arg0: Internal.CustomBuffer<any>): Internal.PointerBuffer;
        getShortBuffer(arg0: number): Internal.ShortBuffer;
        getShortBuffer(arg0: number, arg1: number): Internal.ShortBuffer;
        compareTo(arg0: Internal.PointerBuffer): number;
        compareTo(arg0: any): number;
        put(arg0: Internal.IntBuffer): Internal.PointerBuffer;
        put(arg0: Internal.ShortBuffer): Internal.PointerBuffer;
        put(arg0: Internal.FloatBuffer): Internal.PointerBuffer;
        put(arg0: Internal.DoubleBuffer): Internal.PointerBuffer;
        put(arg0: Internal.LongBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.DoubleBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.FloatBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.LongBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.IntBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.ShortBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.ByteBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: number): Internal.PointerBuffer;
        static put(arg0: Internal.ByteBuffer, arg1: number): void;
        put(arg0: number): Internal.PointerBuffer;
        put(arg0: number[]): Internal.PointerBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.PointerBuffer;
        put(arg0: Internal.ByteBuffer): Internal.PointerBuffer;
        put(arg0: number, arg1: Internal.Pointer_): Internal.PointerBuffer;
        put(arg0: Internal.Pointer_): Internal.PointerBuffer;
        static put(arg0: Internal.ByteBuffer, arg1: number, arg2: number): void;
        getStringASCII(arg0: number): string;
        getStringASCII(): string;
        getStringUTF16(arg0: number): string;
        getStringUTF16(): string;
        getPointerBuffer(arg0: number): Internal.PointerBuffer;
        getPointerBuffer(arg0: number, arg1: number): Internal.PointerBuffer;
        get(arg0: number[], arg1: number, arg2: number): Internal.PointerBuffer;
        static get(arg0: Internal.ByteBuffer): number;
        get(): number;
        get(arg0: number): number;
        static get(arg0: Internal.ByteBuffer, arg1: number): number;
        get(arg0: number[]): Internal.PointerBuffer;
        static create(arg0: Internal.ByteBuffer): Internal.PointerBuffer;
        static create(arg0: number, arg1: number): Internal.PointerBuffer;
        getLongBuffer(arg0: number, arg1: number): Internal.LongBuffer;
        getLongBuffer(arg0: number): Internal.LongBuffer;
        getDoubleBuffer(arg0: number): Internal.DoubleBuffer;
        getDoubleBuffer(arg0: number, arg1: number): Internal.DoubleBuffer;
        get stringASCII(): string;
        get stringUTF16(): string;
        get stringUTF8(): string;
    }
    type PointerBuffer_ = PointerBuffer;
    class Random extends Document.Object implements Internal.RandomGenerator, Internal.Serializable {
        nextFloat(): number;
        nextFloat(arg0: number): number;
        nextFloat(arg0: number, arg1: number): number;
        isDeprecated(): boolean;
        nextInt(): number;
        nextInt(arg0: number): number;
        nextInt(arg0: number, arg1: number): number;
        nextLong(): number;
        nextLong(arg0: number, arg1: number): number;
        nextLong(arg0: number): number;
        nextGaussian(): number;
        nextGaussian(arg0: number, arg1: number): number;
        nextDouble(): number;
        nextDouble(arg0: number): number;
        nextDouble(arg0: number, arg1: number): number;
        nextBytes(arg0: number[]): void;
        longs(arg0: number): Internal.LongStream;
        longs(arg0: number, arg1: number): Internal.LongStream;
        longs(arg0: number, arg1: number, arg2: number): Internal.LongStream;
        longs(): Internal.LongStream;
        nextExponential(): number;
        doubles(arg0: number): Internal.DoubleStream;
        doubles(arg0: number, arg1: number, arg2: number): Internal.DoubleStream;
        doubles(arg0: number, arg1: number): Internal.DoubleStream;
        doubles(): Internal.DoubleStream;
        ints(arg0: number): Internal.IntStream;
        ints(): Internal.IntStream;
        ints(arg0: number, arg1: number, arg2: number): Internal.IntStream;
        ints(arg0: number, arg1: number): Internal.IntStream;
        static from(arg0: Internal.RandomGenerator_): Internal.Random;
        nextBoolean(): boolean;
        setSeed(arg0: number): void;
        get deprecated(): boolean;
        set seed(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
        constructor();
    }
    type Random_ = Random;
    class CommandBlockMinecartEntity extends Internal.AbstractMinecartEntity {
        canBeRidden(): boolean;
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        getComparatorLevel(): number;
        getCurrentRailPosition(): BlockPos;
        asKJS(): any;
        shouldDoRailFunctions(): boolean;
        getCartItem(): Internal.ItemStack;
        canRiderInteract(): boolean;
        getMinecart(): Internal.AbstractMinecartEntity;
        getSlopeAdjustment(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_145822_e(): Internal.CommandBlockLogic;
        isPoweredCart(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getMaxCartSpeedOnRail(): number;
        getParts(): Internal.PartEntity<any>[];
        get minecart(): Internal.AbstractMinecartEntity;
        get currentRailPosition(): BlockPos;
        get slopeAdjustment(): number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get poweredCart(): boolean;
        get comparatorLevel(): number;
        get cartItem(): Internal.ItemStack;
        get maxCartSpeedOnRail(): number;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.CommandBlockMinecartEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
    }
    type CommandBlockMinecartEntity_ = CommandBlockMinecartEntity;
    interface TemporalField {
        resolve(arg0: Internal.Map_<Internal.TemporalField_, number>, arg1: Internal.TemporalAccessor, arg2: Internal.ResolverStyle_): Internal.TemporalAccessor;
        getBaseUnit(): Internal.TemporalUnit;
        rangeRefinedBy(arg0: Internal.TemporalAccessor): Internal.ValueRange;
        getDisplayName(arg0: Internal.Locale): string;
        isTimeBased(): boolean;
        adjustInto<R>(arg0: R, arg1: number): R;
        range(): Internal.ValueRange;
        getRangeUnit(): Internal.TemporalUnit;
        toString(): string;
        isDateBased(): boolean;
        getFrom(arg0: Internal.TemporalAccessor): number;
        isSupportedBy(arg0: Internal.TemporalAccessor): boolean;
    }
    type TemporalField_ = TemporalField;
    abstract class PonderInstruction extends Document.Object {
        isBlocking(): boolean;
        reset(arg0: Internal.PonderScene): void;
        static simple(arg0: Internal.Consumer_<Internal.PonderScene_>): Internal.PonderInstruction;
        onScheduled(arg0: Internal.PonderScene): void;
        tick(arg0: Internal.PonderScene): void;
        isComplete(): boolean;
        get blocking(): boolean;
        get complete(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PonderInstruction_ = PonderInstruction;
    interface IGuiIngredient <T> {
        getDisplayedIngredient(): T;
        isInput(): boolean;
        getAllIngredients(): Internal.List<T>;
        drawHighlight(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
    }
    type IGuiIngredient_<T> = IGuiIngredient<T>;
    class CEntityActionPacket$Action extends Internal.Enum<Internal.CEntityActionPacket$Action> {
        static valueOf(arg0: string): Internal.CEntityActionPacket$Action;
        static values(): Internal.CEntityActionPacket$Action[];
        static readonly PRESS_SHIFT_KEY: Internal.CEntityActionPacket$Action;
        static readonly STOP_RIDING_JUMP: Internal.CEntityActionPacket$Action;
        static readonly STOP_SLEEPING: Internal.CEntityActionPacket$Action;
        static readonly START_RIDING_JUMP: Internal.CEntityActionPacket$Action;
        static readonly START_SPRINTING: Internal.CEntityActionPacket$Action;
        static readonly STOP_SPRINTING: Internal.CEntityActionPacket$Action;
        static readonly START_FALL_FLYING: Internal.CEntityActionPacket$Action;
        static readonly RELEASE_SHIFT_KEY: Internal.CEntityActionPacket$Action;
        static readonly OPEN_INVENTORY: Internal.CEntityActionPacket$Action;
    }
    type CEntityActionPacket$Action_ = "press_shift_key" | "release_shift_key" | "stop_sleeping" | "start_sprinting" | "stop_sprinting" | "start_riding_jump" | "stop_riding_jump" | "open_inventory" | "start_fall_flying" | CEntityActionPacket$Action;
    class AirBlock extends Internal.Block {
        rotate(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: Internal.Rotation_): Internal.BlockState;
        getStateAtViewpoint(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Vec3): Internal.BlockState;
        onBlockExploded(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Explosion): void;
        getBedDirection(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): Internal.Direction;
        isBed(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        canHarvestBlock(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.BlockState): boolean;
        getBedSpawnPosition(arg0: Internal.EntityType_<any>, arg1: Internal.BlockState, arg2: Internal.IWorldReader, arg3: BlockPos, arg4: number, arg5: Internal.LivingEntity): Internal.Optional<Vec3>;
        isLadder(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.LivingEntity): boolean;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState, arg1: Internal.IBlockDisplayReader, arg2: BlockPos, arg3: Internal.FluidState): boolean;
        canStickTo(arg0: Internal.BlockState, arg1: Internal.BlockState): boolean;
        onNeighborChange(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): void;
        getPickBlock(arg0: Internal.BlockState, arg1: Internal.RayTraceResult, arg2: Internal.IBlockReader, arg3: BlockPos, arg4: Internal.PlayerEntity): Internal.ItemStack;
        getWeakChanges(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        isBurning(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        canEntityDestroy(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        hasTileEntity(arg0: Internal.BlockState): boolean;
        isPortalFrame(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getExplosionResistance(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): number;
        isScaffolding(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.LivingEntity): boolean;
        observedNeighborChange(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Block_, arg4: BlockPos): void;
        canDropFromExplosion(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): boolean;
        removedByPlayer(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity, arg4: boolean, arg5: Internal.FluidState): boolean;
        createTileEntity(arg0: Internal.BlockState, arg1: Internal.IBlockReader): Internal.TileEntity;
        isStickyBlock(arg0: Internal.BlockState): boolean;
        isFertile(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getFogColor(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity, arg4: Vec3, arg5: number): Vec3;
        getAiPathNodeType(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.MobEntity): Internal.PathNodeType;
        isSlimeBlock(arg0: Internal.BlockState): boolean;
        getLightValue(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        getFireSpreadSpeed(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
        isAir(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getToolModifiedState(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity, arg4: Internal.ItemStack, arg5: Internal.ToolType): Internal.BlockState;
        getBeaconColorMultiplier(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): number[];
        getExpDrop(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: number, arg4: number): number;
        isConduitFrame(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): boolean;
        canBeReplacedByLogs(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        addLandingEffects(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.LivingEntity, arg5: number): boolean;
        canCreatureSpawn(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.EntitySpawnPlacementRegistry$PlacementType_, arg4: Internal.EntityType_<any>): boolean;
        getSoundType(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity): Internal.SoundType;
        isToolEffective(arg0: Internal.BlockState, arg1: Internal.ToolType): boolean;
        addRunningEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Entity): boolean;
        canBeReplacedByLeaves(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        getSlipperiness(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity): number;
        getBlockStatesKJS(): Internal.List<Internal.BlockState>;
        isFlammable(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        getBlock(): Internal.Block;
        addDestroyEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.ParticleManager): boolean;
        getEnchantPowerBonus(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): number;
        setBedOccupied(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.LivingEntity, arg4: boolean): void;
        setRegistryName(arg0: ResourceLocation_): any;
        isFireSource(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        getRespawnPosition(arg0: Internal.BlockState, arg1: Internal.EntityType_<any>, arg2: Internal.IWorldReader, arg3: BlockPos, arg4: number, arg5: Internal.LivingEntity): Internal.Optional<Vec3>;
        onPlantGrow(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: BlockPos): void;
        catchFire(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Direction_, arg4: Internal.LivingEntity): void;
        canConnectRedstone(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        addHitEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: Internal.RayTraceResult, arg3: Internal.ParticleManager): boolean;
        getFlammability(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
        get blockStatesKJS(): Internal.List<Internal.BlockState>;
        get block(): Internal.Block;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.AbstractBlock$Properties);
    }
    type AirBlock_ = AirBlock;
    class IntArrayNBT extends Internal.CollectionNBT<Internal.IntNBT> {
        add(arg0: number, arg1: Internal.IntNBT): void;
        set(arg0: number, arg1: Internal.INBT): Internal.INBT;
        set(arg0: number, arg1: Internal.IntNBT): Internal.IntNBT;
        spliterator(): Internal.Spliterator<Internal.IntNBT>;
        forEach(arg0: Internal.Consumer_<Internal.IntNBT_>): void;
        sort(arg0: Internal.Comparator<Internal.IntNBT>): void;
        removeLast(): Internal.IntNBT;
        getLast(): Internal.IntNBT;
        replaceAll(arg0: Internal.UnaryOperator<Internal.IntNBT>): void;
        remove(arg0: number): Internal.INBT;
        remove(arg0: number): Internal.IntNBT;
        remove(arg0: number): any;
        removeIf(arg0: Internal.Predicate_<Internal.IntNBT_>): boolean;
        func_150302_c(): number[];
        wrapAsJavaObject(cx: Internal.Context, scope: Internal.Scriptable, staticType: Internal.Class<any>): Internal.Scriptable;
        addLast(arg0: Internal.IntNBT): void;
        func_74737_b(): Internal.IntArrayNBT;
        func_150285_a_(): string;
        func_197637_c(): Internal.ITextComponent;
        stream(): Internal.Stream<Internal.IntNBT>;
        getFirst(): Internal.IntNBT;
        removeFirst(): Internal.IntNBT;
        get(arg0: number): any;
        get(arg0: number): Internal.IntNBT;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<Internal.IntNBT>;
        func_225647_b_(): Internal.INBTType<Internal.IntArrayNBT>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<Internal.IntNBT>;
        addFirst(arg0: Internal.IntNBT): void;
        static readonly field_229690_a_: Internal.INBTType<Internal.IntArrayNBT>;
        get last(): Internal.IntNBT;
        get first(): Internal.IntNBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number[]);
        constructor(arg0: Internal.List<number>);
    }
    type IntArrayNBT_ = IntArrayNBT;
    class Products$P9 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function9_<T1, T2, T3, T4, T5, T6, T7, T8, T9, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>, arg4: Internal.App<F, T5>, arg5: Internal.App<F, T6>, arg6: Internal.App<F, T7>, arg7: Internal.App<F, T8>, arg8: Internal.App<F, T9>);
    }
    type Products$P9_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9> = Products$P9<F, T1, T2, T3, T4, T5, T6, T7, T8, T9>;
    class AltarRecipeJS extends Internal.BMRecipeJS {
        consumptionRate(arg0: number): Internal.AltarRecipeJS;
        upgradeLevel(arg0: number): Internal.AltarRecipeJS;
        drainRate(arg0: number): Internal.AltarRecipeJS;
        altarSyphon(arg0: number): Internal.AltarRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AltarRecipeJS_ = AltarRecipeJS;
    class MineshaftConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_202440_b: Internal.MineshaftStructure$Type;
        static readonly field_236541_a_: Internal.Codec<Internal.MineshaftConfig>;
        readonly field_202439_a: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.MineshaftStructure$Type);
    }
    type MineshaftConfig_ = MineshaftConfig;
    abstract class ConfigValue <T> extends Document.Object implements Internal.Comparable<Internal.ConfigValue<T>> {
        init(g: Internal.ConfigGroup, i: string, v: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>, c: Internal.Consumer_<Internal.ConfigValue_<Internal.ConfigValue_<Internal.ConfigValue_<Internal.ConfigValue_<T>>>>>, def: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>): Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>>;
        getName(): string;
        setCanEdit(e: boolean): Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>>;
        isEqual(v1: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>, v2: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>): boolean;
        getColor(v: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>): Internal.Color4I;
        addInfo(list: Internal.TooltipList): void;
        compareTo(arg0: any): number;
        compareTo(o: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>>): number;
        getCanEdit(): boolean;
        getIcon(v: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>): Internal.Icon;
        setIcon(i: Internal.Icon): Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>>;
        setOrder(o: number): Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>>;
        getNameKey(): string;
        setNameKey(key: string): Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>>;
        getTooltip(): string;
        getStringForGUI(v: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>): Internal.ITextComponent;
        onClicked(arg0: Internal.MouseButton, arg1: Internal.ConfigCallback_): void;
        getPath(): string;
        setCurrentValue(v: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>): boolean;
        copy(value: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>): Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>;
        static info(key: string, value: any): Internal.ITextComponent;
        defaultValue: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>;
        id: string;
        static readonly NULL_TEXT: Internal.StringTextComponent;
        setter: Internal.Consumer<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>>;
        value: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>;
        group: Internal.ConfigGroup;
        get path(): string;
        get nameKey(): string;
        get canEdit(): boolean;
        get name(): string;
        get tooltip(): string;
        set nameKey(key: string);
        set canEdit(e: boolean);
        set icon(i: Internal.Icon);
        set currentValue(v: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>);
        set order(o: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ConfigValue_<T> = ConfigValue<T>;
    class ModelQuadFacing extends Internal.Enum<Internal.ModelQuadFacing> {
        static fromDirection(dir: Internal.Direction_): Internal.ModelQuadFacing;
        static valueOf(name: string): Internal.ModelQuadFacing;
        static values(): Internal.ModelQuadFacing[];
        getOpposite(): Internal.ModelQuadFacing;
        static readonly UNASSIGNED: Internal.ModelQuadFacing;
        static readonly DOWN: Internal.ModelQuadFacing;
        static readonly NORTH: Internal.ModelQuadFacing;
        static readonly WEST: Internal.ModelQuadFacing;
        static readonly VALUES: Internal.ModelQuadFacing[];
        static readonly COUNT: 7;
        static readonly UP: Internal.ModelQuadFacing;
        static readonly SOUTH: Internal.ModelQuadFacing;
        static readonly EAST: Internal.ModelQuadFacing;
        get opposite(): Internal.ModelQuadFacing;
    }
    type ModelQuadFacing_ = "up" | "down" | "east" | "west" | "south" | "north" | "unassigned" | ModelQuadFacing;
    abstract class PonderOverlayElement extends Internal.PonderElement {
        render(arg0: Internal.PonderScene, arg1: Internal.PonderUI, arg2: Internal.MatrixStack, arg3: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PonderOverlayElement_ = PonderOverlayElement;
    class PrintWriter extends Internal.Writer {
        print(arg0: number): void;
        print(arg0: number): void;
        print(arg0: number): void;
        print(arg0: string): void;
        print(arg0: boolean): void;
        print(arg0: any): void;
        print(arg0: string): void;
        print(arg0: string[]): void;
        print(arg0: number): void;
        println(arg0: string[]): void;
        println(arg0: number): void;
        println(arg0: number): void;
        println(arg0: string): void;
        println(arg0: any): void;
        println(): void;
        println(arg0: string): void;
        println(arg0: number): void;
        println(arg0: number): void;
        println(arg0: boolean): void;
        format(arg0: Internal.Locale, arg1: string, ...arg2: any[]): Internal.PrintWriter;
        format(arg0: string, ...arg1: any[]): Internal.PrintWriter;
        checkError(): boolean;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.PrintWriter;
        append(arg0: string): Internal.PrintWriter;
        append(arg0: string): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.PrintWriter;
        printf(arg0: string, ...arg1: any[]): Internal.PrintWriter;
        printf(arg0: Internal.Locale, arg1: string, ...arg2: any[]): Internal.PrintWriter;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: string);
        constructor(arg0: string);
        constructor(arg0: string, arg1: Internal.Charset);
        constructor(arg0: Internal.File, arg1: Internal.Charset);
        constructor(arg0: Internal.File, arg1: string);
        constructor(arg0: Internal.File);
        constructor(arg0: Internal.Writer);
        constructor(arg0: Internal.Writer, arg1: boolean);
        constructor(arg0: Internal.OutputStream);
        constructor(arg0: Internal.OutputStream, arg1: boolean);
        constructor(arg0: Internal.OutputStream, arg1: boolean, arg2: Internal.Charset);
    }
    type PrintWriter_ = PrintWriter;
    interface SaveFormatAccessor {
        invokeReadLevelData<T>(arg0: Internal.File, arg1: Internal.BiFunction_<Internal.File_, Internal.DataFixer_, T>): T;
        (arg0: Internal.File, arg1: Internal.BiFunction<Internal.File, Internal.DataFixer, T>): T;
    }
    type SaveFormatAccessor_ = ((arg0: Internal.File, arg1: Internal.BiFunction<Internal.File, Internal.DataFixer, T>)=>T) | SaveFormatAccessor;
    interface ContainerMixin {
        getListeners(): Internal.List<Internal.IContainerListener>;
        (): Internal.List<Internal.IContainerListener>;
    }
    type ContainerMixin_ = (()=>Internal.List<Internal.IContainerListener>) | ContainerMixin;
    abstract class AgeableEntity extends Internal.CreatureEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213743_em(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        func_110195_a(arg0: number): void;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_70873_a(arg0: number): void;
        func_70874_b(): number;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_175501_a(arg0: number, arg1: boolean): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type AgeableEntity_ = AgeableEntity;
    class EnchantmentData extends Internal.WeightedRandom$Item {
        readonly field_76302_b: Internal.Enchantment;
        readonly field_76303_c: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Enchantment, arg1: number);
    }
    type EnchantmentData_ = EnchantmentData;
    interface IItemHandlerModifiable extends Internal.IItemHandler {
        setStackInSlot(arg0: number, arg1: Internal.ItemStack): void;
        (arg0: number, arg1: Internal.ItemStack): void;
    }
    type IItemHandlerModifiable_ = ((arg0: number, arg1: Internal.ItemStack)=>void) | IItemHandlerModifiable;
    class ModifierEntry$Serializer extends Document.Object implements Internal.JsonDeserializer<Internal.ModifierEntry>, Internal.JsonSerializer<Internal.ModifierEntry> {
        serialize(arg0: any, arg1: Internal.Type, arg2: Internal.JsonSerializationContext): Internal.JsonElement;
        serialize(arg0: Internal.ModifierEntry, arg1: Internal.Type, arg2: Internal.JsonSerializationContext): Internal.JsonElement;
        deserialize(arg0: Internal.JsonElement, arg1: Internal.Type, arg2: Internal.JsonDeserializationContext_): any;
        deserialize(arg0: Internal.JsonElement, arg1: Internal.Type, arg2: Internal.JsonDeserializationContext_): Internal.ModifierEntry;
    }
    type ModifierEntry$Serializer_ = ModifierEntry$Serializer;
    class Session extends Document.Object {
        func_148254_d(): string;
        func_111285_a(): string;
        func_148256_e(): Internal.GameProfile;
        func_111286_b(): string;
        func_148255_b(): string;
        hasCachedProperties(): boolean;
        setProperties(arg0: Internal.PropertyMap): void;
        set properties(arg0: Internal.PropertyMap);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: string, arg2: string, arg3: string);
    }
    type Session_ = Session;
    interface FloatIterable extends Internal.Iterable<number> {
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.FloatIterator;
        forEach(arg0: Internal.DoubleConsumer_): void;
        forEach(arg0: Internal.Consumer_<number>): void;
        (): Internal.FloatIterator;
    }
    type FloatIterable_ = (()=>Internal.FloatIterator) | FloatIterable;
    interface TemporalQuery <R> {
        queryFrom(arg0: Internal.TemporalAccessor): R;
        (arg0: Internal.TemporalAccessor): R;
    }
    type TemporalQuery_<R> = ((arg0: Internal.TemporalAccessor)=>R) | TemporalQuery<R>;
    class UnboundedMapCodec <K, V> extends Document.Object implements Internal.BaseMapCodec<K, V>, Internal.Codec<Internal.Map<K, V>> {
        encode(arg0: any, arg1: Internal.DynamicOps<any>, arg2: any): Internal.DataResult<any>;
        encode<T_>(arg0: Internal.Map_<K, V>, arg1: Internal.DynamicOps<T_>, arg2: T_): Internal.DataResult<T_>;
        encode<T_>(arg0: Internal.Map_<K, V>, arg1: Internal.DynamicOps<T_>, arg2: Internal.RecordBuilder<T_>): Internal.RecordBuilder<T_>;
        flatComapMap<S_>(arg0: Internal.Function_<Internal.Map_<K, V>, S_>, arg1: Internal.Function_<S_, Internal.DataResult_<Internal.Map_<K, V>>>): Internal.Codec<S_>;
        dispatch<E_>(arg0: Internal.Function_<E_, Internal.Map_<K, V>>, arg1: Internal.Function_<Internal.Map_<K, V>, Internal.Codec_<E_>>): Internal.Codec<E_>;
        dispatch<E_>(arg0: string, arg1: Internal.Function_<E_, Internal.Map_<K, V>>, arg2: Internal.Function_<Internal.Map_<K, V>, Internal.Codec_<E_>>): Internal.Codec<E_>;
        deprecated(arg0: number): Internal.Codec<Internal.Map<K, V>>;
        simple(): Internal.Decoder$Simple<Internal.Map<K, V>>;
        dispatchMap<E_>(arg0: Internal.Function_<E_, Internal.Map_<K, V>>, arg1: Internal.Function_<Internal.Map_<K, V>, Internal.Codec_<E_>>): Internal.MapCodec<E_>;
        dispatchMap<E_>(arg0: string, arg1: Internal.Function_<E_, Internal.Map_<K, V>>, arg2: Internal.Function_<Internal.Map_<K, V>, Internal.Codec_<E_>>): Internal.MapCodec<E_>;
        comapFlatMap<S_>(arg0: Internal.Function_<Internal.Map_<K, V>, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, Internal.Map_<K, V>>): Internal.Codec<S_>;
        decode<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<Internal.Pair<Internal.Map<K, V>, T_>>;
        decode<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.MapLike<T_>): Internal.DataResult<Internal.Map<K, V>>;
        decode<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<Internal.Pair<Internal.Map<K, V>, T_>>;
        promotePartial(arg0: Internal.Consumer_<any>): Internal.Decoder<any>;
        promotePartial(arg0: Internal.Consumer_<string>): Internal.Codec<Internal.Map<K, V>>;
        flatXmap<S_>(arg0: Internal.Function_<Internal.Map_<K, V>, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, Internal.DataResult_<Internal.Map_<K, V>>>): Internal.Codec<S_>;
        comap<B_>(arg0: Internal.Function_<B_, Internal.Map_<K, V>>): Internal.Encoder<B_>;
        fieldOf(arg0: string): Internal.MapDecoder<any>;
        fieldOf(arg0: string): Internal.MapCodec<Internal.Map<K, V>>;
        fieldOf(arg0: string): Internal.MapEncoder<any>;
        listOf(): Internal.Codec<Internal.List<Internal.Map<K, V>>>;
        xmap<S_>(arg0: Internal.Function_<Internal.Map_<K, V>, S_>, arg1: Internal.Function_<S_, Internal.Map_<K, V>>): Internal.Codec<S_>;
        map<B_>(arg0: Internal.Function_<Internal.Map_<K, V>, B_>): Internal.Decoder<B_>;
        encodeStart<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.Map_<K, V>): Internal.DataResult<T_>;
        optionalFieldOf(arg0: string, arg1: Internal.Lifecycle, arg2: Internal.Map_<K, V>, arg3: Internal.Lifecycle): Internal.MapCodec<Internal.Map<K, V>>;
        optionalFieldOf(arg0: string, arg1: Internal.Map_<K, V>): Internal.MapCodec<Internal.Map<K, V>>;
        optionalFieldOf(arg0: string, arg1: Internal.Map_<K, V>, arg2: Internal.Lifecycle): Internal.MapCodec<Internal.Map<K, V>>;
        optionalFieldOf(arg0: string): Internal.MapCodec<Internal.Optional<Internal.Map<K, V>>>;
        flatComap<B_>(arg0: Internal.Function_<B_, Internal.DataResult_<Internal.Map_<K, V>>>): Internal.Encoder<B_>;
        keyCodec(): Internal.Codec<K>;
        partialDispatch<E_>(arg0: string, arg1: Internal.Function_<E_, Internal.DataResult_<Internal.Map_<K, V>>>, arg2: Internal.Function_<Internal.Map_<K, V>, Internal.DataResult_<Internal.Codec_<E_>>>): Internal.Codec<E_>;
        terminal(): Internal.Decoder$Terminal<Internal.Map<K, V>>;
        parse<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<Internal.Map<K, V>>;
        parse<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<Internal.Map<K, V>>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Codec<Internal.Map<K, V>>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Encoder<any>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Decoder<any>;
        orElse(arg0: Internal.Map_<K, V>): Internal.Codec<Internal.Map<K, V>>;
        orElse(arg0: Internal.Consumer_<string>, arg1: Internal.Map_<K, V>): Internal.Codec<Internal.Map<K, V>>;
        orElse(arg0: Internal.UnaryOperator<string>, arg1: Internal.Map_<K, V>): Internal.Codec<Internal.Map<K, V>>;
        flatMap<B_>(arg0: Internal.Function_<Internal.Map_<K, V>, Internal.DataResult_<B_>>): Internal.Decoder<B_>;
        elementCodec(): Internal.Codec<V>;
        boxed(): Internal.Decoder$Boxed<Internal.Map<K, V>>;
        dispatchStable<E_>(arg0: Internal.Function_<E_, Internal.Map_<K, V>>, arg1: Internal.Function_<Internal.Map_<K, V>, Internal.Codec_<E_>>): Internal.Codec<E_>;
        orElseGet(arg0: java_.util.function_.Supplier_<Internal.Map_<K, V>>): Internal.Codec<Internal.Map<K, V>>;
        orElseGet(arg0: Internal.Consumer_<string>, arg1: java_.util.function_.Supplier_<Internal.Map_<K, V>>): Internal.Codec<Internal.Map<K, V>>;
        orElseGet(arg0: Internal.UnaryOperator<string>, arg1: java_.util.function_.Supplier_<Internal.Map_<K, V>>): Internal.Codec<Internal.Map<K, V>>;
        stable(): Internal.Codec<Internal.Map<K, V>>;
        mapResult(arg0: Internal.Codec$ResultFunction<Internal.Map<K, V>>): Internal.Codec<Internal.Map<K, V>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<K>, arg1: Internal.Codec<V>);
    }
    type UnboundedMapCodec_<K, V> = UnboundedMapCodec<K, V>;
    class GlVertexAttribute extends Document.Object {
        getSize(): number;
        getStride(): number;
        getFormat(): number;
        getPointer(): number;
        isNormalized(): boolean;
        getCount(): number;
        get pointer(): number;
        get size(): number;
        get normalized(): boolean;
        get format(): number;
        get count(): number;
        get stride(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(format: Internal.GlVertexAttributeFormat, count: number, normalized: boolean, pointer: number, stride: number);
    }
    type GlVertexAttribute_ = GlVertexAttribute;
    interface VariableBlockLightHandler {
        getCustomLightPositions(arg0: number, arg1: number): Internal.Collection<BlockPos>;
        getLightLevel(arg0: number, arg1: number, arg2: number): number;
    }
    type VariableBlockLightHandler_ = VariableBlockLightHandler;
    class InWorldProcessing$Type extends Internal.Enum<Internal.InWorldProcessing$Type> {
        static valueOf(arg0: string): Internal.InWorldProcessing$Type;
        static byBlock(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.InWorldProcessing$Type;
        static values(): Internal.InWorldProcessing$Type[];
        static readonly BLASTING: Internal.InWorldProcessing$Type;
        static readonly SMOKING: Internal.InWorldProcessing$Type;
        static readonly NONE: Internal.InWorldProcessing$Type;
        static readonly SPLASHING: Internal.InWorldProcessing$Type;
    }
    type InWorldProcessing$Type_ = "smoking" | "blasting" | "splashing" | "none" | InWorldProcessing$Type;
    interface StateManager$IResettable {
        resetState(): void;
        register(): void;
        (): void;
    }
    type StateManager$IResettable_ = (()=>void) | StateManager$IResettable;
    class RemoveOresProperties extends Document.Object {
        setWorldgenLayer(id: string): void;
        readonly biomes: Internal.WorldgenEntryList;
        blocks: Internal.BlockStatePredicate;
        _worldgenLayer: DecorationGenerationStep;
        set worldgenLayer(id: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RemoveOresProperties_ = RemoveOresProperties;
    class SUpdateBossInfoPacket$Operation extends Internal.Enum<Internal.SUpdateBossInfoPacket$Operation> {
        static valueOf(arg0: string): Internal.SUpdateBossInfoPacket$Operation;
        static values(): Internal.SUpdateBossInfoPacket$Operation[];
        static readonly UPDATE_PROPERTIES: Internal.SUpdateBossInfoPacket$Operation;
        static readonly ADD: Internal.SUpdateBossInfoPacket$Operation;
        static readonly UPDATE_PCT: Internal.SUpdateBossInfoPacket$Operation;
        static readonly UPDATE_NAME: Internal.SUpdateBossInfoPacket$Operation;
        static readonly UPDATE_STYLE: Internal.SUpdateBossInfoPacket$Operation;
        static readonly REMOVE: Internal.SUpdateBossInfoPacket$Operation;
    }
    type SUpdateBossInfoPacket$Operation_ = "add" | "remove" | "update_pct" | "update_name" | "update_style" | "update_properties" | SUpdateBossInfoPacket$Operation;
    interface ITextProperties$ITextAcceptor <T> {
        accept(arg0: string): Internal.Optional<T>;
        (arg0: string): Internal.Optional<T>;
    }
    type ITextProperties$ITextAcceptor_<T> = ((arg0: string)=>Internal.Optional<T>) | ITextProperties$ITextAcceptor<T>;
    interface Transferable {
        isDataFlavorSupported(arg0: Internal.DataFlavor): boolean;
        getTransferData(arg0: Internal.DataFlavor): any;
        getTransferDataFlavors(): Internal.DataFlavor[];
    }
    type Transferable_ = Transferable;
    class MaterialsLoadedEvent extends net.minecraftforge.eventbus.api.Event {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MaterialsLoadedEvent_ = MaterialsLoadedEvent;
    interface IDecoratable <R> {
        func_242733_d(arg0: number): R;
        func_242732_c(arg0: number): R;
        func_242731_b(arg0: number): R;
        func_227228_a_(arg0: Internal.ConfiguredPlacement<any>): R;
        func_242730_a(arg0: Internal.FeatureSpread): R;
        func_242729_a(arg0: number): R;
        func_242728_a(): R;
        (arg0: Internal.ConfiguredPlacement<any>): R;
    }
    type IDecoratable_<R> = ((arg0: Internal.ConfiguredPlacement<any>)=>R) | IDecoratable<R>;
    class SMultiBlockChangePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler>, Internal.ClientboundSectionBlocksUpdatePacketFTBC {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        getPositionsFTBC(): number[];
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        getSectionPosFTBC(): Internal.SectionPos;
        func_244311_b(): boolean;
        func_244310_a(arg0: Internal.BiConsumer_<BlockPos_, Internal.BlockState_>): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        get positionsFTBC(): number[];
        get sectionPosFTBC(): Internal.SectionPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.SectionPos, arg1: any, arg2: Internal.ChunkSection, arg3: boolean);
    }
    type SMultiBlockChangePacket_ = SMultiBlockChangePacket;
    class ClientChatReceivedEvent extends net.minecraftforge.eventbus.api.Event {
        getSenderUUID(): Internal.UUID;
        getType(): Internal.ChatType;
        getMessage(): Internal.ITextComponent;
        setMessage(arg0: Internal.ITextComponent_): void;
        get senderUUID(): Internal.UUID;
        get type(): Internal.ChatType;
        get message(): Internal.ITextComponent;
        set message(arg0: Internal.ITextComponent_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ChatType, arg1: Internal.ITextComponent, arg2: Internal.UUID);
    }
    type ClientChatReceivedEvent_ = ClientChatReceivedEvent;
    class TransformationMatrix extends Document.Object implements Internal.IForgeTransformationMatrix {
        inverse(): Internal.TransformationMatrix;
        applyOrigin(arg0: Internal.Vector3f): Internal.TransformationMatrix;
        rotateTransform(arg0: Internal.Direction_): Internal.Direction;
        isIdentity(): boolean;
        func_227985_a_(arg0: Internal.TransformationMatrix): Internal.TransformationMatrix;
        func_227987_b_(): Internal.TransformationMatrix;
        getTransformaion(): Internal.TransformationMatrix;
        static func_227984_a_(arg0: Internal.Matrix4f): Internal.Pair<Internal.Matrix3f, Internal.Vector3f>;
        static func_227983_a_(): Internal.TransformationMatrix;
        push(arg0: Internal.MatrixStack): void;
        getNormalMatrix(): Internal.Matrix3f;
        getRightRot(): Internal.Quaternion;
        getScale(): Internal.Vector3f;
        func_227988_c_(): Internal.Matrix4f;
        blockCornerToCenter(): Internal.TransformationMatrix;
        compose(arg0: Internal.TransformationMatrix): Internal.TransformationMatrix;
        func_227989_d_(): Internal.Quaternion;
        transformPosition(arg0: Internal.Vector4f): void;
        getTranslation(): Internal.Vector3f;
        transformNormal(arg0: Internal.Vector3f): void;
        blockCenterToCorner(): Internal.TransformationMatrix;
        get transformaion(): Internal.TransformationMatrix;
        get normalMatrix(): Internal.Matrix3f;
        get identity(): boolean;
        get translation(): Internal.Vector3f;
        get scale(): Internal.Vector3f;
        get rightRot(): Internal.Quaternion;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Matrix4f);
        constructor(arg0: Internal.Vector3f, arg1: Internal.Quaternion, arg2: Internal.Vector3f, arg3: Internal.Quaternion);
    }
    type TransformationMatrix_ = TransformationMatrix;
    class ServerWorld extends Internal.World implements Internal.ISeedReader, Internal.IForgeWorldServer, Internal.IServerLevel, Internal.ISafeBlockGetter, Internal.ExtendedWorld {
        func_201696_r(arg0: BlockPos): number;
        func_184163_y(): Internal.TemplateManager;
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        func_217461_a(arg0: Internal.UUID): Internal.Entity;
        func_241109_A_(): boolean;
        func_226666_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.Stream<Internal.VoxelShape>;
        func_217484_g(arg0: Internal.Entity): void;
        func_217446_a(arg0: Internal.ServerPlayerEntity): void;
        removePlayer(arg0: Internal.ServerPlayerEntity, arg1: boolean): void;
        func_225521_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity): boolean;
        func_85176_s(): Internal.Teleporter;
        func_195600_a<T_>(arg0: Internal.ServerPlayerEntity, arg1: T_, arg2: boolean, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number): boolean;
        func_217455_d_(arg0: BlockPos): boolean;
        func_175707_a(arg0: BlockPos, arg1: BlockPos): boolean;
        mfix$getStrongholdCache(): Internal.StrongholdLocationCache;
        func_217439_j(): Internal.List<Internal.EnderDragonEntity>;
        func_217344_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        removeEntityComplete(arg0: Internal.Entity, arg1: boolean): void;
        func_226669_j_(arg0: Internal.Entity): boolean;
        func_217348_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus_): Internal.IChunk;
        func_241113_a_(arg0: number, arg1: number, arg2: boolean, arg3: boolean): void;
        func_226658_a_(arg0: Internal.LightType_, arg1: BlockPos): number;
        func_211158_j_(): boolean;
        func_234939_c_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_217469_z(): Internal.LongSet;
        static func_241121_a_(arg0: Internal.ServerWorld): void;
        func_222887_a(arg0: Internal.SectionPos): boolean;
        func_72905_C(): number;
        func_241124_a__(arg0: BlockPos, arg1: number): void;
        func_217434_e(arg0: Internal.ServerPlayerEntity): void;
        func_217374_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: Internal.AxisAlignedBB): Internal.List<T_>;
        func_242403_h(arg0: BlockPos): number;
        func_201672_e(): Internal.ServerWorld;
        func_217370_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity): Internal.PlayerEntity;
        func_175710_j(arg0: BlockPos): boolean;
        func_217359_a(arg0: Internal.EntityPredicate, arg1: number, arg2: number, arg3: number): Internal.PlayerEntity;
        func_225317_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        handler$ced000$wireBlockCallback(pos: BlockPos, oldState: Internal.BlockState, newState: Internal.BlockState, flags: number, ci: Internal.CallbackInfo): void;
        func_226663_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.ISelectionContext): boolean;
        func_241112_a_(): Internal.StructureManager;
        func_217489_a(arg0: Internal.IReputationType, arg1: Internal.Entity, arg2: Internal.IReputationTracking_): void;
        func_217466_a(arg0: Internal.Chunk): void;
        func_217447_b(arg0: Internal.ServerPlayerEntity): void;
        func_175627_a(arg0: BlockPos, arg1: Internal.Direction_): number;
        func_175623_d(arg0: BlockPos): boolean;
        func_242415_f(arg0: number): number;
        func_72839_b(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.List<Internal.Entity>;
        func_217360_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        func_242106_g(arg0: Internal.Entity): boolean;
        func_72854_c(): void;
        redirect$bnb000$onTickBlock(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.Random): void;
        func_72835_b(arg0: Internal.BooleanSupplier_): void;
        func_242414_af(): number;
        func_225525_a_(arg0: BlockPos, arg1: Internal.ColorResolver_): number;
        func_217435_c(arg0: Internal.ServerPlayerEntity): void;
        removeEntity(arg0: Internal.Entity, arg1: boolean): void;
        func_195598_a<T_>(arg0: T_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): number;
        func_175659_aa(): Internal.Difficulty;
        func_241457_a_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): Internal.Stream<Internal.VoxelShape>;
        func_217458_b(arg0: number, arg1: number, arg2: boolean): boolean;
        func_229854_a_(arg0: Internal.MutableBoundingBox): void;
        func_217483_b_(arg0: BlockPos): boolean;
        func_226665_a__(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): boolean;
        func_217371_b(arg0: Internal.UUID): Internal.PlayerEntity;
        func_217349_x(arg0: BlockPos): Internal.IChunk;
        isAreaLoaded(arg0: BlockPos, arg1: number): boolean;
        func_217379_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_234865_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): boolean;
        func_217481_x(): Internal.DimensionSavedDataManager;
        func_234867_d_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_217482_a(arg0: Internal.EntityType_<any>, arg1: Internal.Predicate_<Internal.Entity_>): Internal.List<Internal.Entity>;
        func_241114_a_(arg0: number): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_217486_a(arg0: Internal.SectionPos): number;
        mfix$getSafeBlockGetter(): Internal.SafeBlockGetter;
        redirect$bnb000$onTickLiquid(arg0: Internal.FluidState, arg1: Internal.World, arg2: BlockPos): void;
        func_217298_h(arg0: BlockPos): number;
        func_242107_v(): number;
        func_217440_f(arg0: Internal.Entity): boolean;
        func_96441_U(): Internal.ServerScoreboard;
        func_190525_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Predicate_<Internal.Entity_>): Internal.PlayerEntity;
        func_226668_i_(arg0: Internal.Entity): boolean;
        func_241827_a(arg0: Internal.SectionPos, arg1: net.minecraft.world.gen.feature.structure.Structure_<any>): Internal.Stream<Internal.StructureStart<any>>;
        func_241123_a_(arg0: boolean, arg1: boolean): void;
        func_217361_a<T_>(arg0: Internal.List<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number): T_;
        func_226659_b_(arg0: BlockPos, arg1: number): number;
        func_72953_d(arg0: Internal.AxisAlignedBB): boolean;
        func_225322_a(arg0: Internal.Path): void;
        func_241117_a_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>, arg1: BlockPos, arg2: number, arg3: boolean): BlockPos;
        func_241851_ab(): number;
        func_226691_t_(arg0: BlockPos): Internal.Biome;
        func_217470_d(arg0: Internal.Entity): boolean;
        func_217443_B(): Internal.PointOfInterestManager;
        func_217459_a(arg0: Internal.Entity, arg1: Internal.Entity): void;
        func_217467_h(arg0: Internal.Entity): void;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_217372_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number): Internal.PlayerEntity;
        getEntities(): Internal.Stream<Internal.Entity>;
        func_242405_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): boolean;
        func_205219_F_(): Internal.ServerTickList<Internal.Fluid>;
        func_205219_F_(): Internal.ITickList<any>;
        func_217357_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217301_I(): number;
        func_175667_e(arg0: BlockPos): boolean;
        func_242413_ae(): number;
        func_226660_f_(arg0: BlockPos): boolean;
        func_217460_e(arg0: Internal.Entity): void;
        func_212866_a_(arg0: number, arg1: number): Internal.IChunk;
        func_241116_a_(arg0: Internal.Biome_, arg1: BlockPos, arg2: number, arg3: number): BlockPos;
        func_217441_a(arg0: Internal.Chunk, arg1: number): void;
        func_242417_l(arg0: Internal.Entity): void;
        func_234938_ad_(): number;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_217452_C(): Internal.RaidManager;
        func_217464_b(arg0: Internal.Entity): void;
        func_217445_a(arg0: Internal.IProgressUpdate, arg1: boolean, arg2: boolean): void;
        func_217362_a(arg0: Internal.Entity, arg1: number): Internal.PlayerEntity;
        func_217472_l_(): Internal.ServerPlayerEntity;
        func_205220_G_(): Internal.ITickList<any>;
        func_205220_G_(): Internal.ServerTickList<Internal.Block>;
        func_241135_u_(): BlockPos;
        func_201671_F(arg0: BlockPos): boolean;
        func_217475_c_(arg0: BlockPos): Internal.Raid;
        func_205049_d(arg0: BlockPos, arg1: number): number;
        func_244521_F(): string;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
        func_73051_P(): void;
        func_82742_i(): void;
        func_217366_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): Internal.PlayerEntity;
        func_72863_F(): Internal.ServerChunkProvider;
        func_241136_z_(): Internal.Iterable<Internal.Entity>;
        func_205052_D(arg0: BlockPos): number;
        func_201572_C(): number;
        func_217490_a(arg0: Internal.Predicate_<Internal.ServerPlayerEntity_>): Internal.List<Internal.ServerPlayerEntity>;
        func_241110_C_(): Internal.DragonFightManager;
        func_241119_a_(arg0: BlockPos, arg1: number): boolean;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_217479_a(arg0: Internal.Entity): void;
        func_226664_a_(arg0: Internal.AxisAlignedBB): boolean;
        func_175655_b(arg0: BlockPos, arg1: boolean): boolean;
        func_217433_d(arg0: Internal.ServerPlayerEntity): void;
        asKJS(): any;
        func_217373_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: Internal.AxisAlignedBB): Internal.List<Internal.PlayerEntity>;
        getWorldServer(): Internal.ServerWorld;
        handler$bho000$warpingCheck(arg0: Internal.Entity, arg1: Internal.CallbackInfo): void;
        func_242406_i(arg0: BlockPos): Internal.Optional<Internal.RegistryKey<Internal.Biome>>;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        func_217354_b(arg0: number, arg1: number): boolean;
        func_225318_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        func_217358_a(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        func_217369_A(): Internal.List<Internal.ServerPlayerEntity>;
        static readonly field_241108_a_: BlockPos;
        field_73058_d: boolean;
        get worldServer(): Internal.ServerWorld;
        get entities(): Internal.Stream<Internal.Entity>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MinecraftServer, arg1: Internal.Executor, arg2: Internal.SaveFormat$LevelSave, arg3: Internal.IServerWorldInfo, arg4: Internal.RegistryKey<Internal.World>, arg5: Internal.DimensionType, arg6: Internal.IChunkStatusListener, arg7: Internal.ChunkGenerator, arg8: boolean, arg9: number, arg10: Internal.List<any>, arg11: boolean);
    }
    type ServerWorld_ = ServerWorld;
    interface Object2FloatMap <K> extends Internal.Object2FloatFunction<K>, Internal.Map<K, number> {
        computeFloatIfAbsent(arg0: K, arg1: Internal.ToDoubleFunction_<K>): number;
        computeFloatIfPresent(arg0: K, arg1: Internal.BiFunction_<K, number, number>): number;
        getOrDefault(arg0: any, arg1: number): number;
        getOrDefault(arg0: any, arg1: number): number;
        getOrDefault(arg0: any, arg1: any): any;
        entrySet(): Internal.Set<any>;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<K, number>>;
        containsKey(arg0: any): boolean;
        values(): Internal.FloatCollection;
        values(): Internal.Collection<any>;
        replace(arg0: K, arg1: number): number;
        replace(arg0: K, arg1: number, arg2: number): boolean;
        replace(arg0: K, arg1: number, arg2: number): boolean;
        replace(arg0: K, arg1: number): number;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        clear(): void;
        containsValue(arg0: number): boolean;
        containsValue(arg0: any): boolean;
        put(arg0: any, arg1: any): any;
        put(arg0: K, arg1: number): number;
        remove(arg0: any, arg1: any): boolean;
        remove(arg0: any): number;
        remove(arg0: any): any;
        remove(arg0: any, arg1: number): boolean;
        computeFloat(arg0: K, arg1: Internal.BiFunction_<K, number, number>): number;
        defaultReturnValue(arg0: number): void;
        defaultReturnValue(): number;
        size(): number;
        object2FloatEntrySet(): Internal.ObjectSet<Internal.Object2FloatMap$Entry<K>>;
        mergeFloat(arg0: K, arg1: number, arg2: Internal.BiFunction_<number, number, number>): number;
        merge(arg0: K, arg1: number, arg2: Internal.BiFunction_<number, number, number>): number;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        get(arg0: any): any;
        get(arg0: any): number;
        keySet(): Internal.Set<any>;
        keySet(): Internal.ObjectSet<K>;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: K, arg1: number): number;
        putIfAbsent(arg0: K, arg1: number): number;
        computeFloatIfAbsentPartial(arg0: K, arg1: Internal.Object2FloatFunction_<K>): number;
    }
    type Object2FloatMap_<K> = Object2FloatMap<K>;
    class PerkTreePoint <T> extends Document.Object implements Internal.PerkRender {
        addGroups(arg0: Internal.Collection<Internal.PerkRenderGroup>): void;
        getRenderSize(): number;
        getPerk(): T;
        getOffset(): Internal.Point2D$Float;
        setRenderSize(arg0: number): void;
        renderPerkAtBatch(arg0: Internal.BatchPerkContext, arg1: Internal.MatrixStack, arg2: Internal.AllocationStatus_, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.Rectangle2D$Float;
        get offset(): Internal.Point2D$Float;
        get perk(): T;
        get renderSize(): number;
        set renderSize(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: T, arg1: Internal.Point2D$Float);
    }
    type PerkTreePoint_<T> = PerkTreePoint<T>;
    class ModuleDescriptor extends Document.Object implements Internal.Comparable<Internal.ModuleDescriptor> {
        static read(arg0: Internal.InputStream, arg1: java_.util.function_.Supplier_<Internal.Set_<string>>): Internal.ModuleDescriptor;
        static read(arg0: Internal.InputStream): Internal.ModuleDescriptor;
        static read(arg0: Internal.ByteBuffer, arg1: java_.util.function_.Supplier_<Internal.Set_<string>>): Internal.ModuleDescriptor;
        static read(arg0: Internal.ByteBuffer): Internal.ModuleDescriptor;
        toNameAndVersion(): string;
        mainClass(): Internal.Optional<string>;
        exports(): Internal.Set<Internal.ModuleDescriptor$Exports>;
        rawVersion(): Internal.Optional<string>;
        compareTo(arg0: Internal.ModuleDescriptor): number;
        compareTo(arg0: any): number;
        packages(): Internal.Set<string>;
        modifiers(): Internal.Set<Internal.ModuleDescriptor$Modifier>;
        version(): Internal.Optional<Internal.ModuleDescriptor$Version>;
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        static newAutomaticModule(arg0: string): Internal.ModuleDescriptor$Builder;
        isOpen(): boolean;
        provides(): Internal.Set<Internal.ModuleDescriptor$Provides>;
        static newOpenModule(arg0: string): Internal.ModuleDescriptor$Builder;
        static newModule(arg0: string, arg1: Internal.Set<Internal.ModuleDescriptor$Modifier>): Internal.ModuleDescriptor$Builder;
        static newModule(arg0: string): Internal.ModuleDescriptor$Builder;
        name(): string;
        opens(): Internal.Set<Internal.ModuleDescriptor$Opens>;
        uses(): Internal.Set<string>;
        isAutomatic(): boolean;
        requires(): Internal.Set<Internal.ModuleDescriptor$Requires>;
        get automatic(): boolean;
        get open(): boolean;
    }
    type ModuleDescriptor_ = ModuleDescriptor;
    abstract class NumberNBT extends Document.Object implements Internal.INBT {
        func_150291_c(): number;
        func_150290_f(): number;
        func_74737_b(): Internal.INBT;
        func_150285_a_(): string;
        func_197637_c(): Internal.ITextComponent;
        func_74732_a(): number;
        func_150289_e(): number;
        func_209908_j(): Internal.Number;
        func_74734_a(arg0: Internal.DataOutput): void;
        func_150288_h(): number;
        func_150287_d(): number;
        func_225647_b_(): Internal.INBTType<any>;
        func_150286_g(): number;
        func_199850_a(arg0: string, arg1: number): Internal.ITextComponent;
    }
    type NumberNBT_ = NumberNBT;
    interface NativeResource extends Internal.AutoCloseable {
        free(): void;
        close(): void;
        (): void;
    }
    type NativeResource_ = (()=>void) | NativeResource;
    class ScriptFileInfo extends Document.Object {
        getPackMode(): string;
        getProperty(s: string, def: string): string;
        getPriority(): number;
        preload(source: Internal.ScriptSource_): Internal.Throwable;
        isIgnored(): boolean;
        readonly file: string;
        readonly location: string;
        readonly id: ResourceLocation;
        readonly pack: Internal.ScriptPackInfo;
        get ignored(): boolean;
        get packMode(): string;
        get priority(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(p: Internal.ScriptPackInfo, f: string);
    }
    type ScriptFileInfo_ = ScriptFileInfo;
    interface RecipeManagerAccessor {
        getRecipeMap<C, T>(arg0: Internal.IRecipeType<T>): Internal.Map<ResourceLocation, Internal.IRecipe<C>>;
        (arg0: Internal.IRecipeType<T>): Internal.Map<ResourceLocation, Internal.IRecipe<C>>;
    }
    type RecipeManagerAccessor_ = ((arg0: Internal.IRecipeType<T>)=>Internal.Map<ResourceLocation, Internal.IRecipe<C>>) | RecipeManagerAccessor;
    class WorldBorder$Serializer extends Document.Object {
        static func_235938_a_(arg0: Internal.DynamicLike<any>, arg1: Internal.WorldBorder$Serializer): Internal.WorldBorder$Serializer;
        func_235937_a_(): number;
        func_235946_h_(): number;
        func_235940_b_(): number;
        func_235945_g_(): number;
        func_235947_i_(): number;
        func_235942_d_(): number;
        func_235941_c_(): number;
        func_235944_f_(): number;
        func_235939_a_(arg0: Internal.CompoundNBT_): void;
        func_235943_e_(): number;
    }
    type WorldBorder$Serializer_ = WorldBorder$Serializer;
    class GuiScreenEvent$KeyboardCharTypedEvent extends Internal.GuiScreenEvent {
        getCodePoint(): string;
        getModifiers(): number;
        get modifiers(): number;
        get codePoint(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: string, arg2: number);
    }
    type GuiScreenEvent$KeyboardCharTypedEvent_ = GuiScreenEvent$KeyboardCharTypedEvent;
    class MarketRegistryReloadEvent$Post extends Internal.MarketRegistryReloadEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MarketRegistryReloadEvent$Post_ = MarketRegistryReloadEvent$Post;
    interface SpriteExtended {
        markActive(): void;
        (): void;
    }
    type SpriteExtended_ = (()=>void) | SpriteExtended;
    interface ObjectList <K> extends Internal.List<K>, Internal.Comparable<Internal.List<K>>, Internal.ObjectCollection<K> {
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.ObjectIterator<any>;
        iterator(): Internal.ObjectListIterator<K>;
        subList(arg0: number, arg1: number): Internal.ObjectList<K>;
        subList(arg0: number, arg1: number): Internal.List<any>;
        size(arg0: number): void;
        addElements(arg0: number, arg1: K[], arg2: number, arg3: number): void;
        addElements(arg0: number, arg1: K[]): void;
        getElements(arg0: number, arg1: any[], arg2: number, arg3: number): void;
        listIterator(arg0: number): Internal.ListIterator<any>;
        listIterator(arg0: number): Internal.ObjectListIterator<K>;
        listIterator(): Internal.ListIterator<any>;
        listIterator(): Internal.ObjectListIterator<K>;
        removeElements(arg0: number, arg1: number): void;
    }
    type ObjectList_<K> = ObjectList<K>;
    class PiglinEntity extends Internal.AbstractPiglinEntity implements Internal.ICrossbowUser {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_230284_a_(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: Internal.ProjectileEntity, arg3: number): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_230283_U__(): void;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_234425_eN_(): boolean;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        hasCooldown(): boolean;
        func_213671_a(arg0: boolean): void;
        func_234280_a_(arg0: Internal.LivingEntity, arg1: Vec3, arg2: number): Internal.Vector3f;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_213375_cj(): Internal.Brain<Internal.PiglinEntity>;
        getEntity(): Internal.Entity;
        func_234281_b_(arg0: Internal.LivingEntity, arg1: number): void;
        asKJS(): any;
        canRiderInteract(): boolean;
        static func_234420_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        static func_234418_b_(arg0: Internal.EntityType_<Internal.PiglinEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_234279_a_(arg0: Internal.LivingEntity, arg1: Internal.LivingEntity, arg2: Internal.ProjectileEntity, arg3: number, arg4: number): void;
        func_234442_u_(arg0: boolean): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        getClassification(arg0: boolean): Internal.EntityClassification;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.AbstractPiglinEntity>, arg1: Internal.World);
    }
    type PiglinEntity_ = PiglinEntity;
    abstract class Outline extends Document.Object {
        renderCuboidLine(arg0: Internal.MatrixStack, arg1: Internal.SuperRenderTypeBuffer, arg2: Vec3, arg3: Vec3): void;
        putQuadUV(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Vec3, arg3: Vec3, arg4: Vec3, arg5: Vec3, arg6: number, arg7: number, arg8: number, arg9: number, arg10: Internal.Direction_): void;
        renderAACuboidLine(arg0: Internal.MatrixStack, arg1: Internal.SuperRenderTypeBuffer, arg2: Vec3, arg3: Vec3): void;
        tick(): void;
        putQuad(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Vec3, arg3: Vec3, arg4: Vec3, arg5: Vec3, arg6: Internal.Direction_): void;
        render(arg0: Internal.MatrixStack, arg1: Internal.SuperRenderTypeBuffer, arg2: number): void;
        getParams(): Internal.Outline$OutlineParams;
        get params(): Internal.Outline$OutlineParams;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Outline_ = Outline;
    interface InputMethodRequests {
        getCommittedTextLength(): number;
        getSelectedText(arg0: Internal.AttributedCharacterIterator$Attribute[]): Internal.AttributedCharacterIterator;
        getInsertPositionOffset(): number;
        getCommittedText(arg0: number, arg1: number, arg2: Internal.AttributedCharacterIterator$Attribute[]): Internal.AttributedCharacterIterator;
        getLocationOffset(arg0: number, arg1: number): Internal.TextHitInfo;
        cancelLatestCommittedText(arg0: Internal.AttributedCharacterIterator$Attribute[]): Internal.AttributedCharacterIterator;
        getTextLocation(arg0: Internal.TextHitInfo): Internal.Rectangle;
    }
    type InputMethodRequests_ = InputMethodRequests;
    class BrewingStandContainer extends Internal.Container {
        func_216981_f(): number;
        func_216982_e(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IInventory, arg3: Internal.IIntArray);
    }
    type BrewingStandContainer_ = BrewingStandContainer;
    class ChunkLoader extends Document.Object implements Internal.AutoCloseable {
        static func_219165_a(arg0: Internal.CompoundNBT_): number;
        func_227078_e_(arg0: Internal.ChunkPos): Internal.CompoundNBT;
        func_235968_a_(arg0: Internal.RegistryKey<Internal.World>, arg1: java_.util.function_.Supplier_<Internal.DimensionSavedDataManager_>, arg2: Internal.CompoundNBT_): Internal.CompoundNBT;
        func_219100_a(arg0: Internal.ChunkPos, arg1: Internal.CompoundNBT_): void;
        close(): void;
        func_227079_i_(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File, arg1: Internal.DataFixer, arg2: boolean);
    }
    type ChunkLoader_ = ChunkLoader;
    class Font extends Document.Object implements Internal.Serializable {
        getName(): string;
        getMaxCharBounds(arg0: Internal.FontRenderContext): Internal.Rectangle2D;
        isTransformed(): boolean;
        isPlain(): boolean;
        getMissingGlyphCode(): number;
        static decode(arg0: string): Internal.Font;
        isItalic(): boolean;
        getFontName(): string;
        getFontName(arg0: Internal.Locale): string;
        getStyle(): number;
        getAvailableAttributes(): Internal.AttributedCharacterIterator$Attribute[];
        getBaselineFor(arg0: string): number;
        getLineMetrics(arg0: string, arg1: Internal.FontRenderContext): Internal.LineMetrics;
        getLineMetrics(arg0: Internal.CharacterIterator, arg1: number, arg2: number, arg3: Internal.FontRenderContext): Internal.LineMetrics;
        getLineMetrics(arg0: string[], arg1: number, arg2: number, arg3: Internal.FontRenderContext): Internal.LineMetrics;
        getLineMetrics(arg0: string, arg1: number, arg2: number, arg3: Internal.FontRenderContext): Internal.LineMetrics;
        static createFonts(arg0: Internal.InputStream): Internal.Font[];
        static createFonts(arg0: Internal.File): Internal.Font[];
        getSize2D(): number;
        hasUniformLineMetrics(): boolean;
        getTransform(): Internal.AffineTransform;
        getStringBounds(arg0: string[], arg1: number, arg2: number, arg3: Internal.FontRenderContext): Internal.Rectangle2D;
        getStringBounds(arg0: string, arg1: number, arg2: number, arg3: Internal.FontRenderContext): Internal.Rectangle2D;
        getStringBounds(arg0: string, arg1: Internal.FontRenderContext): Internal.Rectangle2D;
        getStringBounds(arg0: Internal.CharacterIterator, arg1: number, arg2: number, arg3: Internal.FontRenderContext): Internal.Rectangle2D;
        canDisplay(arg0: number): boolean;
        canDisplay(arg0: string): boolean;
        getAttributes(): Internal.Map<Internal.TextAttribute, any>;
        deriveFont(arg0: Internal.Map_<Internal.AttributedCharacterIterator$Attribute_, any>): Internal.Font;
        deriveFont(arg0: Internal.AffineTransform): Internal.Font;
        deriveFont(arg0: number): Internal.Font;
        deriveFont(arg0: number): Internal.Font;
        deriveFont(arg0: number, arg1: number): Internal.Font;
        deriveFont(arg0: number, arg1: Internal.AffineTransform): Internal.Font;
        getPSName(): string;
        hasLayoutAttributes(): boolean;
        isBold(): boolean;
        getNumGlyphs(): number;
        canDisplayUpTo(arg0: Internal.CharacterIterator, arg1: number, arg2: number): number;
        canDisplayUpTo(arg0: string): number;
        canDisplayUpTo(arg0: string[], arg1: number, arg2: number): number;
        getItalicAngle(): number;
        createGlyphVector(arg0: Internal.FontRenderContext, arg1: Internal.CharacterIterator): Internal.GlyphVector;
        createGlyphVector(arg0: Internal.FontRenderContext, arg1: string[]): Internal.GlyphVector;
        createGlyphVector(arg0: Internal.FontRenderContext, arg1: number[]): Internal.GlyphVector;
        createGlyphVector(arg0: Internal.FontRenderContext, arg1: string): Internal.GlyphVector;
        getSize(): number;
        getFamily(arg0: Internal.Locale): string;
        getFamily(): string;
        static textRequiresLayout(arg0: string[], arg1: number, arg2: number): boolean;
        static getFont(arg0: string): Internal.Font;
        static getFont(arg0: Internal.Map_<Internal.AttributedCharacterIterator$Attribute_, any>): Internal.Font;
        static getFont(arg0: string, arg1: Internal.Font): Internal.Font;
        static createFont(arg0: number, arg1: Internal.File): Internal.Font;
        static createFont(arg0: number, arg1: Internal.InputStream): Internal.Font;
        layoutGlyphVector(arg0: Internal.FontRenderContext, arg1: string[], arg2: number, arg3: number, arg4: number): Internal.GlyphVector;
        static readonly PLAIN: 0;
        static readonly ITALIC: 2;
        static readonly CENTER_BASELINE: 1;
        static readonly HANGING_BASELINE: 2;
        static readonly DIALOG: "Dialog";
        static readonly MONOSPACED: "Monospaced";
        static readonly DIALOG_INPUT: "DialogInput";
        static readonly LAYOUT_NO_LIMIT_CONTEXT: 4;
        static readonly LAYOUT_RIGHT_TO_LEFT: 1;
        static readonly SANS_SERIF: "SansSerif";
        static readonly SERIF: "Serif";
        static readonly TRUETYPE_FONT: 0;
        static readonly ROMAN_BASELINE: 0;
        static readonly LAYOUT_NO_START_CONTEXT: 2;
        static readonly LAYOUT_LEFT_TO_RIGHT: 0;
        static readonly BOLD: 1;
        static readonly TYPE1_FONT: 1;
        get italicAngle(): number;
        get numGlyphs(): number;
        get bold(): boolean;
        get availableAttributes(): Internal.AttributedCharacterIterator$Attribute[];
        get italic(): boolean;
        get size2D(): number;
        get fontName(): string;
        get transform(): Internal.AffineTransform;
        get size(): number;
        get plain(): boolean;
        get name(): string;
        get transformed(): boolean;
        get missingGlyphCode(): number;
        get style(): number;
        get attributes(): Internal.Map<Internal.TextAttribute, any>;
        get pSName(): string;
        get family(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<Internal.AttributedCharacterIterator$Attribute, any>);
        constructor(arg0: string, arg1: number, arg2: number);
    }
    type Font_ = Font;
    class Element extends Internal.AccessibleObject implements Internal.Member {
        isStatic(): boolean;
        getName(): string;
        isPackagePrivate(): boolean;
        isSynthetic(): boolean;
        isSynchronized(): boolean;
        isPrivate(): boolean;
        getOwnerType(): Internal.TypeToken<any>;
        isAbstract(): boolean;
        isNative(): boolean;
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        getDeclaringClass(): Internal.Class<any>;
        isProtected(): boolean;
        getAnnotation<A_>(arg0: Internal.Class<A_>): A_;
        isPublic(): boolean;
        isFinal(): boolean;
        getModifiers(): number;
        get ownerType(): Internal.TypeToken<any>;
        get synchronized(): boolean;
        get private(): boolean;
        get static(): boolean;
        get abstract(): boolean;
        get modifiers(): number;
        get declaringClass(): Internal.Class<any>;
        get synthetic(): boolean;
        get protected(): boolean;
        get public(): boolean;
        get native(): boolean;
        get name(): string;
        get final(): boolean;
        get packagePrivate(): boolean;
    }
    type Element_ = Element;
    class PonderTag extends Document.Object implements Internal.IScreenRenderable {
        item(arg0: Internal.IItemProvider_): Internal.PonderTag;
        item(arg0: Internal.IItemProvider_, arg1: boolean, arg2: boolean): Internal.PonderTag;
        getTitle(): string;
        addToIndex(): Internal.PonderTag;
        getMainItem(): Internal.ItemStack;
        icon(arg0: string): Internal.PonderTag;
        icon(arg0: ResourceLocation_): Internal.PonderTag;
        idAsIcon(): Internal.PonderTag;
        getId(): ResourceLocation;
        draw(arg0: Internal.MatrixStack, arg1: Internal.AbstractGui, arg2: number, arg3: number): void;
        draw(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        getDescription(): string;
        defaultLang(arg0: string, arg1: string): Internal.PonderTag;
        static register(): void;
        static readonly KINETIC_APPLIANCES: Internal.PonderTag;
        static readonly FLUIDS: Internal.PonderTag;
        static readonly LOGISTICS: Internal.PonderTag;
        static readonly KINETIC_SOURCES: Internal.PonderTag;
        static readonly CONTRAPTION_ASSEMBLY: Internal.PonderTag;
        static readonly REDSTONE: Internal.PonderTag;
        static readonly DECORATION: Internal.PonderTag;
        static readonly CREATIVE: Internal.PonderTag;
        static readonly MOVEMENT_ANCHOR: Internal.PonderTag;
        static readonly ARM_TARGETS: Internal.PonderTag;
        static readonly CONTRAPTION_ACTOR: Internal.PonderTag;
        static readonly SAILS: Internal.PonderTag;
        static readonly KINETIC_RELAYS: Internal.PonderTag;
        get mainItem(): Internal.ItemStack;
        get description(): string;
        get id(): ResourceLocation;
        get title(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type PonderTag_ = PonderTag;
    class MooshroomEntity$Type extends Internal.Enum<Internal.MooshroomEntity$Type> {
        func_221093_a(): Internal.BlockState;
        static valueOf(arg0: string): Internal.MooshroomEntity$Type;
        static values(): Internal.MooshroomEntity$Type[];
        static readonly RED: Internal.MooshroomEntity$Type;
        static readonly BROWN: Internal.MooshroomEntity$Type;
    }
    type MooshroomEntity$Type_ = "red" | "brown" | MooshroomEntity$Type;
    interface Marker extends Internal.Serializable {
        getParents(): Internal.Marker[];
        setParents(...markers: Internal.Marker[]): Internal.Marker;
        getName(): string;
        hasParents(): boolean;
        hashCode(): number;
        equals(obj: any): boolean;
        isInstanceOf(m: Internal.Marker): boolean;
        isInstanceOf(name: string): boolean;
        addParents(...markers: Internal.Marker[]): Internal.Marker;
        remove(marker: Internal.Marker): boolean;
    }
    type Marker_ = Marker;
    interface ChannelInboundInvoker {
        fireChannelRead(arg0: any): Internal.ChannelInboundInvoker;
        fireChannelInactive(): Internal.ChannelInboundInvoker;
        fireChannelReadComplete(): Internal.ChannelInboundInvoker;
        fireChannelWritabilityChanged(): Internal.ChannelInboundInvoker;
        fireExceptionCaught(arg0: Internal.Throwable): Internal.ChannelInboundInvoker;
        fireUserEventTriggered(arg0: any): Internal.ChannelInboundInvoker;
        fireChannelActive(): Internal.ChannelInboundInvoker;
        fireChannelUnregistered(): Internal.ChannelInboundInvoker;
        fireChannelRegistered(): Internal.ChannelInboundInvoker;
    }
    type ChannelInboundInvoker_ = ChannelInboundInvoker;
    interface UnmodifiableCommentedConfig extends Internal.UnmodifiableConfig {
        containsComment(arg0: Internal.List<string>): boolean;
        containsComment(arg0: string): boolean;
        getOptionalComment(arg0: string): Internal.Optional<string>;
        getOptionalComment(arg0: Internal.List<string>): Internal.Optional<string>;
        entrySet(): Internal.Set<Internal.UnmodifiableCommentedConfig$Entry>;
        getComments(arg0: Internal.Map_<string, Internal.UnmodifiableCommentedConfig$CommentNode_>): void;
        getComments(): Internal.Map<string, Internal.UnmodifiableCommentedConfig$CommentNode>;
        commentMap(): Internal.Map<string, string>;
        getComment(arg0: string): string;
        getComment(arg0: Internal.List<string>): string;
    }
    type UnmodifiableCommentedConfig_ = UnmodifiableCommentedConfig;
    class DefaultEventLoopGroup extends Internal.MultithreadEventLoopGroup {
        scheduleAtFixedRate(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        next(): Internal.EventExecutor;
        schedule(arg0: java_.util.concurrent.Callable_<any>, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        schedule(arg0: Internal.Runnable_, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        submit(arg0: java_.util.concurrent.Callable_<any>): java_.util.concurrent.Future<any>;
        submit(arg0: Internal.Runnable_): java_.util.concurrent.Future<any>;
        submit(arg0: Internal.Runnable_, arg1: any): java_.util.concurrent.Future<any>;
        spliterator(): Internal.Spliterator<Internal.EventExecutor>;
        forEach(arg0: Internal.Consumer_<Internal.EventExecutor_>): void;
        scheduleWithFixedDelay(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        close(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.Executor);
        constructor(arg0: number, arg1: Internal.ThreadFactory);
        constructor(arg0: number);
        constructor();
    }
    type DefaultEventLoopGroup_ = DefaultEventLoopGroup;
    class SMapDataPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179734_a(arg0: Internal.MapData): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149188_c(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: boolean, arg3: boolean, arg4: Internal.Collection<Internal.MapDecoration>, arg5: number[], arg6: number, arg7: number, arg8: number, arg9: number);
    }
    type SMapDataPacket_ = SMapDataPacket;
    class ServerRecipeBook extends Internal.RecipeBook {
        func_192826_c(arg0: Internal.ServerPlayerEntity): void;
        func_192824_e(): Internal.CompoundNBT;
        func_197926_a(arg0: Internal.Collection<Internal.IRecipe<any>>, arg1: Internal.ServerPlayerEntity): number;
        func_197925_b(arg0: Internal.Collection<Internal.IRecipe<any>>, arg1: Internal.ServerPlayerEntity): number;
        func_192825_a(arg0: Internal.CompoundNBT_, arg1: Internal.RecipeManager): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ServerRecipeBook_ = ServerRecipeBook;
    class BufferedImage extends Internal.Image implements Internal.WritableRenderedImage, Internal.Transparency {
        getMinTileX(): number;
        getMinTileY(): number;
        getTileWidth(): number;
        isTileWritable(arg0: number, arg1: number): boolean;
        setRGB(arg0: number, arg1: number, arg2: number): void;
        setRGB(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: number, arg6: number): void;
        coerceData(arg0: boolean): void;
        getNumYTiles(): number;
        getSources(): Internal.Vector<Internal.RenderedImage>;
        getWidth(): number;
        addTileObserver(arg0: Internal.TileObserver_): void;
        getTileGridXOffset(): number;
        getWritableTileIndices(): Internal.Point[];
        getSampleModel(): Internal.SampleModel;
        getWritableTile(arg0: number, arg1: number): Internal.WritableRaster;
        getHeight(): number;
        removeTileObserver(arg0: Internal.TileObserver_): void;
        getPropertyNames(): string[];
        createGraphics(): Internal.Graphics2D;
        getNumXTiles(): number;
        getAlphaRaster(): Internal.WritableRaster;
        getData(arg0: Internal.Rectangle): Internal.Raster;
        getData(): Internal.Raster;
        getRGB(arg0: number, arg1: number): number;
        getRGB(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: number, arg6: number): number[];
        getRaster(): Internal.WritableRaster;
        getTileHeight(): number;
        getSubimage(arg0: number, arg1: number, arg2: number, arg3: number): Internal.BufferedImage;
        getTile(arg0: number, arg1: number): Internal.Raster;
        getColorModel(): Internal.ColorModel;
        getProperty(arg0: string): any;
        setData(arg0: Internal.Raster): void;
        hasTileWriters(): boolean;
        isAlphaPremultiplied(): boolean;
        getTransparency(): number;
        copyData(arg0: Internal.WritableRaster): Internal.WritableRaster;
        getTileGridYOffset(): number;
        getType(): number;
        releaseWritableTile(arg0: number, arg1: number): void;
        getMinX(): number;
        getMinY(): number;
        static readonly TYPE_3BYTE_BGR: 5;
        static readonly TYPE_USHORT_565_RGB: 8;
        static readonly TYPE_INT_ARGB_PRE: 3;
        static readonly TYPE_USHORT_555_RGB: 9;
        static readonly TYPE_USHORT_GRAY: 11;
        static readonly TYPE_BYTE_INDEXED: 13;
        static readonly TYPE_4BYTE_ABGR: 6;
        static readonly TYPE_INT_ARGB: 2;
        static readonly TYPE_CUSTOM: 0;
        static readonly TYPE_INT_RGB: 1;
        static readonly TYPE_INT_BGR: 4;
        static readonly TYPE_BYTE_GRAY: 10;
        static readonly TYPE_4BYTE_ABGR_PRE: 7;
        static readonly TYPE_BYTE_BINARY: 12;
        get numXTiles(): number;
        get sources(): Internal.Vector<Internal.RenderedImage>;
        get data(): Internal.Raster;
        get alphaPremultiplied(): boolean;
        get raster(): Internal.WritableRaster;
        get tileGridYOffset(): number;
        get tileWidth(): number;
        get minTileX(): number;
        get type(): number;
        get minTileY(): number;
        get minY(): number;
        get minX(): number;
        get propertyNames(): string[];
        get transparency(): number;
        get width(): number;
        get colorModel(): Internal.ColorModel;
        get numYTiles(): number;
        get tileGridXOffset(): number;
        get writableTileIndices(): Internal.Point[];
        get sampleModel(): Internal.SampleModel;
        get alphaRaster(): Internal.WritableRaster;
        get height(): number;
        get tileHeight(): number;
        set data(arg0: Internal.Raster);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ColorModel, arg1: Internal.WritableRaster, arg2: boolean, arg3: Internal.Hashtable<any, any>);
        constructor(arg0: number, arg1: number, arg2: number, arg3: any);
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type BufferedImage_ = BufferedImage;
    interface AccessibleText {
        getSelectionStart(): number;
        getSelectedText(): string;
        getIndexAtPoint(arg0: Internal.Point): number;
        getCharCount(): number;
        getCharacterAttribute(arg0: number): Internal.AttributeSet;
        getBeforeIndex(arg0: number, arg1: number): string;
        getAfterIndex(arg0: number, arg1: number): string;
        getSelectionEnd(): number;
        getCaretPosition(): number;
        getAtIndex(arg0: number, arg1: number): string;
        getCharacterBounds(arg0: number): Internal.Rectangle;
    }
    type AccessibleText_ = AccessibleText;
    interface INameable {
        func_200200_C_(): Internal.ITextComponent;
        func_200201_e(): Internal.ITextComponent;
        func_145748_c_(): Internal.ITextComponent;
        func_145818_k_(): boolean;
        (): Internal.ITextComponent;
    }
    type INameable_ = (()=>Internal.ITextComponent) | INameable;
    class SquidEntity extends Internal.WaterMobEntity {
        shouldRiderSit(): boolean;
        static func_234227_m_(): Internal.AttributeModifierMap$MutableAttribute;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_175567_n(): boolean;
        static func_223365_b(arg0: Internal.EntityType_<Internal.SquidEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_175568_b(arg0: number, arg1: number, arg2: number): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_70867_h: number;
        field_70859_f: number;
        field_70866_j: number;
        field_70868_i: number;
        field_70861_d: number;
        field_70862_e: number;
        field_70860_g: number;
        field_70865_by: number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.SquidEntity>, arg1: Internal.World);
    }
    type SquidEntity_ = SquidEntity;
    interface IForgeRegistryEntry <V> {
        getRegistryType(): Internal.Class<V>;
        getRegistryName(): ResourceLocation;
        setRegistryName(arg0: ResourceLocation_): V;
    }
    type IForgeRegistryEntry_<V> = IForgeRegistryEntry<V>;
    class GlBufferTarget extends Internal.Enum<Internal.GlBufferTarget> {
        getBindingParameter(): number;
        static valueOf(name: string): Internal.GlBufferTarget;
        static values(): Internal.GlBufferTarget[];
        getTargetParameter(): number;
        static readonly COPY_WRITE_BUFFER: Internal.GlBufferTarget;
        static readonly COPY_READ_BUFFER: Internal.GlBufferTarget;
        static readonly VALUES: Internal.GlBufferTarget[];
        static readonly COUNT: 4;
        static readonly DRAW_INDIRECT_BUFFER: Internal.GlBufferTarget;
        static readonly ARRAY_BUFFER: Internal.GlBufferTarget;
        get targetParameter(): number;
        get bindingParameter(): number;
    }
    type GlBufferTarget_ = "array_buffer" | "copy_read_buffer" | "copy_write_buffer" | "draw_indirect_buffer" | GlBufferTarget;
    class TypedOptic <S, T, A, B> extends Document.Object {
        static adapter<S_, T_>(arg0: com.mojang.datafixers.types.Type<S_>, arg1: com.mojang.datafixers.types.Type<T_>): Internal.TypedOptic<S_, T_, S_, T_>;
        tType(): com.mojang.datafixers.types.Type<T>;
        aType(): com.mojang.datafixers.types.Type<A>;
        apply<P_, Proof2_>(arg0: Internal.TypeToken<Proof2_>, arg1: Internal.App<Proof2_, P_>, arg2: Internal.App2<P_, A, B>): Internal.App2<P_, S, T>;
        static proj2<F_, G_, G2_>(arg0: com.mojang.datafixers.types.Type<F_>, arg1: com.mojang.datafixers.types.Type<G_>, arg2: com.mojang.datafixers.types.Type<G2_>): Internal.TypedOptic<Internal.Pair<F_, G_>, Internal.Pair<F_, G2_>, G_, G2_>;
        static proj1<F_, G_, F2_>(arg0: com.mojang.datafixers.types.Type<F_>, arg1: com.mojang.datafixers.types.Type<G_>, arg2: com.mojang.datafixers.types.Type<F2_>): Internal.TypedOptic<Internal.Pair<F_, G_>, Internal.Pair<F2_, G_>, F_, F2_>;
        upCast<Proof2_>(arg0: Internal.TypeToken<Proof2_>): Internal.Optional<Internal.Optic<Proof2_, S, T, A, B>>;
        static compoundListElements<K_, V_, V2_>(arg0: com.mojang.datafixers.types.Type<K_>, arg1: com.mojang.datafixers.types.Type<V_>, arg2: com.mojang.datafixers.types.Type<V2_>): Internal.TypedOptic<Internal.List<Internal.Pair<K_, V_>>, Internal.List<Internal.Pair<K_, V2_>>, V_, V2_>;
        static list<A_, B_>(arg0: com.mojang.datafixers.types.Type<A_>, arg1: com.mojang.datafixers.types.Type<B_>): Internal.TypedOptic<Internal.List<A_>, Internal.List<B_>, A_, B_>;
        static instanceOf<Proof2_>(arg0: Internal.Collection<Internal.TypeToken<Internal.K1>>, arg1: Internal.TypeToken<Proof2_>): boolean;
        bType(): com.mojang.datafixers.types.Type<B>;
        sType(): com.mojang.datafixers.types.Type<S>;
        static compoundListKeys<K_, V_, K2_>(arg0: com.mojang.datafixers.types.Type<K_>, arg1: com.mojang.datafixers.types.Type<K2_>, arg2: com.mojang.datafixers.types.Type<V_>): Internal.TypedOptic<Internal.List<Internal.Pair<K_, V_>>, Internal.List<Internal.Pair<K2_, V_>>, K_, K2_>;
        static tagged<K_, A_, B_>(arg0: Internal.TaggedChoice$TaggedChoiceType<K_>, arg1: K_, arg2: com.mojang.datafixers.types.Type<A_>, arg3: com.mojang.datafixers.types.Type<B_>): Internal.TypedOptic<Internal.Pair<K_, any>, Internal.Pair<K_, any>, A_, B_>;
        compose<A1_, B1_>(arg0: Internal.TypedOptic<A, B, A1_, B1_>): Internal.TypedOptic<S, T, A1_, B1_>;
        bounds(): Internal.Set<Internal.TypeToken<Internal.K1>>;
        static inj2<F_, G_, G2_>(arg0: com.mojang.datafixers.types.Type<F_>, arg1: com.mojang.datafixers.types.Type<G_>, arg2: com.mojang.datafixers.types.Type<G2_>): Internal.TypedOptic<Internal.Either<F_, G_>, Internal.Either<F_, G2_>, G_, G2_>;
        static inj1<F_, G_, F2_>(arg0: com.mojang.datafixers.types.Type<F_>, arg1: com.mojang.datafixers.types.Type<G_>, arg2: com.mojang.datafixers.types.Type<F2_>): Internal.TypedOptic<Internal.Either<F_, G_>, Internal.Either<F2_, G_>, F_, F2_>;
        optic(): Internal.Optic<any, S, T, A, B>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TypeToken<Internal.K1>, arg1: com.mojang.datafixers.types.Type<S>, arg2: com.mojang.datafixers.types.Type<T>, arg3: com.mojang.datafixers.types.Type<A>, arg4: com.mojang.datafixers.types.Type<B>, arg5: Internal.Optic<any, S, T, A, B>);
        constructor(arg0: Internal.Set<Internal.TypeToken<Internal.K1>>, arg1: com.mojang.datafixers.types.Type<S>, arg2: com.mojang.datafixers.types.Type<T>, arg3: com.mojang.datafixers.types.Type<A>, arg4: com.mojang.datafixers.types.Type<B>, arg5: Internal.Optic<any, S, T, A, B>);
    }
    type TypedOptic_<S, T, A, B> = TypedOptic<S, T, A, B>;
    abstract class AbstractList <E> extends Internal.AbstractCollection<E> implements Internal.List<E> {
        removeLast(): E;
        getLast(): E;
        replaceAll(arg0: Internal.UnaryOperator<E>): void;
        remove(arg0: number): E;
        addLast(arg0: E): void;
        iterator(): Internal.Iterator<E>;
        stream(): Internal.Stream<E>;
        getFirst(): E;
        removeFirst(): E;
        get(arg0: number): E;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<E>;
        indexOf(arg0: any): number;
        add(arg0: number, arg1: E): void;
        subList(arg0: number, arg1: number): Internal.List<E>;
        set(arg0: number, arg1: E): E;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        sort(arg0: Internal.Comparator<E>): void;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        lastIndexOf(arg0: any): number;
        addAll(arg0: number, arg1: Internal.Collection<E>): boolean;
        listIterator(): Internal.ListIterator<E>;
        listIterator(arg0: number): Internal.ListIterator<E>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<E>;
        addFirst(arg0: E): void;
        get last(): E;
        get first(): E;
    }
    type AbstractList_<E> = AbstractList<E>;
    class GlPrimitiveType extends Internal.Enum<Internal.GlPrimitiveType> {
        static valueOf(name: string): Internal.GlPrimitiveType;
        static values(): Internal.GlPrimitiveType[];
        getId(): number;
        static readonly QUADS: Internal.GlPrimitiveType;
        static readonly TRIANGLES: Internal.GlPrimitiveType;
        static readonly LINES: Internal.GlPrimitiveType;
        get id(): number;
    }
    type GlPrimitiveType_ = "lines" | "triangles" | "quads" | GlPrimitiveType;
    class FluidBuilder extends Internal.BuilderBase {
        textureThick(color: number): Internal.FluidBuilder;
        setBlockstateJson(o: Internal.JsonObject): void;
        bucketColor(c: number): Internal.FluidBuilder;
        density(density: number): Internal.FluidBuilder;
        color(c: number): Internal.FluidBuilder;
        gaseous(): Internal.FluidBuilder;
        textureFlowing(id: ResourceLocation_): Internal.FluidBuilder;
        viscosity(viscosity: number): Internal.FluidBuilder;
        getBlockstateJson(): Internal.JsonObject;
        textureStill(id: ResourceLocation_): Internal.FluidBuilder;
        temperature(temperature: number): Internal.FluidBuilder;
        luminosity(luminosity: number): Internal.FluidBuilder;
        textureThin(color: number): Internal.FluidBuilder;
        setBlockModelJson(o: Internal.JsonObject): void;
        getBlockModelJson(): Internal.JsonObject;
        rarity(rarity: Rarity): Internal.FluidBuilder;
        isGaseous: boolean;
        bucketItem: Internal.BucketItem;
        stillTexture: string;
        flowingFluid: Internal.FlowingFluid;
        flowingTexture: string;
        extraPlatformInfo: any;
        stillFluid: Internal.FlowingFluid;
        block: Internal.FlowingFluidBlock;
        get blockstateJson(): Internal.JsonObject;
        get blockModelJson(): Internal.JsonObject;
        set blockstateJson(o: Internal.JsonObject);
        set blockModelJson(o: Internal.JsonObject);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(i: string);
    }
    type FluidBuilder_ = FluidBuilder;
    class LootCrate extends Document.Object {
        readData(arg0: Internal.CompoundNBT_): void;
        getStringID(): string;
        readNetData(arg0: Internal.PacketBuffer): void;
        createStack(): Internal.ItemStack;
        writeData(arg0: Internal.CompoundNBT_): void;
        writeNetData(arg0: Internal.PacketBuffer): void;
        getConfig(arg0: Internal.ConfigGroup): void;
        static LOOT_CRATES: {};
        stringID: string;
        itemName: string;
        drops: Internal.EntityWeight;
        color: Internal.Color4I;
        glow: boolean;
        readonly table: Internal.RewardTable;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.RewardTable);
    }
    type LootCrate_ = LootCrate;
    interface ChunkMapFTBC {
        getChunksFTBC(): Internal.Long2ObjectLinkedOpenHashMap<Internal.ChunkHolder>;
        (): Internal.Long2ObjectLinkedOpenHashMap<Internal.ChunkHolder>;
    }
    type ChunkMapFTBC_ = (()=>Internal.Long2ObjectLinkedOpenHashMap<Internal.ChunkHolder>) | ChunkMapFTBC;
    class InventoryEventJS extends Internal.PlayerEventJS {
        getInventoryContainer(): Internal.Container;
        get inventoryContainer(): Internal.Container;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.PlayerEntity, menu: Internal.Container);
    }
    type InventoryEventJS_ = InventoryEventJS;
    interface MapEncoder <A> extends Internal.Keyable {
        encode<T_>(arg0: A, arg1: Internal.DynamicOps<T_>, arg2: Internal.RecordBuilder<T_>): Internal.RecordBuilder<T_>;
        flatComap<B_>(arg0: Internal.Function_<B_, Internal.DataResult_<A>>): Internal.MapEncoder<B_>;
        compressedBuilder<T_>(arg0: Internal.DynamicOps<T_>): Internal.RecordBuilder<T_>;
        comap<B_>(arg0: Internal.Function_<B_, A>): Internal.MapEncoder<B_>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.MapEncoder<A>;
        encoder(): Internal.Encoder<A>;
        compressor<T_>(arg0: Internal.DynamicOps<T_>): Internal.KeyCompressor<T_>;
    }
    type MapEncoder_<A> = MapEncoder<A>;
    interface EntryMessage extends Internal.FlowMessage {
    }
    type EntryMessage_ = EntryMessage;
    class RenderState$TextureState extends Internal.RenderState {
        readonly field_228602_Q_: Internal.Optional<ResourceLocation>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: boolean, arg2: boolean);
        constructor();
    }
    type RenderState$TextureState_ = RenderState$TextureState;
    class BeginFrameEvent extends net.minecraftforge.eventbus.api.Event {
        getWorld(): Internal.ClientWorld;
        getCameraPos(): Vec3;
        getInfo(): Internal.ActiveRenderInfo;
        getClippingHelper(): Internal.ClippingHelper;
        get cameraPos(): Vec3;
        get world(): Internal.ClientWorld;
        get clippingHelper(): Internal.ClippingHelper;
        get info(): Internal.ActiveRenderInfo;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ClientWorld, arg1: Internal.ActiveRenderInfo, arg2: Internal.ClippingHelper);
    }
    type BeginFrameEvent_ = BeginFrameEvent;
    interface FloatIterator extends Internal.Iterator<number> {
        nextFloat(): number;
        next(): any;
        next(): number;
        skip(arg0: number): number;
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
        forEachRemaining(arg0: Internal.FloatConsumer_): void;
        (): number;
    }
    type FloatIterator_ = (()=>number) | FloatIterator;
    class RandomTickEvent$Block extends Internal.RandomTickEvent {
        getState(): Internal.BlockState;
        getServerWorld(): Internal.ServerWorld;
        get serverWorld(): Internal.ServerWorld;
        get state(): Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.Random);
    }
    type RandomTickEvent$Block_ = RandomTickEvent$Block;
    interface UserPrincipal extends Internal.Principal {
    }
    type UserPrincipal_ = UserPrincipal;
    interface ISyncableStuff {
        getStuffToSync(arg0: Internal.Consumer_<Internal.ISyncable_<any, any>>): void;
        (arg0: Internal.Consumer<Internal.ISyncable<any, any>>): void;
    }
    type ISyncableStuff_ = ((arg0: Internal.Consumer<Internal.ISyncable<any, any>>)=>void) | ISyncableStuff;
    interface IProgressUpdate {
        func_200210_a(arg0: Internal.ITextComponent_): void;
        func_200211_b(arg0: Internal.ITextComponent_): void;
        func_146586_a(): void;
        func_200209_c(arg0: Internal.ITextComponent_): void;
        func_73718_a(arg0: number): void;
    }
    type IProgressUpdate_ = IProgressUpdate;
    class BatEntity extends Internal.AmbientEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_82235_h(): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_184639_G(): Internal.SoundEvent;
        getEntity(): Internal.Entity;
        func_82236_f(arg0: boolean): void;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        static func_223369_b(arg0: Internal.EntityType_<Internal.BatEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        static func_234175_m_(): Internal.AttributeModifierMap$MutableAttribute;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.BatEntity>, arg1: Internal.World);
    }
    type BatEntity_ = BatEntity;
    class TexturedGlyph extends Document.Object {
        func_225595_a_(italic: boolean, x: number, y: number, matrix: Internal.Matrix4f, vertexConsumer: Internal.IVertexBuilder, red: number, green: number, blue: number, alpha: number, light: number): void;
        func_228162_a_(arg0: Internal.TexturedGlyph$Effect, arg1: Internal.Matrix4f, arg2: Internal.IVertexBuilder, arg3: number): void;
        func_228163_a_(arg0: boolean): Internal.RenderType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.RenderType, arg1: Internal.RenderType, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number);
    }
    type TexturedGlyph_ = TexturedGlyph;
    class CUpdateStructureBlockPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_210380_a(): BlockPos;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_210383_e(): BlockPos;
        func_210384_b(): Internal.StructureBlockTileEntity$UpdateCommand;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_210386_g(): Internal.Mirror;
        func_210378_c(): Internal.StructureMode;
        func_210377_d(): string;
        func_210385_f(): BlockPos;
        func_211402_a(): boolean;
        func_210390_k(): boolean;
        func_210388_i(): string;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_210381_n(): number;
        func_210382_m(): number;
        func_210389_j(): boolean;
        func_210387_l(): boolean;
        func_210379_h(): Internal.Rotation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: BlockPos, arg1: Internal.StructureBlockTileEntity$UpdateCommand, arg2: Internal.StructureMode, arg3: string, arg4: BlockPos, arg5: BlockPos, arg6: Internal.Mirror, arg7: Internal.Rotation, arg8: string, arg9: boolean, arg10: boolean, arg11: boolean, arg12: number, arg13: number);
    }
    type CUpdateStructureBlockPacket_ = CUpdateStructureBlockPacket;
    interface WorldRendererExtended {
        getSodiumWorldRenderer(): Internal.SodiumWorldRenderer;
        (): Internal.SodiumWorldRenderer;
    }
    type WorldRendererExtended_ = (()=>Internal.SodiumWorldRenderer) | WorldRendererExtended;
    class ProbabilityConfig extends Document.Object implements Internal.ICarverConfig, Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236576_b_: Internal.Codec<Internal.ProbabilityConfig>;
        readonly field_203622_a: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type ProbabilityConfig_ = ProbabilityConfig;
    class MapCloningRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type MapCloningRecipe_ = MapCloningRecipe;
    class EntityRayTraceResult extends Internal.RayTraceResult {
        func_216348_a(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Entity);
        constructor(arg0: Internal.Entity, arg1: Vec3);
    }
    type EntityRayTraceResult_ = EntityRayTraceResult;
    class DependencyRequirement extends Internal.Enum<Internal.DependencyRequirement> {
        static valueOf(arg0: string): Internal.DependencyRequirement;
        static values(): Internal.DependencyRequirement[];
        static readonly ONE_STARTED: Internal.DependencyRequirement;
        static readonly ALL_STARTED: Internal.DependencyRequirement;
        static readonly NAME_MAP: Internal.NameMap<Internal.DependencyRequirement>;
        readonly one: boolean;
        readonly id: string;
        readonly completed: boolean;
        static readonly ALL_COMPLETED: Internal.DependencyRequirement;
        static readonly ONE_COMPLETED: Internal.DependencyRequirement;
    }
    type DependencyRequirement_ = "all_completed" | "one_completed" | "all_started" | "one_started" | DependencyRequirement;
    interface JsonDeserializationContext {
        deserialize<T>(arg0: Internal.JsonElement, arg1: Internal.Type): T;
        (arg0: Internal.JsonElement, arg1: Internal.Type): T;
    }
    type JsonDeserializationContext_ = ((arg0: Internal.JsonElement, arg1: Internal.Type)=>T) | JsonDeserializationContext;
    class Rectangle extends Internal.Rectangle2D implements Internal.Shape, Internal.Serializable {
        add(arg0: Internal.Point): void;
        add(arg0: Internal.Rectangle): void;
        add(arg0: number, arg1: number): void;
        move(arg0: number, arg1: number): void;
        getLocation(): Internal.Point;
        grow(arg0: number, arg1: number): void;
        intersects(arg0: Internal.Rectangle): boolean;
        reshape(arg0: number, arg1: number, arg2: number, arg3: number): void;
        union(arg0: Internal.Rectangle): Internal.Rectangle;
        inside(arg0: number, arg1: number): boolean;
        setBounds(arg0: Internal.Rectangle): void;
        setBounds(arg0: number, arg1: number, arg2: number, arg3: number): void;
        translate(arg0: number, arg1: number): void;
        getSize(): Internal.Dimension;
        contains(arg0: Internal.Rectangle): boolean;
        contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        contains(arg0: Internal.Point): boolean;
        contains(arg0: number, arg1: number): boolean;
        setSize(arg0: number, arg1: number): void;
        setSize(arg0: Internal.Dimension): void;
        setLocation(arg0: number, arg1: number): void;
        setLocation(arg0: Internal.Point): void;
        intersection(arg0: Internal.Rectangle): Internal.Rectangle;
        resize(arg0: number, arg1: number): void;
        x: number;
        width: number;
        y: number;
        height: number;
        get size(): Internal.Dimension;
        get location(): Internal.Point;
        set size(arg0: Internal.Dimension);
        set bounds(arg0: Internal.Rectangle);
        set location(arg0: Internal.Point);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.Dimension);
        constructor(arg0: Internal.Point, arg1: Internal.Dimension);
        constructor(arg0: Internal.Point);
        constructor(arg0: Internal.Rectangle);
        constructor();
        constructor(arg0: number, arg1: number);
    }
    type Rectangle_ = Rectangle;
    class FireworkRocketRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type FireworkRocketRecipe_ = FireworkRocketRecipe;
    class LightType extends Internal.Enum<Internal.LightType> {
        static valueOf(arg0: string): Internal.LightType;
        static values(): Internal.LightType[];
        static readonly SKY: Internal.LightType;
        static readonly BLOCK: Internal.LightType;
        readonly field_77198_c: number;
    }
    type LightType_ = "sky" | "block" | LightType;
    class UseAction extends Internal.Enum<Internal.UseAction> {
        static valueOf(arg0: string): Internal.UseAction;
        static values(): Internal.UseAction[];
        static readonly BLOCK: Internal.UseAction;
        static readonly EAT: Internal.UseAction;
        static readonly BOW: Internal.UseAction;
        static readonly NONE: Internal.UseAction;
        static readonly DRINK: Internal.UseAction;
        static readonly SPEAR: Internal.UseAction;
        static readonly CROSSBOW: Internal.UseAction;
    }
    type UseAction_ = "none" | "eat" | "drink" | "block" | "bow" | "spear" | "crossbow" | UseAction;
    class DisplayInfo extends Document.Object implements Internal.DisplayInfoFTBL {
        getIconStackFTBL(): Internal.ItemStack;
        static func_192294_a(arg0: Internal.JsonObject): Internal.DisplayInfo;
        func_192291_d(): Internal.FrameType;
        func_200290_k(): Internal.JsonElement;
        func_192293_c(): ResourceLocation;
        static func_192295_b(arg0: Internal.PacketBuffer): Internal.DisplayInfo;
        func_192297_a(): Internal.ITextComponent;
        func_192298_b(): Internal.ItemStack;
        func_192296_f(): number;
        func_192299_e(): number;
        func_193222_b(): Internal.ITextComponent;
        func_193220_i(): boolean;
        func_192290_a(arg0: Internal.PacketBuffer): void;
        func_193223_h(): boolean;
        func_192292_a(arg0: number, arg1: number): void;
        func_193224_j(): boolean;
        get iconStackFTBL(): Internal.ItemStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemStack, arg1: Internal.ITextComponent, arg2: Internal.ITextComponent, arg3: ResourceLocation, arg4: Internal.FrameType, arg5: boolean, arg6: boolean, arg7: boolean);
    }
    type DisplayInfo_ = DisplayInfo;
    class ExplosionJS extends Document.Object {
        strength(f: number): Internal.ExplosionJS;
        exploder(entity: Internal.EntityJS): Internal.ExplosionJS;
        damagesTerrain(b: boolean): Internal.ExplosionJS;
        explode(): void;
        causesFire(b: boolean): Internal.ExplosionJS;
        destroysTerrain(b: boolean): Internal.ExplosionJS;
        explosionMode: Internal.Explosion$Mode;
        readonly x: number;
        readonly y: number;
        readonly z: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(w: Internal.IWorld, _x: number, _y: number, _z: number);
    }
    type ExplosionJS_ = ExplosionJS;
    abstract class ItemType extends Document.Object {
        applyDefaults(builder: Internal.ItemBuilder): void;
        createItem(arg0: Internal.ItemBuilder): Internal.Item;
        generateData(builder: Internal.ItemBuilder, generator: Internal.DataJsonGenerator): void;
        generateAssets(builder: Internal.ItemBuilder, generator: Internal.AssetJsonGenerator): void;
        readonly name: string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(n: string);
    }
    type ItemType_ = ItemType;
    class FocusEvent extends Internal.ComponentEvent {
        getOppositeComponent(): Internal.Component;
        isTemporary(): boolean;
        getCause(): Internal.FocusEvent$Cause;
        static readonly FOCUS_GAINED: 1004;
        static readonly FOCUS_FIRST: 1004;
        static readonly FOCUS_LAST: 1005;
        static readonly FOCUS_LOST: 1005;
        get temporary(): boolean;
        get oppositeComponent(): Internal.Component;
        get cause(): Internal.FocusEvent$Cause;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Component, arg1: number);
        constructor(arg0: Internal.Component, arg1: number, arg2: boolean);
        constructor(arg0: Internal.Component, arg1: number, arg2: boolean, arg3: Internal.Component, arg4: Internal.FocusEvent$Cause);
        constructor(arg0: Internal.Component, arg1: number, arg2: boolean, arg3: Internal.Component);
    }
    type FocusEvent_ = FocusEvent;
    class Pigment extends Internal.Chemical<Internal.Pigment> implements Internal.IPigmentProvider {
        static readFromNBT(arg0: Internal.CompoundNBT_): Internal.Pigment;
        getName(): string;
        getStack(arg0: number): Internal.PigmentStack;
        getStack(arg0: number): Internal.ChemicalStack<any>;
        setRegistryName(arg0: ResourceLocation_): any;
        static getFromRegistry(arg0: ResourceLocation_): Internal.Pigment;
        get name(): string;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
    }
    type Pigment_ = Registry.mekanism.pigment | Pigment;
    abstract class ShortBuffer extends Internal.Buffer implements Internal.Comparable<Internal.ShortBuffer> {
        compact(): Internal.ShortBuffer;
        clear(): Internal.ShortBuffer;
        duplicate(): Internal.ShortBuffer;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.ShortBuffer): number;
        asReadOnlyBuffer(): Internal.ShortBuffer;
        put(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ShortBuffer;
        put(arg0: number, arg1: number[]): Internal.ShortBuffer;
        put(arg0: number, arg1: Internal.ShortBuffer, arg2: number, arg3: number): Internal.ShortBuffer;
        put(arg0: number[]): Internal.ShortBuffer;
        put(arg0: Internal.ShortBuffer): Internal.ShortBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.ShortBuffer;
        put(arg0: number): Internal.ShortBuffer;
        put(arg0: number, arg1: number): Internal.ShortBuffer;
        static allocate(arg0: number): Internal.ShortBuffer;
        rewind(): Internal.ShortBuffer;
        slice(): Internal.ShortBuffer;
        slice(arg0: number, arg1: number): Internal.ShortBuffer;
        array(): number[];
        mismatch(arg0: Internal.ShortBuffer): number;
        get(arg0: number, arg1: number[]): Internal.ShortBuffer;
        get(arg0: number): number;
        get(arg0: number[], arg1: number, arg2: number): Internal.ShortBuffer;
        get(arg0: number[]): Internal.ShortBuffer;
        get(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ShortBuffer;
        get(): number;
        limit(arg0: number): Internal.ShortBuffer;
        reset(): Internal.ShortBuffer;
        position(arg0: number): Internal.ShortBuffer;
        flip(): Internal.ShortBuffer;
        static wrap(arg0: number[], arg1: number, arg2: number): Internal.ShortBuffer;
        static wrap(arg0: number[]): Internal.ShortBuffer;
        mark(): Internal.ShortBuffer;
        order(): Internal.ByteOrder;
    }
    type ShortBuffer_ = ShortBuffer;
    class RepairItemRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type RepairItemRecipe_ = RepairItemRecipe;
    interface ASPacket$Decoder <T> extends Internal.Function<Internal.PacketBuffer, T> {
    }
    type ASPacket$Decoder_<T> = ASPacket$Decoder<T>;
    class SoundEventAccessor extends Document.Object implements Internal.ISoundEventAccessor<Internal.Sound> {
        func_148720_g(): Internal.Sound;
        func_148720_g(): any;
        func_217867_a(arg0: Internal.SoundEngine): void;
        func_188715_a(arg0: Internal.ISoundEventAccessor<Internal.Sound>): void;
        func_148721_a(): number;
        func_188712_c(): Internal.ITextComponent;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: string);
    }
    type SoundEventAccessor_ = SoundEventAccessor;
    class ForgeConfigSpec extends Internal.UnmodifiableConfigWrapper<Internal.UnmodifiableConfig> {
        getShortOrElse(arg0: Internal.List<string>, arg1: number): number;
        getShortOrElse(arg0: string, arg1: number): number;
        getByte(arg0: Internal.List<string>): number;
        getByte(arg0: string): number;
        correct(arg0: Internal.CommentedConfig, arg1: Internal.ConfigSpec$CorrectionListener_): number;
        correct(arg0: Internal.CommentedConfig, arg1: Internal.ConfigSpec$CorrectionListener_, arg2: Internal.ConfigSpec$CorrectionListener_): number;
        correct(arg0: Internal.CommentedConfig): number;
        save(): void;
        getEnum<T_>(arg0: Internal.List<string>, arg1: Internal.Class<T_>): T_;
        getEnum<T_>(arg0: Internal.List<string>, arg1: Internal.Class<T_>, arg2: Internal.EnumGetMethod_): T_;
        getEnum<T_>(arg0: string, arg1: Internal.Class<T_>): T_;
        getEnum<T_>(arg0: string, arg1: Internal.Class<T_>, arg2: Internal.EnumGetMethod_): T_;
        getLongOrElse(arg0: string, arg1: Internal.LongSupplier_): number;
        getLongOrElse(arg0: Internal.List<string>, arg1: number): number;
        getLongOrElse(arg0: string, arg1: number): number;
        getLongOrElse(arg0: Internal.List<string>, arg1: Internal.LongSupplier_): number;
        isLoaded(): boolean;
        setConfig(arg0: Internal.CommentedConfig): void;
        isCorrecting(): boolean;
        getByteOrElse(arg0: string, arg1: number): number;
        getByteOrElse(arg0: Internal.List<string>, arg1: number): number;
        get<T_>(arg0: string): T_;
        get<T_>(arg0: Internal.List<string>): T_;
        getEnumOrElse<T_>(arg0: string, arg1: T_, arg2: Internal.EnumGetMethod_): T_;
        getEnumOrElse<T_>(arg0: Internal.List<string>, arg1: Internal.Class<T_>, arg2: java_.util.function_.Supplier_<T_>): T_;
        getEnumOrElse<T_>(arg0: string, arg1: Internal.Class<T_>, arg2: Internal.EnumGetMethod_, arg3: java_.util.function_.Supplier_<T_>): T_;
        getEnumOrElse<T_>(arg0: Internal.List<string>, arg1: T_): T_;
        getEnumOrElse<T_>(arg0: Internal.List<string>, arg1: T_, arg2: Internal.EnumGetMethod_): T_;
        getEnumOrElse<T_>(arg0: string, arg1: T_): T_;
        getEnumOrElse<T_>(arg0: string, arg1: Internal.Class<T_>, arg2: java_.util.function_.Supplier_<T_>): T_;
        getEnumOrElse<T_>(arg0: Internal.List<string>, arg1: Internal.Class<T_>, arg2: Internal.EnumGetMethod_, arg3: java_.util.function_.Supplier_<T_>): T_;
        getOrElse<T_>(arg0: Internal.List<string>, arg1: T_): T_;
        getOrElse<T_>(arg0: Internal.List<string>, arg1: java_.util.function_.Supplier_<T_>): T_;
        getOrElse<T_>(arg0: string, arg1: T_): T_;
        getOrElse<T_>(arg0: string, arg1: java_.util.function_.Supplier_<T_>): T_;
        getIntOrElse(arg0: Internal.List<string>, arg1: number): number;
        getIntOrElse(arg0: string, arg1: Internal.IntSupplier_): number;
        getIntOrElse(arg0: Internal.List<string>, arg1: Internal.IntSupplier_): number;
        getIntOrElse(arg0: string, arg1: number): number;
        getValues(): Internal.UnmodifiableConfig;
        apply<T_>(arg0: string): T_;
        apply<T_>(arg0: Internal.List<string>): T_;
        getShort(arg0: string): number;
        getShort(arg0: Internal.List<string>): number;
        getOptionalInt(arg0: string): Internal.OptionalInt;
        getOptionalInt(arg0: Internal.List<string>): Internal.OptionalInt;
        getCharOrElse(arg0: Internal.List<string>, arg1: string): string;
        getCharOrElse(arg0: string, arg1: string): string;
        afterReload(): void;
        getLong(arg0: Internal.List<string>): number;
        getLong(arg0: string): number;
        getInt(arg0: string): number;
        getInt(arg0: Internal.List<string>): number;
        getChar(arg0: string): string;
        getChar(arg0: Internal.List<string>): string;
        getOptional<T_>(arg0: Internal.List<string>): Internal.Optional<T_>;
        getOptional<T_>(arg0: string): Internal.Optional<T_>;
        contains(arg0: string): boolean;
        getSpec(): Internal.UnmodifiableConfig;
        isNull(arg0: string): boolean;
        isNull(arg0: Internal.List<string>): boolean;
        getRaw<T_>(arg0: string): T_;
        getOptionalEnum<T_>(arg0: Internal.List<string>, arg1: Internal.Class<T_>): Internal.Optional<T_>;
        getOptionalEnum<T_>(arg0: Internal.List<string>, arg1: Internal.Class<T_>, arg2: Internal.EnumGetMethod_): Internal.Optional<T_>;
        getOptionalEnum<T_>(arg0: string, arg1: Internal.Class<T_>, arg2: Internal.EnumGetMethod_): Internal.Optional<T_>;
        getOptionalEnum<T_>(arg0: string, arg1: Internal.Class<T_>): Internal.Optional<T_>;
        getOptionalLong(arg0: Internal.List<string>): Internal.OptionalLong;
        getOptionalLong(arg0: string): Internal.OptionalLong;
        isCorrect(arg0: Internal.CommentedConfig): boolean;
        get loaded(): boolean;
        get values(): Internal.UnmodifiableConfig;
        get correcting(): boolean;
        get spec(): Internal.UnmodifiableConfig;
        set config(arg0: Internal.CommentedConfig);
    }
    type ForgeConfigSpec_ = ForgeConfigSpec;
    class PartRequirement$Serializer extends Document.Object implements Internal.JsonDeserializer<Internal.PartRequirement>, Internal.JsonSerializer<Internal.PartRequirement> {
        serialize(arg0: any, arg1: Internal.Type, arg2: Internal.JsonSerializationContext): Internal.JsonElement;
        serialize(arg0: Internal.PartRequirement, arg1: Internal.Type, arg2: Internal.JsonSerializationContext): Internal.JsonElement;
        deserialize(arg0: Internal.JsonElement, arg1: Internal.Type, arg2: Internal.JsonDeserializationContext_): any;
        deserialize(arg0: Internal.JsonElement, arg1: Internal.Type, arg2: Internal.JsonDeserializationContext_): Internal.PartRequirement;
    }
    type PartRequirement$Serializer_ = PartRequirement$Serializer;
    interface ToIntFunction <T> {
        applyAsInt(arg0: T): number;
        (arg0: T): number;
    }
    type ToIntFunction_<T> = ((arg0: T)=>number) | ToIntFunction<T>;
    abstract class Chemical <CHEMICAL> extends Internal.ForgeRegistryEntry<CHEMICAL> implements Internal.IChemicalProvider<CHEMICAL>, Internal.IHasTextComponent, Internal.IHasTranslationKey {
        getColorRepresentation(): number;
        getName(): string;
        getAttributes(): Internal.Collection<Internal.ChemicalAttribute>;
        getAttributeTypes(): Internal.Collection<Internal.Class<Internal.ChemicalAttribute>>;
        getTranslationKey(): string;
        isEmptyType(): boolean;
        getChemical(): CHEMICAL;
        setRegistryName(arg0: ResourceLocation_): any;
        getTags(): Internal.Set<ResourceLocation>;
        getTextComponent(): Internal.ITextComponent;
        getIcon(): ResourceLocation;
        isHidden(): boolean;
        getTint(): number;
        addAttribute(arg0: Internal.ChemicalAttribute): void;
        get<T_>(arg0: Internal.Class<T_>): T_;
        getStack(arg0: number): Internal.ChemicalStack<CHEMICAL>;
        has(arg0: Internal.Class<Internal.ChemicalAttribute>): boolean;
        write(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        isIn(arg0: Internal.ITag<CHEMICAL>): boolean;
        get textComponent(): Internal.ITextComponent;
        get attributeTypes(): Internal.Collection<Internal.Class<Internal.ChemicalAttribute>>;
        get translationKey(): string;
        get hidden(): boolean;
        get chemical(): CHEMICAL;
        get name(): string;
        get icon(): ResourceLocation;
        get colorRepresentation(): number;
        get attributes(): Internal.Collection<Internal.ChemicalAttribute>;
        get emptyType(): boolean;
        get tint(): number;
        get tags(): Internal.Set<ResourceLocation>;
        set registryName(arg0: ResourceLocation_);
    }
    type Chemical_<CHEMICAL> = Chemical<CHEMICAL>;
    abstract class ImmutableCollection$Builder <E> extends Document.Object {
        add(arg0: E): Internal.ImmutableCollection$Builder<E>;
        add(...arg0: E[]): Internal.ImmutableCollection$Builder<E>;
        build(): Internal.ImmutableCollection<E>;
        addAll(arg0: Internal.Iterator<E>): Internal.ImmutableCollection$Builder<E>;
        addAll(arg0: Internal.Iterable_<E>): Internal.ImmutableCollection$Builder<E>;
    }
    type ImmutableCollection$Builder_<E> = ImmutableCollection$Builder<E>;
    interface ExecutorService extends Internal.Executor, Internal.AutoCloseable {
        submit<T_>(arg0: Internal.Runnable_, arg1: T_): java_.util.concurrent.Future<T_>;
        submit(arg0: Internal.Runnable_): java_.util.concurrent.Future<any>;
        submit<T_>(arg0: java_.util.concurrent.Callable_<T_>): java_.util.concurrent.Future<T_>;
        isTerminated(): boolean;
        invokeAll<T_>(arg0: Internal.Collection<java_.util.concurrent.Callable<T_>>): Internal.List<java_.util.concurrent.Future<T_>>;
        invokeAll<T_>(arg0: Internal.Collection<java_.util.concurrent.Callable<T_>>, arg1: number, arg2: Internal.TimeUnit_): Internal.List<java_.util.concurrent.Future<T_>>;
        awaitTermination(arg0: number, arg1: Internal.TimeUnit_): boolean;
        shutdownNow(): Internal.List<Internal.Runnable>;
        invokeAny<T_>(arg0: Internal.Collection<java_.util.concurrent.Callable<T_>>): T_;
        invokeAny<T_>(arg0: Internal.Collection<java_.util.concurrent.Callable<T_>>, arg1: number, arg2: Internal.TimeUnit_): T_;
        close(): void;
        shutdown(): void;
        isShutdown(): boolean;
    }
    type ExecutorService_ = ExecutorService;
    class SScoreboardObjectivePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149339_c(): string;
        func_149338_e(): number;
        func_199856_d(): Internal.ScoreCriteria$RenderType;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149337_d(): Internal.ITextComponent;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ScoreObjective, arg1: number);
    }
    type SScoreboardObjectivePacket_ = SScoreboardObjectivePacket;
    class BooleanConfig extends Internal.ConfigWithVariants<boolean> {
        getIteration(arg0: any, arg1: boolean): any;
        getIteration(v: boolean, next: boolean): boolean;
        getStringForGUI(v: boolean): Internal.ITextComponent;
        getColor(v: boolean): Internal.Color4I;
        getIcon(v: boolean): Internal.Icon;
        static readonly TRUE_TEXT: Internal.StringTextComponent;
        static readonly FALSE_TEXT: Internal.StringTextComponent;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BooleanConfig_ = BooleanConfig;
    class FunctionObject extends Document.Object {
        func_193528_a(): any[];
        static func_237140_a_(arg0: ResourceLocation_, arg1: Internal.CommandDispatcher<Internal.CommandSource>, arg2: Internal.CommandSource, arg3: Internal.List<string>): Internal.FunctionObject;
        func_197001_a(): ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: any[]);
    }
    type FunctionObject_ = FunctionObject;
    class ChunkHolder extends Document.Object implements Internal.IPaperChunkHolder {
        func_219289_k(): boolean;
        mfix$canAdvanceStatus(): boolean;
        func_219292_a(arg0: number): void;
        func_219303_l(): void;
        func_219294_a(arg0: Internal.ChunkPrimerWrapper): void;
        func_219274_a(arg0: Internal.Chunk): void;
        func_219296_a(): Internal.CompletableFuture<Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_219276_a(arg0: Internal.ChunkStatus_, arg1: Internal.ChunkManager): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_219297_b(): Internal.CompletableFuture<Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>>;
        static func_219278_b(arg0: number): Internal.ChunkStatus;
        func_219298_c(): Internal.Chunk;
        func_219277_h(): Internal.ChunkPos;
        func_219299_i(): number;
        func_223492_c(): Internal.CompletableFuture<Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_244386_a(arg0: BlockPos): void;
        mfix$getAvailableChunkNow(): Internal.IChunk;
        func_219280_a(arg0: Internal.LightType_, arg1: number): void;
        mfix$getChunkHolderStatus(): Internal.ChunkStatus;
        func_225410_b(arg0: Internal.ChunkStatus_): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        static func_219286_c(arg0: number): Internal.ChunkHolder$LocationType;
        func_219285_d(): Internal.ChunkStatus;
        func_219281_j(): number;
        func_219302_f(): Internal.CompletableFuture<Internal.IChunk>;
        func_219300_g(): Internal.ChunkHolder$LocationType;
        func_219287_e(): Internal.IChunk;
        func_219301_a(arg0: Internal.ChunkStatus_): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        static readonly field_219307_b: Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        static readonly field_219308_c: Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>;
        field_219315_j: Internal.CompletableFuture<Internal.IChunk>;
        static readonly field_219306_a: Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ChunkPos, arg1: number, arg2: Internal.WorldLightManager, arg3: any, arg4: Internal.ChunkHolder$IPlayerProvider);
    }
    type ChunkHolder_ = ChunkHolder;
    class InterfaceAddress extends Document.Object {
        getBroadcast(): Internal.InetAddress;
        getNetworkPrefixLength(): number;
        getAddress(): Internal.InetAddress;
        get broadcast(): Internal.InetAddress;
        get address(): Internal.InetAddress;
        get networkPrefixLength(): number;
    }
    type InterfaceAddress_ = InterfaceAddress;
    interface Constable {
        describeConstable(): Internal.Optional<Internal.ConstantDesc>;
        (): Internal.Optional<Internal.ConstantDesc>;
    }
    type Constable_ = (()=>Internal.Optional<Internal.ConstantDesc>) | Constable;
    class TopSolidWithNoiseConfig extends Document.Object implements Internal.IPlacementConfig {
        readonly field_204630_a: number;
        readonly field_204631_b: number;
        readonly field_214727_c: number;
        static readonly field_236978_a_: Internal.Codec<Internal.TopSolidWithNoiseConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type TopSolidWithNoiseConfig_ = TopSolidWithNoiseConfig;
    abstract class DamagingProjectileEntity extends Internal.ProjectileEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213281_b(arg0: Internal.CompoundNBT_): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70037_a(arg0: Internal.CompoundNBT_): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_70233_c: number;
        field_70232_b: number;
        field_70230_d: number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.DamagingProjectileEntity>, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number, arg5: Internal.World);
        constructor(arg0: Internal.EntityType<Internal.DamagingProjectileEntity>, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.World);
    }
    type DamagingProjectileEntity_ = DamagingProjectileEntity;
    class ArsNouveauEnchantingApparatusRecipeJS extends Internal.RecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ArsNouveauEnchantingApparatusRecipeJS_ = ArsNouveauEnchantingApparatusRecipeJS;
    class TooltipOverlayEvent extends net.minecraftforge.eventbus.api.Event {
        readonly defaultFood: Internal.FoodValues;
        readonly itemStack: Internal.ItemStack;
        readonly modifiedFood: Internal.FoodValues;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TooltipOverlayEvent_ = TooltipOverlayEvent;
    class ClassFileFormatVersion extends Internal.Enum<Internal.ClassFileFormatVersion> {
        runtimeVersion(): Internal.Runtime$Version;
        major(): number;
        static valueOf(arg0: string): Internal.ClassFileFormatVersion;
        static valueOf(arg0: Internal.Runtime$Version): Internal.ClassFileFormatVersion;
        static fromMajor(arg0: number): Internal.ClassFileFormatVersion;
        static values(): Internal.ClassFileFormatVersion[];
        static latest(): Internal.ClassFileFormatVersion;
        static readonly RELEASE_15: Internal.ClassFileFormatVersion;
        static readonly RELEASE_16: Internal.ClassFileFormatVersion;
        static readonly RELEASE_17: Internal.ClassFileFormatVersion;
        static readonly RELEASE_18: Internal.ClassFileFormatVersion;
        static readonly RELEASE_11: Internal.ClassFileFormatVersion;
        static readonly RELEASE_12: Internal.ClassFileFormatVersion;
        static readonly RELEASE_13: Internal.ClassFileFormatVersion;
        static readonly RELEASE_14: Internal.ClassFileFormatVersion;
        static readonly RELEASE_20: Internal.ClassFileFormatVersion;
        static readonly RELEASE_10: Internal.ClassFileFormatVersion;
        static readonly RELEASE_21: Internal.ClassFileFormatVersion;
        static readonly RELEASE_9: Internal.ClassFileFormatVersion;
        static readonly RELEASE_8: Internal.ClassFileFormatVersion;
        static readonly RELEASE_7: Internal.ClassFileFormatVersion;
        static readonly RELEASE_6: Internal.ClassFileFormatVersion;
        static readonly RELEASE_5: Internal.ClassFileFormatVersion;
        static readonly RELEASE_4: Internal.ClassFileFormatVersion;
        static readonly RELEASE_3: Internal.ClassFileFormatVersion;
        static readonly RELEASE_2: Internal.ClassFileFormatVersion;
        static readonly RELEASE_1: Internal.ClassFileFormatVersion;
        static readonly RELEASE_0: Internal.ClassFileFormatVersion;
        static readonly RELEASE_19: Internal.ClassFileFormatVersion;
    }
    type ClassFileFormatVersion_ = "release_0" | "release_1" | "release_2" | "release_3" | "release_4" | "release_5" | "release_6" | "release_7" | "release_8" | "release_9" | "release_10" | "release_11" | "release_12" | "release_13" | "release_14" | "release_15" | "release_16" | "release_17" | "release_18" | "release_19" | "release_20" | "release_21" | ClassFileFormatVersion;
    interface PrivilegedExceptionAction <T> {
        run(): T;
        (): T;
    }
    type PrivilegedExceptionAction_<T> = (()=>T) | PrivilegedExceptionAction<T>;
    class FlavorEvent extends Internal.EventObject {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Clipboard);
    }
    type FlavorEvent_ = FlavorEvent;
    abstract class AbstractMinecartEntity extends Internal.Entity implements Internal.IForgeEntityMinecart {
        canBeRidden(): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_70492_c(arg0: number): void;
        setDragAir(arg0: number): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_94085_r(): number;
        getDragAir(): number;
        shouldDoRailFunctions(): boolean;
        moveMinecartOnRail(arg0: BlockPos): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        isPoweredCart(): boolean;
        getCurrentCartSpeedCapOnRail(): number;
        func_70489_a(arg0: number, arg1: number, arg2: number): Vec3;
        func_94096_e(arg0: boolean): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getMaxSpeedAirVertical(): number;
        getMaxSpeedWithRail(): number;
        setMaxSpeedAirLateral(arg0: number): void;
        func_174897_t(): Internal.BlockState;
        setCanUseRail(arg0: boolean): void;
        func_94099_q(): number;
        getCurrentRailPosition(): BlockPos;
        canRiderInteract(): boolean;
        getSlopeAdjustment(): number;
        canUseRail(): boolean;
        func_174899_a(arg0: Internal.BlockState): void;
        func_184264_v(): Internal.AbstractMinecartEntity$Type;
        func_70491_i(): number;
        func_96095_a(arg0: number, arg1: number, arg2: number, arg3: boolean): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_70497_h(arg0: number): void;
        func_70493_k(): number;
        shouldRiderSit(): boolean;
        static registerCollisionHandler(arg0: Internal.IMinecartCollisionHandler): void;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        setCurrentCartSpeedCapOnRail(arg0: number): void;
        func_94100_s(): boolean;
        func_94086_l(arg0: number): void;
        func_70495_a(arg0: number, arg1: number, arg2: number, arg3: number): Vec3;
        getMaxSpeedAirLateral(): number;
        getCollisionHandler(): Internal.IMinecartCollisionHandler;
        setMaxSpeedAirVertical(arg0: number): void;
        func_180457_u(): Internal.BlockState;
        func_94095_a(arg0: Internal.DamageSource_): void;
        static func_184263_a(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: Internal.AbstractMinecartEntity$Type_): Internal.AbstractMinecartEntity;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        getComparatorLevel(): number;
        asKJS(): any;
        getCartItem(): Internal.ItemStack;
        func_70496_j(): number;
        getMinecart(): Internal.AbstractMinecartEntity;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70494_i(arg0: number): void;
        getMaxCartSpeedOnRail(): number;
        get maxSpeedAirLateral(): number;
        get maxSpeedWithRail(): number;
        get dragAir(): number;
        get multipartEntity(): boolean;
        get poweredCart(): boolean;
        get currentCartSpeedCapOnRail(): number;
        get cartItem(): Internal.ItemStack;
        get maxCartSpeedOnRail(): number;
        get maxSpeedAirVertical(): number;
        get minecart(): Internal.AbstractMinecartEntity;
        get currentRailPosition(): BlockPos;
        get collisionHandler(): Internal.IMinecartCollisionHandler;
        get slopeAdjustment(): number;
        get parts(): Internal.PartEntity<any>[];
        get comparatorLevel(): number;
        get entity(): Internal.Entity;
        set maxSpeedAirLateral(arg0: number);
        set dragAir(arg0: number);
        set currentCartSpeedCapOnRail(arg0: number);
        set maxSpeedAirVertical(arg0: number);
    }
    type AbstractMinecartEntity_ = AbstractMinecartEntity;
    class TooltipOverlayEvent$Pre extends Internal.TooltipOverlayEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemStack, arg1: Internal.FoodValues, arg2: Internal.FoodValues);
        constructor();
    }
    type TooltipOverlayEvent$Pre_ = TooltipOverlayEvent$Pre;
    class SNBTCompoundTag extends Internal.CompoundNBT {
        getCompound(string: string): Internal.SNBTCompoundTag;
        singleLine(key: string): void;
        singleLine(): void;
        getNullableList(key: string, type: number): Internal.ListNBT;
        wrapAsJavaObject(cx: Internal.Context, scope: Internal.Scriptable, staticType: Internal.Class<any>): Internal.Scriptable;
        putNumber(key: string, number: Internal.Number): void;
        isBoolean(key: string): boolean;
        func_74737_b(): Internal.INBT;
        func_150285_a_(): string;
        func_197637_c(): Internal.ITextComponent;
        getList<T_>(key: string, type: Internal.Class<T_>): Internal.List<T_>;
        static of(tag: Internal.INBT): Internal.SNBTCompoundTag;
        getComment(key: string): string;
        comment(key: string, ...comment: string[]): void;
        comment(key: string, comment: string): void;
        putNull(key: string): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SNBTCompoundTag_ = SNBTCompoundTag;
    class UidContext extends Internal.Enum<Internal.UidContext> {
        static valueOf(arg0: string): Internal.UidContext;
        static values(): Internal.UidContext[];
        static readonly Ingredient: Internal.UidContext;
        static readonly Recipe: Internal.UidContext;
    }
    type UidContext_ = "ingredient" | "recipe" | UidContext;
    class BeeEntity$FindFlowerGoal extends Internal.BeeEntity$PassiveGoal {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BeeEntity);
    }
    type BeeEntity$FindFlowerGoal_ = BeeEntity$FindFlowerGoal;
    class SCameraPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_179780_a(arg0: Internal.World): Internal.Entity;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        field_179781_a: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity);
    }
    type SCameraPacket_ = SCameraPacket;
    class HeatRegistrationEvent extends net.minecraftforge.eventbus.api.Event {
        registerBlockExchanger(arg0: Internal.Block_, arg1: number, arg2: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: any);
    }
    type HeatRegistrationEvent_ = HeatRegistrationEvent;
    interface Spliterator$OfPrimitive <T, T_CONS, T_SPLITR> extends Internal.Spliterator<T> {
        trySplit(): Internal.Spliterator<any>;
        trySplit(): T_SPLITR;
        tryAdvance(arg0: T_CONS): boolean;
        forEachRemaining(arg0: T_CONS): void;
    }
    type Spliterator$OfPrimitive_<T, T_CONS, T_SPLITR> = Spliterator$OfPrimitive<T, T_CONS, T_SPLITR>;
    interface IForgeTagCollectionSupplier {
        getCustomTypeCollection(arg0: ResourceLocation_): Internal.ITagCollection<any>;
        getCustomTypeCollection<T>(arg0: Internal.IForgeRegistry<T>): Internal.ITagCollection<T>;
        getCustomTagTypes(): Internal.Map<ResourceLocation, Internal.ITagCollection<any>>;
    }
    type IForgeTagCollectionSupplier_ = IForgeTagCollectionSupplier;
    interface TypeDescriptor$OfMethod <F, M> extends Internal.TypeDescriptor {
        parameterType(arg0: number): F;
        parameterArray(): F[];
        dropParameterTypes(arg0: number, arg1: number): M;
        parameterCount(): number;
        changeReturnType(arg0: F): M;
        parameterList(): Internal.List<F>;
        insertParameterTypes(arg0: number, ...arg1: F[]): M;
        returnType(): F;
        changeParameterType(arg0: number, arg1: F): M;
    }
    type TypeDescriptor$OfMethod_<F, M> = TypeDescriptor$OfMethod<F, M>;
    class TreeExtractorMappingRecipeJS extends Internal.ThermalRecipeJS {
        trunk(arg0: ResourceLocation_): Internal.TreeExtractorMappingRecipeJS;
        leaf(arg0: ResourceLocation_): Internal.TreeExtractorMappingRecipeJS;
        outputFluid: Internal.FluidStackJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TreeExtractorMappingRecipeJS_ = TreeExtractorMappingRecipeJS;
    interface Function7 <T1, T2, T3, T4, T5, T6, T7, R> {
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7): R;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.BiFunction<T6, T7, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function<T7, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function4<T4, T5, T6, T7, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function3<T5, T6, T7, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function5<T3, T4, T5, T6, T7, R>>;
        curry(): Internal.Function<T1, Internal.Function6<T2, T3, T4, T5, T6, T7, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7): R;
    }
    type Function7_<T1, T2, T3, T4, T5, T6, T7, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7)=>R) | Function7<T1, T2, T3, T4, T5, T6, T7, R>;
    interface BlockStateFTBC {
        getFTBCIsWater(): boolean;
        (): boolean;
    }
    type BlockStateFTBC_ = (()=>boolean) | BlockStateFTBC;
    interface PathMatcher {
        matches(arg0: Internal.Path): boolean;
        (arg0: Internal.Path): boolean;
    }
    type PathMatcher_ = ((arg0: Internal.Path)=>boolean) | PathMatcher;
    interface ResourcePackInfo$IFactory {
        create(arg0: string, arg1: boolean, arg2: java_.util.function_.Supplier_<Internal.IResourcePack_>, arg3: Internal.IResourcePack, arg4: Internal.PackMetadataSection, arg5: Internal.ResourcePackInfo$Priority_, arg6: Internal.IPackNameDecorator_): Internal.ResourcePackInfo;
        (arg0: string, arg1: boolean, arg2: java_.util.function_.Supplier<Internal.IResourcePack>, arg3: Internal.IResourcePack, arg4: Internal.PackMetadataSection, arg5: Internal.ResourcePackInfo$Priority, arg6: Internal.IPackNameDecorator): Internal.ResourcePackInfo;
    }
    type ResourcePackInfo$IFactory_ = ((arg0: string, arg1: boolean, arg2: java_.util.function_.Supplier<Internal.IResourcePack>, arg3: Internal.IResourcePack, arg4: Internal.PackMetadataSection, arg5: Internal.ResourcePackInfo$Priority, arg6: Internal.IPackNameDecorator)=>Internal.ResourcePackInfo) | ResourcePackInfo$IFactory;
    class RenderState$TransparencyState extends Internal.RenderState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Runnable, arg2: Internal.Runnable);
    }
    type RenderState$TransparencyState_ = RenderState$TransparencyState;
    class ItemEntityInteractEventJS extends Internal.PlayerEventJS {
        getTarget(): Internal.EntityJS;
        getHand(): Hand;
        getItem(): Internal.ItemStackJS;
        get item(): Internal.ItemStackJS;
        get target(): Internal.EntityJS;
        get hand(): Hand;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.PlayerEntity, entity: Internal.Entity, hand: Hand);
    }
    type ItemEntityInteractEventJS_ = ItemEntityInteractEventJS;
    abstract class Either <L, R> extends Document.Object implements Internal.App<Internal.Either$Mu<R>, L> {
        mapRight<T_>(arg0: Internal.Function_<R, T_>): Internal.Either<L, T_>;
        flatMap<L2_>(arg0: Internal.Function_<L, Internal.Either_<L2_, R>>): Internal.Either<L2_, R>;
        swap(): Internal.Either<R, L>;
        static left<L_, R_>(arg0: L_): Internal.Either<L_, R_>;
        left(): Internal.Optional<L>;
        static unbox<L_, R_>(arg0: Internal.App<Internal.Either$Mu<R_>, L_>): Internal.Either<L_, R_>;
        mapLeft<T_>(arg0: Internal.Function_<L, T_>): Internal.Either<T_, R>;
        ifLeft(arg0: Internal.Consumer_<L>): Internal.Either<L, R>;
        mapBoth<C_, D_>(arg0: Internal.Function_<L, C_>, arg1: Internal.Function_<R, D_>): Internal.Either<C_, D_>;
        static right<L_, R_>(arg0: R_): Internal.Either<L_, R_>;
        right(): Internal.Optional<R>;
        map<T_>(arg0: Internal.Function_<L, T_>, arg1: Internal.Function_<R, T_>): T_;
        ifRight(arg0: Internal.Consumer_<R>): Internal.Either<L, R>;
        orThrow(): L;
    }
    type Either_<L, R> = Either<L, R>;
    class WorldgenAddEventJSForge extends Internal.WorldgenAddEventJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(e: Internal.BiomeLoadingEvent);
    }
    type WorldgenAddEventJSForge_ = WorldgenAddEventJSForge;
    class AllocationStatus extends Internal.Enum<Internal.AllocationStatus> {
        getPerkTreeSprite(): Internal.SpriteSheetResource;
        static valueOf(arg0: string): Internal.AllocationStatus;
        static values(): Internal.AllocationStatus[];
        getPerkColor(): java_.awt.Color;
        getPerkTreeHaloSprite(): Internal.SpriteSheetResource;
        isAllocated(): boolean;
        getPerkConnectionColor(): java_.awt.Color;
        static readonly ALLOCATED: Internal.AllocationStatus;
        static readonly UNLOCKABLE: Internal.AllocationStatus;
        static readonly GRANTED: Internal.AllocationStatus;
        static readonly UNALLOCATED: Internal.AllocationStatus;
        get perkTreeHaloSprite(): Internal.SpriteSheetResource;
        get perkTreeSprite(): Internal.SpriteSheetResource;
        get perkColor(): java_.awt.Color;
        get perkConnectionColor(): java_.awt.Color;
        get allocated(): boolean;
    }
    type AllocationStatus_ = "unallocated" | "allocated" | "granted" | "unlockable" | AllocationStatus;
    abstract class BaseScreen extends Internal.Panel implements Internal.IOpenableScreen {
        closeGui(): void;
        isMouseOver(x: number, y: number, w: number, h: number): boolean;
        isMouseOver(widget: Internal.Widget): boolean;
        getTheme(): Internal.Theme;
        updateGui(mx: number, my: number, pt: number): void;
        doesGuiPauseGame(): boolean;
        getPrevScreen(): Internal.Screen;
        run(): void;
        initGui(): void;
        openAfter(runnable: Internal.Runnable_): Internal.Runnable;
        openYesNo(title: Internal.ITextComponent_, desc: Internal.ITextComponent_, callback: Internal.Runnable_): void;
        onBack(): void;
        openContextMenu(menu: Internal.List<Internal.ContextMenuItem>): Internal.ContextMenu;
        drawForeground(matrixStack: Internal.MatrixStack, theme: Internal.Theme, x: number, y: number, w: number, h: number): void;
        onInit(): boolean;
        openGuiLater(): void;
        openYesNoFull(title: Internal.ITextComponent_, desc: Internal.ITextComponent_, callback: Internal.BooleanConsumer_): void;
        drawDefaultBackground(matrixStack: Internal.MatrixStack): boolean;
        onPostInit(): void;
        onClosedByKey(key: dev.ftb.mods.ftblibrary.ui.input.Key): boolean;
        itemRenderer: Internal.ItemRenderer;
        contextMenu: Internal.Panel;
        get prevScreen(): Internal.Screen;
        get theme(): Internal.Theme;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BaseScreen_ = BaseScreen;
    abstract class ThreadTaskExecutor <R> extends Document.Object implements Internal.ITaskExecutor<R>, Internal.Executor {
        func_213141_a<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Source_>, R>): Internal.CompletableFuture<Source_>;
        func_213161_c(arg0: Internal.BooleanSupplier_): void;
        func_213142_bd(): string;
        func_213167_f(arg0: Internal.Runnable_): void;
        func_212871_a_(arg0: any): void;
        func_212871_a_(arg0: R): void;
        func_213162_bc(): boolean;
        func_213169_a<V_>(arg0: java_.util.function_.Supplier_<V_>): Internal.CompletableFuture<V_>;
        func_223704_be(): number;
        func_222817_e(arg0: Internal.Runnable_): Internal.CompletableFuture<void>;
        func_233528_c_<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Internal.Either_<Source_, Internal.Exception_>>, R>): Internal.CompletableFuture<Source_>;
        func_213165_a(arg0: Internal.Runnable_): Internal.CompletableFuture<void>;
        close(): void;
        execute(arg0: Internal.Runnable_): void;
    }
    type ThreadTaskExecutor_<R> = ThreadTaskExecutor<R>;
    class RecipeItemHelper extends Document.Object {
        func_194118_a(arg0: Internal.IRecipe<any>, arg1: Internal.IntList, arg2: number): boolean;
        func_194119_a(): void;
        func_221264_a(arg0: Internal.ItemStack, arg1: number): void;
        func_195932_a(arg0: Internal.ItemStack): void;
        func_194121_a(arg0: Internal.IRecipe<any>, arg1: number, arg2: Internal.IntList): number;
        func_194112_a(arg0: Internal.ItemStack): void;
        static func_194113_b(arg0: Internal.ItemStack): number;
        func_194114_b(arg0: Internal.IRecipe<any>, arg1: Internal.IntList): number;
        func_194116_a(arg0: Internal.IRecipe<any>, arg1: Internal.IntList): boolean;
        static func_194115_b(arg0: number): Internal.ItemStack;
        readonly field_194124_a: Internal.Int2IntMap;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RecipeItemHelper_ = RecipeItemHelper;
    class TileRitualPedestal extends Internal.TileReceiverBase<Internal.StarlightReceiverRitualPedestal> implements Internal.CrystalAttributeTile, Internal.TileAreaOfInfluence {
        getMissingAttributes(): Internal.CrystalAttributes;
        isFullyEnhanced(): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        provideEndpoint(arg0: BlockPos): Internal.StarlightReceiverRitualPedestal;
        provideEndpoint(arg0: BlockPos): Internal.ITransmissionReceiver;
        getRitualLinkTo(): BlockPos;
        setReceiverData(arg0: boolean, arg1: Internal.Map_<BlockPos_, boolean>, arg2: Internal.CrystalAttributes): void;
        setAttributes(arg0: Internal.CrystalAttributes): void;
        tryPlaceCrystalInPedestal(arg0: Internal.ItemStack): Internal.ItemStack;
        getOwner(): Internal.PlayerEntity;
        setOwner(arg0: Internal.UUID): void;
        onSelect(arg0: Internal.PlayerEntity): boolean;
        getMirrorCount(): number;
        getEffectColor(): java_.awt.Color;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        providesEffect(): boolean;
        getDimension(): Internal.RegistryKey<Internal.World>;
        getRitualConstellation(): Internal.IWeakConstellation;
        getWorkEffectTimer(): Internal.EffectIncrementer;
        getUnLocalizedDisplayName(): string;
        getLinkPos(): BlockPos;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        requestModelDataUpdate(): void;
        getRitualTrait(): Internal.IMinorConstellation;
        getMirrors(): Internal.Map<BlockPos, boolean>;
        getAttributes(): Internal.CrystalAttributes;
        doesAcceptLinks(): boolean;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        getConfiguredBlockStates(): Internal.Set<Internal.BlockState>;
        getLinkWorld(): Internal.World;
        getRadius(): number;
        provideTransmissionNode(arg0: BlockPos): Internal.StarlightReceiverRitualPedestal;
        provideTransmissionNode(arg0: BlockPos): Internal.IPrismTransmissionNode;
        getModelData(): Internal.IModelData;
        getEffectPosition(): Internal.Vector3;
        getEffectOriginPosition(): BlockPos;
        getCurrentCrystal(): Internal.ItemStack;
        onLoad(): void;
        getNode(): Internal.StarlightReceiverRitualPedestal;
        isWorking(): boolean;
        static readonly RITUAL_ANCHOR_OFFEST: BlockPos;
        static readonly MAX_MIRROR_COUNT: 5;
        static readonly RITUAL_CIRCLE_OFFSETS: Internal.Set<BlockPos>;
        get ritualConstellation(): Internal.IWeakConstellation;
        get linkWorld(): Internal.World;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get ritualLinkTo(): BlockPos;
        get currentCrystal(): Internal.ItemStack;
        get modelData(): Internal.IModelData;
        get ritualTrait(): Internal.IMinorConstellation;
        get configuredBlockStates(): Internal.Set<Internal.BlockState>;
        get effectPosition(): Internal.Vector3;
        get working(): boolean;
        get unLocalizedDisplayName(): string;
        get radius(): number;
        get dimension(): Internal.RegistryKey<Internal.World>;
        get tileEntity(): Internal.TileEntity;
        get owner(): Internal.PlayerEntity;
        get mirrors(): Internal.Map<BlockPos, boolean>;
        get effectColor(): java_.awt.Color;
        get mirrorCount(): number;
        get node(): Internal.StarlightReceiverRitualPedestal;
        get missingAttributes(): Internal.CrystalAttributes;
        get workEffectTimer(): Internal.EffectIncrementer;
        get fullyEnhanced(): boolean;
        get effectOriginPosition(): BlockPos;
        get linkPos(): BlockPos;
        get attributes(): Internal.CrystalAttributes;
        set attributes(arg0: Internal.CrystalAttributes);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TileRitualPedestal_ = TileRitualPedestal;
    interface IForgeEffect {
        renderInventoryEffect(arg0: Internal.EffectInstance, arg1: Internal.DisplayEffectsScreen<any>, arg2: Internal.MatrixStack, arg3: number, arg4: number, arg5: number): void;
        getGuiSortColor(arg0: Internal.EffectInstance): number;
        shouldRenderHUD(arg0: Internal.EffectInstance): boolean;
        getEffect(): Internal.Effect;
        shouldRenderInvText(arg0: Internal.EffectInstance): boolean;
        shouldRender(arg0: Internal.EffectInstance): boolean;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        renderHUDEffect(arg0: Internal.EffectInstance, arg1: Internal.AbstractGui, arg2: Internal.MatrixStack, arg3: number, arg4: number, arg5: number, arg6: number): void;
    }
    type IForgeEffect_ = IForgeEffect;
    class GuiScreenEvent$KeyboardCharTypedEvent$Pre extends Internal.GuiScreenEvent$KeyboardCharTypedEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: string, arg2: number);
    }
    type GuiScreenEvent$KeyboardCharTypedEvent$Pre_ = GuiScreenEvent$KeyboardCharTypedEvent$Pre;
    interface IWorldPosCallable {
        func_221484_a<T>(arg0: Internal.BiFunction_<Internal.World_, BlockPos_, T>): Internal.Optional<T>;
        func_221485_a<T>(arg0: Internal.BiFunction_<Internal.World_, BlockPos_, T>, arg1: T): T;
        func_221486_a(arg0: Internal.BiConsumer_<Internal.World_, BlockPos_>): void;
        (arg0: Internal.BiFunction<Internal.World, BlockPos, T>): Internal.Optional<T>;
    }
    type IWorldPosCallable_ = ((arg0: Internal.BiFunction<Internal.World, BlockPos, T>)=>Internal.Optional<T>) | IWorldPosCallable;
    abstract class ColorModel extends Document.Object implements Internal.Transparency {
        getNumColorComponents(): number;
        coerceData(arg0: Internal.WritableRaster, arg1: boolean): Internal.ColorModel;
        getAlpha(arg0: number): number;
        getAlpha(arg0: any): number;
        getUnnormalizedComponents(arg0: number[], arg1: number, arg2: number[], arg3: number): number[];
        getDataElement(arg0: number[], arg1: number): number;
        getDataElement(arg0: number[], arg1: number): number;
        getRed(arg0: number): number;
        getRed(arg0: any): number;
        getTransferType(): number;
        createCompatibleSampleModel(arg0: number, arg1: number): Internal.SampleModel;
        getComponents(arg0: any, arg1: number[], arg2: number): number[];
        getComponents(arg0: number, arg1: number[], arg2: number): number[];
        static getRGBdefault(): Internal.ColorModel;
        hasAlpha(): boolean;
        getAlphaRaster(arg0: Internal.WritableRaster): Internal.WritableRaster;
        getRGB(arg0: any): number;
        getRGB(arg0: number): number;
        isCompatibleSampleModel(arg0: Internal.SampleModel): boolean;
        getNumComponents(): number;
        getPixelSize(): number;
        getColorSpace(): Internal.ColorSpace;
        createCompatibleWritableRaster(arg0: number, arg1: number): Internal.WritableRaster;
        getBlue(arg0: number): number;
        getBlue(arg0: any): number;
        isAlphaPremultiplied(): boolean;
        getTransparency(): number;
        getNormalizedComponents(arg0: any, arg1: number[], arg2: number): number[];
        getNormalizedComponents(arg0: number[], arg1: number, arg2: number[], arg3: number): number[];
        getGreen(arg0: any): number;
        getGreen(arg0: number): number;
        getDataElements(arg0: number, arg1: any): any;
        getDataElements(arg0: number[], arg1: number, arg2: any): any;
        getDataElements(arg0: number[], arg1: number, arg2: any): any;
        isCompatibleRaster(arg0: Internal.Raster): boolean;
        getComponentSize(): number[];
        getComponentSize(arg0: number): number;
        get colorSpace(): Internal.ColorSpace;
        get rGBdefault(): Internal.ColorModel;
        get alphaPremultiplied(): boolean;
        get transparency(): number;
        get transferType(): number;
        get componentSize(): number[];
        get numColorComponents(): number;
        get pixelSize(): number;
        get numComponents(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type ColorModel_ = ColorModel;
    interface GameRules$IRuleEntryVisitor {
        func_223481_a<T>(arg0: Internal.GameRules$RuleKey<T>, arg1: Internal.GameRules$RuleType<T>): void;
        func_230483_c_(arg0: Internal.GameRules$RuleKey<Internal.GameRules$IntegerValue>, arg1: Internal.GameRules$RuleType<Internal.GameRules$IntegerValue>): void;
        func_230482_b_(arg0: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>, arg1: Internal.GameRules$RuleType<Internal.GameRules$BooleanValue>): void;
    }
    type GameRules$IRuleEntryVisitor_ = GameRules$IRuleEntryVisitor;
    class ItemBuilder extends Internal.BuilderBase {
        maxStackSize(v: number): Internal.ItemBuilder;
        color(index: number, c: number): Internal.ItemBuilder;
        maxDamage(v: number): Internal.ItemBuilder;
        tooltip(text: Internal.ITextComponent_): Internal.ItemBuilder;
        containerItem(id: string): Internal.ItemBuilder;
        type(t: Internal.ItemType): Internal.ItemBuilder;
        subtypes(fn: Internal.Function_<Internal.ItemStackJS_, Internal.Collection_<Internal.ItemStackJS_>>): Internal.ItemBuilder;
        tier(t: string): Internal.ItemBuilder;
        getAttackSpeed(): number;
        burnTime(v: number): Internal.ItemBuilder;
        tag(tag: string): Internal.ItemBuilder;
        parentModel(m: string): Internal.ItemBuilder;
        attackDamage(f: number): Internal.ItemBuilder;
        group(g: string): Internal.ItemBuilder;
        texture(tex: string): Internal.ItemBuilder;
        tool(type: ToolType, level: number): Internal.ItemBuilder;
        getMiningSpeed(): number;
        miningSpeed(f: number): Internal.ItemBuilder;
        food(b: Internal.Consumer_<Internal.FoodBuilder_>): Internal.ItemBuilder;
        getToolsMap(): Internal.Map<ToolType, number>;
        unstackable(): Internal.ItemBuilder;
        getAttackDamage(): number;
        attackSpeed(f: number): Internal.ItemBuilder;
        glow(v: boolean): Internal.ItemBuilder;
        rarity(v: Rarity): Internal.ItemBuilder;
        createItemProperties(): Internal.Item$Properties;
        toolTier: Internal.IItemTier;
        foodBuilder: Internal.FoodBuilder;
        tools: Internal.Map<ToolType, number>;
        defaultTags: Internal.Set<string>;
        armorTier: Internal.IArmorMaterial;
        modelJson: Internal.JsonObject;
        static readonly ARMOR_TIERS: {"gold":Internal.ArmorMaterial,"chain":Internal.ArmorMaterial,"diamond":Internal.ArmorMaterial,"turtle":Internal.ArmorMaterial,"iron":Internal.ArmorMaterial,"leather":Internal.ArmorMaterial,"netherite":Internal.ArmorMaterial};
        item: Internal.Item;
        attackSpeedBaseline: number;
        static readonly TOOL_TIERS: {"gold":Internal.ItemTier,"diamond":Internal.ItemTier,"iron":Internal.ItemTier,"wood":Internal.ItemTier,"stone":Internal.ItemTier,"netherite":Internal.ItemTier};
        attackDamageBaseline: number;
        get toolsMap(): Internal.Map<ToolType, number>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(i: string);
    }
    type ItemBuilder_ = ItemBuilder;
    interface AccessorFirstPersonRenderer {
        botania_transformFirstPerson(arg0: Internal.MatrixStack, arg1: Internal.HandSide_, arg2: number): void;
        botania_transformSideFirstPerson(arg0: Internal.MatrixStack, arg1: Internal.HandSide_, arg2: number): void;
    }
    type AccessorFirstPersonRenderer_ = AccessorFirstPersonRenderer;
    interface Applicative <F, Mu> extends Internal.Functor<F, Mu> {
        point<A_>(arg0: A_): Internal.App<Mu, A_>;
        apply2<A_, B_, R_>(arg0: Internal.BiFunction_<A_, B_, R_>, arg1: Internal.App<Mu, A_>, arg2: Internal.App<Mu, B_>): Internal.App<Mu, R_>;
        apply3<T1_, T2_, T3_, R_>(arg0: Internal.Function3_<T1_, T2_, T3_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>): Internal.App<Mu, R_>;
        apply4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.Function4_<T1_, T2_, T3_, T4_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>): Internal.App<Mu, R_>;
        ap11<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, R_>(arg0: Internal.App<Mu, Internal.Function11<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>, arg11: Internal.App<Mu, T11_>): Internal.App<Mu, R_>;
        ap2<A_, B_, R_>(arg0: Internal.App<Mu, Internal.BiFunction<A_, B_, R_>>, arg1: Internal.App<Mu, A_>, arg2: Internal.App<Mu, B_>): Internal.App<Mu, R_>;
        apply5<T1_, T2_, T3_, T4_, T5_, R_>(arg0: Internal.Function5_<T1_, T2_, T3_, T4_, T5_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>): Internal.App<Mu, R_>;
        ap10<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, R_>(arg0: Internal.App<Mu, Internal.Function10<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>): Internal.App<Mu, R_>;
        lift2<A_, B_, R_>(arg0: Internal.App<Mu, Internal.BiFunction<A_, B_, R_>>): Internal.BiFunction<Internal.App<Mu, A_>, Internal.App<Mu, B_>, Internal.App<Mu, R_>>;
        ap4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.App<Mu, Internal.Function4<T1_, T2_, T3_, T4_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>): Internal.App<Mu, R_>;
        lift1<A_, R_>(arg0: Internal.App<Mu, Internal.Function<A_, R_>>): Internal.Function<Internal.App<Mu, A_>, Internal.App<Mu, R_>>;
        ap3<T1_, T2_, T3_, R_>(arg0: Internal.App<Mu, Internal.Function3<T1_, T2_, T3_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>): Internal.App<Mu, R_>;
        ap6<T1_, T2_, T3_, T4_, T5_, T6_, R_>(arg0: Internal.App<Mu, Internal.Function6<T1_, T2_, T3_, T4_, T5_, T6_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>): Internal.App<Mu, R_>;
        ap5<T1_, T2_, T3_, T4_, T5_, R_>(arg0: Internal.App<Mu, Internal.Function5<T1_, T2_, T3_, T4_, T5_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>): Internal.App<Mu, R_>;
        ap8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>(arg0: Internal.App<Mu, Internal.Function8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>): Internal.App<Mu, R_>;
        lift6<T1_, T2_, T3_, T4_, T5_, T6_, R_>(arg0: Internal.App<Mu, Internal.Function6<T1_, T2_, T3_, T4_, T5_, T6_, R_>>): Internal.Function6<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, T4_>, Internal.App<Mu, T5_>, Internal.App<Mu, T6_>, Internal.App<Mu, R_>>;
        ap7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>(arg0: Internal.App<Mu, Internal.Function7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>): Internal.App<Mu, R_>;
        lift5<T1_, T2_, T3_, T4_, T5_, R_>(arg0: Internal.App<Mu, Internal.Function5<T1_, T2_, T3_, T4_, T5_, R_>>): Internal.Function5<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, T4_>, Internal.App<Mu, T5_>, Internal.App<Mu, R_>>;
        lift4<T1_, T2_, T3_, T4_, R_>(arg0: Internal.App<Mu, Internal.Function4<T1_, T2_, T3_, T4_, R_>>): Internal.Function4<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, T4_>, Internal.App<Mu, R_>>;
        lift3<T1_, T2_, T3_, R_>(arg0: Internal.App<Mu, Internal.Function3<T1_, T2_, T3_, R_>>): Internal.Function3<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, R_>>;
        ap9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>(arg0: Internal.App<Mu, Internal.Function9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>): Internal.App<Mu, R_>;
        apply6<T1_, T2_, T3_, T4_, T5_, T6_, R_>(arg0: Internal.Function6_<T1_, T2_, T3_, T4_, T5_, T6_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>): Internal.App<Mu, R_>;
        apply7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>(arg0: Internal.Function7_<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>): Internal.App<Mu, R_>;
        lift9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>(arg0: Internal.App<Mu, Internal.Function9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>>): Internal.Function9<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, T4_>, Internal.App<Mu, T5_>, Internal.App<Mu, T6_>, Internal.App<Mu, T7_>, Internal.App<Mu, T8_>, Internal.App<Mu, T9_>, Internal.App<Mu, R_>>;
        apply8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>(arg0: Internal.Function8_<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>): Internal.App<Mu, R_>;
        lift8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>(arg0: Internal.App<Mu, Internal.Function8<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, R_>>): Internal.Function8<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, T4_>, Internal.App<Mu, T5_>, Internal.App<Mu, T6_>, Internal.App<Mu, T7_>, Internal.App<Mu, T8_>, Internal.App<Mu, R_>>;
        apply9<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>(arg0: Internal.Function9_<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, R_>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>): Internal.App<Mu, R_>;
        lift7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>(arg0: Internal.App<Mu, Internal.Function7<T1_, T2_, T3_, T4_, T5_, T6_, T7_, R_>>): Internal.Function7<Internal.App<Mu, T1_>, Internal.App<Mu, T2_>, Internal.App<Mu, T3_>, Internal.App<Mu, T4_>, Internal.App<Mu, T5_>, Internal.App<Mu, T6_>, Internal.App<Mu, T7_>, Internal.App<Mu, R_>>;
        ap<A_, R_>(arg0: Internal.Function_<A_, R_>, arg1: Internal.App<Mu, A_>): Internal.App<Mu, R_>;
        ap<A_, R_>(arg0: Internal.App<Mu, Internal.Function<A_, R_>>, arg1: Internal.App<Mu, A_>): Internal.App<Mu, R_>;
        ap16<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_, R_>(arg0: Internal.App<Mu, Internal.Function16<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>, arg11: Internal.App<Mu, T11_>, arg12: Internal.App<Mu, T12_>, arg13: Internal.App<Mu, T13_>, arg14: Internal.App<Mu, T14_>, arg15: Internal.App<Mu, T15_>, arg16: Internal.App<Mu, T16_>): Internal.App<Mu, R_>;
        ap13<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, R_>(arg0: Internal.App<Mu, Internal.Function13<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>, arg11: Internal.App<Mu, T11_>, arg12: Internal.App<Mu, T12_>, arg13: Internal.App<Mu, T13_>): Internal.App<Mu, R_>;
        ap12<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, R_>(arg0: Internal.App<Mu, Internal.Function12<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>, arg11: Internal.App<Mu, T11_>, arg12: Internal.App<Mu, T12_>): Internal.App<Mu, R_>;
        ap15<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, R_>(arg0: Internal.App<Mu, Internal.Function15<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>, arg11: Internal.App<Mu, T11_>, arg12: Internal.App<Mu, T12_>, arg13: Internal.App<Mu, T13_>, arg14: Internal.App<Mu, T14_>, arg15: Internal.App<Mu, T15_>): Internal.App<Mu, R_>;
        ap14<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, R_>(arg0: Internal.App<Mu, Internal.Function14<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, R_>>, arg1: Internal.App<Mu, T1_>, arg2: Internal.App<Mu, T2_>, arg3: Internal.App<Mu, T3_>, arg4: Internal.App<Mu, T4_>, arg5: Internal.App<Mu, T5_>, arg6: Internal.App<Mu, T6_>, arg7: Internal.App<Mu, T7_>, arg8: Internal.App<Mu, T8_>, arg9: Internal.App<Mu, T9_>, arg10: Internal.App<Mu, T10_>, arg11: Internal.App<Mu, T11_>, arg12: Internal.App<Mu, T12_>, arg13: Internal.App<Mu, T13_>, arg14: Internal.App<Mu, T14_>): Internal.App<Mu, R_>;
    }
    type Applicative_<F, Mu> = Applicative<F, Mu>;
    class EntityEvent$EnteringChunk extends Internal.EntityEvent {
        setOldChunkX(arg0: number): void;
        getOldChunkX(): number;
        setNewChunkZ(arg0: number): void;
        getNewChunkZ(): number;
        setOldChunkZ(arg0: number): void;
        getOldChunkZ(): number;
        setNewChunkX(arg0: number): void;
        getNewChunkX(): number;
        get newChunkX(): number;
        get newChunkZ(): number;
        get oldChunkZ(): number;
        get oldChunkX(): number;
        set newChunkX(arg0: number);
        set newChunkZ(arg0: number);
        set oldChunkZ(arg0: number);
        set oldChunkX(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Entity, arg1: number, arg2: number, arg3: number, arg4: number);
        constructor();
    }
    type EntityEvent$EnteringChunk_ = EntityEvent$EnteringChunk;
    class EquipmentSlotType$Group extends Internal.Enum<Internal.EquipmentSlotType$Group> {
        static valueOf(arg0: string): Internal.EquipmentSlotType$Group;
        static values(): Internal.EquipmentSlotType$Group[];
        static readonly ARMOR: Internal.EquipmentSlotType$Group;
        static readonly HAND: Internal.EquipmentSlotType$Group;
    }
    type EquipmentSlotType$Group_ = "hand" | "armor" | EquipmentSlotType$Group;
    class FluidBlockRenderer extends Document.Object {
        func_228796_a_(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.IVertexBuilder, arg3: Internal.FluidState): boolean;
        static func_239281_a_(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.FluidState, arg3: Internal.BlockState, arg4: Internal.Direction_): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FluidBlockRenderer_ = FluidBlockRenderer;
    interface DoubleCollection extends Internal.Collection<number>, Internal.DoubleIterable {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        add(arg0: number): boolean;
        removeAll(arg0: Internal.DoubleCollection): boolean;
        contains(arg0: any): boolean;
        contains(arg0: number): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.DoubleIterator;
        addAll(arg0: Internal.DoubleCollection): boolean;
        toDoubleArray(): number[];
        toDoubleArray(arg0: number[]): number[];
        containsAll(arg0: Internal.DoubleCollection): boolean;
        toArray(arg0: number[]): number[];
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.DoubleCollection): boolean;
        removeIf(arg0: Internal.DoublePredicate_): boolean;
        removeIf(arg0: Internal.Predicate_<number>): boolean;
    }
    type DoubleCollection_ = DoubleCollection;
    interface IModBusEvent {
    }
    type IModBusEvent_ = IModBusEvent;
    class ReactorConfig extends Internal.GeneratorConfig {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type ReactorConfig_ = ReactorConfig;
    interface DisplayInfoFTBL {
        getIconStackFTBL(): Internal.ItemStack;
        (): Internal.ItemStack;
    }
    type DisplayInfoFTBL_ = (()=>Internal.ItemStack) | DisplayInfoFTBL;
    class ClientPlayerEntity extends Internal.AbstractClientPlayerEntity {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_71165_d(arg0: string): void;
        func_228353_F_(): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_142021_k(): string;
        func_228354_I_(): boolean;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_184839_n(arg0: number): void;
        func_228355_a_(arg0: boolean): void;
        func_175163_u(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        localvar$bcf000$_caelus_changeEquippedStack(arg0: Internal.ItemStack): Internal.ItemStack;
        func_71150_b(arg0: number): void;
        func_239206_w_(): number;
        func_71152_a(arg0: number, arg1: number, arg2: number): void;
        updateSyncFields(arg0: Internal.ClientPlayerEntity): void;
        func_110319_bJ(): number;
        func_70626_be(): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        func_193103_a(arg0: Internal.IRecipe<any>): void;
        func_189809_N(): boolean;
        func_175158_f(arg0: string): void;
        redirect$bld000$elytraOverride(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        handler$cnc000$noSwimmingWithHeavyBootsOn(arg0: Internal.CallbackInfoReturnable<any>): void;
        getEntity(): Internal.Entity;
        func_184838_M(): boolean;
        func_146107_m(): Internal.StatisticsManager;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_203719_J(): number;
        func_175159_q(): void;
        func_199507_B(): Internal.ClientRecipeBook;
        handler$bcf000$_caelus_checkFlight(arg0: Internal.CallbackInfo): void;
        func_110317_t(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        readonly field_71174_a: Internal.ClientPlayNetHandler;
        field_192036_cb: Internal.ClientRecipeBook;
        field_71080_cy: number;
        field_71157_e: number;
        field_71155_g: number;
        field_71164_i: number;
        field_71158_b: Internal.MovementInput;
        field_71154_f: number;
        field_71163_h: number;
        field_71086_bY: number;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft, arg1: Internal.ClientWorld, arg2: Internal.ClientPlayNetHandler, arg3: Internal.StatisticsManager, arg4: Internal.ClientRecipeBook, arg5: boolean, arg6: boolean);
    }
    type ClientPlayerEntity_ = ClientPlayerEntity;
    class SPlayerListItemPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179767_a(): Internal.List<Internal.SPlayerListItemPacket$AddPlayerData>;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179768_b(): Internal.SPlayerListItemPacket$Action;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SPlayerListItemPacket$Action, arg1: Internal.Iterable<Internal.ServerPlayerEntity>);
        constructor(arg0: Internal.SPlayerListItemPacket$Action, arg1: Internal.ServerPlayerEntity[]);
        constructor();
    }
    type SPlayerListItemPacket_ = SPlayerListItemPacket;
    class BlockModelConfiguration$VisibilityData extends Document.Object {
        setVisibilityState(arg0: string, arg1: boolean): void;
        isVisible(arg0: Internal.IModelGeometryPart, arg1: boolean): boolean;
        hasCustomVisibility(arg0: Internal.IModelGeometryPart): boolean;
        copyFrom(arg0: Internal.BlockModelConfiguration$VisibilityData): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BlockModelConfiguration$VisibilityData_ = BlockModelConfiguration$VisibilityData;
    class Insets extends Document.Object implements Internal.Cloneable, Internal.Serializable {
        set(arg0: number, arg1: number, arg2: number, arg3: number): void;
        clone(): any;
        top: number;
        left: number;
        bottom: number;
        right: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type Insets_ = Insets;
    abstract class Provider extends Internal.Properties {
        getVersion(): number;
        isConfigured(): boolean;
        getName(): string;
        getInfo(): string;
        getVersionStr(): string;
        getServices(): Internal.Set<Internal.Provider$Service>;
        configure(arg0: string): Internal.Provider;
        getService(arg0: string, arg1: string): Internal.Provider$Service;
        get configured(): boolean;
        get versionStr(): string;
        get name(): string;
        get services(): Internal.Set<Internal.Provider$Service>;
        get version(): number;
        get info(): string;
    }
    type Provider_ = Provider;
    class ReuseableStream <T> extends Document.Object {
        func_212761_a(): Internal.Stream<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Stream<T>);
    }
    type ReuseableStream_<T> = ReuseableStream<T>;
    interface IEquipable {
        func_110257_ck(): boolean;
        func_230264_L__(): boolean;
        func_230266_a_(arg0: Internal.SoundCategory_): void;
    }
    type IEquipable_ = IEquipable;
    interface WritableByteChannel extends java_.nio.channels.Channel {
        write(arg0: Internal.ByteBuffer): number;
        (arg0: Internal.ByteBuffer): number;
    }
    type WritableByteChannel_ = ((arg0: Internal.ByteBuffer)=>number) | WritableByteChannel;
    abstract class AbstractInt2ObjectFunction <V> extends Document.Object implements Internal.Int2ObjectFunction<V>, Internal.Serializable {
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        size(): number;
        compose<V_>(arg0: Internal.Function_<V_, number>): Internal.Function<V_, V>;
        apply(arg0: number): V;
        apply(arg0: number): V;
        containsKey(arg0: any): boolean;
        containsKey(arg0: number): boolean;
        get(arg0: any): V;
        get(arg0: number): V;
        clear(): void;
        andThen<V_>(arg0: Internal.Function_<V, V_>): Internal.Function<number, V_>;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        put(arg0: number, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: number): V;
    }
    type AbstractInt2ObjectFunction_<V> = AbstractInt2ObjectFunction<V>;
    class AudioStreamManager extends Document.Object {
        func_217908_a(arg0: Internal.Collection<Internal.Sound>): Internal.CompletableFuture<any>;
        func_217909_a(arg0: ResourceLocation_): Internal.CompletableFuture<Internal.AudioStreamBuffer>;
        func_217917_b(arg0: ResourceLocation_, arg1: boolean): Internal.CompletableFuture<Internal.IAudioStream>;
        func_217912_a(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IResourceManager);
    }
    type AudioStreamManager_ = AudioStreamManager;
    class Pair$Mu <S> extends Document.Object implements Internal.K1 {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Pair$Mu_<S> = Pair$Mu<S>;
    class ResourcePackInfo extends Document.Object implements Internal.AutoCloseable {
        func_195795_c(): Internal.ITextComponent;
        static func_195793_a(arg0: string, arg1: boolean, arg2: java_.util.function_.Supplier_<Internal.IResourcePack_>, arg3: Internal.ResourcePackInfo$IFactory_, arg4: Internal.ResourcePackInfo$Priority_, arg5: Internal.IPackNameDecorator_): Internal.ResourcePackInfo;
        func_195790_f(): string;
        func_195791_d(): Internal.PackCompatibility;
        func_195794_a(arg0: boolean): Internal.ITextComponent;
        func_195798_h(): boolean;
        func_232614_i_(): Internal.IPackNameDecorator;
        func_195789_b(): Internal.ITextComponent;
        func_195796_e(): Internal.IResourcePack;
        func_195792_i(): Internal.ResourcePackInfo$Priority;
        close(): void;
        func_195797_g(): boolean;
        isHidden(): boolean;
        get hidden(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: boolean, arg2: java_.util.function_.Supplier<Internal.IResourcePack>, arg3: Internal.IResourcePack, arg4: Internal.PackMetadataSection, arg5: Internal.ResourcePackInfo$Priority, arg6: Internal.IPackNameDecorator, arg7: boolean);
        constructor(arg0: string, arg1: boolean, arg2: java_.util.function_.Supplier<Internal.IResourcePack>, arg3: Internal.ITextComponent, arg4: Internal.ITextComponent, arg5: Internal.PackCompatibility, arg6: Internal.ResourcePackInfo$Priority, arg7: boolean, arg8: Internal.IPackNameDecorator, arg9: boolean);
        constructor(arg0: string, arg1: boolean, arg2: java_.util.function_.Supplier<Internal.IResourcePack>, arg3: Internal.ITextComponent, arg4: Internal.ITextComponent, arg5: Internal.PackCompatibility, arg6: Internal.ResourcePackInfo$Priority, arg7: boolean, arg8: Internal.IPackNameDecorator);
        constructor(arg0: string, arg1: boolean, arg2: java_.util.function_.Supplier<Internal.IResourcePack>, arg3: Internal.IResourcePack, arg4: Internal.PackMetadataSection, arg5: Internal.ResourcePackInfo$Priority, arg6: Internal.IPackNameDecorator);
    }
    type ResourcePackInfo_ = ResourcePackInfo;
    class BannerTileEntity extends Internal.TileEntity implements Internal.INameable {
        requestModelDataUpdate(): void;
        func_195534_a(arg0: Internal.ItemStack, arg1: Internal.DyeColor_): void;
        static func_175113_c(arg0: Internal.ItemStack): number;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_175114_c(): Internal.List<Internal.Pair<Internal.BannerPattern, Internal.DyeColor>>;
        static func_230138_a_(arg0: Internal.DyeColor_, arg1: Internal.ListNBT): Internal.List<Internal.Pair<Internal.BannerPattern, Internal.DyeColor>>;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        static func_230139_a_(arg0: Internal.ItemStack): Internal.ListNBT;
        static func_175117_e(arg0: Internal.ItemStack): void;
        func_145748_c_(): Internal.ITextComponent;
        func_213136_a(arg0: Internal.ITextComponent_): void;
        func_145818_k_(): boolean;
        func_190615_l(arg0: Internal.BlockState): Internal.ItemStack;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        func_195533_l(arg0: java_.util.function_.Supplier_<Internal.BlockState_>): Internal.DyeColor;
        func_200200_C_(): Internal.ITextComponent;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        func_200201_e(): Internal.ITextComponent;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.DyeColor);
    }
    type BannerTileEntity_ = BannerTileEntity;
    abstract class TicketManager extends Document.Object {
        registerTicking<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        func_225412_c(): string;
        func_219345_b<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        shouldForceTicks(arg0: number): boolean;
        func_219367_b(arg0: Internal.SectionPos, arg1: Internal.ServerPlayerEntity): void;
        func_219358_b(): number;
        releaseTicking<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        func_219353_a(arg0: Internal.ChunkManager): boolean;
        func_219331_c<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        func_223494_d(arg0: number): boolean;
        func_219356_a<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        func_219362_d<T_>(arg0: Internal.TicketType<T_>, arg1: Internal.ChunkPos, arg2: number, arg3: T_): void;
        func_219341_a(arg0: Internal.SectionPos, arg1: Internal.ServerPlayerEntity): void;
    }
    type TicketManager_ = TicketManager;
    interface DataFixer {
        update<T>(arg0: Internal.DSL$TypeReference_, arg1: Internal.Dynamic<T>, arg2: number, arg3: number): Internal.Dynamic<T>;
        getSchema(arg0: number): Internal.Schema;
    }
    type DataFixer_ = DataFixer;
    class LocalDateTime extends Document.Object implements Internal.Temporal, Internal.TemporalAdjuster, Internal.ChronoLocalDateTime<Internal.LocalDate>, Internal.Serializable {
        static ofEpochSecond(arg0: number, arg1: number, arg2: Internal.ZoneOffset): Internal.LocalDateTime;
        plusHours(arg0: number): Internal.LocalDateTime;
        isEqual(arg0: Internal.ChronoLocalDateTime<any>): boolean;
        toLocalTime(): Internal.LocalTime;
        compareTo(arg0: Internal.ChronoLocalDateTime<any>): number;
        compareTo(arg0: any): number;
        getDayOfWeek(): Internal.DayOfWeek;
        plusSeconds(arg0: number): Internal.LocalDateTime;
        getMinute(): number;
        static from(arg0: Internal.TemporalAccessor): Internal.LocalDateTime;
        getMonth(): Internal.Month;
        plusNanos(arg0: number): Internal.LocalDateTime;
        withHour(arg0: number): Internal.LocalDateTime;
        plusMonths(arg0: number): Internal.LocalDateTime;
        plusYears(arg0: number): Internal.LocalDateTime;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.LocalDateTime;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        minusNanos(arg0: number): Internal.LocalDateTime;
        getNano(): number;
        format(arg0: Internal.DateTimeFormatter): string;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isSupported(arg0: Internal.TemporalField): boolean;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDateTime<any>;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.LocalDateTime;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.LocalDateTime;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDateTime<any>;
        getYear(): number;
        toEpochSecond(arg0: Internal.ZoneOffset): number;
        withDayOfMonth(arg0: number): Internal.LocalDateTime;
        withMonth(arg0: number): Internal.LocalDateTime;
        isAfter(arg0: Internal.ChronoLocalDateTime<any>): boolean;
        static ofInstant(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.LocalDateTime;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.LocalDateTime;
        minus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDateTime<any>;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.LocalDateTime;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDateTime<any>;
        minusHours(arg0: number): Internal.LocalDateTime;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        withYear(arg0: number): Internal.LocalDateTime;
        plusMinutes(arg0: number): Internal.LocalDateTime;
        minusMinutes(arg0: number): Internal.LocalDateTime;
        plusDays(arg0: number): Internal.LocalDateTime;
        static now(): Internal.LocalDateTime;
        static now(arg0: Internal.Clock): Internal.LocalDateTime;
        static now(arg0: Internal.ZoneId): Internal.LocalDateTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): Internal.LocalDateTime;
        static of(arg0: number, arg1: Internal.Month_, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.LocalDateTime;
        static of(arg0: number, arg1: Internal.Month_, arg2: number, arg3: number, arg4: number, arg5: number): Internal.LocalDateTime;
        static of(arg0: number, arg1: Internal.Month_, arg2: number, arg3: number, arg4: number): Internal.LocalDateTime;
        static of(arg0: Internal.LocalDate, arg1: Internal.LocalTime): Internal.LocalDateTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.LocalDateTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.LocalDateTime;
        get(arg0: Internal.TemporalField): number;
        getDayOfYear(): number;
        plusWeeks(arg0: number): Internal.LocalDateTime;
        getHour(): number;
        getChronology(): Internal.Chronology;
        withMinute(arg0: number): Internal.LocalDateTime;
        getMonthValue(): number;
        minusYears(arg0: number): Internal.LocalDateTime;
        atOffset(arg0: Internal.ZoneOffset): Internal.OffsetDateTime;
        minusWeeks(arg0: number): Internal.LocalDateTime;
        withDayOfYear(arg0: number): Internal.LocalDateTime;
        static parse(arg0: Internal.CharSequence): Internal.LocalDateTime;
        static parse(arg0: Internal.CharSequence, arg1: Internal.DateTimeFormatter): Internal.LocalDateTime;
        atZone(arg0: Internal.ZoneId): Internal.ChronoZonedDateTime<any>;
        atZone(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        toInstant(arg0: Internal.ZoneOffset): Internal.Instant;
        isBefore(arg0: Internal.ChronoLocalDateTime<any>): boolean;
        minusDays(arg0: number): Internal.LocalDateTime;
        withNano(arg0: number): Internal.LocalDateTime;
        getLong(arg0: Internal.TemporalField): number;
        minusMonths(arg0: number): Internal.LocalDateTime;
        with(arg0: Internal.TemporalAdjuster_): Internal.Temporal;
        with(arg0: Internal.TemporalAdjuster_): Internal.ChronoLocalDateTime<any>;
        with(arg0: Internal.TemporalAdjuster_): Internal.LocalDateTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.LocalDateTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ChronoLocalDateTime<any>;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        toLocalDate(): Internal.LocalDate;
        toLocalDate(): Internal.ChronoLocalDate;
        getSecond(): number;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        getDayOfMonth(): number;
        minusSeconds(arg0: number): Internal.LocalDateTime;
        withSecond(arg0: number): Internal.LocalDateTime;
        static readonly MIN: Internal.LocalDateTime;
        static readonly MAX: Internal.LocalDateTime;
        get dayOfWeek(): Internal.DayOfWeek;
        get month(): Internal.Month;
        get hour(): number;
        get year(): number;
        get dayOfYear(): number;
        get dayOfMonth(): number;
        get monthValue(): number;
        get nano(): number;
        get chronology(): Internal.Chronology;
        get minute(): number;
        get second(): number;
    }
    type LocalDateTime_ = LocalDateTime;
    class VillagerData extends Document.Object {
        static func_221128_d(arg0: number): boolean;
        func_221129_a(): Internal.VillagerType;
        static func_221127_c(arg0: number): number;
        func_221130_b(): Internal.VillagerProfession;
        func_221132_c(): number;
        func_221126_a(arg0: Internal.VillagerProfession_): Internal.VillagerData;
        func_221134_a(arg0: Internal.VillagerType): Internal.VillagerData;
        static func_221133_b(arg0: number): number;
        func_221135_a(arg0: number): Internal.VillagerData;
        static readonly field_234554_a_: Internal.Codec<Internal.VillagerData>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.VillagerType, arg1: Internal.VillagerProfession, arg2: number);
    }
    type VillagerData_ = VillagerData;
    class FocusEvent$Cause extends Internal.Enum<Internal.FocusEvent$Cause> {
        static valueOf(arg0: string): Internal.FocusEvent$Cause;
        static values(): Internal.FocusEvent$Cause[];
        static readonly UNEXPECTED: Internal.FocusEvent$Cause;
        static readonly CLEAR_GLOBAL_FOCUS_OWNER: Internal.FocusEvent$Cause;
        static readonly ACTIVATION: Internal.FocusEvent$Cause;
        static readonly TRAVERSAL: Internal.FocusEvent$Cause;
        static readonly TRAVERSAL_UP: Internal.FocusEvent$Cause;
        static readonly TRAVERSAL_FORWARD: Internal.FocusEvent$Cause;
        static readonly TRAVERSAL_DOWN: Internal.FocusEvent$Cause;
        static readonly TRAVERSAL_BACKWARD: Internal.FocusEvent$Cause;
        static readonly UNKNOWN: Internal.FocusEvent$Cause;
        static readonly MOUSE_EVENT: Internal.FocusEvent$Cause;
        static readonly ROLLBACK: Internal.FocusEvent$Cause;
    }
    type FocusEvent$Cause_ = "unknown" | "mouse_event" | "traversal" | "traversal_up" | "traversal_down" | "traversal_forward" | "traversal_backward" | "rollback" | "unexpected" | "activation" | "clear_global_focus_owner" | FocusEvent$Cause;
    interface IRegistryDelegate <T> extends java_.util.function_.Supplier<T> {
        get(): T;
        name(): ResourceLocation;
        type(): Internal.Class<T>;
    }
    type IRegistryDelegate_<T> = IRegistryDelegate<T>;
    interface IInfuseTypeProvider extends Internal.IChemicalProvider<Internal.InfuseType> {
        getStack(arg0: number): Internal.InfusionStack;
        getStack(arg0: number): Internal.ChemicalStack<any>;
    }
    type IInfuseTypeProvider_ = IInfuseTypeProvider;
    class SceneBuildingUtil$PositionUtil extends Document.Object {
        zero(): BlockPos;
        at(arg0: number, arg1: number, arg2: number): BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SceneBuildingUtil);
    }
    type SceneBuildingUtil$PositionUtil_ = SceneBuildingUtil$PositionUtil;
    interface HierarchyBoundsListener extends Internal.EventListener {
        ancestorResized(arg0: Internal.HierarchyEvent): void;
        ancestorMoved(arg0: Internal.HierarchyEvent): void;
    }
    type HierarchyBoundsListener_ = HierarchyBoundsListener;
    class SCombatPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        field_179774_b: number;
        field_179772_d: number;
        field_179776_a: Internal.SCombatPacket$Event;
        field_179775_c: number;
        field_179773_e: Internal.ITextComponent;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CombatTracker, arg1: Internal.SCombatPacket$Event, arg2: Internal.ITextComponent);
        constructor(arg0: Internal.CombatTracker, arg1: Internal.SCombatPacket$Event);
        constructor();
    }
    type SCombatPacket_ = SCombatPacket;
    class PlacementSettings extends Document.Object {
        func_186213_g(): Internal.MutableBoundingBox;
        func_215218_i(): boolean;
        func_237134_m_(): boolean;
        func_215219_b(): Internal.PlacementSettings;
        func_186221_e(): boolean;
        func_186222_a(arg0: boolean): Internal.PlacementSettings;
        func_186214_a(arg0: Internal.Mirror_): Internal.PlacementSettings;
        func_215221_j(): Internal.List<Internal.StructureProcessor>;
        func_189947_a(arg0: BlockPos): Internal.Random;
        func_186223_a(arg0: Internal.MutableBoundingBox): Internal.PlacementSettings;
        func_186212_b(): Internal.Mirror;
        func_186218_a(arg0: Internal.ChunkPos): Internal.PlacementSettings;
        func_186217_a(): Internal.PlacementSettings;
        func_186215_c(): Internal.Rotation;
        func_207665_a(arg0: BlockPos): Internal.PlacementSettings;
        func_215220_b(arg0: Internal.StructureProcessor): Internal.PlacementSettings;
        func_207664_d(): BlockPos;
        func_189950_a(arg0: Internal.Random): Internal.PlacementSettings;
        func_215222_a(arg0: Internal.StructureProcessor): Internal.PlacementSettings;
        func_186220_a(arg0: Internal.Rotation_): Internal.PlacementSettings;
        func_237132_a_(arg0: Internal.List<Internal.Template$Palette>, arg1: BlockPos): Internal.Template$Palette;
        func_215223_c(arg0: boolean): Internal.PlacementSettings;
        func_237133_d_(arg0: boolean): Internal.PlacementSettings;
        func_204763_l(): boolean;
        field_204765_h: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PlacementSettings_ = PlacementSettings;
    interface LongComparator extends Internal.Comparator<number> {
        compare(arg0: number, arg1: number): number;
        compare(arg0: number, arg1: number): number;
        compare(arg0: any, arg1: any): number;
        (arg0: number, arg1: number): number;
    }
    type LongComparator_ = ((arg0: number, arg1: number)=>number) | LongComparator;
    class Potion extends Internal.ForgeRegistryEntry<Internal.Potion> {
        func_185170_a(): Internal.List<Internal.EffectInstance>;
        func_185172_c(): boolean;
        func_185174_b(arg0: string): string;
        setRegistryName(arg0: ResourceLocation_): any;
        getTags(): Internal.Set<ResourceLocation>;
        static func_185168_a(arg0: string): Internal.Potion;
        isIn(arg0: Internal.ITag<Internal.Potion>): boolean;
        get tags(): Internal.Set<ResourceLocation>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.EffectInstance[]);
        constructor(arg0: Internal.EffectInstance[]);
    }
    type Potion_ = Registry.minecraft.potion | Potion;
    class UpgradeData extends Document.Object {
        func_196992_b(): Internal.CompoundNBT;
        func_196990_a(arg0: Internal.Chunk): void;
        func_196988_a(): boolean;
        static readonly field_196994_a: Internal.UpgradeData;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CompoundNBT);
    }
    type UpgradeData_ = UpgradeData;
    interface IVariant <V> {
        read(arg0: Internal.CompoundNBT_, arg1: string): V;
        getName(): string;
        isEmpty(): boolean;
        getVariants(): V[];
        write(arg0: Internal.CompoundNBT_, arg1: V, arg2: string): Internal.CompoundNBT;
        ordinal(): number;
    }
    type IVariant_<V> = IVariant<V>;
    class BatteryConfig extends Internal.EnergyConfig {
        getGeneration(arg0: Internal.Tier_): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type BatteryConfig_ = BatteryConfig;
    class ModifierStatsBuilder extends Document.Object {
        updateStat<B_>(arg0: Internal.IToolStat<B_>, arg1: Internal.Consumer_<B_>): void;
        build(arg0: Internal.StatsNBT): Internal.StatsNBT;
        buildMultipliers(): Internal.StatsNBT;
        static builder(): Internal.ModifierStatsBuilder;
    }
    type ModifierStatsBuilder_ = ModifierStatsBuilder;
    class BeeEntity extends Internal.AnimalEntity implements Internal.IAngerable, Internal.IFlyingAnimal, Internal.BeeEntityAccessor {
        func_226439_k_(arg0: BlockPos): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_233682_c_(arg0: Internal.CompoundNBT_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_233681_b_(arg0: Internal.PlayerEntity): void;
        func_226426_eu_(): void;
        callSetFlag(arg0: number, arg1: boolean): void;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_241358_a_(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT_): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.BeeEntity;
        func_230257_G__(): Internal.UUID;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_233678_J__(): boolean;
        func_226425_er_(): boolean;
        func_226449_s_(arg0: boolean): void;
        func_226417_eK_(): boolean;
        static func_234182_eX_(): Internal.AttributeModifierMap$MutableAttribute;
        func_230258_H__(): void;
        func_241355_J__(): void;
        canRiderInteract(): boolean;
        func_226412_eE_(): boolean;
        func_226431_g_(arg0: BlockPos): void;
        func_226410_eB_(): BlockPos;
        func_241357_a_(arg0: Internal.World): boolean;
        func_226421_eO_(): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_226414_eH_(): boolean;
        func_230259_a_(arg0: Internal.UUID): void;
        shouldRiderSit(): boolean;
        func_230256_F__(): number;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_226415_eI_(): boolean;
        func_230260_a__(arg0: number): void;
        callDoesHiveHaveSpace(arg0: BlockPos): boolean;
        getParts(): Internal.PartEntity<any>[];
        func_226455_v_(arg0: number): number;
        func_226409_eA_(): boolean;
        func_226413_eG_(): void;
        hasCooldown(): boolean;
        func_226411_eD_(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        func_226422_eP_(): boolean;
        func_226424_eq_(): BlockPos;
        func_233680_b_(arg0: Internal.LivingEntity): boolean;
        func_226450_t_(arg0: number): void;
        func_241359_a_(arg0: Internal.ServerWorld, arg1: boolean): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        handler$bkh000$isHiveValid(arg0: Internal.CallbackInfoReturnable<any>): void;
        func_241356_K__(): void;
        field_226371_bK_: Internal.BeeEntity$FindBeehiveGoal;
        field_226369_bI_: BlockPos;
        field_226372_bL_: Internal.BeeEntity$FindFlowerGoal;
        field_226370_bJ_: Internal.BeeEntity$PollinateGoal;
        field_226364_bD_: number;
        field_226367_bG_: number;
        field_226368_bH_: BlockPos;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.BeeEntity>, arg1: Internal.World);
    }
    type BeeEntity_ = BeeEntity;
    class TropicalFishEntity extends Internal.AbstractGroupFishEntity {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_204222_dD(): number[];
        func_204218_dG(): ResourceLocation;
        func_204220_dF(): ResourceLocation;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_204219_dC(): number[];
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        func_204217_dE(): number;
        isMultipartEntity(): boolean;
        static func_212325_s(arg0: number): number;
        static func_212327_q(arg0: number): string;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_204221_dB(): number;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_204215_a(arg0: number): void;
        static func_212323_p(arg0: number): Internal.DyeColor;
        static func_212324_b(arg0: number): string;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        static func_212326_d(arg0: number): Internal.DyeColor;
        static readonly field_204227_bz: number[];
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.TropicalFishEntity>, arg1: Internal.World);
    }
    type TropicalFishEntity_ = TropicalFishEntity;
    interface ChickenEntityAccessor {
    }
    type ChickenEntityAccessor_ = ChickenEntityAccessor;
    abstract class MethodHandle extends Document.Object implements Internal.Constable {
        asCollector(arg0: number, arg1: Internal.Class<any>, arg2: number): Internal.MethodHandle;
        asCollector(arg0: Internal.Class<any>, arg1: number): Internal.MethodHandle;
        asSpreader(arg0: Internal.Class<any>, arg1: number): Internal.MethodHandle;
        asSpreader(arg0: number, arg1: Internal.Class<any>, arg2: number): Internal.MethodHandle;
        withVarargs(arg0: boolean): Internal.MethodHandle;
        invokeWithArguments(arg0: Internal.List<any>): any;
        invokeWithArguments(...arg0: any[]): any;
        invokeExact(...arg0: any[]): any;
        isVarargsCollector(): boolean;
        asFixedArity(): Internal.MethodHandle;
        invoke(...arg0: any[]): any;
        type(): Internal.MethodType;
        describeConstable(): Internal.Optional<Internal.MethodHandleDesc>;
        bindTo(arg0: any): Internal.MethodHandle;
        asVarargsCollector(arg0: Internal.Class<any>): Internal.MethodHandle;
        asType(arg0: Internal.MethodType): Internal.MethodHandle;
        get varargsCollector(): boolean;
    }
    type MethodHandle_ = MethodHandle;
    class Region extends Document.Object implements Internal.IBlockReader, Internal.ICollisionReader {
        func_217301_I(): number;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        func_201572_C(): number;
        func_226663_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.ISelectionContext): boolean;
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_226666_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.Stream<Internal.VoxelShape>;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_217298_h(arg0: BlockPos): number;
        func_226664_a_(arg0: Internal.AxisAlignedBB): boolean;
        func_241457_a_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): Internal.Stream<Internal.VoxelShape>;
        func_226668_i_(arg0: Internal.Entity): boolean;
        func_242403_h(arg0: BlockPos): number;
        func_225522_c_(arg0: number, arg1: number): Internal.IBlockReader;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_226665_a__(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): boolean;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_234865_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): boolean;
        func_242405_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): boolean;
        func_226669_j_(arg0: Internal.Entity): boolean;
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_234867_d_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_175723_af(): Internal.WorldBorder;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: BlockPos, arg2: BlockPos);
    }
    type Region_ = Region;
    interface Copyable {
        copy(): Internal.Copyable;
        (): Internal.Copyable;
    }
    type Copyable_ = (()=>Internal.Copyable) | Copyable;
    abstract class VolatileImage extends Internal.Image implements Internal.Transparency {
        contentsLost(): boolean;
        getHeight(): number;
        createGraphics(): Internal.Graphics2D;
        getCapabilities(): Internal.ImageCapabilities;
        getWidth(): number;
        getTransparency(): number;
        getSnapshot(): Internal.BufferedImage;
        validate(arg0: Internal.GraphicsConfiguration): number;
        static readonly IMAGE_OK: 0;
        static readonly IMAGE_RESTORED: 1;
        static readonly IMAGE_INCOMPATIBLE: 2;
        get capabilities(): Internal.ImageCapabilities;
        get transparency(): number;
        get width(): number;
        get snapshot(): Internal.BufferedImage;
        get height(): number;
    }
    type VolatileImage_ = VolatileImage;
    abstract class Registry <T> extends Document.Object implements Internal.Codec<T>, Internal.Keyable, Internal.IObjectIntIterable<T> {
        func_148757_b(arg0: T): number;
        encode<U_>(arg0: T, arg1: Internal.DynamicOps<U_>, arg2: U_): Internal.DataResult<U_>;
        flatComapMap<S_>(arg0: Internal.Function_<T, S_>, arg1: Internal.Function_<S_, Internal.DataResult_<T>>): Internal.Codec<S_>;
        dispatch<E_>(arg0: Internal.Function_<E_, T>, arg1: Internal.Function_<T, Internal.Codec_<E_>>): Internal.Codec<E_>;
        dispatch<E_>(arg0: string, arg1: Internal.Function_<E_, T>, arg2: Internal.Function_<T, Internal.Codec_<E_>>): Internal.Codec<E_>;
        func_243576_d(arg0: Internal.RegistryKey<T>): T;
        deprecated(arg0: number): Internal.Codec<T>;
        func_243578_f(): Internal.RegistryKey<Internal.Registry<T>>;
        func_241876_d(arg0: T): Internal.Lifecycle;
        simple(): Internal.Decoder$Simple<T>;
        dispatchMap<E_>(arg0: Internal.Function_<E_, T>, arg1: Internal.Function_<T, Internal.Codec_<E_>>): Internal.MapCodec<E_>;
        dispatchMap<E_>(arg0: string, arg1: Internal.Function_<E_, T>, arg2: Internal.Function_<T, Internal.Codec_<E_>>): Internal.MapCodec<E_>;
        decode<U_>(arg0: Internal.DynamicOps<U_>, arg1: U_): Internal.DataResult<Internal.Pair<T, U_>>;
        decode<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<Internal.Pair<T, T_>>;
        static func_218325_a<T_>(arg0: Internal.Registry<T_>, arg1: string, arg2: T_): T_;
        iterator(): Internal.Iterator<T>;
        flatXmap<S_>(arg0: Internal.Function_<T, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, Internal.DataResult_<T>>): Internal.Codec<S_>;
        encodeStart<T_>(arg0: Internal.DynamicOps<T_>, arg1: T): Internal.DataResult<T_>;
        optionalFieldOf(arg0: string, arg1: Internal.Lifecycle, arg2: T, arg3: Internal.Lifecycle): Internal.MapCodec<T>;
        optionalFieldOf(arg0: string, arg1: T): Internal.MapCodec<T>;
        optionalFieldOf(arg0: string, arg1: T, arg2: Internal.Lifecycle): Internal.MapCodec<T>;
        optionalFieldOf(arg0: string): Internal.MapCodec<Internal.Optional<T>>;
        func_230516_a_(arg0: Internal.RegistryKey<T>): T;
        func_201756_e(): Internal.Stream<T>;
        flatComap<B_>(arg0: Internal.Function_<B_, Internal.DataResult_<T>>): Internal.Encoder<B_>;
        func_148745_a(arg0: number): T;
        func_177774_c(arg0: T): ResourceLocation;
        spliterator(): Internal.Spliterator<T>;
        partialDispatch<E_>(arg0: string, arg1: Internal.Function_<E_, Internal.DataResult_<T>>, arg2: Internal.Function_<T, Internal.DataResult_<Internal.Codec_<E_>>>): Internal.Codec<E_>;
        func_82594_a(arg0: ResourceLocation_): T;
        flatMap<B_>(arg0: Internal.Function_<T, Internal.DataResult_<B_>>): Internal.Decoder<B_>;
        boxed(): Internal.Decoder$Boxed<T>;
        dispatchStable<E_>(arg0: Internal.Function_<E_, T>, arg1: Internal.Function_<T, Internal.Codec_<E_>>): Internal.Codec<E_>;
        orElseGet(arg0: java_.util.function_.Supplier_<T>): Internal.Codec<T>;
        orElseGet(arg0: Internal.Consumer_<string>, arg1: java_.util.function_.Supplier_<T>): Internal.Codec<T>;
        orElseGet(arg0: Internal.UnaryOperator<string>, arg1: java_.util.function_.Supplier_<T>): Internal.Codec<T>;
        static func_239738_a_<T_>(arg0: Internal.MutableRegistry<T_>): void;
        func_230519_c_(arg0: T): Internal.Optional<Internal.RegistryKey<T>>;
        static func_218322_a<V_, T_>(arg0: Internal.Registry<V_>, arg1: ResourceLocation_, arg2: T_): T_;
        func_243575_c(arg0: Internal.RegistryKey<T>): Internal.Optional<T>;
        func_241873_b(arg0: ResourceLocation_): Internal.Optional<T>;
        func_241875_b(): Internal.Lifecycle;
        keys<U_>(arg0: Internal.DynamicOps<U_>): Internal.Stream<U_>;
        comapFlatMap<S_>(arg0: Internal.Function_<T, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, T>): Internal.Codec<S_>;
        static func_218343_a<V_, T_>(arg0: Internal.Registry<V_>, arg1: number, arg2: string, arg3: T_): T_;
        func_239659_c_(): Internal.Set<Internal.Map$Entry<Internal.RegistryKey<T>, T>>;
        promotePartial(arg0: Internal.Consumer_<any>): Internal.Decoder<any>;
        promotePartial(arg0: Internal.Consumer_<string>): Internal.Codec<T>;
        comap<B_>(arg0: Internal.Function_<B_, T>): Internal.Encoder<B_>;
        fieldOf(arg0: string): Internal.MapDecoder<any>;
        fieldOf(arg0: string): Internal.MapCodec<T>;
        fieldOf(arg0: string): Internal.MapEncoder<any>;
        listOf(): Internal.Codec<Internal.List<T>>;
        xmap<S_>(arg0: Internal.Function_<T, S_>, arg1: Internal.Function_<S_, T>): Internal.Codec<S_>;
        func_148742_b(): Internal.Set<ResourceLocation>;
        map<B_>(arg0: Internal.Function_<T, B_>): Internal.Decoder<B_>;
        forEach(arg0: Internal.Consumer_<T>): void;
        func_212607_c(arg0: ResourceLocation_): boolean;
        terminal(): Internal.Decoder$Terminal<T>;
        parse<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<T>;
        parse<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<T>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Codec<T>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Encoder<any>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Decoder<any>;
        orElse(arg0: T): Internal.Codec<T>;
        orElse(arg0: Internal.Consumer_<string>, arg1: T): Internal.Codec<T>;
        orElse(arg0: Internal.UnaryOperator<string>, arg1: T): Internal.Codec<T>;
        stable(): Internal.Codec<T>;
        mapResult(arg0: Internal.Codec$ResultFunction<T>): Internal.Codec<T>;
        static readonly field_239696_ab_: Internal.RegistryKey<Internal.Registry<Internal.LootFunctionType>>;
        static readonly field_218371_M: Internal.DefaultedRegistry<Internal.PointOfInterestType>;
        static readonly field_212618_g: Internal.DefaultedRegistry<Internal.Block>;
        static readonly field_243551_at: Internal.RegistryKey<Internal.Registry<Internal.ConfiguredCarver<any>>>;
        static readonly field_239671_I_: Internal.RegistryKey<Internal.Registry<net.minecraft.world.gen.feature.structure.Structure<any>>>;
        static readonly field_218375_Q: Internal.Registry<Internal.Activity>;
        static readonly field_239692_aP_: Internal.Registry<net.minecraft.entity.ai.attributes.Attribute>;
        static readonly field_212633_v: Internal.Registry<Internal.SoundEvent>;
        static readonly field_239710_k_: Internal.RegistryKey<Internal.Registry<Internal.Effect>>;
        static readonly field_239725_z_: Internal.RegistryKey<Internal.Registry<Internal.TreeDecoratorType<any>>>;
        static readonly field_239704_ba_: Internal.Registry<Internal.LootConditionType>;
        static readonly field_239698_ad_: Internal.RegistryKey<Internal.Registry<Internal.DimensionType>>;
        static readonly field_243554_aw: Internal.RegistryKey<Internal.Registry<Internal.StructureProcessorList>>;
        static readonly field_218363_D: Internal.Registry<Internal.IRuleTestType<any>>;
        static readonly field_239721_v_: Internal.RegistryKey<Internal.Registry<Internal.BlockStateProviderType<any>>>;
        static readonly field_239691_aJ_: Internal.Registry<Internal.IPosRuleTests<any>>;
        static readonly field_239679_Q_: Internal.RegistryKey<Internal.Registry<Internal.IRecipeSerializer<any>>>;
        static readonly field_239700_af_: Internal.RegistryKey<Internal.Registry<net.minecraft.world.Dimension>>;
        static readonly field_212626_o: Internal.Registry<Internal.TileEntityType<any>>;
        static readonly field_239677_O_: Internal.RegistryKey<Internal.Registry<Internal.ContainerType<any>>>;
        static readonly field_218367_H: Internal.Registry<Internal.IRecipeType<any>>;
        static readonly field_239723_x_: Internal.RegistryKey<Internal.Registry<Internal.FoliagePlacerType<any>>>;
        static readonly field_239675_M_: Internal.RegistryKey<Internal.Registry<Internal.IStructureProcessorType<any>>>;
        static readonly field_212634_w: Internal.Registry<Internal.StatType<any>>;
        static readonly field_239673_K_: Internal.RegistryKey<Internal.Registry<Internal.IRuleTestType<any>>>;
        static readonly field_218379_q: Internal.Registry<Internal.Feature<any>>;
        static readonly field_239702_ay_: Internal.Registry<Internal.FeatureSizeType<any>>;
        static readonly field_212617_f: Internal.Registry<Internal.Registry<any>>;
        static readonly field_239666_D_: Internal.RegistryKey<Internal.Registry<Internal.Codec<Internal.ChunkGenerator>>>;
        static readonly field_239668_F_: Internal.RegistryKey<Internal.Registry<Internal.PaintingType>>;
        static readonly field_239664_B_: Internal.RegistryKey<Internal.Registry<Internal.ParticleType<any>>>;
        static readonly field_218380_r: Internal.Registry<Internal.Placement<any>>;
        static readonly field_212632_u: Internal.Registry<Internal.ParticleType<any>>;
        static readonly field_218372_N: Internal.DefaultedRegistry<Internal.MemoryModuleType<any>>;
        static readonly field_212629_r: Internal.DefaultedRegistry<Internal.EntityType<any>>;
        static readonly field_239708_i_: Internal.RegistryKey<Internal.Registry<Internal.SoundEvent>>;
        static readonly field_218360_A: Internal.DefaultedRegistry<Internal.ChunkStatus>;
        static readonly field_239681_S_: Internal.RegistryKey<Internal.Registry<Internal.StatType<any>>>;
        static readonly field_239718_s_: Internal.RegistryKey<Internal.Registry<Internal.Feature<any>>>;
        static readonly field_212621_j: Internal.DefaultedRegistry<Internal.Potion>;
        static readonly field_239683_U_: Internal.RegistryKey<Internal.Registry<Internal.VillagerProfession>>;
        static readonly field_218364_E: Internal.Registry<Internal.IStructureProcessorType<any>>;
        static readonly field_239716_q_: Internal.RegistryKey<Internal.Registry<Internal.WorldCarver<any>>>;
        static readonly field_239694_aZ_: Internal.Registry<Internal.LootFunctionType>;
        static readonly field_243552_au: Internal.RegistryKey<Internal.Registry<Internal.ConfiguredFeature<any, any>>>;
        static readonly field_239685_W_: Internal.RegistryKey<Internal.Registry<Internal.MemoryModuleType<any>>>;
        static readonly field_239714_o_: Internal.RegistryKey<Internal.Registry<Internal.Item>>;
        static readonly field_239712_m_: Internal.RegistryKey<Internal.Registry<Internal.Enchantment>>;
        static readonly field_218368_I: Internal.Registry<Internal.IRecipeSerializer<any>>;
        static readonly field_239701_aw_: Internal.Registry<Internal.TrunkPlacerType<any>>;
        static readonly field_239687_Y_: Internal.RegistryKey<Internal.Registry<Internal.Schedule>>;
        static readonly field_239699_ae_: Internal.RegistryKey<Internal.Registry<Internal.World>>;
        static readonly field_229388_u_: Internal.Registry<Internal.BlockPlacerType<any>>;
        static readonly field_239706_f_: ResourceLocation;
        static readonly field_243549_ar: Internal.RegistryKey<Internal.Registry<Internal.DimensionSettings>>;
        static readonly field_243555_ax: Internal.RegistryKey<Internal.Registry<Internal.JigsawPattern>>;
        static readonly field_239670_H_: Internal.RegistryKey<Internal.Registry<Internal.ChunkStatus>>;
        static readonly field_212631_t: Internal.Registry<Internal.Effect>;
        static readonly field_239672_J_: Internal.RegistryKey<Internal.Registry<Internal.IStructurePieceType>>;
        static readonly field_218373_O: Internal.DefaultedRegistry<Internal.SensorType<any>>;
        static readonly field_239724_y_: Internal.RegistryKey<Internal.Registry<Internal.TrunkPlacerType<any>>>;
        static readonly field_239689_aA_: Internal.Registry<Internal.Codec<Internal.BiomeProvider>>;
        static readonly field_239711_l_: Internal.RegistryKey<Internal.Registry<Internal.Block>>;
        static readonly field_212628_q: Internal.Registry<Internal.Enchantment>;
        static readonly field_239697_ac_: Internal.RegistryKey<Internal.Registry<Internal.LootConditionType>>;
        static readonly field_218361_B: Internal.Registry<net.minecraft.world.gen.feature.structure.Structure<any>>;
        static readonly field_212620_i: Internal.DefaultedRegistry<Internal.PaintingType>;
        static readonly field_218365_F: Internal.Registry<Internal.IJigsawDeserializer<any>>;
        static readonly field_243550_as: Internal.RegistryKey<Internal.Registry<Internal.ConfiguredSurfaceBuilder<any>>>;
        static readonly field_239678_P_: Internal.RegistryKey<Internal.Registry<Internal.IRecipeType<any>>>;
        static readonly field_218369_K: Internal.DefaultedRegistry<Internal.VillagerType>;
        static readonly field_218377_o: Internal.Registry<Internal.WorldCarver<any>>;
        static readonly field_239720_u_: Internal.RegistryKey<Internal.Registry<Internal.Biome>>;
        static readonly field_229390_w_: Internal.Registry<Internal.TreeDecoratorType<any>>;
        static readonly field_239722_w_: Internal.RegistryKey<Internal.Registry<Internal.BlockPlacerType<any>>>;
        static readonly field_239695_aa_: Internal.RegistryKey<Internal.Registry<Internal.LootPoolEntryType>>;
        static readonly field_239676_N_: Internal.RegistryKey<Internal.Registry<Internal.IJigsawDeserializer<any>>>;
        static readonly field_239693_aY_: Internal.Registry<Internal.LootPoolEntryType>;
        static readonly field_239674_L_: Internal.RegistryKey<Internal.Registry<Internal.IPosRuleTests<any>>>;
        static readonly field_239690_aB_: Internal.Registry<Internal.Codec<Internal.ChunkGenerator>>;
        static readonly field_239667_E_: Internal.RegistryKey<Internal.Registry<Internal.TileEntityType<any>>>;
        static readonly field_218370_L: Internal.DefaultedRegistry<Internal.VillagerProfession>;
        static readonly field_239669_G_: Internal.RegistryKey<Internal.Registry<ResourceLocation>>;
        static readonly field_243553_av: Internal.RegistryKey<Internal.Registry<Internal.StructureFeature<any, any>>>;
        static readonly field_212619_h: Internal.DefaultedRegistry<Internal.Fluid>;
        static readonly field_218374_P: Internal.Registry<Internal.Schedule>;
        static readonly field_239665_C_: Internal.RegistryKey<Internal.Registry<Internal.Codec<Internal.BiomeProvider>>>;
        static readonly field_212630_s: Internal.DefaultedRegistry<Internal.Item>;
        static readonly field_239663_A_: Internal.RegistryKey<Internal.Registry<Internal.FeatureSizeType<any>>>;
        static readonly field_239709_j_: Internal.RegistryKey<Internal.Registry<Internal.Fluid>>;
        static readonly field_218362_C: Internal.Registry<Internal.IStructurePieceType>;
        static readonly field_239719_t_: Internal.RegistryKey<Internal.Registry<Internal.Placement<any>>>;
        static readonly field_239682_T_: Internal.RegistryKey<Internal.Registry<Internal.VillagerType>>;
        static readonly field_239717_r_: Internal.RegistryKey<Internal.Registry<Internal.SurfaceBuilder<any>>>;
        static readonly field_218366_G: Internal.Registry<Internal.ContainerType<any>>;
        static readonly field_239715_p_: Internal.RegistryKey<Internal.Registry<Internal.Potion>>;
        static readonly field_239684_V_: Internal.RegistryKey<Internal.Registry<Internal.PointOfInterestType>>;
        static readonly field_212623_l: Internal.Registry<ResourceLocation>;
        static readonly field_239713_n_: Internal.RegistryKey<Internal.Registry<Internal.EntityType<any>>>;
        static readonly field_239686_X_: Internal.RegistryKey<Internal.Registry<Internal.SensorType<any>>>;
        static readonly field_239688_Z_: Internal.RegistryKey<Internal.Registry<Internal.Activity>>;
        static readonly field_218378_p: Internal.Registry<Internal.SurfaceBuilder<any>>;
        static readonly field_229389_v_: Internal.Registry<Internal.FoliagePlacerType<any>>;
        static readonly field_239680_R_: Internal.RegistryKey<Internal.Registry<net.minecraft.entity.ai.attributes.Attribute>>;
        static readonly field_229387_t_: Internal.Registry<Internal.BlockStateProviderType<any>>;
    }
    type Registry_<T> = Registry<T>;
    interface IntToDoubleFunction {
        applyAsDouble(arg0: number): number;
        (arg0: number): number;
    }
    type IntToDoubleFunction_ = ((arg0: number)=>number) | IntToDoubleFunction;
    interface Matrix4fExtended {
        rotate(arg0: Internal.Quaternion): void;
        transformVecZ(arg0: number, arg1: number, arg2: number): number;
        transformVecY(arg0: number, arg1: number, arg2: number): number;
        transformVecX(arg0: number, arg1: number, arg2: number): number;
        translate(arg0: number, arg1: number, arg2: number): void;
    }
    type Matrix4fExtended_ = Matrix4fExtended;
    class HoverEvent$ItemHover extends Document.Object {
        func_240689_a_(): Internal.ItemStack;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemStack);
    }
    type HoverEvent$ItemHover_ = HoverEvent$ItemHover;
    interface Capability$IStorage <T> {
        writeNBT(arg0: Internal.Capability<T>, arg1: T, arg2: Internal.Direction_): Internal.INBT;
        readNBT(arg0: Internal.Capability<T>, arg1: T, arg2: Internal.Direction_, arg3: Internal.INBT): void;
    }
    type Capability$IStorage_<T> = Capability$IStorage<T>;
    interface IAnimatedSprite {
        func_217591_a(arg0: number, arg1: number): Internal.TextureAtlasSprite;
        func_217590_a(arg0: Internal.Random): Internal.TextureAtlasSprite;
    }
    type IAnimatedSprite_ = IAnimatedSprite;
    interface StateContainer$IFactory <O, S> {
        create(arg0: O, arg1: Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>, arg2: Internal.MapCodec<S>): S;
        (arg0: O, arg1: Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>, arg2: Internal.MapCodec<S>): S;
    }
    type StateContainer$IFactory_<O, S> = ((arg0: O, arg1: Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>, arg2: Internal.MapCodec<S>)=>S) | StateContainer$IFactory<O, S>;
    class PathNodeType extends Internal.Enum<Internal.PathNodeType> {
        static valueOf(arg0: string): Internal.PathNodeType;
        static values(): Internal.PathNodeType[];
        func_186289_a(): number;
        getDanger(): Internal.PathNodeType;
        static readonly WALKABLE_DOOR: Internal.PathNodeType;
        static readonly DAMAGE_CACTUS: Internal.PathNodeType;
        static readonly LAVA: Internal.PathNodeType;
        static readonly LEAVES: Internal.PathNodeType;
        static readonly BLOCKED: Internal.PathNodeType;
        static readonly WALKABLE: Internal.PathNodeType;
        static readonly DOOR_IRON_CLOSED: Internal.PathNodeType;
        static readonly DANGER_CACTUS: Internal.PathNodeType;
        static readonly FENCE: Internal.PathNodeType;
        static readonly OPEN: Internal.PathNodeType;
        static readonly TRAPDOOR: Internal.PathNodeType;
        static readonly BREACH: Internal.PathNodeType;
        static readonly RAIL: Internal.PathNodeType;
        static readonly DAMAGE_OTHER: Internal.PathNodeType;
        static readonly DOOR_OPEN: Internal.PathNodeType;
        static readonly DOOR_WOOD_CLOSED: Internal.PathNodeType;
        static readonly UNPASSABLE_RAIL: Internal.PathNodeType;
        static readonly DANGER_FIRE: Internal.PathNodeType;
        static readonly COCOA: Internal.PathNodeType;
        static readonly DAMAGE_FIRE: Internal.PathNodeType;
        static readonly DANGER_OTHER: Internal.PathNodeType;
        static readonly STICKY_HONEY: Internal.PathNodeType;
        static readonly WATER: Internal.PathNodeType;
        static readonly WATER_BORDER: Internal.PathNodeType;
        get danger(): Internal.PathNodeType;
    }
    type PathNodeType_ = "blocked" | "open" | "walkable" | "walkable_door" | "trapdoor" | "fence" | "lava" | "water" | "water_border" | "rail" | "unpassable_rail" | "danger_fire" | "damage_fire" | "danger_cactus" | "damage_cactus" | "danger_other" | "damage_other" | "door_open" | "door_wood_closed" | "door_iron_closed" | "breach" | "leaves" | "sticky_honey" | "cocoa" | PathNodeType;
    interface ModuleReader extends Internal.Closeable {
        read(arg0: string): Internal.Optional<Internal.ByteBuffer>;
        release(arg0: Internal.ByteBuffer): void;
        find(arg0: string): Internal.Optional<Internal.URI>;
        list(): Internal.Stream<string>;
        close(): void;
        open(arg0: string): Internal.Optional<Internal.InputStream>;
    }
    type ModuleReader_ = ModuleReader;
    interface Accessible {
        getAccessibleContext(): Internal.AccessibleContext;
        (): Internal.AccessibleContext;
    }
    type Accessible_ = (()=>Internal.AccessibleContext) | Accessible;
    interface IWorldLightListener extends Internal.ILightListener {
        func_215611_b(arg0: BlockPos): number;
        func_215612_a(arg0: Internal.SectionPos): Internal.NibbleArray;
    }
    type IWorldLightListener_ = IWorldLightListener;
    class AreaEffectCloudEntity extends Internal.Entity {
        shouldRiderSit(): boolean;
        func_184483_a(arg0: number): void;
        func_184482_a(arg0: number): void;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_184481_a(arg0: Internal.LivingEntity): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_184494_w(): Internal.LivingEntity;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_184492_k(): number;
        func_184490_j(): number;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_184496_a(arg0: Internal.EffectInstance): void;
        func_184495_b(arg0: number): void;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        func_195059_a(arg0: Internal.IParticleData): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        func_184489_o(): number;
        asKJS(): any;
        func_195058_l(): Internal.IParticleData;
        func_184497_n(): boolean;
        canRiderInteract(): boolean;
        func_184487_c(arg0: number): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_184485_d(arg0: number): void;
        func_184486_b(arg0: number): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_184484_a(arg0: Internal.Potion_): void;
        readonly field_184503_f: Internal.List<Internal.EffectInstance>;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.AreaEffectCloudEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
    }
    type AreaEffectCloudEntity_ = AreaEffectCloudEntity;
    class Vector2f extends Document.Object {
        func_201069_c(arg0: Internal.Vector2f): boolean;
        static readonly field_189974_a: Internal.Vector2f;
        static readonly field_189976_c: Internal.Vector2f;
        static readonly field_189981_h: Internal.Vector2f;
        static readonly field_189975_b: Internal.Vector2f;
        static readonly field_189980_g: Internal.Vector2f;
        static readonly field_189978_e: Internal.Vector2f;
        readonly field_189983_j: number;
        static readonly field_189977_d: Internal.Vector2f;
        readonly field_189982_i: number;
        static readonly field_189979_f: Internal.Vector2f;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
    }
    type Vector2f_ = Vector2f;
    class WireCollisionData$CollisionInfo extends Document.Object {
        getLocalNet(): Internal.LocalWireNetwork;
        readonly intersectB: Vec3;
        readonly conn: Internal.Connection;
        readonly intersectA: Vec3;
        readonly isInBlock: boolean;
        get localNet(): Internal.LocalWireNetwork;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(this$0: Internal.WireCollisionData, intersectA: Vec3, intersectB: Vec3, conn: Internal.Connection, isInBlock: boolean);
    }
    type WireCollisionData$CollisionInfo_ = WireCollisionData$CollisionInfo;
    abstract class AbstractObject2IntFunction <K> extends Document.Object implements Internal.Object2IntFunction<K>, Internal.Serializable {
        getInt(arg0: any): number;
        defaultReturnValue(arg0: number): void;
        defaultReturnValue(): number;
        applyAsInt(arg0: K): number;
        size(): number;
        removeInt(arg0: any): number;
        compose<V_>(arg0: Internal.Function_<V_, K>): Internal.Function<V_, number>;
        apply(arg0: K): number;
        containsKey(arg0: any): boolean;
        get(arg0: any): number;
        get(arg0: any): any;
        clear(): void;
        andThen<V_>(arg0: Internal.Function_<number, V_>): Internal.Function<K, V_>;
        put(arg0: any, arg1: any): any;
        put(arg0: K, arg1: number): number;
        put(arg0: K, arg1: number): number;
        remove(arg0: any): any;
        remove(arg0: any): number;
    }
    type AbstractObject2IntFunction_<K> = AbstractObject2IntFunction<K>;
    class Suggestions extends Document.Object {
        getList(): Internal.List<Internal.Suggestion>;
        getRange(): Internal.StringRange;
        static merge(arg0: string, arg1: Internal.Collection<Internal.Suggestions>): Internal.Suggestions;
        isEmpty(): boolean;
        static create(arg0: string, arg1: Internal.Collection<Internal.Suggestion>): Internal.Suggestions;
        static empty(): Internal.CompletableFuture<Internal.Suggestions>;
        get range(): Internal.StringRange;
        get list(): Internal.List<Internal.Suggestion>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.StringRange, arg1: Internal.List<Internal.Suggestion>);
    }
    type Suggestions_ = Suggestions;
    class CEntityActionPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149512_e(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_180764_b(): Internal.CEntityActionPacket$Action;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Entity, arg1: Internal.CEntityActionPacket$Action, arg2: number);
        constructor(arg0: Internal.Entity, arg1: Internal.CEntityActionPacket$Action);
        constructor();
    }
    type CEntityActionPacket_ = CEntityActionPacket;
    class Lifecycle extends Document.Object {
        add(arg0: Internal.Lifecycle): Internal.Lifecycle;
        static stable(): Internal.Lifecycle;
        static deprecated(arg0: number): Internal.Lifecycle;
        static experimental(): Internal.Lifecycle;
    }
    type Lifecycle_ = Lifecycle;
    interface MethodHandleInfo {
        getReferenceKind(): number;
        getDeclaringClass(): Internal.Class<any>;
        getName(): string;
        isVarArgs(): boolean;
        getMethodType(): Internal.MethodType;
        reflectAs<T>(arg0: Internal.Class<T>, arg1: Internal.MethodHandles$Lookup): T;
        getModifiers(): number;
    }
    type MethodHandleInfo_ = MethodHandleInfo;
    class CChatMessagePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149439_c(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: string);
    }
    type CChatMessagePacket_ = CChatMessagePacket;
    interface ColorResolver {
        getColor(arg0: Internal.Biome_, arg1: number, arg2: number): number;
        (arg0: Internal.Biome, arg1: number, arg2: number): number;
    }
    type ColorResolver_ = ((arg0: Internal.Biome, arg1: number, arg2: number)=>number) | ColorResolver;
    class IntSummaryStatistics extends Document.Object implements Internal.IntConsumer {
        getMin(): number;
        getMax(): number;
        getAverage(): number;
        getSum(): number;
        getCount(): number;
        andThen(arg0: Internal.IntConsumer_): Internal.IntConsumer;
        combine(arg0: Internal.IntSummaryStatistics): void;
        accept(arg0: number): void;
        get average(): number;
        get min(): number;
        get max(): number;
        get count(): number;
        get sum(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type IntSummaryStatistics_ = IntSummaryStatistics;
    class SPlaySoundEffectPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_149210_f(): number;
        func_149211_e(): number;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149209_h(): number;
        func_186977_b(): Internal.SoundCategory;
        func_186978_a(): Internal.SoundEvent;
        func_149208_g(): number;
        func_149207_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.SoundEvent, arg1: Internal.SoundCategory, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number);
    }
    type SPlaySoundEffectPacket_ = SPlaySoundEffectPacket;
    class ManaNetworkEvent$Action extends Internal.Enum<Internal.ManaNetworkEvent$Action> {
        static valueOf(arg0: string): Internal.ManaNetworkEvent$Action;
        static values(): Internal.ManaNetworkEvent$Action[];
        static readonly ADD: Internal.ManaNetworkEvent$Action;
        static readonly REMOVE: Internal.ManaNetworkEvent$Action;
    }
    type ManaNetworkEvent$Action_ = "remove" | "add" | ManaNetworkEvent$Action;
    class Locale$LanguageRange extends Document.Object {
        getWeight(): number;
        getRange(): string;
        static mapEquivalents(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Map_<string, Internal.List_<string>>): Internal.List<Internal.Locale$LanguageRange>;
        static parse(arg0: string): Internal.List<Internal.Locale$LanguageRange>;
        static parse(arg0: string, arg1: Internal.Map_<string, Internal.List_<string>>): Internal.List<Internal.Locale$LanguageRange>;
        static readonly MAX_WEIGHT: 1.0;
        static readonly MIN_WEIGHT: 0.0;
        get weight(): number;
        get range(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor(arg0: string, arg1: number);
    }
    type Locale$LanguageRange_ = Locale$LanguageRange;
    interface GameRulesAccessor$IntegerValue {
    }
    type GameRulesAccessor$IntegerValue_ = GameRulesAccessor$IntegerValue;
    abstract class AbstractFurnaceContainer extends Internal.RecipeBookContainer<Internal.IInventory> {
        func_217061_l(): boolean;
        func_217060_j(): number;
        func_217059_k(): number;
    }
    type AbstractFurnaceContainer_ = AbstractFurnaceContainer;
    interface MouseHandlerFTBC {
        setMouseGrabbedFTBC(arg0: boolean): void;
        (arg0: boolean): void;
    }
    type MouseHandlerFTBC_ = ((arg0: boolean)=>void) | MouseHandlerFTBC;
    class PlatformWrapper$ModInfo extends Document.Object {
        getVersion(): string;
        getName(): string;
        getId(): string;
        get name(): string;
        get id(): string;
        get version(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(i: string);
    }
    type PlatformWrapper$ModInfo_ = PlatformWrapper$ModInfo;
    class ClientTeam extends Internal.TeamBase {
        write(arg0: Internal.PacketBuffer, arg1: number): void;
        isSelf(): boolean;
        readonly manager: Internal.ClientTeamManager;
        invalid: boolean;
        get self(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ClientTeamManager, arg1: Internal.PacketBuffer, arg2: number);
        constructor(arg0: Internal.ClientTeamManager, arg1: Internal.Team);
    }
    type ClientTeam_ = ClientTeam;
    abstract class Locale$IsoCountryCode extends Internal.Enum<Internal.Locale$IsoCountryCode> {
        static valueOf(arg0: string): Internal.Locale$IsoCountryCode;
        static values(): Internal.Locale$IsoCountryCode[];
        static readonly PART3: Internal.Locale$IsoCountryCode;
        static readonly PART1_ALPHA2: Internal.Locale$IsoCountryCode;
        static readonly PART1_ALPHA3: Internal.Locale$IsoCountryCode;
    }
    type Locale$IsoCountryCode_ = "part1_alpha2" | "part1_alpha3" | "part3" | Locale$IsoCountryCode;
    interface IForgeEffectInstance {
        renderInventoryEffect(arg0: Internal.DisplayEffectsScreen<any>, arg1: Internal.MatrixStack, arg2: number, arg3: number, arg4: number): void;
        writeCurativeItems(arg0: Internal.CompoundNBT_): void;
        shouldRenderHUD(): boolean;
        getEffectInstance(): Internal.EffectInstance;
        addCurativeItem(arg0: Internal.ItemStack): void;
        setCurativeItems(arg0: Internal.List<Internal.ItemStack>): void;
        shouldRenderInvText(): boolean;
        shouldRender(): boolean;
        isCurativeItem(arg0: Internal.ItemStack): boolean;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        renderHUDEffect(arg0: Internal.AbstractGui, arg1: Internal.MatrixStack, arg2: number, arg3: number, arg4: number, arg5: number): void;
    }
    type IForgeEffectInstance_ = IForgeEffectInstance;
    interface IPosRuleTests <P> {
        codec(): Internal.Codec<P>;
        (): Internal.Codec<P>;
    }
    type IPosRuleTests_<P> = (()=>Internal.Codec<P>) | IPosRuleTests<P>;
    class CoatTypes extends Internal.Enum<Internal.CoatTypes> {
        static func_234248_a_(arg0: number): Internal.CoatTypes;
        static valueOf(arg0: string): Internal.CoatTypes;
        static values(): Internal.CoatTypes[];
        func_234247_a_(): number;
        static readonly WHITE: Internal.CoatTypes;
        static readonly WHITE_FIELD: Internal.CoatTypes;
        static readonly NONE: Internal.CoatTypes;
        static readonly BLACK_DOTS: Internal.CoatTypes;
        static readonly WHITE_DOTS: Internal.CoatTypes;
    }
    type CoatTypes_ = "none" | "white" | "white_field" | "white_dots" | "black_dots" | CoatTypes;
    interface ShortBidirectionalIterator extends Internal.ShortIterator, Internal.ObjectBidirectionalIterator<number> {
        previous(): number;
        previous(): any;
        previousShort(): number;
        back(arg0: number): number;
        skip(arg0: number): number;
        (): number;
    }
    type ShortBidirectionalIterator_ = (()=>number) | ShortBidirectionalIterator;
    class PotionEvent$PotionRemoveEvent extends Internal.PotionEvent {
        getPotion(): Internal.Effect;
        get potion(): Internal.Effect;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.EffectInstance);
        constructor(arg0: Internal.LivingEntity, arg1: Internal.Effect);
    }
    type PotionEvent$PotionRemoveEvent_ = PotionEvent$PotionRemoveEvent;
    interface IToast {
        func_230445_a_(): number;
        func_230444_a_(arg0: Internal.MatrixStack, arg1: Internal.ToastGui, arg2: number): Internal.IToast$Visibility;
        func_238540_d_(): number;
        func_193652_b(): any;
        (arg0: Internal.MatrixStack, arg1: Internal.ToastGui, arg2: number): Internal.IToast$Visibility;
    }
    type IToast_ = ((arg0: Internal.MatrixStack, arg1: Internal.ToastGui, arg2: number)=>Internal.IToast$Visibility) | IToast;
    interface IRenderable {
        func_230430_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
        (arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
    }
    type IRenderable_ = ((arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number)=>void) | IRenderable;
    class EnumGetMethod extends Internal.Enum<Internal.EnumGetMethod> {
        isCaseSensitive(): boolean;
        isOrdinalOk(): boolean;
        static valueOf(arg0: string): Internal.EnumGetMethod;
        static values(): Internal.EnumGetMethod[];
        get<T_>(arg0: any, arg1: Internal.Class<T_>): T_;
        validate<T_>(arg0: any, arg1: Internal.Class<T_>): boolean;
        static readonly NAME_IGNORECASE: Internal.EnumGetMethod;
        static readonly ORDINAL_OR_NAME: Internal.EnumGetMethod;
        static readonly ORDINAL_OR_NAME_IGNORECASE: Internal.EnumGetMethod;
        static readonly NAME: Internal.EnumGetMethod;
        get ordinalOk(): boolean;
        get caseSensitive(): boolean;
    }
    type EnumGetMethod_ = "name" | "name_ignorecase" | "ordinal_or_name" | "ordinal_or_name_ignorecase" | EnumGetMethod;
    class StatsNBT extends Document.Object {
        static readFromNBT(arg0: Internal.INBT): Internal.StatsNBT;
        getInt(arg0: Internal.IToolStat<any>): number;
        hasStat(arg0: Internal.IToolStat<any>): boolean;
        static builder(): Internal.StatsNBT$Builder;
        getContainedStats(): Internal.Set<Internal.IToolStat<any>>;
        serializeToNBT(): Internal.CompoundNBT;
        getFloat(arg0: Internal.IToolStat<any>): number;
        static readonly EMPTY: Internal.StatsNBT;
        get containedStats(): Internal.Set<Internal.IToolStat<any>>;
    }
    type StatsNBT_ = StatsNBT;
    class BackgroundMusicSelector extends Document.Object {
        func_232666_c_(): number;
        func_232668_d_(): boolean;
        func_232661_a_(): Internal.SoundEvent;
        func_232664_b_(): number;
        static readonly field_232656_a_: Internal.Codec<Internal.BackgroundMusicSelector>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SoundEvent, arg1: number, arg2: number, arg3: boolean);
    }
    type BackgroundMusicSelector_ = BackgroundMusicSelector;
    class CrystallizingRecipeJS extends Internal.MekanismRecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CrystallizingRecipeJS_ = CrystallizingRecipeJS;
    class EndPortalTileEntity extends Internal.TileEntity {
        requestModelDataUpdate(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        onLoad(): void;
        func_184313_a(arg0: Internal.Direction_): boolean;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TileEntityType<any>);
        constructor();
    }
    type EndPortalTileEntity_ = EndPortalTileEntity;
    interface DragGestureListener extends Internal.EventListener {
        dragGestureRecognized(arg0: Internal.DragGestureEvent): void;
        (arg0: Internal.DragGestureEvent): void;
    }
    type DragGestureListener_ = ((arg0: Internal.DragGestureEvent)=>void) | DragGestureListener;
    abstract class ImmutableCollection <E> extends Internal.AbstractCollection<E> implements Internal.Serializable {
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.UnmodifiableIterator<E>;
        stream(): Internal.Stream<E>;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        toArray<T_>(arg0: T_[]): T_[];
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<E>;
        asList(): Internal.ImmutableList<E>;
    }
    type ImmutableCollection_<E> = ImmutableCollection<E>;
    class HashSet <E> extends Internal.AbstractSet<E> implements Internal.Set<E>, Internal.Cloneable, Internal.Serializable {
        static newHashSet<T_>(arg0: number): Internal.HashSet<T_>;
        iterator(): Internal.Iterator<E>;
        stream(): Internal.Stream<E>;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        toArray<T_>(arg0: T_[]): T_[];
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        clone(): any;
        parallelStream(): Internal.Stream<E>;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
        constructor(arg0: number, arg1: number);
        constructor(arg0: Internal.Collection<E>);
        constructor();
    }
    type HashSet_<E> = HashSet<E>;
    interface ScheduledExecutorService extends Internal.ExecutorService {
        scheduleAtFixedRate(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        schedule(arg0: Internal.Runnable_, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        schedule<V_>(arg0: java_.util.concurrent.Callable_<V_>, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<V_>;
        scheduleWithFixedDelay(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
    }
    type ScheduledExecutorService_ = ScheduledExecutorService;
    interface IWindowEventListener {
        func_213228_a(arg0: boolean): void;
        func_241216_b_(): void;
        func_213226_a(): void;
    }
    type IWindowEventListener_ = IWindowEventListener;
    class ShieldRecipes extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type ShieldRecipes_ = ShieldRecipes;
    class BlockRegistryEventJS extends Internal.StartupEventJS {
        create(name: string, callback: Internal.Consumer_<Internal.BlockBuilder_>): void;
        create(name: string): Internal.BlockBuilder;
        addDetector(id: string): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BlockRegistryEventJS_ = BlockRegistryEventJS;
    class ClientEventJS extends Internal.EventJS {
        getPlayer(): Internal.ClientPlayerJS;
        getWorld(): Internal.ClientWorldJS;
        post(id: string): boolean;
        post(id: string, sub: string): boolean;
        getEntity(): Internal.EntityJS;
        get world(): Internal.ClientWorldJS;
        get entity(): Internal.EntityJS;
        get player(): Internal.ClientPlayerJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ClientEventJS_ = ClientEventJS;
    class VarHandle$AccessMode extends Internal.Enum<Internal.VarHandle$AccessMode> {
        static valueOf(arg0: string): Internal.VarHandle$AccessMode;
        static valueFromMethodName(arg0: string): Internal.VarHandle$AccessMode;
        static values(): Internal.VarHandle$AccessMode[];
        methodName(): string;
        static readonly WEAK_COMPARE_AND_SET: Internal.VarHandle$AccessMode;
        static readonly GET_VOLATILE: Internal.VarHandle$AccessMode;
        static readonly SET: Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_OR_ACQUIRE: Internal.VarHandle$AccessMode;
        static readonly GET_AND_ADD: Internal.VarHandle$AccessMode;
        static readonly GET_AND_SET: Internal.VarHandle$AccessMode;
        static readonly GET_ACQUIRE: Internal.VarHandle$AccessMode;
        static readonly GET_AND_ADD_RELEASE: Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_AND_ACQUIRE: Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_XOR_ACQUIRE: Internal.VarHandle$AccessMode;
        static readonly GET_AND_ADD_ACQUIRE: Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_OR_RELEASE: Internal.VarHandle$AccessMode;
        static readonly SET_OPAQUE: Internal.VarHandle$AccessMode;
        static readonly WEAK_COMPARE_AND_SET_ACQUIRE: Internal.VarHandle$AccessMode;
        static readonly COMPARE_AND_SET: Internal.VarHandle$AccessMode;
        static readonly COMPARE_AND_EXCHANGE_ACQUIRE: Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_AND: Internal.VarHandle$AccessMode;
        static readonly SET_VOLATILE: Internal.VarHandle$AccessMode;
        static readonly COMPARE_AND_EXCHANGE_RELEASE: Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_XOR: Internal.VarHandle$AccessMode;
        static readonly WEAK_COMPARE_AND_SET_PLAIN: Internal.VarHandle$AccessMode;
        static readonly SET_RELEASE: Internal.VarHandle$AccessMode;
        static readonly COMPARE_AND_EXCHANGE: Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_OR: Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_AND_RELEASE: Internal.VarHandle$AccessMode;
        static readonly WEAK_COMPARE_AND_SET_RELEASE: Internal.VarHandle$AccessMode;
        static readonly GET_AND_SET_RELEASE: Internal.VarHandle$AccessMode;
        static readonly GET: Internal.VarHandle$AccessMode;
        static readonly GET_AND_SET_ACQUIRE: Internal.VarHandle$AccessMode;
        static readonly GET_AND_BITWISE_XOR_RELEASE: Internal.VarHandle$AccessMode;
        static readonly GET_OPAQUE: Internal.VarHandle$AccessMode;
    }
    type VarHandle$AccessMode_ = "get" | "set" | "get_volatile" | "set_volatile" | "get_acquire" | "set_release" | "get_opaque" | "set_opaque" | "compare_and_set" | "compare_and_exchange" | "compare_and_exchange_acquire" | "compare_and_exchange_release" | "weak_compare_and_set_plain" | "weak_compare_and_set" | "weak_compare_and_set_acquire" | "weak_compare_and_set_release" | "get_and_set" | "get_and_set_acquire" | "get_and_set_release" | "get_and_add" | "get_and_add_acquire" | "get_and_add_release" | "get_and_bitwise_or" | "get_and_bitwise_or_release" | "get_and_bitwise_or_acquire" | "get_and_bitwise_and" | "get_and_bitwise_and_release" | "get_and_bitwise_and_acquire" | "get_and_bitwise_xor" | "get_and_bitwise_xor_release" | "get_and_bitwise_xor_acquire" | VarHandle$AccessMode;
    class SUpdateChunkPositionPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218754_c(): number;
        func_218755_b(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number);
    }
    type SUpdateChunkPositionPacket_ = SUpdateChunkPositionPacket;
    interface ICrossbowUser extends Internal.IRangedAttackMob {
        func_70638_az(): Internal.LivingEntity;
        func_213671_a(arg0: boolean): void;
        func_230283_U__(): void;
        func_234280_a_(arg0: Internal.LivingEntity, arg1: Vec3, arg2: number): Internal.Vector3f;
        func_234279_a_(arg0: Internal.LivingEntity, arg1: Internal.LivingEntity, arg2: Internal.ProjectileEntity, arg3: number, arg4: number): void;
        func_234281_b_(arg0: Internal.LivingEntity, arg1: number): void;
        func_230284_a_(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: Internal.ProjectileEntity, arg3: number): void;
    }
    type ICrossbowUser_ = ICrossbowUser;
    class CRenameItemPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_210351_a(): string;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: string);
    }
    type CRenameItemPacket_ = CRenameItemPacket;
    class DecoratedFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_214689_a: java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236491_a_: Internal.Codec<Internal.DecoratedFeatureConfig>;
        readonly field_214690_b: Internal.ConfiguredPlacement<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>, arg1: Internal.ConfiguredPlacement<any>);
    }
    type DecoratedFeatureConfig_ = DecoratedFeatureConfig;
    class ServerStatusResponse extends Document.Object {
        invalidateJson(): void;
        func_151317_a(): Internal.ITextComponent;
        func_151316_d(): string;
        getForgeData(): Internal.FMLStatusPing;
        func_151319_a(arg0: Internal.ServerStatusResponse$Players): void;
        func_151318_b(): Internal.ServerStatusResponse$Players;
        func_151322_c(): Internal.ServerStatusResponse$Version;
        func_151315_a(arg0: Internal.ITextComponent_): void;
        func_151320_a(arg0: string): void;
        setForgeData(arg0: Internal.FMLStatusPing): void;
        func_151321_a(arg0: Internal.ServerStatusResponse$Version): void;
        getJson(): string;
        get json(): string;
        get forgeData(): Internal.FMLStatusPing;
        set forgeData(arg0: Internal.FMLStatusPing);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ServerStatusResponse_ = ServerStatusResponse;
    class FrameTimer extends Document.Object {
        func_181747_a(arg0: number): void;
        func_219792_a(arg0: number, arg1: number, arg2: number): number;
        func_181749_a(): number;
        func_181746_c(): number[];
        func_181751_b(arg0: number): number;
        func_181750_b(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FrameTimer_ = FrameTimer;
    class DynamicCommandExceptionType extends Document.Object implements Internal.CommandExceptionType {
        createWithContext(arg0: Internal.ImmutableStringReader, arg1: any): Internal.CommandSyntaxException;
        create(arg0: any): Internal.CommandSyntaxException;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Function<any, Internal.Message>);
    }
    type DynamicCommandExceptionType_ = DynamicCommandExceptionType;
    class PointOfView extends Internal.Enum<Internal.PointOfView> {
        func_243193_b(): boolean;
        func_243194_c(): Internal.PointOfView;
        static valueOf(arg0: string): Internal.PointOfView;
        static values(): Internal.PointOfView[];
        func_243192_a(): boolean;
        static readonly THIRD_PERSON_BACK: Internal.PointOfView;
        static readonly THIRD_PERSON_FRONT: Internal.PointOfView;
        static readonly FIRST_PERSON: Internal.PointOfView;
    }
    type PointOfView_ = "first_person" | "third_person_back" | "third_person_front" | PointOfView;
    class EpollEventLoopGroup extends Internal.MultithreadEventLoopGroup {
        scheduleAtFixedRate(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        next(): Internal.EventExecutor;
        schedule(arg0: java_.util.concurrent.Callable_<any>, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        schedule(arg0: Internal.Runnable_, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        submit(arg0: java_.util.concurrent.Callable_<any>): java_.util.concurrent.Future<any>;
        submit(arg0: Internal.Runnable_): java_.util.concurrent.Future<any>;
        submit(arg0: Internal.Runnable_, arg1: any): java_.util.concurrent.Future<any>;
        spliterator(): Internal.Spliterator<Internal.EventExecutor>;
        forEach(arg0: Internal.Consumer_<Internal.EventExecutor_>): void;
        scheduleWithFixedDelay(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        setIoRatio(arg0: number): void;
        close(): void;
        set ioRatio(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.ThreadFactory, arg2: any);
        constructor(arg0: number, arg1: Internal.ThreadFactory, arg2: number);
        constructor(arg0: number, arg1: Internal.ThreadFactory, arg2: number, arg3: any);
        constructor(arg0: number, arg1: Internal.Executor, arg2: any);
        constructor(arg0: number, arg1: Internal.Executor, arg2: any, arg3: any);
        constructor(arg0: number, arg1: Internal.Executor, arg2: any, arg3: any, arg4: any);
        constructor();
        constructor(arg0: number);
        constructor(arg0: number, arg1: any);
        constructor(arg0: number, arg1: Internal.ThreadFactory);
        constructor(arg0: number, arg1: Internal.Executor);
    }
    type EpollEventLoopGroup_ = EpollEventLoopGroup;
    abstract class BlockPlacer extends Document.Object {
        func_225567_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.Random): void;
        static readonly field_236435_a_: Internal.Codec<Internal.BlockPlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BlockPlacer_ = BlockPlacer;
    class PlayerEntity$SleepResult extends Internal.Enum<Internal.PlayerEntity$SleepResult> {
        static valueOf(arg0: string): Internal.PlayerEntity$SleepResult;
        static values(): Internal.PlayerEntity$SleepResult[];
        func_221259_a(): Internal.ITextComponent;
        static readonly OBSTRUCTED: Internal.PlayerEntity$SleepResult;
        static readonly NOT_POSSIBLE_HERE: Internal.PlayerEntity$SleepResult;
        static readonly NOT_POSSIBLE_NOW: Internal.PlayerEntity$SleepResult;
        static readonly NOT_SAFE: Internal.PlayerEntity$SleepResult;
        static readonly OTHER_PROBLEM: Internal.PlayerEntity$SleepResult;
        static readonly TOO_FAR_AWAY: Internal.PlayerEntity$SleepResult;
    }
    type PlayerEntity$SleepResult_ = "not_possible_here" | "not_possible_now" | "too_far_away" | "obstructed" | "other_problem" | "not_safe" | PlayerEntity$SleepResult;
    class StateContainer <O, S> extends Document.Object implements Internal.ICache, Internal.StateContainerMixin<any> {
        handler$bao000$getPropertyHeadInjected(arg0: string, arg1: Internal.CallbackInfoReturnable<any>): void;
        static func_241487_a_<S_, T_>(arg0: Internal.MapCodec<S_>, arg1: java_.util.function_.Supplier_<S_>, arg2: string, arg3: Internal.Property<T_>): Internal.MapCodec<S_>;
        func_177621_b(): S;
        func_177622_c(): O;
        func_177623_d(): Internal.Collection<Internal.Property<any>>;
        persistAndClearCache(): void;
        handler$bao000$initReturnInjected(arg0: Internal.Function_<any,any>, arg1: any, arg2: Internal.StateContainer$IFactory_<any,any>, arg3: Internal.Map_<any,any>, arg4: Internal.CallbackInfo): void;
        func_177619_a(): Internal.ImmutableList<S>;
        func_185920_a(arg0: string): Internal.Property<any>;
        setOwner(arg0: any): void;
        field_177627_c: O;
        set owner(arg0: any);
    }
    type StateContainer_<O, S> = StateContainer<O, S>;
    abstract class MultithreadEventExecutorGroup extends Internal.AbstractEventExecutorGroup {
        scheduleAtFixedRate(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        schedule(arg0: java_.util.concurrent.Callable_<any>, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        schedule(arg0: Internal.Runnable_, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        submit(arg0: java_.util.concurrent.Callable_<any>): java_.util.concurrent.Future<any>;
        submit(arg0: Internal.Runnable_): java_.util.concurrent.Future<any>;
        submit(arg0: Internal.Runnable_, arg1: any): java_.util.concurrent.Future<any>;
        spliterator(): Internal.Spliterator<Internal.EventExecutor>;
        forEach(arg0: Internal.Consumer_<Internal.EventExecutor_>): void;
        scheduleWithFixedDelay(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        executorCount(): number;
        close(): void;
    }
    type MultithreadEventExecutorGroup_ = MultithreadEventExecutorGroup;
    class ItemTooltipEventJS extends Internal.EventJS {
        add(item: any, text: any): void;
        isAlt(): boolean;
        isCtrl(): boolean;
        addAdvanced(item: any, handler: Internal.ItemTooltipEventJS$StaticTooltipHandlerFromJS_): void;
        isShift(): boolean;
        addAdvancedToAll(handler: Internal.ItemTooltipEventJS$StaticTooltipHandlerFromJS_): void;
        addToAll(text: any): void;
        get ctrl(): boolean;
        get shift(): boolean;
        get alt(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(m: Internal.Map<Internal.Item, Internal.List<any>>);
    }
    type ItemTooltipEventJS_ = ItemTooltipEventJS;
    interface RandomAccess {
    }
    type RandomAccess_ = RandomAccess;
    class ColorProperty extends Internal.TeamProperty<Internal.Color4I> {
        getType(): Internal.TeamPropertyType<Internal.Color4I>;
        toString(arg0: Internal.Color4I): string;
        fromString(arg0: string): Internal.Optional<Internal.Color4I>;
        get type(): Internal.TeamPropertyType<Internal.Color4I>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.Color4I);
        constructor(arg0: ResourceLocation, arg1: Internal.PacketBuffer);
    }
    type ColorProperty_ = ColorProperty;
    class WorldEvent$Unload extends Internal.WorldEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IWorld);
        constructor();
    }
    type WorldEvent$Unload_ = WorldEvent$Unload;
    interface AutoCloseable {
        close(): void;
        (): void;
    }
    type AutoCloseable_ = (()=>void) | AutoCloseable;
    class FoodValuesEvent extends net.minecraftforge.eventbus.api.Event {
        readonly itemStack: Internal.ItemStack;
        modifiedFoodValues: Internal.FoodValues;
        defaultFoodValues: Internal.FoodValues;
        readonly player: Internal.PlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack, arg2: Internal.FoodValues, arg3: Internal.FoodValues);
        constructor();
    }
    type FoodValuesEvent_ = FoodValuesEvent;
    interface Runnable {
        run(): void;
        (): void;
    }
    type Runnable_ = (()=>void) | Runnable;
    abstract class LootEventJS extends Internal.EventJS {
        modify(id: ResourceLocation_, b: Internal.Consumer_<Internal.LootBuilder_>): void;
        removeAll(): void;
        getType(): string;
        getDirectory(): string;
        addJson(id: ResourceLocation_, json: Internal.JsonObject): void;
        get type(): string;
        get directory(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(c: Internal.Map<ResourceLocation, Internal.JsonElement>);
    }
    type LootEventJS_ = LootEventJS;
    class DaylightDetectorTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity {
        requestModelDataUpdate(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        onLoad(): void;
        func_73660_a(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type DaylightDetectorTileEntity_ = DaylightDetectorTileEntity;
    class ShulkerBoxColoringRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type ShulkerBoxColoringRecipe_ = ShulkerBoxColoringRecipe;
    class WorldEvent$PotentialSpawns extends Internal.WorldEvent {
        getType(): Internal.EntityClassification;
        getPos(): BlockPos;
        getList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        get pos(): BlockPos;
        get type(): Internal.EntityClassification;
        get list(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.IWorld, arg1: Internal.EntityClassification, arg2: BlockPos, arg3: Internal.List<Internal.MobSpawnInfo$Spawners>);
    }
    type WorldEvent$PotentialSpawns_ = WorldEvent$PotentialSpawns;
    interface IReputationTracking {
        func_213739_a(arg0: Internal.IReputationType, arg1: Internal.Entity): void;
        (arg0: Internal.IReputationType, arg1: Internal.Entity): void;
    }
    type IReputationTracking_ = ((arg0: Internal.IReputationType, arg1: Internal.Entity)=>void) | IReputationTracking;
    class ContextMenuItem extends Document.Object implements Internal.Comparable<Internal.ContextMenuItem> {
        addMouseOverText(list: Internal.TooltipList): void;
        setEnabled(v: Internal.BooleanSupplier_): Internal.ContextMenuItem;
        setEnabled(v: boolean): Internal.ContextMenuItem;
        setYesNo(s: Internal.ITextComponent_): Internal.ContextMenuItem;
        onClicked(panel: Internal.Panel, button: Internal.MouseButton): void;
        compareTo(arg0: any): number;
        compareTo(o: Internal.ContextMenuItem): number;
        drawIcon(matrixStack: Internal.MatrixStack, theme: Internal.Theme, x: number, y: number, w: number, h: number): void;
        createWidget(panel: Internal.ContextMenu): Internal.Widget;
        setCloseMenu(v: boolean): Internal.ContextMenuItem;
        static readonly SEPARATOR: Internal.ContextMenuItem;
        icon: Internal.Icon;
        static readonly TRUE: Internal.BooleanSupplier;
        callback: Internal.Runnable;
        static readonly FALSE: Internal.BooleanSupplier;
        title: Internal.ITextComponent;
        yesNoText: Internal.ITextComponent;
        closeMenu: boolean;
        enabled: Internal.BooleanSupplier;
        set yesNo(s: Internal.ITextComponent_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(t: Internal.ITextComponent, i: Internal.Icon, c: Internal.Runnable);
    }
    type ContextMenuItem_ = ContextMenuItem;
    class CPlayerDiggingPacket$Action extends Internal.Enum<Internal.CPlayerDiggingPacket$Action> {
        static valueOf(arg0: string): Internal.CPlayerDiggingPacket$Action;
        static values(): Internal.CPlayerDiggingPacket$Action[];
        static readonly STOP_DESTROY_BLOCK: Internal.CPlayerDiggingPacket$Action;
        static readonly DROP_ALL_ITEMS: Internal.CPlayerDiggingPacket$Action;
        static readonly DROP_ITEM: Internal.CPlayerDiggingPacket$Action;
        static readonly RELEASE_USE_ITEM: Internal.CPlayerDiggingPacket$Action;
        static readonly ABORT_DESTROY_BLOCK: Internal.CPlayerDiggingPacket$Action;
        static readonly SWAP_ITEM_WITH_OFFHAND: Internal.CPlayerDiggingPacket$Action;
        static readonly START_DESTROY_BLOCK: Internal.CPlayerDiggingPacket$Action;
    }
    type CPlayerDiggingPacket$Action_ = "start_destroy_block" | "abort_destroy_block" | "stop_destroy_block" | "drop_all_items" | "drop_item" | "release_use_item" | "swap_item_with_offhand" | CPlayerDiggingPacket$Action;
    class ProgressChange extends Document.Object {
        write(arg0: Internal.PacketBuffer): void;
        readonly file: Internal.QuestFile;
        origin: Internal.QuestObjectBase;
        reset: boolean;
        time: Internal.Date;
        notifications: boolean;
        player: Internal.UUID;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.QuestFile);
        constructor(arg0: Internal.QuestFile, arg1: Internal.PacketBuffer);
    }
    type ProgressChange_ = ProgressChange;
    class BlockRenderer extends Document.Object {
        renderModel(world: Internal.IBlockDisplayReader, state: Internal.BlockState, pos: BlockPos, model: Internal.IBakedModel, buffers: Internal.ChunkModelBuffers, cull: boolean, seed: number, modelData: Internal.IModelData): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(client: Internal.Minecraft, lighters: any, biomeColorBlender: any);
    }
    type BlockRenderer_ = BlockRenderer;
    interface IServerConfiguration {
        func_82574_x(): Internal.GameRules;
        func_230413_a_(arg0: Internal.CompoundNBT_): void;
        func_230414_b_(arg0: Internal.CompoundNBT_): void;
        func_176123_z(): boolean;
        func_230411_a_(arg0: Internal.DynamicRegistries, arg1: Internal.CompoundNBT_): Internal.CompoundNBT;
        func_230409_a_(arg0: Internal.Difficulty_): void;
        func_230416_x_(): Internal.CompoundNBT;
        func_76086_u(): boolean;
        func_85118_a(arg0: Internal.CrashReportCategory): void;
        func_76065_j(): string;
        func_230415_d_(arg0: boolean): void;
        func_176130_y(): Internal.Difficulty;
        func_230418_z_(): Internal.DimensionGeneratorSettings;
        func_230408_H_(): Internal.WorldSettings;
        func_230417_y_(): number;
        func_230392_a_(arg0: Internal.GameType_): void;
        func_230412_a_(arg0: string, arg1: boolean): void;
        func_230410_a_(arg0: Internal.DatapackCodec): void;
        func_230405_E_(): boolean;
        func_230404_D_(): Internal.CompoundNBT;
        func_230406_F_(): Internal.Set<string>;
        func_76077_q(): Internal.GameType;
        func_230407_G_(): Internal.IServerWorldInfo;
        func_230401_A_(): Internal.Lifecycle;
        func_237379_i_(arg0: number): string;
        func_76093_s(): boolean;
        func_230403_C_(): Internal.DatapackCodec;
        func_230402_B_(): Internal.CompoundNBT;
    }
    type IServerConfiguration_ = IServerConfiguration;
    abstract class URLStreamHandler extends Document.Object {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type URLStreamHandler_ = URLStreamHandler;
    interface Context$ClassShutterSetter {
        setClassShutter(arg0: Internal.ClassShutter_): void;
        getClassShutter(): Internal.ClassShutter;
    }
    type Context$ClassShutterSetter_ = Context$ClassShutterSetter;
    class CCustomPayloadPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler>, Internal.ICustomPacket<Internal.CCustomPayloadPacket>, Internal.INamedPacket {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        setName(arg0: string): void;
        setName(arg0: ResourceLocation_): void;
        getThis(): Internal.IServerPlayNetHandler;
        func_211402_a(): boolean;
        getName(): string;
        getName(): ResourceLocation;
        getDirection(): Internal.NetworkDirection;
        getIndex(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        setData(arg0: Internal.PacketBuffer): void;
        setIndex(arg0: number): void;
        getInternalData(): Internal.PacketBuffer;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        static readonly field_210344_a: ResourceLocation;
        get internalData(): Internal.PacketBuffer;
        get this(): Internal.IServerPlayNetHandler;
        get name(): ResourceLocation;
        get index(): number;
        get direction(): Internal.NetworkDirection;
        set data(arg0: Internal.PacketBuffer);
        set name(arg0: ResourceLocation_);
        set index(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: ResourceLocation, arg1: Internal.PacketBuffer);
    }
    type CCustomPayloadPacket_ = CCustomPayloadPacket;
    class CConfirmTeleportPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186987_a(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type CConfirmTeleportPacket_ = CConfirmTeleportPacket;
    class Int2ObjectOpenHashMap <V> extends Internal.AbstractInt2ObjectMap<V> implements Internal.Serializable, Internal.Cloneable, Internal.Hash {
        getOrDefault(arg0: number, arg1: V): V;
        getOrDefault(arg0: any, arg1: V): V;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<number, V>>;
        entrySet(): Internal.Set<any>;
        apply(arg0: number): V;
        apply(arg0: number): V;
        forEach(arg0: Internal.BiConsumer_<number, V>): void;
        containsKey(arg0: any): boolean;
        computeIfAbsent(arg0: number, arg1: Internal.IntFunction_<V>): V;
        computeIfAbsent(arg0: any, arg1: Internal.Function_<any,any>): any;
        computeIfAbsent(arg0: number, arg1: Internal.Function_<number, V>): V;
        values(): Internal.ObjectCollection<V>;
        values(): Internal.Collection<any>;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        computeIfAbsentPartial(arg0: number, arg1: Internal.Int2ObjectFunction_<V>): V;
        replaceAll(arg0: Internal.BiFunction_<number, V, V>): void;
        andThen<V_>(arg0: Internal.Function_<V, V_>): Internal.Function<number, V_>;
        put(arg0: number, arg1: V): V;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        remove(arg0: number): V;
        remove(arg0: any): V;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        compute(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        int2ObjectEntrySet(): Internal.Int2ObjectMap$FastEntrySet<V>;
        int2ObjectEntrySet(): Internal.ObjectSet<any>;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        trim(): boolean;
        trim(arg0: number): boolean;
        compose<V_>(arg0: Internal.Function_<V_, number>): Internal.Function<V_, V>;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        get(arg0: number): V;
        get(arg0: any): V;
        clone(): Internal.Int2ObjectOpenHashMap<V>;
        clone(): any;
        keySet(): Internal.Set<any>;
        putIfAbsent(arg0: number, arg1: V): V;
        putIfAbsent(arg0: number, arg1: V): V;
        putIfAbsent(arg0: any, arg1: any): any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<number, V>);
        constructor(arg0: Internal.Int2ObjectMap<V>, arg1: number);
        constructor(arg0: Internal.Int2ObjectMap<V>);
        constructor(arg0: number[], arg1: V[], arg2: number);
        constructor(arg0: number[], arg1: V[]);
        constructor(arg0: number, arg1: number);
        constructor(arg0: number);
        constructor();
        constructor(arg0: Internal.Map<number, V>, arg1: number);
    }
    type Int2ObjectOpenHashMap_<V> = Int2ObjectOpenHashMap<V>;
    class FancyFoliagePlacer extends Internal.BlobFoliagePlacer {
        static readonly field_236747_c_: Internal.Codec<Internal.FancyFoliagePlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FeatureSpread, arg1: Internal.FeatureSpread, arg2: number);
    }
    type FancyFoliagePlacer_ = FancyFoliagePlacer;
    class SetVisibility extends Document.Object {
        func_178621_a(arg0: Internal.Direction_, arg1: Internal.Direction_): boolean;
        func_178620_a(arg0: Internal.Set<Internal.Direction>): void;
        func_178619_a(arg0: Internal.Direction_, arg1: Internal.Direction_, arg2: boolean): void;
        func_178618_a(arg0: boolean): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SetVisibility_ = SetVisibility;
    class DimensionSettings extends Document.Object {
        func_236108_a_(): Internal.DimensionStructuresSettings;
        func_242744_a(arg0: Internal.RegistryKey<Internal.DimensionSettings>): boolean;
        func_236119_g_(): number;
        static func_242742_a(arg0: Internal.DimensionStructuresSettings, arg1: Internal.BlockState, arg2: Internal.BlockState, arg3: ResourceLocation_, arg4: boolean, arg5: boolean): Internal.DimensionSettings;
        func_236116_d_(): Internal.BlockState;
        static func_242743_a(arg0: Internal.DimensionStructuresSettings, arg1: boolean, arg2: ResourceLocation_): Internal.DimensionSettings;
        func_236118_f_(): number;
        func_236120_h_(): boolean;
        func_236117_e_(): number;
        static func_242741_a(arg0: Internal.DimensionStructuresSettings, arg1: Internal.BlockState, arg2: Internal.BlockState, arg3: ResourceLocation_): Internal.DimensionSettings;
        static func_242746_i(): Internal.DimensionSettings;
        func_236113_b_(): Internal.NoiseSettings;
        func_236115_c_(): Internal.BlockState;
        static readonly field_242735_d: Internal.RegistryKey<Internal.DimensionSettings>;
        static readonly field_236097_a_: Internal.Codec<Internal.DimensionSettings>;
        static readonly field_236098_b_: Internal.Codec<java_.util.function_.Supplier<Internal.DimensionSettings>>;
        static readonly field_242734_c: Internal.RegistryKey<Internal.DimensionSettings>;
        static readonly field_242737_f: Internal.RegistryKey<Internal.DimensionSettings>;
        static readonly field_242736_e: Internal.RegistryKey<Internal.DimensionSettings>;
        static readonly field_242739_h: Internal.RegistryKey<Internal.DimensionSettings>;
        static readonly field_242740_q: Internal.DimensionSettings;
        static readonly field_242738_g: Internal.RegistryKey<Internal.DimensionSettings>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DimensionStructuresSettings, arg1: Internal.NoiseSettings, arg2: Internal.BlockState, arg3: Internal.BlockState, arg4: number, arg5: number, arg6: number, arg7: boolean);
    }
    type DimensionSettings_ = DimensionSettings;
    interface BoatEntityAccess {
        getStatusField(): Internal.BoatEntity$Status;
        setLastYd(arg0: number): void;
        getLastYd(): number;
    }
    type BoatEntityAccess_ = BoatEntityAccess;
    interface BlockPropertiesAccessor {
        setLootTableSupplier(supplier: java_.util.function_.Supplier_<ResourceLocation_>): void;
        getLootTableSupplier(): java_.util.function_.Supplier<ResourceLocation>;
    }
    type BlockPropertiesAccessor_ = BlockPropertiesAccessor;
    class ChemicalInfusingRecipeJS extends Internal.MekanismRecipeJS {
        rightInputGas(arg0: any): Internal.ChemicalInfusingRecipeJS;
        outputGas(arg0: any): Internal.ChemicalInfusingRecipeJS;
        leftInputGas(arg0: any): Internal.ChemicalInfusingRecipeJS;
        gasOutput: Internal.GasStack;
        rightGasInput: Internal.GasStackIngredient;
        leftGasInput: Internal.GasStackIngredient;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ChemicalInfusingRecipeJS_ = ChemicalInfusingRecipeJS;
    class Matcher extends Document.Object implements Internal.MatchResult {
        hasTransparentBounds(): boolean;
        requireEnd(): boolean;
        useTransparentBounds(arg0: boolean): Internal.Matcher;
        pattern(): Internal.Pattern;
        namedGroups(): Internal.Map<string, number>;
        replaceFirst(arg0: string): string;
        replaceFirst(arg0: Internal.Function_<Internal.MatchResult_, string>): string;
        regionStart(): number;
        replaceAll(arg0: string): string;
        replaceAll(arg0: Internal.Function_<Internal.MatchResult_, string>): string;
        lookingAt(): boolean;
        toMatchResult(): Internal.MatchResult;
        static quoteReplacement(arg0: string): string;
        hasMatch(): boolean;
        find(): boolean;
        find(arg0: number): boolean;
        end(arg0: number): number;
        end(): number;
        end(arg0: string): number;
        results(): Internal.Stream<Internal.MatchResult>;
        group(arg0: number): string;
        group(): string;
        group(arg0: string): string;
        start(arg0: number): number;
        start(arg0: string): number;
        start(): number;
        regionEnd(): number;
        matches(): boolean;
        hasAnchoringBounds(): boolean;
        appendReplacement(arg0: Internal.StringBuffer, arg1: string): Internal.Matcher;
        appendReplacement(arg0: Internal.StringBuilder, arg1: string): Internal.Matcher;
        appendTail(arg0: Internal.StringBuffer): Internal.StringBuffer;
        appendTail(arg0: Internal.StringBuilder): Internal.StringBuilder;
        groupCount(): number;
        reset(arg0: Internal.CharSequence): Internal.Matcher;
        reset(): Internal.Matcher;
        region(arg0: number, arg1: number): Internal.Matcher;
        useAnchoringBounds(arg0: boolean): Internal.Matcher;
        hitEnd(): boolean;
        usePattern(arg0: Internal.Pattern): Internal.Matcher;
    }
    type Matcher_ = Matcher;
    class PerkRemovalResult extends Internal.Enum<Internal.PerkRemovalResult> {
        removesAllocationType(): boolean;
        static valueOf(arg0: string): Internal.PerkRemovalResult;
        removesPerk(): boolean;
        static values(): Internal.PerkRemovalResult[];
        isFailure(): boolean;
        static readonly REMOVE_ALLOCATION: Internal.PerkRemovalResult;
        static readonly REMOVE_ALLOCATION_TYPE: Internal.PerkRemovalResult;
        static readonly REMOVE_PERK: Internal.PerkRemovalResult;
        static readonly FAILURE: Internal.PerkRemovalResult;
        get failure(): boolean;
    }
    type PerkRemovalResult_ = "failure" | "remove_allocation" | "remove_allocation_type" | "remove_perk" | PerkRemovalResult;
    class LongSummaryStatistics extends Document.Object implements Internal.LongConsumer, Internal.IntConsumer {
        getMin(): number;
        getMax(): number;
        getAverage(): number;
        getSum(): number;
        getCount(): number;
        andThen(arg0: Internal.LongConsumer_): Internal.LongConsumer;
        andThen(arg0: Internal.IntConsumer_): Internal.IntConsumer;
        combine(arg0: Internal.LongSummaryStatistics): void;
        accept(arg0: number): void;
        accept(arg0: number): void;
        get average(): number;
        get min(): number;
        get max(): number;
        get count(): number;
        get sum(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type LongSummaryStatistics_ = LongSummaryStatistics;
    abstract class ModuleReference extends Document.Object {
        location(): Internal.Optional<Internal.URI>;
        descriptor(): Internal.ModuleDescriptor;
        open(): Internal.ModuleReader;
    }
    type ModuleReference_ = ModuleReference;
    interface INBT {
        func_74737_b(): Internal.INBT;
        func_150285_a_(): string;
        func_197637_c(): Internal.ITextComponent;
        func_74732_a(): number;
        func_74734_a(arg0: Internal.DataOutput): void;
        func_225647_b_(): Internal.INBTType<any>;
        toString(): string;
        func_199850_a(arg0: string, arg1: number): Internal.ITextComponent;
    }
    type INBT_ = INBT;
    interface IExtensibleEnum {
        init(): void;
    }
    type IExtensibleEnum_ = IExtensibleEnum;
    class ShaderGroup extends Document.Object implements Internal.AutoCloseable {
        func_148018_a(arg0: number): void;
        func_148026_a(arg0: number, arg1: number): void;
        func_177066_a(arg0: string): Internal.Framebuffer;
        func_148023_a(arg0: string, arg1: Internal.Framebuffer, arg2: Internal.Framebuffer): Internal.Shader;
        func_148022_b(): string;
        func_148020_a(arg0: string, arg1: number, arg2: number): void;
        close(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TextureManager, arg1: Internal.IResourceManager, arg2: Internal.Framebuffer, arg3: ResourceLocation);
    }
    type ShaderGroup_ = ShaderGroup;
    class StonecutterContainer extends Internal.Container {
        func_217076_f(): Internal.List<Internal.StonecuttingRecipe>;
        func_217075_g(): number;
        func_217071_a(arg0: Internal.Runnable_): void;
        func_217083_h(): boolean;
        func_217073_e(): number;
        readonly field_217087_f: Internal.IInventory;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IWorldPosCallable);
    }
    type StonecutterContainer_ = StonecutterContainer;
    interface BooleanConsumer {
        accept(arg0: boolean): void;
        (arg0: boolean): void;
    }
    type BooleanConsumer_ = ((arg0: boolean)=>void) | BooleanConsumer;
    /**
    * Represents the base Java Class
    *
    * In JavaScript, `Class<T>`can be considered as `typeof T`
    */
    class Class <T> extends Document.Object implements Internal.Serializable, Internal.GenericDeclaration, Internal.Type, Internal.AnnotatedElement, Internal.TypeDescriptor$OfField<Internal.Class<any>>, Internal.Constable {
        getModule(): Internal.Module;
        isSealed(): boolean;
        getResource(arg0: string): Internal.URL;
        getName(): string;
        isLocalClass(): boolean;
        isSynthetic(): boolean;
        getCanonicalName(): string;
        getMethod(arg0: string, ...arg1: Internal.Class<any>[]): Internal.Method;
        describeConstable(): Internal.Optional<Internal.ClassDesc>;
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        getDeclaredFields(): Internal.Field[];
        isMemberClass(): boolean;
        cast(arg0: any): T;
        isInstance(arg0: any): boolean;
        getEnclosingMethod(): Internal.Method;
        getPermittedSubclasses(): Internal.Class<any>[];
        getSigners(): any[];
        getTypeParameters(): any[];
        isInterface(): boolean;
        getPackage(): Internal.Package;
        arrayType(): Internal.Class<any>;
        arrayType(): Internal.TypeDescriptor$OfField<any>;
        getNestHost(): Internal.Class<any>;
        asSubclass<U_>(arg0: Internal.Class<U_>): Internal.Class<U_>;
        getField(arg0: string): Internal.Field;
        descriptorString(): string;
        getInterfaces(): Internal.Class<any>[];
        getAnnotatedInterfaces(): Internal.AnnotatedType[];
        newInstance(): T;
        isUnnamedClass(): boolean;
        getFields(): Internal.Field[];
        getAnnotation<A_>(arg0: Internal.Class<A_>): A_;
        getRecordComponents(): any[];
        getComponentType(): Internal.Class<any>;
        getDeclaredAnnotation<A_>(arg0: Internal.Class<A_>): A_;
        getSimpleName(): string;
        isArray(): boolean;
        getPackageName(): string;
        getMethods(): Internal.Method[];
        isPrimitive(): boolean;
        isAnnotation(): boolean;
        getProtectionDomain(): Internal.ProtectionDomain;
        getDeclaredConstructors(): Internal.Constructor<any>[];
        isAnnotationPresent(arg0: Internal.Class<Internal.Annotation>): boolean;
        desiredAssertionStatus(): boolean;
        getNestMembers(): Internal.Class<any>[];
        getGenericInterfaces(): Internal.Type[];
        getClassLoader(): Internal.ClassLoader;
        isAssignableFrom(arg0: Internal.Class<any>): boolean;
        getDeclaredAnnotations(): Internal.Annotation[];
        getDeclaredMethods(): Internal.Method[];
        getDeclaringClass(): Internal.Class<any>;
        getAnnotationsByType<A_>(arg0: Internal.Class<A_>): A_[];
        getConstructors(): Internal.Constructor<any>[];
        getAnnotatedSuperclass(): Internal.AnnotatedType;
        toGenericString(): string;
        getModifiers(): number;
        getTypeName(): string;
        getEnclosingConstructor(): Internal.Constructor<any>;
        isNestmateOf(arg0: Internal.Class<any>): boolean;
        getClasses(): Internal.Class<any>[];
        getSuperclass(): Internal.Class<T>;
        getDeclaredField(arg0: string): Internal.Field;
        componentType(): Internal.TypeDescriptor$OfField<any>;
        componentType(): Internal.Class<any>;
        static forName(arg0: string, arg1: boolean, arg2: Internal.ClassLoader): Internal.Class<any>;
        static forName(arg0: Internal.Module, arg1: string): Internal.Class<any>;
        static forName(arg0: string): Internal.Class<any>;
        getResourceAsStream(arg0: string): Internal.InputStream;
        isRecord(): boolean;
        getDeclaredMethod(arg0: string, ...arg1: Internal.Class<any>[]): Internal.Method;
        isEnum(): boolean;
        getDeclaredConstructor(...arg0: Internal.Class<any>[]): Internal.Constructor<T>;
        getAnnotations(): Internal.Annotation[];
        getConstructor(...arg0: Internal.Class<any>[]): Internal.Constructor<T>;
        getEnumConstants(): T[];
        isHidden(): boolean;
        getDeclaredAnnotationsByType<A_>(arg0: Internal.Class<A_>): A_[];
        getDeclaredClasses(): Internal.Class<any>[];
        isAnonymousClass(): boolean;
        getEnclosingClass(): Internal.Class<any>;
        getGenericSuperclass(): Internal.Type;
        get enclosingConstructor(): Internal.Constructor<any>;
        get annotations(): Internal.Annotation[];
        get memberClass(): boolean;
        get declaredConstructors(): Internal.Constructor<any>[];
        get declaredFields(): Internal.Field[];
        get superclass(): Internal.Class<T>;
        get record(): boolean;
        get canonicalName(): string;
        get package(): Internal.Package;
        get protectionDomain(): Internal.ProtectionDomain;
        get sealed(): boolean;
        get module(): Internal.Module;
        get enclosingMethod(): Internal.Method;
        get enum(): boolean;
        get declaringClass(): Internal.Class<any>;
        get synthetic(): boolean;
        get constructors(): Internal.Constructor<any>[];
        get declaredClasses(): Internal.Class<any>[];
        get unnamedClass(): boolean;
        get name(): string;
        get fields(): Internal.Field[];
        get classLoader(): Internal.ClassLoader;
        get primitive(): boolean;
        get hidden(): boolean;
        get methods(): Internal.Method[];
        get classes(): Internal.Class<any>[];
        get typeName(): string;
        get declaredMethods(): Internal.Method[];
        get interface(): boolean;
        get genericInterfaces(): Internal.Type[];
        get modifiers(): number;
        get typeParameters(): any[];
        get annotatedSuperclass(): Internal.AnnotatedType;
        get permittedSubclasses(): Internal.Class<any>[];
        get array(): boolean;
        get enumConstants(): T[];
        get annotatedInterfaces(): Internal.AnnotatedType[];
        get packageName(): string;
        get annotation(): boolean;
        get declaredAnnotations(): Internal.Annotation[];
        get interfaces(): Internal.Class<any>[];
        get genericSuperclass(): Internal.Type;
        get localClass(): boolean;
        get enclosingClass(): Internal.Class<any>;
        get nestMembers(): Internal.Class<any>[];
        get signers(): any[];
        get recordComponents(): any[];
        get simpleName(): string;
        get nestHost(): Internal.Class<any>;
        get anonymousClass(): boolean;
    }
    type Class_<T> = Class<T>;
    interface IForgeFluidState {
        getExplosionResistance(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Explosion): number;
        getFluidState(): Internal.FluidState;
        isEntityInside(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Entity, arg3: number, arg4: Internal.Tag<Internal.Fluid>, arg5: boolean): boolean;
    }
    type IForgeFluidState_ = IForgeFluidState;
    class ItemRightClickEventJS extends Internal.PlayerEventJS {
        getHand(): Hand;
        getItem(): Internal.ItemStackJS;
        get item(): Internal.ItemStackJS;
        get hand(): Hand;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.PlayerEntity, hand: Hand);
    }
    type ItemRightClickEventJS_ = ItemRightClickEventJS;
    class CustomMachineJSUpgradeBuilder$UpgradeEvent extends Internal.EventJS {
        create(arg0: Internal.Item_, arg1: number): Internal.CustomMachineJSUpgradeBuilder;
        getBuilders(): Internal.List<Internal.CustomMachineJSUpgradeBuilder>;
        get builders(): Internal.List<Internal.CustomMachineJSUpgradeBuilder>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CustomMachineJSUpgradeBuilder$UpgradeEvent_ = CustomMachineJSUpgradeBuilder$UpgradeEvent;
    class EntityViewRenderEvent$FogDensity extends Internal.EntityViewRenderEvent$FogEvent {
        getDensity(): number;
        setDensity(arg0: number): void;
        get density(): number;
        set density(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.FogRenderer$FogType, arg1: Internal.ActiveRenderInfo, arg2: number, arg3: number);
    }
    type EntityViewRenderEvent$FogDensity_ = EntityViewRenderEvent$FogDensity;
    class MethodType extends Document.Object implements Internal.Constable, Internal.TypeDescriptor$OfMethod<Internal.Class<any>, Internal.MethodType>, Internal.Serializable {
        toMethodDescriptorString(): string;
        parameterType(arg0: number): Internal.Class<any>;
        parameterType(arg0: number): Internal.TypeDescriptor$OfField<any>;
        erase(): Internal.MethodType;
        dropParameterTypes(arg0: number, arg1: number): Internal.TypeDescriptor$OfMethod<any, any>;
        dropParameterTypes(arg0: number, arg1: number): Internal.MethodType;
        parameterCount(): number;
        changeReturnType(arg0: Internal.TypeDescriptor$OfField<any>): Internal.TypeDescriptor$OfMethod<any, any>;
        changeReturnType(arg0: Internal.Class<any>): Internal.MethodType;
        static fromMethodDescriptorString(arg0: string, arg1: Internal.ClassLoader): Internal.MethodType;
        descriptorString(): string;
        insertParameterTypes(arg0: number, arg1: Internal.List<Internal.Class<any>>): Internal.MethodType;
        insertParameterTypes(arg0: number, arg1: Internal.TypeDescriptor$OfField[]): Internal.TypeDescriptor$OfMethod<any, any>;
        insertParameterTypes(arg0: number, ...arg1: Internal.Class<any>[]): Internal.MethodType;
        lastParameterType(): Internal.Class<any>;
        describeConstable(): Internal.Optional<Internal.MethodTypeDesc>;
        generic(): Internal.MethodType;
        changeParameterType(arg0: number, arg1: Internal.Class<any>): Internal.MethodType;
        changeParameterType(arg0: number, arg1: Internal.TypeDescriptor$OfField<any>): Internal.TypeDescriptor$OfMethod<any, any>;
        unwrap(): Internal.MethodType;
        hasWrappers(): boolean;
        hasPrimitives(): boolean;
        static methodType(arg0: Internal.Class<any>, arg1: Internal.Class<any>, ...arg2: Internal.Class<any>[]): Internal.MethodType;
        static methodType(arg0: Internal.Class<any>, arg1: Internal.Class<any>): Internal.MethodType;
        static methodType(arg0: Internal.Class<any>): Internal.MethodType;
        static methodType(arg0: Internal.Class<any>, arg1: Internal.Class<any>[]): Internal.MethodType;
        static methodType(arg0: Internal.Class<any>, arg1: Internal.List<Internal.Class<any>>): Internal.MethodType;
        static methodType(arg0: Internal.Class<any>, arg1: Internal.MethodType): Internal.MethodType;
        parameterArray(): Internal.Class<any>[];
        parameterArray(): Internal.TypeDescriptor$OfField[];
        appendParameterTypes(arg0: Internal.List<Internal.Class<any>>): Internal.MethodType;
        appendParameterTypes(...arg0: Internal.Class<any>[]): Internal.MethodType;
        parameterList(): Internal.List<Internal.Class<any>>;
        static genericMethodType(arg0: number): Internal.MethodType;
        static genericMethodType(arg0: number, arg1: boolean): Internal.MethodType;
        wrap(): Internal.MethodType;
        returnType(): Internal.Class<any>;
        returnType(): Internal.TypeDescriptor$OfField<any>;
    }
    type MethodType_ = MethodType;
    class GuiScreenEvent$KeyboardCharTypedEvent$Post extends Internal.GuiScreenEvent$KeyboardCharTypedEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: string, arg2: number);
    }
    type GuiScreenEvent$KeyboardCharTypedEvent$Post_ = GuiScreenEvent$KeyboardCharTypedEvent$Post;
    class WorldBorder extends Document.Object {
        func_177743_a(arg0: Internal.AxisAlignedBB): boolean;
        func_222521_a(): Internal.VoxelShape;
        func_177745_a(arg0: Internal.Entity): number;
        func_177746_a(arg0: BlockPos): boolean;
        func_177744_c(arg0: number): void;
        func_230316_a_(): number;
        func_177741_h(): number;
        func_177747_c(arg0: number): void;
        func_212673_r(): void;
        func_177742_m(): number;
        func_177740_p(): number;
        func_177739_c(arg0: number, arg1: number): void;
        func_177732_i(): number;
        func_177749_o(): number;
        func_177736_c(): number;
        func_177748_q(): number;
        func_177738_a(arg0: number, arg1: number, arg2: number): void;
        func_177733_e(): number;
        func_177737_a(arg0: Internal.IBorderListener): void;
        func_177734_a(): Internal.BorderStatus;
        func_177750_a(arg0: number): void;
        func_177730_a(arg0: Internal.ChunkPos): boolean;
        func_177751_j(): number;
        func_177727_n(): number;
        removeListener(arg0: Internal.IBorderListener): void;
        func_235927_t_(): Internal.WorldBorder$Serializer;
        func_177722_l(): number;
        func_177728_d(): number;
        func_235926_a_(arg0: Internal.WorldBorder$Serializer): void;
        func_177729_b(arg0: number, arg1: number): number;
        func_230317_b_(): number;
        func_177726_b(): number;
        func_177725_a(arg0: number): void;
        func_177724_b(arg0: number): void;
        func_177723_b(arg0: number): void;
        static readonly field_235925_b_: Internal.WorldBorder$Serializer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type WorldBorder_ = WorldBorder;
    class ItemOverrideList extends Document.Object implements Internal.AccessorItemOverrideList {
        func_239290_a_(arg0: Internal.IBakedModel, arg1: Internal.ItemStack, arg2: Internal.ClientWorld, arg3: Internal.LivingEntity): Internal.IBakedModel;
        getOverrideBakedModels(): Internal.List<any>;
        getOverrides(): Internal.ImmutableList<Internal.ItemOverride>;
        static readonly field_188022_a: Internal.ItemOverrideList;
        get overrides(): Internal.ImmutableList<Internal.ItemOverride>;
        get overrideBakedModels(): Internal.List<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ModelBakery, arg1: Internal.IUnbakedModel, arg2: Internal.Function<ResourceLocation, Internal.IUnbakedModel>, arg3: Internal.Function<Internal.RenderMaterial, Internal.TextureAtlasSprite>, arg4: Internal.List<Internal.ItemOverride>);
        constructor(arg0: Internal.ModelBakery, arg1: Internal.BlockModel, arg2: Internal.Function<ResourceLocation, Internal.IUnbakedModel>, arg3: Internal.List<Internal.ItemOverride>);
    }
    type ItemOverrideList_ = ItemOverrideList;
    class BlockStateProviderType <P> extends Internal.ForgeRegistryEntry<Internal.BlockStateProviderType<any>> {
        setRegistryName(arg0: ResourceLocation_): any;
        func_236799_a_(): Internal.Codec<P>;
        static readonly field_227394_a_: Internal.BlockStateProviderType<Internal.SimpleBlockStateProvider>;
        static readonly field_236797_e_: Internal.BlockStateProviderType<Internal.AxisRotatingBlockStateProvider>;
        static readonly field_227397_d_: Internal.BlockStateProviderType<Internal.ForestFlowerBlockStateProvider>;
        static readonly field_227396_c_: Internal.BlockStateProviderType<Internal.PlainFlowerBlockStateProvider>;
        static readonly field_227395_b_: Internal.BlockStateProviderType<Internal.WeightedBlockStateProvider>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<P>);
    }
    type BlockStateProviderType_<P> = Registry.minecraft.worldgen$block_state_provider_type | BlockStateProviderType<P>;
    abstract class SimpleChannelInboundHandler <I> extends Internal.ChannelInboundHandlerAdapter {
        acceptInboundMessage(arg0: any): boolean;
    }
    type SimpleChannelInboundHandler_<I> = SimpleChannelInboundHandler<I>;
    class PointOfInterestType extends Internal.ForgeRegistryEntry<Internal.PointOfInterestType> {
        static func_221047_b(arg0: Internal.BlockState): Internal.Optional<Internal.PointOfInterestType>;
        getBlockStates(): Internal.ImmutableSet<Internal.BlockState>;
        static func_221042_a(arg0: Internal.Block_): Internal.Set<Internal.BlockState>;
        setRegistryName(arg0: ResourceLocation_): any;
        static func_221052_a(arg0: Internal.PointOfInterestType_): Internal.PointOfInterestType;
        func_221045_c(): Internal.Predicate<Internal.PointOfInterestType>;
        func_221044_b(): number;
        func_225478_d(): number;
        static readonly field_221059_g: Internal.PointOfInterestType;
        static readonly field_221070_r: Internal.PointOfInterestType;
        static readonly field_221065_m: Internal.PointOfInterestType;
        static readonly field_221071_s: Internal.Predicate<Internal.PointOfInterestType>;
        static readonly field_221066_n: Internal.PointOfInterestType;
        static readonly field_221067_o: Internal.PointOfInterestType;
        static readonly field_221068_p: Internal.PointOfInterestType;
        static readonly field_234166_w_: Internal.PointOfInterestType;
        static readonly field_221069_q: Internal.PointOfInterestType;
        field_221075_w: Internal.Set<Internal.BlockState>;
        static readonly field_226358_u_: Internal.PointOfInterestType;
        static readonly field_221053_a: Internal.Predicate<Internal.PointOfInterestType>;
        static readonly field_226357_t_: Internal.PointOfInterestType;
        static readonly field_221054_b: Internal.PointOfInterestType;
        static readonly field_221060_h: Internal.PointOfInterestType;
        static readonly field_221055_c: Internal.PointOfInterestType;
        static readonly field_221061_i: Internal.PointOfInterestType;
        static readonly field_221056_d: Internal.PointOfInterestType;
        static readonly field_221062_j: Internal.PointOfInterestType;
        static field_226356_s_: Internal.PointOfInterestType;
        static readonly field_221057_e: Internal.PointOfInterestType;
        static readonly field_221063_k: Internal.PointOfInterestType;
        static readonly field_221058_f: Internal.PointOfInterestType;
        static readonly field_221064_l: Internal.PointOfInterestType;
        get blockStates(): Internal.ImmutableSet<Internal.BlockState>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Set<Internal.BlockState>, arg2: number, arg3: number);
        constructor(arg0: string, arg1: Internal.Set<Internal.BlockState>, arg2: number, arg3: Internal.Predicate<Internal.PointOfInterestType>, arg4: number);
    }
    type PointOfInterestType_ = Registry.minecraft.point_of_interest_type | PointOfInterestType;
    class ChestEventJS extends Internal.InventoryEventJS {
        getWrappedInventory(): Internal.IInventory;
        getBlock(): Internal.BlockContainerJS;
        getInventory(): Internal.InventoryJS;
        get wrappedInventory(): Internal.IInventory;
        get block(): Internal.BlockContainerJS;
        get inventory(): Internal.InventoryJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.PlayerEntity, menu: Internal.Container);
    }
    type ChestEventJS_ = ChestEventJS;
    class LootPredicateManager extends Internal.JsonReloadListener {
        func_227513_a_(): Internal.Set<ResourceLocation>;
        func_225594_i_(): string;
        func_227517_a_(arg0: ResourceLocation_): Internal.ILootCondition;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type LootPredicateManager_ = LootPredicateManager;
    class Capability <T> extends Document.Object {
        getDefaultInstance(): T;
        orEmpty<R_>(arg0: Internal.Capability<R_>, arg1: Internal.LazyOptional<T>): Internal.LazyOptional<R_>;
        writeNBT(arg0: T, arg1: Internal.Direction_): Internal.INBT;
        getName(): string;
        getStorage(): Internal.Capability$IStorage<T>;
        readNBT(arg0: T, arg1: Internal.Direction_, arg2: Internal.INBT): void;
        get defaultInstance(): T;
        get name(): string;
        get storage(): Internal.Capability$IStorage<T>;
    }
    type Capability_<T> = Capability<T>;
    abstract class AbstractSimiScreen extends Internal.Screen {
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_212927_b(arg0: number, arg1: number): void;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_231049_c__(arg0: boolean): boolean;
        getWidgets(): Internal.List<net.minecraft.client.gui.widget.Widget>;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        get widgets(): Internal.List<net.minecraft.client.gui.widget.Widget>;
    }
    type AbstractSimiScreen_ = AbstractSimiScreen;
    class MantleEffect$Config extends Internal.ConfigEntry {
        andThen(arg0: Internal.Consumer_<Internal.ForgeConfigSpec$Builder_>): Internal.Consumer<Internal.ForgeConfigSpec$Builder>;
        enabled: Internal.ForgeConfigSpec$BooleanValue;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type MantleEffect$Config_ = MantleEffect$Config;
    class QuestObjectType extends Internal.Enum<Internal.QuestObjectType> implements Internal.Predicate<Internal.QuestObjectBase> {
        or(arg0: Internal.Predicate_<Internal.QuestObjectBase_>): Internal.Predicate<Internal.QuestObjectBase>;
        test(arg0: any): boolean;
        test(arg0: Internal.QuestObjectBase): boolean;
        and(arg0: Internal.Predicate_<Internal.QuestObjectBase_>): Internal.Predicate<Internal.QuestObjectBase>;
        negate(): Internal.Predicate<Internal.QuestObjectBase>;
        static valueOf(arg0: string): Internal.QuestObjectType;
        static values(): Internal.QuestObjectType[];
        getColor(): Internal.TextFormatting;
        static readonly TASK: Internal.QuestObjectType;
        static readonly ALL_PROGRESSING_OR_NULL: Internal.Predicate<Internal.QuestObjectBase>;
        static readonly NULL: Internal.QuestObjectType;
        readonly translationKey: string;
        static readonly NAME_MAP: Internal.NameMap<Internal.QuestObjectType>;
        static readonly REWARD: Internal.QuestObjectType;
        static readonly ALL_PROGRESSING: Internal.Predicate<Internal.QuestObjectBase>;
        static readonly CHAPTER: Internal.QuestObjectType;
        static readonly CHAPTER_GROUP: Internal.QuestObjectType;
        readonly id: string;
        static readonly FILE: Internal.QuestObjectType;
        static readonly REWARD_TABLE: Internal.QuestObjectType;
        static readonly QUEST: Internal.QuestObjectType;
        get color(): Internal.TextFormatting;
    }
    type QuestObjectType_ = "null" | "file" | "chapter" | "quest" | "task" | "reward" | "reward_table" | "chapter_group" | QuestObjectType;
    interface UnmodifiableConfig$Entry {
        getShortOrElse(arg0: number): number;
        getKey(): string;
        getByte(): number;
        getShort(): number;
        getOptionalInt(): Internal.OptionalInt;
        getRawValue<T>(): T;
        getCharOrElse(arg0: string): string;
        getLongOrElse(arg0: number): number;
        getByteOrElse(arg0: number): number;
        getLong(): number;
        getValue<T>(): T;
        getInt(): number;
        getChar(): string;
        getOptional<T>(): Internal.Optional<T>;
        isNull(): boolean;
        getOrElse<T>(arg0: T): T;
        getIntOrElse(arg0: number): number;
        getOptionalLong(): Internal.OptionalLong;
    }
    type UnmodifiableConfig$Entry_ = UnmodifiableConfig$Entry;
    interface ISoundEventAccessor <T> {
        func_148720_g(): T;
        func_217867_a(arg0: Internal.SoundEngine): void;
        func_148721_a(): number;
    }
    type ISoundEventAccessor_<T> = ISoundEventAccessor<T>;
    abstract class AbstractMultimap <K, V> extends Document.Object implements Internal.Multimap<K, V> {
        containsEntry(arg0: any, arg1: any): boolean;
        containsKey(arg0: any): boolean;
        forEach(arg0: Internal.BiConsumer_<K, V>): void;
        asMap(): Internal.Map<K, Internal.Collection<V>>;
        keys(): Internal.Multiset<K>;
        values(): Internal.Collection<V>;
        clear(): void;
        isEmpty(): boolean;
        replaceValues(arg0: K, arg1: Internal.Iterable_<V>): Internal.Collection<V>;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): boolean;
        remove(arg0: any, arg1: any): boolean;
        removeAll(arg0: any): Internal.Collection<V>;
        entries(): Internal.Collection<Internal.Map$Entry<K, V>>;
        size(): number;
        get(arg0: K): Internal.Collection<V>;
        putAll(arg0: K, arg1: Internal.Iterable_<V>): boolean;
        putAll(arg0: Internal.Multimap<K, V>): boolean;
        keySet(): Internal.Set<K>;
        get empty(): boolean;
    }
    type AbstractMultimap_<K, V> = AbstractMultimap<K, V>;
    interface IRideable {
        func_230265_N__(): number;
        func_233622_a_(arg0: Internal.MobEntity, arg1: Internal.BoostHelper, arg2: Vec3): boolean;
        func_184762_da(): boolean;
        func_230267_a__(arg0: Vec3): void;
    }
    type IRideable_ = IRideable;
    interface Functor <F, Mu> extends Internal.Kind1<F, Mu> {
        map<T_, R_>(arg0: Internal.Function_<T_, R_>, arg1: Internal.App<Mu, T_>): Internal.App<Mu, R_>;
        (arg0: Internal.Function<T_, R_>, arg1: Internal.App<Mu, T_>): Internal.App<Mu, R_>;
    }
    type Functor_<F, Mu> = ((arg0: Internal.Function<T_, R_>, arg1: Internal.App<Mu, T_>)=>Internal.App<Mu, R_>) | Functor<F, Mu>;
    class PressurizedReactionRecipeJS extends Internal.MekanismRecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PressurizedReactionRecipeJS_ = PressurizedReactionRecipeJS;
    interface ITickableSound extends Internal.ISound {
        func_73660_a(): void;
        func_147667_k(): boolean;
    }
    type ITickableSound_ = ITickableSound;
    class ConfiguredPlacement <DC> extends Document.Object implements Internal.IDecoratable<Internal.ConfiguredPlacement<any>> {
        func_242877_b(): DC;
        func_242733_d(arg0: number): Internal.ConfiguredPlacement<any>;
        func_242876_a(arg0: Internal.WorldDecoratingHelper, arg1: Internal.Random, arg2: BlockPos): Internal.Stream<BlockPos>;
        func_242732_c(arg0: number): Internal.ConfiguredPlacement<any>;
        func_242731_b(arg0: number): Internal.ConfiguredPlacement<any>;
        func_227228_a_(arg0: Internal.ConfiguredPlacement<any>): any;
        func_227228_a_(arg0: Internal.ConfiguredPlacement<any>): Internal.ConfiguredPlacement<any>;
        func_242730_a(arg0: Internal.FeatureSpread): Internal.ConfiguredPlacement<any>;
        func_242729_a(arg0: number): Internal.ConfiguredPlacement<any>;
        func_242728_a(): Internal.ConfiguredPlacement<any>;
        static readonly field_236952_a_: Internal.Codec<Internal.ConfiguredPlacement<any>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Placement<DC>, arg1: DC);
    }
    type ConfiguredPlacement_<DC> = ConfiguredPlacement<DC>;
    class ItemModificationEventJS extends Internal.EventJS {
        modify(in_: Internal.IngredientJS_, c: Internal.Consumer_<Internal.ItemModificationProperties_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ItemModificationEventJS_ = ItemModificationEventJS;
    interface SuggestionProvider <S> {
        getSuggestions(arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        (arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
    }
    type SuggestionProvider_<S> = ((arg0: Internal.CommandContext<S>, arg1: Internal.SuggestionsBuilder)=>Internal.CompletableFuture<Internal.Suggestions>) | SuggestionProvider<S>;
    class ArsNouveauEnchantmentRecipeJS extends Internal.RecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ArsNouveauEnchantmentRecipeJS_ = ArsNouveauEnchantmentRecipeJS;
    abstract class DynamicRegistries extends Document.Object {
        static func_243608_a(arg0: Internal.DynamicRegistries$Impl, arg1: Internal.WorldSettingsImport<any>): void;
        static func_239770_b_(): Internal.DynamicRegistries$Impl;
        func_230521_a_<E_>(arg0: Internal.RegistryKey<Internal.Registry<E_>>): Internal.Optional<Internal.MutableRegistry<E_>>;
        func_230520_a_(): Internal.Registry<Internal.DimensionType>;
        func_243612_b<E_>(arg0: Internal.RegistryKey<Internal.Registry<E_>>): Internal.MutableRegistry<E_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type DynamicRegistries_ = DynamicRegistries;
    interface ICapabilityProvider {
        getCapability<T>(arg0: Internal.Capability<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        getCapability<T>(arg0: Internal.Capability<T>): Internal.LazyOptional<T>;
        (arg0: Internal.Capability<T>, arg1: Internal.Direction): Internal.LazyOptional<T>;
    }
    type ICapabilityProvider_ = ((arg0: Internal.Capability<T>, arg1: Internal.Direction)=>Internal.LazyOptional<T>) | ICapabilityProvider;
    interface SheetDataAccessor {
        getHeight(): number;
        getWidth(): number;
    }
    type SheetDataAccessor_ = SheetDataAccessor;
    class GameProfile extends Document.Object {
        getName(): string;
        isLegacy(): boolean;
        getProperties(): Internal.PropertyMap;
        getId(): Internal.UUID;
        isComplete(): boolean;
        get legacy(): boolean;
        get name(): string;
        get id(): Internal.UUID;
        get complete(): boolean;
        get properties(): Internal.PropertyMap;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.UUID, arg1: string);
    }
    type GameProfile_ = GameProfile;
    class PiglinMobsSensor extends Internal.Sensor<Internal.LivingEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PiglinMobsSensor_ = PiglinMobsSensor;
    abstract class AbstractChronology extends Document.Object implements Internal.Chronology {
        localDateTime(arg0: Internal.TemporalAccessor): Internal.ChronoLocalDateTime<Internal.ChronoLocalDate>;
        date(arg0: number, arg1: number, arg2: number): Internal.ChronoLocalDate;
        date(arg0: Internal.TemporalAccessor): Internal.ChronoLocalDate;
        date(arg0: Internal.Era_, arg1: number, arg2: number, arg3: number): Internal.ChronoLocalDate;
        isIsoBased(): boolean;
        period(arg0: number, arg1: number, arg2: number): Internal.ChronoPeriod;
        dateYearDay(arg0: number, arg1: number): Internal.ChronoLocalDate;
        dateYearDay(arg0: Internal.Era_, arg1: number, arg2: number): Internal.ChronoLocalDate;
        getCalendarType(): string;
        resolveDate(arg0: Internal.Map_<Internal.TemporalField_, number>, arg1: Internal.ResolverStyle_): Internal.ChronoLocalDate;
        isLeapYear(arg0: number): boolean;
        range(arg0: Internal.ChronoField_): Internal.ValueRange;
        dateEpochDay(arg0: number): Internal.ChronoLocalDate;
        getId(): string;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.Chronology): number;
        dateNow(): Internal.ChronoLocalDate;
        dateNow(arg0: Internal.ZoneId): Internal.ChronoLocalDate;
        dateNow(arg0: Internal.Clock): Internal.ChronoLocalDate;
        eraOf(arg0: number): Internal.Era;
        eras(): Internal.List<Internal.Era>;
        prolepticYear(arg0: Internal.Era_, arg1: number): number;
        zonedDateTime(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.ChronoZonedDateTime<Internal.ChronoLocalDate>;
        zonedDateTime(arg0: Internal.TemporalAccessor): Internal.ChronoZonedDateTime<Internal.ChronoLocalDate>;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        epochSecond(arg0: Internal.Era_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.ZoneOffset): number;
        epochSecond(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.ZoneOffset): number;
        get calendarType(): string;
        get id(): string;
        get isoBased(): boolean;
    }
    type AbstractChronology_ = AbstractChronology;
    abstract class GolemEntity extends Internal.CreatureEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type GolemEntity_ = GolemEntity;
    interface ITaskExecutor <Msg> extends Internal.AutoCloseable {
        func_213141_a<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Source_>, Msg>): Internal.CompletableFuture<Source_>;
        func_213142_bd(): string;
        func_212871_a_(arg0: Msg): void;
        func_233528_c_<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Internal.Either_<Source_, Internal.Exception_>>, Msg>): Internal.CompletableFuture<Source_>;
        close(): void;
    }
    type ITaskExecutor_<Msg> = ITaskExecutor<Msg>;
    interface IRendersAsItem {
        func_184543_l(): Internal.ItemStack;
        (): Internal.ItemStack;
    }
    type IRendersAsItem_ = (()=>Internal.ItemStack) | IRendersAsItem;
    class LootBuilderPool extends Document.Object implements Internal.FunctionContainer, Internal.ConditionContainer {
        enchantWithLevels(levels: Internal.IRandomRange, treasure: boolean): Internal.FunctionContainer;
        nbt(tag: Internal.CompoundNBT_): Internal.FunctionContainer;
        damage(damage: Internal.IRandomRange): Internal.FunctionContainer;
        survivesExplosion(): Internal.ConditionContainer;
        addEmpty(weight: number): Internal.LootTableEntry;
        addConditionalFunction(func: Internal.Consumer_<Internal.ConditionalFunction_>): Internal.FunctionContainer;
        addCondition(o: Internal.JsonObject): Internal.LootBuilderPool;
        addCondition(arg0: Internal.JsonObject): Internal.ConditionContainer;
        addTag(tag: string, expand: boolean): Internal.LootTableEntry;
        addItem(item: Internal.ItemStack, weight: number, count: Internal.IRandomRange): Internal.LootTableEntry;
        addItem(item: Internal.ItemStack, weight: number): Internal.LootTableEntry;
        addItem(item: Internal.ItemStack): Internal.LootTableEntry;
        lootTable(table: ResourceLocation_, seed: number): Internal.FunctionContainer;
        setBinomialRolls(n: number, p: number): void;
        killedByPlayer(): Internal.ConditionContainer;
        randomChance(chance: number): Internal.ConditionContainer;
        addFunction(o: Internal.JsonObject): Internal.LootBuilderPool;
        addFunction(arg0: Internal.JsonObject): Internal.FunctionContainer;
        count(count: Internal.IRandomRange): Internal.FunctionContainer;
        lootingEnchant(count: Internal.IRandomRange, limit: number): Internal.FunctionContainer;
        setUniformRolls(min: number, max: number): void;
        toJson(): Internal.JsonObject;
        entityScores(entity: Internal.LootContext$EntityTarget_, scores: Internal.Map_<string, any>): Internal.ConditionContainer;
        copyName(source: Internal.CopyName$Source_): Internal.FunctionContainer;
        addEntry(json: Internal.JsonObject): Internal.LootTableEntry;
        name(name: Internal.Text_, entity: Internal.LootContext$EntityTarget_): Internal.FunctionContainer;
        name(name: Internal.Text_): Internal.FunctionContainer;
        randomChanceWithLooting(chance: number, multiplier: number): Internal.ConditionContainer;
        furnaceSmelt(): Internal.FunctionContainer;
        addLootTable(table: ResourceLocation_): Internal.LootTableEntry;
        enchantRandomly(enchantments: ResourceLocation[]): Internal.FunctionContainer;
        entityProperties(entity: Internal.LootContext$EntityTarget_, properties: Internal.JsonObject): Internal.ConditionContainer;
        readonly entries: Internal.JsonArray;
        readonly functions: Internal.JsonArray;
        rolls: Internal.IRandomRange;
        readonly conditions: Internal.JsonArray;
        bonusRolls: Internal.IRandomRange;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type LootBuilderPool_ = LootBuilderPool;
    class BigDecimal extends Internal.Number implements Internal.Comparable<Internal.BigDecimal> {
        longValueExact(): number;
        movePointLeft(arg0: number): Internal.BigDecimal;
        precision(): number;
        byteValueExact(): number;
        toBigInteger(): Internal.BigInteger;
        scale(): number;
        toPlainString(): string;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.BigDecimal): number;
        shortValueExact(): number;
        min(arg0: Internal.BigDecimal): Internal.BigDecimal;
        unscaledValue(): Internal.BigInteger;
        sqrt(arg0: Internal.MathContext): Internal.BigDecimal;
        scaleByPowerOfTen(arg0: number): Internal.BigDecimal;
        pow(arg0: number): Internal.BigDecimal;
        pow(arg0: number, arg1: Internal.MathContext): Internal.BigDecimal;
        divide(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal;
        divide(arg0: Internal.BigDecimal, arg1: number, arg2: number): Internal.BigDecimal;
        divide(arg0: Internal.BigDecimal, arg1: number, arg2: Internal.RoundingMode_): Internal.BigDecimal;
        divide(arg0: Internal.BigDecimal, arg1: number): Internal.BigDecimal;
        divide(arg0: Internal.BigDecimal): Internal.BigDecimal;
        divide(arg0: Internal.BigDecimal, arg1: Internal.RoundingMode_): Internal.BigDecimal;
        multiply(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal;
        multiply(arg0: Internal.BigDecimal): Internal.BigDecimal;
        add(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal;
        add(arg0: Internal.BigDecimal): Internal.BigDecimal;
        signum(): number;
        toBigIntegerExact(): Internal.BigInteger;
        toEngineeringString(): string;
        max(arg0: Internal.BigDecimal): Internal.BigDecimal;
        setScale(arg0: number, arg1: Internal.RoundingMode_): Internal.BigDecimal;
        setScale(arg0: number, arg1: number): Internal.BigDecimal;
        setScale(arg0: number): Internal.BigDecimal;
        static valueOf(arg0: number): Internal.BigDecimal;
        static valueOf(arg0: number, arg1: number): Internal.BigDecimal;
        static valueOf(arg0: number): Internal.BigDecimal;
        subtract(arg0: Internal.BigDecimal): Internal.BigDecimal;
        subtract(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal;
        divideToIntegralValue(arg0: Internal.BigDecimal): Internal.BigDecimal;
        divideToIntegralValue(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal;
        plus(arg0: Internal.MathContext): Internal.BigDecimal;
        plus(): Internal.BigDecimal;
        abs(): Internal.BigDecimal;
        abs(arg0: Internal.MathContext): Internal.BigDecimal;
        round(arg0: Internal.MathContext): Internal.BigDecimal;
        divideAndRemainder(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal[];
        divideAndRemainder(arg0: Internal.BigDecimal): Internal.BigDecimal[];
        negate(): Internal.BigDecimal;
        negate(arg0: Internal.MathContext): Internal.BigDecimal;
        movePointRight(arg0: number): Internal.BigDecimal;
        ulp(): Internal.BigDecimal;
        stripTrailingZeros(): Internal.BigDecimal;
        remainder(arg0: Internal.BigDecimal, arg1: Internal.MathContext): Internal.BigDecimal;
        remainder(arg0: Internal.BigDecimal): Internal.BigDecimal;
        intValueExact(): number;
        static readonly ZERO: Internal.BigDecimal;
        static readonly ROUND_DOWN: 1;
        static readonly ROUND_UNNECESSARY: 7;
        static readonly ROUND_CEILING: 2;
        static readonly ROUND_HALF_DOWN: 5;
        static readonly ROUND_HALF_UP: 4;
        static readonly ONE: Internal.BigDecimal;
        static readonly ROUND_UP: 0;
        static readonly ROUND_FLOOR: 3;
        static readonly ROUND_HALF_EVEN: 6;
        static readonly TEN: Internal.BigDecimal;
        static readonly TWO: Internal.BigDecimal;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BigInteger, arg1: number);
        constructor(arg0: Internal.BigInteger, arg1: Internal.MathContext);
        constructor(arg0: Internal.BigInteger);
        constructor(arg0: number, arg1: Internal.MathContext);
        constructor(arg0: number, arg1: Internal.MathContext);
        constructor(arg0: number);
        constructor(arg0: number, arg1: Internal.MathContext);
        constructor(arg0: number);
        constructor(arg0: Internal.BigInteger, arg1: number, arg2: Internal.MathContext);
        constructor(arg0: string[]);
        constructor(arg0: string[], arg1: number, arg2: number, arg3: Internal.MathContext);
        constructor(arg0: string[], arg1: number, arg2: number);
        constructor(arg0: number);
        constructor(arg0: string, arg1: Internal.MathContext);
        constructor(arg0: string);
        constructor(arg0: string[], arg1: Internal.MathContext);
    }
    type BigDecimal_ = BigDecimal;
    class Shader extends Document.Object implements Internal.AutoCloseable {
        func_195654_a(arg0: Internal.Matrix4f): void;
        func_217624_b(): Internal.ShaderInstance;
        func_148042_a(arg0: number): void;
        func_148041_a(arg0: string, arg1: Internal.IntSupplier_, arg2: number, arg3: number): void;
        close(): void;
        readonly field_148052_a: Internal.Framebuffer;
        readonly field_148050_b: Internal.Framebuffer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IResourceManager, arg1: string, arg2: Internal.Framebuffer, arg3: Internal.Framebuffer);
    }
    type Shader_ = Shader;
    class PlayerRenderer extends Internal.LivingRenderer<Internal.AbstractClientPlayerEntity, any> {
        func_229146_b_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: Internal.AbstractClientPlayerEntity): void;
        func_225627_b_(arg0: Internal.AbstractClientPlayerEntity, arg1: number): Vec3;
        handler$bol000$moveName(arg0: Internal.AbstractClientPlayerEntity, arg1: Internal.ITextComponent_, arg2: Internal.MatrixStack, arg3: Internal.IRenderTypeBuffer_, arg4: number, arg5: Internal.CallbackInfo): void;
        func_110775_a(arg0: Internal.AbstractClientPlayerEntity): ResourceLocation;
        func_225623_a_(arg0: Internal.AbstractClientPlayerEntity, arg1: number, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer_, arg5: number): void;
        func_229144_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: Internal.AbstractClientPlayerEntity): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityRendererManager);
        constructor(arg0: Internal.EntityRendererManager, arg1: boolean);
    }
    type PlayerRenderer_ = PlayerRenderer;
    class CCloseWindowPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type CCloseWindowPacket_ = CCloseWindowPacket;
    interface FileAttributeView extends Internal.AttributeView {
    }
    type FileAttributeView_ = FileAttributeView;
    class RegisterCommandsEvent extends net.minecraftforge.eventbus.api.Event {
        getDispatcher(): Internal.CommandDispatcher<Internal.CommandSource>;
        getEnvironment(): Internal.Commands$EnvironmentType;
        get environment(): Internal.Commands$EnvironmentType;
        get dispatcher(): Internal.CommandDispatcher<Internal.CommandSource>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.CommandDispatcher<Internal.CommandSource>, arg1: Internal.Commands$EnvironmentType);
    }
    type RegisterCommandsEvent_ = RegisterCommandsEvent;
    interface IntSet extends Internal.IntCollection, Internal.Set<number> {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.IntIterator;
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        remove(arg0: number): boolean;
    }
    type IntSet_ = IntSet;
    class Advancement$Builder extends Document.Object implements Internal.IForgeAdvancementBuilder {
        static func_200278_a(): Internal.Advancement$Builder;
        func_200277_c(): Internal.Map<string, Internal.Criterion>;
        func_215092_a(arg0: Internal.ItemStack, arg1: Internal.ITextComponent_, arg2: Internal.ITextComponent_, arg3: ResourceLocation_, arg4: Internal.FrameType_, arg5: boolean, arg6: boolean, arg7: boolean): Internal.Advancement$Builder;
        func_200276_a(arg0: string, arg1: Internal.Criterion): Internal.Advancement$Builder;
        func_192058_a(arg0: Internal.Function_<ResourceLocation_, Internal.Advancement_>): boolean;
        func_200274_a(arg0: Internal.AdvancementRewards): Internal.Advancement$Builder;
        func_200273_b(): Internal.JsonObject;
        func_200275_a(arg0: string, arg1: Internal.ICriterionInstance): Internal.Advancement$Builder;
        func_192056_a(arg0: ResourceLocation_): Internal.Advancement;
        func_200272_a(arg0: ResourceLocation_): Internal.Advancement$Builder;
        func_192057_a(arg0: Internal.PacketBuffer): void;
        save(arg0: Internal.Consumer_<Internal.Advancement_>, arg1: ResourceLocation_, arg2: Internal.ExistingFileHelper): Internal.Advancement;
        func_200270_a(arg0: Internal.IRequirementsStrategy_): Internal.Advancement$Builder;
        func_200271_a(arg0: Internal.AdvancementRewards$Builder): Internal.Advancement$Builder;
        static func_241043_a_(arg0: Internal.JsonObject, arg1: Internal.ConditionArrayParser): Internal.Advancement$Builder;
        func_203903_a(arg0: Internal.DisplayInfo): Internal.Advancement$Builder;
        self(): Internal.Advancement$Builder;
        func_203904_a(arg0: Internal.Consumer_<Internal.Advancement_>, arg1: string): Internal.Advancement;
        func_203905_a(arg0: Internal.Advancement): Internal.Advancement$Builder;
        static func_192060_b(arg0: Internal.PacketBuffer): Internal.Advancement$Builder;
        func_203902_a(arg0: Internal.IItemProvider_, arg1: Internal.ITextComponent_, arg2: Internal.ITextComponent_, arg3: ResourceLocation_, arg4: Internal.FrameType_, arg5: boolean, arg6: boolean, arg7: boolean): Internal.Advancement$Builder;
        field_192064_d: Internal.AdvancementRewards;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.DisplayInfo, arg2: Internal.AdvancementRewards, arg3: Internal.Map<string, Internal.Criterion>, arg4: string[][]);
    }
    type Advancement$Builder_ = Advancement$Builder;
    class GameRules$RuleKey <T> extends Document.Object {
        func_234911_b_(): string;
        func_223576_a(): string;
        func_234912_c_(): Internal.GameRules$Category;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.GameRules$Category);
    }
    type GameRules$RuleKey_<T> = GameRules$RuleKey<T>;
    abstract class FileSystem extends Document.Object implements Internal.Closeable {
        isReadOnly(): boolean;
        isOpen(): boolean;
        supportedFileAttributeViews(): Internal.Set<string>;
        provider(): Internal.FileSystemProvider;
        getFileStores(): Internal.Iterable<Internal.FileStore>;
        getRootDirectories(): Internal.Iterable<Internal.Path>;
        getPath(arg0: string, ...arg1: string[]): Internal.Path;
        getSeparator(): string;
        getPathMatcher(arg0: string): Internal.PathMatcher;
        newWatchService(): Internal.WatchService;
        close(): void;
        getUserPrincipalLookupService(): Internal.UserPrincipalLookupService;
        get rootDirectories(): Internal.Iterable<Internal.Path>;
        get readOnly(): boolean;
        get userPrincipalLookupService(): Internal.UserPrincipalLookupService;
        get separator(): string;
        get open(): boolean;
        get fileStores(): Internal.Iterable<Internal.FileStore>;
    }
    type FileSystem_ = FileSystem;
    class ContinuationPending extends Internal.RuntimeException {
        getContinuation(): any;
        setApplicationState(applicationState: any): void;
        getApplicationState(): any;
        setContinuation(continuation: Internal.NativeContinuation): void;
        get applicationState(): any;
        get continuation(): any;
        set applicationState(applicationState: any);
    }
    type ContinuationPending_ = ContinuationPending;
    class SuspiciousStewRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type SuspiciousStewRecipe_ = SuspiciousStewRecipe;
    interface ICustomMachine {
        getAppearance(arg0: Internal.MachineStatus_): Internal.IMachineAppearance;
        getName(): Internal.ITextComponent;
        getId(): ResourceLocation;
        isDummy(): boolean;
    }
    type ICustomMachine_ = ICustomMachine;
    class SpectatorGui extends Internal.AbstractGui implements Internal.ISpectatorMenuRecipient {
        func_175257_a(arg0: Internal.SpectatorMenu): void;
        func_238528_a_(arg0: Internal.MatrixStack, arg1: number): void;
        func_195621_a(arg0: number): void;
        func_238527_a_(arg0: Internal.MatrixStack): void;
        func_175260_a(arg0: number): void;
        func_175261_b(): void;
        func_175262_a(): boolean;
        static readonly field_175269_a: ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type SpectatorGui_ = SpectatorGui;
    interface DimensionStructuresSettingsAccessor {
        field_236193_d_(arg0: Internal.Map_<net.minecraft.world.gen.feature.structure.Structure_<any>, Internal.StructureSeparationSettings_>): void;
        (arg0: Internal.Map<net.minecraft.world.gen.feature.structure.Structure<any>, Internal.StructureSeparationSettings>): void;
    }
    type DimensionStructuresSettingsAccessor_ = ((arg0: Internal.Map<net.minecraft.world.gen.feature.structure.Structure<any>, Internal.StructureSeparationSettings>)=>void) | DimensionStructuresSettingsAccessor;
    class WanderingTraderEntity extends Internal.AbstractVillagerEntity {
        shouldRiderSit(): boolean;
        func_213707_a(arg0: Internal.PlayerEntity, arg1: Internal.ITextComponent_, arg2: number): void;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        func_213726_g(arg0: BlockPos): void;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        localvar$bmh000$handleSecondListingOffer(offer: Internal.MerchantOffer): Internal.MerchantOffer;
        localvar$bmh000$storeItemListing(itemListing: Internal.VillagerTrades$ITrade_): Internal.VillagerTrades$ITrade;
        func_223340_ej(): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_213735_eg(): number;
        getParts(): Internal.PartEntity<any>[];
        func_213728_s(arg0: number): void;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.WanderingTraderEntity>, arg1: Internal.World);
    }
    type WanderingTraderEntity_ = WanderingTraderEntity;
    interface ChronoLocalDateTime <D> extends Internal.Temporal, Internal.TemporalAdjuster, Internal.Comparable<Internal.ChronoLocalDateTime<any>> {
        minus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDateTime<D>;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDateTime<D>;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        isEqual(arg0: Internal.ChronoLocalDateTime<any>): boolean;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        toLocalTime(): Internal.LocalTime;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        format(arg0: Internal.DateTimeFormatter): string;
        isSupported(arg0: Internal.TemporalField): boolean;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.ChronoLocalDateTime<any>): number;
        atZone(arg0: Internal.ZoneId): Internal.ChronoZonedDateTime<D>;
        toInstant(arg0: Internal.ZoneOffset): Internal.Instant;
        isBefore(arg0: Internal.ChronoLocalDateTime<any>): boolean;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDateTime<D>;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDateTime<D>;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        with(arg0: Internal.TemporalAdjuster_): Internal.Temporal;
        with(arg0: Internal.TemporalAdjuster_): Internal.ChronoLocalDateTime<D>;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ChronoLocalDateTime<D>;
        toLocalDate(): D;
        toEpochSecond(arg0: Internal.ZoneOffset): number;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        getChronology(): Internal.Chronology;
        isAfter(arg0: Internal.ChronoLocalDateTime<any>): boolean;
    }
    type ChronoLocalDateTime_<D> = ChronoLocalDateTime<D>;
    class SEntityPropertiesPacket$Snapshot extends Document.Object {
        func_240834_a_(): net.minecraft.entity.ai.attributes.Attribute;
        func_151408_c(): Internal.Collection<Internal.AttributeModifier>;
        func_151410_b(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SEntityPropertiesPacket, arg1: net.minecraft.entity.ai.attributes.Attribute, arg2: number, arg3: Internal.Collection<any>);
    }
    type SEntityPropertiesPacket$Snapshot_ = SEntityPropertiesPacket$Snapshot;
    class DimensionType extends Document.Object implements Internal.DimensionTypeAccessor {
        func_241513_m_(): number;
        func_242714_a(arg0: Internal.DimensionType): boolean;
        func_236037_d_(): boolean;
        func_236040_e_(): boolean;
        func_236043_f_(): boolean;
        static func_242715_a(arg0: Internal.DimensionType, arg1: Internal.DimensionType): number;
        func_236046_h_(): boolean;
        static func_242718_a(arg0: Internal.Registry<Internal.DimensionType>, arg1: Internal.Registry<Internal.Biome>, arg2: Internal.Registry<Internal.DimensionSettings>, arg3: number): Internal.SimpleRegistry<net.minecraft.world.Dimension>;
        func_241509_i_(): boolean;
        static func_236025_a_(arg0: Internal.Dynamic<any>): Internal.DataResult<Internal.RegistryKey<Internal.World>>;
        static func_236027_a_(arg0: Internal.DynamicRegistries$Impl): Internal.DynamicRegistries$Impl;
        func_241515_q_(): Internal.ITag<Internal.Block>;
        func_241510_j_(): boolean;
        func_236021_a_(arg0: number): number;
        func_241514_p_(): boolean;
        func_241511_k_(): boolean;
        func_241512_l_(): boolean;
        func_236035_c_(arg0: number): number;
        func_236032_b_(arg0: number): number;
        static func_236031_a_(arg0: Internal.RegistryKey<Internal.World>, arg1: Internal.File): Internal.File;
        static getOverworldType_$md$e571c7$5(): Internal.DimensionType;
        func_186067_c(): string;
        func_242724_f(): number;
        func_227176_e_(): Internal.IBiomeMagnifier;
        func_242725_p(): ResourceLocation;
        func_218272_d(): boolean;
        static readonly field_242712_c: ResourceLocation;
        static readonly field_235999_c_: Internal.RegistryKey<Internal.DimensionType>;
        static readonly field_236001_e_: Internal.RegistryKey<Internal.DimensionType>;
        static readonly field_235997_a_: Internal.Codec<Internal.DimensionType>;
        static readonly field_236000_d_: Internal.RegistryKey<Internal.DimensionType>;
        static readonly field_235998_b_: number[];
        static readonly field_236002_f_: Internal.Codec<java_.util.function_.Supplier<Internal.DimensionType>>;
        static readonly field_236004_h_: Internal.DimensionType;
        static readonly field_242711_b: ResourceLocation;
        static readonly field_241497_i_: Internal.RegistryKey<Internal.DimensionType>;
        readonly field_241504_y_: ResourceLocation;
        static readonly field_242710_a: ResourceLocation;
        get overworldType_$md$e571c7$5(): Internal.DimensionType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.OptionalLong, arg1: boolean, arg2: boolean, arg3: boolean, arg4: boolean, arg5: number, arg6: boolean, arg7: boolean, arg8: boolean, arg9: boolean, arg10: boolean, arg11: number, arg12: Internal.IBiomeMagnifier, arg13: ResourceLocation, arg14: ResourceLocation, arg15: number);
    }
    type DimensionType_ = DimensionType;
    abstract class PropertySource <T, I> extends Document.Object {
        createInstance(arg0: T): I;
        getName(): Internal.ITextComponent;
        getRegistryName(): ResourceLocation;
        get name(): Internal.ITextComponent;
        get registryName(): ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type PropertySource_<T, I> = PropertySource<T, I>;
    class AtSurfaceWithExtraConfig extends Document.Object implements Internal.IPlacementConfig {
        readonly field_202480_c: number;
        static readonly field_236973_a_: Internal.Codec<Internal.AtSurfaceWithExtraConfig>;
        readonly field_202478_a: number;
        readonly field_202479_b: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type AtSurfaceWithExtraConfig_ = AtSurfaceWithExtraConfig;
    interface WorldCarverAccess {
        getReplaceableBlocks(): Internal.Set<Internal.Block>;
        setReplaceableBlocks(arg0: Internal.Set<Internal.Block>): void;
    }
    type WorldCarverAccess_ = WorldCarverAccess;
    abstract class FloatBuffer extends Internal.Buffer implements Internal.Comparable<Internal.FloatBuffer> {
        compact(): Internal.FloatBuffer;
        clear(): Internal.FloatBuffer;
        duplicate(): Internal.FloatBuffer;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.FloatBuffer): number;
        asReadOnlyBuffer(): Internal.FloatBuffer;
        put(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.FloatBuffer;
        put(arg0: number, arg1: number[]): Internal.FloatBuffer;
        put(arg0: number, arg1: Internal.FloatBuffer, arg2: number, arg3: number): Internal.FloatBuffer;
        put(arg0: number[]): Internal.FloatBuffer;
        put(arg0: Internal.FloatBuffer): Internal.FloatBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.FloatBuffer;
        put(arg0: number): Internal.FloatBuffer;
        put(arg0: number, arg1: number): Internal.FloatBuffer;
        static allocate(arg0: number): Internal.FloatBuffer;
        rewind(): Internal.FloatBuffer;
        slice(): Internal.FloatBuffer;
        slice(arg0: number, arg1: number): Internal.FloatBuffer;
        array(): number[];
        mismatch(arg0: Internal.FloatBuffer): number;
        get(arg0: number, arg1: number[]): Internal.FloatBuffer;
        get(arg0: number): number;
        get(arg0: number[], arg1: number, arg2: number): Internal.FloatBuffer;
        get(arg0: number[]): Internal.FloatBuffer;
        get(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.FloatBuffer;
        get(): number;
        limit(arg0: number): Internal.FloatBuffer;
        reset(): Internal.FloatBuffer;
        position(arg0: number): Internal.FloatBuffer;
        flip(): Internal.FloatBuffer;
        static wrap(arg0: number[], arg1: number, arg2: number): Internal.FloatBuffer;
        static wrap(arg0: number[]): Internal.FloatBuffer;
        mark(): Internal.FloatBuffer;
        order(): Internal.ByteOrder;
    }
    type FloatBuffer_ = FloatBuffer;
    abstract class AttributeValue extends Document.Object {
    }
    type AttributeValue_ = AttributeValue;
    class EyeOfEnderEntity extends Internal.Entity implements Internal.IRendersAsItem, Internal.EyeOfEnderData, Internal.EyeOfEnderAccess {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_184543_l(): Internal.ItemStack;
        setLocateTaskOngoing(locateTaskOngoing: boolean): void;
        isMultipartEntity(): boolean;
        func_213863_b(arg0: Internal.ItemStack): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        handler$zei000$skipTick(ci: Internal.CallbackInfo): void;
        getEntity(): Internal.Entity;
        func_180465_a(arg0: BlockPos): void;
        asKJS(): any;
        canRiderInteract(): boolean;
        setLife(arg0: number): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213281_b(arg0: Internal.CompoundNBT_): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70037_a(arg0: Internal.CompoundNBT_): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        set locateTaskOngoing(locateTaskOngoing: boolean);
        set life(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.EyeOfEnderEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
    }
    type EyeOfEnderEntity_ = EyeOfEnderEntity;
    abstract class AbstractConstant <T> extends Document.Object implements Internal.Constant<T> {
        name(): string;
        id(): number;
        compareTo(arg0: T): number;
        compareTo(arg0: any): number;
    }
    type AbstractConstant_<T> = AbstractConstant<T>;
    interface ItemInvokerMixin {
        callAllowdedIn(arg0: Internal.ItemGroup): boolean;
        (arg0: Internal.ItemGroup): boolean;
    }
    type ItemInvokerMixin_ = ((arg0: Internal.ItemGroup)=>boolean) | ItemInvokerMixin;
    class GuiScreenEvent extends net.minecraftforge.eventbus.api.Event {
        getGui(): Internal.Screen;
        get gui(): Internal.Screen;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen);
    }
    type GuiScreenEvent_ = GuiScreenEvent;
    class SyncType extends Internal.Enum<Internal.SyncType> {
        static valueOf(arg0: string): Internal.SyncType;
        static values(): Internal.SyncType[];
        static readonly NOPE: Internal.SyncType;
        static readonly TO_CLIENT: Internal.SyncType;
        static readonly TO_CLIENTS: Internal.SyncType;
    }
    type SyncType_ = "nope" | "to_client" | "to_clients" | SyncType;
    class TrunkVineTreeDecorator extends Internal.TreeDecorator {
        static readonly field_236879_b_: Internal.TrunkVineTreeDecorator;
        static readonly field_236878_a_: Internal.Codec<Internal.TrunkVineTreeDecorator>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TrunkVineTreeDecorator_ = TrunkVineTreeDecorator;
    class WritableRaster extends Internal.Raster {
        getWritableParent(): Internal.WritableRaster;
        setSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[]): void;
        setSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[]): void;
        setSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[]): void;
        setPixel(arg0: number, arg1: number, arg2: number[]): void;
        setPixel(arg0: number, arg1: number, arg2: number[]): void;
        setPixel(arg0: number, arg1: number, arg2: number[]): void;
        createWritableChild(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number[]): Internal.WritableRaster;
        setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): void;
        setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): void;
        setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): void;
        createWritableTranslatedChild(arg0: number, arg1: number): Internal.WritableRaster;
        setRect(arg0: Internal.Raster): void;
        setRect(arg0: number, arg1: number, arg2: Internal.Raster): void;
        setDataElements(arg0: number, arg1: number, arg2: any): void;
        setDataElements(arg0: number, arg1: number, arg2: Internal.Raster): void;
        setDataElements(arg0: number, arg1: number, arg2: number, arg3: number, arg4: any): void;
        setSample(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setSample(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setSample(arg0: number, arg1: number, arg2: number, arg3: number): void;
        get writableParent(): Internal.WritableRaster;
        set rect(arg0: Internal.Raster);
    }
    type WritableRaster_ = WritableRaster;
    interface DoubleBidirectionalIterator extends Internal.DoubleIterator, Internal.ObjectBidirectionalIterator<number> {
        previous(): number;
        previous(): any;
        previousDouble(): number;
        back(arg0: number): number;
        skip(arg0: number): number;
        (): number;
    }
    type DoubleBidirectionalIterator_ = (()=>number) | DoubleBidirectionalIterator;
    interface IItemFilter {
        resetFilterData(arg0: Internal.ItemStack): void;
        filter(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getItems(arg0: Internal.ItemStack, arg1: Internal.Set<Internal.Item>): void;
        filterItem(arg0: Internal.ItemStack, arg1: Internal.Item_): boolean;
        getDisplayItemStacks(arg0: Internal.ItemStack, arg1: Internal.List<Internal.ItemStack>): void;
        addInfo(arg0: Internal.ItemStack, arg1: Internal.FilterInfo, arg2: boolean): void;
        clearFilterCache(arg0: Internal.ItemStack): void;
        (arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
    }
    type IItemFilter_ = ((arg0: Internal.ItemStack, arg1: Internal.ItemStack)=>boolean) | IItemFilter;
    class ToolBaseStatDefinition extends Document.Object {
        getPrimaryHeadWeight(): number;
        getDefaultUpgrades(): number;
        getStartingSlots(arg0: Internal.SlotType): number;
        getModifier(arg0: Internal.FloatToolStat): number;
        getDefaultAbilities(): number;
        getDefaultTraits(): number;
        buildStats(arg0: Internal.ModifierStatsBuilder): void;
        getAllBonuses(): Internal.Set<Internal.FloatToolStat>;
        buildSlots(arg0: Internal.ModDataNBT): void;
        getBonus(arg0: Internal.FloatToolStat): number;
        get primaryHeadWeight(): number;
        get allBonuses(): Internal.Set<Internal.FloatToolStat>;
        get defaultAbilities(): number;
        get defaultUpgrades(): number;
        get defaultTraits(): number;
    }
    type ToolBaseStatDefinition_ = ToolBaseStatDefinition;
    class DecoratedPlacementConfig extends Document.Object implements Internal.IPlacementConfig {
        func_242888_b(): Internal.ConfiguredPlacement<any>;
        func_242886_a(): Internal.ConfiguredPlacement<any>;
        static readonly field_242883_a: Internal.Codec<Internal.DecoratedPlacementConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ConfiguredPlacement<any>, arg1: Internal.ConfiguredPlacement<any>);
    }
    type DecoratedPlacementConfig_ = DecoratedPlacementConfig;
    class ChunkWatchEvent extends net.minecraftforge.eventbus.api.Event {
        getPlayer(): Internal.ServerPlayerEntity;
        getWorld(): Internal.ServerWorld;
        getPos(): Internal.ChunkPos;
        get world(): Internal.ServerWorld;
        get pos(): Internal.ChunkPos;
        get player(): Internal.ServerPlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ServerPlayerEntity, arg1: Internal.ChunkPos, arg2: Internal.ServerWorld);
    }
    type ChunkWatchEvent_ = ChunkWatchEvent;
    class CSeenAdvancementsPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        static func_194163_a(arg0: Internal.Advancement): Internal.CSeenAdvancementsPacket;
        func_194162_b(): Internal.CSeenAdvancementsPacket$Action;
        func_194165_c(): ResourceLocation;
        static func_194164_a(): Internal.CSeenAdvancementsPacket;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.CSeenAdvancementsPacket$Action, arg1: ResourceLocation);
    }
    type CSeenAdvancementsPacket_ = CSeenAdvancementsPacket;
    class MoodSoundAmbience extends Document.Object {
        func_235039_d_(): number;
        func_235032_a_(): Internal.SoundEvent;
        func_235037_c_(): number;
        func_235035_b_(): number;
        static readonly field_235027_b_: Internal.MoodSoundAmbience;
        static readonly field_235026_a_: Internal.Codec<Internal.MoodSoundAmbience>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SoundEvent, arg1: number, arg2: number, arg3: number);
    }
    type MoodSoundAmbience_ = MoodSoundAmbience;
    class BatchPerkContext extends Document.Object {
        addContext(arg0: Internal.AbstractRenderableTexture, arg1: number): Internal.BatchPerkContext$TextureObjectGroup;
        draw(): void;
        beginDrawingPerks(): void;
        getContext(arg0: Internal.BatchPerkContext$TextureObjectGroup): Internal.BufferContext;
        static readonly PRIORITY_FOREGROUND: 200;
        static readonly PRIORITY_BACKGROUND: 100;
        static readonly PRIORITY_OVERLAY: 300;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BatchPerkContext_ = BatchPerkContext;
    interface LongToDoubleFunction {
        applyAsDouble(arg0: number): number;
        (arg0: number): number;
    }
    type LongToDoubleFunction_ = ((arg0: number)=>number) | LongToDoubleFunction;
    class ModuleDescriptor$Exports extends Document.Object implements Internal.Comparable<Internal.ModuleDescriptor$Exports> {
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        isQualified(): boolean;
        source(): string;
        compareTo(arg0: Internal.ModuleDescriptor$Exports): number;
        compareTo(arg0: any): number;
        modifiers(): Internal.Set<Internal.ModuleDescriptor$Exports$Modifier>;
        targets(): Internal.Set<string>;
        get qualified(): boolean;
    }
    type ModuleDescriptor$Exports_ = ModuleDescriptor$Exports;
    interface ConfigCallback {
        save(arg0: boolean): void;
        (arg0: boolean): void;
    }
    type ConfigCallback_ = ((arg0: boolean)=>void) | ConfigCallback;
    class BeehiveTileEntity$State extends Internal.Enum<Internal.BeehiveTileEntity$State> {
        static valueOf(arg0: string): Internal.BeehiveTileEntity$State;
        static values(): Internal.BeehiveTileEntity$State[];
        static readonly BEE_RELEASED: Internal.BeehiveTileEntity$State;
        static readonly EMERGENCY: Internal.BeehiveTileEntity$State;
        static readonly HONEY_DELIVERED: Internal.BeehiveTileEntity$State;
    }
    type BeehiveTileEntity$State_ = "honey_delivered" | "bee_released" | "emergency" | BeehiveTileEntity$State;
    class InetAddress extends Document.Object implements Internal.Serializable {
        isReachable(arg0: Internal.NetworkInterface, arg1: number, arg2: number): boolean;
        isReachable(arg0: number): boolean;
        isMCSiteLocal(): boolean;
        static getAllByName(arg0: string): Internal.InetAddress[];
        isMCGlobal(): boolean;
        getHostName(): string;
        isMCOrgLocal(): boolean;
        getCanonicalHostName(): string;
        isAnyLocalAddress(): boolean;
        isLinkLocalAddress(): boolean;
        static getLocalHost(): Internal.InetAddress;
        isMCLinkLocal(): boolean;
        isLoopbackAddress(): boolean;
        isSiteLocalAddress(): boolean;
        isMulticastAddress(): boolean;
        static getByName(arg0: string): Internal.InetAddress;
        static getLoopbackAddress(): Internal.InetAddress;
        static getByAddress(arg0: number[]): Internal.InetAddress;
        static getByAddress(arg0: string, arg1: number[]): Internal.InetAddress;
        getAddress(): number[];
        getHostAddress(): string;
        isMCNodeLocal(): boolean;
        get linkLocalAddress(): boolean;
        get hostName(): string;
        get loopbackAddress(): Internal.InetAddress;
        get address(): number[];
        get canonicalHostName(): string;
        get mCOrgLocal(): boolean;
        get siteLocalAddress(): boolean;
        get mCNodeLocal(): boolean;
        get mCGlobal(): boolean;
        get localHost(): Internal.InetAddress;
        get mCLinkLocal(): boolean;
        get multicastAddress(): boolean;
        get hostAddress(): string;
        get mCSiteLocal(): boolean;
        get anyLocalAddress(): boolean;
    }
    type InetAddress_ = InetAddress;
    class ModelGenerator$Element extends Document.Object {
        face(direction: Internal.Direction_, consumer: Internal.Consumer_<Internal.ModelGenerator$Face_>): void;
        toJson(): Internal.JsonObject;
        box(b: Internal.AxisAlignedBB): Internal.ModelGenerator$Element;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ModelGenerator$Element_ = ModelGenerator$Element;
    interface TemporalAccessor {
        getLong(arg0: Internal.TemporalField): number;
        query<R>(arg0: Internal.TemporalQuery_<R>): R;
        get(arg0: Internal.TemporalField): number;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        isSupported(arg0: Internal.TemporalField): boolean;
    }
    type TemporalAccessor_ = TemporalAccessor;
    class ResolverStyle extends Internal.Enum<Internal.ResolverStyle> {
        static valueOf(arg0: string): Internal.ResolverStyle;
        static values(): Internal.ResolverStyle[];
        static readonly STRICT: Internal.ResolverStyle;
        static readonly LENIENT: Internal.ResolverStyle;
        static readonly SMART: Internal.ResolverStyle;
    }
    type ResolverStyle_ = "strict" | "smart" | "lenient" | ResolverStyle;
    class GuiOpenEvent extends net.minecraftforge.eventbus.api.Event {
        setGui(arg0: Internal.Screen): void;
        getGui(): Internal.Screen;
        get gui(): Internal.Screen;
        set gui(arg0: Internal.Screen);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen);
    }
    type GuiOpenEvent_ = GuiOpenEvent;
    class BiomeAmbience$GrassColorModifier extends Internal.Enum<Internal.BiomeAmbience$GrassColorModifier> implements Internal.IStringSerializable, Internal.IExtensibleEnum {
        init(): void;
        func_241853_a(arg0: number, arg1: number, arg2: number): number;
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.BiomeAmbience$GrassColorModifier;
        static values(): Internal.BiomeAmbience$GrassColorModifier[];
        static create(arg0: string, arg1: string, arg2: Internal.BiomeAmbience$GrassColorModifier$ColorModifier_): Internal.BiomeAmbience$GrassColorModifier;
        func_242547_b(): string;
        static func_242546_a(arg0: string): Internal.BiomeAmbience$GrassColorModifier;
        static readonly SWAMP: Internal.BiomeAmbience$GrassColorModifier;
        static readonly field_242542_d: Internal.Codec<Internal.BiomeAmbience$GrassColorModifier>;
        static readonly NONE: Internal.BiomeAmbience$GrassColorModifier;
        static readonly DARK_FOREST: Internal.BiomeAmbience$GrassColorModifier;
    }
    type BiomeAmbience$GrassColorModifier_ = "none" | "dark_forest" | "swamp" | BiomeAmbience$GrassColorModifier;
    class DepthAverageConfig extends Document.Object implements Internal.IPlacementConfig {
        static readonly field_236955_a_: Internal.Codec<Internal.DepthAverageConfig>;
        readonly field_202485_c: number;
        readonly field_202484_b: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
    }
    type DepthAverageConfig_ = DepthAverageConfig;
    abstract class OutputStream extends Document.Object implements Internal.Closeable, Internal.Flushable {
        flush(): void;
        static nullOutputStream(): Internal.OutputStream;
        close(): void;
        write(arg0: number[]): void;
        write(arg0: number[], arg1: number, arg2: number): void;
        write(arg0: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type OutputStream_ = OutputStream;
    class Commands$EnvironmentType extends Internal.Enum<Internal.Commands$EnvironmentType> {
        static valueOf(arg0: string): Internal.Commands$EnvironmentType;
        static values(): Internal.Commands$EnvironmentType[];
        static readonly ALL: Internal.Commands$EnvironmentType;
        static readonly INTEGRATED: Internal.Commands$EnvironmentType;
        static readonly DEDICATED: Internal.Commands$EnvironmentType;
    }
    type Commands$EnvironmentType_ = "all" | "dedicated" | "integrated" | Commands$EnvironmentType;
    class RPConfig$PlayerHeadStackingFixMode extends Internal.Enum<Internal.RPConfig$PlayerHeadStackingFixMode> {
        static valueOf(arg0: string): Internal.RPConfig$PlayerHeadStackingFixMode;
        static values(): Internal.RPConfig$PlayerHeadStackingFixMode[];
        static readonly DISABLED: Internal.RPConfig$PlayerHeadStackingFixMode;
        static readonly REQUIRE_SAME_PLAYER_AND_TEXTURE_URL: Internal.RPConfig$PlayerHeadStackingFixMode;
        static readonly REQUIRE_SAME_PLAYER: Internal.RPConfig$PlayerHeadStackingFixMode;
    }
    type RPConfig$PlayerHeadStackingFixMode_ = "disabled" | "require_same_player_and_texture_url" | "require_same_player" | RPConfig$PlayerHeadStackingFixMode;
    interface ISafeBlockGetter {
        mfix$getSafeBlockGetter(): Internal.SafeBlockGetter;
        (): Internal.SafeBlockGetter;
    }
    type ISafeBlockGetter_ = (()=>Internal.SafeBlockGetter) | ISafeBlockGetter;
    class Rotations extends Document.Object {
        func_179416_c(): number;
        func_179413_d(): number;
        func_179415_b(): number;
        func_179414_a(): Internal.ListNBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
        constructor(arg0: Internal.ListNBT);
    }
    type Rotations_ = Rotations;
    class MobSpawnInfo$Builder extends Document.Object implements Internal.MobSpawnSettingsBuilderAccessor {
        getSpawners(): Internal.Map<any, any>;
        setPlayerCanSpawn(arg0: boolean): void;
        func_242573_a(arg0: Internal.EntityType_<any>, arg1: number, arg2: number): Internal.MobSpawnInfo$Builder;
        func_242572_a(arg0: number): Internal.MobSpawnInfo$Builder;
        func_242571_a(): Internal.MobSpawnInfo$Builder;
        func_242577_b(): Internal.MobSpawnInfo;
        getMobSpawnCosts(): Internal.Map<any, any>;
        func_242575_a(arg0: Internal.EntityClassification_, arg1: Internal.MobSpawnInfo$Spawners): Internal.MobSpawnInfo$Builder;
        isPlayerCanSpawn(): boolean;
        readonly field_242567_a: Internal.Map<Internal.EntityClassification, Internal.List<Internal.MobSpawnInfo$Spawners>>;
        get mobSpawnCosts(): Internal.Map<any, any>;
        get spawners(): Internal.Map<any, any>;
        get playerCanSpawn(): boolean;
        set playerCanSpawn(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MobSpawnInfo$Builder_ = MobSpawnInfo$Builder;
    class SSpawnParticlePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_149227_j(): number;
        func_149222_k(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149224_h(): number;
        func_197699_j(): Internal.IParticleData;
        func_149223_i(): number;
        func_149225_f(): number;
        func_149226_e(): number;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149221_g(): number;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149220_d(): number;
        func_179750_b(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: T, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number);
    }
    type SSpawnParticlePacket_ = SSpawnParticlePacket;
    class AlterGroundTreeDecorator extends Internal.TreeDecorator {
        static readonly field_236859_a_: Internal.Codec<Internal.AlterGroundTreeDecorator>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockStateProvider);
    }
    type AlterGroundTreeDecorator_ = AlterGroundTreeDecorator;
    class ArsNouveauGlyphPressRecipeJS extends Internal.RecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ArsNouveauGlyphPressRecipeJS_ = ArsNouveauGlyphPressRecipeJS;
    class ConfigLoadedEvent$LoadReason extends Internal.Enum<Internal.ConfigLoadedEvent$LoadReason> {
        static valueOf(arg0: string): Internal.ConfigLoadedEvent$LoadReason;
        static values(): Internal.ConfigLoadedEvent$LoadReason[];
        static readonly RELOAD: Internal.ConfigLoadedEvent$LoadReason;
        static readonly SHADOW: Internal.ConfigLoadedEvent$LoadReason;
        static readonly INITIAL: Internal.ConfigLoadedEvent$LoadReason;
        static readonly RESTORE: Internal.ConfigLoadedEvent$LoadReason;
    }
    type ConfigLoadedEvent$LoadReason_ = "initial" | "shadow" | "restore" | "reload" | ConfigLoadedEvent$LoadReason;
    interface GameSession {
        getPlayerCount(): number;
        getGameMode(): string;
        isRemoteServer(): boolean;
        getSessionId(): Internal.UUID;
        getDifficulty(): string;
    }
    type GameSession_ = GameSession;
    interface GameRulesAccessor$BooleanValueSimple {
    }
    type GameRulesAccessor$BooleanValueSimple_ = GameRulesAccessor$BooleanValueSimple;
    interface IIndependentStarlightSource {
        readFromNBT(arg0: Internal.CompoundNBT_): void;
        produceStarlightTick(arg0: Internal.ServerWorld, arg1: BlockPos): number;
        getProvider(): Internal.SourceClassRegistry$SourceProvider;
        threadedUpdateProximity(arg0: BlockPos, arg1: Internal.Map_<BlockPos_, Internal.IIndependentStarlightSource_>): void;
        providesAutoLink(): boolean;
        getStarlightType(): Internal.IWeakConstellation;
        writeToNBT(arg0: Internal.CompoundNBT_): void;
        updateFromTileEntity<T>(arg0: T): boolean;
    }
    type IIndependentStarlightSource_ = IIndependentStarlightSource;
    class FishingLootEventJS extends Internal.LootEventJS {
        addFishing(id: ResourceLocation_, b: Internal.Consumer_<Internal.LootBuilder_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(c: Internal.Map<ResourceLocation, Internal.JsonElement>);
    }
    type FishingLootEventJS_ = FishingLootEventJS;
    class SJoinGamePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_179744_h(): boolean;
        func_240819_i_(): Internal.RegistryKey<Internal.World>;
        func_240817_g_(): Internal.DynamicRegistries;
        func_240816_f_(): Internal.Set<Internal.RegistryKey<Internal.World>>;
        func_229743_k_(): boolean;
        func_241786_f_(): Internal.GameType;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_244297_i(): Internal.DimensionType;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149195_d(): boolean;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_229742_c_(): number;
        func_218728_h(): number;
        func_240820_n_(): boolean;
        func_149197_c(): number;
        func_240821_o_(): boolean;
        func_149198_e(): Internal.GameType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.GameType, arg2: Internal.GameType, arg3: number, arg4: boolean, arg5: Internal.Set<Internal.RegistryKey<Internal.World>>, arg6: Internal.DynamicRegistries$Impl, arg7: Internal.DimensionType, arg8: Internal.RegistryKey<Internal.World>, arg9: number, arg10: number, arg11: boolean, arg12: boolean, arg13: boolean, arg14: boolean);
    }
    type SJoinGamePacket_ = SJoinGamePacket;
    class FurnaceRecipe extends Internal.AbstractCookingRecipe {
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<Internal.ItemStack>;
        func_192399_d(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: string, arg2: Internal.Ingredient, arg3: Internal.ItemStack, arg4: number, arg5: number);
    }
    type FurnaceRecipe_ = FurnaceRecipe;
    interface IContainerListener {
        func_71110_a(arg0: Internal.Container, arg1: Internal.NonNullList<Internal.ItemStack>): void;
        func_71111_a(arg0: Internal.Container, arg1: number, arg2: Internal.ItemStack): void;
        func_71112_a(arg0: Internal.Container, arg1: number, arg2: number): void;
    }
    type IContainerListener_ = IContainerListener;
    class WorldEntitySpawner$EntityDensityManager extends Document.Object {
        func_234988_a_(): number;
        func_234995_b_(): Internal.Object2IntMap<Internal.EntityClassification>;
    }
    type WorldEntitySpawner$EntityDensityManager_ = WorldEntitySpawner$EntityDensityManager;
    interface PigEntityAccessor {
    }
    type PigEntityAccessor_ = PigEntityAccessor;
    class JSONBlendingMode extends Document.Object {
        func_148111_b(): boolean;
        static func_148107_b(arg0: string): number;
        static func_148108_a(arg0: string): number;
        func_148109_a(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number);
        constructor(arg0: number, arg1: number, arg2: number);
        constructor();
    }
    type JSONBlendingMode_ = JSONBlendingMode;
    class JobAttributes$MultipleDocumentHandlingType extends Internal.AttributeValue {
        static readonly SEPARATE_DOCUMENTS_COLLATED_COPIES: Internal.JobAttributes$MultipleDocumentHandlingType;
        static readonly SEPARATE_DOCUMENTS_UNCOLLATED_COPIES: Internal.JobAttributes$MultipleDocumentHandlingType;
    }
    type JobAttributes$MultipleDocumentHandlingType_ = JobAttributes$MultipleDocumentHandlingType;
    interface GroupLayout extends Internal.MemoryLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.GroupLayout;
        withoutName(): Internal.GroupLayout;
        withoutName(): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.GroupLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        memberLayouts(): Internal.List<Internal.MemoryLayout>;
    }
    type GroupLayout_ = GroupLayout;
    class ItemPickupEventJS extends Internal.PlayerEventJS {
        getItem(): Internal.ItemStackJS;
        getItemEntity(): Internal.EntityJS;
        get item(): Internal.ItemStackJS;
        get itemEntity(): Internal.EntityJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.PlayerEntity, entity: Internal.ItemEntity, stack: Internal.ItemStack);
    }
    type ItemPickupEventJS_ = ItemPickupEventJS;
    class BiomeGenerationSettings extends Document.Object implements Internal.BiomeGenerationSettingsAccess {
        func_242502_e(): Internal.ISurfaceBuilderConfig;
        setFeatures(arg0: Internal.List<any>): void;
        func_242496_b(): Internal.List<Internal.ConfiguredFeature<any, any>>;
        getFeatures(): Internal.List<any>;
        func_242493_a(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>): boolean;
        getStructureStarts(): Internal.List<any>;
        func_242491_a(arg0: Internal.StructureFeature<any, any>): Internal.StructureFeature<any, any>;
        func_242498_c(): Internal.List<Internal.List<java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>>>;
        func_242489_a(arg0: CarvingGenerationStep_): Internal.List<java_.util.function_.Supplier<Internal.ConfiguredCarver<any>>>;
        getCarvingStages(): Internal.Set<CarvingGenerationStep>;
        func_242500_d(): java_.util.function_.Supplier<Internal.ConfiguredSurfaceBuilder<any>>;
        setStructureStarts(arg0: Internal.List<any>): void;
        func_242487_a(): Internal.Collection<java_.util.function_.Supplier<Internal.StructureFeature<any, any>>>;
        field_242483_e: Internal.Map<CarvingGenerationStep, Internal.List<java_.util.function_.Supplier<Internal.ConfiguredCarver<any>>>>;
        field_242482_d: java_.util.function_.Supplier<Internal.ConfiguredSurfaceBuilder<any>>;
        field_242485_g: Internal.List<java_.util.function_.Supplier<Internal.StructureFeature<any, any>>>;
        static readonly field_242479_a: Internal.Logger;
        field_242484_f: Internal.List<Internal.List<java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>>>;
        field_242486_h: Internal.List<Internal.ConfiguredFeature<any, any>>;
        static readonly field_242481_c: Internal.MapCodec<Internal.BiomeGenerationSettings>;
        static readonly field_242480_b: Internal.BiomeGenerationSettings;
        get features(): Internal.List<any>;
        get carvingStages(): Internal.Set<CarvingGenerationStep>;
        get structureStarts(): Internal.List<any>;
        set features(arg0: Internal.List<any>);
        set structureStarts(arg0: Internal.List<any>);
    }
    type BiomeGenerationSettings_ = BiomeGenerationSettings;
    class ContainerType <T> extends Internal.ForgeRegistryEntry<Internal.ContainerType<any>> implements Internal.IForgeContainerType<T> {
        func_221506_a(arg0: number, arg1: Internal.PlayerInventory): T;
        create(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PacketBuffer): T;
        create(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PacketBuffer): any;
        setRegistryName(arg0: ResourceLocation_): any;
        static readonly field_221514_h: Internal.ContainerType<Internal.RepairContainer>;
        static readonly field_221515_i: Internal.ContainerType<Internal.BeaconContainer>;
        static readonly field_221512_f: Internal.ContainerType<Internal.ChestContainer>;
        static readonly field_234650_u_: Internal.ContainerType<Internal.SmithingTableContainer>;
        static readonly field_221513_g: Internal.ContainerType<Internal.DispenserContainer>;
        static readonly field_221518_l: Internal.ContainerType<Internal.WorkbenchContainer>;
        readonly field_221530_x: Internal.ContainerType$IFactory<T>;
        static readonly field_221519_m: Internal.ContainerType<Internal.EnchantmentContainer>;
        static readonly field_221516_j: Internal.ContainerType<Internal.BlastFurnaceContainer>;
        static readonly field_221517_k: Internal.ContainerType<Internal.BrewingStandContainer>;
        static readonly field_221527_u: Internal.ContainerType<Internal.SmokerContainer>;
        static readonly field_221525_s: Internal.ContainerType<Internal.MerchantContainer>;
        static readonly field_221526_t: Internal.ContainerType<Internal.ShulkerBoxContainer>;
        static readonly field_221510_d: Internal.ContainerType<Internal.ChestContainer>;
        static readonly field_221511_e: Internal.ContainerType<Internal.ChestContainer>;
        static readonly field_221529_w: Internal.ContainerType<Internal.StonecutterContainer>;
        static readonly field_221508_b: Internal.ContainerType<Internal.ChestContainer>;
        static readonly field_221509_c: Internal.ContainerType<Internal.ChestContainer>;
        static readonly field_221520_n: Internal.ContainerType<Internal.FurnaceContainer>;
        static readonly field_221507_a: Internal.ContainerType<Internal.ChestContainer>;
        static readonly field_226625_v_: Internal.ContainerType<Internal.CartographyContainer>;
        static readonly field_221523_q: Internal.ContainerType<Internal.LecternContainer>;
        static readonly field_221524_r: Internal.ContainerType<Internal.LoomContainer>;
        static readonly field_221521_o: Internal.ContainerType<Internal.GrindstoneContainer>;
        static readonly field_221522_p: Internal.ContainerType<Internal.HopperContainer>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ContainerType$IFactory<T>);
    }
    type ContainerType_<T> = Registry.minecraft.menu | ContainerType<T>;
    class AdvancementManager extends Internal.JsonReloadListener {
        func_195438_b(): Internal.Collection<Internal.Advancement>;
        func_225594_i_(): string;
        func_192778_a(arg0: ResourceLocation_): Internal.Advancement;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LootPredicateManager);
    }
    type AdvancementManager_ = AdvancementManager;
    class ModuleDescriptor$Builder extends Document.Object {
        mainClass(arg0: string): Internal.ModuleDescriptor$Builder;
        build(): Internal.ModuleDescriptor;
        provides(arg0: Internal.ModuleDescriptor$Provides): Internal.ModuleDescriptor$Builder;
        provides(arg0: string, arg1: Internal.List<string>): Internal.ModuleDescriptor$Builder;
        exports(arg0: string): Internal.ModuleDescriptor$Builder;
        exports(arg0: Internal.Set<Internal.ModuleDescriptor$Exports$Modifier>, arg1: string, arg2: Internal.Set<string>): Internal.ModuleDescriptor$Builder;
        exports(arg0: string, arg1: Internal.Set<string>): Internal.ModuleDescriptor$Builder;
        exports(arg0: Internal.Set<Internal.ModuleDescriptor$Exports$Modifier>, arg1: string): Internal.ModuleDescriptor$Builder;
        exports(arg0: Internal.ModuleDescriptor$Exports): Internal.ModuleDescriptor$Builder;
        opens(arg0: string): Internal.ModuleDescriptor$Builder;
        opens(arg0: Internal.Set<Internal.ModuleDescriptor$Opens$Modifier>, arg1: string, arg2: Internal.Set<string>): Internal.ModuleDescriptor$Builder;
        opens(arg0: string, arg1: Internal.Set<string>): Internal.ModuleDescriptor$Builder;
        opens(arg0: Internal.ModuleDescriptor$Opens): Internal.ModuleDescriptor$Builder;
        opens(arg0: Internal.Set<Internal.ModuleDescriptor$Opens$Modifier>, arg1: string): Internal.ModuleDescriptor$Builder;
        uses(arg0: string): Internal.ModuleDescriptor$Builder;
        packages(arg0: Internal.Set<string>): Internal.ModuleDescriptor$Builder;
        version(arg0: string): Internal.ModuleDescriptor$Builder;
        version(arg0: Internal.ModuleDescriptor$Version): Internal.ModuleDescriptor$Builder;
        requires(arg0: Internal.ModuleDescriptor$Requires): Internal.ModuleDescriptor$Builder;
        requires(arg0: Internal.Set<Internal.ModuleDescriptor$Requires$Modifier>, arg1: string, arg2: Internal.ModuleDescriptor$Version): Internal.ModuleDescriptor$Builder;
        requires(arg0: string): Internal.ModuleDescriptor$Builder;
        requires(arg0: Internal.Set<Internal.ModuleDescriptor$Requires$Modifier>, arg1: string): Internal.ModuleDescriptor$Builder;
    }
    type ModuleDescriptor$Builder_ = ModuleDescriptor$Builder;
    class MemoryModuleStatus extends Internal.Enum<Internal.MemoryModuleStatus> {
        static valueOf(arg0: string): Internal.MemoryModuleStatus;
        static values(): Internal.MemoryModuleStatus[];
        static readonly VALUE_PRESENT: Internal.MemoryModuleStatus;
        static readonly REGISTERED: Internal.MemoryModuleStatus;
        static readonly VALUE_ABSENT: Internal.MemoryModuleStatus;
    }
    type MemoryModuleStatus_ = "value_present" | "value_absent" | "registered" | MemoryModuleStatus;
    class EntityAIDebugRenderer$Entry extends Document.Object {
        readonly field_217724_b: number;
        readonly field_217725_c: string;
        readonly field_217726_d: boolean;
        readonly field_217723_a: BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: BlockPos, arg1: number, arg2: string, arg3: boolean);
    }
    type EntityAIDebugRenderer$Entry_ = EntityAIDebugRenderer$Entry;
    interface Object2IntMap$Entry <K> extends Internal.Map$Entry<K, number> {
        getValue(): number;
        getValue(): any;
        getIntValue(): number;
        setValue(arg0: any): any;
        setValue(arg0: number): number;
        setValue(arg0: number): number;
    }
    type Object2IntMap$Entry_<K> = Object2IntMap$Entry<K>;
    interface IntUnaryOperator {
        applyAsInt(arg0: number): number;
        compose(arg0: Internal.IntUnaryOperator_): Internal.IntUnaryOperator;
        andThen(arg0: Internal.IntUnaryOperator_): Internal.IntUnaryOperator;
        (arg0: number): number;
    }
    type IntUnaryOperator_ = ((arg0: number)=>number) | IntUnaryOperator;
    class BarrelTileEntity extends Internal.LockableLootTileEntity {
        requestModelDataUpdate(): void;
        func_213962_h(): void;
        func_213901_a(arg0: Internal.Item_): number;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_145818_k_(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        field_213966_a: Internal.NonNullList<Internal.ItemStack>;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TileEntityType<any>);
        constructor();
    }
    type BarrelTileEntity_ = BarrelTileEntity;
    interface IClickedIngredient <V> {
        getValue(): V;
        getCheatItemStack(): Internal.ItemStack;
        getArea(): Internal.Rectangle2d;
    }
    type IClickedIngredient_<V> = IClickedIngredient<V>;
    class InformationJEIEventJS extends Internal.EventJS {
        add(o: any, s: any): void;
        addForType<T_>(type: Internal.IIngredientType_<T_>, o: any, s: any): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(m: Internal.IIngredientManager, l: Internal.List<any>);
    }
    type InformationJEIEventJS_ = InformationJEIEventJS;
    class Splashes extends Internal.ReloadListener<Internal.List<string>> {
        func_215276_a(): string;
        func_225594_i_(): string;
        handler$cll000$addSplashes(arg0: Internal.List<any>, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.CallbackInfo): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Session);
    }
    type Splashes_ = Splashes;
    interface Object2ObjectSortedMap <K, V> extends Internal.Object2ObjectMap<K, V>, Internal.SortedMap<K, V> {
        comparator(): Internal.Comparator<K>;
        object2ObjectEntrySet(): Internal.ObjectSortedSet<Internal.Object2ObjectMap$Entry<K, V>>;
        object2ObjectEntrySet(): Internal.ObjectSet<any>;
        entrySet(): Internal.ObjectSet<any>;
        entrySet(): Internal.ObjectSortedSet<Internal.Map$Entry<K, V>>;
        entrySet(): Internal.Set<any>;
        subMap(arg0: any, arg1: any): Internal.SortedMap<any, any>;
        subMap(arg0: K, arg1: K): Internal.Object2ObjectSortedMap<K, V>;
        values(): Internal.Collection<any>;
        values(): Internal.ObjectCollection<V>;
        headMap(arg0: any): Internal.SortedMap<any, any>;
        headMap(arg0: K): Internal.Object2ObjectSortedMap<K, V>;
        keySet(): Internal.ObjectSet<any>;
        keySet(): Internal.Set<any>;
        keySet(): Internal.ObjectSortedSet<K>;
        tailMap(arg0: any): Internal.SortedMap<any, any>;
        tailMap(arg0: K): Internal.Object2ObjectSortedMap<K, V>;
    }
    type Object2ObjectSortedMap_<K, V> = Object2ObjectSortedMap<K, V>;
    class GolemLastSeenSensor extends Internal.Sensor<Internal.LivingEntity> {
        static func_242312_a(arg0: Internal.LivingEntity): void;
        static func_242313_b(arg0: Internal.LivingEntity): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type GolemLastSeenSensor_ = GolemLastSeenSensor;
    interface IForgeUnbakedModel {
        getClip(arg0: string): Internal.Optional<Internal.IClip>;
    }
    type IForgeUnbakedModel_ = IForgeUnbakedModel;
    interface CrystalAttributeTile {
        getMissingAttributes(): Internal.CrystalAttributes;
        getAttributes(): Internal.CrystalAttributes;
        setAttributes(arg0: Internal.CrystalAttributes): void;
    }
    type CrystalAttributeTile_ = CrystalAttributeTile;
    interface Structure extends Internal.ContentSerializable {
        getMaximumOffset(): Vec3i;
        getMinimumOffset(): Vec3i;
        getTileEntityAt(arg0: BlockPos): Internal.MatchableTile<Internal.TileEntity>;
        getStructureSlice(arg0: number): Internal.List<Internal.Tuple<BlockPos, Internal.MatchableState>>;
        hasTileAt(arg0: BlockPos): boolean;
        getContents(): Internal.Map<BlockPos, Internal.MatchableState>;
        hasBlockAt(arg0: BlockPos): boolean;
        getTileEntities(): Internal.Map<BlockPos, Internal.MatchableTile<Internal.TileEntity>>;
        getBlockStateAt(arg0: BlockPos): Internal.MatchableState;
    }
    type Structure_ = Structure;
    class MarketRegistryReloadEvent$Pre extends Internal.MarketRegistryReloadEvent {
        registerMarketDefaultHandler(arg0: string, arg1: Internal.IMarketRegistryDefaultHandler): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MarketRegistryReloadEvent$Pre_ = MarketRegistryReloadEvent$Pre;
    class ProjectileImpactEvent$Throwable extends Internal.ProjectileImpactEvent {
        getThrowable(): Internal.ThrowableEntity;
        get throwable(): Internal.ThrowableEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ThrowableEntity, arg1: Internal.RayTraceResult);
    }
    type ProjectileImpactEvent$Throwable_ = ProjectileImpactEvent$Throwable;
    class RockGenMappingRecipeJS extends Internal.ThermalRecipeJS {
        below(arg0: string): Internal.RockGenMappingRecipeJS;
        adjacent(arg0: number): Internal.RockGenMappingRecipeJS;
        adjacent(arg0: string): Internal.RockGenMappingRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RockGenMappingRecipeJS_ = RockGenMappingRecipeJS;
    interface Iterable <T> {
        iterator(): Internal.Iterator<T>;
        spliterator(): Internal.Spliterator<T>;
        forEach(arg0: Internal.Consumer_<T>): void;
        (): Internal.Iterator<T>;
    }
    type Iterable_<T> = (()=>Internal.Iterator<T>) | Iterable<T>;
    class CClientStatusPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_149435_c(): Internal.CClientStatusPacket$State;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.CClientStatusPacket$State);
    }
    type CClientStatusPacket_ = CClientStatusPacket;
    class SceneBuilder$OverlayInstructions extends Document.Object {
        showCenteredScrollInput(arg0: BlockPos, arg1: Internal.Direction_, arg2: number): void;
        showSelectionWithText(arg0: Internal.Selection, arg1: number): Internal.TextWindowElement$Builder;
        showOutline(arg0: PonderPalette_, arg1: any, arg2: Internal.Selection, arg3: number): void;
        showText(arg0: number): Internal.TextWindowElement$Builder;
        chaseBoundingBoxOutline(arg0: PonderPalette_, arg1: any, arg2: Internal.AxisAlignedBB, arg3: number): void;
        showScrollInput(arg0: Vec3, arg1: Internal.Direction_, arg2: number): void;
        showLine(arg0: PonderPalette_, arg1: Vec3, arg2: Vec3, arg3: number): void;
        showFilterSlotInput(arg0: Vec3, arg1: number): void;
        showRepeaterScrollInput(arg0: BlockPos, arg1: number): void;
        showControls(arg0: PonderInputWindowElement, arg1: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SceneBuilder);
    }
    type SceneBuilder$OverlayInstructions_ = SceneBuilder$OverlayInstructions;
    interface AttributeEvent$EntityModifierManager {
        getLivingEntity(): Internal.LivingEntity;
        setLivingEntity(arg0: Internal.LivingEntity): void;
    }
    type AttributeEvent$EntityModifierManager_ = AttributeEvent$EntityModifierManager;
    abstract class PerkConverter$Radius extends Internal.PerkConverter {
        convertModifierInRange(arg0: Internal.PlayerEntity, arg1: Internal.PlayerProgress, arg2: Internal.PerkAttributeModifier_, arg3: Internal.AbstractPerk): Internal.PerkAttributeModifier;
        getOffset(): Internal.Point2D$Float;
        withNewRadius(arg0: number): Internal.PerkConverter$Radius;
        setRegistryName(arg0: ResourceLocation_): any;
        getRadius(): number;
        gainExtraModifiersInRange(arg0: Internal.PlayerEntity, arg1: Internal.PlayerProgress, arg2: Internal.PerkAttributeModifier_, arg3: Internal.AbstractPerk): Internal.Collection<Internal.PerkAttributeModifier>;
        get offset(): Internal.Point2D$Float;
        get radius(): number;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.Point2D$Float, arg2: number);
    }
    type PerkConverter$Radius_ = PerkConverter$Radius;
    interface IGuiEventListener {
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_231046_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231044_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212927_b(arg0: number, arg1: number): void;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231049_c__(arg0: boolean): boolean;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_231047_b_(arg0: number, arg1: number): boolean;
        func_231048_c_(arg0: number, arg1: number, arg2: number): boolean;
    }
    type IGuiEventListener_ = IGuiEventListener;
    class CallbackInfo extends Document.Object implements Internal.Cancellable {
        cancel(): void;
        static getCallInfoClassName(arg0: org.objectweb.asm.Type): string;
        isCancelled(): boolean;
        isCancellable(): boolean;
        getId(): string;
        get cancelled(): boolean;
        get id(): string;
        get cancellable(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: boolean);
    }
    type CallbackInfo_ = CallbackInfo;
    class PonderElement extends Document.Object {
        setVisible(arg0: boolean): void;
        whileSkipping(arg0: Internal.PonderScene): void;
        reset(arg0: Internal.PonderScene): void;
        isVisible(): boolean;
        tick(arg0: Internal.PonderScene): void;
        get visible(): boolean;
        set visible(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PonderElement_ = PonderElement;
    abstract class FlowingFluid extends Internal.Fluid implements Internal.FlowingFluidAccess {
        func_207207_a(arg0: number, arg1: boolean): Internal.FluidState;
        getExplosionResistance(arg0: Internal.FluidState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): number;
        func_210198_f(): Internal.Fluid;
        func_207204_a(arg0: boolean): Internal.FluidState;
        invokeCanPassThroughWall(arg0: Internal.Direction_, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: BlockPos, arg5: Internal.BlockState): boolean;
        func_210197_e(): Internal.Fluid;
        getFluid(): Internal.Fluid;
        setRegistryName(arg0: ResourceLocation_): any;
        isEntityInside(arg0: Internal.FluidState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity, arg4: number, arg5: Internal.Tag<Internal.Fluid>, arg6: boolean): boolean;
        isAABBInsideMaterial(arg0: Internal.FluidState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.AxisAlignedBB, arg4: Internal.Material): boolean;
        func_207191_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.FluidState): void;
        isAABBInsideLiquid(arg0: Internal.FluidState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.AxisAlignedBB): boolean;
        func_215663_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.FluidState): Vec3;
        static readonly field_207209_a: net.minecraft.state.BooleanProperty;
        static readonly field_207210_b: Internal.IntegerProperty;
        get fluid(): Internal.Fluid;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FlowingFluid_ = FlowingFluid;
    class AbstractBlock$Properties extends Document.Object implements Internal.BlockPropertiesAccessor {
        func_200941_a(arg0: number): Internal.AbstractBlock$Properties;
        func_222379_b(arg0: Internal.Block_): Internal.AbstractBlock$Properties;
        func_200942_a(): Internal.AbstractBlock$Properties;
        func_226898_c_(arg0: number): Internal.AbstractBlock$Properties;
        func_235852_d_(arg0: Internal.AbstractBlock$IPositionPredicate_): Internal.AbstractBlock$Properties;
        func_200943_b(arg0: number): Internal.AbstractBlock$Properties;
        static func_200945_a(arg0: Internal.Material): Internal.AbstractBlock$Properties;
        func_200944_c(): Internal.AbstractBlock$Properties;
        func_200947_a(arg0: Internal.SoundType): Internal.AbstractBlock$Properties;
        func_200946_b(): Internal.AbstractBlock$Properties;
        func_200948_a(arg0: number, arg1: number): Internal.AbstractBlock$Properties;
        func_235847_c_(arg0: Internal.AbstractBlock$IPositionPredicate_): Internal.AbstractBlock$Properties;
        getHarvestLevel(): number;
        static func_200949_a(arg0: Internal.Material, arg1: Internal.MaterialColor): Internal.AbstractBlock$Properties;
        func_235828_a_(arg0: Internal.AbstractBlock$IPositionPredicate_): Internal.AbstractBlock$Properties;
        func_235842_b_(arg0: Internal.AbstractBlock$IPositionPredicate_): Internal.AbstractBlock$Properties;
        setLootTableSupplier(arg0: java_.util.function_.Supplier_<any>): void;
        func_235861_h_(): Internal.AbstractBlock$Properties;
        func_222380_e(): Internal.AbstractBlock$Properties;
        func_208770_d(): Internal.AbstractBlock$Properties;
        func_226896_b_(): Internal.AbstractBlock$Properties;
        static func_200950_a(arg0: Internal.AbstractBlock): Internal.AbstractBlock$Properties;
        getHarvestTool(): Internal.ToolType;
        static func_200952_a(arg0: Internal.Material, arg1: Internal.DyeColor_): Internal.AbstractBlock$Properties;
        func_235856_e_(arg0: Internal.AbstractBlock$IPositionPredicate_): Internal.AbstractBlock$Properties;
        func_235827_a_(arg0: Internal.AbstractBlock$IExtendedPositionPredicate_<Internal.EntityType_<any>>): Internal.AbstractBlock$Properties;
        lootFrom(arg0: java_.util.function_.Supplier_<Internal.Block_>): Internal.AbstractBlock$Properties;
        func_235859_g_(): Internal.AbstractBlock$Properties;
        getLootTableSupplier(): java_.util.function_.Supplier<any>;
        static func_235836_a_(arg0: Internal.Material, arg1: Internal.Function_<Internal.BlockState_, Internal.MaterialColor_>): Internal.AbstractBlock$Properties;
        func_226897_b_(arg0: number): Internal.AbstractBlock$Properties;
        harvestTool(arg0: Internal.ToolType): Internal.AbstractBlock$Properties;
        func_235838_a_(arg0: Internal.ToIntFunction_<Internal.BlockState_>): Internal.AbstractBlock$Properties;
        harvestLevel(arg0: number): Internal.AbstractBlock$Properties;
        field_200953_a: Internal.Material;
        field_200960_h: boolean;
        field_226893_j_: number;
        field_235817_s_: Internal.AbstractBlock$IPositionPredicate;
        field_235803_e_: Internal.ToIntFunction<Internal.BlockState>;
        field_226894_k_: number;
        field_235816_r_: Internal.AbstractBlock$IPositionPredicate;
        field_235818_t_: Internal.AbstractBlock$IPositionPredicate;
        field_235819_u_: Internal.AbstractBlock$IPositionPredicate;
        field_235806_h_: boolean;
        field_208772_j: boolean;
        field_200959_g: number;
        field_235813_o_: boolean;
        field_222381_j: ResourceLocation;
        field_200958_f: number;
        field_200955_c: boolean;
        field_226895_m_: boolean;
        field_235815_q_: Internal.AbstractBlock$IPositionPredicate;
        field_235800_b_: Internal.Function<Internal.BlockState, Internal.MaterialColor>;
        field_200956_d: Internal.SoundType;
        field_200961_i: number;
        field_235814_p_: Internal.AbstractBlock$IExtendedPositionPredicate<Internal.EntityType<any>>;
        get lootTableSupplier(): java_.util.function_.Supplier<any>;
        set lootTableSupplier(arg0: java_.util.function_.Supplier_<any>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Material, arg1: Internal.MaterialColor);
        constructor(arg0: Internal.Material, arg1: Internal.Function<Internal.BlockState, Internal.MaterialColor>);
    }
    type AbstractBlock$Properties_ = AbstractBlock$Properties;
    class OldItemTooltipEventJS extends Internal.EventJS {
        add(text: Internal.ITextComponent_): void;
        isAdvanced(): boolean;
        getItem(): Internal.ItemStackJS;
        get item(): Internal.ItemStackJS;
        get advanced(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(stack: Internal.ItemStack, lines: Internal.List<Internal.ITextComponent>, a: boolean);
    }
    type OldItemTooltipEventJS_ = OldItemTooltipEventJS;
    class CaveSpiderEntity extends Internal.SpiderEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        static func_234277_m_(): Internal.AttributeModifierMap$MutableAttribute;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.CaveSpiderEntity>, arg1: Internal.World);
    }
    type CaveSpiderEntity_ = CaveSpiderEntity;
    class Future$State extends Internal.Enum<Internal.Future$State> {
        static valueOf(arg0: string): Internal.Future$State;
        static values(): Internal.Future$State[];
        static readonly CANCELLED: Internal.Future$State;
        static readonly SUCCESS: Internal.Future$State;
        static readonly FAILED: Internal.Future$State;
        static readonly RUNNING: Internal.Future$State;
    }
    type Future$State_ = "running" | "success" | "failed" | "cancelled" | Future$State;
    abstract class AbstractSpawner extends Document.Object implements Internal.AccessorAbstractSpawner {
        setMobRotation(arg0: number): void;
        func_177221_b(): BlockPos;
        setSpawnDelay(arg0: number): void;
        func_98278_g(): void;
        func_98279_f(): boolean;
        func_200876_a(arg0: Internal.EntityType_<any>): void;
        func_98268_b(arg0: number): boolean;
        func_98267_a(arg0: number): void;
        getSpawnRange(): number;
        getSpawnDelay(): number;
        getMobRotation(): number;
        botania_isActivated(): boolean;
        func_184994_d(): Internal.Entity;
        func_190895_g(): ResourceLocation;
        func_184993_a(arg0: Internal.WeightedSpawnerEntity): void;
        getSpawnData(): Internal.WeightedSpawnerEntity;
        getSpawnCount(): number;
        func_189530_b(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        botania_resetTimer(): void;
        getSpawnerEntity(): Internal.Entity;
        getMaxNearbyEntities(): number;
        func_177222_d(): number;
        func_98271_a(): Internal.World;
        func_177223_e(): number;
        func_98270_a(arg0: Internal.CompoundNBT_): void;
        setPrevMobRotation(arg0: number): void;
        field_98285_e: Internal.List<Internal.WeightedSpawnerEntity>;
        field_98287_c: number;
        field_98283_g: number;
        field_98293_h: number;
        field_98291_j: Internal.Entity;
        field_98294_i: number;
        field_98292_k: number;
        field_98290_m: number;
        field_98289_l: number;
        field_98286_b: number;
        field_98282_f: Internal.WeightedSpawnerEntity;
        field_98284_d: number;
        get spawnDelay(): number;
        get mobRotation(): number;
        get maxNearbyEntities(): number;
        get spawnData(): Internal.WeightedSpawnerEntity;
        get spawnCount(): number;
        get spawnerEntity(): Internal.Entity;
        get spawnRange(): number;
        set spawnDelay(arg0: number);
        set mobRotation(arg0: number);
        set prevMobRotation(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AbstractSpawner_ = AbstractSpawner;
    interface ICharacterConsumer {
        accept(arg0: number, arg1: Internal.Style, arg2: number): boolean;
        (arg0: number, arg1: Internal.Style, arg2: number): boolean;
    }
    type ICharacterConsumer_ = ((arg0: number, arg1: Internal.Style, arg2: number)=>boolean) | ICharacterConsumer;
    class SkeletonEntity extends Internal.AbstractSkeletonEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.SkeletonEntity>, arg1: Internal.World);
    }
    type SkeletonEntity_ = SkeletonEntity;
    interface AccessorPlayerContainer {
        getCraftResult(): Internal.CraftResultInventory;
        getPlayer(): Internal.PlayerEntity;
        getCraftMatrix(): Internal.CraftingInventory;
    }
    type AccessorPlayerContainer_ = AccessorPlayerContainer;
    class SawingRecipeJS extends Internal.MekanismRecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SawingRecipeJS_ = SawingRecipeJS;
    interface IJeiRuntime {
        getRecipeManager(): Internal.IRecipeManager;
        getIngredientListOverlay(): Internal.IIngredientListOverlay;
        getBookmarkOverlay(): Internal.IBookmarkOverlay;
        getRecipesGui(): Internal.IRecipesGui;
        getIngredientFilter(): Internal.IIngredientFilter;
        getIngredientManager(): Internal.IIngredientManager;
    }
    type IJeiRuntime_ = IJeiRuntime;
    class RenderState$LayerState extends Internal.RenderState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Runnable, arg2: Internal.Runnable);
    }
    type RenderState$LayerState_ = RenderState$LayerState;
    class Color4I extends Internal.Icon {
        redf(): number;
        static rgba(r: number, g: number, b: number, a: number): Internal.Color4I;
        static rgba(col: number): Internal.Color4I;
        rgba(): number;
        addBrightness(percent: number): Internal.Color4I;
        static getChatFormattingColor(formatting: Internal.TextFormatting_): Internal.Color4I;
        static getChatFormattingColor(id: number): Internal.Color4I;
        withAlpha(a: number): Internal.Color4I;
        lerp(col: Internal.Color4I, m: number): Internal.Color4I;
        withTint(col: Internal.Color4I): Internal.Color4I;
        static rgb(col: number): Internal.Color4I;
        static rgb(r: number, g: number, b: number): Internal.Color4I;
        rgb(): number;
        static rgb(color: Vec3): Internal.Color4I;
        redi(): number;
        bluei(): number;
        mutable(): Internal.MutableColor4I;
        bluef(): number;
        copy(): Internal.Color4I;
        drawStatic(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number): void;
        alphaf(): number;
        alphai(): number;
        draw3D(matrixStack: Internal.MatrixStack): void;
        whiteIfEmpty(): Internal.Color4I;
        toStyle(): Internal.Style;
        isMutable(): boolean;
        static hsb(h: number, s: number, b: number): Internal.Color4I;
        withAlphaf(alpha: number): Internal.Color4I;
        static fromJson(element: Internal.JsonElement): Internal.Color4I;
        greenf(): number;
        static get256(id: number): Internal.Color4I;
        static fromString(s: string): Internal.Color4I;
        greeni(): number;
        static readonly RED: Internal.Color4I;
        static readonly GRAY: Internal.Color4I;
        static readonly WHITE: Internal.Color4I;
        static readonly LIGHT_RED: Internal.Color4I;
        static readonly BLUE: Internal.Color4I;
        static readonly LIGHT_BLUE: Internal.Color4I;
        static readonly LIGHT_GREEN: Internal.Color4I;
        static readonly BLACK: Internal.Color4I;
        static readonly DARK_GRAY: Internal.Color4I;
        static readonly GREEN: Internal.Color4I;
    }
    type Color4I_ = Color4I;
    class ClientChatEvent extends net.minecraftforge.eventbus.api.Event {
        getMessage(): string;
        getOriginalMessage(): string;
        setMessage(arg0: string): void;
        get message(): string;
        get originalMessage(): string;
        set message(arg0: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: string);
    }
    type ClientChatEvent_ = ClientChatEvent;
    class NearestPlayersSensor extends Internal.Sensor<Internal.LivingEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type NearestPlayersSensor_ = NearestPlayersSensor;
    interface ITeleporter {
        getPortalInfo(arg0: Internal.Entity, arg1: Internal.ServerWorld, arg2: Internal.Function_<Internal.ServerWorld_, Internal.PortalInfo_>): Internal.PortalInfo;
        isVanilla(): boolean;
        playTeleportSound(arg0: Internal.ServerPlayerEntity, arg1: Internal.ServerWorld, arg2: Internal.ServerWorld): boolean;
        placeEntity(arg0: Internal.Entity, arg1: Internal.ServerWorld, arg2: Internal.ServerWorld, arg3: number, arg4: Internal.Function_<boolean, Internal.Entity_>): Internal.Entity;
    }
    type ITeleporter_ = ITeleporter;
    class PlayerProfileCache extends Document.Object {
        func_242116_a(): Internal.List<Internal.PlayerProfileCache$ProfileEntry>;
        static func_187320_a(arg0: boolean): void;
        func_152658_c(): void;
        func_152649_a(arg0: Internal.GameProfile): void;
        func_152655_a(arg0: string): Internal.GameProfile;
        func_152652_a(arg0: Internal.UUID): Internal.GameProfile;
        readonly field_152661_c: Internal.Map<string, Internal.PlayerProfileCache$ProfileEntry>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.GameProfileRepository, arg1: Internal.File);
    }
    type PlayerProfileCache_ = PlayerProfileCache;
    class DataPoint extends Document.Object implements Internal.Comparable<Internal.DataPoint> {
        func_219942_a(): number;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.DataPoint): number;
        readonly field_223511_c: number;
        readonly field_219945_c: string;
        readonly field_219944_b: number;
        readonly field_219943_a: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: number, arg2: number, arg3: number);
    }
    type DataPoint_ = DataPoint;
    class Style extends Document.Object {
        func_240713_a_(arg0: boolean): Internal.Style;
        func_240719_a_(arg0: ResourceLocation_): Internal.Style;
        func_240715_a_(arg0: Internal.ClickEvent): Internal.Style;
        func_240717_a_(arg0: Internal.Style): Internal.Style;
        func_150229_g(): boolean;
        func_240711_a_(): Internal.Color;
        func_179986_j(): string;
        setUnderlined(arg0: boolean): Internal.Style;
        func_150242_c(): boolean;
        func_240721_b_(arg0: Internal.TextFormatting_): Internal.Style;
        func_150223_b(): boolean;
        func_240716_a_(arg0: Internal.HoverEvent): Internal.Style;
        func_240720_a_(...arg0: Internal.TextFormatting[]): Internal.Style;
        func_240714_a_(arg0: string): Internal.Style;
        func_240718_a_(arg0: Internal.Color): Internal.Style;
        func_240712_a_(arg0: Internal.TextFormatting_): Internal.Style;
        func_240729_k_(): ResourceLocation;
        setStrikethrough(arg0: boolean): Internal.Style;
        func_150210_i(): Internal.HoverEvent;
        func_150233_f(): boolean;
        func_150234_e(): boolean;
        func_244282_c(arg0: boolean): Internal.Style;
        func_150236_d(): boolean;
        func_150235_h(): Internal.ClickEvent;
        func_240723_c_(arg0: Internal.TextFormatting_): Internal.Style;
        func_240722_b_(arg0: boolean): Internal.Style;
        setObfuscated(arg0: boolean): Internal.Style;
        readonly field_150245_d: boolean;
        readonly field_150243_f: boolean;
        static readonly field_240708_a_: ResourceLocation;
        static readonly field_240709_b_: Internal.Style;
        readonly field_150248_c: boolean;
        readonly field_150246_e: boolean;
        readonly field_150244_g: boolean;
        set underlined(arg0: boolean);
        set strikethrough(arg0: boolean);
        set obfuscated(arg0: boolean);
    }
    type Style_ = Style;
    class HoverPhase extends Internal.Phase {
        func_188652_i(): Internal.PhaseType<Internal.HoverPhase>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type HoverPhase_ = HoverPhase;
    class EntitySize extends Document.Object {
        static func_220314_b(arg0: number, arg1: number): Internal.EntitySize;
        func_220313_a(arg0: number): Internal.EntitySize;
        static func_220311_c(arg0: number, arg1: number): Internal.EntitySize;
        func_220312_a(arg0: number, arg1: number): Internal.EntitySize;
        func_242286_a(arg0: Vec3): Internal.AxisAlignedBB;
        func_242285_a(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        readonly field_220317_c: boolean;
        readonly field_220316_b: number;
        readonly field_220315_a: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: boolean);
    }
    type EntitySize_ = EntitySize;
    class MusicTicker extends Document.Object {
        func_239539_a_(arg0: Internal.BackgroundMusicSelector): void;
        func_239540_b_(arg0: Internal.BackgroundMusicSelector): boolean;
        func_209200_a(): void;
        func_73660_a(): void;
        handler$zok000$be_onTick(arg0: Internal.CallbackInfo): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type MusicTicker_ = MusicTicker;
    interface Stroke {
        createStrokedShape(arg0: Internal.Shape): Internal.Shape;
        (arg0: Internal.Shape): Internal.Shape;
    }
    type Stroke_ = ((arg0: Internal.Shape)=>Internal.Shape) | Stroke;
    abstract class DelegatingDynamicOps <T> extends Document.Object implements Internal.DynamicOps<T> {
        updateGeneric(arg0: T, arg1: T, arg2: Internal.Function_<T, T>): T;
        listBuilder(): Internal.ListBuilder<T>;
        createIntList(arg0: Internal.IntStream): T;
        createLong(arg0: number): T;
        createDouble(arg0: number): T;
        createLongList(arg0: Internal.LongStream): T;
        createShort(arg0: number): T;
        mergeToList(arg0: T, arg1: T): Internal.DataResult<T>;
        mergeToList(arg0: T, arg1: Internal.List<T>): Internal.DataResult<T>;
        update(arg0: T, arg1: string, arg2: Internal.Function_<T, T>): T;
        createByteList(arg0: Internal.ByteBuffer): T;
        getByteBuffer(arg0: T): Internal.DataResult<Internal.ByteBuffer>;
        withDecoder<E_>(arg0: Internal.Decoder_<E_>): Internal.Function<T, Internal.DataResult<Internal.Pair<E_, T>>>;
        createBoolean(arg0: boolean): T;
        remove(arg0: T, arg1: string): T;
        getMapValues(arg0: T): Internal.DataResult<Internal.Stream<Internal.Pair<T, T>>>;
        empty(): T;
        withParser<E_>(arg0: Internal.Decoder_<E_>): Internal.Function<T, Internal.DataResult<E_>>;
        mergeToMap(arg0: T, arg1: T, arg2: T): Internal.DataResult<T>;
        mergeToMap(arg0: T, arg1: Internal.MapLike<T>): Internal.DataResult<T>;
        mergeToMap(arg0: T, arg1: Internal.Map_<T, T>): Internal.DataResult<T>;
        convertList<U_>(arg0: Internal.DynamicOps<U_>, arg1: T): U_;
        emptyList(): T;
        getIntStream(arg0: T): Internal.DataResult<Internal.IntStream>;
        getList(arg0: T): Internal.DataResult<Internal.Consumer<Internal.Consumer<T>>>;
        get(arg0: T, arg1: string): Internal.DataResult<T>;
        getLongStream(arg0: T): Internal.DataResult<Internal.LongStream>;
        emptyMap(): T;
        getMapEntries(arg0: T): Internal.DataResult<Internal.Consumer<Internal.BiConsumer<T, T>>>;
        getBooleanValue(arg0: T): Internal.DataResult<boolean>;
        createNumeric(arg0: Internal.Number): T;
        getStream(arg0: T): Internal.DataResult<Internal.Stream<T>>;
        convertMap<U_>(arg0: Internal.DynamicOps<U_>, arg1: T): U_;
        mergeToPrimitive(arg0: T, arg1: T): Internal.DataResult<T>;
        getStringValue(arg0: T): Internal.DataResult<string>;
        createList(arg0: Internal.Stream<T>): T;
        withEncoder<E_>(arg0: Internal.Encoder_<E_>): Internal.Function<E_, Internal.DataResult<T>>;
        set(arg0: T, arg1: string, arg2: T): T;
        getGeneric(arg0: T, arg1: T): Internal.DataResult<T>;
        createString(arg0: string): T;
        convertTo<U_>(arg0: Internal.DynamicOps<U_>, arg1: T): U_;
        createMap(arg0: Internal.Stream<Internal.Pair<T, T>>): T;
        createMap(arg0: Internal.Map_<T, T>): T;
        mapBuilder(): Internal.RecordBuilder<T>;
        getMap(arg0: T): Internal.DataResult<Internal.MapLike<T>>;
        createByte(arg0: number): T;
        createFloat(arg0: number): T;
        createInt(arg0: number): T;
        compressMaps(): boolean;
        getNumberValue(arg0: T): Internal.DataResult<Internal.Number>;
        getNumberValue(arg0: T, arg1: Internal.Number): Internal.Number;
    }
    type DelegatingDynamicOps_<T> = DelegatingDynamicOps<T>;
    class PiglinBruteSpecificSensor extends Internal.Sensor<Internal.LivingEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PiglinBruteSpecificSensor_ = PiglinBruteSpecificSensor;
    class CCreativeInventoryActionPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149625_d(): Internal.ItemStack;
        func_149627_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.ItemStack);
    }
    type CCreativeInventoryActionPacket_ = CCreativeInventoryActionPacket;
    class EntityViewRenderEvent$CameraSetup extends Internal.EntityViewRenderEvent {
        setRoll(arg0: number): void;
        getYaw(): number;
        getPitch(): number;
        getRoll(): number;
        setPitch(arg0: number): void;
        setYaw(arg0: number): void;
        get roll(): number;
        get pitch(): number;
        get yaw(): number;
        set roll(arg0: number);
        set pitch(arg0: number);
        set yaw(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.GameRenderer, arg1: Internal.ActiveRenderInfo, arg2: number, arg3: number, arg4: number, arg5: number);
    }
    type EntityViewRenderEvent$CameraSetup_ = EntityViewRenderEvent$CameraSetup;
    class SpriteQuery extends Internal.TextureQuery {
        resolveSprite(): Internal.SpriteSheetResource;
        static of(arg0: Internal.SpriteSheetResource): Internal.SpriteQuery;
        getRows(): number;
        getColumns(): number;
        get columns(): number;
        get rows(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: number, arg2: number, arg3: string[]);
    }
    type SpriteQuery_ = SpriteQuery;
    class ChunkSection extends Document.Object implements Internal.ExtendedChunkSection {
        func_222633_j(): number;
        func_235962_a_(arg0: Internal.Predicate_<Internal.BlockState_>): boolean;
        getKnownTransparency(arg0: number): number;
        func_222629_a(arg0: number, arg1: number, arg2: number, arg3: Internal.BlockState): Internal.BlockState;
        func_186049_g(): Internal.PalettedContainer<Internal.BlockState>;
        func_222635_a(): void;
        func_222634_a(arg0: Internal.PacketBuffer): void;
        func_76663_a(): boolean;
        func_177485_a(arg0: number, arg1: number, arg2: number): Internal.BlockState;
        func_177484_a(arg0: number, arg1: number, arg2: number, arg3: Internal.BlockState, arg4: boolean): Internal.BlockState;
        func_76675_b(): boolean;
        func_76672_e(): void;
        static func_222628_a(arg0: Internal.ChunkSection): boolean;
        func_222632_g(): number;
        func_222637_b(): void;
        func_222630_b(arg0: Internal.PacketBuffer): void;
        hasOpaqueBlocks(): boolean;
        func_206915_b(): boolean;
        func_206914_b(arg0: number, arg1: number, arg2: number): Internal.FluidState;
        func_206917_d(): boolean;
        getBitsetForColumn(arg0: number, arg1: number): number;
        readonly field_177488_d: Internal.PalettedContainer<Internal.BlockState>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type ChunkSection_ = ChunkSection;
    class Object2IntOpenHashMap <K> extends Internal.AbstractObject2IntMap<K> implements Internal.Serializable, Internal.Cloneable, Internal.Hash {
        object2IntEntrySet(): Internal.ObjectSet<any>;
        object2IntEntrySet(): Internal.Object2IntMap$FastEntrySet<K>;
        computeIntIfAbsentPartial(arg0: K, arg1: Internal.Object2IntFunction_<K>): number;
        getOrDefault(arg0: any, arg1: number): number;
        getOrDefault(arg0: any, arg1: any): any;
        applyAsInt(arg0: K): number;
        entrySet(): Internal.Set<any>;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<K, number>>;
        apply(arg0: K): number;
        forEach(arg0: Internal.BiConsumer_<K, number>): void;
        computeIfAbsent(arg0: K, arg1: Internal.Function_<K, number>): number;
        values(): Internal.Collection<any>;
        replace(arg0: K, arg1: number, arg2: number): boolean;
        replace(arg0: K, arg1: number): number;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        replaceAll(arg0: Internal.BiFunction_<K, number, number>): void;
        containsValue(arg0: any): boolean;
        andThen<V_>(arg0: Internal.Function_<number, V_>): Internal.Function<K, V_>;
        put(arg0: any, arg1: any): any;
        put(arg0: K, arg1: number): number;
        remove(arg0: any): number;
        remove(arg0: any): any;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: K, arg1: Internal.BiFunction_<K, number, number>): number;
        computeIfPresent(arg0: K, arg1: Internal.BiFunction_<K, number, number>): number;
        trim(): boolean;
        trim(arg0: number): boolean;
        compose<V_>(arg0: Internal.Function_<V_, K>): Internal.Function<V_, number>;
        merge(arg0: K, arg1: number, arg2: Internal.BiFunction_<number, number, number>): number;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        get(arg0: any): any;
        get(arg0: any): number;
        clone(): Internal.Object2IntOpenHashMap<K>;
        clone(): any;
        addTo(arg0: K, arg1: number): number;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: K, arg1: number): number;
        keySet(): Internal.Set<any>;
        keySet(): Internal.ObjectSet<K>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<K, number>);
        constructor(arg0: Internal.Object2IntMap<K>, arg1: number);
        constructor(arg0: Internal.Object2IntMap<K>);
        constructor(arg0: K[], arg1: number[], arg2: number);
        constructor(arg0: K[], arg1: number[]);
        constructor(arg0: number, arg1: number);
        constructor(arg0: number);
        constructor();
        constructor(arg0: Internal.Map<K, number>, arg1: number);
    }
    type Object2IntOpenHashMap_<K> = Object2IntOpenHashMap<K>;
    abstract class VoxelShape extends Document.Object implements Internal.VoxelShapeAccess {
        setFaces(arg0: Internal.VoxelShape[]): void;
        func_197756_d(): Internal.List<Internal.AxisAlignedBB>;
        func_197758_c(arg0: Internal.Direction$Axis_): number;
        getFaces(): Internal.VoxelShape[];
        func_197753_c(): Internal.VoxelShape;
        func_197754_a(arg0: Internal.VoxelShapes$ILineConsumer_): void;
        getShape(): Internal.VoxelShapePart;
        func_197757_a(arg0: Internal.Direction$Axis_): Internal.DoubleList;
        func_197766_b(): boolean;
        func_197755_b(arg0: Internal.VoxelShapes$ILineConsumer_): void;
        func_197751_a(arg0: number, arg1: number, arg2: number): Internal.VoxelShape;
        func_197760_b(arg0: Internal.Direction$Axis_, arg1: number, arg2: number): number;
        setShape(arg0: Internal.VoxelShapePart): void;
        func_197762_b(arg0: Internal.Direction$Axis_): number;
        func_197752_a(): Internal.AxisAlignedBB;
        func_212430_a(arg0: Internal.Direction$Axis_, arg1: Internal.AxisAlignedBB, arg2: number): number;
        func_212431_a(arg0: Internal.AxisRotation_, arg1: Internal.AxisAlignedBB, arg2: number): number;
        func_212434_a(arg0: Internal.Direction_): Internal.VoxelShape;
        func_212433_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos): Internal.BlockRayTraceResult;
        func_211542_b(arg0: number, arg1: number, arg2: number): boolean;
        field_197768_g: Internal.VoxelShapePart;
        get shape(): Internal.VoxelShapePart;
        get faces(): Internal.VoxelShape[];
        set shape(arg0: Internal.VoxelShapePart);
        set faces(arg0: Internal.VoxelShape[]);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.VoxelShapePart);
    }
    type VoxelShape_ = VoxelShape;
    interface ITickableComponent extends Internal.IMachineComponent {
        serverTick(): void;
        clientTick(): void;
    }
    type ITickableComponent_ = ITickableComponent;
    class SlotType extends Document.Object {
        static init(): void;
        static isValidName(arg0: string): boolean;
        getPrefix(): string;
        static read(arg0: Internal.PacketBuffer): Internal.SlotType;
        getName(): string;
        getDisplayName(): Internal.ITextComponent;
        static getAllSlotTypes(): Internal.Collection<Internal.SlotType>;
        static getOrCreate(arg0: string): Internal.SlotType;
        getColor(): Internal.Color;
        static create(arg0: string, arg1: number): Internal.SlotType;
        write(arg0: Internal.PacketBuffer): void;
        static getIfPresent(arg0: string): Internal.SlotType;
        static readonly DEFENSE: Internal.SlotType;
        static readonly SOUL: Internal.SlotType;
        static readonly ABILITY: Internal.SlotType;
        static readonly UPGRADE: Internal.SlotType;
        get color(): Internal.Color;
        get prefix(): string;
        get displayName(): Internal.ITextComponent;
        get name(): string;
        get allSlotTypes(): Internal.Collection<Internal.SlotType>;
    }
    type SlotType_ = SlotType;
    interface WritableRenderedImage extends Internal.RenderedImage {
        getWritableTileIndices(): Internal.Point[];
        getWritableTile(arg0: number, arg1: number): Internal.WritableRaster;
        removeTileObserver(arg0: Internal.TileObserver_): void;
        setData(arg0: Internal.Raster): void;
        hasTileWriters(): boolean;
        isTileWritable(arg0: number, arg1: number): boolean;
        releaseWritableTile(arg0: number, arg1: number): void;
        addTileObserver(arg0: Internal.TileObserver_): void;
    }
    type WritableRenderedImage_ = WritableRenderedImage;
    class FluidIngredient extends Document.Object implements Internal.Predicate<Internal.FluidStack> {
        getFluids(): Internal.FluidStack[];
        toJson(): Internal.JsonElement;
        or(arg0: Internal.Predicate_<Internal.FluidStack_>): Internal.Predicate<Internal.FluidStack>;
        test(arg0: any): boolean;
        test(arg0: Internal.FluidStack): boolean;
        static valueFromJson(arg0: Internal.JsonObject): Internal.FluidIngredient$IFluidList;
        and(arg0: Internal.Predicate_<Internal.FluidStack_>): Internal.Predicate<Internal.FluidStack>;
        negate(): Internal.Predicate<Internal.FluidStack>;
        static of(...arg0: Internal.FluidStack[]): Internal.FluidIngredient;
        static of(arg0: Internal.Stream<Internal.FluidStack>): Internal.FluidIngredient;
        static of(arg0: Internal.ITag<Internal.Fluid>, arg1: number): Internal.FluidIngredient;
        isEmpty(): boolean;
        static fromJson(arg0: Internal.JsonElement): Internal.FluidIngredient;
        static fromValues(arg0: Internal.Stream<Internal.FluidIngredient$IFluidList>): Internal.FluidIngredient;
        static fromNetwork(arg0: Internal.PacketBuffer): Internal.FluidIngredient;
        toNetwork(arg0: Internal.PacketBuffer): void;
        static readonly EMPTY: Internal.FluidIngredient;
        get fluids(): Internal.FluidStack[];
        get empty(): boolean;
    }
    type FluidIngredient_ = FluidIngredient;
    class Material extends Document.Object {
        func_76217_h(): boolean;
        func_76222_j(): boolean;
        func_186274_m(): Internal.PushReaction;
        func_76224_d(): boolean;
        func_76218_k(): boolean;
        func_151565_r(): Internal.MaterialColor;
        func_76230_c(): boolean;
        func_76220_a(): boolean;
        static readonly field_215711_w: Internal.Material;
        static readonly field_204868_h: Internal.Material;
        static readonly field_151588_w: Internal.Material;
        static readonly field_151589_v: Internal.Material;
        static readonly field_189963_J: Internal.Material;
        static readonly field_151569_G: Internal.Material;
        static readonly field_151593_r: Internal.Material;
        static readonly field_151594_q: Internal.Material;
        static readonly field_151591_t: Internal.Material;
        static readonly field_151595_p: Internal.Material;
        static readonly field_151590_u: Internal.Material;
        static readonly field_151592_s: Internal.Material;
        static readonly field_76233_E: Internal.Material;
        static readonly field_175972_I: Internal.Material;
        static readonly field_151579_a: Internal.Material;
        static readonly field_151577_b: Internal.Material;
        static readonly field_151575_d: Internal.Material;
        static readonly field_151573_f: Internal.Material;
        static readonly field_151566_D: Internal.Material;
        static readonly field_151578_c: Internal.Material;
        static readonly field_151576_e: Internal.Material;
        static readonly field_151574_g: Internal.Material;
        static readonly field_151567_E: Internal.Material;
        static readonly field_151568_F: Internal.Material;
        static readonly field_151570_A: Internal.Material;
        static readonly field_203243_f: Internal.Material;
        static readonly field_151571_B: Internal.Material;
        static readonly field_203244_i: Internal.Material;
        static readonly field_151572_C: Internal.Material;
        static readonly field_151597_y: Internal.Material;
        static readonly field_151596_z: Internal.Material;
        static readonly field_237214_y_: Internal.Material;
        static readonly field_151598_x: Internal.Material;
        static readonly field_242934_h: Internal.Material;
        static readonly field_151582_l: Internal.Material;
        static readonly field_151586_h: Internal.Material;
        static readonly field_215713_z: Internal.Material;
        static readonly field_151580_n: Internal.Material;
        static readonly field_151584_j: Internal.Material;
        static readonly field_151585_k: Internal.Material;
        static readonly field_151587_i: Internal.Material;
        static readonly field_151581_o: Internal.Material;
        static readonly field_151583_m: Internal.Material;
        static readonly field_215712_y: Internal.Material;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MaterialColor, arg1: boolean, arg2: boolean, arg3: boolean, arg4: boolean, arg5: boolean, arg6: boolean, arg7: Internal.PushReaction);
    }
    type Material_ = Material;
    class GenericLootEventJS extends Internal.LootEventJS {
        addGeneric(id: ResourceLocation_, b: Internal.Consumer_<Internal.LootBuilder_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(c: Internal.Map<ResourceLocation, Internal.JsonElement>);
    }
    type GenericLootEventJS_ = GenericLootEventJS;
    class ChickenEntity extends Internal.AnimalEntity implements net.mehvahdjukaar.supplementaries.mixins.accessors.ChickenEntityAccessor, Internal.ChickenEntityAccessor, Internal.IEggLayingEntity {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        static func_234187_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEggLayingSound(): Internal.SoundEvent;
        getEggTimer(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_152117_i(arg0: boolean): void;
        getNextEggTime(arg0: Internal.Random): number;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.ChickenEntity;
        setEggTimer(arg0: number): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        isBirdJockey(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        static setFoodItems_$md$e571c7$0(arg0: Internal.Ingredient): void;
        getEntity(): Internal.Entity;
        static setFoodItems_$md$e571c7$2(arg0: Internal.Ingredient): void;
        asKJS(): any;
        canRiderInteract(): boolean;
        static getFoodItems_$md$e571c7$1(): Internal.Ingredient;
        func_152116_bZ(): boolean;
        getEggItem(): Internal.Item;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        static getFoodItems_$md$e571c7$3(): Internal.Ingredient;
        field_70888_h: number;
        field_70889_i: number;
        field_70887_j: number;
        field_152118_bv: boolean;
        field_70883_f: number;
        field_70886_e: number;
        field_70884_g: number;
        get foodItems_$md$e571c7$3(): Internal.Ingredient;
        get foodItems_$md$e571c7$1(): Internal.Ingredient;
        get eggLayingSound(): Internal.SoundEvent;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get eggTimer(): number;
        get entity(): Internal.Entity;
        get eggItem(): Internal.Item;
        get birdJockey(): boolean;
        set foodItems_$md$e571c7$2(arg0: Internal.Ingredient);
        set foodItems_$md$e571c7$0(arg0: Internal.Ingredient);
        set eggTimer(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ChickenEntity>, arg1: Internal.World);
    }
    type ChickenEntity_ = ChickenEntity;
    interface TileTypeAccess {
        getValidBlocks(): Internal.Set<Internal.Block>;
        (): Internal.Set<Internal.Block>;
    }
    type TileTypeAccess_ = (()=>Internal.Set<Internal.Block>) | TileTypeAccess;
    class DisplayMode extends Document.Object {
        getRefreshRate(): number;
        getHeight(): number;
        getBitDepth(): number;
        equals(arg0: Internal.DisplayMode): boolean;
        getWidth(): number;
        static readonly BIT_DEPTH_MULTI: -1;
        static readonly REFRESH_RATE_UNKNOWN: 0;
        get refreshRate(): number;
        get bitDepth(): number;
        get width(): number;
        get height(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type DisplayMode_ = DisplayMode;
    abstract class Charset extends Document.Object implements Internal.Comparable<Internal.Charset> {
        encode(arg0: Internal.CharBuffer): Internal.ByteBuffer;
        encode(arg0: string): Internal.ByteBuffer;
        aliases(): Internal.Set<string>;
        static forName(arg0: string, arg1: Internal.Charset): Internal.Charset;
        static forName(arg0: string): Internal.Charset;
        displayName(arg0: Internal.Locale): string;
        displayName(): string;
        newDecoder(): Internal.CharsetDecoder;
        static defaultCharset(): Internal.Charset;
        static isSupported(arg0: string): boolean;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.Charset): number;
        decode(arg0: Internal.ByteBuffer): Internal.CharBuffer;
        contains(arg0: Internal.Charset): boolean;
        canEncode(): boolean;
        newEncoder(): Internal.CharsetEncoder;
        name(): string;
        isRegistered(): boolean;
        static availableCharsets(): Internal.SortedMap<string, Internal.Charset>;
        get registered(): boolean;
    }
    type Charset_ = Charset;
    class BlockStateFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236455_a_: Internal.Codec<Internal.BlockStateFeatureConfig>;
        readonly field_227270_a_: Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockState);
    }
    type BlockStateFeatureConfig_ = BlockStateFeatureConfig;
    class DataPackRegistries extends Document.Object implements Internal.AutoCloseable {
        func_240965_c_(): Internal.LootTableManager;
        func_240971_i_(): void;
        func_240968_f_(): Internal.Commands;
        func_240967_e_(): Internal.RecipeManager;
        func_240970_h_(): Internal.IResourceManager;
        func_240969_g_(): Internal.AdvancementManager;
        func_240964_b_(): Internal.LootPredicateManager;
        func_244358_d(): Internal.ITagCollectionSupplier;
        func_240960_a_(): Internal.FunctionReloader;
        close(): void;
        static func_240961_a_(arg0: Internal.List<Internal.IResourcePack>, arg1: Internal.Commands$EnvironmentType_, arg2: number, arg3: Internal.Executor_, arg4: Internal.Executor_): Internal.CompletableFuture<Internal.DataPackRegistries>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Commands$EnvironmentType, arg1: number);
    }
    type DataPackRegistries_ = DataPackRegistries;
    interface IHasTranslationKey {
        getTranslationKey(): string;
        (): string;
    }
    type IHasTranslationKey_ = (()=>string) | IHasTranslationKey;
    interface DataOutput {
        writeChar(arg0: number): void;
        writeInt(arg0: number): void;
        writeLong(arg0: number): void;
        writeByte(arg0: number): void;
        writeBytes(arg0: string): void;
        writeUTF(arg0: string): void;
        writeShort(arg0: number): void;
        writeChars(arg0: string): void;
        writeFloat(arg0: number): void;
        write(arg0: number[], arg1: number, arg2: number): void;
        write(arg0: number[]): void;
        write(arg0: number): void;
        writeBoolean(arg0: boolean): void;
        writeDouble(arg0: number): void;
    }
    type DataOutput_ = DataOutput;
    interface IStarlightSource <T> extends Internal.IStarlightTransmission<T> {
        provideTransmissionNode(arg0: BlockPos): T;
        provideTransmissionNode(arg0: BlockPos): Internal.IPrismTransmissionNode;
        needsToRefreshNetworkChain(): boolean;
        provideNewSourceNode(): Internal.IIndependentStarlightSource;
        provideSourceNode(arg0: BlockPos): T;
        markChainRebuilt(): void;
    }
    type IStarlightSource_<T> = IStarlightSource<T>;
    class NearestLivingEntitiesSensor extends Internal.Sensor<Internal.LivingEntity> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type NearestLivingEntitiesSensor_ = NearestLivingEntitiesSensor;
    interface BidirectionalIterator <K> extends Internal.Iterator<K> {
        previous(): K;
        hasPrevious(): boolean;
    }
    type BidirectionalIterator_<K> = BidirectionalIterator<K>;
    abstract class TypeParameter <T> extends Internal.TypeCapture<T> {
    }
    type TypeParameter_<T> = TypeParameter<T>;
    interface BiomeAccess {
    }
    type BiomeAccess_ = BiomeAccess;
    class PlayerAdvancementEventJS extends Internal.PlayerEventJS {
        getAdvancement(): Internal.AdvancementJS;
        get advancement(): Internal.AdvancementJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.ServerPlayerEntity, advancement: Internal.Advancement);
    }
    type PlayerAdvancementEventJS_ = PlayerAdvancementEventJS;
    class TimerCallbackManager <T> extends Document.Object {
        func_227574_a_(): Internal.Set<string>;
        func_216327_b(): Internal.ListNBT;
        func_216331_a(arg0: T, arg1: number): void;
        func_227576_a_(arg0: string, arg1: number, arg2: Internal.ITimerCallback_<T>): void;
        func_227575_a_(arg0: string): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
        constructor(arg0: any, arg1: Internal.Stream<Internal.Dynamic<Internal.INBT>>);
    }
    type TimerCallbackManager_<T> = TimerCallbackManager<T>;
    class SceneBuilderJS extends Document.Object implements Internal.ISceneBuilderJS {
        showBasePlate(): void;
        addKeyframe(): void;
        getWorld(): Internal.SceneBuilderJS$WorldInstructionsJS;
        setSceneOffsetY(arg0: number): void;
        debug(): Internal.SceneBuilder$DebugInstructions;
        overlay(): Internal.SceneBuilder$OverlayInstructions;
        idle(arg0: number): void;
        getInternal(): Internal.SceneBuilder;
        markAsFinished(): void;
        configureBasePlate(arg0: number, arg1: number, arg2: number): void;
        title(arg0: string, arg1: string): void;
        addLazyKeyframe(): void;
        special(): Internal.SceneBuilderJS$SpecialInstructionsJS;
        getEffects(): Internal.SceneBuilder$EffectInstructions;
        effects(): Internal.SceneBuilder$EffectInstructions;
        idleSeconds(arg0: number): void;
        world(): Internal.SceneBuilderJS$WorldInstructionsJS;
        getDebug(): Internal.SceneBuilder$DebugInstructions;
        getSpecial(): Internal.SceneBuilderJS$SpecialInstructionsJS;
        getOverlay(): Internal.SceneBuilder$OverlayInstructions;
        rotateCameraY(arg0: number): void;
        scaleSceneView(arg0: number): void;
        worldInstructionsJS: Internal.LazyValue<Internal.SceneBuilderJS$WorldInstructionsJS>;
        readonly internal: Internal.SceneBuilder;
        specialInstructionsJS: Internal.LazyValue<Internal.SceneBuilderJS$SpecialInstructionsJS>;
        set sceneOffsetY(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SceneBuilder);
    }
    type SceneBuilderJS_ = SceneBuilderJS;
    class ToolStatId extends ResourceLocation {
        static tryCreate(arg0: string): Internal.ToolStatId;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor(arg0: ResourceLocation);
        constructor(arg0: string, arg1: string);
    }
    type ToolStatId_ = ToolStatId;
    class CUpdateBeaconPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_210356_b(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_210355_a(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number);
    }
    type CUpdateBeaconPacket_ = CUpdateBeaconPacket;
    class FMLClientSetupEvent extends Internal.ParallelDispatchEvent {
        getMinecraftSupplier(): java_.util.function_.Supplier<Internal.Minecraft>;
        get minecraftSupplier(): java_.util.function_.Supplier<Internal.Minecraft>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: any);
    }
    type FMLClientSetupEvent_ = FMLClientSetupEvent;
    class BiDiPair <K, V> extends Document.Object {
        getRight(): V;
        getLeft(): K;
        get left(): K;
        get right(): V;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: K, arg1: V);
    }
    type BiDiPair_<K, V> = BiDiPair<K, V>;
    class ShaderDefault extends Document.Object {
        func_148081_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_148092_b(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_148083_a(arg0: number, arg1: number, arg2: number, arg3: number): void;
        func_148097_a(arg0: number[]): void;
        func_148087_a(arg0: number, arg1: number): void;
        func_148095_a(arg0: number, arg1: number, arg2: number): void;
        func_195652_a(arg0: Internal.Matrix4f): void;
        func_148090_a(arg0: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ShaderDefault_ = ShaderDefault;
    class DoubleSummaryStatistics extends Document.Object implements Internal.DoubleConsumer {
        getMin(): number;
        getMax(): number;
        getAverage(): number;
        getSum(): number;
        getCount(): number;
        andThen(arg0: Internal.DoubleConsumer_): Internal.DoubleConsumer;
        combine(arg0: Internal.DoubleSummaryStatistics): void;
        accept(arg0: number): void;
        get average(): number;
        get min(): number;
        get max(): number;
        get count(): number;
        get sum(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type DoubleSummaryStatistics_ = DoubleSummaryStatistics;
    class SWindowPropertyPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_149180_e(): number;
        func_149181_d(): number;
        func_149182_c(): number;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type SWindowPropertyPacket_ = SWindowPropertyPacket;
    class LootContext$Builder extends Document.Object {
        func_216023_a(arg0: Internal.Random): Internal.LootContext$Builder;
        func_216022_a(arg0: Internal.LootParameterSet): Internal.LootContext;
        func_216021_b<T_>(arg0: Internal.LootParameter<T_>, arg1: T_): Internal.LootContext$Builder;
        func_216020_a(arg0: number, arg1: Internal.Random): Internal.LootContext$Builder;
        func_216016_a(arg0: number): Internal.LootContext$Builder;
        func_216015_a<T_>(arg0: Internal.LootParameter<T_>, arg1: T_): Internal.LootContext$Builder;
        func_216024_a<T_>(arg0: Internal.LootParameter<T_>): T_;
        func_216019_b<T_>(arg0: Internal.LootParameter<T_>): T_;
        func_186469_a(arg0: number): Internal.LootContext$Builder;
        func_216018_a(): Internal.ServerWorld;
        func_216017_a(arg0: ResourceLocation_, arg1: Internal.LootContext$IDynamicDropProvider_): Internal.LootContext$Builder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ServerWorld);
        constructor(arg0: Internal.LootContext);
    }
    type LootContext$Builder_ = LootContext$Builder;
    class GuiScreenEvent$MouseReleasedEvent$Pre extends Internal.GuiScreenEvent$MouseReleasedEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number);
    }
    type GuiScreenEvent$MouseReleasedEvent$Pre_ = GuiScreenEvent$MouseReleasedEvent$Pre;
    abstract class BiomeProvider extends Document.Object implements Internal.BiomeManager$IBiomeReader, Internal.BiomeProviderInvoker {
        repurposedstructures_callCodec(): Internal.Codec<any>;
        func_230321_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.Predicate_<Internal.Biome_>, arg6: Internal.Random, arg7: boolean): BlockPos;
        func_225530_a_(arg0: number, arg1: number, arg2: number, arg3: number): Internal.Set<Internal.Biome>;
        func_225531_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Predicate_<Internal.Biome_>, arg5: Internal.Random): BlockPos;
        func_235203_c_(): Internal.List<Internal.Biome>;
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_230320_a_(arg0: number): Internal.BiomeProvider;
        func_205004_a(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>): boolean;
        func_205706_b(): Internal.Set<Internal.BlockState>;
        static readonly field_235202_a_: Internal.Codec<Internal.BiomeProvider>;
    }
    type BiomeProvider_ = BiomeProvider;
    class SChangeGameStatePacket$State extends Document.Object {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type SChangeGameStatePacket$State_ = SChangeGameStatePacket$State;
    abstract class CharsetDecoder extends Document.Object {
        averageCharsPerByte(): number;
        charset(): Internal.Charset;
        maxCharsPerByte(): number;
        onUnmappableCharacter(arg0: Internal.CodingErrorAction): Internal.CharsetDecoder;
        isCharsetDetected(): boolean;
        decode(arg0: Internal.ByteBuffer): Internal.CharBuffer;
        decode(arg0: Internal.ByteBuffer, arg1: Internal.CharBuffer, arg2: boolean): Internal.CoderResult;
        isAutoDetecting(): boolean;
        unmappableCharacterAction(): Internal.CodingErrorAction;
        detectedCharset(): Internal.Charset;
        malformedInputAction(): Internal.CodingErrorAction;
        flush(arg0: Internal.CharBuffer): Internal.CoderResult;
        onMalformedInput(arg0: Internal.CodingErrorAction): Internal.CharsetDecoder;
        reset(): Internal.CharsetDecoder;
        replacement(): string;
        replaceWith(arg0: string): Internal.CharsetDecoder;
        get autoDetecting(): boolean;
        get charsetDetected(): boolean;
    }
    type CharsetDecoder_ = CharsetDecoder;
    interface WorldRendererAccess {
        callRenderHitOutline(arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.Entity, arg3: number, arg4: number, arg5: number, arg6: BlockPos, arg7: Internal.BlockState): void;
        (arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.Entity, arg3: number, arg4: number, arg5: number, arg6: BlockPos, arg7: Internal.BlockState): void;
    }
    type WorldRendererAccess_ = ((arg0: Internal.MatrixStack, arg1: Internal.IVertexBuilder, arg2: Internal.Entity, arg3: number, arg4: number, arg5: number, arg6: BlockPos, arg7: Internal.BlockState)=>void) | WorldRendererAccess;
    interface WidgetLayout {
        align(arg0: Internal.Panel): number;
        (arg0: Internal.Panel): number;
    }
    type WidgetLayout_ = ((arg0: Internal.Panel)=>number) | WidgetLayout;
    interface IChemicalProvider <CHEMICAL> extends Internal.IBaseProvider {
        getTranslationKey(): string;
        getChemical(): CHEMICAL;
        getRegistryName(): ResourceLocation;
        getStack(arg0: number): Internal.ChemicalStack<CHEMICAL>;
        getTextComponent(): Internal.ITextComponent;
    }
    type IChemicalProvider_<CHEMICAL> = IChemicalProvider<CHEMICAL>;
    class SpawnerMinecartEntity extends Internal.AbstractMinecartEntity {
        canBeRidden(): boolean;
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        getComparatorLevel(): number;
        getCurrentRailPosition(): BlockPos;
        asKJS(): any;
        shouldDoRailFunctions(): boolean;
        getCartItem(): Internal.ItemStack;
        canRiderInteract(): boolean;
        getMinecart(): Internal.AbstractMinecartEntity;
        getSlopeAdjustment(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        isPoweredCart(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getMaxCartSpeedOnRail(): number;
        getParts(): Internal.PartEntity<any>[];
        get minecart(): Internal.AbstractMinecartEntity;
        get currentRailPosition(): BlockPos;
        get slopeAdjustment(): number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get poweredCart(): boolean;
        get comparatorLevel(): number;
        get cartItem(): Internal.ItemStack;
        get maxCartSpeedOnRail(): number;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.SpawnerMinecartEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
    }
    type SpawnerMinecartEntity_ = SpawnerMinecartEntity;
    class DecimalFormat extends Internal.NumberFormat {
        setNegativeSuffix(arg0: string): void;
        setParseBigDecimal(arg0: boolean): void;
        setGroupingSize(arg0: number): void;
        toPattern(): string;
        setDecimalFormatSymbols(arg0: Internal.DecimalFormatSymbols): void;
        getGroupingSize(): number;
        getPositiveSuffix(): string;
        applyLocalizedPattern(arg0: string): void;
        setNegativePrefix(arg0: string): void;
        setMultiplier(arg0: number): void;
        getNegativeSuffix(): string;
        setPositiveSuffix(arg0: string): void;
        toLocalizedPattern(): string;
        getNegativePrefix(): string;
        getDecimalFormatSymbols(): Internal.DecimalFormatSymbols;
        setDecimalSeparatorAlwaysShown(arg0: boolean): void;
        isParseBigDecimal(): boolean;
        isDecimalSeparatorAlwaysShown(): boolean;
        getPositivePrefix(): string;
        setPositivePrefix(arg0: string): void;
        getMultiplier(): number;
        applyPattern(arg0: string): void;
        get decimalFormatSymbols(): Internal.DecimalFormatSymbols;
        get decimalSeparatorAlwaysShown(): boolean;
        get positiveSuffix(): string;
        get negativePrefix(): string;
        get multiplier(): number;
        get parseBigDecimal(): boolean;
        get groupingSize(): number;
        get negativeSuffix(): string;
        get positivePrefix(): string;
        set decimalSeparatorAlwaysShown(arg0: boolean);
        set decimalFormatSymbols(arg0: Internal.DecimalFormatSymbols);
        set positiveSuffix(arg0: string);
        set multiplier(arg0: number);
        set negativePrefix(arg0: string);
        set parseBigDecimal(arg0: boolean);
        set groupingSize(arg0: number);
        set negativeSuffix(arg0: string);
        set positivePrefix(arg0: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.DecimalFormatSymbols);
        constructor(arg0: string);
        constructor();
    }
    type DecimalFormat_ = DecimalFormat;
    interface IRangedAttackMob {
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        (arg0: Internal.LivingEntity, arg1: number): void;
    }
    type IRangedAttackMob_ = ((arg0: Internal.LivingEntity, arg1: number)=>void) | IRangedAttackMob;
    interface Long2ObjectFunction <V> extends it.unimi.dsi.fastutil.Function<number, V>, Internal.LongFunction<V> {
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        apply(arg0: number): V;
        containsKey(arg0: any): boolean;
        containsKey(arg0: number): boolean;
        get(arg0: any): V;
        get(arg0: number): V;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        put(arg0: number, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: number): V;
        (arg0: number): V;
    }
    type Long2ObjectFunction_<V> = ((arg0: number)=>V) | Long2ObjectFunction<V>;
    class PerkAttributeModifier extends Internal.ForgeRegistryEntry<Internal.PerkAttributeModifier> {
        getAttributeType(): Internal.PerkAttributeType;
        getComparisonKey(): ResourceLocation;
        convertModifier(arg0: Internal.PerkAttributeType_, arg1: Internal.ModifierType_, arg2: number): Internal.PerkAttributeModifier;
        getRawValue(): number;
        setRegistryName(arg0: ResourceLocation_): any;
        getLocalizedDisplayString(): string;
        getLocalizedModifierName(): string;
        getValueForDisplay(arg0: Internal.PlayerEntity, arg1: Internal.PlayerProgress): number;
        getValue(arg0: Internal.PlayerEntity, arg1: Internal.PlayerProgress): number;
        getAttributeDisplayFormat(): string;
        hasDisplayString(): boolean;
        getMode(): Internal.ModifierType;
        getLocalizedAttributeValue(): string;
        gainAsExtraModifier(arg0: Internal.PerkConverter_, arg1: Internal.PerkAttributeType_, arg2: Internal.ModifierType_, arg3: number): Internal.PerkAttributeModifier;
        get mode(): Internal.ModifierType;
        get comparisonKey(): ResourceLocation;
        get rawValue(): number;
        get localizedAttributeValue(): string;
        get attributeType(): Internal.PerkAttributeType;
        get localizedModifierName(): string;
        get localizedDisplayString(): string;
        get attributeDisplayFormat(): string;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PerkAttributeType, arg1: Internal.ModifierType, arg2: number);
        constructor(arg0: ResourceLocation, arg1: Internal.PerkAttributeType, arg2: Internal.ModifierType, arg3: number);
    }
    type PerkAttributeModifier_ = Registry.astralsorcery.perk_attribute_custom_modifiers | PerkAttributeModifier;
    abstract class LockableTileEntity extends Internal.TileEntity implements Internal.IInventory, Internal.INamedContainerProvider, Internal.INameable {
        func_70304_b(arg0: number): Internal.ItemStack;
        func_174888_l(): void;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_145748_c_(): Internal.ITextComponent;
        func_145818_k_(): boolean;
        func_70302_i_(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        func_200201_e(): Internal.ITextComponent;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        createMenu(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity): Internal.Container;
        static func_213905_a(arg0: Internal.PlayerEntity, arg1: Internal.LockCode, arg2: Internal.ITextComponent_): boolean;
        func_213903_a(arg0: Internal.ITextComponent_): void;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_213904_e(arg0: Internal.PlayerEntity): boolean;
        getModelData(): Internal.IModelData;
        func_191420_l(): boolean;
        func_200200_C_(): Internal.ITextComponent;
        onLoad(): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
    }
    type LockableTileEntity_ = LockableTileEntity;
    interface IntListIterator extends Internal.IntBidirectionalIterator, Internal.ListIterator<number> {
        next(): any;
        next(): number;
        add(arg0: number): void;
        add(arg0: any): void;
        add(arg0: number): void;
        set(arg0: any): void;
        set(arg0: number): void;
        set(arg0: number): void;
        previous(): any;
        previous(): number;
        remove(): void;
    }
    type IntListIterator_ = IntListIterator;
    interface BiPredicate <T, U> {
        or(arg0: Internal.BiPredicate_<T, U>): Internal.BiPredicate<T, U>;
        test(arg0: T, arg1: U): boolean;
        and(arg0: Internal.BiPredicate_<T, U>): Internal.BiPredicate<T, U>;
        negate(): Internal.BiPredicate<T, U>;
        (arg0: T, arg1: U): boolean;
    }
    type BiPredicate_<T, U> = ((arg0: T, arg1: U)=>boolean) | BiPredicate<T, U>;
    interface ShortConsumer extends Internal.Consumer<number>, Internal.IntConsumer {
        andThen(arg0: Internal.Consumer_<number>): Internal.Consumer<number>;
        andThen(arg0: Internal.IntConsumer_): Internal.IntConsumer;
        andThen(arg0: Internal.IntConsumer_): Internal.ShortConsumer;
        andThen(arg0: Internal.ShortConsumer_): Internal.ShortConsumer;
        accept(arg0: any): void;
        accept(arg0: number): void;
        accept(arg0: number): void;
        accept(arg0: number): void;
        (arg0: number): void;
    }
    type ShortConsumer_ = ((arg0: number)=>void) | ShortConsumer;
    interface BlockEntityPredicateDataCheck {
        checkData(arg0: Internal.CompoundNBT_): boolean;
        (arg0: Internal.CompoundNBT): boolean;
    }
    type BlockEntityPredicateDataCheck_ = ((arg0: Internal.CompoundNBT)=>boolean) | BlockEntityPredicateDataCheck;
    class Configuration extends Document.Object {
        setCategoryRequiresMcRestart(arg0: string, arg1: boolean): Internal.Configuration;
        addCustomCategoryComment(arg0: string, arg1: string): void;
        save(): void;
        moveProperty(arg0: string, arg1: string, arg2: string): boolean;
        getFloat(arg0: string, arg1: string, arg2: number, arg3: number, arg4: number, arg5: string): number;
        getFloat(arg0: string, arg1: string, arg2: number, arg3: number, arg4: number, arg5: string, arg6: string): number;
        setCategoryComment(arg0: string, arg1: string): Internal.Configuration;
        setCategoryPropertyOrder(arg0: string, arg1: Internal.List<string>): Internal.Configuration;
        setCategoryRequiresWorldRestart(arg0: string, arg1: boolean): Internal.Configuration;
        load(): void;
        hasChanged(): boolean;
        get(arg0: string, arg1: string, arg2: number[], arg3: string, arg4: number, arg5: number): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number[], arg3: string, arg4: number, arg5: number, arg6: boolean, arg7: number): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: string): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: string, arg3: string): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number, arg3: string): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number, arg3: string, arg4: number, arg5: number): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number[]): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number[], arg3: string): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: string[], arg3: string, arg4: Internal.Pattern): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: string[], arg3: string, arg4: boolean, arg5: number, arg6: Internal.Pattern): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: string, arg3: string, arg4: Internal.Property$Type_): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: string[], arg3: string, arg4: Internal.Property$Type_): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: string[], arg3: string): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: string[]): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: string, arg3: string, arg4: Internal.Pattern): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: boolean[]): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: boolean[], arg3: string): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: boolean[], arg3: string, arg4: boolean, arg5: number): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: boolean, arg3: string): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: boolean): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: string, arg3: string, arg4: string[]): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number[], arg3: string): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number[], arg3: string, arg4: number, arg5: number): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number[], arg3: string, arg4: number, arg5: number, arg6: boolean, arg7: number): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number, arg3: string): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number, arg3: string, arg4: number, arg5: number): shadows.placebo.config.Property;
        get(arg0: string, arg1: string, arg2: number[]): shadows.placebo.config.Property;
        getBoolean(arg0: string, arg1: string, arg2: boolean, arg3: string, arg4: string): boolean;
        getBoolean(arg0: string, arg1: string, arg2: boolean, arg3: string): boolean;
        removeCategory(arg0: Internal.ConfigCategory): void;
        static enableGlobalConfig(): void;
        copyCategoryProps(arg0: Internal.Configuration, arg1: string[]): void;
        getConfigFile(): Internal.File;
        hasKey(arg0: string, arg1: string): boolean;
        getCategory(arg0: string): Internal.ConfigCategory;
        getString(arg0: string, arg1: string, arg2: string, arg3: string, arg4: string, arg5: Internal.Pattern): string;
        getString(arg0: string, arg1: string, arg2: string, arg3: string): string;
        getString(arg0: string, arg1: string, arg2: string, arg3: string, arg4: string): string;
        getString(arg0: string, arg1: string, arg2: string, arg3: string, arg4: Internal.Pattern): string;
        getString(arg0: string, arg1: string, arg2: string, arg3: string, arg4: string[]): string;
        getString(arg0: string, arg1: string, arg2: string, arg3: string, arg4: string[], arg5: string): string;
        renameProperty(arg0: string, arg1: string, arg2: string): boolean;
        getCategoryNames(): Internal.Set<string>;
        hasCategory(arg0: string): boolean;
        getInt(arg0: string, arg1: string, arg2: number, arg3: number, arg4: number, arg5: string): number;
        getInt(arg0: string, arg1: string, arg2: number, arg3: number, arg4: number, arg5: string, arg6: string): number;
        getLoadedConfigVersion(): string;
        getDefinedConfigVersion(): string;
        getStringList(arg0: string, arg1: string, arg2: string[], arg3: string, arg4: string[]): string[];
        getStringList(arg0: string, arg1: string, arg2: string[], arg3: string, arg4: string[], arg5: string): string[];
        getStringList(arg0: string, arg1: string, arg2: string[], arg3: string): string[];
        setCategoryLanguageKey(arg0: string, arg1: string): Internal.Configuration;
        static readonly CATEGORY_GENERAL: "general";
        static readonly DEFAULT_ENCODING: "UTF-8";
        static readonly CATEGORY_CLIENT: "client";
        defaultEncoding: string;
        static readonly CATEGORY_SPLITTER: ".";
        static readonly NEW_LINE: "\r\n";
        static readonly allowedProperties: Internal.CharMatcher;
        isChild: boolean;
        static readonly ALLOWED_CHARS: "._-";
        static readonly COMMENT_SEPARATOR: "##########################################################################################################";
        get categoryNames(): Internal.Set<string>;
        get definedConfigVersion(): string;
        get configFile(): Internal.File;
        get loadedConfigVersion(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File);
        constructor(arg0: string);
    }
    type Configuration_ = Configuration;
    class VarHandle$VarHandleDesc extends Internal.DynamicConstantDesc<Internal.VarHandle> {
        static ofStaticField(arg0: Internal.ClassDesc, arg1: string, arg2: Internal.ClassDesc): Internal.VarHandle$VarHandleDesc;
        varType(): Internal.ClassDesc;
        static ofArray(arg0: Internal.ClassDesc): Internal.VarHandle$VarHandleDesc;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): any;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): Internal.VarHandle;
        static ofField(arg0: Internal.ClassDesc, arg1: string, arg2: Internal.ClassDesc): Internal.VarHandle$VarHandleDesc;
    }
    type VarHandle$VarHandleDesc_ = VarHandle$VarHandleDesc;
    class TooltipKey extends Internal.Enum<Internal.TooltipKey> {
        static fromScreen(): Internal.TooltipKey;
        static valueOf(arg0: string): Internal.TooltipKey;
        static values(): Internal.TooltipKey[];
        static readonly SHIFT: Internal.TooltipKey;
        static readonly ALT: Internal.TooltipKey;
        static readonly NORMAL: Internal.TooltipKey;
        static readonly CONTROL: Internal.TooltipKey;
    }
    type TooltipKey_ = "normal" | "shift" | "control" | "alt" | TooltipKey;
    class SimpleWorldEventJS extends Internal.WorldEventJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(w: Internal.WorldJS);
    }
    type SimpleWorldEventJS_ = SimpleWorldEventJS;
    class FaceBakery extends Document.Object {
        func_228824_a_(arg0: Internal.Vector3f, arg1: Internal.Vector3f, arg2: Internal.BlockPartFace, arg3: Internal.TextureAtlasSprite, arg4: Internal.Direction_, arg5: Internal.IModelTransform, arg6: Internal.BlockPartRotation, arg7: boolean, arg8: ResourceLocation_): Internal.BakedQuad;
        static func_178410_a(arg0: number[]): Internal.Direction;
        func_228822_a_(arg0: Internal.Vector3f, arg1: Internal.TransformationMatrix): void;
        static func_228821_a_(arg0: Internal.BlockFaceUV, arg1: Internal.Direction_, arg2: Internal.TransformationMatrix, arg3: ResourceLocation_): Internal.BlockFaceUV;
        func_199337_a(arg0: Internal.Vector3f, arg1: Internal.Vector3f): number[];
        func_178408_a(arg0: number[], arg1: Internal.Direction_): void;
        func_199336_a(arg0: Internal.Vector3f, arg1: Internal.BlockPartRotation): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FaceBakery_ = FaceBakery;
    interface IEnchantableItem {
        isTreasureAllowed(arg0: Internal.ItemStack, arg1: boolean): boolean;
        onEnchantment(arg0: Internal.ItemStack, arg1: Internal.List<Internal.EnchantmentData>): Internal.ItemStack;
        forciblyAllowsTableEnchantment(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        selectEnchantments(arg0: Internal.List<Internal.EnchantmentData>, arg1: Internal.Random, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number, arg6: boolean): Internal.List<Internal.EnchantmentData>;
    }
    type IEnchantableItem_ = IEnchantableItem;
    class SpriteSheetResource extends Internal.AbstractRenderableTexture {
        getResource(): Internal.AbstractRenderableTexture;
        getVLength(): number;
        getRows(): number;
        getFrameCount(): number;
        getULength(): number;
        getUVOffset(arg0: Internal.EntityComplexFX, arg1: number, arg2: number): Internal.Tuple<number, number>;
        getUVOffset(arg0: number): Internal.Tuple<number, number>;
        getColumns(): number;
        get frameCount(): number;
        get resource(): Internal.AbstractRenderableTexture;
        get columns(): number;
        get uLength(): number;
        get rows(): number;
        get vLength(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.AbstractRenderableTexture);
        constructor(arg0: Internal.AbstractRenderableTexture, arg1: number, arg2: number);
    }
    type SpriteSheetResource_ = SpriteSheetResource;
    abstract class LocalNetworkHandler extends Document.Object {
        onConnectionRemoved(arg0: Internal.Connection): void;
        onConnectorLoaded(arg0: Internal.ConnectionPoint, arg1: Internal.IImmersiveConnectable): void;
        onConnectorRemoved(arg0: BlockPos, arg1: Internal.IImmersiveConnectable): void;
        merge(arg0: Internal.LocalNetworkHandler): Internal.LocalNetworkHandler;
        onConnectorUnloaded(arg0: BlockPos, arg1: Internal.IImmersiveConnectable): void;
        setLocalNet(net: Internal.LocalWireNetwork): void;
        onConnectionAdded(arg0: Internal.Connection): void;
        static createHandler(type: ResourceLocation_, local: Internal.LocalWireNetwork, global: Internal.GlobalWireNetwork): Internal.LocalNetworkHandler;
        static register(loc: ResourceLocation_, constructor: Internal.ILocalHandlerConstructor_): void;
        set localNet(net: Internal.LocalWireNetwork);
    }
    type LocalNetworkHandler_ = LocalNetworkHandler;
    class BlockArray extends Document.Object implements Internal.Structure {
        addBlockCube(arg0: Internal.MatchableState, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        addBlockCube(arg0: Internal.BlockState, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        getMaximumOffset(): Vec3i;
        getStructureSlice(arg0: number): Internal.List<Internal.Tuple<BlockPos, Internal.MatchableState>>;
        hasTileAt(arg0: BlockPos): boolean;
        getTileEntities(): Internal.Map<BlockPos, Internal.MatchableTile<Internal.TileEntity>>;
        getBlockStateAt(arg0: BlockPos): Internal.MatchableState;
        getMinimumOffset(): Vec3i;
        getTileEntityAt(arg0: BlockPos): Internal.MatchableTile<Internal.TileEntity>;
        addTileEntity(arg0: Internal.MatchableTile<any>, arg1: number, arg2: number, arg3: number): void;
        addTileEntity(arg0: Internal.MatchableTile<any>, arg1: BlockPos): void;
        addAll(arg0: Internal.BlockArray): void;
        addBlock(arg0: Internal.Block_, arg1: BlockPos): void;
        addBlock(arg0: Internal.MatchableState, arg1: BlockPos): void;
        addBlock(arg0: Internal.BlockState, arg1: BlockPos): void;
        addBlock(arg0: Internal.BlockState, arg1: number, arg2: number, arg3: number): void;
        addBlock(arg0: Internal.Block_, arg1: number, arg2: number, arg3: number): void;
        addBlock(arg0: Internal.MatchableState, arg1: number, arg2: number, arg3: number): void;
        forAllInCube(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.TriConsumer_<number, number, number>): void;
        getAsStacks(arg0: Internal.IBlockReader, arg1: Internal.PlayerEntity): Internal.List<Internal.ItemStack>;
        getContents(): Internal.Map<BlockPos, Internal.MatchableState>;
        hasBlockAt(arg0: BlockPos): boolean;
        get contents(): Internal.Map<BlockPos, Internal.MatchableState>;
        get tileEntities(): Internal.Map<BlockPos, Internal.MatchableTile<Internal.TileEntity>>;
        get minimumOffset(): Vec3i;
        get maximumOffset(): Vec3i;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BlockArray_ = BlockArray;
    class MegaPineFoliagePlacer extends Internal.FoliagePlacer {
        static readonly field_236778_a_: Internal.Codec<Internal.MegaPineFoliagePlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FeatureSpread, arg1: Internal.FeatureSpread, arg2: Internal.FeatureSpread);
    }
    type MegaPineFoliagePlacer_ = MegaPineFoliagePlacer;
    abstract class AbstractObject2ObjectFunction <K, V> extends Document.Object implements Internal.Object2ObjectFunction<K, V>, Internal.Serializable {
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        size(): number;
        compose<V_>(arg0: Internal.Function_<V_, K>): Internal.Function<V_, V>;
        apply(arg0: K): V;
        containsKey(arg0: any): boolean;
        get(arg0: any): V;
        clear(): void;
        andThen<V_>(arg0: Internal.Function_<V, V_>): Internal.Function<K, V_>;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
    }
    type AbstractObject2ObjectFunction_<K, V> = AbstractObject2ObjectFunction<K, V>;
    abstract class AbstractBlock$AbstractBlockState extends Internal.StateHolder<Internal.Block, Internal.BlockState> implements Internal.IBlockState, Internal.ExtendedAbstractBlockState, Internal.BlockStateKJS {
        func_215696_m(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_235785_r_(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_185906_d(): number;
        func_203425_a(arg0: Internal.Block_): boolean;
        getOpacityIfCached(): number;
        func_185888_a(arg0: Internal.World, arg1: BlockPos): number;
        clearCache(): void;
        setRequiresToolKJS(arg0: boolean): void;
        handler$bcm000$initLightAccessState(arg0: Internal.CallbackInfo): void;
        func_215700_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.ISelectionContext): Internal.VoxelShape;
        setMaterialKJS(arg0: Internal.Material): void;
        func_227031_a_(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: Hand_, arg3: Internal.BlockRayTraceResult): Internal.ActionResultType;
        handler$cja000$cacheStateTail(ci: Internal.CallbackInfo): void;
        func_215682_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Entity, arg3: Internal.Direction_): boolean;
        func_196947_b(arg0: Internal.World, arg1: BlockPos, arg2: Internal.BlockState, arg3: boolean): void;
        func_215686_e(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_215688_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.EntityType_<any>): boolean;
        func_185904_a(): Internal.Material;
        func_185902_a(arg0: Internal.Mirror_): Internal.BlockState;
        func_200016_a(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        setDestroySpeedKJS(arg0: number): void;
        handler$bcg000$randomTick(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: Internal.Random, arg3: Internal.CallbackInfo): void;
        setLightEmissionKJS(arg0: number): void;
        func_196957_g(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.PathType_): boolean;
        func_177230_c(): Internal.Block;
        func_224755_d(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        func_200132_m(): boolean;
        func_227032_a_(arg0: Internal.Fluid_): boolean;
        func_204519_t(): boolean;
        func_185893_b(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): number;
        func_215702_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): Internal.VoxelShape;
        func_215693_a(arg0: Internal.LootContext$Builder): Internal.List<Internal.ItemStack>;
        func_196953_a(arg0: Internal.BlockItemUseContext): boolean;
        handler$bjl000$getDrops(arg0: Internal.LootContext$Builder, arg1: Internal.CallbackInfoReturnable<any>): void;
        func_215706_a(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: Internal.ItemStack): void;
        func_215704_f(): boolean;
        func_215699_b(arg0: Internal.World, arg1: BlockPos): Internal.INamedContainerProvider;
        func_196951_e(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        func_185897_m(): boolean;
        func_215691_g(): boolean;
        func_215697_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Block_, arg3: BlockPos, arg4: boolean): void;
        func_196955_c(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        func_185911_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): number;
        func_227034_b_(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: Internal.Random): void;
        func_185909_g(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.MaterialColor;
        handler$zil000$getOffset(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.CallbackInfoReturnable<any>): void;
        func_199611_f(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.ISelectionContext): Internal.VoxelShape;
        func_191059_e(arg0: Internal.IBlockReader, arg1: BlockPos): Vec3;
        func_235719_a_(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Entity): boolean;
        func_185901_i(): Internal.BlockRenderType;
        func_235715_a_(arg0: Internal.ITag<Internal.Block>, arg1: Internal.Predicate_<Internal.AbstractBlock$AbstractBlockState_>): boolean;
        func_185887_b(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        func_215695_r(): Internal.SoundType;
        func_185905_o(): Internal.PushReaction;
        func_229980_m_(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_227033_a_(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: Internal.Random): void;
        func_202065_c(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_196942_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.PlayerEntity): void;
        isCacheInvalid(): boolean;
        func_235734_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: number): void;
        func_200131_a(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_209533_a(arg0: BlockPos): number;
        func_204520_s(): Internal.FluidState;
        func_235728_a_(arg0: Internal.World, arg1: BlockPos, arg2: number, arg3: number): boolean;
        func_185907_a(arg0: Internal.Rotation_): Internal.BlockState;
        func_196948_b(arg0: Internal.IWorld, arg1: BlockPos, arg2: number): void;
        func_241483_b_(arg0: Internal.IWorld, arg1: BlockPos, arg2: number, arg3: number): void;
        func_185903_a(arg0: Internal.PlayerEntity, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        func_215685_b(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.ISelectionContext): Internal.VoxelShape;
        func_200015_d(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        handler$cja000$cacheStateHead(ci: Internal.CallbackInfo): void;
        func_200017_a(arg0: Internal.BlockState, arg1: Internal.Direction_): boolean;
        func_241482_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: number, arg3: number): void;
        handler$cec000$onBlockCollision(worldIn: Internal.World, pos: BlockPos, entityIn: Internal.Entity, ci: Internal.CallbackInfo): void;
        func_185912_n(): boolean;
        func_196958_f(): boolean;
        func_235783_q_(): boolean;
        func_235714_a_(arg0: Internal.ITag<Internal.Block>): boolean;
        isConditionallyFullOpaque(): boolean;
        func_215690_a(arg0: Internal.World, arg1: Internal.BlockState, arg2: Internal.BlockRayTraceResult, arg3: Internal.ProjectileEntity): void;
        func_215705_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.BlockState, arg3: boolean): void;
        func_235777_m_(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        func_215703_d(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        func_196950_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Entity): void;
        func_235754_c_(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        func_242698_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_, arg3: Internal.BlockVoxelShape_): boolean;
        func_227035_k_(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_196952_d(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        func_196954_c(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        func_196956_a(arg0: Internal.Direction_, arg1: Internal.BlockState, arg2: Internal.IWorld, arg3: BlockPos, arg4: BlockPos): Internal.BlockState;
        func_215692_c(): void;
        readonly field_235705_i_: number;
        get conditionallyFullOpaque(): boolean;
        get opacityIfCached(): number;
        get cacheInvalid(): boolean;
        set materialKJS(arg0: Internal.Material);
        set requiresToolKJS(arg0: boolean);
        set destroySpeedKJS(arg0: number);
        set lightEmissionKJS(arg0: number);
    }
    type AbstractBlock$AbstractBlockState_ = AbstractBlock$AbstractBlockState;
    interface ConfigSpec$CorrectionListener {
        onCorrect(arg0: Internal.ConfigSpec$CorrectionAction_, arg1: Internal.List<string>, arg2: any, arg3: any): void;
        (arg0: Internal.ConfigSpec$CorrectionAction, arg1: Internal.List<string>, arg2: any, arg3: any): void;
    }
    type ConfigSpec$CorrectionListener_ = ((arg0: Internal.ConfigSpec$CorrectionAction, arg1: Internal.List<string>, arg2: any, arg3: any)=>void) | ConfigSpec$CorrectionListener;
    class Thread extends Document.Object implements Internal.Runnable {
        setName(arg0: string): void;
        getThreadGroup(): Internal.ThreadGroup;
        getName(): string;
        static getAllStackTraces(): Internal.Map<Internal.Thread, Internal.StackTraceElement[]>;
        static startVirtualThread(arg0: Internal.Runnable_): Internal.Thread;
        static onSpinWait(): void;
        getId(): number;
        run(): void;
        setContextClassLoader(arg0: Internal.ClassLoader): void;
        static sleep(arg0: number, arg1: number): void;
        static sleep(arg0: Internal.Duration): void;
        static sleep(arg0: number): void;
        threadId(): number;
        static ofVirtual(): Internal.Thread$Builder$OfVirtual;
        getStackTrace(): Internal.StackTraceElement[];
        isDaemon(): boolean;
        static yield(): void;
        interrupt(): void;
        static enumerate(arg0: Internal.Thread[]): number;
        join(arg0: number): void;
        join(arg0: number, arg1: number): void;
        join(): void;
        join(arg0: Internal.Duration): boolean;
        static ofPlatform(): Internal.Thread$Builder$OfPlatform;
        resume(): void;
        suspend(): void;
        static activeCount(): number;
        static currentThread(): Internal.Thread;
        setUncaughtExceptionHandler(arg0: Internal.Thread$UncaughtExceptionHandler_): void;
        isInterrupted(): boolean;
        static dumpStack(): void;
        static setDefaultUncaughtExceptionHandler(arg0: Internal.Thread$UncaughtExceptionHandler_): void;
        start(): void;
        static interrupted(): boolean;
        getUncaughtExceptionHandler(): Internal.Thread$UncaughtExceptionHandler;
        checkAccess(): void;
        static getDefaultUncaughtExceptionHandler(): Internal.Thread$UncaughtExceptionHandler;
        isAlive(): boolean;
        setDaemon(arg0: boolean): void;
        static holdsLock(arg0: any): boolean;
        getState(): Internal.Thread$State;
        stop(): void;
        getContextClassLoader(): Internal.ClassLoader;
        getPriority(): number;
        countStackFrames(): number;
        isVirtual(): boolean;
        setPriority(arg0: number): void;
        static readonly MIN_PRIORITY: 1;
        static readonly MAX_PRIORITY: 10;
        static readonly NORM_PRIORITY: 5;
        get allStackTraces(): Internal.Map<Internal.Thread, Internal.StackTraceElement[]>;
        get virtual(): boolean;
        get alive(): boolean;
        get priority(): number;
        get uncaughtExceptionHandler(): Internal.Thread$UncaughtExceptionHandler;
        get daemon(): boolean;
        get defaultUncaughtExceptionHandler(): Internal.Thread$UncaughtExceptionHandler;
        get threadGroup(): Internal.ThreadGroup;
        get contextClassLoader(): Internal.ClassLoader;
        get name(): string;
        get id(): number;
        get stackTrace(): Internal.StackTraceElement[];
        get state(): Internal.Thread$State;
        set defaultUncaughtExceptionHandler(arg0: Internal.Thread$UncaughtExceptionHandler_);
        set contextClassLoader(arg0: Internal.ClassLoader);
        set name(arg0: string);
        set priority(arg0: number);
        set uncaughtExceptionHandler(arg0: Internal.Thread$UncaughtExceptionHandler_);
        set daemon(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Runnable);
        constructor(arg0: Internal.ThreadGroup, arg1: Internal.Runnable, arg2: string, arg3: number, arg4: boolean);
        constructor(arg0: Internal.ThreadGroup, arg1: Internal.Runnable, arg2: string, arg3: number);
        constructor(arg0: Internal.ThreadGroup, arg1: Internal.Runnable, arg2: string);
        constructor(arg0: Internal.Runnable, arg1: string);
        constructor(arg0: Internal.ThreadGroup, arg1: Internal.Runnable);
        constructor(arg0: string);
        constructor(arg0: Internal.ThreadGroup, arg1: string);
    }
    type Thread_ = Thread;
    class StringProperty extends Internal.TeamProperty<string> {
        getType(): Internal.TeamPropertyType<string>;
        fromString(arg0: string): Internal.Optional<string>;
        get type(): Internal.TeamPropertyType<string>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: string, arg2: Internal.Pattern);
        constructor(arg0: ResourceLocation, arg1: Internal.PacketBuffer);
        constructor(arg0: ResourceLocation, arg1: string);
    }
    type StringProperty_ = StringProperty;
    interface ItemColorsExtended {
        getColorProvider(arg0: Internal.ItemStack): Internal.IItemColor;
        (arg0: Internal.ItemStack): Internal.IItemColor;
    }
    type ItemColorsExtended_ = ((arg0: Internal.ItemStack)=>Internal.IItemColor) | ItemColorsExtended;
    interface Cloneable {
    }
    type Cloneable_ = Cloneable;
    class RuinedPortalFeature extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_236628_b_: Internal.RuinedPortalStructure$Location;
        static readonly field_236627_a_: Internal.Codec<Internal.RuinedPortalFeature>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.RuinedPortalStructure$Location);
    }
    type RuinedPortalFeature_ = RuinedPortalFeature;
    interface TriPredicate <T, U, V> {
        or(arg0: Internal.TriPredicate_<T, U, V>): Internal.TriPredicate<T, U, V>;
        test(arg0: T, arg1: U, arg2: V): boolean;
        and(arg0: Internal.TriPredicate_<T, U, V>): Internal.TriPredicate<T, U, V>;
        negate(): Internal.TriPredicate<T, U, V>;
        (arg0: T, arg1: U, arg2: V): boolean;
    }
    type TriPredicate_<T, U, V> = ((arg0: T, arg1: U, arg2: V)=>boolean) | TriPredicate<T, U, V>;
    class DropperTileEntity extends Internal.DispenserTileEntity {
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_145818_k_(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type DropperTileEntity_ = DropperTileEntity;
    class Orientation extends Internal.Enum<Internal.Orientation> implements Internal.IStringSerializable {
        func_235531_a_(arg0: Internal.JigsawOrientation_): Internal.JigsawOrientation;
        func_235529_a_(arg0: Internal.Direction$Axis_): boolean;
        func_235530_a_(arg0: Internal.Direction_): Internal.Direction;
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.Orientation;
        static values(): Internal.Orientation[];
        func_235527_a_(arg0: Internal.Orientation_): Internal.Orientation;
        static readonly ROT_60_REF_PNP: Internal.Orientation;
        static readonly ROT_180_EDGE_YZ_POS: Internal.Orientation;
        static readonly ROT_180_FACE_XZ: Internal.Orientation;
        static readonly ROT_180_FACE_XY: Internal.Orientation;
        static readonly ROT_90_X_POS: Internal.Orientation;
        static readonly ROT_60_REF_NPN: Internal.Orientation;
        static readonly SWAP_NEG_XZ: Internal.Orientation;
        static readonly ROT_60_REF_NNN: Internal.Orientation;
        static readonly ROT_60_REF_NPP: Internal.Orientation;
        static readonly ROT_60_REF_PPN: Internal.Orientation;
        static readonly SWAP_NEG_XY: Internal.Orientation;
        static readonly ROT_90_REF_Z_NEG: Internal.Orientation;
        static readonly ROT_90_X_NEG: Internal.Orientation;
        static readonly ROT_180_EDGE_YZ_NEG: Internal.Orientation;
        static readonly ROT_60_REF_NNP: Internal.Orientation;
        static readonly ROT_60_REF_PNN: Internal.Orientation;
        static readonly ROT_60_REF_PPP: Internal.Orientation;
        static readonly ROT_180_EDGE_XZ_NEG: Internal.Orientation;
        static readonly ROT_120_NNN: Internal.Orientation;
        static readonly ROT_120_NPP: Internal.Orientation;
        static readonly ROT_120_PPN: Internal.Orientation;
        static readonly ROT_120_NPN: Internal.Orientation;
        static readonly ROT_90_REF_X_POS: Internal.Orientation;
        static readonly ROT_120_PNP: Internal.Orientation;
        static readonly SWAP_YZ: Internal.Orientation;
        static readonly ROT_90_REF_Y_NEG: Internal.Orientation;
        static readonly ROT_120_NNP: Internal.Orientation;
        static readonly ROT_120_PNN: Internal.Orientation;
        static readonly ROT_120_PPP: Internal.Orientation;
        static readonly ROT_90_Y_POS: Internal.Orientation;
        static readonly ROT_180_EDGE_XZ_POS: Internal.Orientation;
        static readonly ROT_90_Y_NEG: Internal.Orientation;
        static readonly ROT_180_EDGE_XY_NEG: Internal.Orientation;
        static readonly INVERT_X: Internal.Orientation;
        static readonly ROT_90_REF_Y_POS: Internal.Orientation;
        static readonly ROT_90_Z_NEG: Internal.Orientation;
        static readonly ROT_180_FACE_YZ: Internal.Orientation;
        static readonly ROT_90_REF_X_NEG: Internal.Orientation;
        static readonly ROT_180_EDGE_XY_POS: Internal.Orientation;
        static readonly ROT_90_Z_POS: Internal.Orientation;
        static readonly INVERSION: Internal.Orientation;
        static readonly SWAP_NEG_YZ: Internal.Orientation;
        static readonly IDENTITY: Internal.Orientation;
        static readonly ROT_90_REF_Z_POS: Internal.Orientation;
        static readonly SWAP_XY: Internal.Orientation;
        static readonly SWAP_XZ: Internal.Orientation;
        static readonly INVERT_Z: Internal.Orientation;
        static readonly INVERT_Y: Internal.Orientation;
    }
    type Orientation_ = "identity" | "rot_180_face_xy" | "rot_180_face_xz" | "rot_180_face_yz" | "rot_120_nnn" | "rot_120_nnp" | "rot_120_npn" | "rot_120_npp" | "rot_120_pnn" | "rot_120_pnp" | "rot_120_ppn" | "rot_120_ppp" | "rot_180_edge_xy_neg" | "rot_180_edge_xy_pos" | "rot_180_edge_xz_neg" | "rot_180_edge_xz_pos" | "rot_180_edge_yz_neg" | "rot_180_edge_yz_pos" | "rot_90_x_neg" | "rot_90_x_pos" | "rot_90_y_neg" | "rot_90_y_pos" | "rot_90_z_neg" | "rot_90_z_pos" | "inversion" | "invert_x" | "invert_y" | "invert_z" | "rot_60_ref_nnn" | "rot_60_ref_nnp" | "rot_60_ref_npn" | "rot_60_ref_npp" | "rot_60_ref_pnn" | "rot_60_ref_pnp" | "rot_60_ref_ppn" | "rot_60_ref_ppp" | "swap_xy" | "swap_yz" | "swap_xz" | "swap_neg_xy" | "swap_neg_yz" | "swap_neg_xz" | "rot_90_ref_x_neg" | "rot_90_ref_x_pos" | "rot_90_ref_y_neg" | "rot_90_ref_y_pos" | "rot_90_ref_z_neg" | "rot_90_ref_z_pos" | Orientation;
    class SoundRegistryEventJS extends Internal.StartupEventJS {
        register(r: ResourceLocation_): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(registry: Internal.Consumer<ResourceLocation>);
    }
    type SoundRegistryEventJS_ = SoundRegistryEventJS;
    class AxisAlignedBB extends Document.Object {
        func_186662_g(arg0: number): Internal.AxisAlignedBB;
        func_186668_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        func_197744_e(arg0: number, arg1: number, arg2: number): boolean;
        static func_197743_a(arg0: Internal.Iterable_<Internal.AxisAlignedBB_>, arg1: Vec3, arg2: Vec3, arg3: BlockPos): Internal.BlockRayTraceResult;
        func_197742_b(arg0: Internal.Direction$Axis_): number;
        func_197745_a(arg0: Internal.Direction$Axis_): number;
        func_189972_c(): Vec3;
        func_186664_h(arg0: number): Internal.AxisAlignedBB;
        func_189973_a(arg0: Vec3, arg1: Vec3): boolean;
        func_111270_a(arg0: Internal.AxisAlignedBB): Internal.AxisAlignedBB;
        func_72320_b(): number;
        func_72321_a(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        func_72314_b(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        func_72318_a(arg0: Vec3): boolean;
        func_186670_a(arg0: BlockPos): Internal.AxisAlignedBB;
        func_72317_d(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        func_191195_a(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        func_191194_a(arg0: Vec3): Internal.AxisAlignedBB;
        static func_241549_a_(arg0: Vec3): Internal.AxisAlignedBB;
        func_181656_b(): boolean;
        func_72326_a(arg0: Internal.AxisAlignedBB): boolean;
        func_216365_b(arg0: Vec3, arg1: Vec3): Internal.Optional<Vec3>;
        func_216362_d(): number;
        func_216364_b(): number;
        func_191500_a(arg0: Internal.AxisAlignedBB): Internal.AxisAlignedBB;
        static func_216363_a(arg0: Internal.MutableBoundingBox): Internal.AxisAlignedBB;
        func_216360_c(): number;
        func_216361_a(arg0: Vec3): Internal.AxisAlignedBB;
        static func_241550_g_(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        readonly field_72340_a: number;
        readonly field_72338_b: number;
        readonly field_72336_d: number;
        readonly field_72334_f: number;
        readonly field_72339_c: number;
        readonly field_72337_e: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Vec3, arg1: Vec3);
        constructor(arg0: BlockPos, arg1: BlockPos);
        constructor(arg0: BlockPos);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number);
    }
    type AxisAlignedBB_ = AxisAlignedBB;
    class UnmodifiableCommentedConfig$CommentNode extends Document.Object {
        getChildren(): Internal.Map<string, Internal.UnmodifiableCommentedConfig$CommentNode>;
        getComment(): string;
        get children(): Internal.Map<string, Internal.UnmodifiableCommentedConfig$CommentNode>;
        get comment(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Map<string, Internal.UnmodifiableCommentedConfig$CommentNode>);
    }
    type UnmodifiableCommentedConfig$CommentNode_ = UnmodifiableCommentedConfig$CommentNode;
    interface VertexBufferView {
        ensureBufferCapacity(arg0: number): boolean;
        flush(arg0: number, arg1: Internal.BufferVertexFormat_): void;
        getWriterPosition(): number;
        getVertexFormat(): Internal.BufferVertexFormat;
        getDirectBuffer(): Internal.ByteBuffer;
    }
    type VertexBufferView_ = VertexBufferView;
    interface IntBinaryOperator {
        applyAsInt(arg0: number, arg1: number): number;
        (arg0: number, arg1: number): number;
    }
    type IntBinaryOperator_ = ((arg0: number, arg1: number)=>number) | IntBinaryOperator;
    abstract class TileEntityBehaviour extends Document.Object {
        onNeighborChanged(arg0: BlockPos): void;
        getWorld(): Internal.World;
        read(arg0: Internal.CompoundNBT_, arg1: boolean): void;
        onBlockChanged(arg0: Internal.BlockState): void;
        destroy(): void;
        static destroy<T_>(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.BehaviourType<T_>): void;
        lazyTick(): void;
        setLazyTickRate(arg0: number): void;
        tick(): void;
        remove(): void;
        getRequiredItems(): Internal.ItemRequirement;
        getType(): Internal.BehaviourType<any>;
        getPos(): BlockPos;
        static get<T_>(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.BehaviourType<T_>): T_;
        static get<T_>(arg0: Internal.TileEntity, arg1: Internal.BehaviourType<T_>): T_;
        isSafeNBT(): boolean;
        initialize(): void;
        write(arg0: Internal.CompoundNBT_, arg1: boolean): void;
        tileEntity: Internal.SmartTileEntity;
        get world(): Internal.World;
        get pos(): BlockPos;
        get type(): Internal.BehaviourType<any>;
        get safeNBT(): boolean;
        get requiredItems(): Internal.ItemRequirement;
        set lazyTickRate(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SmartTileEntity);
    }
    type TileEntityBehaviour_ = TileEntityBehaviour;
    interface BlockColorSettings <T> {
        useSmoothColorBlending(arg0: Internal.IBlockDisplayReader, arg1: T, arg2: BlockPos): boolean;
        (arg0: Internal.IBlockDisplayReader, arg1: T, arg2: BlockPos): boolean;
    }
    type BlockColorSettings_<T> = ((arg0: Internal.IBlockDisplayReader, arg1: T, arg2: BlockPos)=>boolean) | BlockColorSettings<T>;
    class VillagerType extends Document.Object implements Internal.VillagerTypeAccess {
        static func_242371_a(arg0: Internal.Optional<Internal.RegistryKey<Internal.Biome>>): Internal.VillagerType;
        static func_221171_a(arg0: string): Internal.VillagerType;
        static getVillagerByBiome_$md$e571c7$0(): Internal.Map<any, any>;
        static readonly field_221179_g: Internal.VillagerType;
        static readonly field_221178_f: Internal.VillagerType;
        static readonly field_221177_e: Internal.VillagerType;
        static readonly field_221176_d: Internal.VillagerType;
        static readonly field_221175_c: Internal.VillagerType;
        static field_221180_h: {};
        static readonly field_221174_b: Internal.VillagerType;
        static readonly field_221173_a: Internal.VillagerType;
        get villagerByBiome_$md$e571c7$0(): Internal.Map<any, any>;
    }
    type VillagerType_ = VillagerType;
    class Biome$Climate extends Document.Object {
        field_242462_d: Internal.Biome$TemperatureModifier;
        field_242461_c: number;
        static readonly field_242459_a: Internal.MapCodec<Internal.Biome$Climate>;
        field_242463_e: number;
        field_242460_b: Internal.Biome$RainType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Biome$RainType, arg1: number, arg2: Internal.Biome$TemperatureModifier, arg3: number);
    }
    type Biome$Climate_ = Biome$Climate;
    interface IPosition {
        func_82615_a(): number;
        func_82616_c(): number;
        func_82617_b(): number;
    }
    type IPosition_ = IPosition;
    class ModifierEntry extends Document.Object implements Internal.Comparable<Internal.ModifierEntry> {
        getLevel(): number;
        toJson(): Internal.JsonObject;
        static read(arg0: Internal.PacketBuffer): Internal.ModifierEntry;
        static deserializeModifier(arg0: Internal.JsonObject, arg1: string): Internal.Modifier;
        getModifier(): Internal.Modifier;
        static fromJson(arg0: Internal.JsonObject): Internal.ModifierEntry;
        compareTo(arg0: Internal.ModifierEntry): number;
        compareTo(arg0: any): number;
        write(arg0: Internal.PacketBuffer): void;
        static readonly SERIALIZER: Internal.ModifierEntry$Serializer;
        get level(): number;
        get modifier(): Internal.Modifier;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Modifier, arg1: number);
    }
    type ModifierEntry_ = ModifierEntry;
    interface GameRulesAccessor$BooleanValue {
    }
    type GameRulesAccessor$BooleanValue_ = GameRulesAccessor$BooleanValue;
    class MultipartBlockStateGenerator extends Document.Object {
        toJson(): Internal.JsonObject;
        part(when: string, model: string): void;
        part(when: string, consumer: Internal.Consumer_<Internal.MultipartBlockStateGenerator$Part_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MultipartBlockStateGenerator_ = MultipartBlockStateGenerator;
    interface CraftingContainerAccess {
        setItems(arg0: Internal.NonNullList<Internal.ItemStack>): void;
        (arg0: Internal.NonNullList<Internal.ItemStack>): void;
    }
    type CraftingContainerAccess_ = ((arg0: Internal.NonNullList<Internal.ItemStack>)=>void) | CraftingContainerAccess;
    class MaterialStatsId extends ResourceLocation {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor(arg0: string, arg1: string);
        constructor(arg0: ResourceLocation);
    }
    type MaterialStatsId_ = MaterialStatsId;
    class HoverEvent$Action <T> extends Document.Object {
        func_150685_b(): string;
        func_240670_a_(arg0: Internal.ITextComponent_): Internal.HoverEvent;
        func_240669_a_(arg0: any): Internal.JsonElement;
        func_150686_a(): boolean;
        static func_150684_a(arg0: string): Internal.HoverEvent$Action<any>;
        func_240668_a_(arg0: Internal.JsonElement): Internal.HoverEvent;
        static readonly field_230550_a_: Internal.HoverEvent$Action<Internal.ITextComponent>;
        static readonly field_230551_b_: Internal.HoverEvent$Action<Internal.HoverEvent$ItemHover>;
        static readonly field_230552_c_: Internal.HoverEvent$Action<Internal.HoverEvent$EntityHover>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: boolean, arg2: Internal.Function<Internal.JsonElement, T>, arg3: Internal.Function<T, Internal.JsonElement>, arg4: Internal.Function<Internal.ITextComponent, T>);
    }
    type HoverEvent$Action_<T> = HoverEvent$Action<T>;
    class BeeDebugRenderer$Hive extends Document.Object {
        readonly field_229013_c_: number;
        readonly field_229012_b_: string;
        readonly field_229014_d_: number;
        readonly field_229015_e_: boolean;
        readonly field_229016_f_: number;
        readonly field_229011_a_: BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: BlockPos, arg1: string, arg2: number, arg3: number, arg4: boolean, arg5: number);
    }
    type BeeDebugRenderer$Hive_ = BeeDebugRenderer$Hive;
    class ShaderInstance extends Document.Object implements Internal.IShaderManager, Internal.AutoCloseable {
        static func_216543_a(arg0: Internal.JsonObject): Internal.JSONBlendingMode;
        static func_216542_a(arg0: Internal.IResourceManager, arg1: Internal.ShaderLoader$ShaderType_, arg2: string): Internal.ShaderLoader;
        func_216544_e(): void;
        func_216537_a(arg0: string, arg1: Internal.IntSupplier_): void;
        func_216535_f(): void;
        func_147985_d(): void;
        func_216538_b(arg0: string): Internal.ShaderDefault;
        func_216539_a(arg0: string): Internal.ShaderUniform;
        func_147986_h(): number;
        func_147989_e(): Internal.ShaderLoader;
        close(): void;
        func_147994_f(): Internal.ShaderLoader;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IResourceManager, arg1: string);
    }
    type ShaderInstance_ = ShaderInstance;
    interface Object2IntMap$FastEntrySet <K> extends Internal.ObjectSet<Internal.Object2IntMap$Entry<K>> {
        fastForEach(arg0: Internal.Consumer_<Internal.Object2IntMap$Entry_<Internal.Object2IntMap$Entry_<Internal.Object2IntMap$Entry_<K>>>>): void;
        fastIterator(): Internal.ObjectIterator<Internal.Object2IntMap$Entry<Internal.Object2IntMap$Entry<Internal.Object2IntMap$Entry<K>>>>;
        (): Internal.ObjectIterator<Internal.Object2IntMap$Entry<Internal.Object2IntMap$Entry<Internal.Object2IntMap$Entry<K>>>>;
    }
    type Object2IntMap$FastEntrySet_<K> = (()=>Internal.ObjectIterator<Internal.Object2IntMap$Entry<Internal.Object2IntMap$Entry<Internal.Object2IntMap$Entry<K>>>>) | Object2IntMap$FastEntrySet<K>;
    abstract class ForgeRegistryEntry$UncheckedRegistryEntry <V> extends Internal.ForgeRegistryEntry<V> {
        setRegistryName(arg0: ResourceLocation_): any;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ForgeRegistryEntry$UncheckedRegistryEntry_<V> = ForgeRegistryEntry$UncheckedRegistryEntry<V>;
    abstract class RecipeBookContainer <C> extends Internal.Container {
        func_201771_a(arg0: Internal.RecipeItemHelper): void;
        func_203721_h(): number;
        func_201772_h(): number;
        func_201770_g(): number;
        getRecipeBookCategories(): Internal.List<Internal.RecipeBookCategories>;
        func_241850_m(): Internal.RecipeBookCategory;
        func_201769_a(arg0: Internal.IRecipe<C>): boolean;
        func_201767_f(): number;
        func_201768_e(): void;
        func_217056_a(arg0: boolean, arg1: Internal.IRecipe<any>, arg2: Internal.ServerPlayerEntity): void;
        get recipeBookCategories(): Internal.List<Internal.RecipeBookCategories>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ContainerType<any>, arg1: number);
    }
    type RecipeBookContainer_<C> = RecipeBookContainer<C>;
    class ServerPlayNetHandler extends Document.Object implements Internal.IServerPlayNetHandler, Internal.ServerPlayNetHandlerAccess, Internal.PlayerUtils$ConnectionAccess {
        func_230549_a_(arg0: Internal.CJigsawBlockGeneratePacket): void;
        func_211525_a(arg0: Internal.CQueryTileEntityNBTPacket): void;
        func_184338_a(arg0: Internal.CMoveVehiclePacket): void;
        func_147356_a(arg0: Internal.CCloseWindowPacket): void;
        func_175086_a(arg0: Internal.CResourcePackStatusPacket): void;
        func_73660_a(): void;
        func_147358_a(arg0: Internal.CInputPacket): void;
        func_175088_a(arg0: Internal.CSpectatePacket): void;
        func_147352_a(arg0: Internal.CClientSettingsPacket): void;
        func_147354_a(arg0: Internal.CChatMessagePacket): void;
        func_147298_b(): Internal.NetworkManager;
        func_147349_a(arg0: Internal.CCustomPayloadPacket): void;
        func_210159_a(arg0: Internal.CSelectTradePacket): void;
        func_147231_a(arg0: Internal.ITextComponent_): void;
        func_194028_b(arg0: Internal.ITextComponent_): void;
        func_217262_a(arg0: Internal.CUpdateJigsawBlockPacket): void;
        func_147344_a(arg0: Internal.CCreativeInventoryActionPacket): void;
        func_210157_a(arg0: Internal.CUpdateStructureBlockPacket): void;
        func_147346_a(arg0: Internal.CPlayerTryUseItemPacket): void;
        func_210155_a(arg0: Internal.CRenameItemPacket): void;
        func_210153_a(arg0: Internal.CUpdateCommandBlockPacket): void;
        func_147340_a(arg0: Internal.CUseEntityPacket): void;
        func_147342_a(arg0: Internal.CClientStatusPacket): void;
        func_147339_a(arg0: Internal.CConfirmTransactionPacket): void;
        setClientIsFloating(arg0: boolean): void;
        func_241831_a(arg0: Internal.CUpdateRecipeBookStatusPacket): void;
        setFloatingTickCount(ticks: number): void;
        func_211526_a(arg0: Internal.CQueryEntityNBTPacket): void;
        func_184339_a(arg0: Internal.CConfirmTeleportPacket): void;
        func_184337_a(arg0: Internal.CPlayerTryUseItemOnBlockPacket): void;
        func_175087_a(arg0: Internal.CAnimateHandPacket): void;
        func_147355_a(arg0: Internal.CHeldItemChangePacket): void;
        func_175089_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.Set<Internal.SPlayerPositionLookPacket$Flags>): void;
        func_211148_a(arg0: Internal.IPacket<any>, arg1: Internal.GenericFutureListener_<Internal.Future_<void>>): void;
        func_147357_a(arg0: Internal.CEntityActionPacket): void;
        handler$cmg000$allowInteractableEntity(arg0: Internal.CUseEntityPacket, arg1: Internal.CallbackInfo): void;
        func_147351_a(arg0: Internal.CClickWindowPacket): void;
        func_147353_a(arg0: Internal.CKeepAlivePacket): void;
        func_184340_a(arg0: Internal.CSteerBoatPacket): void;
        func_147348_a(arg0: Internal.CPlayerAbilitiesPacket): void;
        func_210158_a(arg0: Internal.CUpdateMinecartCommandBlockPacket): void;
        func_194308_a(arg0: Internal.CPlaceRecipePacket): void;
        constant$big000$playTimeout(arg0: number): number;
        func_217263_a(arg0: Internal.CSetDifficultyPacket): void;
        func_217261_a(arg0: Internal.CLockDifficultyPacket): void;
        func_191984_a(arg0: Internal.CMarkRecipeSeenPacket): void;
        func_147345_a(arg0: Internal.CPlayerDiggingPacket): void;
        func_210156_a(arg0: Internal.CEditBookPacket): void;
        func_195518_a(arg0: Internal.CTabCompletePacket): void;
        func_147347_a(arg0: Internal.CPlayerPacket): void;
        func_210154_a(arg0: Internal.CUpdateBeaconPacket): void;
        setFloating(arg0: boolean): void;
        func_184342_d(): void;
        func_210152_a(arg0: Internal.CPickItemPacket): void;
        func_194027_a(arg0: Internal.CSeenAdvancementsPacket): void;
        func_147364_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_147343_a(arg0: Internal.CUpdateSignPacket): void;
        func_147338_a(arg0: Internal.CEnchantItemPacket): void;
        func_147359_a(arg0: Internal.IPacket<any>): void;
        setAboveGroundTickCount(arg0: number): void;
        readonly field_147371_a: Internal.NetworkManager;
        field_147369_b: Internal.ServerPlayerEntity;
        field_147365_f: number;
        field_147374_l: number;
        set aboveGroundTickCount(arg0: number);
        set floating(arg0: boolean);
        set floatingTickCount(ticks: number);
        set clientIsFloating(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MinecraftServer, arg1: Internal.NetworkManager, arg2: Internal.ServerPlayerEntity);
    }
    type ServerPlayNetHandler_ = ServerPlayNetHandler;
    class ModuleDescriptor$Opens extends Document.Object implements Internal.Comparable<Internal.ModuleDescriptor$Opens> {
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        isQualified(): boolean;
        source(): string;
        compareTo(arg0: Internal.ModuleDescriptor$Opens): number;
        compareTo(arg0: any): number;
        modifiers(): Internal.Set<Internal.ModuleDescriptor$Opens$Modifier>;
        targets(): Internal.Set<string>;
        get qualified(): boolean;
    }
    type ModuleDescriptor$Opens_ = ModuleDescriptor$Opens;
    class Apotheosis$ApotheosisReloadEvent extends net.minecraftforge.eventbus.api.Event {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Apotheosis$ApotheosisReloadEvent_ = Apotheosis$ApotheosisReloadEvent;
    class InputUpdateEvent extends Internal.PlayerEvent {
        getMovementInput(): Internal.MovementInput;
        get movementInput(): Internal.MovementInput;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.MovementInput);
    }
    type InputUpdateEvent_ = InputUpdateEvent;
    class LivingPackSizeEvent extends Internal.LivingEvent {
        setMaxPackSize(arg0: number): void;
        getMaxPackSize(): number;
        get maxPackSize(): number;
        set maxPackSize(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MobEntity);
    }
    type LivingPackSizeEvent_ = LivingPackSizeEvent;
    interface IStructureReader {
        func_230346_b_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>): Internal.LongSet;
        func_230344_a_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>, arg1: Internal.StructureStart<any>): void;
        func_230343_a_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>, arg1: number): void;
        func_230342_a_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>): Internal.StructureStart<any>;
        func_201606_b(arg0: Internal.Map_<net.minecraft.world.gen.feature.structure.Structure_<any>, Internal.LongSet_>): void;
        func_201604_d(): Internal.Map<net.minecraft.world.gen.feature.structure.Structure<any>, Internal.LongSet>;
    }
    type IStructureReader_ = IStructureReader;
    class SChangeBlockPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_197685_a(): Internal.BlockState;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179827_b(): BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IBlockReader, arg1: BlockPos);
        constructor(arg0: BlockPos, arg1: Internal.BlockState);
        constructor();
    }
    type SChangeBlockPacket_ = SChangeBlockPacket;
    interface LootPoolMixin {
        getConditions(): Internal.List<Internal.ILootCondition>;
        getLootEntries(): Internal.List<Internal.LootEntry>;
    }
    type LootPoolMixin_ = LootPoolMixin;
    class ConfiguredRandomFeatureList extends Document.Object {
        func_242787_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos): boolean;
        readonly field_214842_a: java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>;
        readonly field_214844_c: number;
        static readonly field_236430_a_: Internal.Codec<Internal.ConfiguredRandomFeatureList>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ConfiguredFeature<any, any>, arg1: number);
    }
    type ConfiguredRandomFeatureList_ = ConfiguredRandomFeatureList;
    class Tier extends Internal.Enum<Internal.Tier> implements Internal.IVariant<Internal.Tier> {
        read(arg0: Internal.CompoundNBT_, arg1: string): Internal.Tier;
        getName(): string;
        static valueOf(arg0: string): Internal.Tier;
        static values(): Internal.Tier[];
        isEmpty(): boolean;
        getColor(): number;
        static getNormalVariants(): Internal.Tier[];
        getVariants(): Internal.Tier[];
        getVariants(): Internal.Enum[];
        write(arg0: Internal.CompoundNBT_, arg1: Internal.Tier_, arg2: string): Internal.CompoundNBT;
        static readonly HARDENED: Internal.Tier;
        static readonly BLAZING: Internal.Tier;
        static readonly CREATIVE: Internal.Tier;
        static readonly STARTER: Internal.Tier;
        static readonly NIOTIC: Internal.Tier;
        static readonly SPIRITED: Internal.Tier;
        static readonly NITRO: Internal.Tier;
        static readonly BASIC: Internal.Tier;
        get color(): number;
        get name(): string;
        get variants(): Internal.Enum[];
        get empty(): boolean;
        get normalVariants(): Internal.Tier[];
    }
    type Tier_ = "starter" | "basic" | "hardened" | "blazing" | "niotic" | "spirited" | "nitro" | "creative" | Tier;
    class RecipeBookCategories extends Internal.Enum<Internal.RecipeBookCategories> {
        func_202903_a(): Internal.List<Internal.ItemStack>;
        static func_243236_a(arg0: Internal.RecipeBookCategory_): Internal.List<Internal.RecipeBookCategories>;
        static valueOf(arg0: string): Internal.RecipeBookCategories;
        static values(): Internal.RecipeBookCategories[];
        static readonly CRAFTING_EQUIPMENT: Internal.RecipeBookCategories;
        static readonly BLAST_FURNACE_BLOCKS: Internal.RecipeBookCategories;
        static readonly field_243235_w: {};
        static readonly CRAFTING_REDSTONE: Internal.RecipeBookCategories;
        static readonly CRAFTING_MISC: Internal.RecipeBookCategories;
        static readonly CAMPFIRE: Internal.RecipeBookCategories;
        static readonly SMITHING: Internal.RecipeBookCategories;
        static readonly FURNACE_FOOD: Internal.RecipeBookCategories;
        static readonly CRAFTING_SEARCH: Internal.RecipeBookCategories;
        static readonly BLAST_FURNACE_MISC: Internal.RecipeBookCategories;
        static readonly SMOKER_FOOD: Internal.RecipeBookCategories;
        static readonly CRAFTING_BUILDING_BLOCKS: Internal.RecipeBookCategories;
        static readonly FURNACE_BLOCKS: Internal.RecipeBookCategories;
        static readonly SMOKER_SEARCH: Internal.RecipeBookCategories;
        static readonly STONECUTTER: Internal.RecipeBookCategories;
        static readonly FURNACE_SEARCH: Internal.RecipeBookCategories;
        static readonly field_243231_s: [undefined, undefined];
        static readonly BLAST_FURNACE_SEARCH: Internal.RecipeBookCategories;
        static readonly UNKNOWN: Internal.RecipeBookCategories;
        static readonly field_243232_t: [undefined, undefined, undefined];
        static readonly field_243233_u: [undefined, undefined, undefined, undefined];
        static readonly FURNACE_MISC: Internal.RecipeBookCategories;
        static readonly field_243234_v: [undefined, undefined, undefined, undefined, undefined];
    }
    type RecipeBookCategories_ = "crafting_search" | "crafting_building_blocks" | "crafting_redstone" | "crafting_equipment" | "crafting_misc" | "furnace_search" | "furnace_food" | "furnace_blocks" | "furnace_misc" | "blast_furnace_search" | "blast_furnace_blocks" | "blast_furnace_misc" | "smoker_search" | "smoker_food" | "stonecutter" | "smithing" | "campfire" | "unknown" | RecipeBookCategories;
    interface IShaderManager {
        func_147985_d(): void;
        func_147986_h(): number;
        func_147989_e(): Internal.ShaderLoader;
        func_147994_f(): Internal.ShaderLoader;
    }
    type IShaderManager_ = IShaderManager;
    class RandomBlockStateMatchRuleTest extends Internal.RuleTest {
        static readonly field_237121_a_: Internal.Codec<Internal.RandomBlockStateMatchRuleTest>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockState, arg1: number);
    }
    type RandomBlockStateMatchRuleTest_ = RandomBlockStateMatchRuleTest;
    class AmbientOcclusionStatus extends Internal.Enum<Internal.AmbientOcclusionStatus> {
        func_216569_b(): string;
        static valueOf(arg0: string): Internal.AmbientOcclusionStatus;
        static values(): Internal.AmbientOcclusionStatus[];
        static func_216570_a(arg0: number): Internal.AmbientOcclusionStatus;
        func_216572_a(): number;
        static readonly MIN: Internal.AmbientOcclusionStatus;
        static readonly MAX: Internal.AmbientOcclusionStatus;
        static readonly OFF: Internal.AmbientOcclusionStatus;
    }
    type AmbientOcclusionStatus_ = "off" | "min" | "max" | AmbientOcclusionStatus;
    interface Pointer {
        address(): number;
        (): number;
    }
    type Pointer_ = (()=>number) | Pointer;
    abstract class RenderElement extends Document.Object implements Internal.IScreenRenderable {
        getHeight(): number;
        getX(): number;
        withBounds<T_>(arg0: number, arg1: number): T_;
        getY(): number;
        at<T_>(arg0: number, arg1: number): T_;
        at<T_>(arg0: number, arg1: number, arg2: number): T_;
        getZ(): number;
        withAlpha<T_>(arg0: number): T_;
        static of(arg0: Internal.IScreenRenderable_): Internal.RenderElement;
        draw(arg0: Internal.MatrixStack, arg1: Internal.AbstractGui, arg2: number, arg3: number): void;
        draw(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        getWidth(): number;
        render(arg0: Internal.MatrixStack): void;
        static EMPTY: Internal.RenderElement;
        get x(): number;
        get width(): number;
        get y(): number;
        get z(): number;
        get height(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RenderElement_ = RenderElement;
    interface SkinManager$ISkinAvailableCallback {
        onSkinTextureAvailable(arg0: Internal.MinecraftProfileTexture$Type_, arg1: ResourceLocation_, arg2: Internal.MinecraftProfileTexture): void;
        (arg0: Internal.MinecraftProfileTexture$Type, arg1: ResourceLocation, arg2: Internal.MinecraftProfileTexture): void;
    }
    type SkinManager$ISkinAvailableCallback_ = ((arg0: Internal.MinecraftProfileTexture$Type, arg1: ResourceLocation, arg2: Internal.MinecraftProfileTexture)=>void) | SkinManager$ISkinAvailableCallback;
    interface ILevelChunk {
        setEntityLoadHook(arg0: Internal.Runnable_): void;
        getEntitiesWereLoaded(): boolean;
        runEntityLoadHook(): void;
    }
    type ILevelChunk_ = ILevelChunk;
    abstract class InventoryFilterItem extends Internal.BaseFilterItem {
        canElytraFly(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        onEnchantment(arg0: Internal.ItemStack, arg1: Internal.List<Internal.EnchantmentData>): Internal.ItemStack;
        getItem(): Internal.Item;
        getSmeltingExperience(arg0: Internal.ItemStack): number;
        setDamage(arg0: Internal.ItemStack, arg1: number): void;
        canHarvestBlock(arg0: Internal.ItemStack, arg1: Internal.BlockState): boolean;
        renderHelmetOverlay(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: number, arg3: number, arg4: number): void;
        getItems(arg0: Internal.ItemStack, arg1: Internal.Set<Internal.Item>): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        damageItem<T_>(arg0: Internal.ItemStack, arg1: number, arg2: T_, arg3: Internal.Consumer_<T_>): number;
        getItemEnchantability(arg0: Internal.ItemStack): number;
        isTreasureAllowed(arg0: Internal.ItemStack, arg1: boolean): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: boolean): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack): number;
        getArmorModel<A_>(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: EquipmentSlot_, arg3: A_): A_;
        readShareTag(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): void;
        onEntityItemUpdate(arg0: Internal.ItemStack, arg1: Internal.ItemEntity): boolean;
        getDamage(arg0: Internal.ItemStack): number;
        showDurabilityBar(arg0: Internal.ItemStack): boolean;
        isBookEnchantable(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getDisplayItemStacks(arg0: Internal.ItemStack, arg1: Internal.List<Internal.ItemStack>): void;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.LivingEntity, arg3: Internal.LivingEntity): boolean;
        onUsingTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): void;
        createEntity(arg0: Internal.World, arg1: Internal.Entity, arg2: Internal.ItemStack): Internal.Entity;
        isPiglinCurrency(arg0: Internal.ItemStack): boolean;
        getCreativeTabs(): Internal.Collection<Internal.ItemGroup>;
        getShareTag(arg0: Internal.ItemStack): Internal.CompoundNBT;
        getInventorySize(arg0: Internal.ItemStack): number;
        getRGBDurabilityForDisplay(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack, arg1: Internal.IRecipeType<any>): number;
        onDroppedByPlayer(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity): boolean;
        isDamageable(arg0: Internal.ItemStack): boolean;
        onEntitySwing(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        elytraFlightTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): boolean;
        addSlots(arg0: Internal.ItemStack, arg1: Internal.List<Internal.InventoryFilterItem$FilterSlot>): void;
        selectEnchantments(arg0: Internal.List<Internal.EnchantmentData>, arg1: Internal.Random, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number, arg6: boolean): Internal.List<Internal.EnchantmentData>;
        getAttributeModifiers(arg0: EquipmentSlot_, arg1: Internal.ItemStack): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        filterItem(arg0: Internal.ItemStack, arg1: Internal.Item_): boolean;
        onLeftClickEntity(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.Entity): boolean;
        canEquip(arg0: Internal.ItemStack, arg1: EquipmentSlot_, arg2: Internal.Entity): boolean;
        getDurabilityForDisplay(arg0: Internal.ItemStack): number;
        onBlockStartBreak(arg0: Internal.ItemStack, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.MobEntity): void;
        canContinueUsing(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getEntityLifespan(arg0: Internal.ItemStack, arg1: Internal.World): number;
        getArmorTexture(arg0: Internal.ItemStack, arg1: Internal.Entity, arg2: EquipmentSlot_, arg3: string): string;
        hasCustomEntity(arg0: Internal.ItemStack): boolean;
        getHighlightTip(arg0: Internal.ItemStack, arg1: Internal.ITextComponent_): Internal.ITextComponent;
        static getInventory(arg0: Internal.ItemStack): Internal.ItemInventory;
        getMaxDamage(arg0: Internal.ItemStack): number;
        getCreatorModId(arg0: Internal.ItemStack): string;
        isDamaged(arg0: Internal.ItemStack): boolean;
        onArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.PlayerEntity): void;
        hasContainerItem(arg0: Internal.ItemStack): boolean;
        isShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        doesSneakBypassUse(arg0: Internal.ItemStack, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        onItemUseFirst(arg0: Internal.ItemStack, arg1: Internal.ItemUseContext): Internal.ActionResultType;
        getContainerItem(arg0: Internal.ItemStack): Internal.ItemStack;
        setRegistryName(arg0: ResourceLocation_): any;
        getEquipmentSlot(arg0: Internal.ItemStack): EquipmentSlot;
        initCapabilities(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): Internal.ICapabilityProvider;
        getItemStackLimit(arg0: Internal.ItemStack): number;
        getFontRenderer(arg0: Internal.ItemStack): Internal.FontRenderer;
        forciblyAllowsTableEnchantment(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        makesPiglinsNeutral(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        isEnderMask(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.EndermanEntity): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        get item(): Internal.Item;
        get creativeTabs(): Internal.Collection<Internal.ItemGroup>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type InventoryFilterItem_ = InventoryFilterItem;
    class ItemToolTierEventJS extends Internal.StartupEventJS {
        add(id: string, tier: Internal.Consumer_<Internal.ModifiedToolTier_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ItemToolTierEventJS_ = ItemToolTierEventJS;
    class RenderState$WriteMaskState extends Internal.RenderState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean, arg1: boolean);
    }
    type RenderState$WriteMaskState_ = RenderState$WriteMaskState;
    class SCombatPacket$Event extends Internal.Enum<Internal.SCombatPacket$Event> {
        static valueOf(arg0: string): Internal.SCombatPacket$Event;
        static values(): Internal.SCombatPacket$Event[];
        static readonly ENTITY_DIED: Internal.SCombatPacket$Event;
        static readonly ENTER_COMBAT: Internal.SCombatPacket$Event;
        static readonly END_COMBAT: Internal.SCombatPacket$Event;
    }
    type SCombatPacket$Event_ = "enter_combat" | "end_combat" | "entity_died" | SCombatPacket$Event;
    class DecimalFormatSymbols extends Document.Object implements Internal.Cloneable, Internal.Serializable {
        setPercent(arg0: string): void;
        getCurrencySymbol(): string;
        getMonetaryGroupingSeparator(): string;
        getPatternSeparator(): string;
        setCurrency(arg0: Internal.Currency): void;
        getNaN(): string;
        setMonetaryDecimalSeparator(arg0: string): void;
        setInfinity(arg0: string): void;
        getGroupingSeparator(): string;
        getPercent(): string;
        setMinusSign(arg0: string): void;
        static getAvailableLocales(): Internal.Locale[];
        getCurrency(): Internal.Currency;
        getDecimalSeparator(): string;
        setCurrencySymbol(arg0: string): void;
        getDigit(): string;
        setPatternSeparator(arg0: string): void;
        getPerMill(): string;
        getInternationalCurrencySymbol(): string;
        setPerMill(arg0: string): void;
        getMinusSign(): string;
        getExponentSeparator(): string;
        getZeroDigit(): string;
        getInfinity(): string;
        setDecimalSeparator(arg0: string): void;
        setGroupingSeparator(arg0: string): void;
        setInternationalCurrencySymbol(arg0: string): void;
        setDigit(arg0: string): void;
        setExponentSeparator(arg0: string): void;
        setMonetaryGroupingSeparator(arg0: string): void;
        setZeroDigit(arg0: string): void;
        getMonetaryDecimalSeparator(): string;
        clone(): any;
        setNaN(arg0: string): void;
        static getInstance(arg0: Internal.Locale): Internal.DecimalFormatSymbols;
        static getInstance(): Internal.DecimalFormatSymbols;
        getLocale(): Internal.Locale;
        get exponentSeparator(): string;
        get internationalCurrencySymbol(): string;
        get minusSign(): string;
        get instance(): Internal.DecimalFormatSymbols;
        get decimalSeparator(): string;
        get monetaryGroupingSeparator(): string;
        get perMill(): string;
        get currencySymbol(): string;
        get groupingSeparator(): string;
        get locale(): Internal.Locale;
        get percent(): string;
        get availableLocales(): Internal.Locale[];
        get monetaryDecimalSeparator(): string;
        get zeroDigit(): string;
        get naN(): string;
        get currency(): Internal.Currency;
        get infinity(): string;
        get patternSeparator(): string;
        get digit(): string;
        set exponentSeparator(arg0: string);
        set internationalCurrencySymbol(arg0: string);
        set minusSign(arg0: string);
        set decimalSeparator(arg0: string);
        set monetaryGroupingSeparator(arg0: string);
        set perMill(arg0: string);
        set currencySymbol(arg0: string);
        set groupingSeparator(arg0: string);
        set percent(arg0: string);
        set monetaryDecimalSeparator(arg0: string);
        set zeroDigit(arg0: string);
        set naN(arg0: string);
        set infinity(arg0: string);
        set currency(arg0: Internal.Currency);
        set digit(arg0: string);
        set patternSeparator(arg0: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Locale);
    }
    type DecimalFormatSymbols_ = DecimalFormatSymbols;
    interface WindowStateListener extends Internal.EventListener {
        windowStateChanged(arg0: Internal.WindowEvent): void;
        (arg0: Internal.WindowEvent): void;
    }
    type WindowStateListener_ = ((arg0: Internal.WindowEvent)=>void) | WindowStateListener;
    abstract class NumberConfig <T> extends Internal.ConfigFromString<T> {
        getStringForGUI(v: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>): Internal.ITextComponent;
        getColor(v: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>): Internal.Color4I;
        fader(v: boolean): Internal.NumberConfig<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>>;
        readonly min: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>;
        readonly max: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>;
        static readonly COLOR: Internal.Color4I;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(mn: T, mx: T);
    }
    type NumberConfig_<T> = NumberConfig<T>;
    interface PrimitiveIterator$OfLong extends Internal.PrimitiveIterator<number, Internal.LongConsumer> {
        next(): any;
        next(): number;
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: Internal.LongConsumer_): void;
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
        nextLong(): number;
        (): number;
    }
    type PrimitiveIterator$OfLong_ = (()=>number) | PrimitiveIterator$OfLong;
    class WalkTarget extends Document.Object {
        func_220965_b(): number;
        func_220964_c(): number;
        func_220966_a(): Internal.IPosWrapper;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: BlockPos, arg1: number, arg2: number);
        constructor(arg0: Internal.IPosWrapper, arg1: number, arg2: number);
        constructor(arg0: Vec3, arg1: number, arg2: number);
    }
    type WalkTarget_ = WalkTarget;
    class AddOreProperties extends Document.Object {
        setWorldgenLayer(id: string): void;
        setClusterCount(c: number): void;
        setBlock(id: string): void;
        noSurface: boolean;
        chance: number;
        readonly biomes: Internal.WorldgenEntryList;
        clusterMaxSize: number;
        clusterMinCount: number;
        clusterMaxCount: number;
        minHeight: number;
        maxHeight: number;
        retrogen: number;
        squared: boolean;
        _block: Internal.BlockState;
        readonly spawnsIn: Internal.WorldgenEntryList;
        clusterMinSize: number;
        _worldgenLayer: DecorationGenerationStep;
        set clusterCount(c: number);
        set block(id: string);
        set worldgenLayer(id: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AddOreProperties_ = AddOreProperties;
    abstract class ConfigFromString <T> extends Internal.ConfigValue<T> {
        getStringFromValue(v: Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<Internal.ConfigValue<T>>>>): string;
        parse(arg0: Internal.Consumer_<Internal.ConfigValue_<Internal.ConfigValue_<Internal.ConfigValue_<Internal.ConfigValue_<T>>>>>, arg1: string): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ConfigFromString_<T> = ConfigFromString<T>;
    interface Object2IntFunction <K> extends it.unimi.dsi.fastutil.Function<K, number>, Internal.ToIntFunction<K> {
        defaultReturnValue(arg0: number): void;
        defaultReturnValue(): number;
        getInt(arg0: any): number;
        applyAsInt(arg0: K): number;
        removeInt(arg0: any): number;
        get(arg0: any): number;
        get(arg0: any): any;
        put(arg0: any, arg1: any): any;
        put(arg0: K, arg1: number): number;
        put(arg0: K, arg1: number): number;
        remove(arg0: any): any;
        remove(arg0: any): number;
        (arg0: any): number;
    }
    type Object2IntFunction_<K> = ((arg0: any)=>number) | Object2IntFunction<K>;
    class StarLocation extends Document.Object {
        getDistanceToOrigin(): number;
        asPoint(): Internal.Point;
        readonly x: number;
        readonly y: number;
        get distanceToOrigin(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
    }
    type StarLocation_ = StarLocation;
    interface ObjLongConsumer <T> {
        accept(arg0: T, arg1: number): void;
        (arg0: T, arg1: number): void;
    }
    type ObjLongConsumer_<T> = ((arg0: T, arg1: number)=>void) | ObjLongConsumer<T>;
    class TippedArrowRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type TippedArrowRecipe_ = TippedArrowRecipe;
    interface IEntity {
        getTouchedHoney(): boolean;
        setTouchingHoney(arg0: boolean): void;
    }
    type IEntity_ = IEntity;
    class RenderLivingEvent$Pre <T, M> extends Internal.RenderLivingEvent<T, M> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.LivingRenderer<T, M>, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer, arg5: number);
    }
    type RenderLivingEvent$Pre_<T, M> = RenderLivingEvent$Pre<T, M>;
    class LivingSpawnEvent extends Internal.LivingEvent {
        getWorld(): Internal.IWorld;
        getX(): number;
        getY(): number;
        getZ(): number;
        get world(): Internal.IWorld;
        get x(): number;
        get y(): number;
        get z(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MobEntity, arg1: Internal.IWorld, arg2: number, arg3: number, arg4: number);
    }
    type LivingSpawnEvent_ = LivingSpawnEvent;
    interface ParticleManager$IParticleMetaFactory <T> {
        create(arg0: Internal.IAnimatedSprite): Internal.IParticleFactory<T>;
        (arg0: Internal.IAnimatedSprite): Internal.IParticleFactory<T>;
    }
    type ParticleManager$IParticleMetaFactory_<T> = ((arg0: Internal.IAnimatedSprite)=>Internal.IParticleFactory<T>) | ParticleManager$IParticleMetaFactory<T>;
    class RecipesUpdatedEvent extends net.minecraftforge.eventbus.api.Event {
        getRecipeManager(): Internal.RecipeManager;
        get recipeManager(): Internal.RecipeManager;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.RecipeManager);
    }
    type RecipesUpdatedEvent_ = RecipesUpdatedEvent;
    interface Matrix3fExtended {
        rotate(arg0: Internal.Quaternion): void;
        transformVecZ(dir: Internal.Vector3f): number;
        transformVecZ(arg0: number, arg1: number, arg2: number): number;
        transformVecY(arg0: number, arg1: number, arg2: number): number;
        transformVecY(dir: Internal.Vector3f): number;
        transformVecX(dir: Internal.Vector3f): number;
        transformVecX(arg0: number, arg1: number, arg2: number): number;
        computeNormal(arg0: Internal.Direction_): number;
    }
    type Matrix3fExtended_ = Matrix3fExtended;
    interface IItemColor {
        getColor(arg0: Internal.ItemStack, arg1: number): number;
        (arg0: Internal.ItemStack, arg1: number): number;
    }
    type IItemColor_ = ((arg0: Internal.ItemStack, arg1: number)=>number) | IItemColor;
    class CatEntity extends Internal.DyingEntity {
        shouldRiderSit(): boolean;
        func_213414_ei(): Internal.DyeColor;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_70619_bc(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213416_eg(): boolean;
        func_213408_v(arg0: number): number;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_213424_x(arg0: number): number;
        func_213421_w(arg0: number): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213422_r(arg0: number): void;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_213420_ej(): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.CatEntity;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_213413_ef(): number;
        hasCooldown(): boolean;
        func_213419_u(arg0: boolean): void;
        func_213409_eh(): boolean;
        isMultipartEntity(): boolean;
        static func_234184_eY_(): Internal.AttributeModifierMap$MutableAttribute;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_213415_v(arg0: boolean): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_213423_ee(): ResourceLocation;
        formatLoc(arg0: Vec3): string;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_213417_a(arg0: Internal.DyeColor_): void;
        static field_213426_bE: Internal.Ingredient;
        static readonly field_213425_bD: {0:ResourceLocation,1:ResourceLocation,2:ResourceLocation,3:ResourceLocation,4:ResourceLocation,5:ResourceLocation,6:ResourceLocation,7:ResourceLocation,8:ResourceLocation,9:ResourceLocation,10:ResourceLocation};
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.CatEntity>, arg1: Internal.World);
    }
    type CatEntity_ = CatEntity;
    class SStatisticsPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_148974_c(): Internal.Map<Internal.Stat<any>, number>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Object2IntMap<Internal.Stat<any>>);
    }
    type SStatisticsPacket_ = SStatisticsPacket;
    interface TypeWrapperFactory <T> {
        wrap(arg0: any): T;
        (arg0: any): T;
    }
    type TypeWrapperFactory_<T> = ((arg0: any)=>T) | TypeWrapperFactory<T>;
    class AnchorPoint extends Internal.Enum<Internal.AnchorPoint> {
        getX(arg0: Internal.ExtendedMenuScreen): number;
        getY(arg0: Internal.ExtendedMenuScreen): number;
        static valueOf(arg0: string): Internal.AnchorPoint;
        static values(): Internal.AnchorPoint[];
        static readonly TOP_LEFT: Internal.AnchorPoint;
        static readonly BOTTOM_CENTER: Internal.AnchorPoint;
        static readonly JAVAED: Internal.AnchorPoint;
        static readonly BOTTOM_RIGHT: Internal.AnchorPoint;
        static readonly SPLASH: Internal.AnchorPoint;
        static readonly MIDDLE_RIGHT: Internal.AnchorPoint;
        static readonly TOP_CENTER: Internal.AnchorPoint;
        static readonly MIDDLE_CENTER: Internal.AnchorPoint;
        static readonly DEFAULT_LOGO: Internal.AnchorPoint;
        static readonly TOP_RIGHT: Internal.AnchorPoint;
        static readonly FORGE: Internal.AnchorPoint;
        static readonly TITLE: Internal.AnchorPoint;
        static readonly BOTTOM_LEFT: Internal.AnchorPoint;
        static readonly DEFAULT: Internal.AnchorPoint;
        static readonly MIDDLE_LEFT: Internal.AnchorPoint;
    }
    type AnchorPoint_ = "top_left" | "top_center" | "top_right" | "middle_left" | "middle_center" | "middle_right" | "bottom_left" | "bottom_center" | "bottom_right" | "default" | "default_logo" | "splash" | "title" | "javaed" | "forge" | AnchorPoint;
    class SceneBuilder$EffectInstructions extends Document.Object {
        createRedstoneParticles(arg0: BlockPos, arg1: number, arg2: number): void;
        superGlue(arg0: BlockPos, arg1: Internal.Direction_, arg2: boolean): void;
        rotationDirectionIndicator(arg0: BlockPos): void;
        emitParticles(arg0: Vec3, arg1: Internal.EmitParticlesInstruction$Emitter_, arg2: number, arg3: number): void;
        indicateSuccess(arg0: BlockPos): void;
        rotationSpeedIndicator(arg0: BlockPos): void;
        indicateRedstone(arg0: BlockPos): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SceneBuilder);
    }
    type SceneBuilder$EffectInstructions_ = SceneBuilder$EffectInstructions;
    interface IMarketRegistryDefaultHandler {
        getDefaultPayment(): Internal.ItemStack;
        isEnabledByDefault(): boolean;
        register(arg0: Internal.ItemStack): void;
        register(arg0: Internal.ItemStack, arg1: number): void;
    }
    type IMarketRegistryDefaultHandler_ = IMarketRegistryDefaultHandler;
    class LootPool$Builder extends Document.Object implements Internal.ILootFunctionConsumer<Internal.LootPool$Builder>, Internal.ILootConditionConsumer<Internal.LootPool$Builder> {
        func_216045_a(arg0: Internal.LootEntry$Builder<any>): Internal.LootPool$Builder;
        func_216044_b(): Internal.LootPool;
        func_212841_b_(arg0: Internal.ILootFunction$IBuilder_): any;
        func_212841_b_(arg0: Internal.ILootFunction$IBuilder_): Internal.LootPool$Builder;
        name(arg0: string): Internal.LootPool$Builder;
        func_212862_c_(): any;
        func_212862_c_(): Internal.LootPool$Builder;
        func_212840_b_(arg0: Internal.ILootCondition$IBuilder_): Internal.LootPool$Builder;
        func_212840_b_(arg0: Internal.ILootCondition$IBuilder_): any;
        func_216046_a(arg0: Internal.IRandomRange): Internal.LootPool$Builder;
        bonusRolls(arg0: number, arg1: number): Internal.LootPool$Builder;
        readonly field_216047_a: Internal.List<Internal.LootEntry>;
        readonly field_216048_b: Internal.List<Internal.ILootCondition>;
        readonly field_216049_c: Internal.List<Internal.ILootFunction>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type LootPool$Builder_ = LootPool$Builder;
    class WorldGenRegion extends Document.Object implements Internal.ISeedReader {
        func_201696_r(arg0: BlockPos): number;
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        func_226666_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.Stream<Internal.VoxelShape>;
        func_225523_d_(): Internal.BiomeManager;
        func_72912_H(): Internal.IWorldInfo;
        func_175647_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<T_>): Internal.List<T_>;
        func_225521_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity): boolean;
        func_225604_a_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_201680_b(): number;
        func_175707_a(arg0: BlockPos, arg1: BlockPos): boolean;
        func_217344_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        func_226669_j_(arg0: Internal.Entity): boolean;
        func_217348_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus_): Internal.IChunk;
        func_226658_a_(arg0: Internal.LightType_, arg1: BlockPos): number;
        func_234939_c_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_230487_a_(arg0: Internal.Direction_, arg1: boolean): number;
        func_72905_C(): number;
        func_217374_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: Internal.AxisAlignedBB): Internal.List<T_>;
        func_242403_h(arg0: BlockPos): number;
        func_230315_m_(): Internal.DimensionType;
        func_184133_a(arg0: Internal.PlayerEntity, arg1: BlockPos, arg2: Internal.SoundEvent_, arg3: Internal.SoundCategory_, arg4: number, arg5: number): void;
        func_201676_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_201672_e(): Internal.ServerWorld;
        func_217370_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity): Internal.PlayerEntity;
        func_175710_j(arg0: BlockPos): boolean;
        func_217359_a(arg0: Internal.EntityPredicate, arg1: number, arg2: number, arg3: number): Internal.PlayerEntity;
        func_225317_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217378_a(arg0: Internal.PlayerEntity, arg1: number, arg2: BlockPos, arg3: number): void;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        func_226663_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.ISelectionContext): boolean;
        func_201674_k(): Internal.Random;
        func_230547_a_(arg0: BlockPos, arg1: Internal.Block_): void;
        func_175627_a(arg0: BlockPos, arg1: Internal.Direction_): number;
        func_175623_d(arg0: BlockPos): boolean;
        func_241211_a_(arg0: BlockPos, arg1: Internal.BlockState, arg2: number, arg3: number): boolean;
        func_242415_f(arg0: number): number;
        func_72839_b(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.List<Internal.Entity>;
        func_217360_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        func_242414_af(): number;
        func_175649_E(arg0: BlockPos): Internal.DifficultyInstance;
        func_195594_a(arg0: Internal.IParticleData, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        func_225525_a_(arg0: BlockPos, arg1: Internal.ColorResolver_): number;
        func_175659_aa(): Internal.Difficulty;
        func_241457_a_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): Internal.Stream<Internal.VoxelShape>;
        func_217375_a(arg0: BlockPos, arg1: Internal.Predicate_<Internal.BlockState_>): boolean;
        func_226665_a__(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): boolean;
        func_217371_b(arg0: Internal.UUID): Internal.PlayerEntity;
        func_217349_x(arg0: BlockPos): Internal.IChunk;
        isAreaLoaded(arg0: BlockPos, arg1: number): boolean;
        func_217379_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_234865_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): boolean;
        func_234867_d_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_225316_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<T_>): Internal.List<T_>;
        func_225524_e_(): Internal.WorldLightManager;
        func_217298_h(arg0: BlockPos): number;
        func_201679_a(): number;
        func_190525_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Predicate_<Internal.Entity_>): Internal.PlayerEntity;
        func_226668_i_(arg0: Internal.Entity): boolean;
        func_241827_a(arg0: Internal.SectionPos, arg1: net.minecraft.world.gen.feature.structure.Structure_<any>): Internal.Stream<Internal.StructureStart<any>>;
        func_217361_a<T_>(arg0: Internal.List<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number): T_;
        func_226659_b_(arg0: BlockPos, arg1: number): number;
        func_72953_d(arg0: Internal.AxisAlignedBB): boolean;
        func_181545_F(): number;
        func_241851_ab(): number;
        func_226691_t_(arg0: BlockPos): Internal.Biome;
        func_175657_ab(): number;
        func_241212_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity, arg3: number): boolean;
        func_217353_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus_, arg3: boolean): Internal.IChunk;
        func_225522_c_(arg0: number, arg1: number): Internal.IBlockReader;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_217372_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number): Internal.PlayerEntity;
        func_201670_d(): boolean;
        func_242405_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): boolean;
        func_217376_c(arg0: Internal.Entity): boolean;
        func_205219_F_(): Internal.ITickList<Internal.Fluid>;
        func_217357_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217301_I(): number;
        func_175667_e(arg0: BlockPos): boolean;
        func_242413_ae(): number;
        func_241828_r(): Internal.DynamicRegistries;
        func_226660_f_(arg0: BlockPos): boolean;
        func_212866_a_(arg0: number, arg1: number): Internal.IChunk;
        func_234938_ad_(): number;
        func_242417_l(arg0: Internal.Entity): void;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_217362_a(arg0: Internal.Entity, arg1: number): Internal.PlayerEntity;
        func_205220_G_(): Internal.ITickList<Internal.Block>;
        func_201671_F(arg0: BlockPos): boolean;
        func_205049_d(arg0: BlockPos, arg1: number): number;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
        func_217366_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): Internal.PlayerEntity;
        func_72863_F(): Internal.AbstractChunkProvider;
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_205052_D(arg0: BlockPos): number;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
        func_201572_C(): number;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_175674_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.List<Internal.Entity>;
        func_226664_a_(arg0: Internal.AxisAlignedBB): boolean;
        func_175655_b(arg0: BlockPos, arg1: boolean): boolean;
        func_217373_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: Internal.AxisAlignedBB): Internal.List<Internal.PlayerEntity>;
        func_242406_i(arg0: BlockPos): Internal.Optional<Internal.RegistryKey<Internal.Biome>>;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_180501_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: number): boolean;
        func_217354_b(arg0: number, arg1: number): boolean;
        func_225318_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        func_217377_a(arg0: BlockPos, arg1: boolean): boolean;
        func_217358_a(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        func_175723_af(): Internal.WorldBorder;
        func_217369_A(): Internal.List<Internal.PlayerEntity>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ServerWorld, arg1: Internal.List<Internal.IChunk>);
    }
    type WorldGenRegion_ = WorldGenRegion;
    class ClientPlayNetHandler extends Document.Object implements Internal.IClientPlayNetHandler {
        func_200232_a(arg0: Internal.SPlayerLookPacket): void;
        func_225312_a(arg0: Internal.SPlayerDiggingPacket): void;
        func_175104_a(arg0: string): Internal.NetworkPlayerInfo;
        func_217273_a(arg0: Internal.SMerchantOffersPacket): void;
        func_211523_k(): Internal.NBTQueryManager;
        func_239164_m_(): Internal.Set<Internal.RegistryKey<Internal.World>>;
        func_147250_a(arg0: Internal.SUpdateScorePacket): void;
        func_147277_a(arg0: Internal.SPlaySoundEventPacket): void;
        func_147296_c(): void;
        func_147235_a(arg0: Internal.SSpawnObjectPacket): void;
        func_147254_a(arg0: Internal.SDisplayObjectivePacket): void;
        func_194307_a(arg0: Internal.SPlaceGhostRecipePacket): void;
        func_147231_a(arg0: Internal.ITextComponent_): void;
        func_147273_a(arg0: Internal.SUpdateTileEntityPacket): void;
        func_217266_a(arg0: Internal.SSpawnMovingSoundEffectPacket): void;
        func_199724_l(): Internal.ITagCollectionSupplier;
        func_184328_a(arg0: Internal.SSetPassengersPacket): void;
        func_147239_a(arg0: Internal.SConfirmTransactionPacket): void;
        handler$zog000$be_openSignEditor(arg0: Internal.SOpenSignMenuPacket, arg1: Internal.CallbackInfo): void;
        handler$zog000$be_onEntityUpdate(arg0: Internal.SUpdateTileEntityPacket, arg1: Internal.CallbackInfo): void;
        func_175098_a(arg0: Internal.SCombatPacket): void;
        func_184324_a(arg0: Internal.SCooldownPacket): void;
        func_195513_b(): Internal.ClientSuggestionProvider;
        func_175094_a(arg0: Internal.SCameraPacket): void;
        func_147261_a(arg0: Internal.SBlockActionPacket): void;
        func_147288_a(arg0: Internal.SSpawnPaintingPacket): void;
        func_147246_a(arg0: Internal.SCollectItemPacket): void;
        handler$ccm000$handleLevelChunkFTBC(packet: Internal.SChunkDataPacket, ci: Internal.CallbackInfo): void;
        func_147280_a(arg0: Internal.SRespawnPacket): void;
        func_147242_a(arg0: Internal.SEntityEquipmentPacket): void;
        func_147284_a(arg0: Internal.SEntityMetadataPacket): void;
        func_175101_a(arg0: Internal.SServerDifficultyPacket): void;
        func_211522_a(arg0: Internal.SQueryNBTResponsePacket): void;
        func_217272_a(arg0: Internal.SOpenWindowPacket): void;
        func_175105_e(): Internal.GameProfile;
        handler$ccm000$handleBlockUpdateFTBC(packet: Internal.SChangeBlockPacket, ci: Internal.CallbackInfo): void;
        func_147276_a(arg0: Internal.SCloseWindowPacket): void;
        func_147257_a(arg0: Internal.SHeldItemChangePacket): void;
        func_147291_a(arg0: Internal.SScoreboardObjectivePacket): void;
        func_147234_a(arg0: Internal.SChangeBlockPacket): void;
        func_147272_a(arg0: Internal.SKeepAlivePacket): void;
        func_147295_a(arg0: Internal.SSetExperiencePacket): void;
        func_147253_a(arg0: Internal.SDisconnectPacket): void;
        func_195510_a(arg0: Internal.STabCompletePacket): void;
        func_191982_f(): Internal.ClientAdvancementManager;
        func_184327_a(arg0: Internal.SPlaySoundEffectPacket): void;
        func_147238_a(arg0: Internal.SDestroyEntitiesPacket): void;
        func_244695_f(): Internal.Collection<Internal.UUID>;
        func_184323_a(arg0: Internal.SMoveVehiclePacket): void;
        func_217269_a(arg0: Internal.SUpdateLightPacket): void;
        func_175093_a(arg0: Internal.SWorldBorderPacket): void;
        func_199723_a(arg0: Internal.STagsListPacket): void;
        func_147264_a(arg0: Internal.SMapDataPacket): void;
        func_147260_a(arg0: Internal.SPlayEntityEffectPacket): void;
        func_147287_a(arg0: Internal.SMultiBlockChangePacket): void;
        func_195514_j(): Internal.ClientWorld;
        func_147268_a(arg0: Internal.SOpenSignMenuPacket): void;
        func_217277_l(): Internal.UUID;
        func_147245_a(arg0: Internal.SWindowPropertyPacket): void;
        func_147283_a(arg0: Internal.SExplosionPacket): void;
        func_147241_a(arg0: Internal.SWindowItemsPacket): void;
        func_175102_a(arg0: Internal.UUID): Internal.NetworkPlayerInfo;
        func_230488_a_(arg0: Internal.SWorldSpawnChangedPacket): void;
        func_147249_a(arg0: Internal.SUpdateHealthPacket): void;
        func_217271_a(arg0: Internal.SOpenHorseWindowPacket): void;
        handler$ccm000$handleChunkBlocksUpdateFTBC(packet: Internal.SMultiBlockChangePacket, ci: Internal.CallbackInfo): void;
        func_175106_d(): Internal.Collection<Internal.NetworkPlayerInfo>;
        func_239165_n_(): Internal.DynamicRegistries;
        func_184330_a(arg0: Internal.SPlayerPositionLookPacket): void;
        func_199526_e(): Internal.RecipeManager;
        func_147275_a(arg0: Internal.SEntityTeleportPacket): void;
        func_147298_b(): Internal.NetworkManager;
        func_147279_a(arg0: Internal.SAnimateHandPacket): void;
        func_147237_a(arg0: Internal.SSpawnPlayerPacket): void;
        func_147256_a(arg0: Internal.SPlayerListItemPacket): void;
        func_147290_a(arg0: Internal.SEntityPropertiesPacket): void;
        func_147252_a(arg0: Internal.SChangeGameStatePacket): void;
        func_147294_a(arg0: Internal.SAnimateBlockBreakPacket): void;
        func_195511_a(arg0: Internal.SCommandListPacket): void;
        func_184326_a(arg0: Internal.SUnloadChunkPacket): void;
        func_191981_a(arg0: Internal.SAdvancementInfoPacket): void;
        func_194022_a(arg0: Internal.SSelectAdvancementsTabPacket): void;
        func_175096_a(arg0: Internal.SPlayerListHeaderFooterPacket): void;
        func_217268_a(arg0: Internal.SOpenBookWindowPacket): void;
        func_147263_a(arg0: Internal.SChunkDataPacket): void;
        func_147240_a(arg0: Internal.SCustomPayloadPlayPacket): void;
        func_147286_a(arg0: Internal.SSpawnExperienceOrbPacket): void;
        func_147267_a(arg0: Internal.SEntityHeadLookPacket): void;
        func_195515_i(): Internal.CommandDispatcher<Internal.ISuggestionProvider>;
        func_147244_a(arg0: Internal.SEntityVelocityPacket): void;
        func_147282_a(arg0: Internal.SJoinGamePacket): void;
        func_217270_a(arg0: Internal.SUpdateViewDistancePacket): void;
        func_147251_a(arg0: Internal.SChatPacket): void;
        func_147297_a(arg0: Internal.IPacket<any>): void;
        func_147259_a(arg0: Internal.SEntityPacket): void;
        func_147236_a(arg0: Internal.SEntityStatusPacket): void;
        func_147270_a(arg0: Internal.SPlayerAbilitiesPacket): void;
        func_147293_a(arg0: Internal.SStatisticsPacket): void;
        func_199525_a(arg0: Internal.SUpdateRecipesPacket): void;
        func_195512_a(arg0: Internal.SStopSoundPacket): void;
        func_184329_a(arg0: Internal.SPlaySoundPacket): void;
        func_184325_a(arg0: Internal.SUpdateBossInfoPacket): void;
        func_175099_a(arg0: Internal.STitlePacket): void;
        func_191980_a(arg0: Internal.SRecipeBookPacket): void;
        func_175095_a(arg0: Internal.SSendResourcePackPacket): void;
        func_217267_a(arg0: Internal.SUpdateChunkPositionPacket): void;
        func_147262_a(arg0: Internal.SRemoveEntityEffectPacket): void;
        func_147285_a(arg0: Internal.SUpdateTimePacket): void;
        func_147266_a(arg0: Internal.SSetSlotPacket): void;
        func_147289_a(arg0: Internal.SSpawnParticlePacket): void;
        func_147247_a(arg0: Internal.STeamsPacket): void;
        func_147281_a(arg0: Internal.SSpawnMobPacket): void;
        func_147243_a(arg0: Internal.SMountEntityPacket): void;
        field_217287_m: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft, arg1: Internal.Screen, arg2: Internal.NetworkManager, arg3: Internal.GameProfile);
    }
    type ClientPlayNetHandler_ = ClientPlayNetHandler;
    interface IForgeChunk extends Internal.ICapabilityProvider {
    }
    type IForgeChunk_ = IForgeChunk;
    class EnchantmentContainer extends Internal.Container {
        func_178147_e(): number;
        func_217005_f(): number;
        readonly field_75168_e: Internal.IInventory;
        readonly field_75167_g: number[];
        readonly field_185001_h: number[];
        readonly field_185002_i: number[];
        readonly field_75169_l: Internal.Random;
        field_178149_f: Internal.IntReferenceHolder;
        field_217006_g: Internal.IWorldPosCallable;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IWorldPosCallable);
    }
    type EnchantmentContainer_ = EnchantmentContainer;
    class CodEntity extends Internal.AbstractGroupFishEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.CodEntity>, arg1: Internal.World);
    }
    type CodEntity_ = CodEntity;
    class LivingDamageEvent extends Internal.LivingEvent {
        getSource(): Internal.DamageSource;
        setAmount(arg0: number): void;
        getAmount(): number;
        get amount(): number;
        get source(): Internal.DamageSource;
        set amount(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.DamageSource, arg2: number);
    }
    type LivingDamageEvent_ = LivingDamageEvent;
    interface Function15 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.Function6<T10, T11, T12, T13, T14, T15, R>>;
        curry12(): Internal.Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Internal.Function3<T13, T14, T15, R>>;
        curry13(): Internal.Function13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Internal.BiFunction<T14, T15, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13, arg13: T14, arg14: T15): R;
        curry14(): Internal.Function14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Internal.Function<T15, R>>;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function8<T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function7<T9, T10, T11, T12, T13, T14, T15, R>>;
        curry10(): Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Internal.Function5<T11, T12, T13, T14, T15, R>>;
        curry11(): Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Internal.Function4<T12, T13, T14, T15, R>>;
        curry(): Internal.Function<T1, Internal.Function14<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function10<T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function9<T7, T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function12<T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function11<T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function13<T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13, arg13: T14, arg14: T15): R;
    }
    type Function15_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13, arg13: T14, arg14: T15)=>R) | Function15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>;
    class DataParameter <T> extends Document.Object {
        func_187156_b(): Internal.IDataSerializer<T>;
        func_187155_a(): number;
        field_187157_a: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.IDataSerializer<T>);
    }
    type DataParameter_<T> = DataParameter<T>;
    class FMLServerStartingEvent extends Internal.ServerLifecycleEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MinecraftServer);
        constructor();
    }
    type FMLServerStartingEvent_ = FMLServerStartingEvent;
    interface PlayerKJS {
        setStagesKJS(arg0: Internal.Stages): void;
        getStagesRawKJS(): Internal.Stages;
        getStagesKJS(): Internal.Stages;
    }
    type PlayerKJS_ = PlayerKJS;
    class ChunkRenderCacheLocal extends Internal.ChunkRenderCache {
        getRenderLayerCache(): Internal.EmbeddiumRenderLayerCache;
        init(context: Internal.ChunkRenderContext): void;
        getLocalSlice(): Internal.IBlockDisplayReader;
        getFluidRenderer(): Internal.FluidRenderer;
        getWorldSlice(): Internal.WorldSlice;
        getBlockRenderer(): Internal.BlockRenderer;
        getBlockModels(): Internal.BlockModelShapes;
        get blockRenderer(): Internal.BlockRenderer;
        get renderLayerCache(): Internal.EmbeddiumRenderLayerCache;
        get blockModels(): Internal.BlockModelShapes;
        get localSlice(): Internal.IBlockDisplayReader;
        get fluidRenderer(): Internal.FluidRenderer;
        get worldSlice(): Internal.WorldSlice;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(client: Internal.Minecraft, world: Internal.World);
    }
    type ChunkRenderCacheLocal_ = ChunkRenderCacheLocal;
    class NetworkEvent extends net.minecraftforge.eventbus.api.Event {
        getPayload(): Internal.PacketBuffer;
        getLoginIndex(): number;
        getSource(): java_.util.function_.Supplier<Internal.NetworkEvent$Context>;
        get payload(): Internal.PacketBuffer;
        get loginIndex(): number;
        get source(): java_.util.function_.Supplier<Internal.NetworkEvent$Context>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: java_.util.function_.Supplier<Internal.NetworkEvent$Context>);
    }
    type NetworkEvent_ = NetworkEvent;
    interface IKeyConflictContext {
        conflicts(arg0: Internal.IKeyConflictContext): boolean;
        isActive(): boolean;
    }
    type IKeyConflictContext_ = IKeyConflictContext;
    class NoPlacementConfig extends Document.Object implements Internal.IPlacementConfig {
        static readonly field_236555_a_: Internal.Codec<Internal.NoPlacementConfig>;
        static readonly field_236556_b_: Internal.NoPlacementConfig;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type NoPlacementConfig_ = NoPlacementConfig;
    class BindingsEvent extends net.minecraftforge.eventbus.api.Event {
        addConstant(name: string, value: any): void;
        add(name: string, value: any): void;
        addFunction(name: string, callback: Internal.DynamicFunction$Callback_, ...types: Internal.Class<any>[]): void;
        addFunction(name: string, callback: Internal.DynamicFunction$Callback_): void;
        addFunction(name: string, function_: Internal.BaseFunction): void;
        getType(): Internal.ScriptType;
        addClass(name: string, clazz: Internal.Class<any>): void;
        readonly manager: Internal.ScriptManager;
        readonly scope: Internal.Scriptable;
        readonly context: Internal.Context;
        readonly type: Internal.ScriptType;
        static readonly EVENT: me.shedaniel.architectury.event.Event<Internal.Consumer<Internal.BindingsEvent>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(m: Internal.ScriptManager, cx: Internal.Context, s: Internal.Scriptable);
    }
    type BindingsEvent_ = BindingsEvent;
    abstract class AbstractLongCollection extends Internal.AbstractCollection<number> implements Internal.LongCollection {
        add(arg0: number): boolean;
        add(arg0: number): boolean;
        toLongArray(): number[];
        toLongArray(arg0: number[]): number[];
        spliterator(): Internal.Spliterator<number>;
        forEach(arg0: Internal.Consumer_<number>): void;
        forEach(arg0: Internal.LongConsumer_): void;
        containsAll(arg0: Internal.LongCollection): boolean;
        removeIf(arg0: Internal.Predicate_<number>): boolean;
        removeIf(arg0: Internal.LongPredicate_): boolean;
        removeAll(arg0: Internal.LongCollection): boolean;
        contains(arg0: number): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.LongIterator;
        stream(): Internal.Stream<number>;
        addAll(arg0: Internal.LongCollection): boolean;
        toArray(arg0: number[]): number[];
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<number>;
        rem(arg0: number): boolean;
        retainAll(arg0: Internal.LongCollection): boolean;
    }
    type AbstractLongCollection_ = AbstractLongCollection;
    interface RecvByteBufAllocator$Handle {
        continueReading(): boolean;
        incMessagesRead(arg0: number): void;
        allocate(arg0: Internal.ByteBufAllocator): Internal.ByteBuf;
        guess(): number;
        reset(arg0: Internal.ChannelConfig): void;
        readComplete(): void;
        attemptedBytesRead(): number;
        attemptedBytesRead(arg0: number): void;
        lastBytesRead(arg0: number): void;
        lastBytesRead(): number;
    }
    type RecvByteBufAllocator$Handle_ = RecvByteBufAllocator$Handle;
    interface AmbiguityConsumer <S> {
        ambiguous(arg0: Internal.CommandNode<S>, arg1: Internal.CommandNode<S>, arg2: Internal.CommandNode<S>, arg3: Internal.Collection<string>): void;
        (arg0: Internal.CommandNode<S>, arg1: Internal.CommandNode<S>, arg2: Internal.CommandNode<S>, arg3: Internal.Collection<string>): void;
    }
    type AmbiguityConsumer_<S> = ((arg0: Internal.CommandNode<S>, arg1: Internal.CommandNode<S>, arg2: Internal.CommandNode<S>, arg3: Internal.Collection<string>)=>void) | AmbiguityConsumer<S>;
    class Chunk extends Internal.CapabilityProvider<Internal.Chunk> implements Internal.IChunk, Internal.IForgeChunk, Internal.ILevelChunk, Internal.ExtendedChunk, Internal.IChunkTimeSave {
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        func_201594_d(arg0: BlockPos): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_150813_a(arg0: Internal.TileEntity): void;
        func_203066_o(): Internal.Set<BlockPos>;
        func_201612_a(arg0: Internal.Map_<net.minecraft.world.gen.feature.structure.Structure_<any>, Internal.StructureStart_<any>>): void;
        func_217298_h(arg0: BlockPos): number;
        func_217310_r(): boolean;
        setBlockEmptinessMap(arg0: boolean[]): void;
        func_177426_a(arg0: BlockPos, arg1: Internal.TileEntity): void;
        func_222880_a(arg0: Internal.ServerWorld): void;
        setSaveTimePoint(arg0: number): void;
        getSkyEmptinessMap(): boolean[];
        func_217318_w(): void;
        func_177424_a(arg0: BlockPos, arg1: Internal.Chunk$CreateEntityType_): Internal.TileEntity;
        func_201589_g(): Internal.ChunkStatus;
        func_177409_g(arg0: boolean): void;
        getBlockEmptinessMap(): boolean[];
        func_177412_p(): Internal.World;
        func_212247_j(): Internal.ITickList<Internal.Fluid>;
        func_76625_h(): number;
        func_76606_c(arg0: number, arg1: number): boolean;
        func_76608_a(arg0: Internal.Entity, arg1: number): void;
        func_217321_u(): Internal.ChunkHolder$LocationType;
        func_217304_m(): Internal.Stream<BlockPos>;
        writeCapsToNBT(): Internal.CompoundNBT;
        func_76621_g(): boolean;
        func_222879_B(): void;
        func_201606_b(arg0: Internal.Map_<net.minecraft.world.gen.feature.structure.Structure_<any>, Internal.LongSet_>): void;
        func_177416_w(): number;
        func_76630_e(): void;
        func_201604_d(): Internal.Map<net.minecraft.world.gen.feature.structure.Structure<any>, Internal.LongSet>;
        setEntityLoadHook(loadHook: Internal.Runnable_): void;
        func_242403_h(arg0: BlockPos): number;
        getNextSaveTime(): number;
        func_227073_a_(arg0: Internal.BiomeContainer, arg1: Internal.PacketBuffer, arg2: Internal.CompoundNBT_, arg3: number): void;
        func_177414_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.List<Internal.Entity>, arg3: Internal.Predicate_<Internal.Entity_>): void;
        func_230343_a_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>, arg1: number): void;
        func_217313_a<T_>(arg0: Internal.EntityType_<any>, arg1: Internal.AxisAlignedBB, arg2: Internal.List<T_>, arg3: Internal.Predicate_<T_>): void;
        getSkyNibbles(): any[];
        handler$bcp000$onConstruct(arg0: Internal.World, arg1: Internal.ChunkPos, arg2: Internal.BiomeContainer, arg3: Internal.UpgradeData, arg4: Internal.ITickList<any>, arg5: Internal.ITickList<any>, arg6: number, arg7: Internal.ChunkSection[], arg8: Internal.Consumer_<any>, arg9: Internal.CallbackInfo): void;
        setBlockNibbles(arg0: any[]): void;
        func_217311_f(): Internal.Collection<Internal.Map$Entry<Internal.Heightmap$Type, Internal.Heightmap>>;
        func_217301_I(): number;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        func_201593_f(): boolean;
        getWorldForge(): Internal.IWorld;
        getWorldForge(): Internal.World;
        func_201576_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_225549_i_(): Internal.BiomeContainer;
        func_177430_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB, arg2: Internal.List<T_>, arg3: Internal.Predicate_<T_>): void;
        func_201591_a(arg0: Internal.CompoundNBT_): void;
        func_177429_s(): any[];
        func_201636_b(arg0: number, arg1: number): void;
        readCapsFromNBT(arg0: Internal.CompoundNBT_): void;
        func_76622_b(arg0: Internal.Entity): void;
        func_177425_e(arg0: BlockPos): void;
        handler$bcp000$onTransitionToFull(arg0: Internal.World, arg1: Internal.ChunkPrimer, arg2: Internal.CallbackInfo): void;
        func_205751_b(arg0: number, arg1: number, arg2: number): Internal.FluidState;
        func_230344_a_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>, arg1: Internal.StructureStart<any>): void;
        func_76632_l(): Internal.ChunkPos;
        func_186031_y(): Internal.ChunkSection;
        setSkyEmptinessMap(arg0: boolean[]): void;
        func_217303_b(arg0: Internal.Heightmap$Type_): Internal.Heightmap;
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_177427_f(arg0: boolean): void;
        func_205218_i_(): Internal.ITickList<Internal.Block>;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
        func_217305_b(arg0: boolean): void;
        func_76587_i(): Internal.ChunkSection[];
        func_201572_C(): number;
        func_217307_e(): Internal.WorldLightManager;
        func_201609_c(): Internal.Map<net.minecraft.world.gen.feature.structure.Structure<any>, Internal.StructureStart<any>>;
        getEntitiesWereLoaded(): boolean;
        func_201595_A(): void;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_177434_r(): Internal.Map<BlockPos, Internal.TileEntity>;
        func_230342_a_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>): Internal.StructureStart<any>;
        getBlockNibbles(): any[];
        func_201607_a(arg0: Internal.Heightmap$Type_, arg1: number[]): void;
        func_201614_D(): Internal.ShortList[];
        func_76612_a(arg0: Internal.Entity): void;
        func_230346_b_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>): Internal.LongSet;
        setSkyNibbles(arg0: any[]): void;
        func_177415_c(arg0: number): void;
        func_177432_b(arg0: number): void;
        func_196966_y(): Internal.UpgradeData;
        func_177436_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: boolean): Internal.BlockState;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        func_217314_a(arg0: java_.util.function_.Supplier_<Internal.ChunkHolder$LocationType_>): void;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_201579_g(arg0: BlockPos): Internal.CompoundNBT;
        runEntityLoadHook(): void;
        func_177417_c(arg0: boolean): void;
        func_223134_j(arg0: BlockPos): Internal.CompoundNBT;
        static readonly field_186036_a: Internal.ChunkSection;
        readonly field_201618_i: Internal.Map<BlockPos, Internal.CompoundNBT>;
        get nextSaveTime(): number;
        get skyNibbles(): any[];
        get skyEmptinessMap(): boolean[];
        get blockEmptinessMap(): boolean[];
        get entitiesWereLoaded(): boolean;
        get worldForge(): Internal.World;
        get blockNibbles(): any[];
        set skyNibbles(arg0: any[]);
        set skyEmptinessMap(arg0: boolean[]);
        set blockEmptinessMap(arg0: boolean[]);
        set entityLoadHook(loadHook: Internal.Runnable_);
        set blockNibbles(arg0: any[]);
        set saveTimePoint(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: Internal.ChunkPrimer);
        constructor(arg0: Internal.World, arg1: Internal.ChunkPos, arg2: Internal.BiomeContainer, arg3: Internal.UpgradeData, arg4: Internal.ITickList<Internal.Block>, arg5: Internal.ITickList<Internal.Fluid>, arg6: number, arg7: Internal.ChunkSection[], arg8: Internal.Consumer<Internal.Chunk>);
        constructor(arg0: Internal.World, arg1: Internal.ChunkPos, arg2: Internal.BiomeContainer);
    }
    type Chunk_ = Chunk;
    class PacketDirection extends Internal.Enum<Internal.PacketDirection> {
        static valueOf(arg0: string): Internal.PacketDirection;
        static values(): Internal.PacketDirection[];
        static readonly CLIENTBOUND: Internal.PacketDirection;
        static readonly SERVERBOUND: Internal.PacketDirection;
    }
    type PacketDirection_ = "serverbound" | "clientbound" | PacketDirection;
    abstract class Particle extends Document.Object {
        func_70541_f(arg0: number): Internal.Particle;
        func_70543_e(arg0: number): Internal.Particle;
        func_206254_h(): number;
        func_70538_b(arg0: number, arg1: number, arg2: number): void;
        func_187110_a(arg0: number, arg1: number, arg2: number): void;
        func_187114_a(arg0: number): void;
        func_225606_a_(arg0: Internal.IVertexBuilder, arg1: Internal.ActiveRenderInfo, arg2: number): void;
        shouldCull(): boolean;
        func_187108_a(arg0: Internal.AxisAlignedBB): void;
        func_187112_i(): void;
        func_189213_a(): void;
        func_187109_b(arg0: number, arg1: number, arg2: number): void;
        func_187113_k(): boolean;
        func_187116_l(): Internal.AxisAlignedBB;
        func_217558_b(): Internal.IParticleRenderType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ClientWorld, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number);
    }
    type Particle_ = Particle;
    class Object2LongEntry extends Document.Object implements Internal.Comparable<Internal.Object2LongEntry> {
        compareTo(arg0: any): number;
        compareTo(o: Internal.Object2LongEntry): number;
        readonly value: number;
        readonly key: any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(k: any, v: number);
        constructor(entry: any);
    }
    type Object2LongEntry_ = Object2LongEntry;
    class BlockModel$GuiLight extends Internal.Enum<Internal.BlockModel$GuiLight> {
        static func_230179_a_(arg0: string): Internal.BlockModel$GuiLight;
        func_230178_a_(): boolean;
        static valueOf(arg0: string): Internal.BlockModel$GuiLight;
        static values(): Internal.BlockModel$GuiLight[];
        getSerializedName(): string;
        static readonly SIDE: Internal.BlockModel$GuiLight;
        static readonly FRONT: Internal.BlockModel$GuiLight;
        get serializedName(): string;
    }
    type BlockModel$GuiLight_ = "front" | "side" | BlockModel$GuiLight;
    class FoodStats extends Document.Object implements Internal.PlayerSensitive {
        func_221410_a(arg0: Internal.Item_, arg1: Internal.ItemStack): void;
        localvar$chm000$diet$tick(arg0: boolean): boolean;
        func_75112_a(arg0: Internal.CompoundNBT_): void;
        setPlayer(arg0: Internal.PlayerEntity): void;
        func_75116_a(): number;
        func_75114_a(arg0: number): void;
        func_75122_a(arg0: number, arg1: number): void;
        func_75113_a(arg0: number): void;
        func_75121_c(): boolean;
        func_75115_e(): number;
        func_75117_b(arg0: Internal.CompoundNBT_): void;
        func_75118_a(arg0: Internal.PlayerEntity): void;
        handler$chm000$diet$addStats(arg0: number, arg1: number, arg2: Internal.CallbackInfo): void;
        func_75119_b(arg0: number): void;
        field_75125_b: number;
        field_75126_c: number;
        set player(arg0: Internal.PlayerEntity);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FoodStats_ = FoodStats;
    class JumpController extends Document.Object {
        func_75660_a(): void;
        func_75661_b(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MobEntity);
    }
    type JumpController_ = JumpController;
    class CalculationContext extends Document.Object {
        hasSource(): boolean;
        withUse(arg0: Internal.PropertyUsage_, arg1: number, arg2: java_.util.function_.Supplier_<number>): number;
        getSource<T_>(): T_;
        isSource(arg0: Internal.Predicate_<Internal.PropertySource_<any, any>>): boolean;
        isSource(arg0: Internal.PropertySource<any, any>): boolean;
        isEmpty(): boolean;
        uses(arg0: Internal.PropertyUsage_): boolean;
        get source(): T_;
        get empty(): boolean;
    }
    type CalculationContext_ = CalculationContext;
    interface FlowingFluidAccess {
        invokeCanPassThroughWall(arg0: Internal.Direction_, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: BlockPos, arg5: Internal.BlockState): boolean;
        (arg0: Internal.Direction, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: BlockPos, arg5: Internal.BlockState): boolean;
    }
    type FlowingFluidAccess_ = ((arg0: Internal.Direction, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.BlockState, arg4: BlockPos, arg5: Internal.BlockState)=>boolean) | FlowingFluidAccess;
    class ShulkerBoxTileEntity$AnimationStatus extends Internal.Enum<Internal.ShulkerBoxTileEntity$AnimationStatus> {
        static valueOf(arg0: string): Internal.ShulkerBoxTileEntity$AnimationStatus;
        static values(): Internal.ShulkerBoxTileEntity$AnimationStatus[];
        static readonly CLOSED: Internal.ShulkerBoxTileEntity$AnimationStatus;
        static readonly CLOSING: Internal.ShulkerBoxTileEntity$AnimationStatus;
        static readonly OPENING: Internal.ShulkerBoxTileEntity$AnimationStatus;
        static readonly OPENED: Internal.ShulkerBoxTileEntity$AnimationStatus;
    }
    type ShulkerBoxTileEntity$AnimationStatus_ = "closed" | "opening" | "opened" | "closing" | ShulkerBoxTileEntity$AnimationStatus;
    interface IModDataReadOnly extends Internal.INamespacedNBTReadOnly {
        getAbilities(): number;
        getUpgrades(): number;
        getSlots(arg0: Internal.SlotType): number;
        (arg0: Internal.SlotType): number;
    }
    type IModDataReadOnly_ = ((arg0: Internal.SlotType)=>number) | IModDataReadOnly;
    interface AccessibleComponent {
        requestFocus(): void;
        getLocation(): Internal.Point;
        addFocusListener(arg0: Internal.FocusListener): void;
        getLocationOnScreen(): Internal.Point;
        isFocusTraversable(): boolean;
        setBackground(arg0: java_.awt.Color): void;
        getAccessibleAt(arg0: Internal.Point): Internal.Accessible;
        getBounds(): Internal.Rectangle;
        getFontMetrics(arg0: Internal.Font): Internal.FontMetrics;
        isShowing(): boolean;
        setSize(arg0: Internal.Dimension): void;
        setLocation(arg0: Internal.Point): void;
        setFont(arg0: Internal.Font): void;
        removeFocusListener(arg0: Internal.FocusListener): void;
        setVisible(arg0: boolean): void;
        getCursor(): Internal.Cursor;
        setForeground(arg0: java_.awt.Color): void;
        isVisible(): boolean;
        setBounds(arg0: Internal.Rectangle): void;
        getForeground(): java_.awt.Color;
        setEnabled(arg0: boolean): void;
        getSize(): Internal.Dimension;
        contains(arg0: Internal.Point): boolean;
        isEnabled(): boolean;
        setCursor(arg0: Internal.Cursor): void;
        getFont(): Internal.Font;
        getBackground(): java_.awt.Color;
    }
    type AccessibleComponent_ = AccessibleComponent;
    class SmallFireballEntity extends Internal.AbstractFireballEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number);
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number);
        constructor(arg0: Internal.EntityType<Internal.SmallFireballEntity>, arg1: Internal.World);
    }
    type SmallFireballEntity_ = SmallFireballEntity;
    abstract class InputEvent extends Internal.ComponentEvent {
        isConsumed(): boolean;
        static getModifiersExText(arg0: number): string;
        isControlDown(): boolean;
        isAltGraphDown(): boolean;
        isMetaDown(): boolean;
        static getMaskForButton(arg0: number): number;
        getWhen(): number;
        consume(): void;
        getModifiersEx(): number;
        getModifiers(): number;
        isAltDown(): boolean;
        isShiftDown(): boolean;
        static readonly BUTTON1_MASK: 16;
        static readonly SHIFT_MASK: 1;
        static readonly META_DOWN_MASK: 256;
        static readonly BUTTON3_DOWN_MASK: 4096;
        static readonly SHIFT_DOWN_MASK: 64;
        static readonly CTRL_DOWN_MASK: 128;
        static readonly ALT_GRAPH_MASK: 32;
        static readonly BUTTON2_DOWN_MASK: 2048;
        static readonly ALT_GRAPH_DOWN_MASK: 8192;
        static readonly BUTTON2_MASK: 8;
        static readonly BUTTON3_MASK: 4;
        static readonly CTRL_MASK: 2;
        static readonly ALT_MASK: 8;
        static readonly META_MASK: 4;
        static readonly ALT_DOWN_MASK: 512;
        static readonly BUTTON1_DOWN_MASK: 1024;
        get consumed(): boolean;
        get altDown(): boolean;
        get controlDown(): boolean;
        get modifiersEx(): number;
        get shiftDown(): boolean;
        get metaDown(): boolean;
        get modifiers(): number;
        get when(): number;
        get altGraphDown(): boolean;
    }
    type InputEvent_ = InputEvent;
    class EnchantingTableTileEntity extends Internal.TileEntity implements Internal.INameable, Internal.ITickableTileEntity {
        requestModelDataUpdate(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_73660_a(): void;
        func_145748_c_(): Internal.ITextComponent;
        func_145818_k_(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        func_200200_C_(): Internal.ITextComponent;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        func_200229_a(arg0: Internal.ITextComponent_): void;
        onLoad(): void;
        func_200201_e(): Internal.ITextComponent;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        field_195529_l: number;
        field_195524_g: number;
        field_195523_f: number;
        field_195526_i: number;
        field_195531_n: number;
        field_195525_h: number;
        field_195530_m: number;
        field_195522_a: number;
        field_195528_k: number;
        field_195527_j: number;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EnchantingTableTileEntity_ = EnchantingTableTileEntity;
    interface LongIterator extends Internal.PrimitiveIterator$OfLong {
        next(): any;
        next(): number;
        skip(arg0: number): number;
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
        nextLong(): number;
        (): number;
    }
    type LongIterator_ = (()=>number) | LongIterator;
    interface Stream$Builder <T> extends Internal.Consumer<T> {
        add(arg0: T): Internal.Stream$Builder<T>;
        build(): Internal.Stream<T>;
        accept(arg0: T): void;
    }
    type Stream$Builder_<T> = Stream$Builder<T>;
    class PlayerModelPart extends Internal.Enum<Internal.PlayerModelPart> {
        func_179327_a(): number;
        func_179326_d(): Internal.ITextComponent;
        func_179329_c(): string;
        static valueOf(arg0: string): Internal.PlayerModelPart;
        static values(): Internal.PlayerModelPart[];
        static readonly RIGHT_PANTS_LEG: Internal.PlayerModelPart;
        static readonly LEFT_PANTS_LEG: Internal.PlayerModelPart;
        static readonly JACKET: Internal.PlayerModelPart;
        static readonly RIGHT_SLEEVE: Internal.PlayerModelPart;
        static readonly HAT: Internal.PlayerModelPart;
        static readonly LEFT_SLEEVE: Internal.PlayerModelPart;
        static readonly CAPE: Internal.PlayerModelPart;
    }
    type PlayerModelPart_ = "cape" | "jacket" | "left_sleeve" | "right_sleeve" | "left_pants_leg" | "right_pants_leg" | "hat" | PlayerModelPart;
    interface ISerializableComponent extends Internal.IMachineComponent {
        serialize(arg0: Internal.CompoundNBT_): void;
        deserialize(arg0: Internal.CompoundNBT_): void;
    }
    type ISerializableComponent_ = ISerializableComponent;
    abstract class LineMetrics extends Document.Object {
        getAscent(): number;
        getBaselineIndex(): number;
        getStrikethroughOffset(): number;
        getHeight(): number;
        getUnderlineThickness(): number;
        getBaselineOffsets(): number[];
        getStrikethroughThickness(): number;
        getNumChars(): number;
        getUnderlineOffset(): number;
        getDescent(): number;
        getLeading(): number;
        get strikethroughThickness(): number;
        get descent(): number;
        get ascent(): number;
        get leading(): number;
        get strikethroughOffset(): number;
        get underlineThickness(): number;
        get baselineIndex(): number;
        get baselineOffsets(): number[];
        get numChars(): number;
        get height(): number;
        get underlineOffset(): number;
    }
    type LineMetrics_ = LineMetrics;
    class Explosion extends Document.Object implements Internal.ExplosionFTBC, Internal.ExplosionAccess {
        getPosition(): Vec3;
        func_77277_b(): Internal.Map<Internal.PlayerEntity, Vec3>;
        func_180342_d(): void;
        func_77278_a(): void;
        static func_222259_a(arg0: Vec3, arg1: Internal.Entity): number;
        func_77279_a(arg0: boolean): void;
        func_180343_e(): Internal.List<BlockPos>;
        getExploder(): Internal.Entity;
        func_199591_b(): Internal.DamageSource;
        func_94613_c(): Internal.LivingEntity;
        getSourceFTBC(): Internal.Entity;
        static callAddBlockDrops_$md$e571c7$0(arg0: Internal.ObjectArrayList<any>, arg1: Internal.ItemStack, arg2: BlockPos): void;
        readonly field_222260_b: Internal.Explosion$Mode;
        readonly field_199593_j: Internal.DamageSource;
        readonly field_77288_k: Internal.Map<Internal.PlayerEntity, Vec3>;
        readonly field_234893_k_: Internal.ExplosionContext;
        readonly field_77287_j: Internal.World;
        readonly field_77285_c: number;
        readonly field_77283_e: Internal.Entity;
        readonly field_77281_g: Internal.List<BlockPos>;
        readonly field_77290_i: Internal.Random;
        readonly field_77284_b: number;
        readonly field_77282_d: number;
        field_77280_f: number;
        readonly field_77286_a: boolean;
        static readonly field_242407_a: Internal.ExplosionContext;
        readonly position: Vec3;
        get sourceFTBC(): Internal.Entity;
        get exploder(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: Internal.Entity, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.List<BlockPos>);
        constructor(arg0: Internal.World, arg1: Internal.Entity, arg2: Internal.DamageSource, arg3: Internal.ExplosionContext, arg4: number, arg5: number, arg6: number, arg7: number, arg8: boolean, arg9: Internal.Explosion$Mode);
        constructor(arg0: Internal.World, arg1: Internal.Entity, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: Internal.Explosion$Mode, arg8: Internal.List<BlockPos>);
        constructor(arg0: Internal.World, arg1: Internal.Entity, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: Internal.Explosion$Mode);
    }
    type Explosion_ = Explosion;
    class RenderState$AlphaState extends Internal.RenderState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type RenderState$AlphaState_ = RenderState$AlphaState;
    abstract class PonderSceneElement extends Internal.PonderElement {
        renderFirst(arg0: Internal.PonderWorld, arg1: Internal.IRenderTypeBuffer_, arg2: Internal.MatrixStack, arg3: number): void;
        renderLayer(arg0: Internal.PonderWorld, arg1: Internal.IRenderTypeBuffer_, arg2: Internal.RenderType, arg3: Internal.MatrixStack, arg4: number): void;
        renderLast(arg0: Internal.PonderWorld, arg1: Internal.IRenderTypeBuffer_, arg2: Internal.MatrixStack, arg3: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PonderSceneElement_ = PonderSceneElement;
    abstract class BaseFilterItem extends Internal.Item implements Internal.IItemFilter {
        canElytraFly(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        onEnchantment(arg0: Internal.ItemStack, arg1: Internal.List<Internal.EnchantmentData>): Internal.ItemStack;
        getItem(): Internal.Item;
        getSmeltingExperience(arg0: Internal.ItemStack): number;
        setDamage(arg0: Internal.ItemStack, arg1: number): void;
        canHarvestBlock(arg0: Internal.ItemStack, arg1: Internal.BlockState): boolean;
        renderHelmetOverlay(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: number, arg3: number, arg4: number): void;
        getItems(arg0: Internal.ItemStack, arg1: Internal.Set<Internal.Item>): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        damageItem<T_>(arg0: Internal.ItemStack, arg1: number, arg2: T_, arg3: Internal.Consumer_<T_>): number;
        getItemEnchantability(arg0: Internal.ItemStack): number;
        isTreasureAllowed(arg0: Internal.ItemStack, arg1: boolean): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: boolean): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack): number;
        getArmorModel<A_>(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: EquipmentSlot_, arg3: A_): A_;
        readShareTag(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): void;
        onEntityItemUpdate(arg0: Internal.ItemStack, arg1: Internal.ItemEntity): boolean;
        getDamage(arg0: Internal.ItemStack): number;
        showDurabilityBar(arg0: Internal.ItemStack): boolean;
        isBookEnchantable(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getDisplayItemStacks(arg0: Internal.ItemStack, arg1: Internal.List<Internal.ItemStack>): void;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.LivingEntity, arg3: Internal.LivingEntity): boolean;
        onUsingTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): void;
        createEntity(arg0: Internal.World, arg1: Internal.Entity, arg2: Internal.ItemStack): Internal.Entity;
        isPiglinCurrency(arg0: Internal.ItemStack): boolean;
        getCreativeTabs(): Internal.Collection<Internal.ItemGroup>;
        getShareTag(arg0: Internal.ItemStack): Internal.CompoundNBT;
        getRGBDurabilityForDisplay(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack, arg1: Internal.IRecipeType<any>): number;
        onDroppedByPlayer(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity): boolean;
        isDamageable(arg0: Internal.ItemStack): boolean;
        onEntitySwing(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        elytraFlightTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): boolean;
        selectEnchantments(arg0: Internal.List<Internal.EnchantmentData>, arg1: Internal.Random, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number, arg6: boolean): Internal.List<Internal.EnchantmentData>;
        getAttributeModifiers(arg0: EquipmentSlot_, arg1: Internal.ItemStack): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        filterItem(arg0: Internal.ItemStack, arg1: Internal.Item_): boolean;
        onLeftClickEntity(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.Entity): boolean;
        canEquip(arg0: Internal.ItemStack, arg1: EquipmentSlot_, arg2: Internal.Entity): boolean;
        getDurabilityForDisplay(arg0: Internal.ItemStack): number;
        onBlockStartBreak(arg0: Internal.ItemStack, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.MobEntity): void;
        canContinueUsing(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getEntityLifespan(arg0: Internal.ItemStack, arg1: Internal.World): number;
        getArmorTexture(arg0: Internal.ItemStack, arg1: Internal.Entity, arg2: EquipmentSlot_, arg3: string): string;
        hasCustomEntity(arg0: Internal.ItemStack): boolean;
        getHighlightTip(arg0: Internal.ItemStack, arg1: Internal.ITextComponent_): Internal.ITextComponent;
        clearFilterCache(arg0: Internal.ItemStack): void;
        getMaxDamage(arg0: Internal.ItemStack): number;
        getCreatorModId(arg0: Internal.ItemStack): string;
        isDamaged(arg0: Internal.ItemStack): boolean;
        onArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.PlayerEntity): void;
        hasContainerItem(arg0: Internal.ItemStack): boolean;
        isShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        doesSneakBypassUse(arg0: Internal.ItemStack, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        onItemUseFirst(arg0: Internal.ItemStack, arg1: Internal.ItemUseContext): Internal.ActionResultType;
        getContainerItem(arg0: Internal.ItemStack): Internal.ItemStack;
        addInfo(arg0: Internal.ItemStack, arg1: Internal.FilterInfo, arg2: boolean): void;
        setRegistryName(arg0: ResourceLocation_): any;
        resetFilterData(arg0: Internal.ItemStack): void;
        filter(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getEquipmentSlot(arg0: Internal.ItemStack): EquipmentSlot;
        initCapabilities(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): Internal.ICapabilityProvider;
        getItemStackLimit(arg0: Internal.ItemStack): number;
        getFontRenderer(arg0: Internal.ItemStack): Internal.FontRenderer;
        forciblyAllowsTableEnchantment(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        makesPiglinsNeutral(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        isEnderMask(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.EndermanEntity): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        get item(): Internal.Item;
        get creativeTabs(): Internal.Collection<Internal.ItemGroup>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BaseFilterItem_ = BaseFilterItem;
    class FluidAttributes$Builder extends Document.Object {
        viscosity(arg0: number): Internal.FluidAttributes$Builder;
        density(arg0: number): Internal.FluidAttributes$Builder;
        overlay(arg0: ResourceLocation_): Internal.FluidAttributes$Builder;
        translationKey(arg0: string): Internal.FluidAttributes$Builder;
        color(arg0: number): Internal.FluidAttributes$Builder;
        build(arg0: Internal.Fluid_): Internal.FluidAttributes;
        sound(arg0: Internal.SoundEvent_, arg1: Internal.SoundEvent_): Internal.FluidAttributes$Builder;
        sound(arg0: Internal.SoundEvent_): Internal.FluidAttributes$Builder;
        temperature(arg0: number): Internal.FluidAttributes$Builder;
        luminosity(arg0: number): Internal.FluidAttributes$Builder;
        gaseous(): Internal.FluidAttributes$Builder;
        rarity(arg0: Internal.Rarity_): Internal.FluidAttributes$Builder;
    }
    type FluidAttributes$Builder_ = FluidAttributes$Builder;
    class SnowballEntity extends Internal.ProjectileItemEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity);
        constructor(arg0: Internal.EntityType<Internal.SnowballEntity>, arg1: Internal.World);
    }
    type SnowballEntity_ = SnowballEntity;
    interface ContextAction <T> {
        run(arg0: Internal.Context): T;
        (arg0: Internal.Context): T;
    }
    type ContextAction_<T> = ((arg0: Internal.Context)=>T) | ContextAction<T>;
    class CUpdateJigsawBlockPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_240854_g_(): Internal.JigsawTileEntity$OrientationType;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_240851_c_(): ResourceLocation;
        func_240853_e_(): ResourceLocation;
        func_240852_d_(): ResourceLocation;
        func_218788_e(): string;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218789_b(): BlockPos;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: BlockPos, arg1: ResourceLocation, arg2: ResourceLocation, arg3: ResourceLocation, arg4: string, arg5: Internal.JigsawTileEntity$OrientationType);
    }
    type CUpdateJigsawBlockPacket_ = CUpdateJigsawBlockPacket;
    class DietEvent$ApplyEffect extends Internal.DietEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity);
    }
    type DietEvent$ApplyEffect_ = DietEvent$ApplyEffect;
    abstract class MinecraftServer extends Internal.RecursiveEventLoop<Internal.TickDelayedTask> implements Internal.ISnooperInfo, Internal.ICommandSource, Internal.AutoCloseable, Internal.MinecraftServerKJS {
        func_71273_Y(): string;
        func_71224_l(arg0: string): void;
        func_71209_f(arg0: string): Internal.File;
        func_184103_al(): Internal.PlayerList;
        func_211150_az(): number;
        func_184106_y(): boolean;
        func_147137_ag(): Internal.NetworkSystem;
        func_240776_a_(arg0: Internal.FolderName): Internal.Path;
        markWorldsDirty(): void;
        func_71231_X(): boolean;
        func_233528_c_<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Internal.Either_<Source_, Internal.Exception_>>, Internal.TickDelayedTask_>): Internal.CompletableFuture<Source_>;
        func_71205_p(arg0: string): void;
        func_240790_aQ_(): void;
        func_240789_aP_(): boolean;
        func_147132_au(): void;
        func_200252_aR(): Internal.GameRules;
        func_195039_a(): boolean;
        func_195561_aH(): Internal.ResourcePackList;
        func_181035_ah(): boolean;
        func_71242_L(): boolean;
        func_191949_aK(): Internal.AdvancementManager;
        func_240792_aT_(): Internal.TemplateManager;
        func_213199_b(arg0: Internal.GameProfile): boolean;
        func_71235_a(arg0: Internal.GameType_): void;
        func_205743_a(arg0: Internal.CommandSource): void;
        func_104055_i(arg0: boolean): void;
        func_230540_aS_(): boolean;
        func_193030_aL(): Internal.FunctionManager;
        func_71229_d(arg0: boolean): void;
        getDataPackRegistries(): Internal.DataPackRegistries;
        func_71188_g(arg0: boolean): void;
        func_200251_aP(): Internal.ServerScoreboard;
        func_223711_a(arg0: Internal.Path): void;
        func_143007_ar(): number;
        func_80003_ah(): Internal.Snooper;
        func_205744_aT(): boolean;
        func_211833_a(arg0: Internal.GameProfile): number;
        func_152358_ax(): Internal.PlayerProfileCache;
        func_143006_e(arg0: number): void;
        func_180507_a_(arg0: string, arg1: string): void;
        func_147139_a(arg0: Internal.Difficulty_, arg1: boolean): void;
        func_71263_m(arg0: boolean): void;
        func_240770_D_(): Internal.Set<Internal.RegistryKey<Internal.World>>;
        func_71191_d(arg0: number): void;
        func_240793_aU_(): Internal.IServerConfiguration;
        func_71255_r(): boolean;
        func_71199_h(): boolean;
        func_244266_aF(): Internal.ITagCollectionSupplier;
        func_230537_U_(): boolean;
        func_71266_T(): boolean;
        func_71259_af(): number;
        func_175580_aG(): number;
        func_230541_aj_(): boolean;
        func_147130_as(): Internal.MinecraftSessionService;
        func_71250_E(): Internal.KeyPair;
        static func_240777_a_(arg0: Internal.SaveFormat$LevelSave): void;
        func_82010_a(arg0: Internal.Runnable_): void;
        func_195573_aM(): Internal.CommandSource;
        func_213185_aS(): Internal.IProfiler;
        func_71213_z(): string[];
        func_240780_a_(arg0: Internal.Collection<string>): Internal.CompletableFuture<void>;
        func_211149_aT(): number;
        func_71279_ae(): boolean;
        func_71278_l(): boolean;
        func_175577_aI(): number;
        func_71262_S(): boolean;
        func_223707_k(): number;
        func_71189_e(arg0: string): void;
        func_195565_a(arg0: Internal.GameType_, arg1: boolean, arg2: number): boolean;
        func_71214_G(): string;
        func_205741_k(arg0: boolean): void;
        func_71249_w(): string;
        func_71241_aa(): boolean;
        func_82357_ak(): number;
        func_213164_aw(): boolean;
        func_240791_aR_(): Internal.IProfileResult;
        func_195569_l(): boolean;
        func_199529_aN(): Internal.RecipeManager;
        func_71245_h(arg0: boolean): void;
        func_184108_a(arg0: Internal.ServerWorld): number;
        static func_240772_a_(arg0: Internal.ResourcePackList, arg1: Internal.DatapackCodec, arg2: boolean): Internal.DatapackCodec;
        func_195041_r_(): boolean;
        func_213211_a(arg0: boolean, arg1: boolean, arg2: boolean): boolean;
        func_104056_am(): boolean;
        func_190518_ac(): boolean;
        getServerResourcesKJS(): Internal.DataPackRegistries;
        func_70000_a(arg0: Internal.Snooper): void;
        func_71275_y(): number;
        func_241755_D_(): Internal.ServerWorld;
        func_145747_a(arg0: Internal.ITextComponent_, arg1: Internal.UUID): void;
        func_201300_aS(): Internal.CustomServerBossInfoManager;
        func_71218_a(arg0: Internal.RegistryKey<Internal.World>): Internal.ServerWorld;
        getServerModName(): string;
        func_229736_aP_(): Internal.LootPredicateManager;
        func_71200_ad(): boolean;
        func_195571_aL(): Internal.Commands;
        func_184109_z(): Internal.File;
        func_152359_aw(): Internal.GameProfileRepository;
        func_110455_j(): number;
        func_71233_x(): number;
        func_213170_ax(): Internal.Thread;
        func_195040_b(): boolean;
        func_213141_a<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Source_>, Internal.TickDelayedTask_>): Internal.CompletableFuture<Source_>;
        func_82356_Z(): boolean;
        func_244435_a(arg0: Internal.ServerPlayerEntity): Internal.IChatFilter;
        forgeGetWorldMap(): Internal.Map<Internal.RegistryKey<Internal.World>, Internal.ServerWorld>;
        func_71208_b(arg0: number): void;
        func_71215_F(): number;
        func_213209_d(arg0: boolean): void;
        func_71204_b(arg0: boolean): void;
        static func_240784_a_<S_>(arg0: Internal.Function_<Internal.Thread_, S_>): S_;
        func_241871_k(): number;
        getTickTime(arg0: Internal.RegistryKey<Internal.World>): number[];
        func_212370_w(): Internal.Iterable<Internal.ServerWorld>;
        func_213201_w(): boolean;
        func_71230_b(arg0: Internal.CrashReport): Internal.CrashReport;
        func_71265_f(): Internal.GameType;
        func_71219_W(): boolean;
        func_244267_aX(): Internal.DynamicRegistries;
        func_184105_a(arg0: Internal.PlayerList): void;
        func_229735_aN_(): Internal.CommandStorage;
        func_200249_aQ(): Internal.LootTableManager;
        func_71344_c(): boolean;
        func_175579_a(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        func_147134_at(): Internal.ServerStatusResponse;
        func_213210_aR(): Internal.FrameTimer;
        func_230538_V_(): boolean;
        func_71211_k(): string;
        func_190517_e(arg0: boolean): void;
        asKJS(): any;
        func_175581_ab(): string;
        func_195563_aC(): Internal.DataFixer;
        func_71207_Z(): number;
        func_71264_H(): boolean;
        func_147133_T(): string;
        func_230045_q_(): Internal.Optional<string>;
        func_230512_b_(arg0: number): number;
        func_213168_p(): boolean;
        func_71238_n(): Internal.File;
        static readonly field_213219_c: Internal.WorldSettings;
        readonly field_71311_j: number[];
        field_195576_ac: Internal.DataPackRegistries;
        readonly field_71307_n: Internal.Snooper;
        field_240766_e_: Internal.PlayerData;
        field_240767_f_: Internal.DynamicRegistries$Impl;
        static readonly field_152367_a: Internal.File;
        readonly field_71310_m: Internal.SaveFormat$LevelSave;
        get serverModName(): string;
        get dataPackRegistries(): Internal.DataPackRegistries;
        get serverResourcesKJS(): Internal.DataPackRegistries;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Thread, arg1: Internal.DynamicRegistries$Impl, arg2: Internal.SaveFormat$LevelSave, arg3: Internal.IServerConfiguration, arg4: Internal.ResourcePackList, arg5: Internal.Proxy, arg6: Internal.DataFixer, arg7: Internal.DataPackRegistries, arg8: Internal.MinecraftSessionService, arg9: Internal.GameProfileRepository, arg10: Internal.PlayerProfileCache, arg11: any);
    }
    type MinecraftServer_ = MinecraftServer;
    class TeamMessage extends Document.Object {
        write(arg0: number, arg1: Internal.PacketBuffer): void;
        readonly date: number;
        readonly sender: Internal.UUID;
        readonly text: Internal.ITextComponent;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.UUID, arg1: number, arg2: Internal.ITextComponent);
        constructor(arg0: number, arg1: Internal.PacketBuffer);
    }
    type TeamMessage_ = TeamMessage;
    class SSelectAdvancementsTabPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_194154_a(): ResourceLocation;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: ResourceLocation);
    }
    type SSelectAdvancementsTabPacket_ = SSelectAdvancementsTabPacket;
    class Constructor <T> extends Internal.Executable {
        getDeclaringClass(): Internal.Class<T>;
        getAnnotation<T_>(arg0: Internal.Class<T_>): T_;
        newInstance(...arg0: any[]): T;
        getTypeParameters(): any[];
        get typeParameters(): any[];
        get declaringClass(): Internal.Class<T>;
    }
    type Constructor_<T> = Constructor<T>;
    abstract class VarHandle extends Document.Object implements Internal.Constable {
        toMethodHandle(arg0: Internal.VarHandle$AccessMode_): Internal.MethodHandle;
        coordinateTypes(): Internal.List<Internal.Class<any>>;
        weakCompareAndSetPlain(...arg0: any[]): boolean;
        getVolatile(...arg0: any[]): any;
        getAndBitwiseXor(...arg0: any[]): any;
        static storeStoreFence(): void;
        compareAndExchange(...arg0: any[]): any;
        static fullFence(): void;
        getAndSetRelease(...arg0: any[]): any;
        getAcquire(...arg0: any[]): any;
        getAndBitwiseAnd(...arg0: any[]): any;
        accessModeType(arg0: Internal.VarHandle$AccessMode_): Internal.MethodType;
        getAndBitwiseOr(...arg0: any[]): any;
        static acquireFence(): void;
        hasInvokeExactBehavior(): boolean;
        describeConstable(): Internal.Optional<Internal.VarHandle$VarHandleDesc>;
        getAndBitwiseOrRelease(...arg0: any[]): any;
        getAndSetAcquire(...arg0: any[]): any;
        getOpaque(...arg0: any[]): any;
        varType(): Internal.Class<any>;
        getAndBitwiseXorAcquire(...arg0: any[]): any;
        getAndBitwiseAndRelease(...arg0: any[]): any;
        getAndBitwiseOrAcquire(...arg0: any[]): any;
        setVolatile(...arg0: any[]): void;
        get(...arg0: any[]): any;
        static releaseFence(): void;
        getAndAdd(...arg0: any[]): any;
        getAndSet(...arg0: any[]): any;
        weakCompareAndSetAcquire(...arg0: any[]): boolean;
        set(...arg0: any[]): void;
        weakCompareAndSetRelease(...arg0: any[]): boolean;
        weakCompareAndSet(...arg0: any[]): boolean;
        static loadLoadFence(): void;
        getAndAddRelease(...arg0: any[]): any;
        getAndAddAcquire(...arg0: any[]): any;
        setOpaque(...arg0: any[]): void;
        isAccessModeSupported(arg0: Internal.VarHandle$AccessMode_): boolean;
        compareAndExchangeRelease(...arg0: any[]): any;
        compareAndSet(...arg0: any[]): boolean;
        compareAndExchangeAcquire(...arg0: any[]): any;
        getAndBitwiseXorRelease(...arg0: any[]): any;
        withInvokeBehavior(): Internal.VarHandle;
        setRelease(...arg0: any[]): void;
        withInvokeExactBehavior(): Internal.VarHandle;
        getAndBitwiseAndAcquire(...arg0: any[]): any;
        set opaque(...arg0: any[]);
        set release(...arg0: any[]);
        set volatile(...arg0: any[]);
    }
    type VarHandle_ = VarHandle;
    interface RedirectModifier <S> {
        apply(arg0: Internal.CommandContext<S>): Internal.Collection<S>;
        (arg0: Internal.CommandContext<S>): Internal.Collection<S>;
    }
    type RedirectModifier_<S> = ((arg0: Internal.CommandContext<S>)=>Internal.Collection<S>) | RedirectModifier<S>;
    class Brain <E> extends Document.Object {
        func_233706_a_(arg0: Internal.List<Internal.Activity>): void;
        func_233700_a_(arg0: Internal.Activity_, arg1: Internal.ImmutableList<Internal.Pair<number, net.minecraft.entity.ai.brain.task.Task<E>>>, arg2: Internal.Set<Internal.Pair<Internal.MemoryModuleType<any>, Internal.MemoryModuleStatus>>): void;
        func_218199_a(arg0: Internal.Set<Internal.Activity>): void;
        func_218198_b(): Internal.Schedule;
        func_218196_a(arg0: Internal.MemoryModuleType_<any>, arg1: Internal.MemoryModuleStatus_): boolean;
        func_233702_a_<T_>(arg0: Internal.DynamicOps<T_>): Internal.DataResult<T_>;
        func_218202_a(arg0: Internal.Activity_): void;
        func_218203_a(arg0: Internal.Schedule_): void;
        func_218226_a<U_>(arg0: Internal.MemoryModuleType_<U_>, arg1: Internal.Optional<U_>): void;
        func_218191_a(arg0: Internal.MemoryModuleType_<any>): boolean;
        func_218205_a<U_>(arg0: Internal.MemoryModuleType_<U_>, arg1: U_): void;
        func_218227_b(arg0: Internal.ServerWorld, arg1: E): void;
        func_233716_f_(): Internal.Optional<Internal.Activity>;
        func_218208_a(arg0: Internal.Activity_, arg1: Internal.ImmutableList<Internal.Pair<number, net.minecraft.entity.ai.brain.task.Task<E>>>): void;
        func_218207_c<U_>(arg0: Internal.MemoryModuleType_<U_>): Internal.Optional<U_>;
        func_233698_a_(arg0: Internal.Activity_, arg1: number, arg2: Internal.ImmutableList<net.minecraft.entity.ai.brain.task.Task<E>>): void;
        func_233712_d_(): Internal.List<net.minecraft.entity.ai.brain.task.Task<E>>;
        static func_233710_b_<E_>(arg0: Internal.Collection<Internal.MemoryModuleType<any>>, arg1: Internal.Collection<Internal.SensorType<Internal.Sensor<E_>>>): Internal.Codec<Internal.Brain<E_>>;
        func_218200_b(arg0: Internal.Activity_): void;
        func_233696_a_<U_>(arg0: Internal.MemoryModuleType_<U_>, arg1: U_, arg2: number): void;
        func_218189_b<U_>(arg0: Internal.MemoryModuleType_<U_>): void;
        func_218185_f(): Internal.Brain<E>;
        func_233708_b_<U_>(arg0: Internal.MemoryModuleType_<U_>, arg1: U_): boolean;
        static func_233705_a_<E_>(arg0: Internal.Collection<Internal.MemoryModuleType<any>>, arg1: Internal.Collection<Internal.SensorType<Internal.Sensor<E_>>>): Internal.Brain$BrainCodec<E_>;
        func_218214_c(arg0: Internal.Activity_): boolean;
        func_233714_e_(): void;
        func_218210_a(arg0: Internal.ServerWorld, arg1: E): void;
        func_233699_a_(arg0: Internal.Activity_, arg1: number, arg2: Internal.ImmutableList<net.minecraft.entity.ai.brain.task.Task<E>>, arg3: Internal.MemoryModuleType_<any>): void;
        func_218211_a(arg0: number, arg1: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Collection<Internal.MemoryModuleType<any>>, arg1: Internal.Collection<Internal.SensorType<Internal.Sensor<E>>>, arg2: Internal.ImmutableList<any>, arg3: java_.util.function_.Supplier<Internal.Codec<Internal.Brain<E>>>);
    }
    type Brain_<E> = Brain<E>;
    class Heightmap extends Document.Object {
        func_202268_a(arg0: number[]): void;
        func_202269_a(): number[];
        static func_222690_a(arg0: Internal.IChunk, arg1: Internal.Set<Internal.Heightmap$Type>): void;
        func_202270_a(arg0: number, arg1: number, arg2: number, arg3: Internal.BlockState): boolean;
        func_202273_a(arg0: number, arg1: number): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IChunk, arg1: Internal.Heightmap$Type);
    }
    type Heightmap_ = Heightmap;
    class DynamicEnchantmentType extends Internal.Enum<Internal.DynamicEnchantmentType> {
        getDisplayName(): string;
        static valueOf(arg0: string): Internal.DynamicEnchantmentType;
        static values(): Internal.DynamicEnchantmentType[];
        isEnchantmentSpecific(): boolean;
        static readonly ADD_TO_SPECIFIC: Internal.DynamicEnchantmentType;
        static readonly ADD_TO_EXISTING_SPECIFIC: Internal.DynamicEnchantmentType;
        static readonly ADD_TO_EXISTING_ALL: Internal.DynamicEnchantmentType;
        get displayName(): string;
        get enchantmentSpecific(): boolean;
    }
    type DynamicEnchantmentType_ = "add_to_specific" | "add_to_existing_specific" | "add_to_existing_all" | DynamicEnchantmentType;
    interface CompositeContext {
        compose(arg0: Internal.Raster, arg1: Internal.Raster, arg2: Internal.WritableRaster): void;
        dispose(): void;
    }
    type CompositeContext_ = CompositeContext;
    class StructureSpawnListGatherEvent extends net.minecraftforge.eventbus.api.Event {
        setInsideOnly(arg0: boolean): void;
        removeEntitySpawn(arg0: Internal.EntityClassification_, arg1: Internal.MobSpawnInfo$Spawners): void;
        isInsideOnly(): boolean;
        addEntitySpawns(arg0: Internal.EntityClassification_, arg1: Internal.List<Internal.MobSpawnInfo$Spawners>): void;
        getStructure(): net.minecraft.world.gen.feature.structure.Structure<any>;
        addEntitySpawn(arg0: Internal.EntityClassification_, arg1: Internal.MobSpawnInfo$Spawners): void;
        getEntitySpawns(): Internal.Map<Internal.EntityClassification, Internal.List<Internal.MobSpawnInfo$Spawners>>;
        getEntitySpawns(arg0: Internal.EntityClassification_): Internal.List<Internal.MobSpawnInfo$Spawners>;
        get entitySpawns(): Internal.Map<Internal.EntityClassification, Internal.List<Internal.MobSpawnInfo$Spawners>>;
        get insideOnly(): boolean;
        get structure(): net.minecraft.world.gen.feature.structure.Structure<any>;
        set insideOnly(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: net.minecraft.world.gen.feature.structure.Structure<any>);
    }
    type StructureSpawnListGatherEvent_ = StructureSpawnListGatherEvent;
    class FloatToolStat extends Document.Object implements Internal.IToolStat<Internal.FloatToolStat$FloatBuilder> {
        add(arg0: Internal.ModifierStatsBuilder, arg1: number): void;
        getPrefix(): Internal.IFormattableTextComponent;
        getName(): Internal.ToolStatId;
        getMaxValue(): number;
        applyBonus(arg0: Internal.ModifierStatsBuilder, arg1: number): void;
        getColor(): Internal.Color;
        makeBuilder(): any;
        makeBuilder(): Internal.FloatToolStat$FloatBuilder;
        getDescription(): Internal.IFormattableTextComponent;
        getDefaultValue(): number;
        getMinValue(): number;
        multiplyAll(arg0: Internal.ModifierStatsBuilder, arg1: number): void;
        formatValue(arg0: number): Internal.ITextComponent;
        build(arg0: Internal.FloatToolStat$FloatBuilder, arg1: number): number;
        build(arg0: any, arg1: number): number;
        multiply(arg0: Internal.ModifierStatsBuilder, arg1: number): void;
        clamp(arg0: number): number;
        get minValue(): number;
        get color(): Internal.Color;
        get prefix(): Internal.IFormattableTextComponent;
        get maxValue(): number;
        get defaultValue(): number;
        get name(): Internal.ToolStatId;
        get description(): Internal.IFormattableTextComponent;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ToolStatId, arg1: number, arg2: number, arg3: number, arg4: number);
    }
    type FloatToolStat_ = FloatToolStat;
    class MapData$MapInfo extends Document.Object {
        func_176102_a(arg0: number, arg1: number): void;
        func_176101_a(arg0: Internal.ItemStack): Internal.IPacket<any>;
        readonly field_76211_a: Internal.PlayerEntity;
        field_82569_d: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MapData, arg1: Internal.PlayerEntity);
    }
    type MapData$MapInfo_ = MapData$MapInfo;
    class ItemStackTileEntityRenderer extends Document.Object {
        func_239207_a_(arg0: Internal.ItemStack, arg1: Internal.ItemCameraTransforms$TransformType_, arg2: Internal.MatrixStack, arg3: Internal.IRenderTypeBuffer_, arg4: number, arg5: number): void;
        static readonly field_147719_a: Internal.ItemStackTileEntityRenderer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ItemStackTileEntityRenderer_ = ItemStackTileEntityRenderer;
    class TurtleEntity extends Internal.AnimalEntity {
        shouldRiderSit(): boolean;
        func_203023_dy(): boolean;
        func_203011_g(arg0: BlockPos): void;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_203020_dx(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        static func_223322_c(arg0: Internal.EntityType_<Internal.TurtleEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        static func_234228_eK_(): Internal.AttributeModifierMap$MutableAttribute;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        static readonly field_203029_bx: Internal.Predicate<Internal.LivingEntity>;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.TurtleEntity>, arg1: Internal.World);
    }
    type TurtleEntity_ = TurtleEntity;
    class NoiseDependant extends Document.Object implements Internal.IPlacementConfig {
        readonly field_202473_a: number;
        readonly field_202474_b: number;
        static readonly field_236550_a_: Internal.Codec<Internal.NoiseDependant>;
        readonly field_202475_c: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type NoiseDependant_ = NoiseDependant;
    class ArrayRecipeJS extends Internal.BMRecipeJS {
        texture(arg0: string): Internal.ArrayRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ArrayRecipeJS_ = ArrayRecipeJS;
    interface StructLayout extends Internal.GroupLayout {
        withName(arg0: string): Internal.GroupLayout;
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.StructLayout;
        withoutName(): Internal.GroupLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.StructLayout;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.StructLayout;
        withByteAlignment(arg0: number): Internal.GroupLayout;
    }
    type StructLayout_ = StructLayout;
    interface ObjectOutput extends Internal.DataOutput, Internal.AutoCloseable {
        flush(): void;
        writeObject(arg0: any): void;
        close(): void;
        write(arg0: number[], arg1: number, arg2: number): void;
        write(arg0: number[]): void;
        write(arg0: number): void;
    }
    type ObjectOutput_ = ObjectOutput;
    class MultiblockFormEventJS extends Internal.PlayerEventJS {
        getSize(): Vec3i;
        getMultiblock(): ResourceLocation;
        getClickedPos(): BlockPos;
        getClickedBlock(): Internal.BlockContainerJS;
        static readonly ID: "ie.multiblock.form";
        get clickedPos(): BlockPos;
        get size(): Vec3i;
        get multiblock(): ResourceLocation;
        get clickedBlock(): Internal.BlockContainerJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(event: any);
    }
    type MultiblockFormEventJS_ = MultiblockFormEventJS;
    class AccessFlag$Location extends Internal.Enum<Internal.AccessFlag$Location> {
        static valueOf(arg0: string): Internal.AccessFlag$Location;
        static values(): Internal.AccessFlag$Location[];
        static readonly MODULE: Internal.AccessFlag$Location;
        static readonly MODULE_EXPORTS: Internal.AccessFlag$Location;
        static readonly FIELD: Internal.AccessFlag$Location;
        static readonly METHOD_PARAMETER: Internal.AccessFlag$Location;
        static readonly MODULE_REQUIRES: Internal.AccessFlag$Location;
        static readonly METHOD: Internal.AccessFlag$Location;
        static readonly MODULE_OPENS: Internal.AccessFlag$Location;
        static readonly CLASS: Internal.AccessFlag$Location;
        static readonly INNER_CLASS: Internal.AccessFlag$Location;
    }
    type AccessFlag$Location_ = "class" | "field" | "method" | "inner_class" | "method_parameter" | "module" | "module_requires" | "module_exports" | "module_opens" | AccessFlag$Location;
    class ShipwreckConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_204753_a: boolean;
        static readonly field_236634_a_: Internal.Codec<Internal.ShipwreckConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean);
    }
    type ShipwreckConfig_ = ShipwreckConfig;
    class Optional <T> extends Document.Object {
        or(arg0: java_.util.function_.Supplier_<Internal.Optional_<T>>): Internal.Optional<T>;
        static ofNullable<T_>(arg0: T_): Internal.Optional<T_>;
        isEmpty(): boolean;
        isPresent(): boolean;
        orElse(arg0: T): T;
        orElseThrow<X_>(arg0: java_.util.function_.Supplier_<X_>): T;
        orElseThrow(): T;
        static empty<T_>(): Internal.Optional<T_>;
        flatMap<U_>(arg0: Internal.Function_<T, Internal.Optional_<U_>>): Internal.Optional<U_>;
        filter(arg0: Internal.Predicate_<T>): Internal.Optional<T>;
        orElseGet(arg0: java_.util.function_.Supplier_<T>): T;
        stream(): Internal.Stream<T>;
        ifPresentOrElse(arg0: Internal.Consumer_<T>, arg1: Internal.Runnable_): void;
        ifPresent(arg0: Internal.Consumer_<T>): void;
        static of<T_>(arg0: T_): Internal.Optional<T_>;
        get(): T;
        map<U_>(arg0: Internal.Function_<T, U_>): Internal.Optional<U_>;
        get present(): boolean;
    }
    type Optional_<T> = Optional<T>;
    abstract class ConfigEntry extends Document.Object implements Internal.Consumer<Internal.ForgeConfigSpec$Builder> {
        reload(): void;
        getFullPath(): string;
        newSubSection(arg0: Internal.ConfigEntry): Internal.ConfigEntry;
        getPath(): string;
        createEntries(arg0: Internal.ForgeConfigSpec$Builder): void;
        andThen(arg0: Internal.Consumer_<Internal.ForgeConfigSpec$Builder_>): Internal.Consumer<Internal.ForgeConfigSpec$Builder>;
        accept(arg0: Internal.ForgeConfigSpec$Builder): void;
        accept(arg0: any): void;
        get fullPath(): string;
        get path(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type ConfigEntry_ = ConfigEntry;
    class WorldDecoratingHelper extends Document.Object implements Internal.WorldDecoratingHelperAccess {
        getLevel(): Internal.ISeedReader;
        func_242895_b(): number;
        getGenerator(): Internal.ChunkGenerator;
        func_242894_a(arg0: BlockPos): Internal.BlockState;
        func_242892_a(arg0: Internal.ChunkPos, arg1: CarvingGenerationStep_): Internal.BitSet;
        func_242893_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_242891_a(): number;
        readonly field_242889_a: Internal.ISeedReader;
        get level(): Internal.ISeedReader;
        get generator(): Internal.ChunkGenerator;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator);
    }
    type WorldDecoratingHelper_ = WorldDecoratingHelper;
    class WorldgenEntryList extends Document.Object {
        verify(contains: string): boolean;
        verify(filter: Internal.Predicate_<string>): boolean;
        verifyIgnoreCase(contains: string): boolean;
        values: Internal.List<string>;
        blacklist: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type WorldgenEntryList_ = WorldgenEntryList;
    class HoverEvent extends Document.Object {
        func_240663_b_(): Internal.JsonObject;
        func_150701_a(): Internal.HoverEvent$Action<any>;
        func_240662_a_<T_>(arg0: Internal.HoverEvent$Action<T_>): T_;
        static func_240661_a_(arg0: Internal.JsonObject): Internal.HoverEvent;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.HoverEvent$Action<T>, arg1: T);
    }
    type HoverEvent_ = HoverEvent;
    interface EventLoopGroup extends Internal.EventExecutorGroup {
        next(): Internal.EventLoop;
        register(arg0: Internal.Channel, arg1: Internal.ChannelPromise): Internal.ChannelFuture;
        register(arg0: Internal.ChannelPromise): Internal.ChannelFuture;
        register(arg0: Internal.Channel): Internal.ChannelFuture;
    }
    type EventLoopGroup_ = EventLoopGroup;
    class Window extends java_.awt.Container implements Internal.Accessible {
        getListeners<T_>(arg0: Internal.Class<T_>): T_[];
        setIconImage(arg0: Internal.Image): void;
        setModalExclusionType(arg0: Internal.Dialog$ModalExclusionType_): void;
        isAlwaysOnTop(): boolean;
        getShape(): Internal.Shape;
        removeWindowListener(arg0: Internal.WindowListener): void;
        getOwner(): Internal.Window;
        isActive(): boolean;
        removeWindowFocusListener(arg0: Internal.WindowFocusListener): void;
        getOpacity(): number;
        addWindowListener(arg0: Internal.WindowListener): void;
        setIconImages(arg0: Internal.List<Internal.Image>): void;
        getWindowStateListeners(): Internal.WindowStateListener[];
        isLocationByPlatform(): boolean;
        setAutoRequestFocus(arg0: boolean): void;
        getWindowListeners(): Internal.WindowListener[];
        isAlwaysOnTopSupported(): boolean;
        addWindowStateListener(arg0: Internal.WindowStateListener_): void;
        getOwnedWindows(): Internal.Window[];
        getIconImages(): Internal.List<Internal.Image>;
        getFocusableWindowState(): boolean;
        toFront(): void;
        applyResourceBundle(arg0: Internal.ResourceBundle): void;
        applyResourceBundle(arg0: string): void;
        getWindowFocusListeners(): Internal.WindowFocusListener[];
        setFocusableWindowState(arg0: boolean): void;
        getMostRecentFocusOwner(): Internal.Component;
        getBufferStrategy(): Internal.BufferStrategy;
        setType(arg0: Internal.Window$Type_): void;
        isFocused(): boolean;
        pack(): void;
        setShape(arg0: Internal.Shape): void;
        toBack(): void;
        setLocationByPlatform(arg0: boolean): void;
        createBufferStrategy(arg0: number): void;
        createBufferStrategy(arg0: number, arg1: Internal.BufferCapabilities): void;
        static getWindows(): Internal.Window[];
        removeWindowStateListener(arg0: Internal.WindowStateListener_): void;
        getType(): Internal.Window$Type;
        isFocusableWindow(): boolean;
        isAutoRequestFocus(): boolean;
        setAlwaysOnTop(arg0: boolean): void;
        getFocusOwner(): Internal.Component;
        dispose(): void;
        getWarningString(): string;
        addWindowFocusListener(arg0: Internal.WindowFocusListener): void;
        getModalExclusionType(): Internal.Dialog$ModalExclusionType;
        setLocationRelativeTo(arg0: Internal.Component): void;
        static getOwnerlessWindows(): Internal.Window[];
        setOpacity(arg0: number): void;
        get owner(): Internal.Window;
        get warningString(): string;
        get shape(): Internal.Shape;
        get mostRecentFocusOwner(): Internal.Component;
        get alwaysOnTop(): boolean;
        get active(): boolean;
        get modalExclusionType(): Internal.Dialog$ModalExclusionType;
        get windowFocusListeners(): Internal.WindowFocusListener[];
        get autoRequestFocus(): boolean;
        get windows(): Internal.Window[];
        get type(): Internal.Window$Type;
        get windowListeners(): Internal.WindowListener[];
        get ownerlessWindows(): Internal.Window[];
        get focusOwner(): Internal.Component;
        get iconImages(): Internal.List<Internal.Image>;
        get focusableWindowState(): boolean;
        get focused(): boolean;
        get focusableWindow(): boolean;
        get locationByPlatform(): boolean;
        get opacity(): number;
        get windowStateListeners(): Internal.WindowStateListener[];
        get alwaysOnTopSupported(): boolean;
        get bufferStrategy(): Internal.BufferStrategy;
        get ownedWindows(): Internal.Window[];
        set shape(arg0: Internal.Shape);
        set iconImages(arg0: Internal.List<Internal.Image>);
        set iconImage(arg0: Internal.Image);
        set locationRelativeTo(arg0: Internal.Component);
        set alwaysOnTop(arg0: boolean);
        set focusableWindowState(arg0: boolean);
        set locationByPlatform(arg0: boolean);
        set modalExclusionType(arg0: Internal.Dialog$ModalExclusionType_);
        set autoRequestFocus(arg0: boolean);
        set opacity(arg0: number);
        set type(arg0: Internal.Window$Type_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Frame);
        constructor(arg0: Internal.Window);
        constructor(arg0: Internal.Window, arg1: Internal.GraphicsConfiguration);
    }
    type Window_ = Window;
    abstract class ByteBuffer extends Internal.Buffer implements Internal.Comparable<Internal.ByteBuffer> {
        asIntBuffer(): Internal.IntBuffer;
        compact(): Internal.ByteBuffer;
        asLongBuffer(): Internal.LongBuffer;
        putDouble(arg0: number, arg1: number): Internal.ByteBuffer;
        putDouble(arg0: number): Internal.ByteBuffer;
        getDouble(arg0: number): number;
        getDouble(): number;
        getFloat(): number;
        getFloat(arg0: number): number;
        compareTo(arg0: Internal.ByteBuffer): number;
        compareTo(arg0: any): number;
        putLong(arg0: number): Internal.ByteBuffer;
        putLong(arg0: number, arg1: number): Internal.ByteBuffer;
        asReadOnlyBuffer(): Internal.ByteBuffer;
        put(arg0: number, arg1: number): Internal.ByteBuffer;
        put(arg0: Internal.ByteBuffer): Internal.ByteBuffer;
        put(arg0: number, arg1: Internal.ByteBuffer, arg2: number, arg3: number): Internal.ByteBuffer;
        put(arg0: number[]): Internal.ByteBuffer;
        put(arg0: number, arg1: number[]): Internal.ByteBuffer;
        put(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ByteBuffer;
        put(arg0: number[], arg1: number, arg2: number): Internal.ByteBuffer;
        put(arg0: number): Internal.ByteBuffer;
        asDoubleBuffer(): Internal.DoubleBuffer;
        slice(): Internal.ByteBuffer;
        slice(arg0: number, arg1: number): Internal.ByteBuffer;
        array(): number[];
        get(arg0: number[]): Internal.ByteBuffer;
        get(arg0: number): number;
        get(): number;
        get(arg0: number[], arg1: number, arg2: number): Internal.ByteBuffer;
        get(arg0: number, arg1: number[]): Internal.ByteBuffer;
        get(arg0: number, arg1: number[], arg2: number, arg3: number): Internal.ByteBuffer;
        limit(arg0: number): Internal.ByteBuffer;
        putShort(arg0: number, arg1: number): Internal.ByteBuffer;
        putShort(arg0: number): Internal.ByteBuffer;
        flip(): Internal.ByteBuffer;
        order(arg0: Internal.ByteOrder): Internal.ByteBuffer;
        order(): Internal.ByteOrder;
        asFloatBuffer(): Internal.FloatBuffer;
        asCharBuffer(): Internal.CharBuffer;
        static allocateDirect(arg0: number): Internal.ByteBuffer;
        putInt(arg0: number, arg1: number): Internal.ByteBuffer;
        putInt(arg0: number): Internal.ByteBuffer;
        getShort(): number;
        getShort(arg0: number): number;
        putChar(arg0: number, arg1: string): Internal.ByteBuffer;
        putChar(arg0: string): Internal.ByteBuffer;
        clear(): Internal.ByteBuffer;
        duplicate(): Internal.ByteBuffer;
        getLong(arg0: number): number;
        getLong(): number;
        putFloat(arg0: number): Internal.ByteBuffer;
        putFloat(arg0: number, arg1: number): Internal.ByteBuffer;
        getInt(arg0: number): number;
        getInt(): number;
        getChar(arg0: number): string;
        getChar(): string;
        alignmentOffset(arg0: number, arg1: number): number;
        static allocate(arg0: number): Internal.ByteBuffer;
        rewind(): Internal.ByteBuffer;
        mismatch(arg0: Internal.ByteBuffer): number;
        reset(): Internal.ByteBuffer;
        position(arg0: number): Internal.ByteBuffer;
        alignedSlice(arg0: number): Internal.ByteBuffer;
        static wrap(arg0: number[], arg1: number, arg2: number): Internal.ByteBuffer;
        static wrap(arg0: number[]): Internal.ByteBuffer;
        asShortBuffer(): Internal.ShortBuffer;
        mark(): Internal.ByteBuffer;
        get double(): number;
        get char(): string;
        get short(): number;
        get float(): number;
        get long(): number;
        get int(): number;
    }
    type ByteBuffer_ = ByteBuffer;
    class RecipeBookStatus extends Document.Object {
        func_242158_b(arg0: Internal.RecipeBookCategory_): boolean;
        func_242149_a(): Internal.RecipeBookStatus;
        func_242159_b(arg0: Internal.RecipeBookCategory_, arg1: boolean): void;
        static func_242157_a(arg0: Internal.PacketBuffer): Internal.RecipeBookStatus;
        func_242161_b(arg0: Internal.PacketBuffer): void;
        func_242151_a(arg0: Internal.RecipeBookCategory_): boolean;
        func_242152_a(arg0: Internal.RecipeBookCategory_, arg1: boolean): void;
        func_242160_b(arg0: Internal.CompoundNBT_): void;
        func_242150_a(arg0: Internal.RecipeBookStatus): void;
        static func_242154_a(arg0: Internal.CompoundNBT_): Internal.RecipeBookStatus;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RecipeBookStatus_ = RecipeBookStatus;
    class ScreenJournalPerkTree extends Internal.ScreenJournal {
        playSealApplyAnimation(arg0: Internal.AbstractPerk): void;
        static refreshDrawBuffer(): void;
        func_212927_b(arg0: number, arg1: number): void;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_231049_c__(arg0: boolean): boolean;
        playUnlockAnimation(arg0: Internal.AbstractPerk): void;
        static initializeDrawBuffer(): void;
        playSealBreakAnimation(arg0: Internal.AbstractPerk): void;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        expectReinit: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ScreenJournalPerkTree_ = ScreenJournalPerkTree;
    class ProjectileImpactEvent extends Internal.EntityEvent {
        getRayTraceResult(): Internal.RayTraceResult;
        get rayTraceResult(): Internal.RayTraceResult;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity, arg1: Internal.RayTraceResult);
    }
    type ProjectileImpactEvent_ = ProjectileImpactEvent;
    class SSendResourcePackPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179784_b(): string;
        func_179783_a(): string;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: string, arg1: string);
    }
    type SSendResourcePackPacket_ = SSendResourcePackPacket;
    interface AnnotatedType extends Internal.AnnotatedElement {
        getAnnotatedOwnerType(): Internal.AnnotatedType;
        getType(): Internal.Type;
        getAnnotation<T_>(arg0: Internal.Class<T_>): T_;
        getAnnotations(): Internal.Annotation[];
        getDeclaredAnnotations(): Internal.Annotation[];
    }
    type AnnotatedType_ = AnnotatedType;
    class TextWindowElement$Builder extends Document.Object {
        independent(arg0: number): Internal.TextWindowElement$Builder;
        independent(): Internal.TextWindowElement$Builder;
        sharedText(arg0: ResourceLocation_): Internal.TextWindowElement$Builder;
        sharedText(arg0: string): Internal.TextWindowElement$Builder;
        attachKeyFrame(): Internal.TextWindowElement$Builder;
        colored(arg0: PonderPalette_): Internal.TextWindowElement$Builder;
        text(arg0: string): Internal.TextWindowElement$Builder;
        pointAt(arg0: Vec3): Internal.TextWindowElement$Builder;
        placeNearTarget(): Internal.TextWindowElement$Builder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: Internal.PonderScene);
    }
    type TextWindowElement$Builder_ = TextWindowElement$Builder;
    class FoliagePlacerType <P> extends Internal.ForgeRegistryEntry<Internal.FoliagePlacerType<any>> {
        setRegistryName(arg0: ResourceLocation_): any;
        func_236772_a_(): Internal.Codec<P>;
        static readonly field_236770_i_: Internal.FoliagePlacerType<Internal.DarkOakFoliagePlacer>;
        static readonly field_236767_f_: Internal.FoliagePlacerType<Internal.FancyFoliagePlacer>;
        static readonly field_236766_e_: Internal.FoliagePlacerType<Internal.BushFoliagePlacer>;
        static readonly field_227387_b_: Internal.FoliagePlacerType<Internal.SpruceFoliagePlacer>;
        static readonly field_236768_g_: Internal.FoliagePlacerType<Internal.JungleFoliagePlacer>;
        static readonly field_236769_h_: Internal.FoliagePlacerType<Internal.MegaPineFoliagePlacer>;
        static readonly field_227389_d_: Internal.FoliagePlacerType<Internal.AcaciaFoliagePlacer>;
        static readonly field_227386_a_: Internal.FoliagePlacerType<Internal.BlobFoliagePlacer>;
        static readonly field_227388_c_: Internal.FoliagePlacerType<Internal.PineFoliagePlacer>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<P>);
    }
    type FoliagePlacerType_<P> = Registry.minecraft.worldgen$foliage_placer_type | FoliagePlacerType<P>;
    interface LongCollection extends Internal.Collection<number>, Internal.LongIterable {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        add(arg0: number): boolean;
        removeAll(arg0: Internal.LongCollection): boolean;
        contains(arg0: any): boolean;
        contains(arg0: number): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.LongIterator;
        toLongArray(): number[];
        toLongArray(arg0: number[]): number[];
        addAll(arg0: Internal.LongCollection): boolean;
        containsAll(arg0: Internal.LongCollection): boolean;
        toArray(arg0: number[]): number[];
        rem(arg0: number): boolean;
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.LongCollection): boolean;
        removeIf(arg0: Internal.LongPredicate_): boolean;
        removeIf(arg0: Internal.Predicate_<number>): boolean;
    }
    type LongCollection_ = LongCollection;
    class WorldSettingsImport <T> extends Internal.DelegatingDynamicOps<T> {
        convertMap<U_>(arg0: Internal.DynamicOps<U_>, arg1: T): U_;
        updateGeneric(arg0: T, arg1: T, arg2: Internal.Function_<T, T>): T;
        mergeToPrimitive(arg0: T, arg1: T): Internal.DataResult<T>;
        withEncoder<E_>(arg0: Internal.Encoder_<E_>): Internal.Function<E_, Internal.DataResult<T>>;
        set(arg0: T, arg1: string, arg2: T): T;
        getGeneric(arg0: T, arg1: T): Internal.DataResult<T>;
        update(arg0: T, arg1: string, arg2: Internal.Function_<T, T>): T;
        createMap(arg0: Internal.Map_<T, T>): T;
        withDecoder<E_>(arg0: Internal.Decoder_<E_>): Internal.Function<T, Internal.DataResult<Internal.Pair<E_, T>>>;
        withParser<E_>(arg0: Internal.Decoder_<E_>): Internal.Function<T, Internal.DataResult<E_>>;
        mergeToMap(arg0: T, arg1: Internal.Map_<T, T>): Internal.DataResult<T>;
        convertList<U_>(arg0: Internal.DynamicOps<U_>, arg1: T): U_;
        emptyList(): T;
        static func_244336_a<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.WorldSettingsImport$IResourceAccess, arg2: Internal.DynamicRegistries$Impl): Internal.WorldSettingsImport<T_>;
        get(arg0: T, arg1: string): Internal.DataResult<T>;
        static func_244335_a<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.IResourceManager, arg2: Internal.DynamicRegistries$Impl): Internal.WorldSettingsImport<T_>;
        func_241797_a_<E_>(arg0: Internal.SimpleRegistry<E_>, arg1: Internal.RegistryKey<Internal.Registry<E_>>, arg2: Internal.Codec<E_>): Internal.DataResult<Internal.SimpleRegistry<E_>>;
        emptyMap(): T;
        getNumberValue(arg0: T, arg1: Internal.Number): Internal.Number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DynamicOps<T>, arg1: Internal.WorldSettingsImport$IResourceAccess, arg2: Internal.DynamicRegistries$Impl, arg3: any);
    }
    type WorldSettingsImport_<T> = WorldSettingsImport<T>;
    abstract class StencilElement extends Internal.RenderElement {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type StencilElement_ = StencilElement;
    class EventHandlerRegistrar <T> extends Document.Object {
        post(event: T): boolean;
        addListener(listener: Internal.EventHandlerRegistrar$Handler_<T>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EventHandlerRegistrar_<T> = EventHandlerRegistrar<T>;
    class SceneBuilder$SpecialInstructions extends Document.Object {
        birbOnTurntable(arg0: BlockPos): Internal.ElementLink<ParrotElement>;
        moveParrot(arg0: Internal.ElementLink<ParrotElement>, arg1: Vec3, arg2: number): void;
        changeBirbPose(arg0: Internal.ElementLink<ParrotElement>, arg1: java_.util.function_.Supplier_<Internal.ParrotElement$ParrotPose_>): void;
        createBirb(arg0: Vec3, arg1: java_.util.function_.Supplier_<Internal.ParrotElement$ParrotPose_>): Internal.ElementLink<ParrotElement>;
        birbOnSpinnyShaft(arg0: BlockPos): Internal.ElementLink<ParrotElement>;
        createCart(arg0: Vec3, arg1: number, arg2: Internal.MinecartElement$MinecartConstructor_): Internal.ElementLink<Internal.MinecartElement>;
        rotateParrot(arg0: Internal.ElementLink<ParrotElement>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        movePointOfInterest(arg0: Vec3): void;
        movePointOfInterest(arg0: BlockPos): void;
        rotateCart(arg0: Internal.ElementLink<Internal.MinecartElement>, arg1: number, arg2: number): void;
        moveCart(arg0: Internal.ElementLink<Internal.MinecartElement>, arg1: Vec3, arg2: number): void;
        hideElement<T_>(arg0: Internal.ElementLink<T_>, arg1: Internal.Direction_): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SceneBuilder);
    }
    type SceneBuilder$SpecialInstructions_ = SceneBuilder$SpecialInstructions;
    class DoublePlantBlockPlacer extends Internal.BlockPlacer {
        static readonly field_236443_b_: Internal.Codec<Internal.DoublePlantBlockPlacer>;
        static readonly field_236444_c_: Internal.DoublePlantBlockPlacer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type DoublePlantBlockPlacer_ = DoublePlantBlockPlacer;
    interface TemplateManagerAccessor {
        repurposedstructures_getResourceManager(): Internal.IResourceManager;
        (): Internal.IResourceManager;
    }
    type TemplateManagerAccessor_ = (()=>Internal.IResourceManager) | TemplateManagerAccessor;
    abstract class ResourceBundle extends Document.Object {
        getObject(arg0: string): any;
        getBaseBundleName(): string;
        containsKey(arg0: string): boolean;
        getStringArray(arg0: string): string[];
        static clearCache(): void;
        static clearCache(arg0: Internal.ClassLoader): void;
        getKeys(): Internal.Enumeration<string>;
        getString(arg0: string): string;
        getLocale(): Internal.Locale;
        keySet(): Internal.Set<string>;
        static getBundle(arg0: string, arg1: Internal.Locale): Internal.ResourceBundle;
        static getBundle(arg0: string, arg1: Internal.ResourceBundle$Control): Internal.ResourceBundle;
        static getBundle(arg0: string): Internal.ResourceBundle;
        static getBundle(arg0: string, arg1: Internal.Locale, arg2: Internal.ClassLoader): Internal.ResourceBundle;
        static getBundle(arg0: string, arg1: Internal.Locale, arg2: Internal.ClassLoader, arg3: Internal.ResourceBundle$Control): Internal.ResourceBundle;
        static getBundle(arg0: string, arg1: Internal.Locale, arg2: Internal.ResourceBundle$Control): Internal.ResourceBundle;
        static getBundle(arg0: string, arg1: Internal.Locale, arg2: Internal.Module): Internal.ResourceBundle;
        static getBundle(arg0: string, arg1: Internal.Module): Internal.ResourceBundle;
        get baseBundleName(): string;
        get keys(): Internal.Enumeration<string>;
        get locale(): Internal.Locale;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ResourceBundle_ = ResourceBundle;
    class BotaniaRunicAltarRecipeJS extends Internal.RecipeJS {
        mana(t: number): Internal.BotaniaRunicAltarRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BotaniaRunicAltarRecipeJS_ = BotaniaRunicAltarRecipeJS;
    interface FloatCollection extends Internal.Collection<number>, Internal.FloatIterable {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        add(arg0: number): boolean;
        removeAll(arg0: Internal.FloatCollection): boolean;
        contains(arg0: any): boolean;
        contains(arg0: number): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.FloatIterator;
        addAll(arg0: Internal.FloatCollection): boolean;
        containsAll(arg0: Internal.FloatCollection): boolean;
        toArray(arg0: number[]): number[];
        rem(arg0: number): boolean;
        toFloatArray(arg0: number[]): number[];
        toFloatArray(): number[];
        remove(arg0: any): boolean;
        retainAll(arg0: Internal.FloatCollection): boolean;
        removeIf(arg0: Internal.DoublePredicate_): boolean;
        removeIf(arg0: Internal.Predicate_<number>): boolean;
    }
    type FloatCollection_ = FloatCollection;
    interface IVillagerDataHolder {
        func_213700_eh(): Internal.VillagerData;
        (): Internal.VillagerData;
    }
    type IVillagerDataHolder_ = (()=>Internal.VillagerData) | IVillagerDataHolder;
    class TexturedGlyph$Effect extends Document.Object {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number);
    }
    type TexturedGlyph$Effect_ = TexturedGlyph$Effect;
    interface IStarlightTransmission <T> {
        provideTransmissionNode(arg0: BlockPos): T;
        getTrPos(): BlockPos;
        getTrWorld(): Internal.World;
        getNode(): T;
    }
    type IStarlightTransmission_<T> = IStarlightTransmission<T>;
    interface WriterSupplier {
        get(): Internal.Writer;
        (): Internal.Writer;
    }
    type WriterSupplier_ = (()=>Internal.Writer) | WriterSupplier;
    class Quest extends Internal.QuestObject implements Internal.Movable {
        hasDependency(arg0: Internal.QuestObject): boolean;
        move(arg0: Internal.Chapter, arg1: number, arg2: number): void;
        getDependants(): Internal.List<Internal.QuestObject>;
        getSubtitle(): Internal.ITextComponent;
        moved(arg0: number, arg1: number, arg2: number): void;
        removeInvalidDependencies(): void;
        getShape(): string;
        getWidth(): number;
        getHideDependencyLines(): boolean;
        getDescription(): Internal.ITextComponent[];
        getChapter(): Internal.Chapter;
        drawMoved(arg0: Internal.MatrixStack): void;
        getHeight(): number;
        getX(): number;
        getY(): number;
        verifyDependencies(arg0: boolean): boolean;
        chapter: Internal.Chapter;
        shape: string;
        dependencyRequirement: Internal.DependencyRequirement;
        disableJEI: Internal.Tristate;
        minRequiredDependencies: number;
        readonly description: Internal.List<string>;
        optional: boolean;
        minWidth: number;
        readonly dependencies: Internal.List<Internal.QuestObject>;
        hideTextUntilComplete: Internal.Tristate;
        guidePage: string;
        hide: Internal.Tristate;
        hideDependencyLines: Internal.Tristate;
        size: number;
        subtitle: string;
        x: number;
        y: number;
        readonly tasks: Internal.List<Internal.Task>;
        readonly rewards: Internal.List<Internal.Reward>;
        get dependants(): Internal.List<Internal.QuestObject>;
        get width(): number;
        get height(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Chapter);
    }
    type Quest_ = Quest;
    class NBTSizeTracker extends Document.Object {
        readUTF(arg0: string): string;
        func_152450_a(arg0: number): void;
        static readonly field_152451_a: Internal.NBTSizeTracker;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type NBTSizeTracker_ = NBTSizeTracker;
    interface IPaperChunkHolder {
        mfix$canAdvanceStatus(): boolean;
        (): boolean;
    }
    type IPaperChunkHolder_ = (()=>boolean) | IPaperChunkHolder;
    class CompostablesRecipeEventJS extends Internal.EventJS {
        add(o: Internal.IngredientJS_, f: number): void;
        removeAll(): void;
        remove(o: Internal.IngredientJS_): void;
        static originalMap: {};
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CompostablesRecipeEventJS_ = CompostablesRecipeEventJS;
    class AttachCapabilitiesEvent <T> extends Internal.GenericEvent<T> {
        getListeners(): Internal.List<Internal.Runnable>;
        addCapability(arg0: ResourceLocation_, arg1: Internal.ICapabilityProvider_): void;
        getObject(): T;
        getCapabilities(): Internal.Map<ResourceLocation, Internal.ICapabilityProvider>;
        addListener(arg0: Internal.Runnable_): void;
        get capabilities(): Internal.Map<ResourceLocation, Internal.ICapabilityProvider>;
        get listeners(): Internal.List<Internal.Runnable>;
        get object(): T;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Class<T>, arg1: T);
        constructor();
    }
    type AttachCapabilitiesEvent_<T> = AttachCapabilitiesEvent<T>;
    class ConditionalFunction extends Document.Object implements Internal.FunctionContainer, Internal.ConditionContainer {
        enchantWithLevels(levels: Internal.IRandomRange, treasure: boolean): Internal.FunctionContainer;
        nbt(tag: Internal.CompoundNBT_): Internal.FunctionContainer;
        damage(damage: Internal.IRandomRange): Internal.FunctionContainer;
        killedByPlayer(): Internal.ConditionContainer;
        survivesExplosion(): Internal.ConditionContainer;
        randomChance(chance: number): Internal.ConditionContainer;
        addFunction(arg0: Internal.JsonObject): Internal.FunctionContainer;
        addFunction(o: Internal.JsonObject): Internal.ConditionalFunction;
        count(count: Internal.IRandomRange): Internal.FunctionContainer;
        addConditionalFunction(func: Internal.Consumer_<Internal.ConditionalFunction_>): Internal.FunctionContainer;
        addCondition(arg0: Internal.JsonObject): Internal.ConditionContainer;
        addCondition(o: Internal.JsonObject): Internal.ConditionalFunction;
        lootingEnchant(count: Internal.IRandomRange, limit: number): Internal.FunctionContainer;
        lootTable(table: ResourceLocation_, seed: number): Internal.FunctionContainer;
        entityScores(entity: Internal.LootContext$EntityTarget_, scores: Internal.Map_<string, any>): Internal.ConditionContainer;
        copyName(source: Internal.CopyName$Source_): Internal.FunctionContainer;
        name(name: Internal.Text_, entity: Internal.LootContext$EntityTarget_): Internal.FunctionContainer;
        name(name: Internal.Text_): Internal.FunctionContainer;
        randomChanceWithLooting(chance: number, multiplier: number): Internal.ConditionContainer;
        furnaceSmelt(): Internal.FunctionContainer;
        enchantRandomly(enchantments: ResourceLocation[]): Internal.FunctionContainer;
        entityProperties(entity: Internal.LootContext$EntityTarget_, properties: Internal.JsonObject): Internal.ConditionContainer;
        function: Internal.JsonObject;
        conditions: Internal.JsonArray;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ConditionalFunction_ = ConditionalFunction;
    class FluidAttributes extends Document.Object {
        getOverlayTexture(): ResourceLocation;
        getBlock(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.FluidState): Internal.BlockState;
        isLighterThanAir(): boolean;
        getStateForPlacement(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.FluidStack): Internal.FluidState;
        getTranslationKey(arg0: Internal.FluidStack): string;
        getTranslationKey(): string;
        getColor(): number;
        getColor(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): number;
        getColor(arg0: Internal.FluidStack): number;
        getFillSound(): Internal.SoundEvent;
        getFillSound(arg0: Internal.FluidStack): Internal.SoundEvent;
        getFillSound(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): Internal.SoundEvent;
        isGaseous(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): boolean;
        isGaseous(arg0: Internal.FluidStack): boolean;
        isGaseous(): boolean;
        getRarity(arg0: Internal.FluidStack): Internal.Rarity;
        getRarity(): Internal.Rarity;
        getRarity(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): Internal.Rarity;
        getDensity(): number;
        getDensity(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): number;
        getDensity(arg0: Internal.FluidStack): number;
        getEmptySound(): Internal.SoundEvent;
        getEmptySound(arg0: Internal.FluidStack): Internal.SoundEvent;
        getEmptySound(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): Internal.SoundEvent;
        getLuminosity(arg0: Internal.FluidStack): number;
        getLuminosity(): number;
        getLuminosity(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): number;
        getBucket(arg0: Internal.FluidStack): Internal.ItemStack;
        doesVaporize(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.FluidStack): boolean;
        getViscosity(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): number;
        getViscosity(): number;
        getViscosity(arg0: Internal.FluidStack): number;
        getFlowingTexture(arg0: Internal.FluidStack): ResourceLocation;
        getFlowingTexture(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): ResourceLocation;
        getFlowingTexture(): ResourceLocation;
        canBePlacedInWorld(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.FluidStack): boolean;
        canBePlacedInWorld(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.FluidState): boolean;
        getDisplayName(arg0: Internal.FluidStack): Internal.ITextComponent;
        static builder(arg0: ResourceLocation_, arg1: ResourceLocation_): Internal.FluidAttributes$Builder;
        getTextures(): Internal.Stream<ResourceLocation>;
        vaporize(arg0: Internal.PlayerEntity, arg1: Internal.World, arg2: BlockPos, arg3: Internal.FluidStack): void;
        getStillTexture(): ResourceLocation;
        getStillTexture(arg0: Internal.FluidStack): ResourceLocation;
        getStillTexture(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): ResourceLocation;
        getTemperature(): number;
        getTemperature(arg0: Internal.FluidStack): number;
        getTemperature(arg0: Internal.IBlockDisplayReader, arg1: BlockPos): number;
        static readonly BUCKET_VOLUME: 1000;
        get overlayTexture(): ResourceLocation;
        get translationKey(): string;
        get color(): number;
        get density(): number;
        get textures(): Internal.Stream<ResourceLocation>;
        get lighterThanAir(): boolean;
        get gaseous(): boolean;
        get emptySound(): Internal.SoundEvent;
        get viscosity(): number;
        get stillTexture(): ResourceLocation;
        get flowingTexture(): ResourceLocation;
        get temperature(): number;
        get luminosity(): number;
        get fillSound(): Internal.SoundEvent;
        get rarity(): Internal.Rarity;
    }
    type FluidAttributes_ = FluidAttributes;
    abstract class ZoneId extends Document.Object implements Internal.Serializable {
        static ofOffset(arg0: string, arg1: Internal.ZoneOffset): Internal.ZoneId;
        static systemDefault(): Internal.ZoneId;
        static getAvailableZoneIds(): Internal.Set<string>;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        normalized(): Internal.ZoneId;
        static of(arg0: string, arg1: Internal.Map_<string, string>): Internal.ZoneId;
        static of(arg0: string): Internal.ZoneId;
        getId(): string;
        static from(arg0: Internal.TemporalAccessor): Internal.ZoneId;
        getRules(): Internal.ZoneRules;
        static readonly SHORT_IDS: {"AST":"America/Anchorage","NST":"Pacific/Auckland","HST":"-10:00","ACT":"Australia/Darwin","BST":"Asia/Dhaka","AET":"Australia/Sydney","IST":"Asia/Kolkata","CST":"America/Chicago","NET":"Asia/Yerevan","AGT":"America/Argentina/Buenos_Aires","CAT":"Africa/Harare","MIT":"Pacific/Apia","BET":"America/Sao_Paulo","PST":"America/Los_Angeles","ART":"Africa/Cairo","JST":"Asia/Tokyo","VST":"Asia/Ho_Chi_Minh","IET":"America/Indiana/Indianapolis","CNT":"America/St_Johns","PLT":"Asia/Karachi","PNT":"America/Phoenix","EST":"-05:00","EAT":"Africa/Addis_Ababa","ECT":"Europe/Paris","PRT":"America/Puerto_Rico","CTT":"Asia/Shanghai","SST":"Pacific/Guadalcanal","MST":"-07:00"};
        get availableZoneIds(): Internal.Set<string>;
        get rules(): Internal.ZoneRules;
        get id(): string;
    }
    type ZoneId_ = ZoneId;
    class RenderLivingEvent$Post <T, M> extends Internal.RenderLivingEvent<T, M> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LivingEntity, arg1: Internal.LivingRenderer<T, M>, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer, arg5: number);
        constructor();
    }
    type RenderLivingEvent$Post_<T, M> = RenderLivingEvent$Post<T, M>;
    interface MemoryLayout {
        sliceHandle(...arg0: any[]): Internal.MethodHandle;
        byteOffsetHandle(...arg0: any[]): Internal.MethodHandle;
        select(...arg0: any[]): Internal.MemoryLayout;
        byteSize(): number;
        varHandle(...arg0: any[]): Internal.VarHandle;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        byteOffset(...arg0: any[]): number;
        hashCode(): number;
        byteAlignment(): number;
        equals(arg0: any): boolean;
        name(): Internal.Optional<string>;
        toString(): string;
        withName(arg0: string): Internal.MemoryLayout;
        withoutName(): Internal.MemoryLayout;
    }
    type MemoryLayout_ = MemoryLayout;
    interface PerkRender {
        addGroups(arg0: Internal.Collection<Internal.PerkRenderGroup>): void;
        renderPerkAtBatch(arg0: Internal.BatchPerkContext, arg1: Internal.MatrixStack, arg2: Internal.AllocationStatus_, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): Internal.Rectangle2D$Float;
    }
    type PerkRender_ = PerkRender;
    interface AccessibleValue {
        getMinimumAccessibleValue(): Internal.Number;
        setCurrentAccessibleValue(arg0: Internal.Number): boolean;
        getCurrentAccessibleValue(): Internal.Number;
        getMaximumAccessibleValue(): Internal.Number;
    }
    type AccessibleValue_ = AccessibleValue;
    interface ICrashReportDetail <V> extends java_.util.concurrent.Callable<V> {
    }
    type ICrashReportDetail_<V> = ICrashReportDetail<V>;
    class Locale extends Document.Object implements Internal.Cloneable, Internal.Serializable {
        stripExtensions(): Internal.Locale;
        static forLanguageTag(arg0: string): Internal.Locale;
        getUnicodeLocaleAttributes(): Internal.Set<string>;
        getCountry(): string;
        getUnicodeLocaleKeys(): Internal.Set<string>;
        getISO3Country(): string;
        static lookupTag(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Collection<string>): string;
        getDisplayCountry(arg0: Internal.Locale): string;
        getDisplayCountry(): string;
        getISO3Language(): string;
        static getISOCountries(arg0: Internal.Locale$IsoCountryCode_): Internal.Set<string>;
        static getISOCountries(): string[];
        getExtensionKeys(): Internal.Set<string>;
        static of(arg0: string, arg1: string): Internal.Locale;
        static of(arg0: string, arg1: string, arg2: string): Internal.Locale;
        static of(arg0: string): Internal.Locale;
        getDisplayVariant(arg0: Internal.Locale): string;
        getDisplayVariant(): string;
        static filterTags(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Collection<string>): Internal.List<string>;
        static filterTags(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Collection<string>, arg2: Internal.Locale$FilteringMode_): Internal.List<string>;
        static getISOLanguages(): string[];
        toLanguageTag(): string;
        static getAvailableLocales(): Internal.Locale[];
        getDisplayScript(arg0: Internal.Locale): string;
        getDisplayScript(): string;
        static lookup(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Collection<Internal.Locale>): Internal.Locale;
        getLanguage(): string;
        getExtension(arg0: string): string;
        getVariant(): string;
        static getDefault(): Internal.Locale;
        static getDefault(arg0: Internal.Locale$Category_): Internal.Locale;
        static setDefault(arg0: Internal.Locale): void;
        static setDefault(arg0: Internal.Locale$Category_, arg1: Internal.Locale): void;
        static availableLocales(): Internal.Stream<Internal.Locale>;
        hasExtensions(): boolean;
        static filter(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Collection<Internal.Locale>): Internal.List<Internal.Locale>;
        static filter(arg0: Internal.List<Internal.Locale$LanguageRange>, arg1: Internal.Collection<Internal.Locale>, arg2: Internal.Locale$FilteringMode_): Internal.List<Internal.Locale>;
        getDisplayName(): string;
        getDisplayName(arg0: Internal.Locale): string;
        clone(): any;
        getDisplayLanguage(): string;
        getDisplayLanguage(arg0: Internal.Locale): string;
        getScript(): string;
        static caseFoldLanguageTag(arg0: string): string;
        getUnicodeLocaleType(arg0: string): string;
        static readonly PRC: Internal.Locale;
        static readonly CANADA: Internal.Locale;
        static readonly ENGLISH: Internal.Locale;
        static readonly ROOT: Internal.Locale;
        static readonly TAIWAN: Internal.Locale;
        static readonly CHINA: Internal.Locale;
        static readonly ITALY: Internal.Locale;
        static readonly CHINESE: Internal.Locale;
        static readonly KOREA: Internal.Locale;
        static readonly FRENCH: Internal.Locale;
        static readonly FRANCE: Internal.Locale;
        static readonly TRADITIONAL_CHINESE: Internal.Locale;
        static readonly CANADA_FRENCH: Internal.Locale;
        static readonly GERMANY: Internal.Locale;
        static readonly ITALIAN: Internal.Locale;
        static readonly PRIVATE_USE_EXTENSION: "x";
        static readonly UK: Internal.Locale;
        static readonly JAPAN: Internal.Locale;
        static readonly JAPANESE: Internal.Locale;
        static readonly UNICODE_LOCALE_EXTENSION: "u";
        static readonly SIMPLIFIED_CHINESE: Internal.Locale;
        static readonly GERMAN: Internal.Locale;
        static readonly US: Internal.Locale;
        static readonly KOREAN: Internal.Locale;
        get unicodeLocaleKeys(): Internal.Set<string>;
        get country(): string;
        get displayName(): string;
        get iSOLanguages(): string[];
        get displayVariant(): string;
        get language(): string;
        get displayLanguage(): string;
        get script(): string;
        get iSO3Country(): string;
        get iSOCountries(): string[];
        get unicodeLocaleAttributes(): Internal.Set<string>;
        get default(): Internal.Locale;
        get displayCountry(): string;
        get variant(): string;
        get extensionKeys(): Internal.Set<string>;
        get displayScript(): string;
        get iSO3Language(): string;
        set default(arg0: Internal.Locale);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor(arg0: string, arg1: string, arg2: string);
        constructor(arg0: string, arg1: string);
    }
    type Locale_ = Locale;
    interface GeneratedClassLoader {
        defineClass(arg0: string, arg1: number[]): Internal.Class<any>;
        linkClass(arg0: Internal.Class<any>): void;
    }
    type GeneratedClassLoader_ = GeneratedClassLoader;
    class SOpenHorseWindowPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_218702_c(): number;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_218703_d(): number;
        func_218704_b(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type SOpenHorseWindowPacket_ = SOpenHorseWindowPacket;
    class TridentEntity extends Internal.AbstractArrowEntity implements Internal.EnchModuleEvents$TridentGetter {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_184550_j(): Internal.ItemStack;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        handler$zih000$startHitEntity(arg0: Internal.EntityRayTraceResult, arg1: Internal.CallbackInfo): void;
        getTridentItem(): Internal.ItemStack;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_225516_i_(): void;
        func_226572_w_(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        handler$zih000$endHitEntity(arg0: Internal.EntityRayTraceResult, arg1: Internal.CallbackInfo): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_203054_h: Internal.ItemStack;
        field_203052_f: number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get tridentItem(): Internal.ItemStack;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity, arg2: Internal.ItemStack);
        constructor(arg0: Internal.EntityType<Internal.TridentEntity>, arg1: Internal.World);
    }
    type TridentEntity_ = TridentEntity;
    class Provider$Service extends Document.Object {
        getAttribute(arg0: string): string;
        getType(): string;
        getAlgorithm(): string;
        getProvider(): Internal.Provider;
        newInstance(arg0: any): any;
        getClassName(): string;
        supportsParameter(arg0: any): boolean;
        get provider(): Internal.Provider;
        get className(): string;
        get type(): string;
        get algorithm(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Provider, arg1: string, arg2: string, arg3: string, arg4: Internal.List<string>, arg5: Internal.Map<string, string>);
    }
    type Provider$Service_ = Provider$Service;
    class RemoveSpawnsByCategoryProperties extends Document.Object {
        readonly biomes: Internal.WorldgenEntryList;
        readonly categories: Internal.WorldgenEntryList;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RemoveSpawnsByCategoryProperties_ = RemoveSpawnsByCategoryProperties;
    interface TemplateAccess {
        setSize(arg0: BlockPos): void;
        getPalettes(): Internal.List<Internal.Template$Palette>;
    }
    type TemplateAccess_ = TemplateAccess;
    class SceneBuilderJS$WorldInstructionsJS extends Document.Object implements Internal.ISceneBuilderJS$IWorldInstructionsJS {
        modifyEntities<T_>(arg0: Internal.Class<T_>, arg1: Internal.Consumer_<T_>): void;
        hideSection(arg0: Internal.Selection, arg1: Internal.Direction_): void;
        multiplyKineticSpeed(arg0: Internal.Selection, arg1: number): void;
        toggleRedstonePower(arg0: Internal.Selection): void;
        cycleBlockProperty(arg0: BlockPos, arg1: Internal.Property<any>): void;
        setCraftingResult(arg0: BlockPos, arg1: Internal.ItemStack): void;
        setBlock(arg0: BlockPos, arg1: Internal.BlockState, arg2: boolean): void;
        modifyTileEntity<T_>(arg0: BlockPos, arg1: Internal.Class<T_>, arg2: Internal.Consumer_<T_>): void;
        showIndependentSectionImmediately(arg0: Internal.Selection): Internal.ElementLink<Internal.WorldSectionElement>;
        glueBlockOnto(arg0: BlockPos, arg1: Internal.Direction_, arg2: Internal.ElementLink<Internal.WorldSectionElement>): void;
        setFilterData(arg0: Internal.Selection, arg1: Internal.Class<Internal.TileEntity>, arg2: Internal.ItemStack): void;
        moveSection(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: Vec3, arg2: number): void;
        showSectionAndMerge(arg0: Internal.Selection, arg1: Internal.Direction_, arg2: Internal.ElementLink<Internal.WorldSectionElement>): void;
        createItemEntity(arg0: Vec3, arg1: Vec3, arg2: Internal.ItemStack): Internal.ElementLink<Internal.EntityElement>;
        setBlocks(arg0: Internal.Selection, arg1: Internal.BlockState, arg2: boolean): void;
        modifyEntity(arg0: Internal.ElementLink<Internal.EntityElement>, arg1: Internal.Consumer_<Internal.EntityJS_>): void;
        modifyBlock(arg0: BlockPos, arg1: Internal.Consumer_<Internal.BlockIDPredicate_>): void;
        modifyBlock(arg0: BlockPos, arg1: boolean, arg2: Internal.Consumer_<Internal.BlockIDPredicate_>): void;
        modifyBlock(arg0: BlockPos, arg1: Internal.UnaryOperator<Internal.BlockState>, arg2: boolean): void;
        createEntity(arg0: ResourceLocation_, arg1: Vec3, arg2: Internal.UnaryOperator<Internal.EntityJS>): Internal.ElementLink<Internal.EntityElement>;
        createEntity(arg0: ResourceLocation_, arg1: Vec3): Internal.ElementLink<Internal.EntityElement>;
        createEntity(arg0: Internal.Function_<Internal.World_, Internal.Entity_>): Internal.ElementLink<Internal.EntityElement>;
        createItemOnBeltLike(arg0: BlockPos, arg1: Internal.Direction_, arg2: Internal.ItemStack): void;
        connectCrafterInvs(arg0: BlockPos, arg1: BlockPos): void;
        createEntityJS(arg0: Internal.World, arg1: ResourceLocation_, arg2: Vec3): Internal.EntityJS;
        instructArm(arg0: BlockPos, arg1: Internal.ArmTileEntity$Phase_, arg2: Internal.ItemStack, arg3: number): void;
        showSection(arg0: Internal.Selection, arg1: Internal.Direction_): void;
        destroyBlock(arg0: BlockPos): void;
        rotateBearing(arg0: BlockPos, arg1: number, arg2: number): void;
        modifyBlocks(arg0: Internal.Selection, arg1: Internal.UnaryOperator<Internal.BlockState>, arg2: boolean): void;
        getBlockStateJS(arg0: Internal.BlockState): Internal.BlockIDPredicate;
        showIndependentSection(arg0: Internal.Selection, arg1: Internal.Direction_): Internal.ElementLink<Internal.WorldSectionElement>;
        modifyTileNBT(arg0: Internal.Selection, arg1: Internal.Class<Internal.TileEntity>, arg2: Internal.CompoundNBT_, arg3: boolean): void;
        modifyTileNBT(arg0: Internal.Selection, arg1: Internal.CompoundNBT_, arg2: boolean): void;
        modifyTileNBT(arg0: Internal.Selection, arg1: Internal.CompoundNBT_): void;
        modifyTileNBT(arg0: Internal.Selection, arg1: Internal.Class<Internal.TileEntity>, arg2: Internal.Consumer_<Internal.CompoundNBT_>): void;
        modifyTileNBT(arg0: Internal.Selection, arg1: Internal.Class<Internal.TileEntity>, arg2: Internal.Consumer_<Internal.CompoundNBT_>, arg3: boolean): void;
        restoreBlocks(arg0: Internal.Selection): void;
        replaceBlocks(arg0: Internal.Selection, arg1: Internal.BlockState, arg2: boolean): void;
        removeItemsFromBelt(arg0: BlockPos): void;
        makeSectionIndependent(arg0: Internal.Selection): Internal.ElementLink<Internal.WorldSectionElement>;
        flapFunnel(arg0: BlockPos, arg1: boolean): void;
        createItemOnBelt(arg0: BlockPos, arg1: Internal.Direction_, arg2: Internal.ItemStack): Internal.ElementLink<Internal.BeltItemElement>;
        movePulley(arg0: BlockPos, arg1: number, arg2: number): void;
        changeBeltItemTo(arg0: Internal.ElementLink<Internal.BeltItemElement>, arg1: Internal.ItemStack): void;
        moveDeployer(arg0: BlockPos, arg1: number, arg2: number): void;
        modifyKineticSpeed(arg0: Internal.Selection, arg1: Internal.UnaryOperator<number>): void;
        propagatePipeChange(arg0: BlockPos): void;
        rotateSection(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        updateTileNBT(arg0: Internal.Selection, arg1: Internal.UnaryOperator<Internal.CompoundNBT>, arg2: boolean): void;
        updateTileNBT(arg0: Internal.Selection, arg1: Internal.UnaryOperator<Internal.CompoundNBT>): void;
        updateTileNBT(arg0: Internal.Selection, arg1: Internal.Class<Internal.TileEntity>, arg2: Internal.UnaryOperator<Internal.CompoundNBT>, arg3: boolean): void;
        modifyEntitiesInside<T_>(arg0: Internal.Class<T_>, arg1: Internal.Selection, arg2: Internal.Consumer_<T_>): void;
        configureStabilization(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: Vec3): void;
        createGlueEntity(arg0: BlockPos, arg1: Internal.Direction_): Internal.ElementLink<Internal.EntityElement>;
        getInternal(): Internal.SceneBuilder$WorldInstructions;
        getEntity(arg0: ResourceLocation_): Internal.EntityType<any>;
        configureCenterOfRotation(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: Vec3): void;
        stallBeltItem(arg0: Internal.ElementLink<Internal.BeltItemElement>, arg1: boolean): void;
        mapJsConsumerToNBT(arg0: any, arg1: Internal.UnaryOperator<Internal.CompoundNBT>): Internal.Consumer<Internal.CompoundNBT>;
        setKineticSpeed(arg0: Internal.Selection, arg1: number): void;
        hideIndependentSection(arg0: Internal.ElementLink<Internal.WorldSectionElement>, arg1: Internal.Direction_): void;
        incrementBlockBreakingProgress(arg0: BlockPos): void;
        get internal(): Internal.SceneBuilder$WorldInstructions;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SceneBuilder$WorldInstructions, arg1: Internal.SceneBuilderJS);
    }
    type SceneBuilderJS$WorldInstructionsJS_ = SceneBuilderJS$WorldInstructionsJS;
    class GravityStructureProcessor extends Internal.StructureProcessor {
        static readonly field_237081_a_: Internal.Codec<Internal.GravityStructureProcessor>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Heightmap$Type, arg1: number);
    }
    type GravityStructureProcessor_ = GravityStructureProcessor;
    abstract class EntityEventJS extends Internal.WorldEventJS {
        getEntity(): Internal.EntityJS;
        get entity(): Internal.EntityJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EntityEventJS_ = EntityEventJS;
    class Frame extends Internal.Window implements Internal.MenuContainer {
        setMaximizedBounds(arg0: Internal.Rectangle): void;
        getMaximizedBounds(): Internal.Rectangle;
        static getFrames(): Internal.Frame[];
        setResizable(arg0: boolean): void;
        setTitle(arg0: string): void;
        isResizable(): boolean;
        getMenuBar(): Internal.MenuBar;
        setExtendedState(arg0: number): void;
        setMenuBar(arg0: Internal.MenuBar): void;
        getExtendedState(): number;
        getTitle(): string;
        getState(): number;
        setUndecorated(arg0: boolean): void;
        isUndecorated(): boolean;
        setState(arg0: number): void;
        setCursor(arg0: number): void;
        getCursorType(): number;
        getIconImage(): Internal.Image;
        static readonly N_RESIZE_CURSOR: 8;
        static readonly MAXIMIZED_HORIZ: 2;
        static readonly ICONIFIED: 1;
        static readonly S_RESIZE_CURSOR: 9;
        static readonly TEXT_CURSOR: 2;
        static readonly MAXIMIZED_BOTH: 6;
        static readonly NW_RESIZE_CURSOR: 6;
        static readonly W_RESIZE_CURSOR: 10;
        static readonly SE_RESIZE_CURSOR: 5;
        static readonly NE_RESIZE_CURSOR: 7;
        static readonly SW_RESIZE_CURSOR: 4;
        static readonly MAXIMIZED_VERT: 4;
        static readonly DEFAULT_CURSOR: 0;
        static readonly CROSSHAIR_CURSOR: 1;
        static readonly E_RESIZE_CURSOR: 11;
        static readonly HAND_CURSOR: 12;
        static readonly WAIT_CURSOR: 3;
        static readonly NORMAL: 0;
        static readonly MOVE_CURSOR: 13;
        get menuBar(): Internal.MenuBar;
        get undecorated(): boolean;
        get frames(): Internal.Frame[];
        get iconImage(): Internal.Image;
        get resizable(): boolean;
        get extendedState(): number;
        get cursorType(): number;
        get state(): number;
        get title(): string;
        get maximizedBounds(): Internal.Rectangle;
        set cursor(arg0: number);
        set menuBar(arg0: Internal.MenuBar);
        set undecorated(arg0: boolean);
        set resizable(arg0: boolean);
        set extendedState(arg0: number);
        set state(arg0: number);
        set title(arg0: string);
        set maximizedBounds(arg0: Internal.Rectangle);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.GraphicsConfiguration);
        constructor(arg0: string);
        constructor(arg0: Internal.GraphicsConfiguration);
        constructor();
    }
    type Frame_ = Frame;
    interface Channel extends Internal.AttributeMap, Internal.ChannelOutboundInvoker, Internal.Comparable<Internal.Channel> {
        parent(): Internal.Channel;
        metadata(): Internal.ChannelMetadata;
        read(): Internal.Channel;
        bytesBeforeUnwritable(): number;
        eventLoop(): Internal.EventLoop;
        isWritable(): boolean;
        isActive(): boolean;
        unsafe(): Internal.Channel$Unsafe;
        pipeline(): Internal.ChannelPipeline;
        isOpen(): boolean;
        closeFuture(): Internal.ChannelFuture;
        flush(): Internal.Channel;
        localAddress(): Internal.SocketAddress;
        isRegistered(): boolean;
        bytesBeforeWritable(): number;
        id(): Internal.ChannelId;
        alloc(): Internal.ByteBufAllocator;
        config(): Internal.ChannelConfig;
        remoteAddress(): Internal.SocketAddress;
    }
    type Channel_ = Channel;
    class ClientRecipeBook extends Internal.RecipeBook {
        func_243196_a(arg0: Internal.Iterable_<Internal.IRecipe_<any>>): void;
        func_202891_a(arg0: Internal.RecipeBookCategories_): Internal.List<Internal.RecipeList>;
        func_199642_d(): Internal.List<Internal.RecipeList>;
        static readonly field_241555_k_: Internal.Logger;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ClientRecipeBook_ = ClientRecipeBook;
    interface IntIterable extends Internal.Iterable<number> {
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.IntIterator;
        forEach(arg0: Internal.IntConsumer_): void;
        forEach(arg0: Internal.Consumer_<number>): void;
        (): Internal.IntIterator;
    }
    type IntIterable_ = (()=>Internal.IntIterator) | IntIterable;
    class AnvilSmithingRecipe extends Document.Object implements Internal.IRecipe<Internal.IInventory> {
        func_77572_b(arg0: Internal.IInventory): Internal.ItemStack;
        func_222127_g(): Internal.IRecipeType<any>;
        func_199560_c(): ResourceLocation;
        func_192399_d(): boolean;
        func_77569_a(arg0: Internal.IInventory, arg1: Internal.World): boolean;
        craft(arg0: Internal.IInventory, arg1: Internal.PlayerEntity): Internal.ItemStack;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        checkHammerDurability(arg0: Internal.IInventory, arg1: Internal.PlayerEntity): boolean;
        func_77571_b(): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<Internal.ItemStack>;
        func_194133_a(arg0: number, arg1: number): boolean;
        func_199559_b(): Internal.IRecipeSerializer<any>;
        readonly output: Internal.ItemStack;
        static readonly GROUP: "anvil_smithing";
        readonly input: Internal.Ingredient;
        readonly damage: number;
        readonly level: number;
        readonly anvilLevel: number;
        static readonly TYPE: Internal.IRecipeType<Internal.AnvilSmithingRecipe>;
        readonly inputCount: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.Ingredient, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number, arg6: number);
    }
    type AnvilSmithingRecipe_ = AnvilSmithingRecipe;
    interface AccessorGoalSelector {
        getGoals(): Internal.Set<Internal.PrioritizedGoal>;
        (): Internal.Set<Internal.PrioritizedGoal>;
    }
    type AccessorGoalSelector_ = (()=>Internal.Set<Internal.PrioritizedGoal>) | AccessorGoalSelector;
    class SUpdateTimePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_149365_d(): number;
        func_149366_c(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: boolean);
    }
    type SUpdateTimePacket_ = SUpdateTimePacket;
    class LeaveVineTreeDecorator extends Internal.TreeDecorator {
        static readonly field_236870_a_: Internal.Codec<Internal.LeaveVineTreeDecorator>;
        static readonly field_236871_b_: Internal.LeaveVineTreeDecorator;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type LeaveVineTreeDecorator_ = LeaveVineTreeDecorator;
    class ActionResult <T> extends Document.Object {
        static func_226251_d_<T_>(arg0: T_): Internal.ActionResult<T_>;
        static func_233538_a_<T_>(arg0: T_, arg1: boolean): Internal.ActionResult<T_>;
        static func_226248_a_<T_>(arg0: T_): Internal.ActionResult<T_>;
        func_188397_a(): Internal.ActionResultType;
        static func_226249_b_<T_>(arg0: T_): Internal.ActionResult<T_>;
        func_188398_b(): T;
        static func_226250_c_<T_>(arg0: T_): Internal.ActionResult<T_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ActionResultType, arg1: T);
    }
    type ActionResult_<T> = ActionResult<T>;
    class PowahAPI extends Document.Object {
        static getHeatSource(arg0: Internal.Block_): number;
        static registerHeatSource(arg0: Internal.Block_, arg1: number): void;
        static registerSolidCoolant(arg0: Internal.IItemProvider_, arg1: number, arg2: number): void;
        static registerCoolant(arg0: Internal.Fluid_, arg1: number): void;
        static getCoolant(arg0: Internal.Fluid_): number;
        static getMagmaticFluidHeat(arg0: Internal.Fluid_): number;
        static registerMagmaticFluid(arg0: Internal.Fluid_, arg1: number): void;
        static getSolidCoolant(arg0: Internal.IItemProvider_): org.apache.commons.lang3.tuple.Pair<number, number>;
        static readonly COOLANTS: {};
        static readonly SOLID_COOLANTS: {};
        static readonly HEAT_SOURCES: {};
        static readonly MAGMATIC_FLUIDS: {};
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PowahAPI_ = PowahAPI;
    class TrunkPlacerType <P> extends Document.Object {
        func_236927_a_(): Internal.Codec<P>;
        static readonly field_236921_b_: Internal.TrunkPlacerType<Internal.ForkyTrunkPlacer>;
        static readonly field_236920_a_: Internal.TrunkPlacerType<Internal.StraightTrunkPlacer>;
        static readonly field_236923_d_: Internal.TrunkPlacerType<Internal.MegaJungleTrunkPlacer>;
        static readonly field_236922_c_: Internal.TrunkPlacerType<Internal.GiantTrunkPlacer>;
        static readonly field_236924_e_: Internal.TrunkPlacerType<Internal.DarkOakTrunkPlacer>;
        static readonly field_236925_f_: Internal.TrunkPlacerType<Internal.FancyTrunkPlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<P>);
    }
    type TrunkPlacerType_<P> = TrunkPlacerType<P>;
    class NativeImage$PixelFormat extends Internal.Enum<Internal.NativeImage$PixelFormat> {
        func_211653_r(): boolean;
        func_211656_b(): void;
        func_211648_n(): number;
        static valueOf(arg0: string): Internal.NativeImage$PixelFormat;
        func_211658_c(): void;
        func_211654_w(): boolean;
        static values(): Internal.NativeImage$PixelFormat[];
        func_211647_v(): number;
        func_211645_i(): boolean;
        func_211651_a(): number;
        func_211650_d(): number;
        static readonly LUMINANCE_ALPHA: Internal.NativeImage$PixelFormat;
        static readonly RGBA: Internal.NativeImage$PixelFormat;
        static readonly LUMINANCE: Internal.NativeImage$PixelFormat;
        static readonly RGB: Internal.NativeImage$PixelFormat;
    }
    type NativeImage$PixelFormat_ = "rgba" | "rgb" | "luminance_alpha" | "luminance" | NativeImage$PixelFormat;
    class Point2D$Float extends Internal.Point2D implements Internal.Serializable {
        setLocation(arg0: number, arg1: number): void;
        x: number;
        y: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number);
    }
    type Point2D$Float_ = Point2D$Float;
    class ResearchNode$NodeRenderType extends Internal.Enum<Internal.ResearchNode$NodeRenderType> {
        static valueOf(arg0: string): Internal.ResearchNode$NodeRenderType;
        static values(): Internal.ResearchNode$NodeRenderType[];
        static readonly ITEMSTACK: Internal.ResearchNode$NodeRenderType;
        static readonly TEXTURE_SPRITE: Internal.ResearchNode$NodeRenderType;
    }
    type ResearchNode$NodeRenderType_ = "itemstack" | "texture_sprite" | ResearchNode$NodeRenderType;
    interface INoiseGenerator {
        func_215460_a(arg0: number, arg1: number, arg2: number, arg3: number): number;
        (arg0: number, arg1: number, arg2: number, arg3: number): number;
    }
    type INoiseGenerator_ = ((arg0: number, arg1: number, arg2: number, arg3: number)=>number) | INoiseGenerator;
    class SSpawnObjectPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_186880_c(): number;
        func_186881_e(): number;
        func_186882_d(): number;
        func_218694_l(): Internal.EntityType<any>;
        func_186879_b(): Internal.UUID;
        func_149001_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149006_k(): number;
        func_218695_h(): number;
        func_149008_j(): number;
        func_218692_i(): number;
        func_149009_m(): number;
        func_218693_g(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Entity, arg1: Internal.EntityType<any>, arg2: number, arg3: BlockPos);
        constructor(arg0: Internal.Entity, arg1: number);
        constructor(arg0: Internal.Entity);
        constructor(arg0: number, arg1: Internal.UUID, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.EntityType<any>, arg8: number, arg9: Vec3);
        constructor();
    }
    type SSpawnObjectPacket_ = SSpawnObjectPacket;
    abstract class HangingEntity extends Internal.Entity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_174857_n(): BlockPos;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_70518_d(): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_82329_d(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_110128_b(arg0: Internal.Entity): void;
        func_213281_b(arg0: Internal.CompoundNBT_): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_82330_g(): number;
        func_70037_a(arg0: Internal.CompoundNBT_): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_184523_o(): void;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type HangingEntity_ = HangingEntity;
    interface Consumer <T> {
        andThen(arg0: Internal.Consumer_<T>): Internal.Consumer<T>;
        accept(arg0: T): void;
        (arg0: T): void;
    }
    type Consumer_<T> = ((arg0: T)=>void) | Consumer<T>;
    interface ChunkHolder$IChunkLoadingError {
    }
    type ChunkHolder$IChunkLoadingError_ = ChunkHolder$IChunkLoadingError;
    class URI extends Document.Object implements Internal.Comparable<Internal.URI>, Internal.Serializable {
        toASCIIString(): string;
        toURL(): Internal.URL;
        getScheme(): string;
        resolve(arg0: string): Internal.URI;
        resolve(arg0: Internal.URI): Internal.URI;
        isOpaque(): boolean;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.URI): number;
        getAuthority(): string;
        getRawFragment(): string;
        getRawAuthority(): string;
        getRawUserInfo(): string;
        parseServerAuthority(): Internal.URI;
        getRawSchemeSpecificPart(): string;
        getRawQuery(): string;
        getPort(): number;
        normalize(): Internal.URI;
        getPath(): string;
        static create(arg0: string): Internal.URI;
        isAbsolute(): boolean;
        getFragment(): string;
        relativize(arg0: Internal.URI): Internal.URI;
        getRawPath(): string;
        getUserInfo(): string;
        getSchemeSpecificPart(): string;
        getQuery(): string;
        getHost(): string;
        get rawFragment(): string;
        get userInfo(): string;
        get opaque(): boolean;
        get scheme(): string;
        get query(): string;
        get schemeSpecificPart(): string;
        get rawUserInfo(): string;
        get path(): string;
        get fragment(): string;
        get rawPath(): string;
        get rawSchemeSpecificPart(): string;
        get port(): number;
        get rawAuthority(): string;
        get absolute(): boolean;
        get authority(): string;
        get host(): string;
        get rawQuery(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: string, arg2: string, arg3: string, arg4: string);
        constructor(arg0: string, arg1: string, arg2: string, arg3: string);
        constructor(arg0: string, arg1: string, arg2: string);
        constructor(arg0: string);
        constructor(arg0: string, arg1: string, arg2: string, arg3: number, arg4: string, arg5: string, arg6: string);
    }
    type URI_ = URI;
    interface AccessorModelBakery {
    }
    type AccessorModelBakery_ = AccessorModelBakery;
    interface ValueLayout$OfChar extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfChar;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfChar;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout$OfChar;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfChar;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfChar_ = ValueLayout$OfChar;
    class ModelBakeEvent extends net.minecraftforge.eventbus.api.Event implements Internal.IModBusEvent {
        getModelRegistry(): Internal.Map<ResourceLocation, Internal.IBakedModel>;
        getModelManager(): Internal.ModelManager;
        getModelLoader(): Internal.ModelLoader;
        get modelRegistry(): Internal.Map<ResourceLocation, Internal.IBakedModel>;
        get modelManager(): Internal.ModelManager;
        get modelLoader(): Internal.ModelLoader;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ModelManager, arg1: Internal.Map<ResourceLocation, Internal.IBakedModel>, arg2: Internal.ModelLoader);
    }
    type ModelBakeEvent_ = ModelBakeEvent;
    class PlayerProfileCache$ProfileEntry extends Document.Object {
        func_152670_b(): Internal.Date;
        func_242126_a(arg0: number): void;
        func_242128_c(): number;
        func_152668_a(): Internal.GameProfile;
    }
    type PlayerProfileCache$ProfileEntry_ = PlayerProfileCache$ProfileEntry;
    class SoundEngine extends Document.Object implements Internal.ISoundLists {
        func_188771_a(arg0: Internal.SoundCategory_, arg1: number): void;
        func_217933_b(arg0: Internal.ISound): boolean;
        func_217921_a(arg0: boolean): void;
        func_217920_a(arg0: Internal.ActiveRenderInfo): void;
        func_204259_a(arg0: Internal.Sound): void;
        func_229363_a_(arg0: Internal.ITickableSound): void;
        func_148614_c(): void;
        func_148596_a(): void;
        func_148611_c(arg0: Internal.ISound): void;
        func_148610_e(): void;
        func_148602_b(arg0: Internal.ISound): void;
        func_148613_b(): void;
        func_217932_f(): string;
        func_148604_f(): void;
        func_148599_a(arg0: Internal.ISound, arg1: number): void;
        func_195855_a(arg0: ResourceLocation_, arg1: Internal.SoundCategory_): void;
        func_188773_b(arg0: Internal.ISoundEventListener_): void;
        func_188774_a(arg0: Internal.ISoundEventListener_): void;
        readonly field_188777_o: Internal.List<Internal.ISoundEventListener>;
        readonly field_217942_m: Internal.Map<Internal.ISound, Internal.ChannelManager$Entry>;
        readonly field_148622_c: Internal.SoundHandler;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SoundHandler, arg1: Internal.GameSettings, arg2: Internal.IResourceManager);
    }
    type SoundEngine_ = SoundEngine;
    interface IBaseProvider extends Internal.IHasTextComponent, Internal.IHasTranslationKey {
        getName(): string;
        getRegistryName(): ResourceLocation;
        getTextComponent(): Internal.ITextComponent;
        (): ResourceLocation;
    }
    type IBaseProvider_ = (()=>ResourceLocation) | IBaseProvider;
    class MoverType extends Internal.Enum<Internal.MoverType> {
        static valueOf(arg0: string): Internal.MoverType;
        static values(): Internal.MoverType[];
        static readonly PLAYER: Internal.MoverType;
        static readonly PISTON: Internal.MoverType;
        static readonly SHULKER_BOX: Internal.MoverType;
        static readonly SELF: Internal.MoverType;
        static readonly SHULKER: Internal.MoverType;
    }
    type MoverType_ = "self" | "player" | "piston" | "shulker_box" | "shulker" | MoverType;
    class StringReader extends Document.Object implements Internal.ImmutableStringReader {
        getCursor(): number;
        readStringUntil(arg0: string): string;
        getTotalLength(): number;
        read(): string;
        static isAllowedInUnquotedString(arg0: string): boolean;
        canRead(): boolean;
        canRead(arg0: number): boolean;
        getRemaining(): string;
        getRead(): string;
        readString(): string;
        skip(): void;
        getString(): string;
        peek(): string;
        peek(arg0: number): string;
        expect(arg0: string): void;
        getRemainingLength(): number;
        readLong(): number;
        readDouble(): number;
        static isQuotedStringStart(arg0: string): boolean;
        readUnquotedString(): string;
        readFloat(): number;
        static isAllowedNumber(arg0: string): boolean;
        setCursor(arg0: number): void;
        readBoolean(): boolean;
        readQuotedString(): string;
        readInt(): number;
        skipWhitespace(): void;
        get cursor(): number;
        get string(): string;
        get totalLength(): number;
        get remaining(): string;
        get remainingLength(): number;
        set cursor(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.StringReader);
        constructor(arg0: string);
    }
    type StringReader_ = StringReader;
    class STBTTFontinfo extends Internal.Struct implements Internal.NativeResource {
        static malloc(arg0: number): Internal.STBTTFontinfo$Buffer;
        static malloc(): Internal.STBTTFontinfo;
        static createSafe(arg0: number, arg1: number): Internal.STBTTFontinfo$Buffer;
        static createSafe(arg0: number): Internal.STBTTFontinfo;
        static callocStack(arg0: number, arg1: Internal.MemoryStack): Internal.STBTTFontinfo$Buffer;
        static callocStack(): Internal.STBTTFontinfo;
        static callocStack(arg0: Internal.MemoryStack): Internal.STBTTFontinfo;
        static callocStack(arg0: number): Internal.STBTTFontinfo$Buffer;
        static create(arg0: number): Internal.STBTTFontinfo;
        static create(): Internal.STBTTFontinfo;
        static create(arg0: number): Internal.STBTTFontinfo$Buffer;
        static create(arg0: number, arg1: number): Internal.STBTTFontinfo$Buffer;
        static calloc(): Internal.STBTTFontinfo;
        static calloc(arg0: number): Internal.STBTTFontinfo$Buffer;
        close(): void;
        static mallocStack(arg0: number, arg1: Internal.MemoryStack): Internal.STBTTFontinfo$Buffer;
        static mallocStack(arg0: number): Internal.STBTTFontinfo$Buffer;
        static mallocStack(): Internal.STBTTFontinfo;
        static mallocStack(arg0: Internal.MemoryStack): Internal.STBTTFontinfo;
        static readonly ALIGNOF: 8;
        static readonly SIZEOF: 160;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ByteBuffer);
    }
    type STBTTFontinfo_ = STBTTFontinfo;
    abstract class AbstractIntCollection extends Internal.AbstractCollection<number> implements Internal.IntCollection {
        add(arg0: number): boolean;
        add(arg0: number): boolean;
        spliterator(): Internal.Spliterator<number>;
        forEach(arg0: Internal.Consumer_<number>): void;
        forEach(arg0: Internal.IntConsumer_): void;
        containsAll(arg0: Internal.IntCollection): boolean;
        removeIf(arg0: Internal.Predicate_<number>): boolean;
        removeIf(arg0: Internal.IntPredicate_): boolean;
        removeAll(arg0: Internal.IntCollection): boolean;
        contains(arg0: number): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.IntIterator;
        stream(): Internal.Stream<number>;
        addAll(arg0: Internal.IntCollection): boolean;
        toIntArray(): number[];
        toIntArray(arg0: number[]): number[];
        toArray(arg0: number[]): number[];
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<number>;
        rem(arg0: number): boolean;
        retainAll(arg0: Internal.IntCollection): boolean;
    }
    type AbstractIntCollection_ = AbstractIntCollection;
    class Products$P1 <F, T1> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function_<T1, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function<T1, R_>>): Internal.App<F, R_>;
        and<T2_, T3_, T4_, T5_, T6_, T7_>(arg0: Internal.Products$P6<F, T2_, T3_, T4_, T5_, T6_, T7_>): Internal.Products$P7<F, T1, T2_, T3_, T4_, T5_, T6_, T7_>;
        and<T2_, T3_, T4_, T5_, T6_, T7_, T8_>(arg0: Internal.Products$P7<F, T2_, T3_, T4_, T5_, T6_, T7_, T8_>): Internal.Products$P8<F, T1, T2_, T3_, T4_, T5_, T6_, T7_, T8_>;
        and<T2_, T3_, T4_, T5_>(arg0: Internal.Products$P4<F, T2_, T3_, T4_, T5_>): Internal.Products$P5<F, T1, T2_, T3_, T4_, T5_>;
        and<T2_, T3_>(arg0: Internal.Products$P2<F, T2_, T3_>): Internal.Products$P3<F, T1, T2_, T3_>;
        and<T2_, T3_, T4_>(arg0: Internal.Products$P3<F, T2_, T3_, T4_>): Internal.Products$P4<F, T1, T2_, T3_, T4_>;
        and<T2_>(arg0: Internal.App<F, T2_>): Internal.Products$P2<F, T1, T2_>;
        and<T2_, T3_, T4_, T5_, T6_>(arg0: Internal.Products$P5<F, T2_, T3_, T4_, T5_, T6_>): Internal.Products$P6<F, T1, T2_, T3_, T4_, T5_, T6_>;
        t1(): Internal.App<F, T1>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>);
    }
    type Products$P1_<F, T1> = Products$P1<F, T1>;
    abstract class RenderState extends Document.Object implements Internal.RenderTypeAccess, Internal.AccessorRenderState {
        static getViewOffsetZLayer_$md$e571c7$0(): Internal.RenderState$LayerState;
        static getTranslucentTransparency_$md$e571c7$1(): Internal.RenderState$TransparencyState;
        getName(): string;
        static getItemEntityTarget_$md$e571c7$3(): Internal.RenderState$TargetState;
        func_228547_a_(): void;
        func_228549_b_(): void;
        static getLightningTransparency_$md$e571c7$2(): Internal.RenderState$TransparencyState;
        static readonly field_228530_v_: Internal.RenderState$OverlayState;
        static readonly field_239235_M_: Internal.RenderState$LayerState;
        static readonly field_228533_y_: Internal.RenderState$DiffuseLightingState;
        static readonly field_228531_w_: Internal.RenderState$OverlayState;
        static readonly field_228534_z_: Internal.RenderState$CullState;
        static readonly field_228532_x_: Internal.RenderState$DiffuseLightingState;
        static readonly field_228515_g_: Internal.RenderState$TransparencyState;
        static readonly field_228514_f_: Internal.RenderState$TransparencyState;
        static readonly field_228495_E_: Internal.RenderState$WriteMaskState;
        static readonly field_239237_T_: Internal.RenderState$TargetState;
        static readonly field_239238_U_: Internal.RenderState$TargetState;
        static readonly field_239239_V_: Internal.RenderState$TargetState;
        static readonly field_228510_b_: Internal.RenderState$TransparencyState;
        static readonly field_228494_D_: Internal.RenderState$DepthTestState;
        static readonly field_228497_G_: Internal.RenderState$WriteMaskState;
        static readonly field_228496_F_: Internal.RenderState$WriteMaskState;
        static readonly field_228511_c_: Internal.RenderState$TransparencyState;
        static readonly field_228512_d_: Internal.RenderState$TransparencyState;
        static readonly field_228513_e_: Internal.RenderState$TransparencyState;
        static readonly field_228518_j_: Internal.RenderState$AlphaState;
        static readonly field_228499_I_: Internal.RenderState$LayerState;
        static readonly field_228519_k_: Internal.RenderState$ShadeModelState;
        static readonly field_228498_H_: Internal.RenderState$LayerState;
        static readonly field_228517_i_: Internal.RenderState$AlphaState;
        static readonly field_239236_S_: Internal.RenderState$TargetState;
        static readonly field_228516_h_: Internal.RenderState$AlphaState;
        static readonly field_228529_u_: Internal.RenderState$LightmapState;
        readonly field_228508_R_: Internal.Runnable;
        static readonly field_228506_P_: Internal.RenderState$LineState;
        field_228507_Q_: Internal.Runnable;
        static readonly field_228492_B_: Internal.RenderState$DepthTestState;
        static readonly field_228505_O_: Internal.RenderState$TargetState;
        static readonly field_228493_C_: Internal.RenderState$DepthTestState;
        static readonly field_228504_N_: Internal.RenderState$TargetState;
        static readonly field_228503_M_: Internal.RenderState$FogState;
        static readonly field_228491_A_: Internal.RenderState$CullState;
        static readonly field_228502_L_: Internal.RenderState$FogState;
        static readonly field_228501_K_: Internal.RenderState$FogState;
        static readonly field_228521_m_: Internal.RenderState$TextureState;
        static readonly field_228520_l_: Internal.RenderState$ShadeModelState;
        static readonly field_228523_o_: Internal.RenderState$TextureState;
        static readonly field_228522_n_: Internal.RenderState$TextureState;
        static readonly field_228524_p_: Internal.RenderState$TexturingState;
        static readonly field_241712_U_: Internal.RenderState$TargetState;
        readonly field_228509_a_: string;
        static readonly field_228525_q_: Internal.RenderState$TexturingState;
        static readonly field_228526_r_: Internal.RenderState$TexturingState;
        static readonly field_228527_s_: Internal.RenderState$TexturingState;
        static readonly field_228528_t_: Internal.RenderState$LightmapState;
        get itemEntityTarget_$md$e571c7$3(): Internal.RenderState$TargetState;
        get name(): string;
        get viewOffsetZLayer_$md$e571c7$0(): Internal.RenderState$LayerState;
        get translucentTransparency_$md$e571c7$1(): Internal.RenderState$TransparencyState;
        get lightningTransparency_$md$e571c7$2(): Internal.RenderState$TransparencyState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Runnable, arg2: Internal.Runnable);
    }
    type RenderState_ = RenderState;
    class MerchantOffer extends Document.Object implements Internal.MerchantOfferAccess {
        setMaxUses(arg0: number): void;
        func_222217_o(): boolean;
        func_222216_p(): void;
        func_222208_r(): Internal.CompoundNBT;
        func_226654_r_(): boolean;
        func_222215_b(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_222202_c(): Internal.ItemStack;
        func_225482_k(): number;
        func_222204_a(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_222200_d(): Internal.ItemStack;
        func_222205_b(): Internal.ItemStack;
        func_222222_e(): void;
        func_222207_a(arg0: number): void;
        func_222218_a(): Internal.ItemStack;
        func_222203_h(): void;
        func_222209_b(arg0: number): void;
        func_222220_k(): void;
        func_222213_g(): number;
        func_222206_f(): Internal.ItemStack;
        func_222214_i(): number;
        func_222211_m(): number;
        func_222210_n(): number;
        func_222212_l(): number;
        func_222219_j(): void;
        func_222221_q(): boolean;
        field_222226_d: number;
        field_222225_c: Internal.ItemStack;
        field_222224_b: Internal.ItemStack;
        field_222223_a: Internal.ItemStack;
        field_222230_h: number;
        field_222231_i: number;
        field_222227_e: number;
        field_222232_j: number;
        set maxUses(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number);
        constructor(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number, arg6: number);
        constructor(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number);
        constructor(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: number, arg3: number, arg4: number);
        constructor(arg0: Internal.CompoundNBT);
    }
    type MerchantOffer_ = MerchantOffer;
    class ClientWrapper extends Document.Object {
        getPlayer(): Internal.ClientPlayerJS;
        getWorld(): Internal.ClientWorldJS;
        setCurrentGui(gui: Internal.Screen): void;
        isKeyDown(key: number): boolean;
        getCurrentWorldName(): string;
        setTitle(t: string): void;
        getMinecraft(): Internal.Minecraft;
        getCurrentGui(): Internal.Screen;
        get minecraft(): Internal.Minecraft;
        get world(): Internal.ClientWorldJS;
        get currentGui(): Internal.Screen;
        get player(): Internal.ClientPlayerJS;
        get currentWorldName(): string;
        set currentGui(gui: Internal.Screen);
        set title(t: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ClientWrapper_ = ClientWrapper;
    interface ItemEntityAccess {
        getAgeNonsided(): number;
        setAge(arg0: number): void;
    }
    type ItemEntityAccess_ = ItemEntityAccess;
    class FOVUpdateEvent extends net.minecraftforge.eventbus.api.Event {
        getNewfov(): number;
        setNewfov(arg0: number): void;
        getEntity(): Internal.PlayerEntity;
        getFov(): number;
        get newfov(): number;
        get fov(): number;
        get entity(): Internal.PlayerEntity;
        set newfov(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity, arg1: number);
    }
    type FOVUpdateEvent_ = FOVUpdateEvent;
    class DarkOakTrunkPlacer extends Internal.AbstractTrunkPlacer {
        static readonly field_236882_a_: Internal.Codec<Internal.DarkOakTrunkPlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type DarkOakTrunkPlacer_ = DarkOakTrunkPlacer;
    interface IBorderListener {
        func_177696_b(arg0: Internal.WorldBorder, arg1: number): void;
        func_177695_c(arg0: Internal.WorldBorder, arg1: number): void;
        func_177693_a(arg0: Internal.WorldBorder, arg1: number, arg2: number): void;
        func_177694_a(arg0: Internal.WorldBorder, arg1: number): void;
        func_177690_b(arg0: Internal.WorldBorder, arg1: number): void;
        func_177691_a(arg0: Internal.WorldBorder, arg1: number): void;
        func_177692_a(arg0: Internal.WorldBorder, arg1: number, arg2: number, arg3: number): void;
    }
    type IBorderListener_ = IBorderListener;
    abstract class PrintJob extends Document.Object {
        end(): void;
        finalize(): void;
        getGraphics(): Internal.Graphics;
        getPageDimension(): Internal.Dimension;
        getPageResolution(): number;
        lastPageFirst(): boolean;
        get pageDimension(): Internal.Dimension;
        get graphics(): Internal.Graphics;
        get pageResolution(): number;
    }
    type PrintJob_ = PrintJob;
    interface ITransmissionReceiver extends Internal.IPrismTransmissionNode {
        notifyUnlink(arg0: Internal.World, arg1: BlockPos): boolean;
        queryNext(arg0: Internal.WorldNetworkHandler): Internal.List<Internal.NodeConnection<Internal.IPrismTransmissionNode>>;
        onStarlightReceive(arg0: Internal.World, arg1: Internal.IWeakConstellation, arg2: number): void;
        notifyLink(arg0: Internal.World, arg1: BlockPos): void;
        (arg0: Internal.World, arg1: Internal.IWeakConstellation, arg2: number): void;
    }
    type ITransmissionReceiver_ = ((arg0: Internal.World, arg1: Internal.IWeakConstellation, arg2: number)=>void) | ITransmissionReceiver;
    interface IStarlightReceiver <T> extends Internal.IStarlightTransmission<T> {
        provideTransmissionNode(arg0: BlockPos): T;
        provideTransmissionNode(arg0: BlockPos): Internal.IPrismTransmissionNode;
        provideEndpoint(arg0: BlockPos): T;
        (arg0: BlockPos): T;
    }
    type IStarlightReceiver_<T> = ((arg0: BlockPos)=>T) | IStarlightReceiver<T>;
    class FireworksJS$Explosion extends Document.Object {
        trail: boolean;
        readonly fadeColors: Internal.IntOpenHashSet;
        shape: Internal.FireworksJS$Shape;
        flicker: boolean;
        readonly colors: Internal.IntOpenHashSet;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FireworksJS$Explosion_ = FireworksJS$Explosion;
    class MachineStatus extends Internal.Enum<Internal.MachineStatus> implements Internal.IStringSerializable {
        getTranslatedName(): Internal.TranslationTextComponent;
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.MachineStatus;
        static values(): Internal.MachineStatus[];
        static getValueOrNull(arg0: string): Internal.MachineStatus;
        static value(arg0: string): Internal.MachineStatus;
        static readonly PAUSED: Internal.MachineStatus;
        static readonly ERRORED: Internal.MachineStatus;
        static readonly RUNNING: Internal.MachineStatus;
        static readonly IDLE: Internal.MachineStatus;
        get translatedName(): Internal.TranslationTextComponent;
    }
    type MachineStatus_ = "idle" | "running" | "errored" | "paused" | MachineStatus;
    interface BiomeProviderInvoker {
        repurposedstructures_callCodec(): Internal.Codec<Internal.BiomeProvider>;
        (): Internal.Codec<Internal.BiomeProvider>;
    }
    type BiomeProviderInvoker_ = (()=>Internal.Codec<Internal.BiomeProvider>) | BiomeProviderInvoker;
    interface IModelData {
        setData<T>(arg0: Internal.ModelProperty<T>, arg1: T): T;
        hasProperty(arg0: Internal.ModelProperty<any>): boolean;
        getData<T>(arg0: Internal.ModelProperty<T>): T;
    }
    type IModelData_ = IModelData;
    interface IContainerProvider {
        createMenu(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity): Internal.Container;
        (arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity): Internal.Container;
    }
    type IContainerProvider_ = ((arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity)=>Internal.Container) | IContainerProvider;
    interface Object2ObjectMap$Entry <K, V> extends Internal.Map$Entry<K, V> {
    }
    type Object2ObjectMap$Entry_<K, V> = Object2ObjectMap$Entry<K, V>;
    interface IPlantable {
        getPlantType(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.PlantType;
        getPlant(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.BlockState;
        (arg0: Internal.IBlockReader, arg1: BlockPos): Internal.BlockState;
    }
    type IPlantable_ = ((arg0: Internal.IBlockReader, arg1: BlockPos)=>Internal.BlockState) | IPlantable;
    class FrameType extends Internal.Enum<Internal.FrameType> {
        func_242265_d(): Internal.ITextComponent;
        static func_192308_a(arg0: string): Internal.FrameType;
        static valueOf(arg0: string): Internal.FrameType;
        func_192307_a(): string;
        static values(): Internal.FrameType[];
        func_192309_b(): number;
        func_193229_c(): Internal.TextFormatting;
        static readonly CHALLENGE: Internal.FrameType;
        static readonly TASK: Internal.FrameType;
        static readonly GOAL: Internal.FrameType;
    }
    type FrameType_ = "task" | "challenge" | "goal" | FrameType;
    interface AccessorTileEntity {
        setType(arg0: Internal.TileEntityType_<any>): void;
        (arg0: Internal.TileEntityType<any>): void;
    }
    type AccessorTileEntity_ = ((arg0: Internal.TileEntityType<any>)=>void) | AccessorTileEntity;
    class MobSpawnInfo extends Document.Object {
        getEntityTypes(): Internal.Set<Internal.EntityType<any>>;
        func_242562_b(): boolean;
        func_242559_a(arg0: Internal.EntityClassification_): Internal.List<Internal.MobSpawnInfo$Spawners>;
        getSpawnerTypes(): Internal.Set<Internal.EntityClassification>;
        func_242557_a(): number;
        func_242558_a(arg0: Internal.EntityType_<any>): Internal.MobSpawnInfo$SpawnCosts;
        static readonly field_242550_a: Internal.Logger;
        field_242555_f: Internal.Map<Internal.EntityType<any>, Internal.MobSpawnInfo$SpawnCosts>;
        field_242554_e: Internal.Map<Internal.EntityClassification, Internal.List<Internal.MobSpawnInfo$Spawners>>;
        static readonly field_242552_c: Internal.MapCodec<Internal.MobSpawnInfo>;
        static readonly field_242551_b: Internal.MobSpawnInfo;
        get spawnerTypes(): Internal.Set<Internal.EntityClassification>;
        get entityTypes(): Internal.Set<Internal.EntityType<any>>;
    }
    type MobSpawnInfo_ = MobSpawnInfo;
    class CallbackInfoReturnable <R> extends Internal.CallbackInfo {
        setReturnValue(arg0: R): void;
        getReturnValueB(): number;
        getReturnValue(): R;
        getReturnValueI(): number;
        getReturnValueZ(): boolean;
        getReturnValueJ(): number;
        getReturnValueS(): number;
        getReturnValueC(): string;
        getReturnValueD(): number;
        getReturnValueF(): number;
        get returnValueS(): number;
        get returnValueC(): string;
        get returnValueD(): number;
        get returnValueB(): number;
        get returnValue(): R;
        get returnValueF(): number;
        get returnValueI(): number;
        get returnValueZ(): boolean;
        get returnValueJ(): number;
        set returnValue(arg0: R);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: boolean, arg2: number);
        constructor(arg0: string, arg1: boolean, arg2: number);
        constructor(arg0: string, arg1: boolean, arg2: number);
        constructor(arg0: string, arg1: boolean, arg2: number);
        constructor(arg0: string, arg1: boolean, arg2: boolean);
        constructor(arg0: string, arg1: boolean);
        constructor(arg0: string, arg1: boolean, arg2: R);
        constructor(arg0: string, arg1: boolean, arg2: number);
        constructor(arg0: string, arg1: boolean, arg2: string);
        constructor(arg0: string, arg1: boolean, arg2: number);
    }
    type CallbackInfoReturnable_<R> = CallbackInfoReturnable<R>;
    abstract class BossInfo extends Document.Object {
        func_186747_j(): boolean;
        func_186748_k(): boolean;
        func_186741_a(arg0: boolean): Internal.BossInfo;
        func_186742_b(arg0: boolean): Internal.BossInfo;
        func_186746_a(arg0: Internal.BossInfo$Overlay_): void;
        func_186735_a(arg0: number): void;
        func_186745_a(arg0: Internal.BossInfo$Color_): void;
        func_186743_c(arg0: boolean): Internal.BossInfo;
        func_186744_e(): Internal.ITextComponent;
        func_186740_h(): Internal.BossInfo$Overlay;
        func_186739_a(arg0: Internal.ITextComponent_): void;
        func_186737_d(): Internal.UUID;
        func_186738_f(): number;
        func_186736_g(): Internal.BossInfo$Color;
        func_186734_i(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.UUID, arg1: Internal.ITextComponent, arg2: Internal.BossInfo$Color, arg3: Internal.BossInfo$Overlay);
    }
    type BossInfo_ = BossInfo;
    class BasaltDeltasFeature extends Document.Object implements Internal.IFeatureConfig {
        func_242808_e(): Internal.FeatureSpread;
        func_242804_b(): Internal.BlockState;
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        func_242807_d(): Internal.FeatureSpread;
        func_242806_c(): Internal.BlockState;
        static readonly field_236495_a_: Internal.Codec<Internal.BasaltDeltasFeature>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.FeatureSpread, arg3: Internal.FeatureSpread);
    }
    type BasaltDeltasFeature_ = BasaltDeltasFeature;
    class ChannelInboundHandlerAdapter extends Internal.ChannelHandlerAdapter implements Internal.ChannelInboundHandler {
        channelInactive(arg0: Internal.ChannelHandlerContext): void;
        channelUnregistered(arg0: Internal.ChannelHandlerContext): void;
        channelReadComplete(arg0: Internal.ChannelHandlerContext): void;
        channelActive(arg0: Internal.ChannelHandlerContext): void;
        userEventTriggered(arg0: Internal.ChannelHandlerContext, arg1: any): void;
        channelRegistered(arg0: Internal.ChannelHandlerContext): void;
        channelWritabilityChanged(arg0: Internal.ChannelHandlerContext): void;
        channelRead(arg0: Internal.ChannelHandlerContext, arg1: any): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ChannelInboundHandlerAdapter_ = ChannelInboundHandlerAdapter;
    interface DoubleIterator extends Internal.PrimitiveIterator$OfDouble {
        next(): any;
        next(): number;
        skip(arg0: number): number;
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
        nextDouble(): number;
        (): number;
    }
    type DoubleIterator_ = (()=>number) | DoubleIterator;
    /**
    */
    abstract class BlockStatePredicate extends Document.Object {
        getBlockStates(): Internal.Collection<Internal.BlockState>;
        static of(blocks: any): Internal.BlockStatePredicate;
        getBlocks(): Internal.Collection<Internal.Block>;
        check(arg0: Internal.BlockState): boolean;
        static parse(s: string): Internal.BlockStatePredicate;
        getBlockIds(): Internal.Set<ResourceLocation>;
        static readonly AIR_ID: ResourceLocation;
        get blocks(): Internal.Collection<Internal.Block>;
        get blockStates(): Internal.Collection<Internal.BlockState>;
        get blockIds(): Internal.Set<ResourceLocation>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BlockStatePredicate_ = Internal.BlockStatePredicate_[] | {or?: Internal.BlockStatePredicate_, not?: Internal.BlockStatePredicate_} | net.minecraft.world.level.block.Block | net.minecraft.world.level.block.state.BlockState | `#${string}` | RegExp | BlockStatePredicate;
    abstract class JsonReloadListener extends Internal.ReloadListener<Internal.Map<ResourceLocation, Internal.JsonElement>> {
        func_225594_i_(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Gson, arg1: string);
    }
    type JsonReloadListener_ = JsonReloadListener;
    class SDisplayObjectivePacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149371_c(): number;
        func_149370_d(): string;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.ScoreObjective);
    }
    type SDisplayObjectivePacket_ = SDisplayObjectivePacket;
    interface IToolStatProvider {
        getDefaultData(): Internal.ToolDefinitionData;
        isMultipart(): boolean;
        buildStats(arg0: Internal.ToolDefinition, arg1: Internal.List<Internal.IMaterial>): Internal.StatsNBT;
        validate(arg0: Internal.ToolDefinitionData): void;
    }
    type IToolStatProvider_ = IToolStatProvider;
    interface JsonSerializable {
        toJson(): Internal.JsonElement;
        (): Internal.JsonElement;
    }
    type JsonSerializable_ = (()=>Internal.JsonElement) | JsonSerializable;
    class FireworkStarFadeRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type FireworkStarFadeRecipe_ = FireworkStarFadeRecipe;
    class BookCloningRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<any>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type BookCloningRecipe_ = BookCloningRecipe;
    abstract class Placement <DC> extends Internal.ForgeRegistryEntry<Internal.Placement<any>> {
        func_236962_a_(): Internal.Codec<Internal.ConfiguredPlacement<DC>>;
        func_241857_a(arg0: Internal.WorldDecoratingHelper, arg1: Internal.Random, arg2: DC, arg3: BlockPos): Internal.Stream<BlockPos>;
        setRegistryName(arg0: ResourceLocation_): any;
        func_227446_a_(arg0: DC): Internal.ConfiguredPlacement<DC>;
        static readonly field_242912_w: Internal.Placement<Internal.FeatureSpreadConfig>;
        static readonly field_242896_B: Internal.Placement<Internal.DecoratedPlacementConfig>;
        static readonly field_242897_C: Internal.Placement<Internal.FeatureSpreadConfig>;
        static readonly field_215011_J: Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_215022_h: Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_242905_i: Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_242903_g: Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_242904_h: Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_215013_L: Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_242901_e: Internal.Placement<Internal.TopSolidWithNoiseConfig>;
        static readonly field_242902_f: Internal.Placement<Internal.AtSurfaceWithExtraConfig>;
        static readonly field_242900_d: Internal.Placement<Internal.NoiseDependant>;
        static readonly field_215039_y: Internal.Placement<Internal.CaveEdgeConfig>;
        static readonly field_215036_v: Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_236960_A_: Internal.Placement<Internal.FeatureSpreadConfig>;
        static readonly field_242909_n: Internal.Placement<Internal.TopSolidRangeConfig>;
        static readonly field_242908_m: Internal.Placement<Internal.TopSolidRangeConfig>;
        static readonly field_215009_H: Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_242898_b: Internal.Placement<Internal.ChanceConfig>;
        static readonly field_242907_l: Internal.Placement<Internal.TopSolidRangeConfig>;
        static readonly field_242906_k: Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_215006_E: Internal.Placement<Internal.ChanceConfig>;
        static readonly field_242911_p: Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_215005_D: Internal.Placement<Internal.ChanceConfig>;
        static readonly field_242910_o: Internal.Placement<Internal.DepthAverageConfig>;
        static readonly field_215008_G: Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_242899_c: Internal.Placement<Internal.FeatureSpreadConfig>;
        static readonly field_215004_C: Internal.Placement<Internal.NoPlacementConfig>;
        static readonly field_215003_B: Internal.Placement<Internal.NoPlacementConfig>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<DC>);
    }
    type Placement_<DC> = Registry.minecraft.worldgen$decorator | Placement<DC>;
    interface INestedGuiEventHandler extends Internal.IGuiEventListener {
        func_231039_at__(): Internal.List<Internal.IGuiEventListener>;
        func_231037_b__(arg0: boolean): void;
        func_231035_a_(arg0: Internal.IGuiEventListener): void;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        func_231041_ay__(): boolean;
        func_231048_c_(arg0: number, arg1: number, arg2: number): boolean;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_231046_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231044_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231049_c__(arg0: boolean): boolean;
        func_241217_q_(): Internal.IGuiEventListener;
    }
    type INestedGuiEventHandler_ = INestedGuiEventHandler;
    class ItemRightClickEmptyEventJS extends Internal.PlayerEventJS {
        getHand(): Hand;
        getItem(): Internal.ItemStackJS;
        get item(): Internal.ItemStackJS;
        get hand(): Hand;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.PlayerEntity, hand: Hand);
    }
    type ItemRightClickEmptyEventJS_ = ItemRightClickEmptyEventJS;
    class GuiScreenEvent$MouseDragEvent$Pre extends Internal.GuiScreenEvent$MouseDragEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number);
    }
    type GuiScreenEvent$MouseDragEvent$Pre_ = GuiScreenEvent$MouseDragEvent$Pre;
    abstract class TrackedElement <T> extends Internal.PonderSceneElement {
        ifPresent(arg0: Internal.Consumer_<T>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: T);
    }
    type TrackedElement_<T> = TrackedElement<T>;
    class CUseEntityPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_149565_c(): Internal.CUseEntityPacket$Action;
        func_149564_a(arg0: Internal.World): Internal.Entity;
        func_211402_a(): boolean;
        func_186994_b(): Hand;
        func_241792_e_(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179712_b(): Vec3;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Entity, arg1: Hand, arg2: Vec3, arg3: boolean);
        constructor(arg0: Internal.Entity, arg1: Hand, arg2: boolean);
        constructor(arg0: Internal.Entity, arg1: boolean);
        constructor();
    }
    type CUseEntityPacket_ = CUseEntityPacket;
    abstract class AbstractSkeletonEntity extends Internal.MonsterEntity implements Internal.IRangedAttackMob {
        shouldRiderSit(): boolean;
        func_82196_d(arg0: Internal.LivingEntity, arg1: number): void;
        static func_234275_m_(): Internal.AttributeModifierMap$MutableAttribute;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_85036_m(): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type AbstractSkeletonEntity_ = AbstractSkeletonEntity;
    class ComponentOrientation extends Document.Object implements Internal.Serializable {
        isLeftToRight(): boolean;
        static getOrientation(arg0: Internal.Locale): Internal.ComponentOrientation;
        static getOrientation(arg0: Internal.ResourceBundle): Internal.ComponentOrientation;
        isHorizontal(): boolean;
        static readonly RIGHT_TO_LEFT: Internal.ComponentOrientation;
        static readonly UNKNOWN: Internal.ComponentOrientation;
        static readonly LEFT_TO_RIGHT: Internal.ComponentOrientation;
        get leftToRight(): boolean;
        get horizontal(): boolean;
    }
    type ComponentOrientation_ = ComponentOrientation;
    class AddJEIEventJS <T> extends Internal.EventJS {
        add(o: any): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(r: Internal.IJeiRuntime, t: Internal.IIngredientType<T>, f: Internal.Function<any, T>, i: Internal.Predicate<T>);
    }
    type AddJEIEventJS_<T> = AddJEIEventJS<T>;
    class SmokingRecipe extends Internal.AbstractCookingRecipe {
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<Internal.ItemStack>;
        func_192399_d(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: string, arg2: Internal.Ingredient, arg3: Internal.ItemStack, arg4: number, arg5: number);
    }
    type SmokingRecipe_ = SmokingRecipe;
    interface ChronoLocalDate extends Internal.Temporal, Internal.TemporalAdjuster, Internal.Comparable<Internal.ChronoLocalDate> {
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDate;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDate;
        toEpochDay(): number;
        isEqual(arg0: Internal.ChronoLocalDate): boolean;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        format(arg0: Internal.DateTimeFormatter): string;
        isLeapYear(): boolean;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isSupported(arg0: Internal.TemporalField): boolean;
        compareTo(arg0: Internal.ChronoLocalDate): number;
        compareTo(arg0: any): number;
        isBefore(arg0: Internal.ChronoLocalDate): boolean;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDate;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDate;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        atTime(arg0: Internal.LocalTime): Internal.ChronoLocalDateTime<any>;
        lengthOfYear(): number;
        with(arg0: Internal.TemporalAdjuster_): Internal.Temporal;
        with(arg0: Internal.TemporalAdjuster_): Internal.ChronoLocalDate;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ChronoLocalDate;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        lengthOfMonth(): number;
        getEra(): Internal.Era;
        hashCode(): number;
        equals(arg0: any): boolean;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        until(arg0: Internal.ChronoLocalDate): Internal.ChronoPeriod;
        toString(): string;
        getChronology(): Internal.Chronology;
        isAfter(arg0: Internal.ChronoLocalDate): boolean;
    }
    type ChronoLocalDate_ = ChronoLocalDate;
    class TextAttribute extends Internal.AttributedCharacterIterator$Attribute {
        static readonly WEIGHT_BOLD: 2.0;
        static readonly UNDERLINE_LOW_GRAY: 4;
        static readonly NUMERIC_SHAPING: Internal.TextAttribute;
        static readonly WIDTH_SEMI_CONDENSED: 0.875;
        static readonly WIDTH_REGULAR: 1.0;
        static readonly SWAP_COLORS: Internal.TextAttribute;
        static readonly WIDTH_SEMI_EXTENDED: 1.25;
        static readonly RUN_DIRECTION: Internal.TextAttribute;
        static readonly WIDTH_EXTENDED: 1.5;
        static readonly CHAR_REPLACEMENT: Internal.TextAttribute;
        static readonly BIDI_EMBEDDING: Internal.TextAttribute;
        static readonly UNDERLINE_LOW_DASHED: 5;
        static readonly INPUT_METHOD_HIGHLIGHT: Internal.TextAttribute;
        static readonly STRIKETHROUGH_ON: true;
        static readonly TRANSFORM: Internal.TextAttribute;
        static readonly WEIGHT: Internal.TextAttribute;
        static readonly SWAP_COLORS_ON: true;
        static readonly JUSTIFICATION_FULL: 1.0;
        static readonly WEIGHT_HEAVY: 2.25;
        static readonly SIZE: Internal.TextAttribute;
        static readonly POSTURE_REGULAR: 0.0;
        static readonly KERNING_ON: 1;
        static readonly BACKGROUND: Internal.TextAttribute;
        static readonly RUN_DIRECTION_LTR: false;
        static readonly RUN_DIRECTION_RTL: true;
        static readonly WIDTH_CONDENSED: 0.75;
        static readonly LIGATURES_ON: 1;
        static readonly SUPERSCRIPT: Internal.TextAttribute;
        static readonly JUSTIFICATION: Internal.TextAttribute;
        static readonly KERNING: Internal.TextAttribute;
        static readonly WEIGHT_SEMIBOLD: 1.25;
        static readonly LIGATURES: Internal.TextAttribute;
        static readonly WEIGHT_DEMILIGHT: 0.875;
        static readonly WEIGHT_ULTRABOLD: 2.75;
        static readonly JUSTIFICATION_NONE: 0.0;
        static readonly UNDERLINE_LOW_ONE_PIXEL: 1;
        static readonly UNDERLINE_ON: 0;
        static readonly POSTURE_OBLIQUE: 0.2;
        static readonly WEIGHT_REGULAR: 1.0;
        static readonly WIDTH: Internal.TextAttribute;
        static readonly SUPERSCRIPT_SUPER: 1;
        static readonly UNDERLINE: Internal.TextAttribute;
        static readonly FAMILY: Internal.TextAttribute;
        static readonly WEIGHT_LIGHT: 0.75;
        static readonly POSTURE: Internal.TextAttribute;
        static readonly TRACKING_LOOSE: 0.04;
        static readonly WEIGHT_EXTRA_LIGHT: 0.5;
        static readonly TRACKING: Internal.TextAttribute;
        static readonly INPUT_METHOD_UNDERLINE: Internal.TextAttribute;
        static readonly TRACKING_TIGHT: -0.04;
        static readonly UNDERLINE_LOW_DOTTED: 3;
        static readonly SUPERSCRIPT_SUB: -1;
        static readonly FONT: Internal.TextAttribute;
        static readonly FOREGROUND: Internal.TextAttribute;
        static readonly STRIKETHROUGH: Internal.TextAttribute;
        static readonly WEIGHT_DEMIBOLD: 1.75;
        static readonly WEIGHT_EXTRABOLD: 2.5;
        static readonly WEIGHT_MEDIUM: 1.5;
        static readonly UNDERLINE_LOW_TWO_PIXEL: 2;
    }
    type TextAttribute_ = TextAttribute;
    interface IDayTimeReader extends Internal.IWorldReader {
        func_242415_f(arg0: number): number;
        func_242413_ae(): number;
        func_242414_af(): number;
        func_241851_ab(): number;
        (): number;
    }
    type IDayTimeReader_ = (()=>number) | IDayTimeReader;
    class ImmutableMultimap$Builder <K, V> extends Document.Object {
        orderKeysBy(arg0: Internal.Comparator<K>): Internal.ImmutableMultimap$Builder<K, V>;
        build(): Internal.ImmutableMultimap<K, V>;
        orderValuesBy(arg0: Internal.Comparator<V>): Internal.ImmutableMultimap$Builder<K, V>;
        putAll(arg0: Internal.Multimap<K, V>): Internal.ImmutableMultimap$Builder<K, V>;
        putAll(arg0: K, ...arg1: V[]): Internal.ImmutableMultimap$Builder<K, V>;
        putAll(arg0: K, arg1: Internal.Iterable_<V>): Internal.ImmutableMultimap$Builder<K, V>;
        putAll(arg0: Internal.Iterable_<Internal.Map$Entry_<K, V>>): Internal.ImmutableMultimap$Builder<K, V>;
        put(arg0: Internal.Map$Entry<K, V>): Internal.ImmutableMultimap$Builder<K, V>;
        put(arg0: K, arg1: V): Internal.ImmutableMultimap$Builder<K, V>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ImmutableMultimap$Builder_<K, V> = ImmutableMultimap$Builder<K, V>;
    interface MouseMotionListener extends Internal.EventListener {
        mouseDragged(arg0: Internal.MouseEvent): void;
        mouseMoved(arg0: Internal.MouseEvent): void;
    }
    type MouseMotionListener_ = MouseMotionListener;
    interface IItemTier {
        func_200927_e(): number;
        func_200929_c(): number;
        func_200924_f(): Internal.Ingredient;
        func_200928_b(): number;
        func_200925_d(): number;
        func_200926_a(): number;
    }
    type IItemTier_ = IItemTier;
    interface ValueLayout$OfByte extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfByte;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfByte;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout$OfByte;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfByte;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfByte_ = ValueLayout$OfByte;
    class RecipeTypeRegistryEventJS extends Internal.EventJS {
        registerShaped(id: ResourceLocation_): void;
        registerShapeless(id: ResourceLocation_): void;
        ignore(id: ResourceLocation_): void;
        register(id: ResourceLocation_, f: java_.util.function_.Supplier_<Internal.RecipeJS_>): void;
        register(type: Internal.RecipeTypeJS): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(m: Internal.Map<ResourceLocation, Internal.RecipeTypeJS>);
    }
    type RecipeTypeRegistryEventJS_ = RecipeTypeRegistryEventJS;
    interface DoubleIterable extends Internal.Iterable<number> {
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.DoubleIterator;
        forEach(arg0: Internal.DoubleConsumer_): void;
        forEach(arg0: Internal.Consumer_<number>): void;
        (): Internal.DoubleIterator;
    }
    type DoubleIterable_ = (()=>Internal.DoubleIterator) | DoubleIterable;
    interface K2 {
    }
    type K2_ = K2;
    class TNTMinecartEntity extends Internal.AbstractMinecartEntity {
        canBeRidden(): boolean;
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_94104_d(): number;
        func_94105_c(): void;
        shouldDoRailFunctions(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        isPoweredCart(): boolean;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        getComparatorLevel(): number;
        func_96096_ay(): boolean;
        getCurrentRailPosition(): BlockPos;
        asKJS(): any;
        getCartItem(): Internal.ItemStack;
        canRiderInteract(): boolean;
        getMinecart(): Internal.AbstractMinecartEntity;
        getSlopeAdjustment(): number;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getMaxCartSpeedOnRail(): number;
        get minecart(): Internal.AbstractMinecartEntity;
        get currentRailPosition(): BlockPos;
        get slopeAdjustment(): number;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get poweredCart(): boolean;
        get comparatorLevel(): number;
        get cartItem(): Internal.ItemStack;
        get maxCartSpeedOnRail(): number;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.TNTMinecartEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
    }
    type TNTMinecartEntity_ = TNTMinecartEntity;
    interface DoubleStream$DoubleMapMultiConsumer {
        accept(arg0: number, arg1: Internal.DoubleConsumer_): void;
        (arg0: number, arg1: Internal.DoubleConsumer): void;
    }
    type DoubleStream$DoubleMapMultiConsumer_ = ((arg0: number, arg1: Internal.DoubleConsumer)=>void) | DoubleStream$DoubleMapMultiConsumer;
    abstract class Executable extends Internal.AccessibleObject implements Internal.Member, Internal.GenericDeclaration {
        getName(): string;
        getParameterCount(): number;
        isVarArgs(): boolean;
        isSynthetic(): boolean;
        getAnnotatedParameterTypes(): Internal.AnnotatedType[];
        getParameterTypes(): Internal.Class<any>[];
        getGenericExceptionTypes(): Internal.Type[];
        getAnnotatedReceiverType(): Internal.AnnotatedType;
        getAnnotatedExceptionTypes(): Internal.AnnotatedType[];
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        getExceptionTypes(): Internal.Class<any>[];
        getDeclaringClass(): Internal.Class<any>;
        getGenericParameterTypes(): Internal.Type[];
        getAnnotationsByType<T_>(arg0: Internal.Class<T_>): T_[];
        getAnnotation<T_>(arg0: Internal.Class<T_>): T_;
        toGenericString(): string;
        getParameters(): any[];
        getTypeParameters(): any[];
        getModifiers(): number;
        getAnnotatedReturnType(): Internal.AnnotatedType;
        getParameterAnnotations(): Internal.Annotation[][];
        get annotatedReturnType(): Internal.AnnotatedType;
        get parameterTypes(): Internal.Class<any>[];
        get parameterCount(): number;
        get modifiers(): number;
        get typeParameters(): any[];
        get varArgs(): boolean;
        get declaringClass(): Internal.Class<any>;
        get synthetic(): boolean;
        get genericParameterTypes(): Internal.Type[];
        get exceptionTypes(): Internal.Class<any>[];
        get name(): string;
        get annotatedReceiverType(): Internal.AnnotatedType;
        get genericExceptionTypes(): Internal.Type[];
        get parameterAnnotations(): Internal.Annotation[][];
        get parameters(): any[];
        get annotatedExceptionTypes(): Internal.AnnotatedType[];
        get annotatedParameterTypes(): Internal.AnnotatedType[];
    }
    type Executable_ = Executable;
    class IPBanList extends Internal.UserList<string, Internal.IPBanEntry> {
        func_152708_a(arg0: Internal.SocketAddress): boolean;
        func_152709_b(arg0: Internal.SocketAddress): Internal.IPBanEntry;
        func_199044_a(arg0: string): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File);
    }
    type IPBanList_ = IPBanList;
    class ClientChunkProvider extends Internal.AbstractChunkProvider implements Internal.ChunkStatusListenerManager {
        func_217251_d(arg0: number, arg1: number): void;
        func_212849_a_(arg0: number, arg1: number, arg2: Internal.ChunkStatus_, arg3: boolean): Internal.Chunk;
        func_73234_b(arg0: number, arg1: number): void;
        setListener(listener: Internal.ChunkStatusListener): void;
        func_228313_a_(arg0: number, arg1: number, arg2: Internal.BiomeContainer, arg3: Internal.PacketBuffer, arg4: Internal.CompoundNBT_, arg5: number, arg6: boolean): Internal.Chunk;
        func_217252_g(): number;
        func_217207_a(arg0: Internal.BooleanSupplier_): void;
        func_217248_a(arg0: number): void;
        field_217255_c: Internal.WorldLightManager;
        field_217256_d: Internal.ClientChunkProvider$ChunkArray;
        set listener(listener: Internal.ChunkStatusListener);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ClientWorld, arg1: number);
    }
    type ClientChunkProvider_ = ClientChunkProvider;
    interface ChannelOutboundInvoker {
        disconnect(arg0: Internal.ChannelPromise): Internal.ChannelFuture;
        disconnect(): Internal.ChannelFuture;
        newProgressivePromise(): Internal.ChannelProgressivePromise;
        read(): Internal.ChannelOutboundInvoker;
        deregister(arg0: Internal.ChannelPromise): Internal.ChannelFuture;
        deregister(): Internal.ChannelFuture;
        newFailedFuture(arg0: Internal.Throwable): Internal.ChannelFuture;
        writeAndFlush(arg0: any, arg1: Internal.ChannelPromise): Internal.ChannelFuture;
        writeAndFlush(arg0: any): Internal.ChannelFuture;
        bind(arg0: Internal.SocketAddress): Internal.ChannelFuture;
        bind(arg0: Internal.SocketAddress, arg1: Internal.ChannelPromise): Internal.ChannelFuture;
        newSucceededFuture(): Internal.ChannelFuture;
        voidPromise(): Internal.ChannelPromise;
        flush(): Internal.ChannelOutboundInvoker;
        close(arg0: Internal.ChannelPromise): Internal.ChannelFuture;
        close(): Internal.ChannelFuture;
        write(arg0: any): Internal.ChannelFuture;
        write(arg0: any, arg1: Internal.ChannelPromise): Internal.ChannelFuture;
        connect(arg0: Internal.SocketAddress, arg1: Internal.SocketAddress, arg2: Internal.ChannelPromise): Internal.ChannelFuture;
        connect(arg0: Internal.SocketAddress, arg1: Internal.ChannelPromise): Internal.ChannelFuture;
        connect(arg0: Internal.SocketAddress): Internal.ChannelFuture;
        connect(arg0: Internal.SocketAddress, arg1: Internal.SocketAddress): Internal.ChannelFuture;
        newPromise(): Internal.ChannelPromise;
    }
    type ChannelOutboundInvoker_ = ChannelOutboundInvoker;
    class DataResult$Mu extends Document.Object implements Internal.K1 {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type DataResult$Mu_ = DataResult$Mu;
    class StringBuffer extends Internal.AbstractStringBuilder implements Internal.Appendable, Internal.Serializable, Internal.Comparable<Internal.StringBuffer>, Internal.CharSequence {
        deleteCharAt(arg0: number): Internal.StringBuffer;
        appendCodePoint(arg0: number): Internal.StringBuffer;
        repeat(arg0: Internal.CharSequence, arg1: number): Internal.StringBuffer;
        repeat(arg0: number, arg1: number): Internal.StringBuffer;
        isEmpty(): boolean;
        replace(arg0: number, arg1: number, arg2: string): Internal.StringBuffer;
        insert(arg0: number, arg1: number): Internal.StringBuffer;
        insert(arg0: number, arg1: number): Internal.StringBuffer;
        insert(arg0: number, arg1: string): Internal.StringBuffer;
        insert(arg0: number, arg1: boolean): Internal.StringBuffer;
        insert(arg0: number, arg1: number): Internal.StringBuffer;
        insert(arg0: number, arg1: number): Internal.StringBuffer;
        insert(arg0: number, arg1: any): Internal.StringBuffer;
        insert(arg0: number, arg1: string): Internal.StringBuffer;
        insert(arg0: number, arg1: string[], arg2: number, arg3: number): Internal.StringBuffer;
        insert(arg0: number, arg1: string[]): Internal.StringBuffer;
        insert(arg0: number, arg1: Internal.CharSequence): Internal.StringBuffer;
        insert(arg0: number, arg1: Internal.CharSequence, arg2: number, arg3: number): Internal.StringBuffer;
        compareTo(arg0: Internal.StringBuffer): number;
        compareTo(arg0: any): number;
        reverse(): Internal.StringBuffer;
        delete(arg0: number, arg1: number): Internal.StringBuffer;
        append(arg0: string[]): Internal.StringBuffer;
        append(arg0: number): Internal.StringBuffer;
        append(arg0: number): Internal.StringBuffer;
        append(arg0: number): Internal.StringBuffer;
        append(arg0: string[], arg1: number, arg2: number): Internal.StringBuffer;
        append(arg0: boolean): Internal.StringBuffer;
        append(arg0: string): Internal.StringBuffer;
        append(arg0: string): Internal.Appendable;
        append(arg0: number): Internal.StringBuffer;
        append(arg0: string): Internal.StringBuffer;
        append(arg0: Internal.StringBuffer): Internal.StringBuffer;
        append(arg0: Internal.CharSequence): Internal.Appendable;
        append(arg0: Internal.CharSequence): Internal.StringBuffer;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.Appendable;
        append(arg0: Internal.CharSequence, arg1: number, arg2: number): Internal.StringBuffer;
        append(arg0: any): Internal.StringBuffer;
        get empty(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CharSequence);
        constructor(arg0: string);
        constructor(arg0: number);
        constructor();
    }
    type StringBuffer_ = StringBuffer;
    class SPlayerDiggingPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_225375_b(): Internal.BlockState;
        func_225374_c(): BlockPos;
        func_225376_d(): boolean;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_225377_e(): Internal.CPlayerDiggingPacket$Action;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.CPlayerDiggingPacket$Action, arg3: boolean, arg4: string);
    }
    type SPlayerDiggingPacket_ = SPlayerDiggingPacket;
    interface CustomJavaObjectWrapper {
        wrapAsJavaObject(arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Class<any>): Internal.Scriptable;
        (arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Class<any>): Internal.Scriptable;
    }
    type CustomJavaObjectWrapper_ = ((arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Class<any>)=>Internal.Scriptable) | CustomJavaObjectWrapper;
    interface OpticFinder <FT> {
        findType<A, FR>(arg0: com.mojang.datafixers.types.Type<A>, arg1: com.mojang.datafixers.types.Type<FR>, arg2: boolean): Internal.Either<Internal.TypedOptic<A, any, FT, FR>, Internal.Type$FieldNotFoundException>;
        findType<A>(arg0: com.mojang.datafixers.types.Type<A>, arg1: boolean): Internal.Either<Internal.TypedOptic<A, any, FT, FT>, Internal.Type$FieldNotFoundException>;
        inField<GT>(arg0: string, arg1: com.mojang.datafixers.types.Type<GT>): Internal.OpticFinder<FT>;
        type(): com.mojang.datafixers.types.Type<FT>;
    }
    type OpticFinder_<FT> = OpticFinder<FT>;
    abstract class BlockStateProvider extends Document.Object {
        func_225574_a_(arg0: Internal.Random, arg1: BlockPos): Internal.BlockState;
        static readonly field_236796_a_: Internal.Codec<Internal.BlockStateProvider>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BlockStateProvider_ = BlockStateProvider;
    class PineFoliagePlacer extends Internal.FoliagePlacer {
        static readonly field_236784_a_: Internal.Codec<Internal.PineFoliagePlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FeatureSpread, arg1: Internal.FeatureSpread, arg2: Internal.FeatureSpread);
    }
    type PineFoliagePlacer_ = PineFoliagePlacer;
    class ChunkPos extends Document.Object {
        func_226661_a_(arg0: Internal.ChunkPos): number;
        func_206849_h(): BlockPos;
        static func_222243_a(arg0: Internal.ChunkPos, arg1: number): Internal.Stream<Internal.ChunkPos>;
        static func_222239_a(arg0: Internal.ChunkPos, arg1: Internal.ChunkPos): Internal.Stream<Internal.ChunkPos>;
        func_222242_i(): number;
        func_180334_c(): number;
        func_180333_d(): number;
        func_180332_e(): number;
        func_222240_j(): number;
        func_180330_f(): number;
        func_222241_h(): number;
        func_201841_a(): number;
        static func_212578_a(arg0: number): number;
        static func_77272_a(arg0: number, arg1: number): number;
        static func_212579_b(arg0: number): number;
        func_222238_k(): number;
        readonly field_77276_a: number;
        readonly field_77275_b: number;
        static readonly field_222244_a: 8053132401351752;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
        constructor(arg0: BlockPos);
        constructor(arg0: number, arg1: number);
    }
    type ChunkPos_ = ChunkPos;
    class VertexFormatElement$Type extends Internal.Enum<Internal.VertexFormatElement$Type> {
        func_177395_a(): number;
        func_177397_c(): number;
        static valueOf(arg0: string): Internal.VertexFormatElement$Type;
        func_177396_b(): string;
        static values(): Internal.VertexFormatElement$Type[];
        static readonly UBYTE: Internal.VertexFormatElement$Type;
        static readonly FLOAT: Internal.VertexFormatElement$Type;
        static readonly BYTE: Internal.VertexFormatElement$Type;
        static readonly USHORT: Internal.VertexFormatElement$Type;
        static readonly UINT: Internal.VertexFormatElement$Type;
        static readonly INT: Internal.VertexFormatElement$Type;
        static readonly SHORT: Internal.VertexFormatElement$Type;
    }
    type VertexFormatElement$Type_ = "float" | "ubyte" | "byte" | "ushort" | "short" | "uint" | "int" | VertexFormatElement$Type;
    class JEISubtypesEventJS extends Internal.EventJS {
        useNBTKey(items: Internal.IngredientJS_, key: string): void;
        useNBT(items: Internal.IngredientJS_): void;
        registerInterpreter(id: any, interpreter: Internal.JEISubtypesEventJS$Interpreter): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(r: any);
    }
    type JEISubtypesEventJS_ = JEISubtypesEventJS;
    interface IChatFilter {
        func_244434_b(): void;
        func_244433_a(arg0: Internal.List<string>): Internal.CompletableFuture<Internal.Optional<Internal.List<string>>>;
        func_244432_a(arg0: string): Internal.CompletableFuture<Internal.Optional<string>>;
        func_244800_a(): void;
    }
    type IChatFilter_ = IChatFilter;
    interface RenderedImage {
        getTileHeight(): number;
        getMinTileX(): number;
        getMinTileY(): number;
        getTile(arg0: number, arg1: number): Internal.Raster;
        getTileWidth(): number;
        getColorModel(): Internal.ColorModel;
        getProperty(arg0: string): any;
        getNumYTiles(): number;
        getSources(): Internal.Vector<Internal.RenderedImage>;
        getWidth(): number;
        getTileGridXOffset(): number;
        copyData(arg0: Internal.WritableRaster): Internal.WritableRaster;
        getTileGridYOffset(): number;
        getSampleModel(): Internal.SampleModel;
        getHeight(): number;
        getPropertyNames(): string[];
        getNumXTiles(): number;
        getMinX(): number;
        getData(arg0: Internal.Rectangle): Internal.Raster;
        getData(): Internal.Raster;
        getMinY(): number;
    }
    type RenderedImage_ = RenderedImage;
    class ZombieVillagerEntity extends Internal.ZombieEntity implements Internal.IVillagerDataHolder {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_184639_G(): Internal.SoundEvent;
        func_191991_a(arg0: Internal.UUID, arg1: number): void;
        func_213789_a(arg0: number): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213792_a(arg0: Internal.VillagerData): void;
        func_190731_di(): Internal.SoundEvent;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_213790_g(arg0: Internal.CompoundNBT_): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_82230_o(): boolean;
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        func_223727_a(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_213700_eh(): Internal.VillagerData;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        getClassification(arg0: boolean): Internal.EntityClassification;
        field_223728_bB: Internal.INBT;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ZombieVillagerEntity>, arg1: Internal.World);
    }
    type ZombieVillagerEntity_ = ZombieVillagerEntity;
    class PlayerEvent$HarvestCheck extends Internal.PlayerEvent {
        canHarvest(): boolean;
        setCanHarvest(arg0: boolean): void;
        getTargetBlock(): Internal.BlockState;
        get targetBlock(): Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.BlockState, arg2: boolean);
    }
    type PlayerEvent$HarvestCheck_ = PlayerEvent$HarvestCheck;
    class RequirementType <T> extends Internal.ForgeRegistryEntry<Internal.RequirementType<any>> {
        isWorldRequirement(): boolean;
        getName(): Internal.ITextComponent;
        setWorldRequirement(): Internal.RequirementType<T>;
        getCodec(): Internal.Codec<T>;
        setRegistryName(arg0: ResourceLocation_): any;
        get codec(): Internal.Codec<T>;
        get worldRequirement(): boolean;
        get name(): Internal.ITextComponent;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<T>);
    }
    type RequirementType_<T> = Registry.custommachinery.requirement_type | RequirementType<T>;
    class Vector3 extends Document.Object {
        stepAlongVector(arg0: number, arg1: Internal.Consumer_<Internal.Vector3_>): void;
        crossProduct(arg0: Internal.Vector3): Internal.Vector3;
        rotate(arg0: number, arg1: Internal.Vector3): Internal.Vector3;
        setY(arg0: number): Internal.Vector3;
        setY(arg0: number): Internal.Vector3;
        setY(arg0: number): Internal.Vector3;
        static atEntityCorner(arg0: Internal.Entity): Internal.Vector3;
        setX(arg0: number): Internal.Vector3;
        setX(arg0: number): Internal.Vector3;
        setX(arg0: number): Internal.Vector3;
        fNormalize(): Internal.Vector3;
        setZ(arg0: number): Internal.Vector3;
        setZ(arg0: number): Internal.Vector3;
        setZ(arg0: number): Internal.Vector3;
        static fastInvSqrt(arg0: number): number;
        zero(): Internal.Vector3;
        distanceSquared(arg0: Vec3): number;
        distanceSquared(arg0: Internal.Entity): number;
        distanceSquared(arg0: Internal.Vector3): number;
        distanceSquared(arg0: Vec3i): number;
        toBlockPos(): BlockPos;
        toChunkPos(): Internal.ChunkPos;
        getBlockZ(): number;
        static getMin(arg0: Internal.AxisAlignedBB): Internal.Vector3;
        getMidpoint(arg0: Internal.Vector3): Internal.Vector3;
        getBlockY(): number;
        getBlockX(): number;
        normalize(): Internal.Vector3;
        static directionFromYawPitch(arg0: number, arg1: number): Internal.Vector3;
        add(arg0: number, arg1: number, arg2: number): Internal.Vector3;
        add(arg0: Vec3i): Internal.Vector3;
        add(arg0: Vec3): Internal.Vector3;
        add(arg0: Internal.Vector3): Internal.Vector3;
        add(arg0: number, arg1: number, arg2: number): Internal.Vector3;
        static getMax(arg0: Internal.AxisAlignedBB): Internal.Vector3;
        subtract(arg0: Internal.Vector3): Internal.Vector3;
        subtract(arg0: Vec3): Internal.Vector3;
        subtract(arg0: Vec3i): Internal.Vector3;
        subtract(arg0: Internal.Entity): Internal.Vector3;
        subtract(arg0: number, arg1: number, arg2: number): Internal.Vector3;
        toBytes(arg0: Internal.ByteBuf): void;
        static atEntityCenter(arg0: Internal.Entity): Internal.Vector3;
        perpendicular(): Internal.Vector3;
        distance(arg0: Vec3i): number;
        distance(arg0: Vec3): number;
        distance(arg0: Internal.Entity): number;
        distance(arg0: Internal.Vector3): number;
        dot(arg0: Internal.Vector3): number;
        isInAABB(arg0: Internal.Vector3, arg1: Internal.Vector3): boolean;
        vectorFromHereTo(arg0: number, arg1: number, arg2: number): Internal.Vector3;
        vectorFromHereTo(arg0: Internal.Vector3): Internal.Vector3;
        static random(arg0: Internal.Random): Internal.Vector3;
        static random(): Internal.Vector3;
        angle(arg0: Internal.Vector3): number;
        static fromBytes(arg0: Internal.ByteBuf): Internal.Vector3;
        divide(arg0: Internal.Vector3): Internal.Vector3;
        divide(arg0: number): Internal.Vector3;
        toVector3d(): Vec3;
        copy(arg0: Internal.Vector3): Internal.Vector3;
        multiply(arg0: number): Internal.Vector3;
        multiply(arg0: number): Internal.Vector3;
        multiply(arg0: number): Internal.Vector3;
        multiply(arg0: Internal.Vector3): Internal.Vector3;
        isInSphere(arg0: Internal.Vector3, arg1: number): boolean;
        zCrossProduct(): Internal.Vector3;
        xCrossProduct(): Internal.Vector3;
        lengthSquared(): number;
        static positiveYRandom(): Internal.Vector3;
        static positiveYRandom(arg0: Internal.Random): Internal.Vector3;
        length(): number;
        yCrossProduct(): Internal.Vector3;
        getX(): number;
        getY(): number;
        abs(): Internal.Vector3;
        copyInterpolateWith(arg0: Internal.Vector3, arg1: number): Internal.Vector3;
        getZ(): number;
        addZ(arg0: number): Internal.Vector3;
        drawPos(arg0: Internal.IVertexBuilder): Internal.IVertexBuilder;
        drawPos(arg0: Internal.Matrix4f, arg1: Internal.IVertexBuilder): Internal.IVertexBuilder;
        addY(arg0: number): Internal.Vector3;
        copyToPolar(): Internal.Vector3;
        negate(): Internal.Vector3;
        clone(): Internal.Vector3;
        clone(): any;
        addX(arg0: number): Internal.Vector3;
        static positiveRandom(): Internal.Vector3;
        static positiveRandom(arg0: Internal.Random): Internal.Vector3;
        get x(): number;
        get y(): number;
        get z(): number;
        get blockX(): number;
        get blockY(): number;
        get blockZ(): number;
        set x(arg0: number);
        set y(arg0: number);
        set z(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
        constructor(arg0: Vec3i);
        constructor(arg0: Vec3);
        constructor(arg0: Internal.TileEntity);
        constructor();
        constructor(arg0: Internal.Vector3);
        constructor(arg0: number, arg1: number, arg2: number);
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type Vector3_ = Vector3;
    class ClickType extends Internal.Enum<Internal.ClickType> {
        static valueOf(arg0: string): Internal.ClickType;
        static values(): Internal.ClickType[];
        static readonly QUICK_MOVE: Internal.ClickType;
        static readonly SWAP: Internal.ClickType;
        static readonly PICKUP_ALL: Internal.ClickType;
        static readonly THROW: Internal.ClickType;
        static readonly QUICK_CRAFT: Internal.ClickType;
        static readonly PICKUP: Internal.ClickType;
        static readonly CLONE: Internal.ClickType;
    }
    type ClickType_ = "pickup" | "quick_move" | "swap" | "clone" | "throw" | "quick_craft" | "pickup_all" | ClickType;
    interface AnimalEntityAccessor {
        setLove(arg0: number): void;
        (arg0: number): void;
    }
    type AnimalEntityAccessor_ = ((arg0: number)=>void) | AnimalEntityAccessor;
    class RewardType extends Internal.RegistryEntry<Internal.RewardType> {
        setExcludeFromListRewards(arg0: boolean): Internal.RewardType;
        getDisplayName(): Internal.ITextComponent;
        setGuiProvider(arg0: Internal.RewardType$GuiProvider_): Internal.RewardType;
        getTypeForNBT(): string;
        getExcludeFromListRewards(): boolean;
        getGuiProvider(): Internal.RewardType$GuiProvider;
        setDisplayName(arg0: Internal.ITextComponent_): Internal.RewardType;
        static createReward(arg0: Internal.Quest, arg1: string): Internal.Reward;
        getIcon(): Internal.Icon;
        intId: number;
        readonly provider: Internal.RewardType$Provider;
        readonly id: ResourceLocation;
        get displayName(): Internal.ITextComponent;
        get excludeFromListRewards(): boolean;
        get guiProvider(): Internal.RewardType$GuiProvider;
        get icon(): Internal.Icon;
        get typeForNBT(): string;
        set displayName(arg0: Internal.ITextComponent_);
        set excludeFromListRewards(arg0: boolean);
        set guiProvider(arg0: Internal.RewardType$GuiProvider_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.RewardType$Provider, arg2: java_.util.function_.Supplier<Internal.Icon>);
    }
    type RewardType_ = RewardType;
    class DateFormatSymbols extends Document.Object implements Internal.Serializable, Internal.Cloneable {
        setShortWeekdays(arg0: string[]): void;
        setShortMonths(arg0: string[]): void;
        getWeekdays(): string[];
        setEras(arg0: string[]): void;
        setMonths(arg0: string[]): void;
        setZoneStrings(arg0: string[][]): void;
        getEras(): string[];
        getLocalPatternChars(): string;
        setAmPmStrings(arg0: string[]): void;
        setWeekdays(arg0: string[]): void;
        getMonths(): string[];
        setLocalPatternChars(arg0: string): void;
        getAmPmStrings(): string[];
        clone(): any;
        getZoneStrings(): string[][];
        getShortMonths(): string[];
        static getInstance(): Internal.DateFormatSymbols;
        static getInstance(arg0: Internal.Locale): Internal.DateFormatSymbols;
        static getAvailableLocales(): Internal.Locale[];
        getShortWeekdays(): string[];
        get eras(): string[];
        get localPatternChars(): string;
        get months(): string[];
        get shortMonths(): string[];
        get instance(): Internal.DateFormatSymbols;
        get zoneStrings(): string[][];
        get weekdays(): string[];
        get amPmStrings(): string[];
        get shortWeekdays(): string[];
        get availableLocales(): Internal.Locale[];
        set eras(arg0: string[]);
        set localPatternChars(arg0: string);
        set months(arg0: string[]);
        set shortMonths(arg0: string[]);
        set zoneStrings(arg0: string[][]);
        set weekdays(arg0: string[]);
        set amPmStrings(arg0: string[]);
        set shortWeekdays(arg0: string[]);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Locale);
        constructor();
    }
    type DateFormatSymbols_ = DateFormatSymbols;
    class JsonToken extends Internal.Enum<Internal.JsonToken> {
        static valueOf(arg0: string): Internal.JsonToken;
        static values(): Internal.JsonToken[];
        static readonly NUMBER: Internal.JsonToken;
        static readonly NULL: Internal.JsonToken;
        static readonly END_DOCUMENT: Internal.JsonToken;
        static readonly BEGIN_OBJECT: Internal.JsonToken;
        static readonly END_ARRAY: Internal.JsonToken;
        static readonly STRING: Internal.JsonToken;
        static readonly END_OBJECT: Internal.JsonToken;
        static readonly BEGIN_ARRAY: Internal.JsonToken;
        static readonly BOOLEAN: Internal.JsonToken;
        static readonly NAME: Internal.JsonToken;
    }
    type JsonToken_ = "begin_array" | "end_array" | "begin_object" | "end_object" | "name" | "string" | "number" | "boolean" | "null" | "end_document" | JsonToken;
    abstract class UnmodifiableListIterator <E> extends Internal.UnmodifiableIterator<E> implements Internal.ListIterator<E> {
        next(): E;
        add(arg0: E): void;
        set(arg0: E): void;
        previous(): E;
        hasPrevious(): boolean;
        nextIndex(): number;
        forEachRemaining(arg0: Internal.Consumer_<E>): void;
        previousIndex(): number;
    }
    type UnmodifiableListIterator_<E> = UnmodifiableListIterator<E>;
    class CPlaceRecipePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_194319_c(): boolean;
        func_199618_b(): ResourceLocation;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_194318_a(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.IRecipe<any>, arg2: boolean);
    }
    type CPlaceRecipePacket_ = CPlaceRecipePacket;
    class ServerSettings extends Document.Object {
        static exportData(): void;
        logInvalidRecipeHandlers: boolean;
        useOriginalRecipeForFilters: boolean;
        dataPackOutput: boolean;
        logSkippedRecipes: boolean;
        static instance: Internal.ServerSettings;
        logOverrides: boolean;
        logErroringRecipes: boolean;
        static source: Internal.CommandSource;
        logAddedRecipes: boolean;
        logRemovedRecipes: boolean;
        static dataExport: Internal.JsonObject;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ServerSettings_ = ServerSettings;
    interface IHasContainer <T> {
        func_212873_a_(): T;
        (): T;
    }
    type IHasContainer_<T> = (()=>T) | IHasContainer<T>;
    interface IEventHandler {
        onEvent(arg0: Internal.EventJS): void;
        (arg0: Internal.EventJS): void;
    }
    type IEventHandler_ = ((arg0: Internal.EventJS)=>void) | IEventHandler;
    class FurnaceFuelBurnTimeEvent extends net.minecraftforge.eventbus.api.Event {
        getRecipeType(): Internal.IRecipeType<any>;
        setBurnTime(arg0: number): void;
        getBurnTime(): number;
        getItemStack(): Internal.ItemStack;
        get itemStack(): Internal.ItemStack;
        get recipeType(): Internal.IRecipeType<any>;
        get burnTime(): number;
        set burnTime(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ItemStack, arg1: number, arg2: Internal.IRecipeType<any>);
        constructor(arg0: Internal.ItemStack, arg1: number);
    }
    type FurnaceFuelBurnTimeEvent_ = FurnaceFuelBurnTimeEvent;
    class WeightedBlockStateProvider extends Internal.BlockStateProvider {
        func_227407_a_(arg0: Internal.BlockState, arg1: number): Internal.WeightedBlockStateProvider;
        static readonly field_236811_b_: Internal.Codec<Internal.WeightedBlockStateProvider>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type WeightedBlockStateProvider_ = WeightedBlockStateProvider;
    class LanguageManager extends Document.Object implements Internal.IResourceManagerReloadListener {
        func_135045_a(arg0: net.minecraft.client.resources.Language): void;
        func_135041_c(): net.minecraft.client.resources.Language;
        func_135040_d(): Internal.SortedSet<net.minecraft.client.resources.Language>;
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage_, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        getResourceType(): Internal.IResourceType;
        func_225594_i_(): string;
        func_191960_a(arg0: string): net.minecraft.client.resources.Language;
        field_135048_c: string;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type LanguageManager_ = LanguageManager;
    interface DirectoryStream$Filter <T> {
        accept(arg0: T): boolean;
        (arg0: T): boolean;
    }
    type DirectoryStream$Filter_<T> = ((arg0: T)=>boolean) | DirectoryStream$Filter<T>;
    class LootTableLoadEvent extends net.minecraftforge.eventbus.api.Event {
        getName(): ResourceLocation;
        getTable(): Internal.LootTable;
        setTable(arg0: Internal.LootTable): void;
        getLootTableManager(): Internal.LootTableManager;
        get name(): ResourceLocation;
        get lootTableManager(): Internal.LootTableManager;
        get table(): Internal.LootTable;
        set table(arg0: Internal.LootTable);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: ResourceLocation, arg1: Internal.LootTable, arg2: Internal.LootTableManager);
    }
    type LootTableLoadEvent_ = LootTableLoadEvent;
    abstract class NavigatableSimiScreen extends Internal.AbstractSimiScreen {
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        isEquivalentTo(arg0: Internal.NavigatableSimiScreen): boolean;
        func_212927_b(arg0: number, arg1: number): void;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_231049_c__(arg0: boolean): boolean;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        centerScalingOn(arg0: number, arg1: number): void;
        shareContextWith(arg0: Internal.NavigatableSimiScreen): void;
        centerScalingOnMouse(): void;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        static readonly THINK_BACK: "ponder.think_back";
        readonly transition: Internal.LerpedFloat;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type NavigatableSimiScreen_ = NavigatableSimiScreen;
    class Slot extends Document.Object {
        func_75215_d(arg0: Internal.ItemStack): void;
        func_75219_a(): number;
        func_75216_d(): boolean;
        func_75218_e(): void;
        func_75209_a(arg0: number): Internal.ItemStack;
        func_82869_a(arg0: Internal.PlayerEntity): boolean;
        isSameInventory(arg0: Internal.Slot): boolean;
        setBackground(arg0: ResourceLocation_, arg1: ResourceLocation_): Internal.Slot;
        handler$zek000$preventPickupOfPendingExplorationMap(player: Internal.PlayerEntity, cir: Internal.CallbackInfoReturnable<any>): void;
        func_111238_b(): boolean;
        getSlotIndex(): number;
        func_178170_b(arg0: Internal.ItemStack): number;
        func_190901_a(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack): Internal.ItemStack;
        func_75220_a(arg0: Internal.ItemStack, arg1: Internal.ItemStack): void;
        func_75211_c(): Internal.ItemStack;
        func_75214_a(arg0: Internal.ItemStack): boolean;
        func_225517_c_(): Internal.Pair<ResourceLocation, ResourceLocation>;
        field_75223_e: number;
        field_75225_a: number;
        field_75222_d: number;
        field_75224_c: Internal.IInventory;
        field_75221_f: number;
        backgroundPair: Internal.Pair<ResourceLocation, ResourceLocation>;
        get slotIndex(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IInventory, arg1: number, arg2: number, arg3: number);
    }
    type Slot_ = Slot;
    interface BlockEntityTypeAccess {
        setValidBlocks(arg0: Internal.Set<Internal.Block>): void;
        getValidBlocks(): Internal.Set<Internal.Block>;
    }
    type BlockEntityTypeAccess_ = BlockEntityTypeAccess;
    interface IResource extends Internal.Closeable {
        func_199027_b(): Internal.InputStream;
        func_199028_a<T_>(arg0: Internal.IMetadataSectionSerializer<T_>): T_;
        func_199026_d(): string;
        func_199029_a(): ResourceLocation;
    }
    type IResource_ = IResource;
    abstract class CreatureEntity extends Internal.MobEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        func_180484_a(arg0: BlockPos): number;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_70781_l(): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_205022_a(arg0: BlockPos, arg1: Internal.IWorldReader): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type CreatureEntity_ = CreatureEntity;
    class ItemInventory extends Document.Object implements Internal.IInventory {
        func_213901_a(arg0: Internal.Item_): number;
        func_70304_b(arg0: number): Internal.ItemStack;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_174888_l(): void;
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        save(): void;
        func_70297_j_(): number;
        func_70302_i_(): number;
        getItems(): Internal.List<Internal.ItemStack>;
        func_191420_l(): boolean;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_70296_d(): void;
        readonly filter: Internal.ItemStack;
        readonly filterItem: Internal.InventoryFilterItem;
        get items(): Internal.List<Internal.ItemStack>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemStack);
    }
    type ItemInventory_ = ItemInventory;
    class LootType <T> extends Document.Object {
        func_237408_a_(): Internal.ILootSerializer<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ILootSerializer<T>);
    }
    type LootType_<T> = LootType<T>;
    class FloatToolStat$FloatBuilder extends Document.Object {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FloatToolStat$FloatBuilder_ = FloatToolStat$FloatBuilder;
    class BakedQuad extends Document.Object implements Internal.IVertexProducer, Internal.BakedQuadAccessor, Internal.BakedQuadAccess, Internal.ModelQuadView {
        getNormal(idx: number): number;
        getLight(idx: number): number;
        getTexV(idx: number): number;
        getTexU(idx: number): number;
        func_239287_f_(): boolean;
        func_187508_a(): Internal.TextureAtlasSprite;
        getColorIndex(): number;
        copyInto(buf: Internal.ByteBuffer, position: number): void;
        getColor(idx: number): number;
        func_178209_a(): number[];
        getSprite(): Internal.TextureAtlasSprite;
        func_178210_d(): Internal.Direction;
        func_178211_c(): number;
        func_178212_b(): boolean;
        getX(idx: number): number;
        getY(idx: number): number;
        setVertices(arg0: number[]): void;
        getZ(idx: number): number;
        rubidium$getSprite(): Internal.TextureAtlasSprite;
        pipe(arg0: net.minecraftforge.client.model.pipeline.IVertexConsumer): void;
        getFlags(): number;
        get sprite(): Internal.TextureAtlasSprite;
        get flags(): number;
        get colorIndex(): number;
        set vertices(arg0: number[]);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number[], arg1: number, arg2: Internal.Direction, arg3: Internal.TextureAtlasSprite, arg4: boolean);
    }
    type BakedQuad_ = BakedQuad;
    class RenderGameOverlayEvent$Pre extends Internal.RenderGameOverlayEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MatrixStack, arg1: Internal.RenderGameOverlayEvent, arg2: Internal.RenderGameOverlayEvent$ElementType);
        constructor();
    }
    type RenderGameOverlayEvent$Pre_ = RenderGameOverlayEvent$Pre;
    interface ActiveRenderInfoInvokerMixin {
        callMove(arg0: number, arg1: number, arg2: number): void;
        (arg0: number, arg1: number, arg2: number): void;
    }
    type ActiveRenderInfoInvokerMixin_ = ((arg0: number, arg1: number, arg2: number)=>void) | ActiveRenderInfoInvokerMixin;
    interface Chronology extends Internal.Comparable<Internal.Chronology> {
        localDateTime(arg0: Internal.TemporalAccessor): Internal.ChronoLocalDateTime<Internal.ChronoLocalDate>;
        date(arg0: number, arg1: number, arg2: number): Internal.ChronoLocalDate;
        date(arg0: Internal.TemporalAccessor): Internal.ChronoLocalDate;
        date(arg0: Internal.Era_, arg1: number, arg2: number, arg3: number): Internal.ChronoLocalDate;
        isIsoBased(): boolean;
        range(arg0: Internal.ChronoField_): Internal.ValueRange;
        getId(): string;
        compareTo(arg0: Internal.Chronology): number;
        compareTo(arg0: any): number;
        dateNow(): Internal.ChronoLocalDate;
        dateNow(arg0: Internal.ZoneId): Internal.ChronoLocalDate;
        dateNow(arg0: Internal.Clock): Internal.ChronoLocalDate;
        eraOf(arg0: number): Internal.Era;
        prolepticYear(arg0: Internal.Era_, arg1: number): number;
        zonedDateTime(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.ChronoZonedDateTime<Internal.ChronoLocalDate>;
        zonedDateTime(arg0: Internal.TemporalAccessor): Internal.ChronoZonedDateTime<Internal.ChronoLocalDate>;
        hashCode(): number;
        epochSecond(arg0: Internal.Era_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.ZoneOffset): number;
        epochSecond(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.ZoneOffset): number;
        period(arg0: number, arg1: number, arg2: number): Internal.ChronoPeriod;
        dateYearDay(arg0: number, arg1: number): Internal.ChronoLocalDate;
        dateYearDay(arg0: Internal.Era_, arg1: number, arg2: number): Internal.ChronoLocalDate;
        getCalendarType(): string;
        resolveDate(arg0: Internal.Map_<Internal.TemporalField_, number>, arg1: Internal.ResolverStyle_): Internal.ChronoLocalDate;
        isLeapYear(arg0: number): boolean;
        dateEpochDay(arg0: number): Internal.ChronoLocalDate;
        eras(): Internal.List<Internal.Era>;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        equals(arg0: any): boolean;
        toString(): string;
    }
    type Chronology_ = Chronology;
    class BlockModelConfiguration extends Document.Object implements Internal.IModelConfiguration {
        setCustomGeometry(arg0: Internal.IModelGeometry<any>): void;
        isShadedInGui(): boolean;
        isTexturePresent(arg0: string): boolean;
        useSmoothLighting(): boolean;
        getCameraTransforms(): Internal.ItemCameraTransforms;
        hasCustomGeometry(): boolean;
        getModelName(): string;
        isSideLit(): boolean;
        copyFrom(arg0: Internal.BlockModelConfiguration): void;
        resolveTexture(arg0: string): Internal.RenderMaterial;
        getPartVisibility(arg0: Internal.IModelGeometryPart, arg1: boolean): boolean;
        getPartVisibility(arg0: Internal.IModelGeometryPart): boolean;
        getCustomGeometry(): Internal.IModelGeometry<any>;
        getOwnerModel(): Internal.IUnbakedModel;
        getCombinedTransform(): Internal.IModelTransform;
        getTextureDependencies(arg0: Internal.Function_<ResourceLocation_, Internal.IUnbakedModel_>, arg1: Internal.Set<Internal.Pair<string, string>>): Internal.Collection<Internal.RenderMaterial>;
        setCustomModelState(arg0: Internal.IModelTransform): void;
        bake(arg0: Internal.ModelBakery, arg1: Internal.Function_<Internal.RenderMaterial_, Internal.TextureAtlasSprite_>, arg2: Internal.IModelTransform, arg3: Internal.ItemOverrideList, arg4: ResourceLocation_): Internal.IBakedModel;
        getCustomModelState(): Internal.IModelTransform;
        readonly owner: Internal.BlockModel;
        readonly visibilityData: Internal.BlockModelConfiguration$VisibilityData;
        get modelName(): string;
        get customGeometry(): Internal.IModelGeometry<any>;
        get ownerModel(): Internal.IUnbakedModel;
        get customModelState(): Internal.IModelTransform;
        get combinedTransform(): Internal.IModelTransform;
        get shadedInGui(): boolean;
        get sideLit(): boolean;
        get cameraTransforms(): Internal.ItemCameraTransforms;
        set customModelState(arg0: Internal.IModelTransform);
        set customGeometry(arg0: Internal.IModelGeometry<any>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockModel);
    }
    type BlockModelConfiguration_ = BlockModelConfiguration;
    interface IMachineComponentTemplate <T> {
        build(arg0: Internal.IMachineComponentManager): T;
        getType(): Internal.MachineComponentType<T>;
        getId(): string;
        canAccept(arg0: any, arg1: boolean, arg2: Internal.IMachineComponentManager): boolean;
    }
    type IMachineComponentTemplate_<T> = IMachineComponentTemplate<T>;
    abstract class IERecipeJS extends Internal.RecipeJS {
        parseIngredientItemIE(json: Internal.JsonElement): Internal.IngredientStackJS;
        time(t: number): Internal.IERecipeJS;
        energy(e: number): Internal.IERecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type IERecipeJS_ = IERecipeJS;
    class EditModeToggleEvent extends Internal.JeiEvent {
        isEditModeEnabled(): boolean;
        get editModeEnabled(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: boolean);
    }
    type EditModeToggleEvent_ = EditModeToggleEvent;
    class RewardClaimType extends Internal.Enum<Internal.RewardClaimType> {
        cantClaim(): boolean;
        canClaim(): boolean;
        static valueOf(arg0: string): Internal.RewardClaimType;
        static values(): Internal.RewardClaimType[];
        isClaimed(): boolean;
        static readonly CLAIMED: Internal.RewardClaimType;
        static readonly CAN_CLAIM: Internal.RewardClaimType;
        static readonly CANT_CLAIM: Internal.RewardClaimType;
        get claimed(): boolean;
    }
    type RewardClaimType_ = "can_claim" | "cant_claim" | "claimed" | RewardClaimType;
    class RenderRainEvent extends Internal.WorldRenderEvent {
        getX(): number;
        getY(): number;
        getZ(): number;
        getPartialTicks(): number;
        getLightmapIn(): Internal.LightTexture;
        get lightmapIn(): Internal.LightTexture;
        get x(): number;
        get y(): number;
        get z(): number;
        get partialTicks(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LightTexture, arg1: number, arg2: number, arg3: number, arg4: number);
    }
    type RenderRainEvent_ = RenderRainEvent;
    interface AdvancementList$IListener {
        func_191931_a(arg0: Internal.Advancement): void;
        func_191930_a(): void;
        func_191932_c(arg0: Internal.Advancement): void;
        func_191929_d(arg0: Internal.Advancement): void;
        func_191928_b(arg0: Internal.Advancement): void;
    }
    type AdvancementList$IListener_ = AdvancementList$IListener;
    class MapDecoration$Type extends Internal.Enum<Internal.MapDecoration$Type> {
        static func_191159_a(arg0: number): Internal.MapDecoration$Type;
        static valueOf(arg0: string): Internal.MapDecoration$Type;
        static values(): Internal.MapDecoration$Type[];
        func_191161_d(): number;
        func_191162_c(): boolean;
        func_191160_b(): boolean;
        func_191163_a(): number;
        static readonly BLUE_MARKER: Internal.MapDecoration$Type;
        static readonly TARGET_POINT: Internal.MapDecoration$Type;
        static readonly BANNER_ORANGE: Internal.MapDecoration$Type;
        static readonly BANNER_PINK: Internal.MapDecoration$Type;
        static readonly BANNER_MAGENTA: Internal.MapDecoration$Type;
        static readonly FRAME: Internal.MapDecoration$Type;
        static readonly RED_MARKER: Internal.MapDecoration$Type;
        static readonly PLAYER_OFF_LIMITS: Internal.MapDecoration$Type;
        static readonly BANNER_RED: Internal.MapDecoration$Type;
        static readonly BANNER_LIME: Internal.MapDecoration$Type;
        static readonly BANNER_GREEN: Internal.MapDecoration$Type;
        static readonly TARGET_X: Internal.MapDecoration$Type;
        static readonly BANNER_YELLOW: Internal.MapDecoration$Type;
        static readonly BANNER_PURPLE: Internal.MapDecoration$Type;
        static readonly BANNER_WHITE: Internal.MapDecoration$Type;
        static readonly BANNER_BLACK: Internal.MapDecoration$Type;
        static readonly RED_X: Internal.MapDecoration$Type;
        static readonly BANNER_BLUE: Internal.MapDecoration$Type;
        static readonly BANNER_LIGHT_GRAY: Internal.MapDecoration$Type;
        static readonly BANNER_BROWN: Internal.MapDecoration$Type;
        static readonly PLAYER: Internal.MapDecoration$Type;
        static readonly PLAYER_OFF_MAP: Internal.MapDecoration$Type;
        static readonly BANNER_CYAN: Internal.MapDecoration$Type;
        static readonly MANSION: Internal.MapDecoration$Type;
        static readonly MONUMENT: Internal.MapDecoration$Type;
        static readonly BANNER_LIGHT_BLUE: Internal.MapDecoration$Type;
        static readonly BANNER_GRAY: Internal.MapDecoration$Type;
    }
    type MapDecoration$Type_ = "player" | "frame" | "red_marker" | "blue_marker" | "target_x" | "target_point" | "player_off_map" | "player_off_limits" | "mansion" | "monument" | "banner_white" | "banner_orange" | "banner_magenta" | "banner_light_blue" | "banner_yellow" | "banner_lime" | "banner_pink" | "banner_gray" | "banner_light_gray" | "banner_cyan" | "banner_purple" | "banner_blue" | "banner_brown" | "banner_green" | "banner_red" | "banner_black" | "red_x" | MapDecoration$Type;
    class ComponentIOMode extends Internal.Enum<Internal.ComponentIOMode> {
        isInput(): boolean;
        isOutput(): boolean;
        static valueOf(arg0: string): Internal.ComponentIOMode;
        static values(): Internal.ComponentIOMode[];
        static value(arg0: string): Internal.ComponentIOMode;
        static readonly INPUT: Internal.ComponentIOMode;
        static readonly OUTPUT: Internal.ComponentIOMode;
        static readonly NONE: Internal.ComponentIOMode;
        static readonly BOTH: Internal.ComponentIOMode;
        get output(): boolean;
        get input(): boolean;
    }
    type ComponentIOMode_ = "input" | "output" | "both" | "none" | ComponentIOMode;
    abstract class PartRequirement extends Document.Object {
        getStatType(): Internal.MaterialStatsId;
        serialize(): Internal.JsonObject;
        static read(arg0: Internal.PacketBuffer): Internal.PartRequirement;
        canUseMaterial(arg0: Internal.IMaterial): boolean;
        static ofStat(arg0: Internal.MaterialStatsId, arg1: number): Internal.PartRequirement;
        getWeight(): number;
        static ofPart(arg0: Internal.IToolPart_, arg1: number): Internal.PartRequirement;
        getPart(): Internal.IToolPart;
        nameForMaterial(arg0: Internal.IMaterial): Internal.ITextComponent;
        write(arg0: Internal.PacketBuffer): void;
        matches(arg0: Internal.Item_): boolean;
        static readonly SERIALIZER: Internal.PartRequirement$Serializer;
        get statType(): Internal.MaterialStatsId;
        get part(): Internal.IToolPart;
        get weight(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type PartRequirement_ = PartRequirement;
    interface DirectMethodHandleDesc extends Internal.MethodHandleDesc {
        owner(): Internal.ClassDesc;
        kind(): Internal.DirectMethodHandleDesc$Kind;
        refKind(): number;
        lookupDescriptor(): string;
        isOwnerInterface(): boolean;
        methodName(): string;
    }
    type DirectMethodHandleDesc_ = DirectMethodHandleDesc;
    class BiomeDictionary$Type extends Document.Object {
        static getAll(): Internal.Collection<Internal.BiomeDictionary$Type>;
        getName(): string;
        static getType(arg0: string, ...arg1: Internal.BiomeDictionary$Type[]): Internal.BiomeDictionary$Type;
        static fromVanilla(arg0: Internal.Biome$Category_): Internal.BiomeDictionary$Type;
        static readonly SNOWY: Internal.BiomeDictionary$Type;
        static readonly BEACH: Internal.BiomeDictionary$Type;
        static readonly SAVANNA: Internal.BiomeDictionary$Type;
        static readonly MESA: Internal.BiomeDictionary$Type;
        static readonly RARE: Internal.BiomeDictionary$Type;
        static readonly SPOOKY: Internal.BiomeDictionary$Type;
        static readonly WET: Internal.BiomeDictionary$Type;
        static readonly SPARSE: Internal.BiomeDictionary$Type;
        static readonly MOUNTAIN: Internal.BiomeDictionary$Type;
        static readonly DRY: Internal.BiomeDictionary$Type;
        static readonly RIVER: Internal.BiomeDictionary$Type;
        static readonly MAGICAL: Internal.BiomeDictionary$Type;
        static readonly NETHER: Internal.BiomeDictionary$Type;
        static readonly WATER: Internal.BiomeDictionary$Type;
        static readonly DENSE: Internal.BiomeDictionary$Type;
        static readonly JUNGLE: Internal.BiomeDictionary$Type;
        static readonly SANDY: Internal.BiomeDictionary$Type;
        static readonly OCEAN: Internal.BiomeDictionary$Type;
        static readonly HILLS: Internal.BiomeDictionary$Type;
        static readonly HOT: Internal.BiomeDictionary$Type;
        static readonly FOREST: Internal.BiomeDictionary$Type;
        static readonly MUSHROOM: Internal.BiomeDictionary$Type;
        static readonly OVERWORLD: Internal.BiomeDictionary$Type;
        static readonly PLATEAU: Internal.BiomeDictionary$Type;
        static readonly PLAINS: Internal.BiomeDictionary$Type;
        static readonly SWAMP: Internal.BiomeDictionary$Type;
        static readonly END: Internal.BiomeDictionary$Type;
        static readonly COLD: Internal.BiomeDictionary$Type;
        static readonly DEAD: Internal.BiomeDictionary$Type;
        static readonly MODIFIED: Internal.BiomeDictionary$Type;
        static readonly VOID: Internal.BiomeDictionary$Type;
        static readonly LUSH: Internal.BiomeDictionary$Type;
        static readonly CONIFEROUS: Internal.BiomeDictionary$Type;
        static readonly WASTELAND: Internal.BiomeDictionary$Type;
        get all(): Internal.Collection<Internal.BiomeDictionary$Type>;
        get name(): string;
    }
    type BiomeDictionary$Type_ = BiomeDictionary$Type;
    class CloudOption extends Internal.Enum<Internal.CloudOption> {
        static func_216804_a(arg0: number): Internal.CloudOption;
        func_216803_b(): string;
        static valueOf(arg0: string): Internal.CloudOption;
        func_216806_a(): number;
        static values(): Internal.CloudOption[];
        static readonly FANCY: Internal.CloudOption;
        static readonly FAST: Internal.CloudOption;
        static readonly OFF: Internal.CloudOption;
    }
    type CloudOption_ = "off" | "fast" | "fancy" | CloudOption;
    class NextTickListEntry <T> extends Document.Object {
        func_151351_a(): T;
        static func_223192_a<T_>(): Internal.Comparator<Internal.NextTickListEntry<T_>>;
        readonly field_235017_b_: number;
        readonly field_180282_a: BlockPos;
        readonly field_82754_f: Internal.TickPriority;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: BlockPos, arg1: T);
        constructor(arg0: BlockPos, arg1: T, arg2: number, arg3: Internal.TickPriority);
    }
    type NextTickListEntry_<T> = NextTickListEntry<T>;
    interface EventHandlerRegistrar$Handler <T> {
        acceptEvent(arg0: T): void;
        (arg0: T): void;
    }
    type EventHandlerRegistrar$Handler_<T> = ((arg0: T)=>void) | EventHandlerRegistrar$Handler<T>;
    interface IForgeShearable {
        isShearable(arg0: Internal.ItemStack, arg1: Internal.World, arg2: BlockPos): boolean;
        onSheared(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack, arg2: Internal.World, arg3: BlockPos, arg4: number): Internal.List<Internal.ItemStack>;
    }
    type IForgeShearable_ = IForgeShearable;
    interface ChannelConfig {
        setWriteBufferLowWaterMark(arg0: number): Internal.ChannelConfig;
        setMessageSizeEstimator(arg0: Internal.MessageSizeEstimator_): Internal.ChannelConfig;
        getWriteBufferLowWaterMark(): number;
        getMessageSizeEstimator(): Internal.MessageSizeEstimator;
        setRecvByteBufAllocator(arg0: Internal.RecvByteBufAllocator_): Internal.ChannelConfig;
        getOption<T>(arg0: Internal.ChannelOption<T>): T;
        isAutoClose(): boolean;
        getRecvByteBufAllocator<T>(): T;
        setAllocator(arg0: Internal.ByteBufAllocator): Internal.ChannelConfig;
        getAllocator(): Internal.ByteBufAllocator;
        isAutoRead(): boolean;
        setOptions(arg0: Internal.Map_<Internal.ChannelOption_<any>, any>): boolean;
        setConnectTimeoutMillis(arg0: number): Internal.ChannelConfig;
        setWriteBufferWaterMark(arg0: Internal.WriteBufferWaterMark): Internal.ChannelConfig;
        setOption<T>(arg0: Internal.ChannelOption<T>, arg1: T): boolean;
        getConnectTimeoutMillis(): number;
        setWriteSpinCount(arg0: number): Internal.ChannelConfig;
        setWriteBufferHighWaterMark(arg0: number): Internal.ChannelConfig;
        getMaxMessagesPerRead(): number;
        getWriteBufferHighWaterMark(): number;
        setAutoRead(arg0: boolean): Internal.ChannelConfig;
        getWriteSpinCount(): number;
        setMaxMessagesPerRead(arg0: number): Internal.ChannelConfig;
        getOptions(): Internal.Map<Internal.ChannelOption<any>, any>;
        getWriteBufferWaterMark(): Internal.WriteBufferWaterMark;
        setAutoClose(arg0: boolean): Internal.ChannelConfig;
    }
    type ChannelConfig_ = ChannelConfig;
    class ParrotEntity extends Internal.DyingShoulderRidingEntity implements Internal.IFlyingAnimal {
        shouldRiderSit(): boolean;
        static func_234212_a_(arg0: Internal.World, arg1: Internal.Random): Internal.SoundEvent;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_192002_a(): boolean;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        static func_192006_b(arg0: Internal.World, arg1: Internal.Entity): boolean;
        func_184639_G(): Internal.SoundEvent;
        static func_223317_c(arg0: Internal.EntityType_<Internal.ParrotEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_191997_m(arg0: number): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        static func_234213_eS_(): Internal.AttributeModifierMap$MutableAttribute;
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_192004_dr(): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        formatLoc(arg0: Vec3): string;
        func_191998_ds(): number;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        static func_192000_b(arg0: Internal.Random): number;
        getClassification(arg0: boolean): Internal.EntityClassification;
        field_192010_bD: number;
        field_192011_bE: number;
        field_192008_bB: number;
        field_192009_bC: number;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ParrotEntity>, arg1: Internal.World);
    }
    type ParrotEntity_ = ParrotEntity;
    class Vector3f extends Document.Object {
        setY(arg0: number): void;
        setX(arg0: number): void;
        set(arg0: number[]): void;
        func_229190_a_(arg0: Internal.Vector3f, arg1: number): void;
        func_229191_a_(arg0: Internal.Float2FloatFunction_): void;
        func_229192_b_(arg0: number, arg1: number, arg2: number): void;
        setZ(arg0: number): void;
        func_195902_c(): number;
        func_195903_b(arg0: Internal.Vector3f): number;
        func_229194_d_(): boolean;
        func_214905_a(arg0: Internal.Quaternion): void;
        func_229193_c_(arg0: number): Internal.Quaternion;
        func_195904_b(arg0: number, arg1: number, arg2: number): void;
        func_195905_a(arg0: number, arg1: number, arg2: number): void;
        func_195896_c(arg0: Internal.Vector3f): void;
        func_195898_a(arg0: number): void;
        func_195897_a(arg0: Internal.Vector3f): void;
        func_195900_b(): number;
        func_229195_e_(): Internal.Vector3f;
        func_195901_a(arg0: number, arg1: number): void;
        func_229189_a_(arg0: Internal.Vector3f): void;
        func_229188_a_(arg0: Internal.Matrix3f): void;
        func_229187_a_(arg0: number): Internal.Quaternion;
        func_195899_a(): number;
        static field_229181_d_: Internal.Vector3f;
        static field_229179_b_: Internal.Vector3f;
        static field_229180_c_: Internal.Vector3f;
        static field_229183_f_: Internal.Vector3f;
        static field_229178_a_: Internal.Vector3f;
        static field_229182_e_: Internal.Vector3f;
        set x(arg0: number);
        set y(arg0: number);
        set z(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number[]);
        constructor(arg0: Vec3);
        constructor(arg0: number, arg1: number, arg2: number);
        constructor();
    }
    type Vector3f_ = Vector3f;
    class STagsListPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_199858_a(): Internal.ITagCollectionSupplier;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ITagCollectionSupplier);
    }
    type STagsListPacket_ = STagsListPacket;
    class Subject extends Document.Object implements Internal.Serializable {
        static getSubject(arg0: Internal.AccessControlContext): Internal.Subject;
        static doAs<T_>(arg0: Internal.Subject, arg1: Internal.PrivilegedAction_<T_>): T_;
        static doAs<T_>(arg0: Internal.Subject, arg1: Internal.PrivilegedExceptionAction_<T_>): T_;
        static current(): Internal.Subject;
        getPrivateCredentials(): Internal.Set<any>;
        getPrivateCredentials<T_>(arg0: Internal.Class<T_>): Internal.Set<T_>;
        isReadOnly(): boolean;
        static callAs<T_>(arg0: Internal.Subject, arg1: java_.util.concurrent.Callable_<T_>): T_;
        getPrincipals(): Internal.Set<Internal.Principal>;
        getPrincipals<T_>(arg0: Internal.Class<T_>): Internal.Set<T_>;
        getPublicCredentials(): Internal.Set<any>;
        getPublicCredentials<T_>(arg0: Internal.Class<T_>): Internal.Set<T_>;
        setReadOnly(): void;
        static doAsPrivileged<T_>(arg0: Internal.Subject, arg1: Internal.PrivilegedAction_<T_>, arg2: Internal.AccessControlContext): T_;
        static doAsPrivileged<T_>(arg0: Internal.Subject, arg1: Internal.PrivilegedExceptionAction_<T_>, arg2: Internal.AccessControlContext): T_;
        get privateCredentials(): Internal.Set<any>;
        get readOnly(): boolean;
        get principals(): Internal.Set<Internal.Principal>;
        get publicCredentials(): Internal.Set<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: boolean, arg1: Internal.Set<Internal.Principal>, arg2: Internal.Set<any>, arg3: Internal.Set<any>);
    }
    type Subject_ = Subject;
    interface List <E> extends Internal.SequencedCollection<E> {
        removeLast(): E;
        getLast(): E;
        replaceAll(arg0: Internal.UnaryOperator<E>): void;
        remove(arg0: any): boolean;
        remove(arg0: number): E;
        addLast(arg0: E): void;
        removeAll(arg0: Internal.Collection<any>): boolean;
        iterator(): Internal.Iterator<E>;
        getFirst(): E;
        hashCode(): number;
        removeFirst(): E;
        get(arg0: number): E;
        toArray(): any[];
        toArray<T_>(arg0: T_[]): T_[];
        indexOf(arg0: any): number;
        add(arg0: E): boolean;
        add(arg0: number, arg1: E): void;
        subList(arg0: number, arg1: number): Internal.List<E>;
        set(arg0: number, arg1: E): E;
        spliterator(): Internal.Spliterator<E>;
        containsAll(arg0: Internal.Collection<any>): boolean;
        isEmpty(): boolean;
        clear(): void;
        sort(arg0: Internal.Comparator<E>): void;
        lastIndexOf(arg0: any): number;
        contains(arg0: any): boolean;
        size(): number;
        addAll(arg0: Internal.Collection<E>): boolean;
        addAll(arg0: number, arg1: Internal.Collection<E>): boolean;
        equals(arg0: any): boolean;
        listIterator(): Internal.ListIterator<E>;
        listIterator(arg0: number): Internal.ListIterator<E>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<E>;
        addFirst(arg0: E): void;
        retainAll(arg0: Internal.Collection<any>): boolean;
    }
    type List_<E> = List<E>;
    class BucketItem extends Internal.Item implements Internal.BucketItemKJS {
        canElytraFly(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        onEnchantment(arg0: Internal.ItemStack, arg1: Internal.List<Internal.EnchantmentData>): Internal.ItemStack;
        getItem(): Internal.Item;
        getSmeltingExperience(arg0: Internal.ItemStack): number;
        setDamage(arg0: Internal.ItemStack, arg1: number): void;
        canHarvestBlock(arg0: Internal.ItemStack, arg1: Internal.BlockState): boolean;
        renderHelmetOverlay(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: number, arg3: number, arg4: number): void;
        getFluidKJS(): Internal.Fluid;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        damageItem<T_>(arg0: Internal.ItemStack, arg1: number, arg2: T_, arg3: Internal.Consumer_<T_>): number;
        getItemEnchantability(arg0: Internal.ItemStack): number;
        isTreasureAllowed(arg0: Internal.ItemStack, arg1: boolean): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: boolean): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack): number;
        getArmorModel<A_>(arg0: Internal.LivingEntity, arg1: Internal.ItemStack, arg2: EquipmentSlot_, arg3: A_): A_;
        readShareTag(arg0: Internal.ItemStack, arg1: Internal.CompoundNBT_): void;
        onEntityItemUpdate(arg0: Internal.ItemStack, arg1: Internal.ItemEntity): boolean;
        getDamage(arg0: Internal.ItemStack): number;
        showDurabilityBar(arg0: Internal.ItemStack): boolean;
        isBookEnchantable(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: Internal.LivingEntity, arg3: Internal.LivingEntity): boolean;
        func_180616_a(arg0: Internal.PlayerEntity, arg1: Internal.World, arg2: BlockPos, arg3: Internal.BlockRayTraceResult): boolean;
        onUsingTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): void;
        createEntity(arg0: Internal.World, arg1: Internal.Entity, arg2: Internal.ItemStack): Internal.Entity;
        isPiglinCurrency(arg0: Internal.ItemStack): boolean;
        getCreativeTabs(): Internal.Collection<Internal.ItemGroup>;
        getShareTag(arg0: Internal.ItemStack): Internal.CompoundNBT;
        getRGBDurabilityForDisplay(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack): number;
        getBurnTime(arg0: Internal.ItemStack, arg1: Internal.IRecipeType<any>): number;
        onDroppedByPlayer(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity): boolean;
        isDamageable(arg0: Internal.ItemStack): boolean;
        onEntitySwing(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        elytraFlightTick(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: number): boolean;
        func_203792_a(arg0: Internal.World, arg1: Internal.ItemStack, arg2: BlockPos): void;
        selectEnchantments(arg0: Internal.List<Internal.EnchantmentData>, arg1: Internal.Random, arg2: Internal.ItemStack, arg3: number, arg4: number, arg5: number, arg6: boolean): Internal.List<Internal.EnchantmentData>;
        getAttributeModifiers(arg0: EquipmentSlot_, arg1: Internal.ItemStack): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        onLeftClickEntity(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.Entity): boolean;
        canEquip(arg0: Internal.ItemStack, arg1: EquipmentSlot_, arg2: Internal.Entity): boolean;
        getDurabilityForDisplay(arg0: Internal.ItemStack): number;
        onBlockStartBreak(arg0: Internal.ItemStack, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.MobEntity): void;
        canContinueUsing(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        getEntityLifespan(arg0: Internal.ItemStack, arg1: Internal.World): number;
        getArmorTexture(arg0: Internal.ItemStack, arg1: Internal.Entity, arg2: EquipmentSlot_, arg3: string): string;
        hasCustomEntity(arg0: Internal.ItemStack): boolean;
        getHighlightTip(arg0: Internal.ItemStack, arg1: Internal.ITextComponent_): Internal.ITextComponent;
        getMaxDamage(arg0: Internal.ItemStack): number;
        getCreatorModId(arg0: Internal.ItemStack): string;
        isDamaged(arg0: Internal.ItemStack): boolean;
        onArmorTick(arg0: Internal.ItemStack, arg1: Internal.World, arg2: Internal.PlayerEntity): void;
        hasContainerItem(arg0: Internal.ItemStack): boolean;
        isShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        doesSneakBypassUse(arg0: Internal.ItemStack, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        onItemUseFirst(arg0: Internal.ItemStack, arg1: Internal.ItemUseContext): Internal.ActionResultType;
        getContainerItem(arg0: Internal.ItemStack): Internal.ItemStack;
        setRegistryName(arg0: ResourceLocation_): any;
        getEquipmentSlot(arg0: Internal.ItemStack): EquipmentSlot;
        getItemStackLimit(arg0: Internal.ItemStack): number;
        getFontRenderer(arg0: Internal.ItemStack): Internal.FontRenderer;
        forciblyAllowsTableEnchantment(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        makesPiglinsNeutral(arg0: Internal.ItemStack, arg1: Internal.LivingEntity): boolean;
        getFluid(): Internal.Fluid;
        isEnderMask(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity, arg2: Internal.EndermanEntity): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack, arg1: Internal.Enchantment_): boolean;
        get item(): Internal.Item;
        get creativeTabs(): Internal.Collection<Internal.ItemGroup>;
        get fluid(): Internal.Fluid;
        get fluidKJS(): Internal.Fluid;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Fluid, arg1: Internal.Item$Properties);
        constructor(arg0: java_.util.function_.Supplier<Internal.Fluid>, arg1: Internal.Item$Properties);
    }
    type BucketItem_ = BucketItem;
    class BoatEntity$Status extends Internal.Enum<Internal.BoatEntity$Status> {
        static valueOf(arg0: string): Internal.BoatEntity$Status;
        static values(): Internal.BoatEntity$Status[];
        static readonly UNDER_WATER: Internal.BoatEntity$Status;
        static readonly UNDER_FLOWING_WATER: Internal.BoatEntity$Status;
        static readonly IN_AIR: Internal.BoatEntity$Status;
        static readonly IN_WATER: Internal.BoatEntity$Status;
        static readonly ON_LAND: Internal.BoatEntity$Status;
    }
    type BoatEntity$Status_ = "in_water" | "under_water" | "under_flowing_water" | "on_land" | "in_air" | BoatEntity$Status;
    class ModuleLayer$Controller extends Document.Object {
        enableNativeAccess(arg0: Internal.Module): Internal.ModuleLayer$Controller;
        addReads(arg0: Internal.Module, arg1: Internal.Module): Internal.ModuleLayer$Controller;
        addExports(arg0: Internal.Module, arg1: string, arg2: Internal.Module): Internal.ModuleLayer$Controller;
        addOpens(arg0: Internal.Module, arg1: string, arg2: Internal.Module): Internal.ModuleLayer$Controller;
        layer(): Internal.ModuleLayer;
    }
    type ModuleLayer$Controller_ = ModuleLayer$Controller;
    interface InstantSource {
        withZone(arg0: Internal.ZoneId): Internal.Clock;
        millis(): number;
        instant(): Internal.Instant;
        (): Internal.Instant;
    }
    type InstantSource_ = (()=>Internal.Instant) | InstantSource;
    interface BlockPredicate {
        check(arg0: Internal.BlockContainerJS): boolean;
        (arg0: Internal.BlockContainerJS): boolean;
    }
    type BlockPredicate_ = ((arg0: Internal.BlockContainerJS)=>boolean) | BlockPredicate;
    abstract class SmartTileEntity extends Internal.SyncedTileEntity implements Internal.ITickableTileEntity, Internal.IPartialSafeNBT, Internal.IInteractionChecker {
        requestModelDataUpdate(): void;
        writeSafe(arg0: Internal.CompoundNBT_, arg1: boolean): void;
        getWorld(): Internal.World;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        sendToContainer(arg0: Internal.PacketBuffer): void;
        addBehavioursDeferred(arg0: Internal.List<Internal.TileEntityBehaviour>): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_73660_a(): void;
        lazyTick(): void;
        addBehaviours(arg0: Internal.List<Internal.TileEntityBehaviour>): void;
        setLazyTickRate(arg0: number): void;
        canPlayerUse(arg0: Internal.PlayerEntity): boolean;
        markVirtual(): void;
        getBehaviour<T_>(arg0: Internal.BehaviourType<T_>): T_;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRequiredItems(): Internal.ItemRequirement;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onLoad(): void;
        initialize(): void;
        isVirtual(): boolean;
        get virtual(): boolean;
        get world(): Internal.World;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get requiredItems(): Internal.ItemRequirement;
        get tileEntity(): Internal.TileEntity;
        set lazyTickRate(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TileEntityType<any>);
    }
    type SmartTileEntity_ = SmartTileEntity;
    interface InputIngredient <TYPE> extends Internal.Predicate<TYPE> {
        serialize(): Internal.JsonElement;
        testType(arg0: TYPE): boolean;
        getMatchingInstance(arg0: TYPE): TYPE;
        getRepresentations(): Internal.List<TYPE>;
        write(arg0: Internal.PacketBuffer): void;
        getNeededAmount(arg0: TYPE): number;
    }
    type InputIngredient_<TYPE> = InputIngredient<TYPE>;
    abstract class PlayerDataJS <E, P> extends Document.Object implements Internal.WithAttachedData {
        getPlayer(): P;
        getMinecraftPlayer(): E;
        getName(): string;
        getProfile(): Internal.GameProfile;
        hasClientMod(): boolean;
        getId(): Internal.UUID;
        getOverworld(): Internal.WorldJS;
        getData(): Internal.AttachedData;
        get data(): Internal.AttachedData;
        get minecraftPlayer(): E;
        get profile(): Internal.GameProfile;
        get name(): string;
        get id(): Internal.UUID;
        get overworld(): Internal.WorldJS;
        get player(): P;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PlayerDataJS_<E, P> = PlayerDataJS<E, P>;
    class Runtime$Version extends Document.Object implements Internal.Comparable<Internal.Runtime$Version> {
        compareToIgnoreOptional(arg0: Internal.Runtime$Version): number;
        pre(): Internal.Optional<string>;
        minor(): number;
        update(): number;
        optional(): Internal.Optional<string>;
        static parse(arg0: string): Internal.Runtime$Version;
        compareTo(arg0: Internal.Runtime$Version): number;
        compareTo(arg0: any): number;
        version(): Internal.List<number>;
        patch(): number;
        equalsIgnoreOptional(arg0: any): boolean;
        security(): number;
        major(): number;
        feature(): number;
        interim(): number;
        build(): Internal.Optional<number>;
    }
    type Runtime$Version_ = Runtime$Version;
    abstract class ColorSpace extends Document.Object implements Internal.Serializable {
        fromRGB(arg0: number[]): number[];
        getMinValue(arg0: number): number;
        isCS_sRGB(): boolean;
        toCIEXYZ(arg0: number[]): number[];
        getName(arg0: number): string;
        fromCIEXYZ(arg0: number[]): number[];
        toRGB(arg0: number[]): number[];
        getNumComponents(): number;
        getType(): number;
        getMaxValue(arg0: number): number;
        static getInstance(arg0: number): Internal.ColorSpace;
        static readonly TYPE_ECLR: 24;
        static readonly TYPE_Lab: 1;
        static readonly TYPE_Luv: 2;
        static readonly TYPE_RGB: 5;
        static readonly TYPE_GRAY: 6;
        static readonly TYPE_CMY: 11;
        static readonly TYPE_CCLR: 22;
        static readonly TYPE_ACLR: 20;
        static readonly TYPE_HSV: 7;
        static readonly TYPE_YCbCr: 3;
        static readonly TYPE_7CLR: 17;
        static readonly CS_LINEAR_RGB: 1004;
        static readonly TYPE_9CLR: 19;
        static readonly TYPE_5CLR: 15;
        static readonly CS_sRGB: 1000;
        static readonly TYPE_3CLR: 13;
        static readonly CS_PYCC: 1002;
        static readonly TYPE_XYZ: 0;
        static readonly TYPE_FCLR: 25;
        static readonly TYPE_DCLR: 23;
        static readonly TYPE_HLS: 8;
        static readonly TYPE_CMYK: 9;
        static readonly TYPE_BCLR: 21;
        static readonly CS_GRAY: 1003;
        static readonly TYPE_8CLR: 18;
        static readonly TYPE_6CLR: 16;
        static readonly TYPE_4CLR: 14;
        static readonly TYPE_Yxy: 4;
        static readonly TYPE_2CLR: 12;
        static readonly CS_CIEXYZ: 1001;
        get cS_sRGB(): boolean;
        get type(): number;
        get numComponents(): number;
    }
    type ColorSpace_ = ColorSpace;
    class ClientBossInfo extends Internal.BossInfo {
        func_186765_a(arg0: Internal.SUpdateBossInfoPacket): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SUpdateBossInfoPacket);
    }
    type ClientBossInfo_ = ClientBossInfo;
    class RaidDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_222906_a(arg0: Internal.Collection<BlockPos>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type RaidDebugRenderer_ = RaidDebugRenderer;
    interface Era extends Internal.TemporalAccessor, Internal.TemporalAdjuster {
        getLong(arg0: Internal.TemporalField): number;
        getValue(): number;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        get(arg0: Internal.TemporalField): number;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        isSupported(arg0: Internal.TemporalField): boolean;
        (): number;
    }
    type Era_ = (()=>number) | Era;
    interface ScatteringByteChannel extends Internal.ReadableByteChannel {
        read(arg0: Internal.ByteBuffer[], arg1: number, arg2: number): number;
        read(arg0: Internal.ByteBuffer[]): number;
    }
    type ScatteringByteChannel_ = ScatteringByteChannel;
    class ZombifiedPiglinEntity extends Internal.ZombieEntity implements Internal.IAngerable {
        shouldRiderSit(): boolean;
        func_230256_F__(): number;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        static func_234351_b_(arg0: Internal.EntityType_<Internal.ZombifiedPiglinEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        static func_234352_eU_(): Internal.AttributeModifierMap$MutableAttribute;
        func_230260_a__(arg0: number): void;
        func_233682_c_(arg0: Internal.CompoundNBT_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_233681_b_(arg0: Internal.PlayerEntity): void;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_241358_a_(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT_): void;
        func_230257_G__(): Internal.UUID;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_233678_J__(): boolean;
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        func_230258_H__(): void;
        func_241355_J__(): void;
        canRiderInteract(): boolean;
        func_233680_b_(arg0: Internal.LivingEntity): boolean;
        func_241359_a_(arg0: Internal.ServerWorld, arg1: boolean): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_241357_a_(arg0: Internal.World): boolean;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_241356_K__(): void;
        func_230259_a_(arg0: Internal.UUID): void;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ZombifiedPiglinEntity>, arg1: Internal.World);
    }
    type ZombifiedPiglinEntity_ = ZombifiedPiglinEntity;
    class ChunkRenderCache extends Document.Object {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ChunkRenderCache_ = ChunkRenderCache;
    class TeamProperties extends Document.Object {
        read(arg0: Internal.CompoundNBT_): void;
        read(arg0: Internal.PacketBuffer): void;
        set<T_>(arg0: Internal.TeamProperty<T_>, arg1: T_): void;
        updateFrom(arg0: Internal.TeamProperties): Internal.TeamProperties;
        get<T_>(arg0: Internal.TeamProperty<T_>): T_;
        copy(): Internal.TeamProperties;
        write(arg0: Internal.PacketBuffer): void;
        write(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        collect(): Internal.TeamProperties;
        readonly map: Internal.Map<Internal.TeamProperty, Internal.TeamPropertyValue>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TeamProperties_ = TeamProperties;
    interface SourceClassRegistry$SourceProvider {
        getIdentifier(): ResourceLocation;
        provideEmptySource(): Internal.IIndependentStarlightSource;
    }
    type SourceClassRegistry$SourceProvider_ = SourceClassRegistry$SourceProvider;
    class ConduitTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity {
        requestModelDataUpdate(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_205738_a(arg0: Internal.SoundEvent_): void;
        func_73660_a(): void;
        func_205036_a(arg0: number): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        func_207737_d(): boolean;
        func_205039_c(): boolean;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        static field_205042_e: Internal.Block[];
        field_205041_a: number;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.TileEntityType<any>);
    }
    type ConduitTileEntity_ = ConduitTileEntity;
    class PlayerInventory extends Document.Object implements Internal.IInventory, Internal.INameable {
        func_94041_b(arg0: number, arg1: Internal.ItemStack): boolean;
        func_201571_a(arg0: Internal.RecipeItemHelper): void;
        func_191971_c(arg0: number, arg1: Internal.ItemStack): boolean;
        func_70301_a(arg0: number): Internal.ItemStack;
        func_191975_a(arg0: Internal.World, arg1: Internal.ItemStack): void;
        func_70445_o(): Internal.ItemStack;
        func_234564_a_(arg0: Internal.Predicate_<Internal.ItemStack_>, arg1: number, arg2: Internal.IInventory): number;
        func_199712_a(arg0: Internal.ITag<Internal.Item>): boolean;
        func_70302_i_(): number;
        func_184438_a(arg0: Internal.BlockState): number;
        func_70443_b(arg0: Internal.ListNBT): void;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        func_184434_a(arg0: Internal.ItemStack): void;
        func_184430_d(arg0: number): void;
        func_70447_i(): number;
        handler$bnj000$insertStackInME(arg0: Internal.ItemStack, arg1: Internal.CallbackInfoReturnable<any>): void;
        func_70299_a(arg0: number, arg1: Internal.ItemStack): void;
        func_194015_p(): number;
        func_70298_a(arg0: number, arg1: number): Internal.ItemStack;
        func_234563_a_(arg0: Internal.DamageSource_, arg1: number): void;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70436_m(): void;
        func_70441_a(arg0: Internal.ItemStack): boolean;
        func_70297_j_(): number;
        func_70432_d(arg0: Internal.ItemStack): number;
        static func_70451_h(): number;
        func_70455_b(arg0: Internal.PlayerInventory): void;
        func_200200_C_(): Internal.ITextComponent;
        func_195409_a(arg0: number): void;
        func_70304_b(arg0: number): Internal.ItemStack;
        func_174888_l(): void;
        func_70429_k(): void;
        func_70300_a(arg0: Internal.PlayerEntity): boolean;
        func_194014_c(arg0: Internal.ItemStack): number;
        func_145748_c_(): Internal.ITextComponent;
        func_145818_k_(): boolean;
        func_184433_k(): number;
        func_70440_f(arg0: number): Internal.ItemStack;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        func_184437_d(arg0: Internal.ItemStack): void;
        func_70442_a(arg0: Internal.ListNBT): Internal.ListNBT;
        static func_184435_e(arg0: number): boolean;
        func_200201_e(): Internal.ITextComponent;
        func_70448_g(): Internal.ItemStack;
        func_70296_d(): void;
        func_213901_a(arg0: Internal.Item_): number;
        func_184429_b(arg0: Internal.ItemStack): number;
        func_70437_b(arg0: Internal.ItemStack): void;
        func_70431_c(arg0: Internal.ItemStack): boolean;
        func_191420_l(): boolean;
        readonly field_70458_d: Internal.PlayerEntity;
        readonly field_70460_b: Internal.NonNullList<Internal.ItemStack>;
        readonly field_70462_a: Internal.NonNullList<Internal.ItemStack>;
        readonly field_184439_c: Internal.NonNullList<Internal.ItemStack>;
        field_70461_c: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PlayerEntity);
    }
    type PlayerInventory_ = PlayerInventory;
    class ToastGui extends Internal.AbstractGui {
        func_192990_a<T_>(arg0: Internal.Class<T_>, arg1: any): T_;
        func_238541_a_(arg0: Internal.MatrixStack): void;
        func_192989_b(): Internal.Minecraft;
        func_191788_b(): void;
        func_192988_a(arg0: Internal.IToast_): void;
        field_191792_h: Internal.Deque<Internal.IToast>;
        field_191791_g: any[];
        field_191790_f: Internal.Minecraft;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type ToastGui_ = ToastGui;
    class ItemRegistryEventJS extends Internal.StartupEventJS {
        create(name: string, callback: Internal.Consumer_<Internal.ItemBuilder_>): void;
        create(name: string): Internal.ItemBuilder;
        createFood(builder: java_.util.function_.Supplier_<Internal.FoodBuilder_>): java_.util.function_.Supplier<Internal.FoodBuilder>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ItemRegistryEventJS_ = ItemRegistryEventJS;
    abstract class TypeToken <T> extends Internal.TypeCapture<T> implements Internal.Serializable {
        getRawType(): Internal.Class<T>;
        resolveType(arg0: Internal.Type): Internal.TypeToken<any>;
        method(arg0: Internal.Method): Internal.Invokable<T, any>;
        unwrap(): Internal.TypeToken<T>;
        isSubtypeOf(arg0: Internal.TypeToken<any>): boolean;
        isSubtypeOf(arg0: Internal.Type): boolean;
        getType(): Internal.Type;
        getComponentType(): Internal.TypeToken<any>;
        static of(arg0: Internal.Type): Internal.TypeToken<any>;
        static of<T_>(arg0: Internal.Class<T_>): Internal.TypeToken<T_>;
        getSubtype(arg0: Internal.Class<any>): Internal.TypeToken<T>;
        getSupertype(arg0: Internal.Class<T>): Internal.TypeToken<T>;
        where<X_>(arg0: Internal.TypeParameter<X_>, arg1: Internal.Class<X_>): Internal.TypeToken<T>;
        where<X_>(arg0: Internal.TypeParameter<X_>, arg1: Internal.TypeToken<X_>): Internal.TypeToken<T>;
        isArray(): boolean;
        getTypes(): Internal.TypeToken$TypeSet<>;
        isSupertypeOf(arg0: Internal.TypeToken<any>): boolean;
        isSupertypeOf(arg0: Internal.Type): boolean;
        wrap(): Internal.TypeToken<T>;
        isPrimitive(): boolean;
        get componentType(): Internal.TypeToken<any>;
        get types(): Internal.TypeToken$TypeSet<>;
        get rawType(): Internal.Class<T>;
        get primitive(): boolean;
        get array(): boolean;
        get type(): Internal.Type;
    }
    type TypeToken_<T> = TypeToken<T>;
    class LivingEvent extends Internal.EntityEvent {
        getEntityLiving(): Internal.LivingEntity;
        get entityLiving(): Internal.LivingEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity);
    }
    type LivingEvent_ = LivingEvent;
    class ListJigsawPiece extends Internal.JigsawPiece {
        field_214867_a: Internal.List<Internal.JigsawPiece>;
        static readonly field_236834_a_: Internal.Codec<Internal.ListJigsawPiece>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.List<Internal.JigsawPiece>, arg1: Internal.JigsawPattern$PlacementBehaviour);
    }
    type ListJigsawPiece_ = ListJigsawPiece;
    class SPlayerPositionLookPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186965_f(): number;
        func_148928_d(): number;
        func_148931_f(): number;
        func_148930_g(): number;
        func_148933_e(): number;
        func_148932_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_179834_f(): Internal.Set<Internal.SPlayerPositionLookPacket$Flags>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.Set<Internal.SPlayerPositionLookPacket$Flags>, arg6: number);
    }
    type SPlayerPositionLookPacket_ = SPlayerPositionLookPacket;
    class RenderArmEvent extends net.minecraftforge.eventbus.api.Event {
        getPlayer(): Internal.AbstractClientPlayerEntity;
        getMultiBufferSource(): Internal.IRenderTypeBuffer;
        getArm(): Internal.HandSide;
        getPoseStack(): Internal.MatrixStack;
        getPackedLight(): number;
        get multiBufferSource(): Internal.IRenderTypeBuffer;
        get poseStack(): Internal.MatrixStack;
        get arm(): Internal.HandSide;
        get player(): Internal.AbstractClientPlayerEntity;
        get packedLight(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer, arg2: number, arg3: Internal.AbstractClientPlayerEntity, arg4: Internal.HandSide);
    }
    type RenderArmEvent_ = RenderArmEvent;
    interface Flushable {
        flush(): void;
        (): void;
    }
    type Flushable_ = (()=>void) | Flushable;
    interface ISuggestionProvider {
        func_197010_l(): Internal.Collection<ResourceLocation>;
        func_197012_k(): Internal.Collection<string>;
        func_197034_c(arg0: number): boolean;
        func_199612_m(): Internal.Stream<ResourceLocation>;
        func_197009_a(arg0: Internal.CommandContext<Internal.ISuggestionProvider>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        func_197011_j(): Internal.Collection<string>;
        func_241861_q(): Internal.DynamicRegistries;
        func_230390_p_(): Internal.Set<Internal.RegistryKey<Internal.World>>;
        func_217293_r(): Internal.Collection<Internal.ISuggestionProvider$Coordinates>;
        func_217294_q(): Internal.Collection<Internal.ISuggestionProvider$Coordinates>;
        func_211270_p(): Internal.Collection<string>;
    }
    type ISuggestionProvider_ = ISuggestionProvider;
    class ObjectArrayList <K> extends Internal.AbstractObjectList<K> implements Internal.RandomAccess, Internal.Cloneable, Internal.Serializable {
        compareTo(arg0: Internal.ObjectArrayList<K>): number;
        removeLast(): K;
        getLast(): K;
        replaceAll(arg0: Internal.UnaryOperator<K>): void;
        remove(arg0: number): K;
        addLast(arg0: K): void;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.ObjectIterator<any>;
        trim(arg0: number): void;
        trim(): void;
        stream(): Internal.Stream<K>;
        getFirst(): K;
        removeFirst(): K;
        get(arg0: number): K;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<K>;
        subList(arg0: number, arg1: number): Internal.List<any>;
        set(arg0: number, arg1: K): K;
        spliterator(): Internal.Spliterator<K>;
        forEach(arg0: Internal.Consumer_<K>): void;
        sort(arg0: Internal.Comparator<K>): void;
        removeIf(arg0: Internal.Predicate_<K>): boolean;
        elements(): K[];
        equals(arg0: Internal.ObjectArrayList<K>): boolean;
        clone(): Internal.ObjectArrayList<K>;
        clone(): any;
        listIterator(arg0: number): Internal.ObjectListIterator<K>;
        listIterator(arg0: number): Internal.ListIterator<any>;
        listIterator(): Internal.ListIterator<any>;
        ensureCapacity(arg0: number): void;
        static wrap<K_>(arg0: K_[], arg1: number): Internal.ObjectArrayList<K_>;
        static wrap<K_>(arg0: K_[]): Internal.ObjectArrayList<K_>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<K>;
        addFirst(arg0: K): void;
        static readonly DEFAULT_INITIAL_CAPACITY: 10;
        get last(): K;
        get first(): K;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ObjectList<K>);
        constructor(arg0: K[]);
        constructor(arg0: K[], arg1: number, arg2: number);
        constructor(arg0: Internal.Iterator<K>);
        constructor(arg0: Internal.ObjectIterator<K>);
        constructor(arg0: number);
        constructor();
        constructor(arg0: Internal.Collection<K>);
        constructor(arg0: Internal.ObjectCollection<K>);
    }
    type ObjectArrayList_<K> = ObjectArrayList<K>;
    class TinkerDataCapability$Holder extends Document.Object {
        contains(arg0: Internal.TinkerDataCapability$TinkerDataKey<any>): boolean;
        computeIfAbsent<T_, U_>(arg0: U_): T_;
        get<T_>(arg0: Internal.TinkerDataCapability$TinkerDataKey<T_>): T_;
        get<S_, T_>(arg0: Internal.TinkerDataCapability$TinkerDataKey<T_>, arg1: S_): S_;
        put<T_>(arg0: Internal.TinkerDataCapability$TinkerDataKey<T_>, arg1: T_): void;
        remove(arg0: Internal.TinkerDataCapability$TinkerDataKey<any>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type TinkerDataCapability$Holder_ = TinkerDataCapability$Holder;
    class DonkeyEntity extends Internal.DyingChestedHorseEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        formatLoc(arg0: Vec3): string;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.DonkeyEntity>, arg1: Internal.World);
    }
    type DonkeyEntity_ = DonkeyEntity;
    class EntityAIDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_217682_a(arg0: number, arg1: Internal.List<Internal.EntityAIDebugRenderer$Entry>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type EntityAIDebugRenderer_ = EntityAIDebugRenderer;
    class SAnimateBlockBreakPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148845_c(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179821_b(): BlockPos;
        func_148846_g(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: BlockPos, arg2: number);
    }
    type SAnimateBlockBreakPacket_ = SAnimateBlockBreakPacket;
    interface FurnaceTEAccess {
        getRecipeType(): Internal.IRecipeType<Internal.AbstractCookingRecipe>;
        getDataAccess(): Internal.IIntArray;
    }
    type FurnaceTEAccess_ = FurnaceTEAccess;
    class BookmarkProvider extends Document.Object {
        getIndex(): number;
        getGuiScreen(): Internal.Screen;
        getTextureBookmarkStretched(): Internal.AbstractRenderableTexture;
        canSee(): boolean;
        getUnlocalizedName(): Internal.IFormattableTextComponent;
        getTextureBookmark(): Internal.AbstractRenderableTexture;
        get textureBookmark(): Internal.AbstractRenderableTexture;
        get textureBookmarkStretched(): Internal.AbstractRenderableTexture;
        get unlocalizedName(): Internal.IFormattableTextComponent;
        get index(): number;
        get guiScreen(): Internal.Screen;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: number, arg2: java_.util.function_.Supplier<Internal.Screen>, arg3: java_.util.function_.Supplier<boolean>);
    }
    type BookmarkProvider_ = BookmarkProvider;
    class NonNullList <E> extends Internal.AbstractList<E> {
        static func_193580_a<E_>(arg0: E_, ...arg1: E_[]): Internal.NonNullList<E_>;
        set(arg0: number, arg1: E): E;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        sort(arg0: Internal.Comparator<E>): void;
        removeLast(): E;
        getLast(): E;
        replaceAll(arg0: Internal.UnaryOperator<E>): void;
        remove(arg0: number): E;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        addLast(arg0: E): void;
        stream(): Internal.Stream<E>;
        getFirst(): E;
        removeFirst(): E;
        get(arg0: number): E;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        parallelStream(): Internal.Stream<E>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<E>;
        addFirst(arg0: E): void;
        static func_191197_a<E_>(arg0: number, arg1: E_): Internal.NonNullList<E_>;
        static func_191196_a<E_>(): Internal.NonNullList<E_>;
        get last(): E;
        get first(): E;
    }
    type NonNullList_<E> = NonNullList<E>;
    class AlternativesLootEntry$Builder extends Internal.LootEntry$Builder<Internal.AlternativesLootEntry$Builder> {
        func_212862_c_(): any;
        func_212840_b_(arg0: Internal.ILootCondition$IBuilder_): any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LootEntry$Builder<any>[]);
    }
    type AlternativesLootEntry$Builder_ = AlternativesLootEntry$Builder;
    class StructureSeparationSettings extends Document.Object {
        func_236671_b_(): number;
        func_236668_a_(): number;
        func_236673_c_(): number;
        static readonly field_236664_a_: Internal.Codec<Internal.StructureSeparationSettings>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type StructureSeparationSettings_ = StructureSeparationSettings;
    interface StringBuilderAppendable {
        appendString(arg0: Internal.StringBuilder): void;
        (arg0: Internal.StringBuilder): void;
    }
    type StringBuilderAppendable_ = ((arg0: Internal.StringBuilder)=>void) | StringBuilderAppendable;
    class DragGestureEvent extends Internal.EventObject {
        getSourceAsDragGestureRecognizer(): Internal.DragGestureRecognizer;
        getDragAction(): number;
        iterator(): Internal.Iterator<Internal.InputEvent>;
        getTriggerEvent(): Internal.InputEvent;
        getDragOrigin(): Internal.Point;
        getDragSource(): Internal.DragSource;
        startDrag(arg0: Internal.Cursor, arg1: Internal.Image, arg2: Internal.Point, arg3: Internal.Transferable, arg4: Internal.DragSourceListener): void;
        startDrag(arg0: Internal.Cursor, arg1: Internal.Transferable, arg2: Internal.DragSourceListener): void;
        startDrag(arg0: Internal.Cursor, arg1: Internal.Transferable): void;
        toArray(arg0: any[]): any[];
        toArray(): any[];
        getComponent(): Internal.Component;
        get component(): Internal.Component;
        get sourceAsDragGestureRecognizer(): Internal.DragGestureRecognizer;
        get triggerEvent(): Internal.InputEvent;
        get dragAction(): number;
        get dragSource(): Internal.DragSource;
        get dragOrigin(): Internal.Point;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DragGestureRecognizer, arg1: number, arg2: Internal.Point, arg3: Internal.List<Internal.InputEvent>);
    }
    type DragGestureEvent_ = DragGestureEvent;
    class JigsawPattern extends Document.Object implements Internal.JigsawPatternAccessor {
        repurposedstructures_getTemplates(): Internal.List<any>;
        repurposedstructures_getRawTemplates(): Internal.List<any>;
        func_214943_b(arg0: Internal.Random): Internal.List<Internal.JigsawPiece>;
        func_214944_a(arg0: Internal.Random): Internal.JigsawPiece;
        func_214945_a(arg0: Internal.TemplateManager): number;
        func_214947_b(): ResourceLocation;
        func_214946_c(): number;
        func_214948_a(): ResourceLocation;
        repurposedstructures_setRawTemplates(arg0: Internal.List<any>): void;
        repurposedstructures_setTemplates(arg0: Internal.List<any>): void;
        static readonly field_236852_a_: Internal.Codec<Internal.JigsawPattern>;
        static readonly field_244392_b_: Internal.Codec<java_.util.function_.Supplier<Internal.JigsawPattern>>;
        field_214953_e: Internal.List<Internal.JigsawPiece>;
        field_214952_d: Internal.List<Internal.Pair<Internal.JigsawPiece, number>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: ResourceLocation, arg2: Internal.List<Internal.Pair<Internal.JigsawPiece, number>>);
        constructor(arg0: ResourceLocation, arg1: ResourceLocation, arg2: Internal.List<Internal.Pair<Internal.Function<Internal.JigsawPattern$PlacementBehaviour, Internal.JigsawPiece>, number>>, arg3: Internal.JigsawPattern$PlacementBehaviour);
    }
    type JigsawPattern_ = JigsawPattern;
    class ResearchNode extends Document.Object {
        getKey(): string;
        addSourceConnectionsFrom(arg0: Internal.Collection<Internal.ResearchNode>): Internal.ResearchNode;
        getName(): Internal.ITextComponent;
        addSourceConnectionFrom(arg0: Internal.ResearchNode): Internal.ResearchNode;
        addSourceConnectionFrom(...arg0: Internal.ResearchNode[]): Internal.ResearchNode;
        getRenderItemStack(arg0: number): Internal.ItemStack;
        getRenderItemStack(): Internal.ItemStack;
        getConnectionsTo(): Internal.List<Internal.ResearchNode>;
        setTextureColorHintWithAlpha(arg0: java_.awt.Color): Internal.ResearchNode;
        addTomeLookup(arg0: Internal.IItemProvider_, arg1: number, arg2: Internal.ResearchProgression_): Internal.ResearchNode;
        addTomeLookup(arg0: Internal.ItemStack, arg1: number, arg2: Internal.ResearchProgression_): Internal.ResearchNode;
        getBackgroundTexture(): Internal.TextureQuery;
        addPage(arg0: Internal.JournalPage_): Internal.ResearchNode;
        getNodeRenderType(): Internal.ResearchNode$NodeRenderType;
        getSpriteTexture(): Internal.SpriteQuery;
        canSee(arg0: Internal.PlayerProgress): boolean;
        getPages(): Internal.List<Internal.JournalPage>;
        getTextureColorHint(): java_.awt.Color;
        register(arg0: Internal.ResearchProgression_): Internal.ResearchNode;
        readonly renderPosX: number;
        readonly renderPosZ: number;
        get renderItemStack(): Internal.ItemStack;
        get textureColorHint(): java_.awt.Color;
        get pages(): Internal.List<Internal.JournalPage>;
        get backgroundTexture(): Internal.TextureQuery;
        get name(): Internal.ITextComponent;
        get connectionsTo(): Internal.List<Internal.ResearchNode>;
        get nodeRenderType(): Internal.ResearchNode$NodeRenderType;
        get spriteTexture(): Internal.SpriteQuery;
        get key(): string;
        set textureColorHintWithAlpha(arg0: java_.awt.Color);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IItemProvider[], arg1: string, arg2: number, arg3: number);
        constructor(arg0: Internal.ItemStack[], arg1: string, arg2: number, arg3: number);
        constructor(arg0: Internal.SpriteQuery, arg1: string, arg2: number, arg3: number);
        constructor(arg0: Internal.IItemProvider, arg1: string, arg2: number, arg3: number);
        constructor(arg0: Internal.ItemStack, arg1: string, arg2: number, arg3: number);
    }
    type ResearchNode_ = ResearchNode;
    class LightningBoltEntity extends Internal.Entity {
        shouldRiderSit(): boolean;
        func_233623_a_(arg0: boolean): void;
        getDamage(): number;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        func_204809_d(arg0: Internal.ServerPlayerEntity): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        setDamage(arg0: number): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        handler$cci001$handleLightning(arg0: Internal.CallbackInfo, arg1: number, arg2: Internal.List<any>): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        handler$bmf000$handleLightning(ci: Internal.CallbackInfo, d0: number, list: Internal.List<any>): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_70264_a: number;
        get damage(): number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        set damage(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.LightningBoltEntity>, arg1: Internal.World);
    }
    type LightningBoltEntity_ = LightningBoltEntity;
    interface TeleportingEntity {
        beGetExitPos(): BlockPos;
        hasCooldown(): boolean;
        beSetExitPos(arg0: BlockPos): void;
        beSetCooldown(arg0: number): void;
        beCanTeleport(): boolean;
        beResetExitPos(): void;
        beGetCooldown(): number;
    }
    type TeleportingEntity_ = TeleportingEntity;
    interface IMachineComponentManager {
        getServer(): Internal.MinecraftServer;
        getTile(): Internal.MachineTile;
        getComparatorInputComponents(): Internal.List<Internal.IComparatorInputComponent>;
        hasComponent(arg0: Internal.MachineComponentType_<any>): boolean;
        getWorld(): Internal.World;
        markDirty(): void;
        getTickableComponents(): Internal.List<Internal.ITickableComponent>;
        getCapabilityComponents(): Internal.List<Internal.ICapabilityComponent>;
        getComponents(): Internal.List<Internal.IMachineComponent>;
        getSyncableComponents(): Internal.List<Internal.ISyncableStuff>;
        getComponent<T>(arg0: Internal.MachineComponentType_<T>): Internal.Optional<T>;
        getSerializableComponents(): Internal.List<Internal.ISerializableComponent>;
        getComponentHandler<T>(arg0: Internal.MachineComponentType_<T>): Internal.Optional<Internal.IComponentHandler<T>>;
    }
    type IMachineComponentManager_ = IMachineComponentManager;
    class PackMetadataSectionSerializer extends Document.Object implements Internal.IMetadataSectionSerializer<Internal.PackMetadataSection> {
        func_195812_a(arg0: Internal.JsonObject): any;
        func_195812_a(arg0: Internal.JsonObject): Internal.PackMetadataSection;
        func_110483_a(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PackMetadataSectionSerializer_ = PackMetadataSectionSerializer;
    abstract class NumberFormat extends Internal.Format {
        getCurrency(): Internal.Currency;
        isGroupingUsed(): boolean;
        setGroupingUsed(arg0: boolean): void;
        format(arg0: number, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        format(arg0: number, arg1: Internal.StringBuffer, arg2: Internal.FieldPosition): Internal.StringBuffer;
        format(arg0: number): string;
        format(arg0: number): string;
        setMinimumFractionDigits(arg0: number): void;
        parse(arg0: string, arg1: Internal.ParsePosition): Internal.Number;
        parse(arg0: string): Internal.Number;
        static getCurrencyInstance(arg0: Internal.Locale): Internal.NumberFormat;
        static getCurrencyInstance(): Internal.NumberFormat;
        setMaximumIntegerDigits(arg0: number): void;
        getMinimumFractionDigits(): number;
        getMaximumIntegerDigits(): number;
        static getPercentInstance(): Internal.NumberFormat;
        static getPercentInstance(arg0: Internal.Locale): Internal.NumberFormat;
        setCurrency(arg0: Internal.Currency): void;
        static getNumberInstance(): Internal.NumberFormat;
        static getNumberInstance(arg0: Internal.Locale): Internal.NumberFormat;
        setMinimumIntegerDigits(arg0: number): void;
        static getCompactNumberInstance(): Internal.NumberFormat;
        static getCompactNumberInstance(arg0: Internal.Locale, arg1: Internal.NumberFormat$Style_): Internal.NumberFormat;
        getRoundingMode(): Internal.RoundingMode;
        static getIntegerInstance(arg0: Internal.Locale): Internal.NumberFormat;
        static getIntegerInstance(): Internal.NumberFormat;
        getMaximumFractionDigits(): number;
        isParseIntegerOnly(): boolean;
        setRoundingMode(arg0: Internal.RoundingMode_): void;
        getMinimumIntegerDigits(): number;
        static getInstance(): Internal.NumberFormat;
        static getInstance(arg0: Internal.Locale): Internal.NumberFormat;
        setParseIntegerOnly(arg0: boolean): void;
        setMaximumFractionDigits(arg0: number): void;
        static getAvailableLocales(): Internal.Locale[];
        static readonly FRACTION_FIELD: 1;
        static readonly INTEGER_FIELD: 0;
        get instance(): Internal.NumberFormat;
        get parseIntegerOnly(): boolean;
        get groupingUsed(): boolean;
        get compactNumberInstance(): Internal.NumberFormat;
        get maximumIntegerDigits(): number;
        get availableLocales(): Internal.Locale[];
        get roundingMode(): Internal.RoundingMode;
        get maximumFractionDigits(): number;
        get minimumFractionDigits(): number;
        get currency(): Internal.Currency;
        get integerInstance(): Internal.NumberFormat;
        get numberInstance(): Internal.NumberFormat;
        get percentInstance(): Internal.NumberFormat;
        get minimumIntegerDigits(): number;
        get currencyInstance(): Internal.NumberFormat;
        set maximumFractionDigits(arg0: number);
        set roundingMode(arg0: Internal.RoundingMode_);
        set minimumFractionDigits(arg0: number);
        set parseIntegerOnly(arg0: boolean);
        set currency(arg0: Internal.Currency);
        set groupingUsed(arg0: boolean);
        set minimumIntegerDigits(arg0: number);
        set maximumIntegerDigits(arg0: number);
    }
    type NumberFormat_ = NumberFormat;
    class RPConfig$ClientBugFixes extends Document.Object implements Internal.ConfigData {
        validatePostLoad(): void;
        fixEndPortalsOnlyRenderingFromAbove: boolean;
        fixVillagerRobeTextures: boolean;
        fixInvisiblePlayerModel: boolean;
        fixWaterInCauldronsRenderingAsOpaque: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RPConfig$ClientBugFixes_ = RPConfig$ClientBugFixes;
    class PerlinNoiseGenerator extends Document.Object implements Internal.INoiseGenerator {
        func_215464_a(arg0: number, arg1: number, arg2: boolean): number;
        func_215460_a(arg0: number, arg1: number, arg2: number, arg3: number): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SharedSeedRandom, arg1: Internal.List<number>);
        constructor(arg0: Internal.SharedSeedRandom, arg1: Internal.IntStream);
    }
    type PerlinNoiseGenerator_ = PerlinNoiseGenerator;
    class TextStyle extends Internal.Enum<Internal.TextStyle> {
        asNormal(): Internal.TextStyle;
        static valueOf(arg0: string): Internal.TextStyle;
        isStandalone(): boolean;
        static values(): Internal.TextStyle[];
        asStandalone(): Internal.TextStyle;
        static readonly SHORT_STANDALONE: Internal.TextStyle;
        static readonly NARROW_STANDALONE: Internal.TextStyle;
        static readonly FULL_STANDALONE: Internal.TextStyle;
        static readonly FULL: Internal.TextStyle;
        static readonly SHORT: Internal.TextStyle;
        static readonly NARROW: Internal.TextStyle;
        get standalone(): boolean;
    }
    type TextStyle_ = "full" | "full_standalone" | "short" | "short_standalone" | "narrow" | "narrow_standalone" | TextStyle;
    class PotionEvent$PotionApplicableEvent extends Internal.PotionEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.EffectInstance);
    }
    type PotionEvent$PotionApplicableEvent_ = PotionEvent$PotionApplicableEvent;
    class RandomTickCallbackJS extends Document.Object {
        getServer(): Internal.ServerJS;
        getWorld(): Internal.WorldJS;
        random: Internal.Random;
        block: Internal.BlockContainerJS;
        get server(): Internal.ServerJS;
        get world(): Internal.WorldJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(containerJS: Internal.BlockContainerJS, random: Internal.Random);
    }
    type RandomTickCallbackJS_ = RandomTickCallbackJS;
    class ScrollBar extends Internal.Widget {
        closeGui(openPrevScreen: boolean): void;
        closeGui(): void;
        setCanAlwaysScrollPlane(v: boolean): void;
        setScrollStep(s: number): void;
        openGui(): void;
        getMaxValue(): number;
        run(): void;
        getMappedValue(max: number): number;
        openAfter(runnable: Internal.Runnable_): Internal.Runnable;
        drawScrollBar(matrixStack: Internal.MatrixStack, theme: Internal.Theme, x: number, y: number, w: number, h: number): void;
        closeContextMenu(): void;
        canMouseScroll(): boolean;
        onMoved(): void;
        setMaxValue(max: number): void;
        getValue(): number;
        openContextMenu(panel: Internal.Panel): void;
        canMouseScrollPlane(): boolean;
        showValueOnMouseOver(): boolean;
        getMinValue(): number;
        drawBackground(matrixStack: Internal.MatrixStack, theme: Internal.Theme, x: number, y: number, w: number, h: number): void;
        openGuiLater(): void;
        setValue(v: number): void;
        getScrollBarSize(): number;
        getScrollStep(): number;
        setCanAlwaysScroll(v: boolean): void;
        setMinValue(min: number): void;
        readonly plane: Internal.ScrollBar$Plane;
        get minValue(): number;
        get maxValue(): number;
        get scrollStep(): number;
        get scrollBarSize(): number;
        get value(): number;
        set canAlwaysScroll(v: boolean);
        set canAlwaysScrollPlane(v: boolean);
        set minValue(min: number);
        set maxValue(max: number);
        set scrollStep(s: number);
        set value(v: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(parent: Internal.Panel, p: Internal.ScrollBar$Plane, ss: number);
    }
    type ScrollBar_ = ScrollBar;
    class EndermiteEntity extends Internal.MonsterEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_175495_n(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        static func_234288_m_(): Internal.AttributeModifierMap$MutableAttribute;
        func_175496_a(arg0: boolean): void;
        static func_223328_b(arg0: Internal.EntityType_<Internal.EndermiteEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.EndermiteEntity>, arg1: Internal.World);
    }
    type EndermiteEntity_ = EndermiteEntity;
    class Chunk$CreateEntityType extends Internal.Enum<Internal.Chunk$CreateEntityType> {
        static valueOf(arg0: string): Internal.Chunk$CreateEntityType;
        static values(): Internal.Chunk$CreateEntityType[];
        static readonly QUEUED: Internal.Chunk$CreateEntityType;
        static readonly CHECK: Internal.Chunk$CreateEntityType;
        static readonly IMMEDIATE: Internal.Chunk$CreateEntityType;
    }
    type Chunk$CreateEntityType_ = "immediate" | "queued" | "check" | Chunk$CreateEntityType;
    interface TaskType$GuiProvider {
        openCreationGui(arg0: Internal.Runnable_, arg1: Internal.Quest, arg2: Internal.Consumer_<Internal.Task_>): void;
        (arg0: Internal.Runnable, arg1: Internal.Quest, arg2: Internal.Consumer<Internal.Task>): void;
    }
    type TaskType$GuiProvider_ = ((arg0: Internal.Runnable, arg1: Internal.Quest, arg2: Internal.Consumer<Internal.Task>)=>void) | TaskType$GuiProvider;
    class EntityMobGriefingEvent extends Internal.EntityEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity);
    }
    type EntityMobGriefingEvent_ = EntityMobGriefingEvent;
    class ChunkEvent$Unload extends Internal.ChunkEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IChunk);
        constructor();
    }
    type ChunkEvent$Unload_ = ChunkEvent$Unload;
    class BlastFurnaceFuelRecipeJS extends Internal.IERecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BlastFurnaceFuelRecipeJS_ = BlastFurnaceFuelRecipeJS;
    interface ITag$INamedTag <T> extends Internal.ITag<T> {
        func_230234_a_(): ResourceLocation;
        (): ResourceLocation;
    }
    type ITag$INamedTag_<T> = (()=>ResourceLocation) | ITag$INamedTag<T>;
    class RenderSkyboxCube extends Document.Object {
        func_217616_a(arg0: Internal.Minecraft, arg1: number, arg2: number, arg3: number): void;
        func_217617_a(arg0: Internal.TextureManager, arg1: Internal.Executor_): Internal.CompletableFuture<void>;
        field_209143_a: ResourceLocation[];
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type RenderSkyboxCube_ = RenderSkyboxCube;
    class CapabilityDispatcher extends Document.Object implements Internal.INBTSerializable<Internal.CompoundNBT>, Internal.ICapabilityProvider {
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        invalidate(): void;
        areCompatible(arg0: Internal.CapabilityDispatcher): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<ResourceLocation, Internal.ICapabilityProvider>, arg1: Internal.List<Internal.Runnable>);
        constructor(arg0: Internal.Map<ResourceLocation, Internal.ICapabilityProvider>, arg1: Internal.List<Internal.Runnable>, arg2: Internal.ICapabilityProvider);
    }
    type CapabilityDispatcher_ = CapabilityDispatcher;
    class ImageCapabilities extends Document.Object implements Internal.Cloneable {
        isAccelerated(): boolean;
        isTrueVolatile(): boolean;
        clone(): any;
        get trueVolatile(): boolean;
        get accelerated(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean);
    }
    type ImageCapabilities_ = ImageCapabilities;
    interface PrimitiveIterator$OfInt extends Internal.PrimitiveIterator<number, Internal.IntConsumer> {
        next(): any;
        next(): number;
        nextInt(): number;
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: Internal.IntConsumer_): void;
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
        (): number;
    }
    type PrimitiveIterator$OfInt_ = (()=>number) | PrimitiveIterator$OfInt;
    class TickEvent$RenderTickEvent extends Internal.TickEvent {
        readonly renderTickTime: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TickEvent$Phase, arg1: number);
        constructor();
    }
    type TickEvent$RenderTickEvent_ = TickEvent$RenderTickEvent;
    class TeleportationRepositioner$Result extends Document.Object {
        readonly field_243679_a: BlockPos;
        readonly field_243680_b: number;
        readonly field_243681_c: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: BlockPos, arg1: number, arg2: number);
    }
    type TeleportationRepositioner$Result_ = TeleportationRepositioner$Result;
    interface Command <S> {
        run(arg0: Internal.CommandContext<S>): number;
        (arg0: Internal.CommandContext<S>): number;
    }
    type Command_<S> = ((arg0: Internal.CommandContext<S>)=>number) | Command<S>;
    class ChemicalDissolutionRecipeJS extends Internal.MekanismRecipeJS {
        inputGas(arg0: any): Internal.ChemicalDissolutionRecipeJS;
        outputChemical(arg0: any): Internal.ChemicalDissolutionRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ChemicalDissolutionRecipeJS_ = ChemicalDissolutionRecipeJS;
    class SearchTreeManager extends Document.Object implements Internal.IResourceManagerReloadListener {
        func_195410_a(arg0: Internal.IResourceManager): void;
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage_, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        func_215357_a<T_>(arg0: Internal.SearchTreeManager$Key<T_>, arg1: Internal.IMutableSearchTree<T_>): void;
        func_215358_a<T_>(arg0: Internal.SearchTreeManager$Key<T_>): Internal.IMutableSearchTree<T_>;
        getResourceType(): Internal.IResourceType;
        func_225594_i_(): string;
        static readonly field_215360_b: Internal.SearchTreeManager$Key<Internal.ItemStack>;
        static readonly field_194012_b: Internal.SearchTreeManager$Key<Internal.RecipeList>;
        static readonly field_215359_a: Internal.SearchTreeManager$Key<Internal.ItemStack>;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SearchTreeManager_ = SearchTreeManager;
    interface AccessorWorkbenchContainer {
        getCraftResult(): Internal.CraftResultInventory;
        getPlayer(): Internal.PlayerEntity;
        getCraftMatrix(): Internal.CraftingInventory;
    }
    type AccessorWorkbenchContainer_ = AccessorWorkbenchContainer;
    interface TemporalAmount {
        subtractFrom(arg0: Internal.Temporal): Internal.Temporal;
        get(arg0: Internal.TemporalUnit): number;
        getUnits(): Internal.List<Internal.TemporalUnit>;
        addTo(arg0: Internal.Temporal): Internal.Temporal;
    }
    type TemporalAmount_ = TemporalAmount;
    class JsonObject extends Internal.JsonElement {
        add(arg0: string, arg1: Internal.JsonElement): void;
        getAsJsonObject(arg0: string): Internal.JsonObject;
        getAsJsonArray(arg0: string): Internal.JsonArray;
        size(): number;
        entrySet(): Internal.Set<Internal.Map$Entry<string, Internal.JsonElement>>;
        getAsJsonPrimitive(arg0: string): Internal.JsonPrimitive;
        get(arg0: string): Internal.JsonElement;
        has(arg0: string): boolean;
        addProperty(arg0: string, arg1: Internal.Number): void;
        addProperty(arg0: string, arg1: string): void;
        addProperty(arg0: string, arg1: boolean): void;
        addProperty(arg0: string, arg1: string): void;
        remove(arg0: string): Internal.JsonElement;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type JsonObject_ = JsonObject;
    class CPickItemPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_210349_a(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type CPickItemPacket_ = CPickItemPacket;
    class SUpdateTileEntityPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148853_f(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179823_a(): BlockPos;
        func_148857_g(): Internal.CompoundNBT;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: BlockPos, arg1: number, arg2: Internal.CompoundNBT);
    }
    type SUpdateTileEntityPacket_ = SUpdateTileEntityPacket;
    interface LongPredicate {
        or(arg0: Internal.LongPredicate_): Internal.LongPredicate;
        test(arg0: number): boolean;
        and(arg0: Internal.LongPredicate_): Internal.LongPredicate;
        negate(): Internal.LongPredicate;
        (arg0: number): boolean;
    }
    type LongPredicate_ = ((arg0: number)=>boolean) | LongPredicate;
    class ItemStackConfig extends Internal.ConfigValue<Internal.ItemStack> {
        getStringForGUI(v: Internal.ItemStack): Internal.ITextComponent;
        copy(arg0: any): any;
        copy(value: Internal.ItemStack): Internal.ItemStack;
        readonly allowEmpty: boolean;
        readonly singleItemOnly: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(single: boolean, empty: boolean);
    }
    type ItemStackConfig_ = ItemStackConfig;
    class ProgressionTier extends Internal.Enum<Internal.ProgressionTier> {
        next(): Internal.ProgressionTier;
        hasNextTier(): boolean;
        isThisLater(arg0: Internal.ProgressionTier_): boolean;
        static valueOf(arg0: string): Internal.ProgressionTier;
        static values(): Internal.ProgressionTier[];
        isThisLaterOrEqual(arg0: Internal.ProgressionTier_): boolean;
        static readonly ATTUNEMENT: Internal.ProgressionTier;
        static readonly CONSTELLATION_CRAFT: Internal.ProgressionTier;
        static readonly BRILLIANCE: Internal.ProgressionTier;
        static readonly BASIC_CRAFT: Internal.ProgressionTier;
        static readonly TRAIT_CRAFT: Internal.ProgressionTier;
        static readonly DISCOVERY: Internal.ProgressionTier;
    }
    type ProgressionTier_ = "discovery" | "basic_craft" | "attunement" | "constellation_craft" | "trait_craft" | "brilliance" | ProgressionTier;
    class ExemptionMechanism extends Document.Object {
        init(arg0: Internal.Key): void;
        init(arg0: Internal.Key, arg1: Internal.AlgorithmParameters): void;
        init(arg0: Internal.Key, arg1: Internal.AlgorithmParameterSpec): void;
        getName(): string;
        genExemptionBlob(arg0: number[], arg1: number): number;
        genExemptionBlob(arg0: number[]): number;
        genExemptionBlob(): number[];
        isCryptoAllowed(arg0: Internal.Key): boolean;
        getProvider(): Internal.Provider;
        getOutputSize(arg0: number): number;
        static getInstance(arg0: string, arg1: string): Internal.ExemptionMechanism;
        static getInstance(arg0: string, arg1: Internal.Provider): Internal.ExemptionMechanism;
        static getInstance(arg0: string): Internal.ExemptionMechanism;
        get provider(): Internal.Provider;
        get name(): string;
    }
    type ExemptionMechanism_ = ExemptionMechanism;
    class SectionPos extends Vec3i {
        func_218152_g(): number;
        static func_218158_a(arg0: Internal.SectionPos, arg1: number): Internal.Stream<Internal.SectionPos>;
        static func_218159_a(arg0: number): number;
        static func_218154_a(arg0: number, arg1: number, arg2: number): Internal.SectionPos;
        func_218151_e(): number;
        static func_218153_d(arg0: number): number;
        static func_218156_a(arg0: Internal.ChunkPos, arg1: number): Internal.SectionPos;
        static func_218157_a(arg0: Internal.Entity): Internal.SectionPos;
        static func_218150_b(arg0: BlockPos): number;
        static func_218171_b(arg0: number): number;
        static func_218172_a(arg0: number, arg1: Internal.Direction_): number;
        static func_218174_a(arg0: number, arg1: number, arg2: number, arg3: number): number;
        static func_218173_b(arg0: number): number;
        func_218145_w(): Internal.Stream<BlockPos>;
        func_218146_v(): number;
        static func_243641_a(arg0: number): number;
        static func_218170_a(arg0: number): Internal.SectionPos;
        func_218147_s(): BlockPos;
        func_218143_r(): number;
        func_218160_t(): BlockPos;
        static func_218169_f(arg0: number): number;
        func_243646_f(arg0: number): number;
        func_218164_f(): number;
        func_218165_h(): number;
        func_243647_g(arg0: number): BlockPos;
        func_218149_a(): number;
        func_218148_c(): number;
        func_243644_d(arg0: number): number;
        static func_218162_e(arg0: number): number;
        static func_218142_c(arg0: number): number;
        func_243645_e(arg0: number): number;
        static func_218168_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.Stream<Internal.SectionPos>;
        static func_218166_b(arg0: number, arg1: number, arg2: number): number;
        static func_218144_c(arg0: number): number;
        static func_218167_a(arg0: BlockPos): Internal.SectionPos;
        static func_243642_b(arg0: number): number;
        func_218161_d(): number;
        static func_243643_c(arg0: number): number;
        func_218163_b(): number;
        static func_229421_b_(arg0: Internal.ChunkPos, arg1: number): Internal.Stream<Internal.SectionPos>;
        func_218155_u(): Internal.ChunkPos;
    }
    type SectionPos_ = SectionPos;
    class LootTableManager extends Internal.JsonReloadListener implements Internal.LootTablesKJS {
        static func_215301_a(arg0: Internal.LootTable): Internal.JsonElement;
        func_215304_a(): Internal.Set<ResourceLocation>;
        func_186521_a(arg0: ResourceLocation_): Internal.LootTable;
        func_225594_i_(): string;
        applyKJS0(map: Internal.Map_<ResourceLocation_, Internal.JsonElement_>, action: Internal.BiConsumer_<ResourceLocation_, Internal.JsonElement_>): void;
        static func_227508_a_(arg0: Internal.ValidationTracker, arg1: ResourceLocation_, arg2: Internal.LootTable): void;
        field_186527_c: Internal.Map<ResourceLocation, Internal.LootTable>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LootPredicateManager);
    }
    type LootTableManager_ = LootTableManager;
    interface IGasProvider extends Internal.IChemicalProvider<Internal.Gas> {
        getStack(arg0: number): Internal.GasStack;
        getStack(arg0: number): Internal.ChemicalStack<any>;
    }
    type IGasProvider_ = IGasProvider;
    interface ValueLayout$OfShort extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfShort;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfShort;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout$OfShort;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfShort;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfShort_ = ValueLayout$OfShort;
    class EntityPotionEffectsJS extends Document.Object {
        add(mobEffect: Internal.Effect_, duration: number, amplifier: number): void;
        add(mobEffect: Internal.Effect_, duration: number): void;
        add(mobEffect: Internal.Effect_): void;
        add(mobEffect: Internal.Effect_, duration: number, amplifier: number, ambient: boolean, showParticles: boolean): void;
        getDuration(mobEffect: Internal.Effect_): number;
        isApplicable(effect: Internal.EffectInstance): boolean;
        clear(): void;
        getActive(): Internal.Collection<Internal.EffectInstance>;
        getActive(mobEffect: Internal.Effect_): Internal.EffectInstance;
        isActive(mobEffect: Internal.Effect_): boolean;
        getMap(): Internal.Map<Internal.Effect, Internal.EffectInstance>;
        get active(): Internal.Collection<Internal.EffectInstance>;
        get map(): Internal.Map<Internal.Effect, Internal.EffectInstance>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(e: Internal.LivingEntity);
    }
    type EntityPotionEffectsJS_ = EntityPotionEffectsJS;
    class SpiderEntity extends Internal.MonsterEntity {
        shouldRiderSit(): boolean;
        static func_234305_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70841_p(): boolean;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_70839_e(arg0: boolean): void;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.SpiderEntity>, arg1: Internal.World);
    }
    type SpiderEntity_ = SpiderEntity;
    class EntityAnchorArgument$Type extends Internal.Enum<Internal.EntityAnchorArgument$Type> {
        func_201017_a(arg0: Internal.Entity): Vec3;
        static valueOf(arg0: string): Internal.EntityAnchorArgument$Type;
        static values(): Internal.EntityAnchorArgument$Type[];
        func_201015_a(arg0: Internal.CommandSource): Vec3;
        static func_201016_a(arg0: string): Internal.EntityAnchorArgument$Type;
        static readonly EYES: Internal.EntityAnchorArgument$Type;
        static readonly FEET: Internal.EntityAnchorArgument$Type;
    }
    type EntityAnchorArgument$Type_ = "feet" | "eyes" | EntityAnchorArgument$Type;
    class PaintingEntity extends Internal.HangingEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_70522_e: Internal.PaintingType;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Direction, arg3: Internal.PaintingType);
        constructor(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Direction);
        constructor(arg0: Internal.EntityType<Internal.PaintingEntity>, arg1: Internal.World);
    }
    type PaintingEntity_ = PaintingEntity;
    interface IIngredientType <T> {
        getIngredientClass(): Internal.Class<T>;
        (): Internal.Class<T>;
    }
    type IIngredientType_<T> = (()=>Internal.Class<T>) | IIngredientType<T>;
    class Products$P16 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function16_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>, arg4: Internal.App<F, T5>, arg5: Internal.App<F, T6>, arg6: Internal.App<F, T7>, arg7: Internal.App<F, T8>, arg8: Internal.App<F, T9>, arg9: Internal.App<F, T10>, arg10: Internal.App<F, T11>, arg11: Internal.App<F, T12>, arg12: Internal.App<F, T13>, arg13: Internal.App<F, T14>, arg14: Internal.App<F, T15>, arg15: Internal.App<F, T16>);
    }
    type Products$P16_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> = Products$P16<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>;
    class SimpleDateFormat extends Internal.DateFormat {
        toLocalizedPattern(): string;
        toPattern(): string;
        setDateFormatSymbols(arg0: Internal.DateFormatSymbols): void;
        applyLocalizedPattern(arg0: string): void;
        get2DigitYearStart(): Internal.Date;
        set2DigitYearStart(arg0: Internal.Date): void;
        getDateFormatSymbols(): Internal.DateFormatSymbols;
        applyPattern(arg0: string): void;
        get dateFormatSymbols(): Internal.DateFormatSymbols;
        set dateFormatSymbols(arg0: Internal.DateFormatSymbols);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.DateFormatSymbols);
        constructor(arg0: string, arg1: Internal.Locale);
        constructor(arg0: string);
        constructor();
    }
    type SimpleDateFormat_ = SimpleDateFormat;
    abstract class ChemicalAttribute extends Document.Object {
        addTooltipText(arg0: Internal.List<Internal.ITextComponent>): Internal.List<Internal.ITextComponent>;
        needsValidation(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ChemicalAttribute_ = ChemicalAttribute;
    class Tuple <A, B> extends Document.Object {
        func_76341_a(): A;
        func_76340_b(): B;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: A, arg1: B);
    }
    type Tuple_<A, B> = Tuple<A, B>;
    interface WindowFocusListener extends Internal.EventListener {
        windowLostFocus(arg0: Internal.WindowEvent): void;
        windowGainedFocus(arg0: Internal.WindowEvent): void;
    }
    type WindowFocusListener_ = WindowFocusListener;
    class WeightedRandom$Item extends Document.Object {
        field_76292_a: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type WeightedRandom$Item_ = WeightedRandom$Item;
    class LiteralArgumentBuilder <S> extends Internal.ArgumentBuilder<S, Internal.LiteralArgumentBuilder<S>> {
        getLiteral(): string;
        build(): Internal.LiteralCommandNode<S>;
        build(): Internal.CommandNode<any>;
        static literal<S_>(arg0: string): Internal.LiteralArgumentBuilder<S_>;
    }
    type LiteralArgumentBuilder_<S> = LiteralArgumentBuilder<S>;
    class RandomPatches extends Document.Object {
        static reloadConfig(): void;
        static registerCommands(arg0: Internal.RegisterCommandsEvent): void;
        static config(): Internal.RPConfig;
        static readonly MOD_ID: "randompatches";
        static readonly logger: Internal.Logger;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RandomPatches_ = RandomPatches;
    interface IRandomRange {
        func_215830_a(): ResourceLocation;
        func_186511_a(arg0: Internal.Random): number;
    }
    type IRandomRange_ = IRandomRange;
    class Direction$AxisDirection extends Internal.Enum<Internal.Direction$AxisDirection> {
        func_239635_c_(): Internal.Direction$AxisDirection;
        static valueOf(arg0: string): Internal.Direction$AxisDirection;
        static values(): Internal.Direction$AxisDirection[];
        func_179524_a(): number;
        static readonly POSITIVE: Internal.Direction$AxisDirection;
        static readonly NEGATIVE: Internal.Direction$AxisDirection;
    }
    type Direction$AxisDirection_ = "positive" | "negative" | Direction$AxisDirection;
    class RuleStructureProcessor extends Internal.StructureProcessor {
        static readonly field_237125_a_: Internal.Codec<Internal.RuleStructureProcessor>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.List<any>);
    }
    type RuleStructureProcessor_ = RuleStructureProcessor;
    class CreatureAttribute extends Document.Object {
        static readonly field_223225_d_: Internal.CreatureAttribute;
        static readonly field_223224_c_: Internal.CreatureAttribute;
        static readonly field_223222_a_: Internal.CreatureAttribute;
        static readonly field_223223_b_: Internal.CreatureAttribute;
        static readonly field_203100_e: Internal.CreatureAttribute;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CreatureAttribute_ = CreatureAttribute;
    abstract class Reader extends Document.Object implements Internal.Readable, Internal.Closeable {
        read(arg0: string[], arg1: number, arg2: number): number;
        read(arg0: Internal.CharBuffer): number;
        read(): number;
        read(arg0: string[]): number;
        static nullReader(): Internal.Reader;
        markSupported(): boolean;
        ready(): boolean;
        reset(): void;
        skip(arg0: number): number;
        transferTo(arg0: Internal.Writer): number;
        close(): void;
        mark(arg0: number): void;
    }
    type Reader_ = Reader;
    interface ListIterator <E> extends Internal.Iterator<E> {
        next(): E;
        add(arg0: E): void;
        set(arg0: E): void;
        previous(): E;
        hasPrevious(): boolean;
        hasNext(): boolean;
        nextIndex(): number;
        previousIndex(): number;
        remove(): void;
    }
    type ListIterator_<E> = ListIterator<E>;
    interface Function3 <T1, T2, T3, R> {
        apply(arg0: T1, arg1: T2, arg2: T3): R;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function<T3, R>>;
        curry(): Internal.Function<T1, Internal.BiFunction<T2, T3, R>>;
        (arg0: T1, arg1: T2, arg2: T3): R;
    }
    type Function3_<T1, T2, T3, R> = ((arg0: T1, arg1: T2, arg2: T3)=>R) | Function3<T1, T2, T3, R>;
    interface IForgeRegistry <V> extends Internal.Iterable<V> {
        getKey(arg0: V): ResourceLocation;
        getValues(): Internal.Collection<V>;
        registerAll(...arg0: V[]): void;
        containsKey(arg0: ResourceLocation_): boolean;
        getDefaultKey(): ResourceLocation;
        isEmpty(): boolean;
        getRegistryName(): ResourceLocation;
        getRegistrySuperType(): Internal.Class<V>;
        getKeys(): Internal.Set<ResourceLocation>;
        getSlaveMap<T_>(arg0: ResourceLocation_, arg1: Internal.Class<T_>): T_;
        containsValue(arg0: V): boolean;
        getValue(arg0: ResourceLocation_): V;
        getEntries(): Internal.Set<Internal.Map$Entry<Internal.RegistryKey<V>, V>>;
        register(arg0: V): void;
    }
    type IForgeRegistry_<V> = IForgeRegistry<V>;
    interface IPalette <T> {
        func_186040_a(): number;
        func_186041_a(arg0: T): number;
        func_230341_a_(arg0: Internal.Predicate_<T>): boolean;
        func_186039_a(arg0: number): T;
        func_186037_b(arg0: Internal.PacketBuffer): void;
        func_186038_a(arg0: Internal.PacketBuffer): void;
        func_196968_a(arg0: Internal.ListNBT): void;
    }
    type IPalette_<T> = IPalette<T>;
    class FluidState extends Internal.StateHolder<Internal.Fluid, Internal.FluidState> implements Internal.IForgeFluidState {
        getExplosionResistance(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Explosion): number;
        func_206880_a(arg0: Internal.World, arg1: BlockPos): void;
        func_206881_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Random): void;
        func_204521_c(): Internal.IParticleData;
        func_206891_b(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Random): void;
        func_210200_l(): number;
        func_205586_a(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        func_223408_f(): number;
        func_206884_a(arg0: Internal.ITag<Internal.Fluid>): boolean;
        func_206890_h(): boolean;
        isEntityInside(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Entity, arg3: number, arg4: Internal.Tag<Internal.Fluid>, arg5: boolean): boolean;
        func_206886_c(): Internal.Fluid;
        func_206882_g(): number;
        func_206883_i(): Internal.BlockState;
        func_206889_d(): boolean;
        func_206888_e(): boolean;
        func_215677_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Fluid_, arg3: Internal.Direction_): boolean;
        func_215679_a(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        func_215676_d(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.VoxelShape;
        getFluidState(): Internal.FluidState;
        handler$bci000$randomTick(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Random, arg3: Internal.CallbackInfo): void;
        func_215673_c(arg0: Internal.IBlockReader, arg1: BlockPos): Vec3;
        static readonly field_237213_a_: Internal.Codec<Internal.FluidState>;
        get fluidState(): Internal.FluidState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Fluid, arg1: Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>, arg2: Internal.MapCodec<Internal.FluidState>);
    }
    type FluidState_ = FluidState;
    class EnderPearlEntity extends Internal.ProjectileItemEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity);
        constructor(arg0: Internal.EntityType<Internal.EnderPearlEntity>, arg1: Internal.World);
    }
    type EnderPearlEntity_ = EnderPearlEntity;
    class AlwaysTrueTest extends Internal.PosRuleTest {
        static readonly field_237099_a_: Internal.Codec<Internal.AlwaysTrueTest>;
        static readonly field_237100_b_: Internal.AlwaysTrueTest;
    }
    type AlwaysTrueTest_ = AlwaysTrueTest;
    class ChunkRenderContext extends Document.Object {
        getVolume(): Internal.MutableBoundingBox;
        releaseResources(): void;
        getOrigin(): Internal.SectionPos;
        getSections(): Internal.ClonedChunkSection[];
        get volume(): Internal.MutableBoundingBox;
        get origin(): Internal.SectionPos;
        get sections(): Internal.ClonedChunkSection[];
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(origin: Internal.SectionPos, sections: Internal.ClonedChunkSection[], volume: Internal.MutableBoundingBox);
    }
    type ChunkRenderContext_ = ChunkRenderContext;
    class ReloadRenderersEvent extends net.minecraftforge.eventbus.api.Event {
        getWorld(): Internal.ClientWorld;
        get world(): Internal.ClientWorld;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ClientWorld);
    }
    type ReloadRenderersEvent_ = ReloadRenderersEvent;
    class AtlasTexture$SheetData extends Document.Object implements Internal.SheetDataAccessor {
        getHeight(): number;
        getWidth(): number;
        get width(): number;
        get height(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Set<ResourceLocation>, arg1: number, arg2: number, arg3: number, arg4: Internal.List<Internal.TextureAtlasSprite>);
    }
    type AtlasTexture$SheetData_ = AtlasTexture$SheetData;
    interface JigsawPatternAccessor {
        repurposedstructures_getTemplates(): Internal.List<Internal.JigsawPiece>;
        repurposedstructures_getRawTemplates(): Internal.List<Internal.Pair<Internal.JigsawPiece, number>>;
        repurposedstructures_setRawTemplates(arg0: Internal.List<Internal.Pair<Internal.JigsawPiece, number>>): void;
        repurposedstructures_setTemplates(arg0: Internal.List<Internal.JigsawPiece>): void;
    }
    type JigsawPatternAccessor_ = JigsawPatternAccessor;
    abstract class ContainerScreen <T> extends Internal.Screen implements Internal.IHasContainer<T> {
        func_212873_a_(): T;
        func_212927_b(arg0: number, arg1: number): void;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        getYSize(): number;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        getGuiTop(): number;
        getGuiLeft(): number;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        func_238746_a_(arg0: Internal.MatrixStack, arg1: Internal.Slot): void;
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_195362_a(arg0: Internal.Slot, arg1: number, arg2: number): boolean;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231049_c__(arg0: boolean): boolean;
        func_195360_a(arg0: number, arg1: number): Internal.Slot;
        getSlotUnderMouse(): Internal.Slot;
        getSlotColor(arg0: number): number;
        getXSize(): number;
        static readonly field_147001_a: ResourceLocation;
        field_146999_f: number;
        field_147003_i: number;
        field_147009_r: number;
        field_147007_t: boolean;
        field_147000_g: number;
        get slotUnderMouse(): Internal.Slot;
        get guiLeft(): number;
        get ySize(): number;
        get xSize(): number;
        get guiTop(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: T, arg1: Internal.PlayerInventory, arg2: Internal.ITextComponent);
    }
    type ContainerScreen_<T> = ContainerScreen<T>;
    interface IParameterized {
        func_225580_a_(arg0: Internal.ValidationTracker): void;
        func_215855_a(): Internal.Set<Internal.LootParameter<any>>;
    }
    type IParameterized_ = IParameterized;
    class ChunkPrimer extends Document.Object implements Internal.IChunk, Internal.ExtendedChunk {
        func_201637_h(arg0: BlockPos): void;
        handler$bcn000$onConstruct(arg0: Internal.ChunkPos, arg1: Internal.UpgradeData, arg2: Internal.ChunkSection[], arg3: Internal.ChunkPrimerTickList<any>, arg4: Internal.ChunkPrimerTickList<any>, arg5: Internal.CallbackInfo): void;
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        func_201652_l(): Internal.List<Internal.CompoundNBT>;
        func_201594_d(arg0: BlockPos): void;
        func_203066_o(): Internal.Set<BlockPos>;
        static func_201635_a(arg0: number, arg1: number, arg2: Internal.ChunkPos): BlockPos;
        func_201612_a(arg0: Internal.Map_<net.minecraft.world.gen.feature.structure.Structure_<any>, Internal.StructureStart_<any>>): void;
        func_217298_h(arg0: BlockPos): number;
        func_217310_r(): boolean;
        setBlockEmptinessMap(arg0: boolean[]): void;
        func_205749_a(arg0: CarvingGenerationStep_): Internal.BitSet;
        func_177426_a(arg0: BlockPos, arg1: Internal.TileEntity): void;
        getSkyEmptinessMap(): boolean[];
        func_201589_g(): Internal.ChunkStatus;
        getBlockEmptinessMap(): boolean[];
        func_217306_a(arg0: Internal.WorldLightManager): void;
        func_212247_j(): Internal.ITickList<any>;
        func_212247_j(): Internal.ChunkPrimerTickList<Internal.Fluid>;
        func_201627_k(): Internal.Map<BlockPos, Internal.TileEntity>;
        func_76625_h(): number;
        func_76606_c(arg0: number, arg1: number): boolean;
        func_201646_a(arg0: number, arg1: number): void;
        func_217304_m(): Internal.Stream<BlockPos>;
        func_225548_a_(arg0: Internal.BiomeContainer): void;
        func_201606_b(arg0: Internal.Map_<net.minecraft.world.gen.feature.structure.Structure_<any>, Internal.LongSet_>): void;
        func_177416_w(): number;
        func_201604_d(): Internal.Map<net.minecraft.world.gen.feature.structure.Structure<any>, Internal.LongSet>;
        func_242403_h(arg0: BlockPos): number;
        func_217332_a(arg0: number): Internal.ChunkSection;
        func_230343_a_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>, arg1: number): void;
        getSkyNibbles(): any[];
        setBlockNibbles(arg0: any[]): void;
        func_217311_f(): Internal.Collection<Internal.Map$Entry<Internal.Heightmap$Type, Internal.Heightmap>>;
        func_217301_I(): number;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        func_201593_f(): boolean;
        getWorldForge(): Internal.IWorld;
        func_201574_a(arg0: Internal.ChunkStatus_): void;
        func_201576_a(arg0: Internal.Heightmap$Type_, arg1: number, arg2: number): number;
        func_201632_q(): Internal.Map<BlockPos, Internal.CompoundNBT>;
        func_225549_i_(): Internal.BiomeContainer;
        func_201591_a(arg0: Internal.CompoundNBT_): void;
        func_201636_b(arg0: number, arg1: number): void;
        static func_201651_i(arg0: BlockPos): number;
        func_177425_e(arg0: BlockPos): void;
        func_230345_b_(arg0: CarvingGenerationStep_): Internal.BitSet;
        func_230344_a_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>, arg1: Internal.StructureStart<any>): void;
        func_76632_l(): Internal.ChunkPos;
        func_186031_y(): Internal.ChunkSection;
        setSkyEmptinessMap(arg0: boolean[]): void;
        func_217303_b(arg0: Internal.Heightmap$Type_): Internal.Heightmap;
        func_175625_s(arg0: BlockPos): Internal.TileEntity;
        func_177427_f(arg0: boolean): void;
        func_205218_i_(): Internal.ChunkPrimerTickList<Internal.Block>;
        func_205218_i_(): Internal.ITickList<any>;
        func_180495_p(arg0: BlockPos): Internal.BlockState;
        func_217305_b(arg0: boolean): void;
        func_76587_i(): Internal.ChunkSection[];
        func_201572_C(): number;
        func_201647_i(): Internal.ShortList[];
        func_217307_e(): Internal.WorldLightManager;
        func_201609_c(): Internal.Map<net.minecraft.world.gen.feature.structure.Structure<any>, Internal.StructureStart<any>>;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_230342_a_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>): Internal.StructureStart<any>;
        getBlockNibbles(): any[];
        func_201626_b(arg0: Internal.CompoundNBT_): void;
        func_201607_a(arg0: Internal.Heightmap$Type_, arg1: number[]): void;
        func_201614_D(): Internal.ShortList[];
        func_76612_a(arg0: Internal.Entity): void;
        func_230346_b_(arg0: net.minecraft.world.gen.feature.structure.Structure_<any>): Internal.LongSet;
        setSkyNibbles(arg0: any[]): void;
        func_177415_c(arg0: number): void;
        func_205767_a(arg0: CarvingGenerationStep_, arg1: Internal.BitSet): void;
        func_177432_b(arg0: number): void;
        func_196966_y(): Internal.UpgradeData;
        func_177436_a(arg0: BlockPos, arg1: Internal.BlockState, arg2: boolean): Internal.BlockState;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        func_204610_c(arg0: BlockPos): Internal.FluidState;
        func_201579_g(arg0: BlockPos): Internal.CompoundNBT;
        func_223134_j(arg0: BlockPos): Internal.CompoundNBT;
        get skyNibbles(): any[];
        get skyEmptinessMap(): boolean[];
        get blockEmptinessMap(): boolean[];
        get worldForge(): Internal.IWorld;
        get blockNibbles(): any[];
        set skyNibbles(arg0: any[]);
        set skyEmptinessMap(arg0: boolean[]);
        set blockEmptinessMap(arg0: boolean[]);
        set blockNibbles(arg0: any[]);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ChunkPos, arg1: Internal.UpgradeData);
        constructor(arg0: Internal.ChunkPos, arg1: Internal.UpgradeData, arg2: Internal.ChunkSection[], arg3: Internal.ChunkPrimerTickList<Internal.Block>, arg4: Internal.ChunkPrimerTickList<Internal.Fluid>);
    }
    type ChunkPrimer_ = ChunkPrimer;
    class ManaNetworkEvent extends net.minecraftforge.eventbus.api.Event {
        static addPool(arg0: Internal.TileEntity): void;
        static addCollector(arg0: Internal.TileEntity): void;
        static removePool(arg0: Internal.TileEntity): void;
        static removeCollector(arg0: Internal.TileEntity): void;
        readonly tile: Internal.TileEntity;
        readonly action: Internal.ManaNetworkEvent$Action;
        readonly type: Internal.ManaNetworkEvent$ManaBlockType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.TileEntity, arg1: Internal.ManaNetworkEvent$ManaBlockType, arg2: Internal.ManaNetworkEvent$Action);
    }
    type ManaNetworkEvent_ = ManaNetworkEvent;
    class AnimateFluidTickEvent extends net.minecraftforge.eventbus.api.Event {
        getWorld(): Internal.World;
        getRandom(): Internal.Random;
        getState(): Internal.FluidState;
        getPos(): BlockPos;
        static onAnimateFluidTick(arg0: Internal.World, arg1: BlockPos, arg2: Internal.FluidState, arg3: Internal.Random): boolean;
        get random(): Internal.Random;
        get world(): Internal.World;
        get pos(): BlockPos;
        get state(): Internal.FluidState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: BlockPos, arg2: Internal.FluidState, arg3: Internal.Random);
        constructor();
    }
    type AnimateFluidTickEvent_ = AnimateFluidTickEvent;
    class SpriteMap extends Document.Object implements Internal.AutoCloseable {
        func_229151_a_(arg0: Internal.RenderMaterial): Internal.TextureAtlasSprite;
        close(): void;
        func_229152_a_(arg0: ResourceLocation_): Internal.AtlasTexture;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Collection<Internal.AtlasTexture>);
    }
    type SpriteMap_ = SpriteMap;
    interface ICustomPacket <T> {
        setName(arg0: ResourceLocation_): void;
        getThis(): T;
        getName(): ResourceLocation;
        getDirection(): Internal.NetworkDirection;
        getIndex(): number;
        setData(arg0: Internal.PacketBuffer): void;
        setIndex(arg0: number): void;
        getInternalData(): Internal.PacketBuffer;
    }
    type ICustomPacket_<T> = ICustomPacket<T>;
    class TeamData extends Document.Object {
        clearCachedProgress(): void;
        setCanEdit(arg0: boolean): boolean;
        setProgress(arg0: Internal.Task, arg1: number): void;
        save(): void;
        resetProgress(arg0: Internal.Task): void;
        getProgress(arg0: number): number;
        getProgress(arg0: Internal.Task): number;
        getCanEdit(): boolean;
        serializeNBT(): Internal.SNBTCompoundTag;
        getRewardClaimTime(arg0: Internal.UUID, arg1: Internal.Reward): Internal.Date;
        getClaimType(arg0: Internal.UUID, arg1: Internal.Reward): Internal.RewardClaimType;
        canStartTasks(arg0: Internal.Quest): boolean;
        deleteReward(arg0: Internal.Reward): void;
        setStarted(arg0: number, arg1: Internal.Date): boolean;
        isLocked(): boolean;
        static get(arg0: Internal.PlayerEntity): Internal.TeamData;
        getStartedTime(arg0: number): Internal.Date;
        getCompletedTime(arg0: number): Internal.Date;
        setAutoPin(arg0: boolean): void;
        write(arg0: Internal.PacketBuffer, arg1: boolean): void;
        isCompleted(arg0: Internal.QuestObject): boolean;
        setQuestPinned(arg0: number, arg1: boolean): void;
        isQuestPinned(arg0: number): boolean;
        read(arg0: Internal.PacketBuffer, arg1: boolean): void;
        hasUnclaimedRewards(arg0: Internal.UUID, arg1: Internal.QuestObject): boolean;
        getRelativeProgress(arg0: Internal.QuestObject): number;
        checkAutoCompletion(arg0: Internal.Quest): void;
        deserializeNBT(arg0: Internal.SNBTCompoundTag): void;
        setCompleted(arg0: number, arg1: Internal.Date): boolean;
        isStarted(arg0: Internal.QuestObject): boolean;
        addProgress(arg0: Internal.Task, arg1: number): void;
        setLocked(arg0: boolean): boolean;
        copyData(arg0: Internal.TeamData): void;
        mergeData(arg0: Internal.TeamData): void;
        resetReward(arg0: Internal.UUID, arg1: Internal.Reward): boolean;
        areDependenciesComplete(arg0: Internal.Quest): boolean;
        getOnlineMembers(): Internal.List<Internal.ServerPlayerEntity>;
        isRewardClaimed(arg0: Internal.UUID, arg1: Internal.Reward): boolean;
        getAutoPin(): boolean;
        claimReward(arg0: Internal.ServerPlayerEntity, arg1: Internal.Reward, arg2: boolean): void;
        claimReward(arg0: Internal.UUID, arg1: Internal.Reward, arg2: number): boolean;
        file: Internal.QuestFile;
        readonly pinnedQuests: Internal.LongOpenHashSet;
        static VERSION: 1;
        name: string;
        shouldSave: boolean;
        readonly uuid: Internal.UUID;
        get onlineMembers(): Internal.List<Internal.ServerPlayerEntity>;
        get canEdit(): boolean;
        get locked(): boolean;
        get autoPin(): boolean;
        set canEdit(arg0: boolean);
        set locked(arg0: boolean);
        set autoPin(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.UUID);
    }
    type TeamData_ = TeamData;
    interface Decoder$Boxed <A> {
        decoder(): Internal.Decoder<A>;
        decode<T>(arg0: Internal.Dynamic<T>): Internal.DataResult<Internal.Pair<A, T>>;
        (arg0: Internal.Dynamic<T>): Internal.DataResult<Internal.Pair<A, T>>;
    }
    type Decoder$Boxed_<A> = ((arg0: Internal.Dynamic<T>)=>Internal.DataResult<Internal.Pair<A, T>>) | Decoder$Boxed<A>;
    interface OpenOption {
    }
    type OpenOption_ = OpenOption;
    class Mirror extends Internal.Enum<Internal.Mirror> {
        func_185802_a(arg0: number, arg1: number): number;
        func_185803_b(arg0: Internal.Direction_): Internal.Direction;
        func_235512_a_(): Internal.Orientation;
        static valueOf(arg0: string): Internal.Mirror;
        static values(): Internal.Mirror[];
        func_185800_a(arg0: Internal.Direction_): Internal.Rotation;
        static readonly FRONT_BACK: Internal.Mirror;
        static readonly LEFT_RIGHT: Internal.Mirror;
        static readonly NONE: Internal.Mirror;
    }
    type Mirror_ = "none" | "left_right" | "front_back" | Mirror;
    class SCollectItemPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149353_d(): number;
        func_149354_c(): number;
        func_191208_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type SCollectItemPacket_ = SCollectItemPacket;
    class ServerTickList <T> extends Document.Object implements Internal.ITickList<T> {
        func_205362_a(arg0: BlockPos, arg1: T, arg2: number, arg3: Internal.TickPriority_): void;
        func_205361_b(arg0: BlockPos, arg1: T): boolean;
        func_205360_a(arg0: BlockPos, arg1: T, arg2: number): void;
        func_223188_a(arg0: Internal.ChunkPos, arg1: boolean, arg2: boolean): Internal.List<Internal.NextTickListEntry<T>>;
        func_225420_a(): number;
        func_205359_a(arg0: BlockPos, arg1: T): boolean;
        func_219503_a(arg0: Internal.ChunkPos): Internal.ListNBT;
        func_205365_a(): void;
        func_205366_a(arg0: Internal.MutableBoundingBox, arg1: boolean, arg2: boolean): Internal.List<Internal.NextTickListEntry<T>>;
        func_205368_a(arg0: Internal.MutableBoundingBox, arg1: BlockPos): void;
        readonly field_205374_d: Internal.Set<Internal.NextTickListEntry<T>>;
        readonly field_205375_e: Internal.TreeSet<Internal.NextTickListEntry<T>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ServerWorld, arg1: Internal.Predicate<T>, arg2: Internal.Function<T, ResourceLocation>, arg3: Internal.Consumer<Internal.NextTickListEntry<T>>);
    }
    type ServerTickList_<T> = ServerTickList<T>;
    interface ContextFactory$GlobalSetter {
        setContextFactoryGlobal(arg0: Internal.ContextFactory): void;
        getContextFactoryGlobal(): Internal.ContextFactory;
    }
    type ContextFactory$GlobalSetter_ = ContextFactory$GlobalSetter;
    class GameRules$RuleType <T> extends Document.Object {
        func_223579_a(): T;
        func_223581_a(arg0: string): Internal.RequiredArgumentBuilder<Internal.CommandSource, any>;
        func_234914_a_(arg0: Internal.GameRules$IRuleEntryVisitor, arg1: Internal.GameRules$RuleKey<T>): void;
    }
    type GameRules$RuleType_<T> = GameRules$RuleType<T>;
    class ChunkStatus$Type extends Internal.Enum<Internal.ChunkStatus$Type> {
        static valueOf(arg0: string): Internal.ChunkStatus$Type;
        static values(): Internal.ChunkStatus$Type[];
        static readonly LEVELCHUNK: Internal.ChunkStatus$Type;
        static readonly PROTOCHUNK: Internal.ChunkStatus$Type;
    }
    type ChunkStatus$Type_ = "protochunk" | "levelchunk" | ChunkStatus$Type;
    interface IToolStat <B> {
        formatValue(arg0: number): Internal.ITextComponent;
        getPrefix(): Internal.IFormattableTextComponent;
        getName(): Internal.ToolStatId;
        build(arg0: B, arg1: number): number;
        applyBonus(arg0: Internal.ModifierStatsBuilder, arg1: number): void;
        makeBuilder(): B;
        getDescription(): Internal.IFormattableTextComponent;
        clamp(arg0: number): number;
        getDefaultValue(): number;
    }
    type IToolStat_<B> = IToolStat<B>;
    class Products$P14 <F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function14_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R_>>): Internal.App<F, R_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>, arg4: Internal.App<F, T5>, arg5: Internal.App<F, T6>, arg6: Internal.App<F, T7>, arg7: Internal.App<F, T8>, arg8: Internal.App<F, T9>, arg9: Internal.App<F, T10>, arg10: Internal.App<F, T11>, arg11: Internal.App<F, T12>, arg12: Internal.App<F, T13>, arg13: Internal.App<F, T14>);
    }
    type Products$P14_<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> = Products$P14<F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>;
    class MapData extends Internal.WorldSavedData implements Internal.CustomDecorationHolder {
        handler$cei000$getUpdatePacket(arg0: Internal.ItemStack, arg1: Internal.IBlockReader, arg2: Internal.PlayerEntity, arg3: Internal.CallbackInfoReturnable<any>): void;
        func_204268_a(arg0: Internal.IBlockReader, arg1: number, arg2: number): void;
        handler$cei000$save(arg0: Internal.CompoundNBT_, arg1: Internal.CallbackInfoReturnable<any>): void;
        func_215160_a(arg0: Internal.MapData): void;
        func_204269_a(arg0: Internal.IWorld, arg1: BlockPos): void;
        static func_191094_a(arg0: Internal.ItemStack, arg1: BlockPos, arg2: string, arg3: Internal.MapDecoration$Type_): void;
        func_176053_a(arg0: number, arg1: number): void;
        func_82568_a(arg0: Internal.PlayerEntity): Internal.MapData$MapInfo;
        func_212441_a(arg0: BlockPos, arg1: number): void;
        serializeNBT(): Internal.INBT;
        func_176052_a(arg0: Internal.ItemStack, arg1: Internal.IBlockReader, arg2: Internal.PlayerEntity): Internal.IPacket<any>;
        resetCustomDecoration(): void;
        toggleCustomDecoration(arg0: Internal.IWorld, arg1: BlockPos): void;
        handler$cei000$tickCarriedBy(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack, arg2: Internal.CallbackInfo): void;
        handler$cei000$load(arg0: Internal.CompoundNBT_, arg1: Internal.CallbackInfo): void;
        func_176054_a(arg0: number, arg1: number, arg2: number): void;
        func_237241_a_(arg0: number, arg1: number, arg2: number, arg3: boolean, arg4: boolean, arg5: Internal.RegistryKey<Internal.World>): void;
        handler$cei000$lockData(arg0: Internal.MapData, arg1: Internal.CallbackInfo): void;
        getCustomMarkers(): Internal.Map<any, any>;
        getCustomDecorations(): Internal.Map<any, any>;
        func_76191_a(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack): void;
        handler$cei000$checkBanners(arg0: Internal.IBlockReader, arg1: number, arg2: number, arg3: Internal.CallbackInfo): void;
        customDecorations: Internal.Map;
        field_76200_c: Internal.RegistryKey<Internal.World>;
        field_76201_a: number;
        field_186210_e: boolean;
        field_76199_b: number;
        field_191096_f: boolean;
        field_76197_d: number;
        readonly field_76203_h: Internal.Map<string, Internal.MapDecoration>;
        field_76198_e: number[];
        readonly field_76196_g: Internal.List<Internal.MapData$MapInfo>;
        field_215161_h: boolean;
        get customMarkers(): Internal.Map<any, any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type MapData_ = MapData;
    class JobAttributes$SidesType extends Internal.AttributeValue {
        static readonly TWO_SIDED_SHORT_EDGE: Internal.JobAttributes$SidesType;
        static readonly TWO_SIDED_LONG_EDGE: Internal.JobAttributes$SidesType;
        static readonly ONE_SIDED: Internal.JobAttributes$SidesType;
    }
    type JobAttributes$SidesType_ = JobAttributes$SidesType;
    interface IPosWrapper {
        func_220610_a(arg0: Internal.LivingEntity): boolean;
        func_220608_a(): BlockPos;
        func_220609_b(): Vec3;
    }
    type IPosWrapper_ = IPosWrapper;
    interface LootContextAccessor {
        repurposedstructures_setQueriedLootTableId(arg0: ResourceLocation_): void;
        (arg0: ResourceLocation): void;
    }
    type LootContextAccessor_ = ((arg0: ResourceLocation)=>void) | LootContextAccessor;
    interface AccessorRenderState {
    }
    type AccessorRenderState_ = AccessorRenderState;
    class CommandSource extends Document.Object implements Internal.ISuggestionProvider, Internal.CommandSourceStackAccess {
        func_197010_l(): Internal.Collection<ResourceLocation>;
        func_197012_k(): Internal.Collection<string>;
        func_197034_c(arg0: number): boolean;
        func_199612_m(): Internal.Stream<ResourceLocation>;
        func_197038_a(arg0: Internal.CommandContext<Internal.CommandSource>, arg1: boolean, arg2: number): void;
        func_201010_a(arg0: Internal.EntityAnchorArgument$Type_): Internal.CommandSource;
        func_197037_c(): string;
        func_197036_d(): Vec3;
        func_197035_h(): Internal.ServerPlayerEntity;
        func_197019_b(): Internal.ITextComponent;
        func_197011_j(): Internal.Collection<string>;
        func_209550_a(arg0: Internal.ResultConsumer_<Internal.CommandSource_>, arg1: Internal.BinaryOperator<Internal.ResultConsumer<Internal.CommandSource>>): Internal.CommandSource;
        func_201004_i(): Internal.Vector2f;
        func_197021_a(arg0: Internal.ITextComponent_): void;
        func_201006_a(arg0: Internal.Entity, arg1: Internal.EntityAnchorArgument$Type_): Internal.CommandSource;
        func_201005_b(arg0: Vec3): Internal.CommandSource;
        func_201007_a(arg0: Internal.Vector2f): Internal.CommandSource;
        func_201009_a(arg0: Vec3): Internal.CommandSource;
        func_201008_k(): Internal.EntityAnchorArgument$Type;
        func_197027_g(): Internal.Entity;
        func_197028_i(): Internal.MinecraftServer;
        func_201003_a(arg0: Internal.ServerWorld): Internal.CommandSource;
        func_197024_a(arg0: Internal.Entity): Internal.CommandSource;
        func_197022_f(): Internal.Entity;
        func_197026_b(arg0: number): Internal.CommandSource;
        func_197023_e(): Internal.ServerWorld;
        func_197029_a(arg0: Internal.ResultConsumer_<Internal.CommandSource_>): Internal.CommandSource;
        func_197009_a(arg0: Internal.CommandContext<Internal.ISuggestionProvider>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        func_241861_q(): Internal.DynamicRegistries;
        func_197030_a(arg0: Internal.ITextComponent_, arg1: boolean): void;
        func_217293_r(): Internal.Collection<Internal.ISuggestionProvider$Coordinates>;
        func_217294_q(): Internal.Collection<Internal.ISuggestionProvider$Coordinates>;
        func_197031_a(): Internal.CommandSource;
        func_230390_p_(): Internal.Set<Internal.RegistryKey<Internal.World>>;
        getSource(): Internal.ICommandSource;
        func_197033_a(arg0: number): Internal.CommandSource;
        func_211270_p(): Internal.Collection<string>;
        readonly field_197041_c: Internal.ICommandSource;
        static readonly field_197040_b: Internal.SimpleCommandExceptionType;
        static readonly field_197039_a: Internal.SimpleCommandExceptionType;
        get source(): Internal.ICommandSource;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ICommandSource, arg1: Vec3, arg2: Internal.Vector2f, arg3: Internal.ServerWorld, arg4: number, arg5: string, arg6: Internal.ITextComponent, arg7: Internal.MinecraftServer, arg8: Internal.Entity);
    }
    type CommandSource_ = CommandSource;
    class ScriptEventsWrapper extends Document.Object {
        postCancellable(id: string, data: any): boolean;
        postCancellable(id: string): boolean;
        post(id: string): void;
        post(id: string, data: any): void;
        listen(id: any, handler: Internal.IEventHandler_): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(e: Internal.EventsJS);
    }
    type ScriptEventsWrapper_ = ScriptEventsWrapper;
    class PlayerEvent$LoadFromFile extends Internal.PlayerEvent {
        getPlayerFile(arg0: string): Internal.File;
        getPlayerDirectory(): Internal.File;
        getPlayerUUID(): string;
        get playerUUID(): string;
        get playerDirectory(): Internal.File;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.File, arg2: string);
    }
    type PlayerEvent$LoadFromFile_ = PlayerEvent$LoadFromFile;
    class StringConfig extends Internal.ConfigFromString<string> {
        getStringForGUI(v: string): Internal.ITextComponent;
        getColor(v: string): Internal.Color4I;
        static readonly COLOR: Internal.Color4I;
        readonly pattern: Internal.Pattern;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(p: Internal.Pattern);
        constructor();
    }
    type StringConfig_ = StringConfig;
    class Theme extends Document.Object {
        drawCheckboxBackground(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number, radioButton: boolean): void;
        drawTextBox(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number): void;
        listFormattedStringToWidth(text: Internal.ITextProperties, width: number): Internal.List<Internal.ITextProperties>;
        drawWidget(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number, type: Internal.WidgetType_): void;
        getStringWidth(text: Internal.ITextProperties): number;
        getStringWidth(text: Internal.IReorderingProcessor_): number;
        getStringWidth(text: string): number;
        trimStringToWidth(text: Internal.ITextProperties, width: number): Internal.ITextProperties;
        trimStringToWidth(text: string, width: number): string;
        drawHorizontalTab(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number, selected: boolean): void;
        drawScrollBar(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number, type: Internal.WidgetType_, vertical: boolean): void;
        getFontHeight(): number;
        drawString(matrixStack: Internal.MatrixStack, text: any, x: number, y: number, flags: number): number;
        drawString(matrixStack: Internal.MatrixStack, text: any, x: number, y: number): number;
        drawString(matrixStack: Internal.MatrixStack, text: any, x: number, y: number, color: Internal.Color4I, flags: number): number;
        drawGui(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number, type: Internal.WidgetType_): void;
        drawCheckbox(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number, type: Internal.WidgetType_, selected: boolean, radioButton: boolean): void;
        drawScrollBarBackground(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number, type: Internal.WidgetType_): void;
        drawSlot(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number, type: Internal.WidgetType_): void;
        trimStringToWidthReverse(text: string, width: number): string;
        getContentColor(type: Internal.WidgetType_): Internal.Color4I;
        getFont(): Internal.FontRenderer;
        drawContainerSlot(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number): void;
        getInvertedContentColor(): Internal.Color4I;
        drawPanelBackground(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number): void;
        drawContextMenuBackground(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number): void;
        drawButton(matrixStack: Internal.MatrixStack, x: number, y: number, w: number, h: number, type: Internal.WidgetType_): void;
        static readonly MOUSE_OVER: 16;
        static readonly BACKGROUND_SQUARES: Internal.ImageIcon;
        static readonly CENTERED: 4;
        static readonly SHADOW: 2;
        static readonly CENTERED_V: 32;
        static readonly DARK: 1;
        static renderDebugBoxes: false;
        static readonly UNICODE: 8;
        static readonly DEFAULT: Internal.Theme;
        get invertedContentColor(): Internal.Color4I;
        get fontHeight(): number;
        get font(): Internal.FontRenderer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Theme_ = Theme;
    class StringTextComponent extends Internal.TextComponent {
        func_240703_c_(arg0: Internal.Style): Internal.IFormattableTextComponent;
        func_240702_b_(arg0: string): Internal.IFormattableTextComponent;
        func_150265_g(): string;
        func_230439_a_<T_>(arg0: Internal.ITextProperties$IStyledTextAcceptor_<T_>, arg1: Internal.Style): Internal.Optional<T_>;
        func_212636_a(arg0: number): string;
        func_230438_a_<T_>(arg0: Internal.ITextProperties$ITextAcceptor_<T_>): Internal.Optional<T_>;
        func_240700_a_(arg0: Internal.UnaryOperator<Internal.Style>): Internal.IFormattableTextComponent;
        func_230531_f_(): Internal.IFormattableTextComponent;
        func_230531_f_(): Internal.StringTextComponent;
        getString(): string;
        func_240699_a_(arg0: Internal.TextFormatting_): Internal.IFormattableTextComponent;
        func_240701_a_(...arg0: Internal.TextFormatting[]): Internal.IFormattableTextComponent;
        func_230534_b_<T_>(arg0: Internal.ITextProperties$IStyledTextAcceptor_<T_>, arg1: Internal.Style): Internal.Optional<T_>;
        func_230533_b_<T_>(arg0: Internal.ITextProperties$ITextAcceptor_<T_>): Internal.Optional<T_>;
        static readonly field_240750_d_: Internal.ITextComponent;
        get string(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type StringTextComponent_ = StringTextComponent;
    interface ToLongFunction <T> {
        applyAsLong(arg0: T): number;
        (arg0: T): number;
    }
    type ToLongFunction_<T> = ((arg0: T)=>number) | ToLongFunction<T>;
    class ItemToItemRecipeJS extends Internal.MekanismRecipeJS {
        readonly outputName: string;
        readonly inputName: string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: string);
        constructor();
    }
    type ItemToItemRecipeJS_ = ItemToItemRecipeJS;
    interface VertexSink {
        flush(): void;
        ensureCapacity(arg0: number): void;
    }
    type VertexSink_ = VertexSink;
    interface IGlyph {
        func_223276_c_(): number;
        func_223275_b_(): number;
        getAdvance(): number;
        func_223274_a_(arg0: boolean): number;
        func_223273_a_(): number;
        (): number;
    }
    type IGlyph_ = (()=>number) | IGlyph;
    interface ValueLayout$OfFloat extends Internal.ValueLayout {
        withName(arg0: string): Internal.MemoryLayout;
        withName(arg0: string): Internal.ValueLayout;
        withName(arg0: string): Internal.ValueLayout$OfFloat;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout;
        withOrder(arg0: Internal.ByteOrder): Internal.ValueLayout$OfFloat;
        withoutName(): Internal.ValueLayout;
        withoutName(): Internal.MemoryLayout;
        withoutName(): Internal.ValueLayout$OfFloat;
        withByteAlignment(arg0: number): Internal.ValueLayout$OfFloat;
        withByteAlignment(arg0: number): Internal.MemoryLayout;
        withByteAlignment(arg0: number): Internal.ValueLayout;
    }
    type ValueLayout$OfFloat_ = ValueLayout$OfFloat;
    interface DynamicOps <T> {
        updateGeneric(arg0: T, arg1: T, arg2: Internal.Function_<T, T>): T;
        listBuilder(): Internal.ListBuilder<T>;
        createIntList(arg0: Internal.IntStream): T;
        createLong(arg0: number): T;
        createDouble(arg0: number): T;
        createLongList(arg0: Internal.LongStream): T;
        createShort(arg0: number): T;
        mergeToList(arg0: T, arg1: Internal.List<T>): Internal.DataResult<T>;
        mergeToList(arg0: T, arg1: T): Internal.DataResult<T>;
        update(arg0: T, arg1: string, arg2: Internal.Function_<T, T>): T;
        createByteList(arg0: Internal.ByteBuffer): T;
        getByteBuffer(arg0: T): Internal.DataResult<Internal.ByteBuffer>;
        withDecoder<E>(arg0: Internal.Decoder_<E>): Internal.Function<T, Internal.DataResult<Internal.Pair<E, T>>>;
        createBoolean(arg0: boolean): T;
        remove(arg0: T, arg1: string): T;
        getMapValues(arg0: T): Internal.DataResult<Internal.Stream<Internal.Pair<T, T>>>;
        empty(): T;
        withParser<E>(arg0: Internal.Decoder_<E>): Internal.Function<T, Internal.DataResult<E>>;
        mergeToMap(arg0: T, arg1: Internal.Map_<T, T>): Internal.DataResult<T>;
        mergeToMap(arg0: T, arg1: T, arg2: T): Internal.DataResult<T>;
        mergeToMap(arg0: T, arg1: Internal.MapLike<T>): Internal.DataResult<T>;
        convertList<U>(arg0: Internal.DynamicOps<U>, arg1: T): U;
        emptyList(): T;
        getIntStream(arg0: T): Internal.DataResult<Internal.IntStream>;
        getList(arg0: T): Internal.DataResult<Internal.Consumer<Internal.Consumer<T>>>;
        getLongStream(arg0: T): Internal.DataResult<Internal.LongStream>;
        get(arg0: T, arg1: string): Internal.DataResult<T>;
        getMapEntries(arg0: T): Internal.DataResult<Internal.Consumer<Internal.BiConsumer<T, T>>>;
        emptyMap(): T;
        getBooleanValue(arg0: T): Internal.DataResult<boolean>;
        createNumeric(arg0: Internal.Number): T;
        getStream(arg0: T): Internal.DataResult<Internal.Stream<T>>;
        convertMap<U>(arg0: Internal.DynamicOps<U>, arg1: T): U;
        mergeToPrimitive(arg0: T, arg1: T): Internal.DataResult<T>;
        getStringValue(arg0: T): Internal.DataResult<string>;
        createList(arg0: Internal.Stream<T>): T;
        withEncoder<E>(arg0: Internal.Encoder_<E>): Internal.Function<E, Internal.DataResult<T>>;
        set(arg0: T, arg1: string, arg2: T): T;
        getGeneric(arg0: T, arg1: T): Internal.DataResult<T>;
        createString(arg0: string): T;
        convertTo<U>(arg0: Internal.DynamicOps<U>, arg1: T): U;
        createMap(arg0: Internal.Stream<Internal.Pair<T, T>>): T;
        createMap(arg0: Internal.Map_<T, T>): T;
        mapBuilder(): Internal.RecordBuilder<T>;
        getMap(arg0: T): Internal.DataResult<Internal.MapLike<T>>;
        createByte(arg0: number): T;
        createFloat(arg0: number): T;
        createInt(arg0: number): T;
        compressMaps(): boolean;
        getNumberValue(arg0: T): Internal.DataResult<Internal.Number>;
        getNumberValue(arg0: T, arg1: Internal.Number): Internal.Number;
    }
    type DynamicOps_<T> = DynamicOps<T>;
    class StraightTrunkPlacer extends Internal.AbstractTrunkPlacer {
        static readonly field_236903_a_: Internal.Codec<Internal.StraightTrunkPlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type StraightTrunkPlacer_ = StraightTrunkPlacer;
    interface IPigmentProvider extends Internal.IChemicalProvider<Internal.Pigment> {
        getStack(arg0: number): Internal.PigmentStack;
        getStack(arg0: number): Internal.ChemicalStack<any>;
    }
    type IPigmentProvider_ = IPigmentProvider;
    interface IModelConfiguration {
        getPartVisibility(arg0: Internal.IModelGeometryPart, arg1: boolean): boolean;
        getPartVisibility(arg0: Internal.IModelGeometryPart): boolean;
        getOwnerModel(): Internal.IUnbakedModel;
        getCombinedTransform(): Internal.IModelTransform;
        isShadedInGui(): boolean;
        isTexturePresent(arg0: string): boolean;
        useSmoothLighting(): boolean;
        getCameraTransforms(): Internal.ItemCameraTransforms;
        getModelName(): string;
        isSideLit(): boolean;
        resolveTexture(arg0: string): Internal.RenderMaterial;
    }
    type IModelConfiguration_ = IModelConfiguration;
    class WhiteList extends Internal.UserList<Internal.GameProfile, Internal.WhitelistEntry> {
        func_152705_a(arg0: Internal.GameProfile): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.File);
    }
    type WhiteList_ = WhiteList;
    class CMoveVehiclePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_187003_c(): number;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_187002_b(): number;
        func_211402_a(): boolean;
        func_187004_a(): number;
        func_187006_d(): number;
        func_187005_e(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity);
    }
    type CMoveVehiclePacket_ = CMoveVehiclePacket;
    class ContextMenu extends Internal.Panel {
        closeGui(openPrevScreen: boolean): void;
        closeGui(): void;
        openContextMenu(panel: Internal.Panel): void;
        openGui(): void;
        openGuiLater(): void;
        run(): void;
        openAfter(runnable: Internal.Runnable_): Internal.Runnable;
        closeContextMenu(): void;
        hasIcons: boolean;
        readonly items: Internal.List<Internal.ContextMenuItem>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(panel: Internal.Panel, i: Internal.List<Internal.ContextMenuItem>);
    }
    type ContextMenu_ = ContextMenu;
    class SEntityEquipmentPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_241790_c_(): Internal.List<Internal.Pair<EquipmentSlot, Internal.ItemStack>>;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149389_d(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.List<Internal.Pair<EquipmentSlot, Internal.ItemStack>>);
    }
    type SEntityEquipmentPacket_ = SEntityEquipmentPacket;
    interface MemorySegment$Scope {
        isAlive(): boolean;
        hashCode(): number;
        equals(arg0: any): boolean;
    }
    type MemorySegment$Scope_ = MemorySegment$Scope;
    class EntityViewRenderEvent$RenderFogEvent extends Internal.EntityViewRenderEvent$FogEvent {
        getFarPlaneDistance(): number;
        get farPlaneDistance(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.FogRenderer$FogType, arg1: Internal.ActiveRenderInfo, arg2: number, arg3: number);
    }
    type EntityViewRenderEvent$RenderFogEvent_ = EntityViewRenderEvent$RenderFogEvent;
    class AlchemyTableRecipeJS extends Internal.BMRecipeJS {
        ticks(arg0: number): Internal.AlchemyTableRecipeJS;
        upgradeLevel(arg0: number): Internal.AlchemyTableRecipeJS;
        syphon(arg0: number): Internal.AlchemyTableRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AlchemyTableRecipeJS_ = AlchemyTableRecipeJS;
    interface IRequirementsStrategy {
        createRequirements(arg0: Internal.Collection<string>): string[][];
        (arg0: Internal.Collection<string>): string[][];
    }
    type IRequirementsStrategy_ = ((arg0: Internal.Collection<string>)=>string[][]) | IRequirementsStrategy;
    class ProfileBanEntry extends Internal.BanEntry<Internal.GameProfile> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.JsonObject);
        constructor(arg0: Internal.GameProfile, arg1: Internal.Date, arg2: string, arg3: Internal.Date, arg4: string);
        constructor(arg0: Internal.GameProfile);
    }
    type ProfileBanEntry_ = ProfileBanEntry;
    class MobSpawnInfoBuilder extends Internal.MobSpawnInfo$Builder {
        getEntityTypes(): Internal.Set<Internal.EntityType<any>>;
        getSpawner(arg0: Internal.EntityClassification_): Internal.List<Internal.MobSpawnInfo$Spawners>;
        getProbability(): number;
        disablePlayerSpawn(): Internal.MobSpawnInfoBuilder;
        getCost(arg0: Internal.EntityType_<any>): Internal.MobSpawnInfo$SpawnCosts;
        getSpawnerTypes(): Internal.Set<Internal.EntityClassification>;
        get probability(): number;
        get spawnerTypes(): Internal.Set<Internal.EntityClassification>;
        get entityTypes(): Internal.Set<Internal.EntityType<any>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MobSpawnInfo);
    }
    type MobSpawnInfoBuilder_ = MobSpawnInfoBuilder;
    abstract class DyingChestedHorseEntity extends Internal.AbstractChestedHorseEntity implements Internal.IDying {
        shouldRiderSit(): boolean;
        isDying(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        dyingInteract(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        formatLoc(arg0: Vec3): string;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get dying(): boolean;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type DyingChestedHorseEntity_ = DyingChestedHorseEntity;
    class LocatableEventAnnounce extends net.minecraftforge.eventbus.api.Event {
        readonly change: Internal.LocatableEventAnnounce$LocatableEvent;
        readonly target: Internal.ILocatable;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ILocatable, arg1: Internal.LocatableEventAnnounce$LocatableEvent);
        constructor();
    }
    type LocatableEventAnnounce_ = LocatableEventAnnounce;
    class FMLPlayMessages$SpawnEntity extends Document.Object {
        static encode(arg0: Internal.FMLPlayMessages$SpawnEntity, arg1: Internal.PacketBuffer): void;
        getAdditionalData(): Internal.PacketBuffer;
        static handle(arg0: Internal.FMLPlayMessages$SpawnEntity, arg1: java_.util.function_.Supplier_<Internal.NetworkEvent$Context_>): void;
        getEntity(): Internal.Entity;
        static decode(arg0: Internal.PacketBuffer): Internal.FMLPlayMessages$SpawnEntity;
        getTypeId(): number;
        getHeadYaw(): number;
        getYaw(): number;
        getPitch(): number;
        getVelY(): number;
        getVelZ(): number;
        getUuid(): Internal.UUID;
        getVelX(): number;
        getPosZ(): number;
        getEntityId(): number;
        getPosX(): number;
        getPosY(): number;
        get headYaw(): number;
        get velZ(): number;
        get entityId(): number;
        get velY(): number;
        get velX(): number;
        get uuid(): Internal.UUID;
        get yaw(): number;
        get posX(): number;
        get posY(): number;
        get posZ(): number;
        get typeId(): number;
        get additionalData(): Internal.PacketBuffer;
        get pitch(): number;
        get entity(): Internal.Entity;
    }
    type FMLPlayMessages$SpawnEntity_ = FMLPlayMessages$SpawnEntity;
    class LoomContainer extends Internal.Container {
        func_217023_e(): number;
        func_217022_g(): Internal.Slot;
        func_217024_f(): Internal.Slot;
        redirect$zjj000$quickMoveStack(arg0: Internal.ItemStack): Internal.Item;
        func_217025_h(): Internal.Slot;
        func_217026_i(): Internal.Slot;
        func_217020_a(arg0: Internal.Runnable_): void;
        constant$cgb000$getLimit(arg0: number): number;
        field_217036_f: Internal.Slot;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IWorldPosCallable);
    }
    type LoomContainer_ = LoomContainer;
    interface ModelVertexSink extends Internal.VertexSink {
        writeQuad(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
    }
    type ModelVertexSink_ = ((arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number)=>void) | ModelVertexSink;
    interface IMachineAppearance {
        getProperty<T>(arg0: Internal.MachineAppearanceProperty_<T>): T;
        getHardness(): number;
        getMiningLevel(): number;
        getResistance(): number;
        getColor(): number;
        getShape(): Internal.VoxelShape;
        getTool(): Internal.ToolType;
        getLightLevel(): number;
        copy(): Internal.IMachineAppearance;
        getBlockModel(): ResourceLocation;
        getItemModel(): ResourceLocation;
        getSound(): Internal.SoundEvent;
    }
    type IMachineAppearance_ = IMachineAppearance;
    interface TileRequiresMultiblock {
        getRequiredStructureType(): Internal.StructureType;
        (): Internal.StructureType;
    }
    type TileRequiresMultiblock_ = (()=>Internal.StructureType) | TileRequiresMultiblock;
    class PageAttributes$OrientationRequestedType extends Internal.AttributeValue {
        static readonly LANDSCAPE: Internal.PageAttributes$OrientationRequestedType;
        static readonly PORTRAIT: Internal.PageAttributes$OrientationRequestedType;
    }
    type PageAttributes$OrientationRequestedType_ = PageAttributes$OrientationRequestedType;
    class TeamManager extends Document.Object {
        getInternalPlayerTeam(arg0: Internal.UUID): Internal.PlayerTeam;
        getName(arg0: Internal.UUID): Internal.ITextComponent;
        getKnownPlayers(): Internal.Map<Internal.UUID, Internal.PlayerTeam>;
        save(): void;
        getTeamMap(): Internal.Map<Internal.UUID, Internal.Team>;
        getId(): Internal.UUID;
        serializeNBT(): Internal.SNBTCompoundTag;
        load(): void;
        getServer(): Internal.MinecraftServer;
        getTeamNameMap(): Internal.Map<string, Internal.Team>;
        createServerTeam(arg0: Internal.ServerPlayerEntity, arg1: string): Internal.ServerTeam;
        syncAll(): void;
        arePlayersInSameTeam(arg0: Internal.ServerPlayerEntity, arg1: Internal.ServerPlayerEntity): boolean;
        createServer(arg0: Internal.CommandSource, arg1: string): org.apache.commons.lang3.tuple.Pair<number, Internal.ServerTeam>;
        getExtraData(): Internal.CompoundNBT;
        getPlayerTeamID(arg0: Internal.UUID): Internal.UUID;
        sync(arg0: Internal.ServerPlayerEntity, arg1: Internal.Team): void;
        sync(arg0: Internal.ServerPlayerEntity): void;
        createClientTeamManager(): Internal.ClientTeamManager;
        getTeams(): Internal.Collection<Internal.Team>;
        createPartyTeam(arg0: Internal.ServerPlayerEntity, arg1: string): Internal.PartyTeam;
        createParty(arg0: Internal.ServerPlayerEntity, arg1: string): org.apache.commons.lang3.tuple.Pair<number, Internal.PartyTeam>;
        getTeamByID(arg0: Internal.UUID): Internal.Team;
        getPlayerTeam(arg0: Internal.ServerPlayerEntity): Internal.Team;
        getPlayerTeam(arg0: Internal.UUID): Internal.Team;
        saveNow(): void;
        playerLoggedOut(arg0: Internal.ServerPlayerEntity): void;
        playerLoggedIn(arg0: Internal.ServerPlayerEntity, arg1: Internal.UUID, arg2: string): void;
        readonly server: Internal.MinecraftServer;
        static readonly FOLDER_NAME: Internal.FolderName;
        static INSTANCE: Internal.TeamManager;
        get teamNameMap(): Internal.Map<string, Internal.Team>;
        get knownPlayers(): Internal.Map<Internal.UUID, Internal.PlayerTeam>;
        get teams(): Internal.Collection<Internal.Team>;
        get extraData(): Internal.CompoundNBT;
        get teamMap(): Internal.Map<Internal.UUID, Internal.Team>;
        get id(): Internal.UUID;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MinecraftServer);
    }
    type TeamManager_ = TeamManager;
    class ResourceBundle$Control extends Document.Object {
        static getNoFallbackControl(arg0: Internal.List<string>): Internal.ResourceBundle$Control;
        static getControl(arg0: Internal.List<string>): Internal.ResourceBundle$Control;
        toBundleName(arg0: string, arg1: Internal.Locale): string;
        needsReload(arg0: string, arg1: Internal.Locale, arg2: string, arg3: Internal.ClassLoader, arg4: Internal.ResourceBundle, arg5: number): boolean;
        toResourceName(arg0: string, arg1: string): string;
        newBundle(arg0: string, arg1: Internal.Locale, arg2: string, arg3: Internal.ClassLoader, arg4: boolean): Internal.ResourceBundle;
        getFormats(arg0: string): Internal.List<string>;
        getTimeToLive(arg0: string, arg1: Internal.Locale): number;
        getFallbackLocale(arg0: string, arg1: Internal.Locale): Internal.Locale;
        getCandidateLocales(arg0: string, arg1: Internal.Locale): Internal.List<Internal.Locale>;
        static readonly FORMAT_PROPERTIES: ["java.properties"];
        static readonly TTL_DONT_CACHE: -1;
        static readonly FORMAT_DEFAULT: ["java.class", "java.properties"];
        static readonly TTL_NO_EXPIRATION_CONTROL: -2;
        static readonly FORMAT_CLASS: ["java.class"];
    }
    type ResourceBundle$Control_ = ResourceBundle$Control;
    class WitherSkeletonEntity extends Internal.AbstractSkeletonEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.WitherSkeletonEntity>, arg1: Internal.World);
    }
    type WitherSkeletonEntity_ = WitherSkeletonEntity;
    class ChunkDataEvent$Load extends Internal.ChunkDataEvent {
        getStatus(): Internal.ChunkStatus$Type;
        get status(): Internal.ChunkStatus$Type;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.IChunk, arg1: Internal.CompoundNBT, arg2: Internal.ChunkStatus$Type);
    }
    type ChunkDataEvent$Load_ = ChunkDataEvent$Load;
    class TextHitInfo extends Document.Object {
        static beforeOffset(arg0: number): Internal.TextHitInfo;
        getOtherHit(): Internal.TextHitInfo;
        static trailing(arg0: number): Internal.TextHitInfo;
        getOffsetHit(arg0: number): Internal.TextHitInfo;
        isLeadingEdge(): boolean;
        static leading(arg0: number): Internal.TextHitInfo;
        equals(arg0: Internal.TextHitInfo): boolean;
        static afterOffset(arg0: number): Internal.TextHitInfo;
        getCharIndex(): number;
        getInsertionIndex(): number;
        get otherHit(): Internal.TextHitInfo;
        get charIndex(): number;
        get leadingEdge(): boolean;
        get insertionIndex(): number;
    }
    type TextHitInfo_ = TextHitInfo;
    class CrashReportCategory extends Document.Object {
        static func_184876_a(arg0: number, arg1: number, arg2: number): string;
        func_71507_a(arg0: string, arg1: any): Internal.CrashReportCategory;
        func_85069_a(arg0: Internal.StackTraceElement, arg1: Internal.StackTraceElement): boolean;
        func_189529_a(arg0: string, arg1: Internal.ICrashReportDetail<string>): Internal.CrashReportCategory;
        static func_175750_a(arg0: Internal.CrashReportCategory, arg1: BlockPos, arg2: Internal.BlockState): void;
        func_85073_a(arg0: number): number;
        static func_85074_a(arg0: number, arg1: number, arg2: number): string;
        func_85070_b(arg0: number): void;
        applyStackTrace(arg0: Internal.Throwable): void;
        func_85072_a(arg0: Internal.StringBuilder): void;
        func_147152_a(): Internal.StackTraceElement[];
        static func_180522_a(arg0: BlockPos): string;
        func_71499_a(arg0: string, arg1: Internal.Throwable): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CrashReport, arg1: string);
    }
    type CrashReportCategory_ = CrashReportCategory;
    class RegistryEntry <T> extends Document.Object implements Internal.IForgeRegistryEntry<any> {
        getRegistryType(): Internal.Class<T>;
        getRegistryName(): ResourceLocation;
        setRegistryName(name: ResourceLocation_): T;
        get registryType(): Internal.Class<T>;
        get registryName(): ResourceLocation;
        set registryName(name: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RegistryEntry_<T> = RegistryEntry<T>;
    abstract class AbstractLong2ObjectSortedMap <V> extends Internal.AbstractLong2ObjectMap<V> implements Internal.Long2ObjectSortedMap<V> {
        long2ObjectEntrySet(): Internal.ObjectSortedSet<Internal.Long2ObjectMap$Entry<V>>;
        long2ObjectEntrySet(): Internal.ObjectSet<any>;
        getOrDefault(arg0: any, arg1: V): V;
        getOrDefault(arg0: number, arg1: V): V;
        sequencedKeySet(): Internal.SequencedSet<number>;
        computeIfAbsent(arg0: any, arg1: Internal.Function_<any,any>): any;
        computeIfAbsent(arg0: number, arg1: Internal.LongFunction_<V>): V;
        computeIfAbsent(arg0: number, arg1: Internal.Function_<number, V>): V;
        values(): Internal.Collection<any>;
        values(): Internal.ObjectCollection<V>;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        computeIfAbsentPartial(arg0: number, arg1: Internal.Long2ObjectFunction_<V>): V;
        replaceAll(arg0: Internal.BiFunction_<number, V, V>): void;
        andThen<V_>(arg0: Internal.Function_<V, V_>): Internal.Function<number, V_>;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        put(arg0: number, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: number): V;
        remove(arg0: number, arg1: any): boolean;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        compute(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        pollFirstEntry(): Internal.Map$Entry<number, V>;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        get(arg0: any): V;
        lastKey(): any;
        lastKey(): number;
        lastLongKey(): number;
        firstEntry(): Internal.Map$Entry<number, V>;
        putFirst(arg0: number, arg1: V): V;
        keySet(): Internal.Set<any>;
        keySet(): Internal.LongSortedSet;
        putLast(arg0: number, arg1: V): V;
        firstLongKey(): number;
        entrySet(): Internal.ObjectSortedSet<Internal.Map$Entry<number, V>>;
        entrySet(): Internal.ObjectSet<any>;
        entrySet(): Internal.Set<any>;
        apply(arg0: number): V;
        apply(arg0: number): V;
        forEach(arg0: Internal.BiConsumer_<number, V>): void;
        containsKey(arg0: any): boolean;
        subMap(arg0: number, arg1: number): Internal.Long2ObjectSortedMap<V>;
        subMap(arg0: any, arg1: any): Internal.SortedMap<any, any>;
        subMap(arg0: number, arg1: number): Internal.Long2ObjectSortedMap<V>;
        clear(): void;
        sequencedValues(): Internal.SequencedCollection<V>;
        pollLastEntry(): Internal.Map$Entry<number, V>;
        comparator(): Internal.LongComparator;
        comparator(): Internal.Comparator<any>;
        lastEntry(): Internal.Map$Entry<number, V>;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compose<V_>(arg0: Internal.Function_<V_, number>): Internal.Function<V_, V>;
        firstKey(): any;
        firstKey(): number;
        headMap(arg0: any): Internal.SortedMap<any, any>;
        headMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        headMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        sequencedEntrySet(): Internal.SequencedSet<Internal.Map$Entry<number, V>>;
        putIfAbsent(arg0: number, arg1: V): V;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: number, arg1: V): V;
        reversed(): Internal.SortedMap<number, V>;
        reversed(): Internal.SequencedMap<any, any>;
        tailMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        tailMap(arg0: number): Internal.Long2ObjectSortedMap<V>;
        tailMap(arg0: any): Internal.SortedMap<any, any>;
    }
    type AbstractLong2ObjectSortedMap_<V> = AbstractLong2ObjectSortedMap<V>;
    class PalettedContainer <T> extends Document.Object implements Internal.IResizeCallback<T>, Internal.PalettedContainerExtended<any> {
        func_235963_a_(arg0: Internal.Predicate_<T>): boolean;
        func_222639_b(arg0: number, arg1: number, arg2: number, arg3: T): T;
        getDataArray(): Internal.BitArray;
        func_186009_b(arg0: Internal.PacketBuffer): void;
        func_210459_b(): void;
        func_186018_a(): number;
        func_225497_a(arg0: Internal.PalettedContainer$ICountConsumer_<T>): void;
        getPalette(): Internal.IPalette<any>;
        func_186016_a(arg0: number, arg1: number, arg2: number): T;
        getPaletteSize(): number;
        func_186015_a(arg0: number): T;
        getDefaultValue(): any;
        func_186010_a(arg0: Internal.PacketBuffer): void;
        onResize(arg0: number, arg1: T): number;
        func_196963_b(arg0: Internal.CompoundNBT_, arg1: string, arg2: string): void;
        func_222642_a(arg0: Internal.ListNBT, arg1: number[]): void;
        func_222641_a(arg0: number, arg1: number, arg2: number, arg3: T): T;
        func_210460_c(): void;
        get dataArray(): Internal.BitArray;
        get defaultValue(): any;
        get palette(): Internal.IPalette<any>;
        get paletteSize(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IPalette<T>, arg1: Internal.ObjectIntIdentityMap<T>, arg2: Internal.Function<Internal.CompoundNBT, T>, arg3: Internal.Function<T, Internal.CompoundNBT>, arg4: T);
    }
    type PalettedContainer_<T> = PalettedContainer<T>;
    class RenderingHints extends Document.Object implements Internal.Map<any, any>, Internal.Cloneable {
        add(arg0: Internal.RenderingHints): void;
        getOrDefault(arg0: any, arg1: any): any;
        entrySet(): Internal.Set<Internal.Map$Entry<any, any>>;
        forEach(arg0: Internal.BiConsumer_<any, any>): void;
        containsKey(arg0: any): boolean;
        computeIfAbsent(arg0: any, arg1: Internal.Function_<any, any>): any;
        values(): Internal.Collection<any>;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        isEmpty(): boolean;
        clear(): void;
        replaceAll(arg0: Internal.BiFunction_<any, any, any>): void;
        containsValue(arg0: any): boolean;
        put(arg0: any, arg1: any): any;
        remove(arg0: any): any;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: any, arg1: Internal.BiFunction_<any, any, any>): any;
        computeIfPresent(arg0: any, arg1: Internal.BiFunction_<any, any, any>): any;
        size(): number;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any, any, any>): any;
        putAll(arg0: Internal.Map_<any, any>): void;
        get(arg0: any): any;
        clone(): any;
        putIfAbsent(arg0: any, arg1: any): any;
        keySet(): Internal.Set<any>;
        static readonly VALUE_TEXT_ANTIALIAS_LCD_VRGB: any;
        static readonly VALUE_TEXT_ANTIALIAS_LCD_VBGR: any;
        static readonly KEY_FRACTIONALMETRICS: Internal.RenderingHints$Key;
        static readonly VALUE_RESOLUTION_VARIANT_SIZE_FIT: any;
        static readonly VALUE_TEXT_ANTIALIAS_DEFAULT: any;
        static readonly VALUE_TEXT_ANTIALIAS_OFF: any;
        static readonly VALUE_ANTIALIAS_OFF: any;
        static readonly VALUE_INTERPOLATION_BICUBIC: any;
        static readonly VALUE_COLOR_RENDER_QUALITY: any;
        static readonly VALUE_COLOR_RENDER_DEFAULT: any;
        static readonly VALUE_STROKE_DEFAULT: any;
        static readonly VALUE_RENDER_DEFAULT: any;
        static readonly VALUE_RENDER_QUALITY: any;
        static readonly KEY_ALPHA_INTERPOLATION: Internal.RenderingHints$Key;
        static readonly KEY_DITHERING: Internal.RenderingHints$Key;
        static readonly VALUE_FRACTIONALMETRICS_OFF: any;
        static readonly VALUE_ANTIALIAS_DEFAULT: any;
        static readonly VALUE_ALPHA_INTERPOLATION_SPEED: any;
        static readonly KEY_TEXT_ANTIALIASING: Internal.RenderingHints$Key;
        static readonly VALUE_TEXT_ANTIALIAS_GASP: any;
        static readonly KEY_TEXT_LCD_CONTRAST: Internal.RenderingHints$Key;
        static readonly VALUE_RENDER_SPEED: any;
        static readonly VALUE_FRACTIONALMETRICS_ON: any;
        static readonly VALUE_RESOLUTION_VARIANT_DEFAULT: any;
        static readonly KEY_ANTIALIASING: Internal.RenderingHints$Key;
        static readonly VALUE_DITHER_ENABLE: any;
        static readonly KEY_STROKE_CONTROL: Internal.RenderingHints$Key;
        static readonly VALUE_STROKE_PURE: any;
        static readonly KEY_RENDERING: Internal.RenderingHints$Key;
        static readonly VALUE_DITHER_DEFAULT: any;
        static readonly KEY_RESOLUTION_VARIANT: Internal.RenderingHints$Key;
        static readonly VALUE_INTERPOLATION_BILINEAR: any;
        static readonly VALUE_ALPHA_INTERPOLATION_QUALITY: any;
        static readonly VALUE_RESOLUTION_VARIANT_BASE: any;
        static readonly KEY_COLOR_RENDERING: Internal.RenderingHints$Key;
        static readonly VALUE_RESOLUTION_VARIANT_DPI_FIT: any;
        static readonly VALUE_ANTIALIAS_ON: any;
        static readonly VALUE_STROKE_NORMALIZE: any;
        static readonly VALUE_FRACTIONALMETRICS_DEFAULT: any;
        static readonly VALUE_INTERPOLATION_NEAREST_NEIGHBOR: any;
        static readonly VALUE_DITHER_DISABLE: any;
        static readonly VALUE_TEXT_ANTIALIAS_LCD_HRGB: any;
        static readonly VALUE_TEXT_ANTIALIAS_LCD_HBGR: any;
        static readonly KEY_INTERPOLATION: Internal.RenderingHints$Key;
        static readonly VALUE_ALPHA_INTERPOLATION_DEFAULT: any;
        static readonly VALUE_TEXT_ANTIALIAS_ON: any;
        static readonly VALUE_COLOR_RENDER_SPEED: any;
        get empty(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<Internal.RenderingHints$Key, any>);
        constructor(arg0: Internal.RenderingHints$Key, arg1: any);
    }
    type RenderingHints_ = RenderingHints;
    class Module extends Document.Object implements Internal.AnnotatedElement {
        getDescriptor(): Internal.ModuleDescriptor;
        getName(): string;
        addReads(arg0: Internal.Module): Internal.Module;
        isAnnotationPresent(arg0: Internal.Class<Internal.Annotation>): boolean;
        canRead(arg0: Internal.Module): boolean;
        getLayer(): Internal.ModuleLayer;
        getResourceAsStream(arg0: string): Internal.InputStream;
        addUses(arg0: Internal.Class<any>): Internal.Module;
        addExports(arg0: string, arg1: Internal.Module): Internal.Module;
        getClassLoader(): Internal.ClassLoader;
        isNamed(): boolean;
        getAnnotations(): Internal.Annotation[];
        canUse(arg0: Internal.Class<any>): boolean;
        getDeclaredAnnotations(): Internal.Annotation[];
        isOpen(arg0: string): boolean;
        isOpen(arg0: string, arg1: Internal.Module): boolean;
        getAnnotationsByType<T_>(arg0: Internal.Class<T_>): T_[];
        getDeclaredAnnotationsByType<T_>(arg0: Internal.Class<T_>): T_[];
        getAnnotation<T_>(arg0: Internal.Class<T_>): T_;
        isExported(arg0: string): boolean;
        isExported(arg0: string, arg1: Internal.Module): boolean;
        getDeclaredAnnotation<T_>(arg0: Internal.Class<T_>): T_;
        getPackages(): Internal.Set<string>;
        addOpens(arg0: string, arg1: Internal.Module): Internal.Module;
        isNativeAccessEnabled(): boolean;
        get declaredAnnotations(): Internal.Annotation[];
        get named(): boolean;
        get classLoader(): Internal.ClassLoader;
        get name(): string;
        get annotations(): Internal.Annotation[];
        get nativeAccessEnabled(): boolean;
        get descriptor(): Internal.ModuleDescriptor;
        get packages(): Internal.Set<string>;
        get layer(): Internal.ModuleLayer;
    }
    type Module_ = Module;
    class RenderState$OverlayState extends Internal.RenderState$BooleanState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean);
    }
    type RenderState$OverlayState_ = RenderState$OverlayState;
    class SlimeEntity extends Internal.MobEntity implements Internal.IMob {
        shouldRiderSit(): boolean;
        func_200600_R(): Internal.EntityType<Internal.SlimeEntity>;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_70799_a(arg0: number, arg1: boolean): void;
        isMultipartEntity(): boolean;
        static func_223366_c(arg0: Internal.EntityType_<Internal.SlimeEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_70809_q(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_189101_db(): boolean;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        field_70813_a: number;
        field_70812_c: number;
        field_70811_b: number;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.SlimeEntity>, arg1: Internal.World);
    }
    type SlimeEntity_ = SlimeEntity;
    interface IIngredientListOverlay {
        getVisibleIngredients(): Internal.ImmutableList<any>;
        hasKeyboardFocus(): boolean;
        getIngredientUnderMouse(): any;
        getIngredientUnderMouse<T>(arg0: Internal.IIngredientType_<T>): T;
    }
    type IIngredientListOverlay_ = IIngredientListOverlay;
    interface IInventoryChangedListener {
        func_76316_a(arg0: Internal.IInventory): void;
        (arg0: Internal.IInventory): void;
    }
    type IInventoryChangedListener_ = ((arg0: Internal.IInventory)=>void) | IInventoryChangedListener;
    class PageAttributes$PrintQualityType extends Internal.AttributeValue {
        static readonly HIGH: Internal.PageAttributes$PrintQualityType;
        static readonly DRAFT: Internal.PageAttributes$PrintQualityType;
        static readonly NORMAL: Internal.PageAttributes$PrintQualityType;
    }
    type PageAttributes$PrintQualityType_ = PageAttributes$PrintQualityType;
    interface ParticleManagerAccess {
        invokeMakeParticle<T>(arg0: T, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.Particle;
        (arg0: T, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): Internal.Particle;
    }
    type ParticleManagerAccess_ = ((arg0: T, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number)=>Internal.Particle) | ParticleManagerAccess;
    class SEntityPropertiesPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149441_d(): Internal.List<Internal.SEntityPropertiesPacket$Snapshot>;
        func_149442_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.Collection<Internal.ModifiableAttributeInstance>);
    }
    type SEntityPropertiesPacket_ = SEntityPropertiesPacket;
    abstract class ImmutableList <E> extends Internal.ImmutableCollection<E> implements Internal.List<E>, Internal.RandomAccess {
        removeLast(): E;
        getLast(): E;
        replaceAll(arg0: Internal.UnaryOperator<E>): void;
        asList(): Internal.ImmutableList<E>;
        remove(arg0: number): E;
        addLast(arg0: E): void;
        static sortedCopyOf<E_>(arg0: Internal.Iterable_<E_>): Internal.ImmutableList<E_>;
        static sortedCopyOf<E_>(arg0: Internal.Comparator<E_>, arg1: Internal.Iterable_<E_>): Internal.ImmutableList<E_>;
        iterator(): Internal.UnmodifiableIterator<E>;
        iterator(): Internal.Iterator<any>;
        stream(): Internal.Stream<E>;
        getFirst(): E;
        removeFirst(): E;
        get(arg0: number): E;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_, arg7: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_, arg7: E_, arg8: E_, arg9: E_, arg10: E_, arg11: E_, ...arg12: E_[]): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_, arg7: E_, arg8: E_, arg9: E_, arg10: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_, arg7: E_, arg8: E_, arg9: E_): Internal.ImmutableList<E_>;
        static of<E_>(): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_): Internal.ImmutableList<E_>;
        static of<E_>(arg0: E_, arg1: E_, arg2: E_, arg3: E_, arg4: E_, arg5: E_, arg6: E_, arg7: E_, arg8: E_): Internal.ImmutableList<E_>;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        static builder<E_>(): Internal.ImmutableList$Builder<E_>;
        parallelStream(): Internal.Stream<E>;
        indexOf(arg0: any): number;
        add(arg0: number, arg1: E): void;
        subList(arg0: number, arg1: number): Internal.List<any>;
        subList(arg0: number, arg1: number): Internal.ImmutableList<E>;
        set(arg0: number, arg1: E): E;
        spliterator(): Internal.Spliterator<E>;
        sort(arg0: Internal.Comparator<E>): void;
        static copyOf<E_>(arg0: E_[]): Internal.ImmutableList<E_>;
        static copyOf<E_>(arg0: Internal.Collection<E_>): Internal.ImmutableList<E_>;
        static copyOf<E_>(arg0: Internal.Iterable_<E_>): Internal.ImmutableList<E_>;
        static copyOf<E_>(arg0: Internal.Iterator<E_>): Internal.ImmutableList<E_>;
        reverse(): Internal.ImmutableList<E>;
        lastIndexOf(arg0: any): number;
        addAll(arg0: number, arg1: Internal.Collection<E>): boolean;
        static toImmutableList<E_>(): Internal.Collector<E_, any, Internal.ImmutableList<E_>>;
        listIterator(arg0: number): Internal.ListIterator<any>;
        listIterator(arg0: number): Internal.UnmodifiableListIterator<E>;
        listIterator(): Internal.UnmodifiableListIterator<E>;
        listIterator(): Internal.ListIterator<any>;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<E>;
        addFirst(arg0: E): void;
        get last(): E;
        get first(): E;
    }
    type ImmutableList_<E> = ImmutableList<E>;
    class RenderTypeBuffers extends Document.Object implements Internal.AccessorRenderTypeBuffers {
        static func_228486_a_(arg0: Internal.Object2ObjectLinkedOpenHashMap<Internal.RenderType, Internal.BufferBuilder>, arg1: Internal.RenderType): void;
        func_228489_c_(): Internal.IRenderTypeBuffer$Impl;
        getFixedBuffers(): Internal.SortedMap<any, any>;
        func_228484_a_(): Internal.RegionRenderCacheBuilder;
        func_228487_b_(): Internal.IRenderTypeBuffer$Impl;
        func_228490_d_(): Internal.OutlineLayerBuffer;
        get fixedBuffers(): Internal.SortedMap<any, any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RenderTypeBuffers_ = RenderTypeBuffers;
    class PlayerEvent extends Internal.LivingEvent {
        getPlayer(): Internal.PlayerEntity;
        get player(): Internal.PlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity);
    }
    type PlayerEvent_ = PlayerEvent;
    interface BiomeManager$IBiomeReader {
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        (arg0: number, arg1: number, arg2: number): Internal.Biome;
    }
    type BiomeManager$IBiomeReader_ = ((arg0: number, arg1: number, arg2: number)=>Internal.Biome) | BiomeManager$IBiomeReader;
    class Outliner extends Document.Object {
        showCluster(arg0: any, arg1: Internal.Iterable_<BlockPos_>): Internal.Outline$OutlineParams;
        edit(arg0: any): Internal.Optional<Internal.Outline$OutlineParams>;
        tickOutlines(): void;
        chaseAABB(arg0: any, arg1: Internal.AxisAlignedBB): Internal.Outline$OutlineParams;
        keep(arg0: any): void;
        renderOutlines(arg0: Internal.MatrixStack, arg1: Internal.SuperRenderTypeBuffer, arg2: number): void;
        showAABB(arg0: any, arg1: Internal.AxisAlignedBB): Internal.Outline$OutlineParams;
        showAABB(arg0: any, arg1: Internal.AxisAlignedBB, arg2: number): Internal.Outline$OutlineParams;
        showLine(arg0: any, arg1: Vec3, arg2: Vec3): Internal.Outline$OutlineParams;
        getOutlines(): Internal.Map<any, Internal.Outliner$OutlineEntry>;
        showValueBox(arg0: any, arg1: Internal.ValueBox): Internal.Outline$OutlineParams;
        endChasingLine(arg0: any, arg1: Vec3, arg2: Vec3, arg3: number): Internal.Outline$OutlineParams;
        remove(arg0: any): void;
        get outlines(): Internal.Map<any, Internal.Outliner$OutlineEntry>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Outliner_ = Outliner;
    class ShaderLoader$ShaderType extends Internal.Enum<Internal.ShaderLoader$ShaderType> {
        func_148062_a(): string;
        func_148063_b(): string;
        static valueOf(arg0: string): Internal.ShaderLoader$ShaderType;
        static values(): Internal.ShaderLoader$ShaderType[];
        func_148064_d(): Internal.Map<string, Internal.ShaderLoader>;
        static readonly VERTEX: Internal.ShaderLoader$ShaderType;
        static readonly FRAGMENT: Internal.ShaderLoader$ShaderType;
    }
    type ShaderLoader$ShaderType_ = "vertex" | "fragment" | ShaderLoader$ShaderType;
    class Locale$Category extends Internal.Enum<Internal.Locale$Category> {
        static valueOf(arg0: string): Internal.Locale$Category;
        static values(): Internal.Locale$Category[];
        static readonly DISPLAY: Internal.Locale$Category;
        static readonly FORMAT: Internal.Locale$Category;
    }
    type Locale$Category_ = "display" | "format" | Locale$Category;
    abstract class ContentHandler extends Document.Object {
        getContent(arg0: Internal.URLConnection): any;
        getContent(arg0: Internal.URLConnection, arg1: Internal.Class[]): any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ContentHandler_ = ContentHandler;
    class ImmutableSetMultimap$Builder <K, V> extends Internal.ImmutableMultimap$Builder<K, V> {
        orderKeysBy(arg0: Internal.Comparator<K>): Internal.ImmutableSetMultimap$Builder<K, V>;
        orderKeysBy(arg0: Internal.Comparator<any>): Internal.ImmutableMultimap$Builder<any, any>;
        build(): Internal.ImmutableSetMultimap<K, V>;
        build(): Internal.ImmutableMultimap<any, any>;
        orderValuesBy(arg0: Internal.Comparator<any>): Internal.ImmutableMultimap$Builder<any, any>;
        orderValuesBy(arg0: Internal.Comparator<V>): Internal.ImmutableSetMultimap$Builder<K, V>;
        putAll(arg0: any, arg1: Internal.Iterable_<any>): Internal.ImmutableMultimap$Builder<any, any>;
        putAll(arg0: K, arg1: Internal.Iterable_<V>): Internal.ImmutableSetMultimap$Builder<K, V>;
        putAll(arg0: Internal.Iterable_<any>): Internal.ImmutableMultimap$Builder<any, any>;
        putAll(arg0: Internal.Iterable_<Internal.Map$Entry_<K, V>>): Internal.ImmutableSetMultimap$Builder<K, V>;
        putAll(arg0: any, arg1: any[]): Internal.ImmutableMultimap$Builder<any, any>;
        putAll(arg0: K, ...arg1: V[]): Internal.ImmutableSetMultimap$Builder<K, V>;
        putAll(arg0: Internal.Multimap<any, any>): Internal.ImmutableMultimap$Builder<any, any>;
        putAll(arg0: Internal.Multimap<K, V>): Internal.ImmutableSetMultimap$Builder<K, V>;
        put(arg0: Internal.Map$Entry<any, any>): Internal.ImmutableMultimap$Builder<any, any>;
        put(arg0: Internal.Map$Entry<K, V>): Internal.ImmutableSetMultimap$Builder<K, V>;
        put(arg0: any, arg1: any): Internal.ImmutableMultimap$Builder<any, any>;
        put(arg0: K, arg1: V): Internal.ImmutableSetMultimap$Builder<K, V>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ImmutableSetMultimap$Builder_<K, V> = ImmutableSetMultimap$Builder<K, V>;
    class ModelProperty <T> extends Document.Object implements Internal.Predicate<T> {
        or(arg0: Internal.Predicate_<T>): Internal.Predicate<T>;
        test(arg0: T): boolean;
        and(arg0: Internal.Predicate_<T>): Internal.Predicate<T>;
        negate(): Internal.Predicate<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Predicate<T>);
    }
    type ModelProperty_<T> = ModelProperty<T>;
    class Explosion$Mode extends Internal.Enum<Internal.Explosion$Mode> {
        static valueOf(arg0: string): Internal.Explosion$Mode;
        static values(): Internal.Explosion$Mode[];
        static readonly DESTROY: Internal.Explosion$Mode;
        static readonly BREAK: Internal.Explosion$Mode;
        static readonly NONE: Internal.Explosion$Mode;
    }
    type Explosion$Mode_ = "none" | "break" | "destroy" | Explosion$Mode;
    class ClientSuggestionProvider extends Document.Object implements Internal.ISuggestionProvider {
        func_197010_l(): Internal.Collection<ResourceLocation>;
        func_241861_q(): Internal.DynamicRegistries;
        func_197012_k(): Internal.Collection<string>;
        func_230390_p_(): Internal.Set<Internal.RegistryKey<Internal.World>>;
        func_217293_r(): Internal.Collection<Internal.ISuggestionProvider$Coordinates>;
        func_217294_q(): Internal.Collection<Internal.ISuggestionProvider$Coordinates>;
        func_197034_c(arg0: number): boolean;
        func_199612_m(): Internal.Stream<ResourceLocation>;
        func_197015_a(arg0: number, arg1: Internal.Suggestions): void;
        func_211270_p(): Internal.Collection<string>;
        func_197009_a(arg0: Internal.CommandContext<Internal.ISuggestionProvider>, arg1: Internal.SuggestionsBuilder): Internal.CompletableFuture<Internal.Suggestions>;
        func_197011_j(): Internal.Collection<string>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ClientPlayNetHandler, arg1: Internal.Minecraft);
    }
    type ClientSuggestionProvider_ = ClientSuggestionProvider;
    interface IComponentBuilderProperty <T> {
        set(arg0: T): void;
        getName(): string;
        getType(): Internal.Class<T>;
        get(): T;
        getAsWidget(arg0: number, arg1: number, arg2: number, arg3: number): net.minecraft.client.gui.widget.Widget;
    }
    type IComponentBuilderProperty_<T> = IComponentBuilderProperty<T>;
    interface BakedQuadAccess {
        setVertices(arg0: number[]): void;
        (arg0: number[]): void;
    }
    type BakedQuadAccess_ = ((arg0: number[])=>void) | BakedQuadAccess;
    class BlastingRecipe extends Internal.AbstractCookingRecipe {
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<Internal.ItemStack>;
        func_192399_d(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: string, arg2: Internal.Ingredient, arg3: Internal.ItemStack, arg4: number, arg5: number);
    }
    type BlastingRecipe_ = BlastingRecipe;
    class CheckLivingEntitySpawnEventJS extends Internal.LivingEntityEventJS {
        getBlock(): Internal.BlockContainerJS;
        getX(): number;
        getY(): number;
        getZ(): number;
        get x(): number;
        get y(): number;
        get block(): Internal.BlockContainerJS;
        get z(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(e: Internal.LivingSpawnEvent$CheckSpawn);
    }
    type CheckLivingEntitySpawnEventJS_ = CheckLivingEntitySpawnEventJS;
    class SExplosionPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_149146_i(): number;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_149145_h(): number;
        func_211402_a(): boolean;
        func_149148_f(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149144_d(): number;
        func_149147_e(): number;
        func_149149_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149150_j(): Internal.List<BlockPos>;
        func_149143_g(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.List<BlockPos>, arg5: Vec3);
    }
    type SExplosionPacket_ = SExplosionPacket;
    interface Guard {
        checkGuard(arg0: any): void;
        (arg0: any): void;
    }
    type Guard_ = ((arg0: any)=>void) | Guard;
    class PolarBearEntity extends Internal.AnimalEntity implements Internal.IAngerable {
        shouldRiderSit(): boolean;
        func_230256_F__(): number;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        static func_223320_c(arg0: Internal.EntityType_<Internal.PolarBearEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_230260_a__(arg0: number): void;
        func_233682_c_(arg0: Internal.CompoundNBT_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_233681_b_(arg0: Internal.PlayerEntity): void;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_241358_a_(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT_): void;
        func_189793_df(): boolean;
        func_230257_G__(): Internal.UUID;
        static func_234219_eI_(): Internal.AttributeModifierMap$MutableAttribute;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_233678_J__(): boolean;
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        func_230258_H__(): void;
        func_241355_J__(): void;
        canRiderInteract(): boolean;
        func_233680_b_(arg0: Internal.LivingEntity): boolean;
        func_241359_a_(arg0: Internal.ServerWorld, arg1: boolean): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_241357_a_(arg0: Internal.World): boolean;
        func_189795_r(arg0: number): number;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_189794_p(arg0: boolean): void;
        func_241356_K__(): void;
        func_230259_a_(arg0: Internal.UUID): void;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.PolarBearEntity>, arg1: Internal.World);
    }
    type PolarBearEntity_ = PolarBearEntity;
    class ModifiedToolTier extends Document.Object implements Internal.IItemTier {
        setRepairIngredient(in_: Internal.IngredientJS_): void;
        setSpeed(f: number): void;
        func_200927_e(): number;
        func_200929_c(): number;
        func_200924_f(): Internal.Ingredient;
        func_200928_b(): number;
        func_200925_d(): number;
        func_200926_a(): number;
        setEnchantmentValue(i: number): void;
        setAttackDamageBonus(f: number): void;
        setUses(i: number): void;
        setLevel(i: number): void;
        readonly parent: Internal.IItemTier;
        set repairIngredient(in_: Internal.IngredientJS_);
        set level(i: number);
        set attackDamageBonus(f: number);
        set enchantmentValue(i: number);
        set uses(i: number);
        set speed(f: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(p: Internal.IItemTier);
    }
    type ModifiedToolTier_ = ModifiedToolTier;
    class DataFlavor extends Document.Object implements Internal.Externalizable, Internal.Cloneable {
        isFlavorJavaFileListType(): boolean;
        static getTextPlainUnicodeFlavor(): Internal.DataFlavor;
        getDefaultRepresentationClass(): Internal.Class<any>;
        getPrimaryType(): string;
        getSubType(): string;
        isMimeTypeEqual(arg0: string): boolean;
        isMimeTypeEqual(arg0: Internal.DataFlavor): boolean;
        isRepresentationClassSerializable(): boolean;
        getDefaultRepresentationClassAsString(): string;
        isRepresentationClassCharBuffer(): boolean;
        isRepresentationClassByteBuffer(): boolean;
        getParameter(arg0: string): string;
        static selectBestTextFlavor(arg0: Internal.DataFlavor[]): Internal.DataFlavor;
        writeExternal(arg0: Internal.ObjectOutput): void;
        setHumanPresentableName(arg0: string): void;
        isMimeTypeSerializedObject(): boolean;
        getMimeType(): string;
        getReaderForText(arg0: Internal.Transferable): Internal.Reader;
        match(arg0: Internal.DataFlavor): boolean;
        isFlavorTextType(): boolean;
        isFlavorSerializedObjectType(): boolean;
        getHumanPresentableName(): string;
        getRepresentationClass(): Internal.Class<any>;
        isRepresentationClassInputStream(): boolean;
        isFlavorRemoteObjectType(): boolean;
        isRepresentationClassReader(): boolean;
        equals(arg0: string): boolean;
        equals(arg0: Internal.DataFlavor): boolean;
        readExternal(arg0: Internal.ObjectInput): void;
        clone(): any;
        isRepresentationClassRemote(): boolean;
        static readonly javaJVMLocalObjectMimeType: "application/x-java-jvm-local-objectref";
        static readonly stringFlavor: Internal.DataFlavor;
        static readonly javaFileListFlavor: Internal.DataFlavor;
        static readonly javaSerializedObjectMimeType: "application/x-java-serialized-object";
        static readonly plainTextFlavor: Internal.DataFlavor;
        static readonly javaRemoteObjectMimeType: "application/x-java-remote-object";
        static readonly imageFlavor: Internal.DataFlavor;
        static readonly selectionHtmlFlavor: Internal.DataFlavor;
        static readonly allHtmlFlavor: Internal.DataFlavor;
        static readonly fragmentHtmlFlavor: Internal.DataFlavor;
        get representationClass(): Internal.Class<any>;
        get flavorRemoteObjectType(): boolean;
        get representationClassSerializable(): boolean;
        get mimeTypeSerializedObject(): boolean;
        get humanPresentableName(): string;
        get mimeType(): string;
        get representationClassInputStream(): boolean;
        get defaultRepresentationClassAsString(): string;
        get flavorSerializedObjectType(): boolean;
        get representationClassReader(): boolean;
        get representationClassRemote(): boolean;
        get representationClassByteBuffer(): boolean;
        get primaryType(): string;
        get textPlainUnicodeFlavor(): Internal.DataFlavor;
        get subType(): string;
        get defaultRepresentationClass(): Internal.Class<any>;
        get flavorTextType(): boolean;
        get flavorJavaFileListType(): boolean;
        get representationClassCharBuffer(): boolean;
        set humanPresentableName(arg0: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: string);
        constructor(arg0: Internal.Class<any>, arg1: string);
        constructor(arg0: string, arg1: string);
        constructor(arg0: string, arg1: string, arg2: Internal.ClassLoader);
    }
    type DataFlavor_ = DataFlavor;
    class InputMethodHighlight extends Document.Object {
        getStyle(): Internal.Map<Internal.TextAttribute, any>;
        getState(): number;
        getVariation(): number;
        isSelected(): boolean;
        static readonly UNSELECTED_CONVERTED_TEXT_HIGHLIGHT: Internal.InputMethodHighlight;
        static readonly SELECTED_CONVERTED_TEXT_HIGHLIGHT: Internal.InputMethodHighlight;
        static readonly RAW_TEXT: 0;
        static readonly CONVERTED_TEXT: 1;
        static readonly UNSELECTED_RAW_TEXT_HIGHLIGHT: Internal.InputMethodHighlight;
        static readonly SELECTED_RAW_TEXT_HIGHLIGHT: Internal.InputMethodHighlight;
        get style(): Internal.Map<Internal.TextAttribute, any>;
        get state(): number;
        get variation(): number;
        get selected(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean, arg1: number, arg2: number, arg3: Internal.Map<Internal.TextAttribute, any>);
        constructor(arg0: boolean, arg1: number, arg2: number);
        constructor(arg0: boolean, arg1: number);
    }
    type InputMethodHighlight_ = InputMethodHighlight;
    interface CommentedConfig extends Internal.UnmodifiableCommentedConfig, Internal.Config {
        putAllComments(arg0: Internal.Map_<string, Internal.UnmodifiableCommentedConfig$CommentNode_>): void;
        putAllComments(arg0: Internal.UnmodifiableCommentedConfig): void;
        entrySet(): Internal.Set<Internal.CommentedConfig$Entry>;
        commentMap(): Internal.Map<string, string>;
        unmodifiable(): Internal.UnmodifiableConfig;
        unmodifiable(): Internal.UnmodifiableCommentedConfig;
        clearComments(): void;
        setComment(arg0: string, arg1: string): string;
        setComment(arg0: Internal.List<string>, arg1: string): string;
        checked(): Internal.Config;
        checked(): Internal.CommentedConfig;
        createSubConfig(): Internal.CommentedConfig;
        createSubConfig(): Internal.Config;
        removeComment(arg0: string): string;
        removeComment(arg0: Internal.List<string>): string;
    }
    type CommentedConfig_ = CommentedConfig;
    class ItemRequirement extends Document.Object {
        with(arg0: Internal.ItemRequirement): Internal.ItemRequirement;
        getRequiredItems(): Internal.List<Internal.ItemRequirement$StackRequirement>;
        static of(arg0: Internal.Entity): Internal.ItemRequirement;
        static of(arg0: Internal.BlockState, arg1: Internal.TileEntity): Internal.ItemRequirement;
        isEmpty(): boolean;
        isInvalid(): boolean;
        static validate(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        static INVALID: Internal.ItemRequirement;
        static NONE: Internal.ItemRequirement;
        get invalid(): boolean;
        get requiredItems(): Internal.List<Internal.ItemRequirement$StackRequirement>;
        get empty(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemRequirement$ItemUseType, arg1: Internal.List<Internal.ItemStack>);
        constructor(arg0: Internal.ItemRequirement$ItemUseType, arg1: Internal.Item);
        constructor(arg0: Internal.ItemRequirement$ItemUseType, arg1: Internal.ItemStack);
        constructor(arg0: Internal.List<Internal.ItemRequirement$StackRequirement>);
    }
    type ItemRequirement_ = ItemRequirement;
    class TutorialToast extends Document.Object implements Internal.IToast {
        func_230445_a_(): number;
        func_230444_a_(arg0: Internal.MatrixStack, arg1: Internal.ToastGui, arg2: number): Internal.IToast$Visibility;
        func_238540_d_(): number;
        func_193669_a(arg0: number): void;
        func_193652_b(): any;
        func_193670_a(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: Internal.ITextComponent, arg2: Internal.ITextComponent, arg3: boolean);
    }
    type TutorialToast_ = TutorialToast;
    interface IConnectionTemplate {
        getStoredConnections(): Internal.List<Internal.Connection>;
        (): Internal.List<Internal.Connection>;
    }
    type IConnectionTemplate_ = (()=>Internal.List<Internal.Connection>) | IConnectionTemplate;
    class ConfigGroup extends Document.Object {
        add<T_, CV_>(id: string, type: CV_, value: T_, callback: Internal.Consumer_<T_>, defaultValue: T_): CV_;
        addEnum<E_>(id: string, value: E_, setter: Internal.Consumer_<E_>, nameMap: Internal.NameMap<E_>, def: E_): Internal.EnumConfig<E_>;
        addEnum<E_>(id: string, value: E_, setter: Internal.Consumer_<E_>, nameMap: Internal.NameMap<E_>): Internal.EnumConfig<E_>;
        getName(): Internal.ITextComponent;
        getValues(): Internal.Collection<Internal.ConfigValue>;
        save(accepted: boolean): void;
        addBool(id: string, value: boolean, setter: Internal.Consumer_<boolean>, def: boolean): Internal.BooleanConfig;
        addItemStack(id: string, value: Internal.ItemStack, setter: Internal.Consumer_<Internal.ItemStack_>, def: Internal.ItemStack, singleItemOnly: boolean, allowEmpty: boolean): Internal.ItemStackConfig;
        getNameKey(): string;
        addTristate(id: string, value: Internal.Tristate_, setter: Internal.Consumer_<Internal.Tristate_>): Internal.EnumConfig<Internal.Tristate>;
        addTristate(id: string, value: Internal.Tristate_, setter: Internal.Consumer_<Internal.Tristate_>, def: Internal.Tristate_): Internal.EnumConfig<Internal.Tristate>;
        setNameKey(key: string): Internal.ConfigGroup;
        getTooltip(): Internal.ITextComponent;
        getGroup(id: string): Internal.ConfigGroup;
        getPath(): string;
        addList<E_, CV_>(id: string, c: Internal.List<E_>, type: CV_, def: E_): Internal.ListConfig<E_, CV_>;
        addInt(id: string, value: number, setter: Internal.Consumer_<number>, def: number, min: number, max: number): Internal.IntConfig;
        addLong(id: string, value: number, setter: Internal.Consumer_<number>, def: number, min: number, max: number): Internal.LongConfig;
        addDouble(id: string, value: number, setter: Internal.Consumer_<number>, def: number, min: number, max: number): Internal.DoubleConfig;
        getGroups(): Internal.Collection<Internal.ConfigGroup>;
        addString(id: string, value: string, setter: Internal.Consumer_<string>, def: string): Internal.StringConfig;
        addString(id: string, value: string, setter: Internal.Consumer_<string>, def: string, pattern: Internal.Pattern): Internal.StringConfig;
        parent: Internal.ConfigGroup;
        readonly id: string;
        savedCallback: Internal.ConfigCallback;
        get path(): string;
        get nameKey(): string;
        get values(): Internal.Collection<Internal.ConfigValue>;
        get name(): Internal.ITextComponent;
        get tooltip(): Internal.ITextComponent;
        get groups(): Internal.Collection<Internal.ConfigGroup>;
        set nameKey(key: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(i: string);
    }
    type ConfigGroup_ = ConfigGroup;
    interface IJointClip {
        apply(arg0: number): Internal.TransformationMatrix;
        (arg0: number): Internal.TransformationMatrix;
    }
    type IJointClip_ = ((arg0: number)=>Internal.TransformationMatrix) | IJointClip;
    class SWindowItemsPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_148910_d(): Internal.List<Internal.ItemStack>;
        func_148911_c(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.NonNullList<Internal.ItemStack>);
    }
    type SWindowItemsPacket_ = SWindowItemsPacket;
    class ChunkRenderData extends Document.Object {
        getMesh(pass: Internal.BlockRenderPass_): Internal.ChunkMeshData;
        getOcclusionData(): Internal.SetVisibility;
        setMesh(pass: Internal.BlockRenderPass_, data: Internal.ChunkMeshData): void;
        getAnimatedSprites(): Internal.List<Internal.TextureAtlasSprite>;
        getGlobalBlockEntities(): Internal.Collection<Internal.TileEntity>;
        isEmpty(): boolean;
        getMeshSize(): number;
        getBlockEntities(): Internal.Collection<Internal.TileEntity>;
        copyAndReplaceMesh(replacements: Internal.Map_<Internal.BlockRenderPass_, Internal.ChunkMeshData_>): Internal.ChunkRenderData;
        getFacesWithData(): number;
        getBounds(): Internal.ChunkRenderBounds;
        static readonly ABSENT: Internal.ChunkRenderData;
        static readonly EMPTY: Internal.ChunkRenderData;
        get occlusionData(): Internal.SetVisibility;
        get globalBlockEntities(): Internal.Collection<Internal.TileEntity>;
        get bounds(): Internal.ChunkRenderBounds;
        get animatedSprites(): Internal.List<Internal.TextureAtlasSprite>;
        get facesWithData(): number;
        get meshSize(): number;
        get blockEntities(): Internal.Collection<Internal.TileEntity>;
        get empty(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ChunkRenderData_ = ChunkRenderData;
    class SPlayerLookPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_200531_a(arg0: Internal.World): Vec3;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_201064_a(): Internal.EntityAnchorArgument$Type;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityAnchorArgument$Type, arg1: Internal.Entity, arg2: Internal.EntityAnchorArgument$Type);
        constructor(arg0: Internal.EntityAnchorArgument$Type, arg1: number, arg2: number, arg3: number);
        constructor();
    }
    type SPlayerLookPacket_ = SPlayerLookPacket;
    abstract class ConstellationEffect$Config extends Internal.ConfigEntry {
        andThen(arg0: Internal.Consumer_<Internal.ForgeConfigSpec$Builder_>): Internal.Consumer<Internal.ForgeConfigSpec$Builder>;
        range: Internal.ForgeConfigSpec$DoubleValue;
        rangePerLens: Internal.ForgeConfigSpec$DoubleValue;
        enabled: Internal.ForgeConfigSpec$BooleanValue;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: number, arg2: number);
    }
    type ConstellationEffect$Config_ = ConstellationEffect$Config;
    class TrackedData <T> extends Document.Object {
        getProcessor(): Internal.IDataProcessor<T>;
        isPersistent(): boolean;
        getSyncType(): Internal.SyncType;
        shouldSave(): boolean;
        getDefaultValue(): T;
        get defaultValue(): T;
        get persistent(): boolean;
        get syncType(): Internal.SyncType;
        get processor(): Internal.IDataProcessor<T>;
    }
    type TrackedData_<T> = TrackedData<T>;
    interface ItemFTBL {
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        (arg0: Internal.Item): void;
    }
    type ItemFTBL_ = ((arg0: Internal.Item)=>void) | ItemFTBL;
    interface LongStream$Builder extends Internal.LongConsumer {
        add(arg0: number): Internal.LongStream$Builder;
        build(): Internal.LongStream;
        accept(arg0: number): void;
    }
    type LongStream$Builder_ = LongStream$Builder;
    class EmptyCarverConfig extends Document.Object implements Internal.ICarverConfig {
        static readonly field_236238_c_: Internal.EmptyCarverConfig;
        static readonly field_236237_b_: Internal.Codec<Internal.EmptyCarverConfig>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EmptyCarverConfig_ = EmptyCarverConfig;
    interface Executor {
        execute(arg0: Internal.Runnable_): void;
        (arg0: Internal.Runnable): void;
    }
    type Executor_ = ((arg0: Internal.Runnable)=>void) | Executor;
    class Env extends Internal.Enum<Internal.Env> {
        toPlatform(): Internal.Dist;
        static valueOf(name: string): Internal.Env;
        static values(): Internal.Env[];
        static fromPlatform(type: any): Internal.Env;
        static readonly SERVER: Internal.Env;
        static readonly CLIENT: Internal.Env;
    }
    type Env_ = "client" | "server" | Env;
    class ItemTossEventJS extends Internal.PlayerEventJS {
        getItem(): Internal.ItemStackJS;
        getItemEntity(): Internal.EntityJS;
        get item(): Internal.ItemStackJS;
        get itemEntity(): Internal.EntityJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.PlayerEntity, entity: Internal.ItemEntity);
    }
    type ItemTossEventJS_ = ItemTossEventJS;
    class HideJEIEventJS <T> extends Internal.EventJS {
        hide(o: any): void;
        getAllIngredients(): Internal.Collection<T>;
        hideAll(): void;
        get allIngredients(): Internal.Collection<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(r: Internal.IJeiRuntime, t: Internal.IIngredientType<T>, f: Internal.Function<any, Internal.Predicate<T>>, i: Internal.Predicate<T>);
    }
    type HideJEIEventJS_<T> = HideJEIEventJS<T>;
    class Difficulty extends Internal.Enum<Internal.Difficulty> {
        func_233536_d_(): Internal.Difficulty;
        func_151525_a(): number;
        func_151526_b(): string;
        static valueOf(arg0: string): Internal.Difficulty;
        static values(): Internal.Difficulty[];
        static func_219963_a(arg0: string): Internal.Difficulty;
        func_199285_b(): Internal.ITextComponent;
        static func_151523_a(arg0: number): Internal.Difficulty;
        static readonly EASY: Internal.Difficulty;
        static readonly PEACEFUL: Internal.Difficulty;
        static readonly HARD: Internal.Difficulty;
        static readonly NORMAL: Internal.Difficulty;
    }
    type Difficulty_ = "peaceful" | "easy" | "normal" | "hard" | Difficulty;
    class ZoglinEntity extends Internal.MonsterEntity implements Internal.IMob, Internal.IFlinging {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        static func_234339_m_(): Internal.AttributeModifierMap$MutableAttribute;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_230290_eL_(): number;
        func_213375_cj(): Internal.Brain<Internal.ZoglinEntity>;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_234331_eI_(): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ZoglinEntity>, arg1: Internal.World);
    }
    type ZoglinEntity_ = ZoglinEntity;
    abstract class SpriteUploader extends Internal.ReloadListener<Internal.AtlasTexture$SheetData> implements Internal.AutoCloseable {
        func_225594_i_(): string;
        close(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TextureManager, arg1: ResourceLocation, arg2: string);
    }
    type SpriteUploader_ = SpriteUploader;
    class ForgeConfigSpec$LongValue extends Internal.ForgeConfigSpec$ConfigValue<number> {
    }
    type ForgeConfigSpec$LongValue_ = ForgeConfigSpec$LongValue;
    interface Long2ObjectMap <V> extends Internal.Long2ObjectFunction<V>, Internal.Map<number, V> {
        long2ObjectEntrySet(): Internal.ObjectSet<Internal.Long2ObjectMap$Entry<V>>;
        getOrDefault(arg0: any, arg1: V): V;
        getOrDefault(arg0: number, arg1: V): V;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<number, V>>;
        entrySet(): Internal.Set<any>;
        containsKey(arg0: number): boolean;
        containsKey(arg0: any): boolean;
        computeIfAbsent(arg0: any, arg1: Internal.Function_<any,any>): any;
        computeIfAbsent(arg0: number, arg1: Internal.LongFunction_<V>): V;
        computeIfAbsent(arg0: number, arg1: Internal.Function_<number, V>): V;
        values(): Internal.Collection<any>;
        values(): Internal.ObjectCollection<V>;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: number, arg1: V): V;
        replace(arg0: number, arg1: V, arg2: V): boolean;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        replace(arg0: any, arg1: any): any;
        clear(): void;
        computeIfAbsentPartial(arg0: number, arg1: Internal.Long2ObjectFunction_<V>): V;
        put(arg0: number, arg1: V): V;
        put(arg0: any, arg1: any): any;
        remove(arg0: any): V;
        remove(arg0: number, arg1: any): boolean;
        remove(arg0: any, arg1: any): boolean;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        compute(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compute(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        defaultReturnValue(): V;
        defaultReturnValue(arg0: V): void;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, V, V>): V;
        computeIfPresent(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        size(): number;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: number, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        get(arg0: any): V;
        keySet(): Internal.LongSet;
        keySet(): Internal.Set<any>;
        putIfAbsent(arg0: number, arg1: V): V;
        putIfAbsent(arg0: any, arg1: any): any;
        putIfAbsent(arg0: number, arg1: V): V;
    }
    type Long2ObjectMap_<V> = Long2ObjectMap<V>;
    interface ICachedMaterialsModel {
        clearMaterialsCache(): void;
        (): void;
    }
    type ICachedMaterialsModel_ = (()=>void) | ICachedMaterialsModel;
    class AE2GrinderRecipeJS extends Internal.RecipeJS {
        turns(t: number): Internal.AE2GrinderRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AE2GrinderRecipeJS_ = AE2GrinderRecipeJS;
    interface IIngredientManager {
        getIngredientHelper<V>(arg0: V): Internal.IIngredientHelper<V>;
        getIngredientHelper<V>(arg0: Internal.IIngredientType_<V>): Internal.IIngredientHelper<V>;
        getIngredientRenderer<V>(arg0: V): Internal.IIngredientRenderer<V>;
        getIngredientRenderer<V>(arg0: Internal.IIngredientType_<V>): Internal.IIngredientRenderer<V>;
        getIngredientType<V>(arg0: V): Internal.IIngredientType<V>;
        getIngredientType<V>(arg0: Internal.Class<V>): Internal.IIngredientType<V>;
        removeIngredientsAtRuntime<V>(arg0: Internal.IIngredientType_<V>, arg1: Internal.Collection<V>): void;
        addIngredientsAtRuntime<V>(arg0: Internal.IIngredientType_<V>, arg1: Internal.Collection<V>): void;
        getAllIngredients<V>(arg0: Internal.IIngredientType_<V>): Internal.Collection<V>;
        getRegisteredIngredientTypes(): Internal.Collection<Internal.IIngredientType<any>>;
    }
    type IIngredientManager_ = IIngredientManager;
    abstract class AbstractInt2IntFunction extends Document.Object implements Internal.Int2IntFunction, Internal.Serializable {
        defaultReturnValue(arg0: number): void;
        defaultReturnValue(): number;
        applyAsInt(arg0: number): number;
        size(): number;
        compose<V_>(arg0: Internal.Function_<V_, number>): Internal.Function<V_, number>;
        compose(arg0: Internal.IntUnaryOperator_): Internal.IntUnaryOperator;
        apply(arg0: number): number;
        containsKey(arg0: any): boolean;
        containsKey(arg0: number): boolean;
        get(arg0: number): number;
        get(arg0: any): number;
        get(arg0: any): any;
        clear(): void;
        andThen<V_>(arg0: Internal.Function_<number, V_>): Internal.Function<number, V_>;
        andThen(arg0: Internal.IntUnaryOperator_): Internal.IntUnaryOperator;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: number): number;
        put(arg0: number, arg1: number): number;
        remove(arg0: any): number;
        remove(arg0: any): any;
        remove(arg0: number): number;
    }
    type AbstractInt2IntFunction_ = AbstractInt2IntFunction;
    interface Queue <E> extends Internal.Collection<E> {
        offer(arg0: E): boolean;
        add(arg0: E): boolean;
        poll(): E;
        remove(): E;
        element(): E;
        peek(): E;
    }
    type Queue_<E> = Queue<E>;
    interface DoubleListIterator extends Internal.DoubleBidirectionalIterator, Internal.ListIterator<number> {
        next(): any;
        next(): number;
        add(arg0: number): void;
        add(arg0: any): void;
        add(arg0: number): void;
        set(arg0: any): void;
        set(arg0: number): void;
        set(arg0: number): void;
        previous(): any;
        previous(): number;
        remove(): void;
    }
    type DoubleListIterator_ = DoubleListIterator;
    class EntityDataManager$DataEntry <T> extends Document.Object {
        func_187210_a(arg0: T): void;
        func_187209_c(): boolean;
        func_187206_b(): T;
        func_187208_a(arg0: boolean): void;
        func_187205_a(): Internal.DataParameter<T>;
        func_192735_d(): Internal.EntityDataManager$DataEntry<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DataParameter<T>, arg1: T);
    }
    type EntityDataManager$DataEntry_<T> = EntityDataManager$DataEntry<T>;
    class MooshroomEntity extends Internal.CowEntity implements Internal.IShearable, Internal.IForgeShearable {
        shouldRiderSit(): boolean;
        func_213446_a(arg0: Internal.MooshroomEntity$Type_): void;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        func_230262_K__(): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        onSheared(arg0: Internal.PlayerEntity, arg1: Internal.ItemStack, arg2: Internal.World, arg3: BlockPos, arg4: number): Internal.List<Internal.ItemStack>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_230263_a_(arg0: Internal.SoundCategory_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        static func_223318_c(arg0: Internal.EntityType_<Internal.MooshroomEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        isShearable(arg0: Internal.ItemStack, arg1: Internal.World, arg2: BlockPos): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_213444_dV(): Internal.MooshroomEntity$Type;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.AgeableEntity;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.MooshroomEntity;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.MooshroomEntity>, arg1: Internal.World);
    }
    type MooshroomEntity_ = MooshroomEntity;
    class Type$Mu extends Document.Object implements Internal.K1 {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Type$Mu_ = Type$Mu;
    class GoalSelector extends Document.Object implements Internal.AccessorGoalSelector {
        func_85156_a(arg0: Internal.Goal): void;
        func_75776_a(arg0: number, arg1: Internal.Goal): void;
        func_220886_b(arg0: Internal.Goal$Flag_): void;
        func_75774_a(): void;
        getGoals(): Internal.Set<any>;
        func_220888_c(): Internal.Stream<Internal.PrioritizedGoal>;
        func_220878_a(arg0: Internal.Goal$Flag_, arg1: boolean): void;
        func_220880_a(arg0: Internal.Goal$Flag_): void;
        field_220892_d: Internal.Set<Internal.PrioritizedGoal>;
        get goals(): Internal.Set<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: java_.util.function_.Supplier<Internal.IProfiler>);
    }
    type GoalSelector_ = GoalSelector;
    interface ChronoPeriod extends Internal.TemporalAmount {
        minus(arg0: Internal.TemporalAmount): Internal.ChronoPeriod;
        isNegative(): boolean;
        negated(): Internal.ChronoPeriod;
        normalized(): Internal.ChronoPeriod;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoPeriod;
        multipliedBy(arg0: number): Internal.ChronoPeriod;
        subtractFrom(arg0: Internal.Temporal): Internal.Temporal;
        hashCode(): number;
        equals(arg0: any): boolean;
        get(arg0: Internal.TemporalUnit): number;
        getUnits(): Internal.List<Internal.TemporalUnit>;
        addTo(arg0: Internal.Temporal): Internal.Temporal;
        isZero(): boolean;
        toString(): string;
        getChronology(): Internal.Chronology;
    }
    type ChronoPeriod_ = ChronoPeriod;
    class ThreadGroup extends Document.Object implements Internal.Thread$UncaughtExceptionHandler {
        setMaxPriority(arg0: number): void;
        resume(): void;
        suspend(): void;
        activeCount(): number;
        getParent(): Internal.ThreadGroup;
        getName(): string;
        isDestroyed(): boolean;
        destroy(): void;
        parentOf(arg0: Internal.ThreadGroup): boolean;
        list(): void;
        checkAccess(): void;
        setDaemon(arg0: boolean): void;
        getMaxPriority(): number;
        stop(): void;
        isDaemon(): boolean;
        interrupt(): void;
        activeGroupCount(): number;
        uncaughtException(arg0: Internal.Thread, arg1: Internal.Throwable): void;
        enumerate(arg0: Internal.ThreadGroup[]): number;
        enumerate(arg0: Internal.ThreadGroup[], arg1: boolean): number;
        enumerate(arg0: Internal.Thread[]): number;
        enumerate(arg0: Internal.Thread[], arg1: boolean): number;
        get parent(): Internal.ThreadGroup;
        get destroyed(): boolean;
        get maxPriority(): number;
        get name(): string;
        get daemon(): boolean;
        set maxPriority(arg0: number);
        set daemon(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
        constructor(arg0: Internal.ThreadGroup, arg1: string);
    }
    type ThreadGroup_ = ThreadGroup;
    interface FlavorMap {
        getNativesForFlavors(arg0: Internal.DataFlavor[]): Internal.Map<Internal.DataFlavor, string>;
        getFlavorsForNatives(arg0: string[]): Internal.Map<string, Internal.DataFlavor>;
    }
    type FlavorMap_ = FlavorMap;
    class WorldNetworkHandler extends Document.Object {
        removeTransmission(arg0: Internal.IStarlightTransmission<any>): void;
        informBlockChange(arg0: BlockPos): void;
        getWorld(): Internal.World;
        removeSource(arg0: Internal.IStarlightSource<any>): void;
        markDirty(...arg0: Vec3i[]): void;
        getTransmissionNode(arg0: BlockPos): Internal.IPrismTransmissionNode;
        getSourceAt(arg0: BlockPos): Internal.IIndependentStarlightSource;
        static getNetworkHandler(arg0: Internal.World): Internal.WorldNetworkHandler;
        attemptAutoLinkTo(arg0: BlockPos): void;
        addNewSourceTile(arg0: Internal.IStarlightSource<any>): void;
        getAllSources(): Internal.Collection<Internal.Tuple<BlockPos, Internal.IIndependentStarlightSource>>;
        addTransmissionTile(arg0: Internal.IStarlightTransmission<any>): void;
        removeAutoLinkTo(arg0: BlockPos): void;
        get allSources(): Internal.Collection<Internal.Tuple<BlockPos, Internal.IIndependentStarlightSource>>;
        get world(): Internal.World;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: Internal.World);
    }
    type WorldNetworkHandler_ = WorldNetworkHandler;
    class LivingEntityDeathEventJS extends Internal.LivingEntityEventJS {
        getSource(): Internal.DamageSourceJS;
        get source(): Internal.DamageSourceJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(entity: Internal.LivingEntity, source: Internal.DamageSource);
    }
    type LivingEntityDeathEventJS_ = LivingEntityDeathEventJS;
    class KeyModifiers extends Document.Object {
        capsLock(): boolean;
        onlyControl(): boolean;
        shift(): boolean;
        alt(): boolean;
        start(): boolean;
        numLock(): boolean;
        control(): boolean;
        static readonly NONE: Internal.KeyModifiers;
        readonly modifiers: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(m: number);
    }
    type KeyModifiers_ = KeyModifiers;
    class AnimateTickEvent extends Internal.BlockEvent {
        static onAnimateTick(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Random): boolean;
        getRandom(): Internal.Random;
        get random(): Internal.Random;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Random);
    }
    type AnimateTickEvent_ = AnimateTickEvent;
    class MemoryModuleType <U> extends Internal.ForgeRegistryEntry<Internal.MemoryModuleType<any>> {
        setRegistryName(arg0: ResourceLocation_): any;
        func_234107_a_(): Internal.Optional<Internal.Codec<Internal.Memory<U>>>;
        static readonly field_220946_g: Internal.MemoryModuleType<Internal.List<Internal.LivingEntity>>;
        static readonly field_220948_i: Internal.MemoryModuleType<Internal.List<Internal.PlayerEntity>>;
        static readonly field_220942_c: Internal.MemoryModuleType<Internal.GlobalPos>;
        static readonly field_234094_ab_: Internal.MemoryModuleType<number>;
        static readonly field_220944_e: Internal.MemoryModuleType<Internal.List<Internal.GlobalPos>>;
        static readonly field_242309_E: Internal.MemoryModuleType<boolean>;
        static readonly field_220940_a: Internal.MemoryModuleType<void>;
        static readonly field_234095_ac_: Internal.MemoryModuleType<number>;
        static readonly field_220956_q: Internal.MemoryModuleType<BlockPos>;
        static readonly field_220958_s: Internal.MemoryModuleType<Internal.LivingEntity>;
        static readonly field_242311_P: Internal.MemoryModuleType<boolean>;
        static readonly field_220953_n: Internal.MemoryModuleType<Internal.AgeableEntity>;
        static readonly field_234083_Q_: Internal.MemoryModuleType<BlockPos>;
        static readonly field_234082_P_: Internal.MemoryModuleType<boolean>;
        static readonly field_220955_p: Internal.MemoryModuleType<Internal.List<Internal.GlobalPos>>;
        static readonly field_234081_O_: Internal.MemoryModuleType<boolean>;
        static readonly field_234080_N_: Internal.MemoryModuleType<boolean>;
        static readonly field_220951_l: Internal.MemoryModuleType<Internal.IPosWrapper>;
        static readonly field_225462_q: Internal.MemoryModuleType<Internal.Set<Internal.GlobalPos>>;
        static readonly field_234089_W_: Internal.MemoryModuleType<Internal.List<Internal.AbstractPiglinEntity>>;
        static readonly field_234104_p_: Internal.MemoryModuleType<boolean>;
        static readonly field_234088_V_: Internal.MemoryModuleType<Internal.PlayerEntity>;
        static readonly field_234086_T_: Internal.MemoryModuleType<Internal.HoglinEntity>;
        static readonly field_220961_v: Internal.MemoryModuleType<Internal.GlobalPos>;
        static readonly field_234084_R_: Internal.MemoryModuleType<boolean>;
        static readonly field_234097_ae_: Internal.MemoryModuleType<boolean>;
        static readonly field_234103_o_: Internal.MemoryModuleType<Internal.LivingEntity>;
        static readonly field_223543_y: Internal.MemoryModuleType<number>;
        static readonly field_234085_S_: Internal.MemoryModuleType<Internal.HoglinEntity>;
        static readonly field_223021_x: Internal.MemoryModuleType<number>;
        static readonly field_234101_d_: Internal.MemoryModuleType<Internal.GlobalPos>;
        static readonly field_220947_h: Internal.MemoryModuleType<Internal.List<Internal.LivingEntity>>;
        static readonly field_220949_j: Internal.MemoryModuleType<Internal.PlayerEntity>;
        static readonly field_226332_A_: Internal.MemoryModuleType<number>;
        static readonly field_220943_d: Internal.MemoryModuleType<Internal.GlobalPos>;
        static readonly field_234106_z_: Internal.MemoryModuleType<Internal.LivingEntity>;
        static readonly field_220945_f: Internal.MemoryModuleType<Internal.List<Internal.LivingEntity>>;
        static readonly field_234098_af_: Internal.MemoryModuleType<BlockPos>;
        static readonly field_220941_b: Internal.MemoryModuleType<Internal.GlobalPos>;
        static readonly field_220957_r: Internal.MemoryModuleType<Internal.DamageSource>;
        static readonly field_220959_t: Internal.MemoryModuleType<Internal.LivingEntity>;
        static readonly field_234099_ag_: Internal.MemoryModuleType<boolean>;
        static readonly field_220952_m: Internal.MemoryModuleType<Internal.LivingEntity>;
        static readonly field_220954_o: Internal.MemoryModuleType<net.minecraft.pathfinding.Path>;
        static readonly field_234078_L_: Internal.MemoryModuleType<Internal.UUID>;
        static readonly field_234079_M_: Internal.MemoryModuleType<boolean>;
        static readonly field_242310_O: Internal.MemoryModuleType<number>;
        static readonly field_220950_k: Internal.MemoryModuleType<Internal.WalkTarget>;
        static readonly field_234096_ad_: Internal.MemoryModuleType<Internal.PlayerEntity>;
        static readonly field_234075_I_: Internal.MemoryModuleType<Internal.AgeableEntity>;
        static readonly field_234090_X_: Internal.MemoryModuleType<Internal.List<Internal.AbstractPiglinEntity>>;
        static readonly field_234105_s_: Internal.MemoryModuleType<Internal.Entity>;
        static readonly field_234077_K_: Internal.MemoryModuleType<Internal.MobEntity>;
        static readonly field_234091_Y_: Internal.MemoryModuleType<Internal.List<Internal.HoglinEntity>>;
        static readonly field_234093_aa_: Internal.MemoryModuleType<Internal.LivingEntity>;
        static readonly field_234076_J_: Internal.MemoryModuleType<Internal.ItemEntity>;
        static readonly field_234092_Z_: Internal.MemoryModuleType<Internal.AbstractPiglinEntity>;
        static readonly field_234102_l_: Internal.MemoryModuleType<Internal.PlayerEntity>;
        static readonly field_220962_w: Internal.MemoryModuleType<number>;
        static readonly field_223544_z: Internal.MemoryModuleType<number>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Optional<Internal.Codec<U>>);
    }
    type MemoryModuleType_<U> = Registry.minecraft.memory_module_type | MemoryModuleType<U>;
    class LootTable$Builder extends Document.Object implements Internal.ILootFunctionConsumer<Internal.LootTable$Builder> {
        func_212841_b_(arg0: Internal.ILootFunction$IBuilder_): any;
        func_212841_b_(arg0: Internal.ILootFunction$IBuilder_): Internal.LootTable$Builder;
        func_216040_a(arg0: Internal.LootPool$Builder): Internal.LootTable$Builder;
        func_216039_a(arg0: Internal.LootParameterSet): Internal.LootTable$Builder;
        func_216038_b(): Internal.LootTable;
        func_212862_c_(): any;
        func_212862_c_(): Internal.LootTable$Builder;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type LootTable$Builder_ = LootTable$Builder;
    abstract class TeamProperty <T> extends Document.Object {
        readValue(arg0: Internal.PacketBuffer): T;
        toNBT(arg0: T): Internal.INBT;
        fromNBT(arg0: Internal.INBT): Internal.Optional<T>;
        getType(): Internal.TeamPropertyType<T>;
        toString(arg0: T): string;
        fromString(arg0: string): Internal.Optional<T>;
        writeValue(arg0: Internal.PacketBuffer, arg1: T): void;
        config(arg0: Internal.ConfigGroup, arg1: Internal.TeamPropertyValue<T>): void;
        write(arg0: Internal.PacketBuffer): void;
        readonly defaultValue: T;
        readonly id: ResourceLocation;
        get type(): Internal.TeamPropertyType<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: T);
    }
    type TeamProperty_<T> = TeamProperty<T>;
    interface IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
    }
    type IFeatureConfig_ = IFeatureConfig;
    class DimensionGeneratorSettings extends Document.Object {
        static func_241520_a_(arg0: Internal.SimpleRegistry<net.minecraft.world.Dimension>, arg1: java_.util.function_.Supplier_<Internal.DimensionType_>, arg2: Internal.ChunkGenerator): Internal.SimpleRegistry<net.minecraft.world.Dimension>;
        func_236224_e_(): Internal.SimpleRegistry<net.minecraft.world.Dimension>;
        func_236225_f_(): Internal.ChunkGenerator;
        static func_242753_a(arg0: Internal.DynamicRegistries, arg1: Internal.Properties): Internal.DimensionGeneratorSettings;
        func_236226_g_(): Internal.ImmutableSet<Internal.RegistryKey<Internal.World>>;
        static func_242751_a(arg0: Internal.Registry<Internal.DimensionType>, arg1: Internal.Registry<Internal.Biome>, arg2: Internal.Registry<Internal.DimensionSettings>): Internal.DimensionGeneratorSettings;
        static func_242752_a(arg0: Internal.DynamicRegistries): Internal.DimensionGeneratorSettings;
        func_236227_h_(): boolean;
        func_236228_i_(): boolean;
        handler$bch000$constructor(arg0: number, arg1: boolean, arg2: boolean, arg3: Internal.SimpleRegistry<any>, arg4: Internal.Optional<any>, arg5: Internal.CallbackInfo): void;
        func_236229_j_(): boolean;
        static func_242749_a(arg0: Internal.Registry<Internal.DimensionType>, arg1: Internal.SimpleRegistry<net.minecraft.world.Dimension>, arg2: Internal.ChunkGenerator): Internal.SimpleRegistry<net.minecraft.world.Dimension>;
        func_236232_m_(): Internal.DimensionGeneratorSettings;
        func_236231_l_(): Internal.DimensionGeneratorSettings;
        func_236230_k_(): Internal.DimensionGeneratorSettings;
        func_236221_b_(): number;
        static func_242750_a(arg0: Internal.Registry<Internal.Biome>, arg1: Internal.Registry<Internal.DimensionSettings>, arg2: number): Internal.NoiseChunkGenerator;
        func_236220_a_(arg0: boolean, arg1: Internal.OptionalLong): Internal.DimensionGeneratorSettings;
        func_236223_d_(): boolean;
        func_236222_c_(): boolean;
        static readonly field_236201_a_: Internal.Codec<Internal.DimensionGeneratorSettings>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: boolean, arg2: boolean, arg3: Internal.SimpleRegistry<net.minecraft.world.Dimension>);
    }
    type DimensionGeneratorSettings_ = DimensionGeneratorSettings;
    class WrapFactory extends Document.Object {
        wrapAsJavaObject(cx: Internal.Context, scope: Internal.Scriptable, javaObject: any, staticType: Internal.Class<any>): Internal.Scriptable;
        wrapJavaClass(cx: Internal.Context, scope: Internal.Scriptable, javaClass: Internal.Class<any>): Internal.Scriptable;
        setJavaPrimitiveWrap(value: boolean): void;
        isJavaPrimitiveWrap(): boolean;
        wrapNewObject(cx: Internal.Context, scope: Internal.Scriptable, obj: any): Internal.Scriptable;
        wrap(cx: Internal.Context, scope: Internal.Scriptable, obj: any, staticType: Internal.Class<any>): any;
        get javaPrimitiveWrap(): boolean;
        set javaPrimitiveWrap(value: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type WrapFactory_ = WrapFactory;
    class StructureBlockTileEntity$UpdateCommand extends Internal.Enum<Internal.StructureBlockTileEntity$UpdateCommand> {
        static valueOf(arg0: string): Internal.StructureBlockTileEntity$UpdateCommand;
        static values(): Internal.StructureBlockTileEntity$UpdateCommand[];
        static readonly UPDATE_DATA: Internal.StructureBlockTileEntity$UpdateCommand;
        static readonly SAVE_AREA: Internal.StructureBlockTileEntity$UpdateCommand;
        static readonly LOAD_AREA: Internal.StructureBlockTileEntity$UpdateCommand;
        static readonly SCAN_AREA: Internal.StructureBlockTileEntity$UpdateCommand;
    }
    type StructureBlockTileEntity$UpdateCommand_ = "update_data" | "save_area" | "load_area" | "scan_area" | StructureBlockTileEntity$UpdateCommand;
    interface GenericDeclaration extends Internal.AnnotatedElement {
        getTypeParameters(): any[];
        (): any[];
    }
    type GenericDeclaration_ = (()=>any[]) | GenericDeclaration;
    class GhastEntity extends Internal.FlyingEntity implements Internal.IMob {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        static func_234290_eH_(): Internal.AttributeModifierMap$MutableAttribute;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_175453_cd(): number;
        getEntity(): Internal.Entity;
        func_175454_a(arg0: boolean): void;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        static func_223368_b(arg0: Internal.EntityType_<Internal.GhastEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_110182_bF(): boolean;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.GhastEntity>, arg1: Internal.World);
    }
    type GhastEntity_ = GhastEntity;
    class ServerChunkProvider$ChunkExecutor extends Internal.ThreadTaskExecutor<Internal.Runnable> {
        func_213141_a<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Source_>, Internal.Runnable_>): Internal.CompletableFuture<Source_>;
        func_233528_c_<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Internal.Either_<Source_, Internal.Exception_>>, Internal.Runnable_>): Internal.CompletableFuture<Source_>;
        close(): void;
    }
    type ServerChunkProvider$ChunkExecutor_ = ServerChunkProvider$ChunkExecutor;
    class IntegrityProcessor extends Internal.StructureProcessor {
        static readonly field_237077_a_: Internal.Codec<Internal.IntegrityProcessor>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type IntegrityProcessor_ = IntegrityProcessor;
    class BookContentsReloadEvent extends Internal.BookEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
        constructor();
    }
    type BookContentsReloadEvent_ = BookContentsReloadEvent;
    class RenderTooltipEvent$Pre extends Internal.RenderTooltipEvent {
        setY(arg0: number): void;
        setX(arg0: number): void;
        setScreenHeight(arg0: number): void;
        setMaxWidth(arg0: number): void;
        getScreenWidth(): number;
        setScreenWidth(arg0: number): void;
        setFontRenderer(arg0: Internal.FontRenderer): void;
        getScreenHeight(): number;
        getMaxWidth(): number;
        get screenWidth(): number;
        get screenHeight(): number;
        get maxWidth(): number;
        set screenWidth(arg0: number);
        set screenHeight(arg0: number);
        set x(arg0: number);
        set y(arg0: number);
        set fontRenderer(arg0: Internal.FontRenderer);
        set maxWidth(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ItemStack, arg1: Internal.List<Internal.ITextProperties>, arg2: Internal.MatrixStack, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: Internal.FontRenderer);
    }
    type RenderTooltipEvent$Pre_ = RenderTooltipEvent$Pre;
    class CommandEventJS extends Internal.ServerEventJS {
        getException(): Internal.Throwable;
        getParseResults(): Internal.ParseResults<Internal.CommandSource>;
        setException(exception: Internal.Throwable): void;
        setParseResults(parse: Internal.ParseResults<Internal.CommandSource>): void;
        get exception(): Internal.Throwable;
        get parseResults(): Internal.ParseResults<Internal.CommandSource>;
        set exception(exception: Internal.Throwable);
        set parseResults(parse: Internal.ParseResults<Internal.CommandSource>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(e: any);
    }
    type CommandEventJS_ = CommandEventJS;
    interface MessageSupplier {
        get(): org.apache.logging.log4j.message.Message;
        (): org.apache.logging.log4j.message.Message;
    }
    type MessageSupplier_ = (()=>org.apache.logging.log4j.message.Message) | MessageSupplier;
    interface AccessorItemEntity {
        getAge(): number;
        setAge(arg0: number): void;
        getPickupDelay(): number;
    }
    type AccessorItemEntity_ = AccessorItemEntity;
    class RavagerEntity extends Internal.AbstractRaiderEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_213684_dX(): number;
        getEntity(): Internal.Entity;
        static func_234297_m_(): Internal.AttributeModifierMap$MutableAttribute;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213687_eg(): number;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_213683_l(): number;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.RavagerEntity>, arg1: Internal.World);
    }
    type RavagerEntity_ = RavagerEntity;
    interface DirectoryStream <T> extends Internal.Closeable, Internal.Iterable<T> {
        iterator(): Internal.Iterator<T>;
        (): Internal.Iterator<T>;
    }
    type DirectoryStream_<T> = (()=>Internal.Iterator<T>) | DirectoryStream<T>;
    class SimpleBlockStateProvider extends Internal.BlockStateProvider {
        static readonly field_236809_b_: Internal.Codec<Internal.SimpleBlockStateProvider>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockState);
    }
    type SimpleBlockStateProvider_ = SimpleBlockStateProvider;
    class RecursiveTypeFamily extends Document.Object implements Internal.TypeFamily {
        template(): Internal.TypeTemplate;
        static viewUnchecked<A_, B_>(arg0: com.mojang.datafixers.types.Type<any>, arg1: com.mojang.datafixers.types.Type<any>, arg2: Internal.PointFree<Internal.Function<A_, B_>>): Internal.View<A_, B_>;
        fold(arg0: Internal.Algebra): Internal.IntFunction<Internal.RewriteResult<any, any>>;
        size(): number;
        apply(arg0: number): Internal.RecursivePoint$RecursivePointType<any>;
        apply(arg0: number): com.mojang.datafixers.types.Type<any>;
        everywhere(arg0: number, arg1: Internal.TypeRewriteRule_, arg2: Internal.PointFreeRule_): Internal.Optional<Internal.RewriteResult<any, any>>;
        findType<A_, B_>(arg0: number, arg1: com.mojang.datafixers.types.Type<A_>, arg2: com.mojang.datafixers.types.Type<B_>, arg3: Internal.Type$TypeMatcher_<A_, B_>, arg4: boolean): Internal.Either<Internal.TypedOptic<any, any, A_, B_>, Internal.Type$FieldNotFoundException>;
        name(): string;
        buildMuType<A_>(arg0: com.mojang.datafixers.types.Type<A_>, arg1: Internal.RecursiveTypeFamily): Internal.RecursivePoint$RecursivePointType<A_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.TypeTemplate);
    }
    type RecursiveTypeFamily_ = RecursiveTypeFamily;
    class AttributeModifierMap$MutableAttribute extends Document.Object {
        func_233814_a_(arg0: net.minecraft.entity.ai.attributes.Attribute_): Internal.AttributeModifierMap$MutableAttribute;
        func_233815_a_(arg0: net.minecraft.entity.ai.attributes.Attribute_, arg1: number): Internal.AttributeModifierMap$MutableAttribute;
        func_233813_a_(): Internal.AttributeModifierMap;
        hasAttribute(arg0: net.minecraft.entity.ai.attributes.Attribute_): boolean;
        combine(arg0: Internal.AttributeModifierMap$MutableAttribute): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.AttributeModifierMap);
    }
    type AttributeModifierMap$MutableAttribute_ = AttributeModifierMap$MutableAttribute;
    class SRecipeBookPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_193644_b(): Internal.List<ResourceLocation>;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_244302_d(): Internal.RecipeBookStatus;
        func_194151_e(): Internal.SRecipeBookPacket$State;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_192595_a(): Internal.List<ResourceLocation>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.SRecipeBookPacket$State, arg1: Internal.Collection<ResourceLocation>, arg2: Internal.Collection<ResourceLocation>, arg3: Internal.RecipeBookStatus);
    }
    type SRecipeBookPacket_ = SRecipeBookPacket;
    abstract class FileLock extends Document.Object implements Internal.AutoCloseable {
        size(): number;
        release(): void;
        isValid(): boolean;
        overlaps(arg0: number, arg1: number): boolean;
        channel(): Internal.FileChannel;
        position(): number;
        close(): void;
        isShared(): boolean;
        acquiredBy(): java_.nio.channels.Channel;
        get valid(): boolean;
        get shared(): boolean;
    }
    type FileLock_ = FileLock;
    class TwoFeatureChoiceConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        readonly field_227286_b_: java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236579_a_: Internal.Codec<Internal.TwoFeatureChoiceConfig>;
        readonly field_227285_a_: java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>, arg1: java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>);
    }
    type TwoFeatureChoiceConfig_ = TwoFeatureChoiceConfig;
    class BlockMatchRuleTest extends Internal.RuleTest {
        static readonly field_237075_a_: Internal.Codec<Internal.BlockMatchRuleTest>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Block);
    }
    type BlockMatchRuleTest_ = BlockMatchRuleTest;
    class SpecialRecipeSerializerManager extends Internal.EventJS {
        ignoreSpecialFlag(id: string): void;
        isSpecial(recipe: Internal.IRecipe<any>): boolean;
        reset(): void;
        addSpecialFlag(id: string): void;
        static readonly INSTANCE: Internal.SpecialRecipeSerializerManager;
        static readonly EVENT: me.shedaniel.architectury.event.Event<Internal.Runnable>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SpecialRecipeSerializerManager_ = SpecialRecipeSerializerManager;
    abstract class UserPrincipalLookupService extends Document.Object {
        lookupPrincipalByGroupName(arg0: string): Internal.GroupPrincipal;
        lookupPrincipalByName(arg0: string): Internal.UserPrincipal;
    }
    type UserPrincipalLookupService_ = UserPrincipalLookupService;
    class DragSourceDragEvent extends Internal.DragSourceEvent {
        getDropAction(): number;
        getTargetActions(): number;
        getUserAction(): number;
        getGestureModifiers(): number;
        getGestureModifiersEx(): number;
        get userAction(): number;
        get gestureModifiers(): number;
        get gestureModifiersEx(): number;
        get dropAction(): number;
        get targetActions(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DragSourceContext, arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.DragSourceContext, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number);
    }
    type DragSourceDragEvent_ = DragSourceDragEvent;
    interface AlgorithmParameterSpec {
    }
    type AlgorithmParameterSpec_ = AlgorithmParameterSpec;
    interface ClonedPalette <K> {
        get(arg0: number): K;
        (arg0: number): K;
    }
    type ClonedPalette_<K> = ((arg0: number)=>K) | ClonedPalette<K>;
    class TagsUpdatedEvent$VanillaTagTypes extends Internal.TagsUpdatedEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ITagCollectionSupplier);
        constructor();
    }
    type TagsUpdatedEvent$VanillaTagTypes_ = TagsUpdatedEvent$VanillaTagTypes;
    interface ScheduledFuture <V> extends Internal.Delayed, java_.util.concurrent.Future<V> {
    }
    type ScheduledFuture_<V> = ScheduledFuture<V>;
    class FastMap <Value> extends Document.Object {
        with<T_>(oldIndex: number, prop: Internal.Property<T_>, value: T_): Value;
        getKey(keyIndex: number): Internal.FastMapKey<any>;
        getValue(stateIndex: number, key: any): Internal.Comparable<any>;
        getValue<T_>(stateIndex: number, property: Internal.Property<T_>): T_;
        getIndexOf(state: Internal.Map_<Internal.Property_<any>, Internal.Comparable_<any>>): number;
        numProperties(): number;
        getPropertySet(): Internal.ImmutableSet<Internal.Property<any>>;
        withUnsafe<T_>(globalTableIndex: number, property: Internal.Property<T_>, newValue: any): Value;
        isSingleState(): boolean;
        getEntry(propertyIndex: number, stateIndex: number): Internal.Map$Entry<Internal.Property<any>, Internal.Comparable<any>>;
        get propertySet(): Internal.ImmutableSet<Internal.Property<any>>;
        get singleState(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(properties: Internal.Collection<Internal.Property<any>>, valuesMap: Internal.Map<Internal.Map<Internal.Property<any>, Internal.Comparable<any>>, Value>, compact: boolean);
    }
    type FastMap_<Value> = FastMap<Value>;
    class CEditBookPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_210345_b(): boolean;
        func_210346_a(): Internal.ItemStack;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_244708_d(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.ItemStack, arg1: boolean, arg2: number);
    }
    type CEditBookPacket_ = CEditBookPacket;
    class GeneratorConfig extends Internal.EnergyConfig {
        getGeneration(arg0: Internal.Tier_): number;
        readonly generation: Internal.Map<Internal.Tier, number>;
        readonly blazingGeneration: Internal.ForgeConfigSpec$LongValue;
        readonly starterGeneration: Internal.ForgeConfigSpec$LongValue;
        readonly nitroGeneration: Internal.ForgeConfigSpec$LongValue;
        readonly hardenedGeneration: Internal.ForgeConfigSpec$LongValue;
        readonly spiritedGeneration: Internal.ForgeConfigSpec$LongValue;
        readonly basicGeneration: Internal.ForgeConfigSpec$LongValue;
        readonly nioticGeneration: Internal.ForgeConfigSpec$LongValue;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder, arg1: number[], arg2: number[], arg3: number[]);
    }
    type GeneratorConfig_ = GeneratorConfig;
    abstract class SocketAddress extends Document.Object implements Internal.Serializable {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SocketAddress_ = SocketAddress;
    class SOpenWindowPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_218748_d(): Internal.ITextComponent;
        func_218749_c(): Internal.ContainerType<any>;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_218750_b(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.ContainerType<any>, arg2: Internal.ITextComponent);
    }
    type SOpenWindowPacket_ = SOpenWindowPacket;
    class PonderWorld extends Internal.SchematicWorld {
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_226666_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.Stream<Internal.VoxelShape>;
        func_217298_h(arg0: BlockPos): number;
        addParticle(arg0: Internal.Particle): void;
        func_225521_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity): boolean;
        func_190525_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Predicate_<Internal.Entity_>): Internal.PlayerEntity;
        func_226668_i_(arg0: Internal.Entity): boolean;
        popLight(): void;
        addBlockDestroyEffects(arg0: BlockPos, arg1: Internal.BlockState): void;
        func_217361_a<T_>(arg0: Internal.List<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number): T_;
        func_175707_a(arg0: BlockPos, arg1: BlockPos): boolean;
        func_217344_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        func_226669_j_(arg0: Internal.Entity): boolean;
        setBlockBreakingProgress(arg0: BlockPos, arg1: number): void;
        func_217348_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus_): Internal.IChunk;
        func_226659_b_(arg0: BlockPos, arg1: number): number;
        func_72953_d(arg0: Internal.AxisAlignedBB): boolean;
        setMask(arg0: Internal.Selection): void;
        func_241851_ab(): number;
        fixControllerTileEntities(): void;
        func_234939_c_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        createBackup(): void;
        tick(): void;
        func_217374_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: Internal.AxisAlignedBB): Internal.List<T_>;
        func_242403_h(arg0: BlockPos): number;
        func_217370_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity): Internal.PlayerEntity;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_217372_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number): Internal.PlayerEntity;
        func_175710_j(arg0: BlockPos): boolean;
        func_217359_a(arg0: Internal.EntityPredicate, arg1: number, arg2: number, arg3: number): Internal.PlayerEntity;
        func_242405_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): boolean;
        func_225317_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217357_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217301_I(): number;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        func_242413_ae(): number;
        func_226663_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.ISelectionContext): boolean;
        func_226660_f_(arg0: BlockPos): boolean;
        func_212866_a_(arg0: number, arg1: number): Internal.IChunk;
        func_242417_l(arg0: Internal.Entity): void;
        func_234938_ad_(): number;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        restoreBlocks(arg0: Internal.Selection): void;
        func_230547_a_(arg0: BlockPos, arg1: Internal.Block_): void;
        func_175627_a(arg0: BlockPos, arg1: Internal.Direction_): number;
        renderParticles(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: Internal.ActiveRenderInfo, arg3: number): void;
        func_175623_d(arg0: BlockPos): boolean;
        func_242415_f(arg0: number): number;
        func_217362_a(arg0: Internal.Entity, arg1: number): Internal.PlayerEntity;
        func_72839_b(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.List<Internal.Entity>;
        func_201671_F(arg0: BlockPos): boolean;
        pushFakeLight(arg0: number): void;
        func_217360_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        renderEntities(arg0: Internal.MatrixStack, arg1: Internal.SuperRenderTypeBuffer, arg2: Internal.ActiveRenderInfo, arg3: number): void;
        func_205049_d(arg0: BlockPos, arg1: number): number;
        getBlockBreakingProgressions(): Internal.Map<BlockPos, number>;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
        func_217366_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): Internal.PlayerEntity;
        getPartEntities(): Internal.Collection<Internal.PartEntity<any>>;
        func_205052_D(arg0: BlockPos): number;
        func_201572_C(): number;
        func_242414_af(): number;
        restore(): void;
        clearMask(): void;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_225525_a_(arg0: BlockPos, arg1: Internal.ColorResolver_): number;
        func_226664_a_(arg0: Internal.AxisAlignedBB): boolean;
        asKJS(): any;
        func_175659_aa(): Internal.Difficulty;
        func_241457_a_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): Internal.Stream<Internal.VoxelShape>;
        func_217373_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: Internal.AxisAlignedBB): Internal.List<Internal.PlayerEntity>;
        func_242406_i(arg0: BlockPos): Internal.Optional<Internal.RegistryKey<Internal.Biome>>;
        func_226665_a__(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): boolean;
        func_217371_b(arg0: Internal.UUID): Internal.PlayerEntity;
        func_217349_x(arg0: BlockPos): Internal.IChunk;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        isAreaLoaded(arg0: BlockPos, arg1: number): boolean;
        func_217379_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_234865_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): boolean;
        func_225318_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        func_234867_d_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        scene: Internal.PonderScene;
        get partEntities(): Internal.Collection<Internal.PartEntity<any>>;
        get blockBreakingProgressions(): Internal.Map<BlockPos, number>;
        set mask(arg0: Internal.Selection);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: BlockPos, arg1: Internal.World);
    }
    type PonderWorld_ = PonderWorld;
    class MobSpawnInfo$Spawners extends Internal.WeightedRandom$Item {
        static readonly field_242587_b: Internal.Codec<Internal.MobSpawnInfo$Spawners>;
        readonly field_242588_c: Internal.EntityType<any>;
        readonly field_242589_d: number;
        readonly field_242590_e: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<any>, arg1: number, arg2: number, arg3: number);
    }
    type MobSpawnInfo$Spawners_ = MobSpawnInfo$Spawners;
    class EnderCellConfig extends Internal.EnergyConfig {
        getGeneration(arg0: Internal.Tier_): number;
        getChannels(arg0: Internal.Tier_): number;
        readonly channels: Internal.Map<Internal.Tier, number>;
        readonly hardenedChannels: Internal.ForgeConfigSpec$IntValue;
        readonly basicChannels: Internal.ForgeConfigSpec$IntValue;
        readonly spiritedChannels: Internal.ForgeConfigSpec$IntValue;
        readonly starterChannels: Internal.ForgeConfigSpec$IntValue;
        readonly nioticChannels: Internal.ForgeConfigSpec$IntValue;
        readonly blazingChannels: Internal.ForgeConfigSpec$IntValue;
        readonly nitroChannels: Internal.ForgeConfigSpec$IntValue;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
        constructor(arg0: Internal.ForgeConfigSpec$Builder, arg1: number[], arg2: number[], arg3: number[]);
    }
    type EnderCellConfig_ = EnderCellConfig;
    class CrystalAttributes$TooltipResult extends Internal.Enum<Internal.CrystalAttributes$TooltipResult> {
        static valueOf(arg0: string): Internal.CrystalAttributes$TooltipResult;
        static values(): Internal.CrystalAttributes$TooltipResult[];
        static readonly ALL_MISSING: Internal.CrystalAttributes$TooltipResult;
        static readonly ADDED_ALL: Internal.CrystalAttributes$TooltipResult;
        static readonly ADDED_ALL_WITH_MISSING: Internal.CrystalAttributes$TooltipResult;
    }
    type CrystalAttributes$TooltipResult_ = "added_all" | "added_all_with_missing" | "all_missing" | CrystalAttributes$TooltipResult;
    class MachineComponentType <T> extends Internal.ForgeRegistryEntry<Internal.MachineComponentType<Internal.IMachineComponent>> {
        setNotSingle(arg0: Internal.BiFunction_<Internal.IMachineComponentManager_, Internal.List_<T>, Internal.IComponentHandler_<T>>): Internal.MachineComponentType<T>;
        getTranslatedName(): Internal.TranslationTextComponent;
        getDefaultComponentBuilder(): Internal.Function<Internal.IMachineComponentManager, T>;
        getCodec(): Internal.Codec<Internal.IMachineComponentTemplate<T>>;
        getVariant(arg0: ResourceLocation_): Internal.IComponentVariant;
        isSingle(): boolean;
        setRegistryName(arg0: ResourceLocation_): any;
        isDefaultComponent(): boolean;
        getHandler(arg0: Internal.IMachineComponentManager, arg1: Internal.List<T>): Internal.IComponentHandler<T>;
        haveGUIBuilder(): boolean;
        setGUIBuilder(arg0: java_.util.function_.Supplier_<Internal.IMachineComponentBuilder_<T>>): Internal.MachineComponentType<T>;
        getGUIBuilder(): java_.util.function_.Supplier<Internal.IMachineComponentBuilder<T>>;
        addVariant(arg0: Internal.IComponentVariant_): Internal.IComponentVariant;
        get single(): boolean;
        get codec(): Internal.Codec<Internal.IMachineComponentTemplate<T>>;
        get defaultComponentBuilder(): Internal.Function<Internal.IMachineComponentManager, T>;
        get gUIBuilder(): java_.util.function_.Supplier<Internal.IMachineComponentBuilder<T>>;
        get translatedName(): Internal.TranslationTextComponent;
        get defaultComponent(): boolean;
        set notSingle(arg0: Internal.BiFunction_<Internal.IMachineComponentManager_, Internal.List_<T>, Internal.IComponentHandler_<T>>);
        set gUIBuilder(arg0: java_.util.function_.Supplier_<Internal.IMachineComponentBuilder_<T>>);
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<Internal.IMachineComponentTemplate<T>>, arg1: Internal.Function<Internal.IMachineComponentManager, T>);
        constructor(arg0: Internal.Function<Internal.IMachineComponentManager, T>);
        constructor(arg0: Internal.Codec<Internal.IMachineComponentTemplate<T>>);
    }
    type MachineComponentType_<T> = Registry.custommachinery.component_type | MachineComponentType<T>;
    class Tessellator extends Document.Object {
        func_78381_a(): void;
        func_178180_c(): Internal.BufferBuilder;
        static func_178181_a(): Internal.Tessellator;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type Tessellator_ = Tessellator;
    class ParsePosition extends Document.Object {
        getIndex(): number;
        setIndex(arg0: number): void;
        setErrorIndex(arg0: number): void;
        getErrorIndex(): number;
        get errorIndex(): number;
        get index(): number;
        set errorIndex(arg0: number);
        set index(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type ParsePosition_ = ParsePosition;
    class NBTQueryManager extends Document.Object {
        func_211547_a(arg0: BlockPos, arg1: Internal.Consumer_<Internal.CompoundNBT_>): void;
        func_211548_a(arg0: number, arg1: Internal.CompoundNBT_): boolean;
        func_211549_a(arg0: number, arg1: Internal.Consumer_<Internal.CompoundNBT_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ClientPlayNetHandler);
    }
    type NBTQueryManager_ = NBTQueryManager;
    class WolfEntity extends Internal.DyingEntity implements Internal.IAngerable {
        shouldRiderSit(): boolean;
        func_230256_F__(): number;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_70921_u(): boolean;
        func_70920_v(): number;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_70922_bv(): boolean;
        func_70923_f(arg0: number, arg1: number): number;
        func_230260_a__(arg0: number): void;
        func_233682_c_(arg0: Internal.CompoundNBT_): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_233681_b_(arg0: Internal.PlayerEntity): void;
        static func_234233_eS_(): Internal.AttributeModifierMap$MutableAttribute;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_241358_a_(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT_): void;
        func_175546_cu(): Internal.DyeColor;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.WolfEntity;
        func_230257_G__(): Internal.UUID;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_233678_J__(): boolean;
        hasCooldown(): boolean;
        isMultipartEntity(): boolean;
        func_70915_j(arg0: number): number;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_70918_i(arg0: boolean): void;
        func_70917_k(arg0: number): number;
        getEntity(): Internal.Entity;
        asKJS(): any;
        func_230258_H__(): void;
        func_241355_J__(): void;
        canRiderInteract(): boolean;
        formatLoc(arg0: Vec3): string;
        func_233680_b_(arg0: Internal.LivingEntity): boolean;
        func_241359_a_(arg0: Internal.ServerWorld, arg1: boolean): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_241357_a_(arg0: Internal.World): boolean;
        func_175547_a(arg0: Internal.DyeColor_): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_241356_K__(): void;
        func_230259_a_(arg0: Internal.UUID): void;
        static readonly field_213441_bD: Internal.Predicate<Internal.LivingEntity>;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.WolfEntity>, arg1: Internal.World);
    }
    type WolfEntity_ = WolfEntity;
    abstract class ImmutableMap <K, V> extends Document.Object implements Internal.Map<K, V>, Internal.Serializable {
        getOrDefault(arg0: any, arg1: V): V;
        computeIfAbsent(arg0: K, arg1: Internal.Function_<K, V>): V;
        values(): Internal.ImmutableCollection<V>;
        values(): Internal.Collection<any>;
        replace(arg0: K, arg1: V): V;
        replace(arg0: K, arg1: V, arg2: V): boolean;
        replaceAll(arg0: Internal.BiFunction_<K, V, V>): void;
        containsValue(arg0: any): boolean;
        put(arg0: K, arg1: V): V;
        remove(arg0: any, arg1: any): boolean;
        remove(arg0: any): V;
        compute(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        static toImmutableMap<T_, K_, V_>(arg0: Internal.Function_<T_, K_>, arg1: Internal.Function_<T_, V_>, arg2: Internal.BinaryOperator<V_>): Internal.Collector<T_, any, Internal.ImmutableMap<K_, V_>>;
        static toImmutableMap<T_, K_, V_>(arg0: Internal.Function_<T_, K_>, arg1: Internal.Function_<T_, V_>): Internal.Collector<T_, any, Internal.ImmutableMap<K_, V_>>;
        putAll(arg0: Internal.Map_<K, V>): void;
        merge(arg0: K, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        static of<K_, V_>(): Internal.ImmutableMap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_): Internal.ImmutableMap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_, arg6: K_, arg7: V_, arg8: K_, arg9: V_): Internal.ImmutableMap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_, arg6: K_, arg7: V_): Internal.ImmutableMap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_): Internal.ImmutableMap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_): Internal.ImmutableMap<K_, V_>;
        get(arg0: any): V;
        static builder<K_, V_>(): Internal.ImmutableMap$Builder<K_, V_>;
        keySet(): Internal.ImmutableSet<K>;
        keySet(): Internal.Set<any>;
        entrySet(): Internal.Set<any>;
        entrySet(): Internal.ImmutableSet<Internal.Map$Entry<K, V>>;
        forEach(arg0: Internal.BiConsumer_<K, V>): void;
        containsKey(arg0: any): boolean;
        isEmpty(): boolean;
        clear(): void;
        static copyOf<K_, V_>(arg0: Internal.Map_<K_, V_>): Internal.ImmutableMap<K_, V_>;
        static copyOf<K_, V_>(arg0: Internal.Iterable_<Internal.Map$Entry_<K_, V_>>): Internal.ImmutableMap<K_, V_>;
        asMultimap(): Internal.ImmutableSetMultimap<K, V>;
        computeIfPresent(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        size(): number;
        putIfAbsent(arg0: K, arg1: V): V;
        get empty(): boolean;
    }
    type ImmutableMap_<K, V> = ImmutableMap<K, V>;
    class ChestContainer extends Internal.Container {
        func_85151_d(): Internal.IInventory;
        static func_216989_e(arg0: number, arg1: Internal.PlayerInventory): Internal.ChestContainer;
        func_216985_f(): number;
        static func_216988_c(arg0: number, arg1: Internal.PlayerInventory): Internal.ChestContainer;
        static func_216986_a(arg0: number, arg1: Internal.PlayerInventory): Internal.ChestContainer;
        static func_216984_b(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IInventory): Internal.ChestContainer;
        static func_216987_b(arg0: number, arg1: Internal.PlayerInventory): Internal.ChestContainer;
        static func_216992_a(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IInventory): Internal.ChestContainer;
        static func_216990_f(arg0: number, arg1: Internal.PlayerInventory): Internal.ChestContainer;
        static func_216991_d(arg0: number, arg1: Internal.PlayerInventory): Internal.ChestContainer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ContainerType<any>, arg1: number, arg2: Internal.PlayerInventory, arg3: Internal.IInventory, arg4: number);
    }
    type ChestContainer_ = ChestContainer;
    class TutorialSteps extends Internal.Enum<Internal.TutorialSteps> {
        func_193309_a(arg0: Internal.Tutorial): Internal.ITutorialStep;
        func_193308_a(): string;
        static func_193307_a(arg0: string): Internal.TutorialSteps;
        static valueOf(arg0: string): Internal.TutorialSteps;
        static values(): Internal.TutorialSteps[];
        static readonly PUNCH_TREE: Internal.TutorialSteps;
        static readonly MOVEMENT: Internal.TutorialSteps;
        static readonly FIND_TREE: Internal.TutorialSteps;
        static readonly OPEN_INVENTORY: Internal.TutorialSteps;
        static readonly NONE: Internal.TutorialSteps;
        static readonly CRAFT_PLANKS: Internal.TutorialSteps;
    }
    type TutorialSteps_ = "movement" | "find_tree" | "punch_tree" | "open_inventory" | "craft_planks" | "none" | TutorialSteps;
    class DifficultyChangeEvent extends net.minecraftforge.eventbus.api.Event {
        getOldDifficulty(): Internal.Difficulty;
        getDifficulty(): Internal.Difficulty;
        get difficulty(): Internal.Difficulty;
        get oldDifficulty(): Internal.Difficulty;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Difficulty, arg1: Internal.Difficulty);
    }
    type DifficultyChangeEvent_ = DifficultyChangeEvent;
    abstract class ChunkGenerator extends Document.Object implements com.yungnickyoung.minecraft.yungsapi.mixin.ChunkGeneratorAccessor, Internal.ChunkGeneratorAccessor {
        func_230356_f_(): number;
        func_235956_a_(arg0: Internal.ServerWorld, arg1: net.minecraft.world.gen.feature.structure.Structure_<any>, arg2: BlockPos, arg3: number, arg4: boolean): BlockPos;
        func_230354_a_(arg0: Internal.WorldGenRegion): void;
        func_235953_a_(arg0: Internal.ISeedReader, arg1: Internal.StructureManager, arg2: Internal.IChunk): void;
        func_230355_e_(): number;
        func_242706_a(arg0: Internal.Registry<Internal.Biome>, arg1: Internal.IChunk): void;
        func_235957_b_(): Internal.DimensionStructuresSettings;
        func_242707_a(arg0: Internal.DynamicRegistries, arg1: Internal.StructureManager, arg2: Internal.IChunk, arg3: Internal.TemplateManager, arg4: number): void;
        func_230348_a_(arg0: number, arg1: number): Internal.IBlockReader;
        func_235952_a_(arg0: Internal.ChunkPos): boolean;
        func_230349_a_(arg0: number): Internal.ChunkGenerator;
        repurposedstructures_setSettings(arg0: Internal.DimensionStructuresSettings): void;
        yungsapi_setSettings(arg0: Internal.DimensionStructuresSettings): void;
        func_205470_d(): number;
        func_230352_b_(arg0: Internal.IWorld, arg1: Internal.StructureManager, arg2: Internal.IChunk): void;
        func_230350_a_(arg0: number, arg1: Internal.BiomeManager, arg2: Internal.IChunk, arg3: CarvingGenerationStep_): void;
        func_230353_a_(arg0: Internal.Biome_, arg1: Internal.StructureManager, arg2: Internal.EntityClassification_, arg3: BlockPos): Internal.List<Internal.MobSpawnInfo$Spawners>;
        func_230351_a_(arg0: Internal.WorldGenRegion, arg1: Internal.StructureManager): void;
        yungsapi_getCodec(): Internal.Codec<any>;
        func_222529_a(arg0: number, arg1: number, arg2: Internal.Heightmap$Type_): number;
        func_225551_a_(arg0: Internal.WorldGenRegion, arg1: Internal.IChunk): void;
        func_202090_b(): Internal.BiomeProvider;
        func_222531_c(arg0: number, arg1: number, arg2: Internal.Heightmap$Type_): number;
        func_222532_b(arg0: number, arg1: number, arg2: Internal.Heightmap$Type_): number;
        repurposedstructures_getCodec(): Internal.Codec<any>;
        static readonly field_235948_a_: Internal.Codec<Internal.ChunkGenerator>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BiomeProvider, arg1: Internal.DimensionStructuresSettings);
        constructor(arg0: Internal.BiomeProvider, arg1: Internal.BiomeProvider, arg2: Internal.DimensionStructuresSettings, arg3: number);
    }
    type ChunkGenerator_ = ChunkGenerator;
    class IsoChronology extends Internal.AbstractChronology implements Internal.Serializable {
        localDateTime(arg0: Internal.TemporalAccessor): Internal.ChronoLocalDateTime<any>;
        localDateTime(arg0: Internal.TemporalAccessor): Internal.LocalDateTime;
        date(arg0: Internal.Era_, arg1: number, arg2: number, arg3: number): Internal.LocalDate;
        date(arg0: number, arg1: number, arg2: number): Internal.LocalDate;
        date(arg0: Internal.TemporalAccessor): Internal.LocalDate;
        period(arg0: number, arg1: number, arg2: number): Internal.Period;
        dateYearDay(arg0: number, arg1: number): Internal.LocalDate;
        dateYearDay(arg0: Internal.Era_, arg1: number, arg2: number): Internal.LocalDate;
        zonedDateTime(arg0: Internal.TemporalAccessor): Internal.ZonedDateTime;
        zonedDateTime(arg0: Internal.TemporalAccessor): Internal.ChronoZonedDateTime<any>;
        zonedDateTime(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.ChronoZonedDateTime<any>;
        zonedDateTime(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.ZonedDateTime;
        resolveDate(arg0: Internal.Map_<Internal.TemporalField_, number>, arg1: Internal.ResolverStyle_): Internal.LocalDate;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        epochSecond(arg0: Internal.Era_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: Internal.ZoneOffset): number;
        dateEpochDay(arg0: number): Internal.LocalDate;
        dateNow(arg0: Internal.Clock): Internal.LocalDate;
        dateNow(): Internal.LocalDate;
        dateNow(arg0: Internal.ZoneId): Internal.LocalDate;
        eraOf(arg0: number): Internal.IsoEra;
        static readonly INSTANCE: Internal.IsoChronology;
    }
    type IsoChronology_ = IsoChronology;
    interface Int2ObjectFunction <V> extends it.unimi.dsi.fastutil.Function<number, V>, Internal.IntFunction<V> {
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        apply(arg0: number): V;
        containsKey(arg0: any): boolean;
        containsKey(arg0: number): boolean;
        get(arg0: any): V;
        get(arg0: number): V;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: V): V;
        put(arg0: number, arg1: V): V;
        remove(arg0: any): V;
        remove(arg0: number): V;
        (arg0: number): V;
    }
    type Int2ObjectFunction_<V> = ((arg0: number)=>V) | Int2ObjectFunction<V>;
    interface Function5 <T1, T2, T3, T4, T5, R> {
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5): R;
        curry3(): Internal.Function3<T1, T2, T3, Internal.BiFunction<T4, T5, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function<T5, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function3<T3, T4, T5, R>>;
        curry(): Internal.Function<T1, Internal.Function4<T2, T3, T4, T5, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5): R;
    }
    type Function5_<T1, T2, T3, T4, T5, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5)=>R) | Function5<T1, T2, T3, T4, T5, R>;
    class PathfindingDebugRenderer extends Document.Object implements Internal.DebugRenderer$IDebugRenderer {
        func_225619_a_(arg0: Internal.MatrixStack, arg1: Internal.IRenderTypeBuffer_, arg2: number, arg3: number, arg4: number): void;
        func_217675_a(): void;
        func_188289_a(arg0: number, arg1: net.minecraft.pathfinding.Path, arg2: number): void;
        static func_229032_a_(arg0: net.minecraft.pathfinding.Path, arg1: number, arg2: boolean, arg3: boolean, arg4: number, arg5: number, arg6: number): void;
        static func_229031_a_(arg0: net.minecraft.pathfinding.Path, arg1: number, arg2: number, arg3: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PathfindingDebugRenderer_ = PathfindingDebugRenderer;
    interface EngravingEffect$ApplicableEffect {
        apply(arg0: Internal.ItemStack, arg1: number, arg2: Internal.Random): Internal.ItemStack;
        supports(arg0: Internal.ItemStack): boolean;
    }
    type EngravingEffect$ApplicableEffect_ = EngravingEffect$ApplicableEffect;
    class RPConfig$Window extends Document.Object implements Internal.ConfigData {
        validatePostLoad(): void;
        static readonly DEFAULT_TITLE: "Minecraft ${mcversion}";
        icon256: string;
        simpleTitle: string;
        customTitle: boolean;
        icon16: string;
        title: string;
        icon32: string;
        customIcon: boolean;
        titleWithActivity: string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RPConfig$Window_ = RPConfig$Window;
    abstract class BeeEntity$PassiveGoal extends Internal.Goal {
        func_225507_h_(): boolean;
        func_225506_g_(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BeeEntity);
    }
    type BeeEntity$PassiveGoal_ = BeeEntity$PassiveGoal;
    interface LongSortedSet extends Internal.LongSet, Internal.SortedSet<number>, Internal.LongBidirectionalIterable {
        tailSet(arg0: number): Internal.LongSortedSet;
        tailSet(arg0: any): Internal.SortedSet<any>;
        tailSet(arg0: number): Internal.LongSortedSet;
        comparator(): Internal.Comparator<any>;
        comparator(): Internal.LongComparator;
        iterator(): Internal.LongIterator;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.LongBidirectionalIterator;
        iterator(arg0: number): Internal.LongBidirectionalIterator;
        last(): number;
        last(): any;
        headSet(arg0: number): Internal.LongSortedSet;
        headSet(arg0: any): Internal.SortedSet<any>;
        headSet(arg0: number): Internal.LongSortedSet;
        firstLong(): number;
        subSet(arg0: number, arg1: number): Internal.LongSortedSet;
        subSet(arg0: any, arg1: any): Internal.SortedSet<any>;
        subSet(arg0: number, arg1: number): Internal.LongSortedSet;
        lastLong(): number;
        first(): number;
        first(): any;
    }
    type LongSortedSet_ = LongSortedSet;
    interface TypeTemplate {
        toSimpleType(): com.mojang.datafixers.types.Type<any>;
        hmap(arg0: Internal.TypeFamily_, arg1: Internal.IntFunction_<Internal.RewriteResult_<any, any>>): Internal.IntFunction<Internal.RewriteResult<any, any>>;
        size(): number;
        applyO<A, B>(arg0: Internal.FamilyOptic_<A, B>, arg1: com.mojang.datafixers.types.Type<A>, arg2: com.mojang.datafixers.types.Type<B>): Internal.FamilyOptic<A, B>;
        apply(arg0: Internal.TypeFamily_): Internal.TypeFamily;
        findFieldOrType<A, B>(arg0: number, arg1: string, arg2: com.mojang.datafixers.types.Type<A>, arg3: com.mojang.datafixers.types.Type<B>): Internal.Either<Internal.TypeTemplate, Internal.Type$FieldNotFoundException>;
    }
    type TypeTemplate_ = TypeTemplate;
    abstract class Phase extends Document.Object implements Internal.IPhase {
        func_221113_a(arg0: Internal.DamageSource_, arg1: number): number;
        func_188660_d(): void;
        func_188658_e(): void;
        func_188659_c(): void;
        func_188657_b(): void;
        func_188652_i(): Internal.PhaseType<Internal.IPhase>;
        func_188653_h(): number;
        func_188654_a(): boolean;
        func_188651_f(): number;
        func_188650_g(): Vec3;
        func_188655_a(arg0: Internal.EnderCrystalEntity, arg1: BlockPos, arg2: Internal.DamageSource_, arg3: Internal.PlayerEntity): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type Phase_ = Phase;
    interface CustomDecorationHolder {
        resetCustomDecoration(): void;
        toggleCustomDecoration(arg0: Internal.IWorld, arg1: BlockPos): void;
        getCustomMarkers(): Internal.Map<string, Internal.MapWorldMarker<any>>;
        getCustomDecorations(): Internal.Map<string, Internal.CustomDecoration>;
    }
    type CustomDecorationHolder_ = CustomDecorationHolder;
    interface EntityTargetKJS {
        getNameKJS(): string;
        (): string;
    }
    type EntityTargetKJS_ = (()=>string) | EntityTargetKJS;
    class FontRenderContext extends Document.Object {
        usesFractionalMetrics(): boolean;
        isTransformed(): boolean;
        equals(arg0: Internal.FontRenderContext): boolean;
        getTransformType(): number;
        getFractionalMetricsHint(): any;
        isAntiAliased(): boolean;
        getTransform(): Internal.AffineTransform;
        getAntiAliasingHint(): any;
        get transform(): Internal.AffineTransform;
        get antiAliased(): boolean;
        get transformed(): boolean;
        get transformType(): number;
        get fractionalMetricsHint(): any;
        get antiAliasingHint(): any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.AffineTransform, arg1: any, arg2: any);
        constructor(arg0: Internal.AffineTransform, arg1: boolean, arg2: boolean);
    }
    type FontRenderContext_ = FontRenderContext;
    interface Codec <A> extends Internal.Encoder<A>, Internal.Decoder<A> {
        flatComapMap<S_>(arg0: Internal.Function_<A, S_>, arg1: Internal.Function_<S_, Internal.DataResult_<A>>): Internal.Codec<S_>;
        dispatch<E_>(arg0: Internal.Function_<E_, A>, arg1: Internal.Function_<A, Internal.Codec_<E_>>): Internal.Codec<E_>;
        dispatch<E_>(arg0: string, arg1: Internal.Function_<E_, A>, arg2: Internal.Function_<A, Internal.Codec_<E_>>): Internal.Codec<E_>;
        deprecated(arg0: number): Internal.Codec<A>;
        dispatchMap<E_>(arg0: Internal.Function_<E_, A>, arg1: Internal.Function_<A, Internal.Codec_<E_>>): Internal.MapCodec<E_>;
        dispatchMap<E_>(arg0: string, arg1: Internal.Function_<E_, A>, arg2: Internal.Function_<A, Internal.Codec_<E_>>): Internal.MapCodec<E_>;
        comapFlatMap<S_>(arg0: Internal.Function_<A, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, A>): Internal.Codec<S_>;
        promotePartial(arg0: Internal.Consumer_<any>): Internal.Decoder<any>;
        promotePartial(arg0: Internal.Consumer_<string>): Internal.Codec<A>;
        flatXmap<S_>(arg0: Internal.Function_<A, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, Internal.DataResult_<A>>): Internal.Codec<S_>;
        fieldOf(arg0: string): Internal.MapDecoder<any>;
        fieldOf(arg0: string): Internal.MapCodec<A>;
        fieldOf(arg0: string): Internal.MapEncoder<any>;
        listOf(): Internal.Codec<Internal.List<A>>;
        xmap<S_>(arg0: Internal.Function_<A, S_>, arg1: Internal.Function_<S_, A>): Internal.Codec<S_>;
        optionalFieldOf(arg0: string, arg1: Internal.Lifecycle, arg2: A, arg3: Internal.Lifecycle): Internal.MapCodec<A>;
        optionalFieldOf(arg0: string, arg1: A): Internal.MapCodec<A>;
        optionalFieldOf(arg0: string, arg1: A, arg2: Internal.Lifecycle): Internal.MapCodec<A>;
        optionalFieldOf(arg0: string): Internal.MapCodec<Internal.Optional<A>>;
        partialDispatch<E_>(arg0: string, arg1: Internal.Function_<E_, Internal.DataResult_<A>>, arg2: Internal.Function_<A, Internal.DataResult_<Internal.Codec_<E_>>>): Internal.Codec<E_>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Codec<A>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Encoder<any>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Decoder<any>;
        orElse(arg0: A): Internal.Codec<A>;
        orElse(arg0: Internal.Consumer_<string>, arg1: A): Internal.Codec<A>;
        orElse(arg0: Internal.UnaryOperator<string>, arg1: A): Internal.Codec<A>;
        dispatchStable<E_>(arg0: Internal.Function_<E_, A>, arg1: Internal.Function_<A, Internal.Codec_<E_>>): Internal.Codec<E_>;
        orElseGet(arg0: java_.util.function_.Supplier_<A>): Internal.Codec<A>;
        orElseGet(arg0: Internal.Consumer_<string>, arg1: java_.util.function_.Supplier_<A>): Internal.Codec<A>;
        orElseGet(arg0: Internal.UnaryOperator<string>, arg1: java_.util.function_.Supplier_<A>): Internal.Codec<A>;
        stable(): Internal.Codec<A>;
        mapResult(arg0: Internal.Codec$ResultFunction<A>): Internal.Codec<A>;
    }
    type Codec_<A> = Codec<A>;
    class BlockPlacerType <P> extends Internal.ForgeRegistryEntry<Internal.BlockPlacerType<any>> {
        func_236437_a_(): Internal.Codec<P>;
        setRegistryName(arg0: ResourceLocation_): any;
        static readonly field_227261_c_: Internal.BlockPlacerType<Internal.ColumnBlockPlacer>;
        static readonly field_227259_a_: Internal.BlockPlacerType<Internal.SimpleBlockPlacer>;
        static readonly field_227260_b_: Internal.BlockPlacerType<Internal.DoublePlantBlockPlacer>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<P>);
    }
    type BlockPlacerType_<P> = Registry.minecraft.worldgen$block_placer_type | BlockPlacerType<P>;
    interface IToolContext {
        getMaterials(): Internal.MaterialNBT;
        getMaterial(arg0: number): Internal.IMaterial;
        getModifierList(): Internal.List<Internal.ModifierEntry>;
        getDefinition(): Internal.ToolDefinition;
        getStats(): Internal.StatsNBT;
        hasTag(arg0: Internal.ITag<Internal.Item>): boolean;
        getVolatileData(): Internal.IModDataReadOnly;
        getModifierLevel(arg0: Internal.Modifier_): number;
        getUpgrades(): Internal.ModifierNBT;
        getItem(): Internal.Item;
        getPersistentData(): Internal.IModDataReadOnly;
        getModifiers(): Internal.ModifierNBT;
        getMaterialsList(): Internal.List<Internal.IMaterial>;
    }
    type IToolContext_ = IToolContext;
    class Month extends Internal.Enum<Internal.Month> implements Internal.TemporalAccessor, Internal.TemporalAdjuster {
        firstMonthOfQuarter(): Internal.Month;
        minus(arg0: number): Internal.Month;
        firstDayOfYear(arg0: boolean): number;
        static valueOf(arg0: string): Internal.Month;
        minLength(): number;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        static values(): Internal.Month[];
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        length(arg0: boolean): number;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        isSupported(arg0: Internal.TemporalField): boolean;
        plus(arg0: number): Internal.Month;
        getLong(arg0: Internal.TemporalField): number;
        getValue(): number;
        getDisplayName(arg0: Internal.TextStyle_, arg1: Internal.Locale): string;
        static of(arg0: number): Internal.Month;
        get(arg0: Internal.TemporalField): number;
        static from(arg0: Internal.TemporalAccessor): Internal.Month;
        maxLength(): number;
        static readonly JANUARY: Internal.Month;
        static readonly JUNE: Internal.Month;
        static readonly MAY: Internal.Month;
        static readonly OCTOBER: Internal.Month;
        static readonly DECEMBER: Internal.Month;
        static readonly MARCH: Internal.Month;
        static readonly FEBRUARY: Internal.Month;
        static readonly AUGUST: Internal.Month;
        static readonly JULY: Internal.Month;
        static readonly SEPTEMBER: Internal.Month;
        static readonly NOVEMBER: Internal.Month;
        static readonly APRIL: Internal.Month;
        get value(): number;
    }
    type Month_ = "january" | "february" | "march" | "april" | "may" | "june" | "july" | "august" | "september" | "october" | "november" | "december" | Month;
    class ClientPlayerJS extends Internal.PlayerJS<Internal.PlayerEntity> {
        isSelf(): boolean;
        get self(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(d: Internal.ClientPlayerDataJS, p: Internal.PlayerEntity, s: boolean);
    }
    type ClientPlayerJS_ = ClientPlayerJS;
    class ZombieEntity extends Internal.MonsterEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_146070_a(arg0: boolean): void;
        handler$zgk000$onKill(arg0: Internal.ServerWorld, arg1: Internal.LivingEntity, arg2: Internal.CallbackInfo): void;
        static func_241399_a_(arg0: Internal.Random): boolean;
        func_204706_dD(): boolean;
        isMultipartEntity(): boolean;
        static func_234342_eQ_(): Internal.AttributeModifierMap$MutableAttribute;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_146072_bX(): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.ZombieEntity>, arg1: Internal.World);
        constructor(arg0: Internal.World);
    }
    type ZombieEntity_ = ZombieEntity;
    interface ISpectatorMenuObject {
        func_178664_z_(): Internal.ITextComponent;
        func_230485_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        func_178662_A_(): boolean;
        func_178661_a(arg0: Internal.SpectatorMenu): void;
    }
    type ISpectatorMenuObject_ = ISpectatorMenuObject;
    class TaskType extends Internal.RegistryEntry<Internal.TaskType> {
        getDisplayName(): Internal.ITextComponent;
        setGuiProvider(arg0: Internal.TaskType$GuiProvider_): Internal.TaskType;
        getTypeForNBT(): string;
        getGuiProvider(): Internal.TaskType$GuiProvider;
        setDisplayName(arg0: Internal.ITextComponent_): Internal.TaskType;
        static createTask(arg0: Internal.Quest, arg1: string): Internal.Task;
        getIcon(): Internal.Icon;
        intId: number;
        readonly provider: Internal.TaskType$Provider;
        readonly id: ResourceLocation;
        get displayName(): Internal.ITextComponent;
        get guiProvider(): Internal.TaskType$GuiProvider;
        get icon(): Internal.Icon;
        get typeForNBT(): string;
        set displayName(arg0: Internal.ITextComponent_);
        set guiProvider(arg0: Internal.TaskType$GuiProvider_);
    }
    type TaskType_ = TaskType;
    class ClocheRenderFunction$ClocheRenderReference extends Document.Object {
        serialize(): Internal.JsonObject;
        getBlock(): Internal.Block;
        static read(buffer: Internal.PacketBuffer): Internal.ClocheRenderFunction$ClocheRenderReference;
        getType(): string;
        write(buffer: Internal.PacketBuffer): void;
        static deserialize(jsonObject: Internal.JsonObject): Internal.ClocheRenderFunction$ClocheRenderReference;
        get block(): Internal.Block;
        get type(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(type: string, block: Internal.Block);
    }
    type ClocheRenderFunction$ClocheRenderReference_ = ClocheRenderFunction$ClocheRenderReference;
    class ModifiedArmorTier extends Document.Object implements Internal.IArmorMaterial {
        setName(name: string): void;
        setRepairIngredient(in_: Internal.IngredientJS_): void;
        func_230304_f_(): number;
        setKnockbackResistance(f: number): void;
        func_200899_b(): Internal.SoundEvent;
        func_200898_c(): Internal.Ingredient;
        func_200897_d(): string;
        setEquipSound(e: Internal.SoundEvent_): void;
        setDurabilityMultiplier(m: number): void;
        func_200896_a(equipmentSlot: EquipmentSlot_): number;
        func_200901_e(): number;
        setSlotProtections(p: number[]): void;
        func_200902_b(equipmentSlot: EquipmentSlot_): number;
        func_200900_a(): number;
        setEnchantmentValue(i: number): void;
        setToughness(f: number): void;
        readonly parent: Internal.IArmorMaterial;
        set repairIngredient(in_: Internal.IngredientJS_);
        set equipSound(e: Internal.SoundEvent_);
        set durabilityMultiplier(m: number);
        set slotProtections(p: number[]);
        set enchantmentValue(i: number);
        set name(name: string);
        set toughness(f: number);
        set knockbackResistance(f: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(id: string, p: Internal.IArmorMaterial);
    }
    type ModifiedArmorTier_ = ModifiedArmorTier;
    interface PrivateKey extends Internal.Key, Internal.Destroyable {
    }
    type PrivateKey_ = PrivateKey;
    interface AccessorMinecraft {
        getRenderPartialTicksPaused(): number;
        (): number;
    }
    type AccessorMinecraft_ = (()=>number) | AccessorMinecraft;
    class View <A, B> extends Document.Object implements Internal.App2<Internal.View$Mu, A, B> {
        flatMap<C_>(arg0: Internal.Function_<com.mojang.datafixers.types.Type_<B>, Internal.View_<B, C_>>): Internal.View<A, C_>;
        newType(): com.mojang.datafixers.types.Type<B>;
        compose<C_>(arg0: Internal.View<C_, A>): Internal.View<C_, B>;
        function(): Internal.PointFree<Internal.Function<A, B>>;
        rewriteOrNop(arg0: Internal.PointFreeRule_): Internal.View<A, B>;
        static create<A_, B_>(arg0: string, arg1: com.mojang.datafixers.types.Type<A_>, arg2: com.mojang.datafixers.types.Type<B_>, arg3: Internal.Function_<Internal.DynamicOps_<any>, Internal.Function_<A_, B_>>): Internal.View<A_, B_>;
        static create<A_, B_>(arg0: com.mojang.datafixers.types.Type<A_>, arg1: com.mojang.datafixers.types.Type<B_>, arg2: Internal.PointFree<Internal.Function<A_, B_>>): Internal.View<A_, B_>;
        type(): com.mojang.datafixers.types.Type<A>;
        static nopView<A_>(arg0: com.mojang.datafixers.types.Type<A_>): Internal.View<A_, A_>;
        rewrite(arg0: Internal.PointFreeRule_): Internal.Optional<Internal.View<A, B>>;
        getFuncType(): com.mojang.datafixers.types.Type<Internal.Function<A, B>>;
        get funcType(): com.mojang.datafixers.types.Type<Internal.Function<A, B>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: com.mojang.datafixers.types.Type<A>, arg1: com.mojang.datafixers.types.Type<B>, arg2: Internal.PointFree<Internal.Function<A, B>>);
    }
    type View_<A, B> = View<A, B>;
    class RenderState$DepthTestState extends Internal.RenderState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: number);
    }
    type RenderState$DepthTestState_ = RenderState$DepthTestState;
    interface IFutureReloadListener {
        func_215226_a(arg0: Internal.IFutureReloadListener$IStage_, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        func_225594_i_(): string;
        (arg0: Internal.IFutureReloadListener$IStage, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor, arg5: Internal.Executor): Internal.CompletableFuture<void>;
    }
    type IFutureReloadListener_ = ((arg0: Internal.IFutureReloadListener$IStage, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.IProfiler, arg4: Internal.Executor, arg5: Internal.Executor)=>Internal.CompletableFuture<void>) | IFutureReloadListener;
    class ChannelOutboundBuffer extends Document.Object {
        bytesBeforeUnwritable(): number;
        getUserDefinedWritability(arg0: number): boolean;
        isEmpty(): boolean;
        isWritable(): boolean;
        removeBytes(arg0: number): void;
        nioBufferCount(): number;
        nioBuffers(arg0: number, arg1: number): Internal.ByteBuffer[];
        nioBuffers(): Internal.ByteBuffer[];
        addMessage(arg0: any, arg1: number, arg2: Internal.ChannelPromise): void;
        remove(): boolean;
        remove(arg0: Internal.Throwable): boolean;
        addFlush(): void;
        totalPendingWriteBytes(): number;
        forEachFlushedMessage(arg0: Internal.ChannelOutboundBuffer$MessageProcessor_): void;
        current(): any;
        setUserDefinedWritability(arg0: number, arg1: boolean): void;
        size(): number;
        nioBufferSize(): number;
        recycle(): void;
        progress(arg0: number): void;
        bytesBeforeWritable(): number;
        get empty(): boolean;
        get writable(): boolean;
    }
    type ChannelOutboundBuffer_ = ChannelOutboundBuffer;
    interface LayoutManager {
        preferredLayoutSize(arg0: java_.awt.Container): Internal.Dimension;
        removeLayoutComponent(arg0: Internal.Component): void;
        minimumLayoutSize(arg0: java_.awt.Container): Internal.Dimension;
        layoutContainer(arg0: java_.awt.Container): void;
        addLayoutComponent(arg0: string, arg1: Internal.Component): void;
    }
    type LayoutManager_ = LayoutManager;
    class Currency extends Document.Object implements Internal.Serializable {
        getNumericCodeAsString(): string;
        getCurrencyCode(): string;
        getDefaultFractionDigits(): number;
        getDisplayName(): string;
        getDisplayName(arg0: Internal.Locale): string;
        getNumericCode(): number;
        static getInstance(arg0: Internal.Locale): Internal.Currency;
        static getInstance(arg0: string): Internal.Currency;
        static getAvailableCurrencies(): Internal.Set<Internal.Currency>;
        getSymbol(): string;
        getSymbol(arg0: Internal.Locale): string;
        get symbol(): string;
        get displayName(): string;
        get availableCurrencies(): Internal.Set<Internal.Currency>;
        get numericCodeAsString(): string;
        get currencyCode(): string;
        get defaultFractionDigits(): number;
        get numericCode(): number;
    }
    type Currency_ = Currency;
    interface ByteProcessor {
        process(arg0: number): boolean;
        (arg0: number): boolean;
    }
    type ByteProcessor_ = ((arg0: number)=>boolean) | ByteProcessor;
    interface IParticleData {
        func_197553_a(arg0: Internal.PacketBuffer): void;
        func_197555_a(): string;
        func_197554_b(): Internal.ParticleType<any>;
    }
    type IParticleData_ = IParticleData;
    interface MessageSizeEstimator {
        newHandle(): Internal.MessageSizeEstimator$Handle;
        (): Internal.MessageSizeEstimator$Handle;
    }
    type MessageSizeEstimator_ = (()=>Internal.MessageSizeEstimator$Handle) | MessageSizeEstimator;
    class MouseClickState extends Internal.Enum<Internal.MouseClickState> {
        static valueOf(arg0: string): Internal.MouseClickState;
        isVanilla(): boolean;
        static values(): Internal.MouseClickState[];
        isSimulate(): boolean;
        static readonly EXECUTE: Internal.MouseClickState;
        static readonly SIMULATE: Internal.MouseClickState;
        static readonly VANILLA: Internal.MouseClickState;
        get simulate(): boolean;
        get vanilla(): boolean;
    }
    type MouseClickState_ = "simulate" | "execute" | "vanilla" | MouseClickState;
    interface IForgeWorld extends Internal.ICapabilityProvider {
        increaseMaxEntityRadius(arg0: number): number;
        getMaxEntityRadius(): number;
        getPartEntities(): Internal.Collection<Internal.PartEntity<any>>;
    }
    type IForgeWorld_ = IForgeWorld;
    interface Decoder$Simple <A> {
        decoder(): Internal.Decoder<A>;
        decode<T>(arg0: Internal.Dynamic<T>): Internal.DataResult<A>;
        (arg0: Internal.Dynamic<T>): Internal.DataResult<A>;
    }
    type Decoder$Simple_<A> = ((arg0: Internal.Dynamic<T>)=>Internal.DataResult<A>) | Decoder$Simple<A>;
    interface ExclusionStrategy {
        shouldSkipClass(arg0: Internal.Class<any>): boolean;
        shouldSkipField(arg0: Internal.FieldAttributes): boolean;
    }
    type ExclusionStrategy_ = ExclusionStrategy;
    interface Comparator <T> {
        compare(arg0: T, arg1: T): number;
        thenComparingInt(arg0: Internal.ToIntFunction_<T>): Internal.Comparator<T>;
        thenComparingDouble(arg0: Internal.ToDoubleFunction_<T>): Internal.Comparator<T>;
        thenComparingLong(arg0: Internal.ToLongFunction_<T>): Internal.Comparator<T>;
        thenComparing<U>(arg0: Internal.Function_<T, U>, arg1: Internal.Comparator<U>): Internal.Comparator<T>;
        thenComparing(arg0: Internal.Comparator<T>): Internal.Comparator<T>;
        thenComparing<U>(arg0: Internal.Function_<T, U>): Internal.Comparator<T>;
        equals(arg0: any): boolean;
        reversed(): Internal.Comparator<T>;
    }
    type Comparator_<T> = Comparator<T>;
    class PlayerTabOverlayGui extends Internal.AbstractGui {
        func_175244_b(arg0: Internal.ITextComponent_): void;
        func_175246_a(arg0: boolean): void;
        func_175248_a(arg0: Internal.ITextComponent_): void;
        func_181030_a(): void;
        func_200262_a(arg0: Internal.NetworkPlayerInfo): Internal.ITextComponent;
        func_238523_a_(arg0: Internal.MatrixStack, arg1: number, arg2: Internal.Scoreboard, arg3: Internal.ScoreObjective): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft, arg1: Internal.IngameGui);
    }
    type PlayerTabOverlayGui_ = PlayerTabOverlayGui;
    interface SetMultimap <K, V> extends Internal.Multimap<K, V> {
        removeAll(arg0: any): Internal.Set<V>;
        removeAll(arg0: any): Internal.Collection<any>;
        entries(): Internal.Collection<any>;
        entries(): Internal.Set<Internal.Map$Entry<K, V>>;
        asMap(): Internal.Map<K, Internal.Collection<V>>;
        equals(arg0: any): boolean;
        get(arg0: K): Internal.Set<V>;
        get(arg0: any): Internal.Collection<any>;
        replaceValues(arg0: K, arg1: Internal.Iterable_<V>): Internal.Set<V>;
        replaceValues(arg0: any, arg1: Internal.Iterable_<any>): Internal.Collection<any>;
    }
    type SetMultimap_<K, V> = SetMultimap<K, V>;
    interface ICarverConfig {
    }
    type ICarverConfig_ = ICarverConfig;
    interface ITextProperties$IStyledTextAcceptor <T> {
        accept(arg0: Internal.Style, arg1: string): Internal.Optional<T>;
        (arg0: Internal.Style, arg1: string): Internal.Optional<T>;
    }
    type ITextProperties$IStyledTextAcceptor_<T> = ((arg0: Internal.Style, arg1: string)=>Internal.Optional<T>) | ITextProperties$IStyledTextAcceptor<T>;
    interface IRecipeLogicStateListener {
        onStateChange(): void;
        (): void;
    }
    type IRecipeLogicStateListener_ = (()=>void) | IRecipeLogicStateListener;
    interface Thread$Builder$OfPlatform extends Internal.Thread$Builder {
        inheritInheritableThreadLocals(arg0: boolean): Internal.Thread$Builder$OfPlatform;
        inheritInheritableThreadLocals(arg0: boolean): Internal.Thread$Builder;
        stackSize(arg0: number): Internal.Thread$Builder$OfPlatform;
        name(arg0: string, arg1: number): Internal.Thread$Builder;
        name(arg0: string, arg1: number): Internal.Thread$Builder$OfPlatform;
        name(arg0: string): Internal.Thread$Builder;
        name(arg0: string): Internal.Thread$Builder$OfPlatform;
        priority(arg0: number): Internal.Thread$Builder$OfPlatform;
        uncaughtExceptionHandler(arg0: Internal.Thread$UncaughtExceptionHandler_): Internal.Thread$Builder$OfPlatform;
        uncaughtExceptionHandler(arg0: Internal.Thread$UncaughtExceptionHandler_): Internal.Thread$Builder;
        daemon(): Internal.Thread$Builder$OfPlatform;
        daemon(arg0: boolean): Internal.Thread$Builder$OfPlatform;
        group(arg0: Internal.ThreadGroup): Internal.Thread$Builder$OfPlatform;
    }
    type Thread$Builder$OfPlatform_ = Thread$Builder$OfPlatform;
    class GameRules extends Document.Object implements Internal.GameRulesAccessor {
        func_234905_b_(): Internal.GameRules;
        static func_223590_a(arg0: Internal.GameRules$IRuleEntryVisitor): void;
        func_223585_a<T_>(arg0: Internal.GameRules$RuleKey<T_>): T_;
        func_223586_b(arg0: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>): boolean;
        func_234899_a_(arg0: Internal.GameRules, arg1: Internal.MinecraftServer): void;
        func_223592_c(arg0: Internal.GameRules$RuleKey<Internal.GameRules$IntegerValue>): number;
        func_82770_a(): Internal.CompoundNBT;
        static func_234903_a_<T_>(arg0: string, arg1: Internal.GameRules$Category_, arg2: Internal.GameRules$RuleType<T_>): Internal.GameRules$RuleKey<T_>;
        static readonly field_223599_b: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223598_a: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223621_x: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223614_q: Internal.GameRules$RuleKey<Internal.GameRules$IntegerValue>;
        static readonly field_223615_r: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223612_o: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_234895_F_: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223613_p: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_234896_G_: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223610_m: Internal.GameRules$RuleKey<Internal.GameRules$IntegerValue>;
        static readonly field_223611_n: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223600_c: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223601_d: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_226681_C_: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_226680_B_: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223618_u: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223619_v: Internal.GameRules$RuleKey<Internal.GameRules$IntegerValue>;
        static readonly field_223616_s: Internal.GameRules$RuleKey<Internal.GameRules$IntegerValue>;
        static readonly field_223617_t: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223608_k: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223609_l: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223620_w: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223606_i: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_230127_D_: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223607_j: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_230128_E_: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223604_g: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_226679_A_: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223605_h: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223602_e: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_226682_y_: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_223603_f: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        static readonly field_226683_z_: Internal.GameRules$RuleKey<Internal.GameRules$BooleanValue>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.DynamicLike<any>);
    }
    type GameRules_ = GameRules;
    interface ShortList extends Internal.List<number>, Internal.Comparable<Internal.List<number>>, Internal.ShortCollection {
        add(arg0: number): boolean;
        add(arg0: any): boolean;
        add(arg0: number, arg1: any): void;
        add(arg0: number): boolean;
        add(arg0: number, arg1: number): void;
        add(arg0: number, arg1: number): void;
        subList(arg0: number, arg1: number): Internal.ShortList;
        subList(arg0: number, arg1: number): Internal.List<any>;
        set(arg0: number, arg1: any): any;
        set(arg0: number, arg1: number): number;
        set(arg0: number, arg1: number): number;
        getShort(arg0: number): number;
        removeShort(arg0: number): number;
        removeElements(arg0: number, arg1: number): void;
        remove(arg0: number): number;
        remove(arg0: number): any;
        remove(arg0: any): boolean;
        lastIndexOf(arg0: number): number;
        lastIndexOf(arg0: any): number;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<any>;
        iterator(): Internal.ShortIterator;
        iterator(): Internal.ShortListIterator;
        size(arg0: number): void;
        addAll(arg0: Internal.ShortList): boolean;
        addAll(arg0: number, arg1: Internal.ShortCollection): boolean;
        addAll(arg0: number, arg1: Internal.ShortList): boolean;
        addElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
        addElements(arg0: number, arg1: number[]): void;
        getElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
        get(arg0: number): number;
        get(arg0: number): any;
        listIterator(arg0: number): Internal.ListIterator<any>;
        listIterator(arg0: number): Internal.ShortListIterator;
        listIterator(): Internal.ShortListIterator;
        listIterator(): Internal.ListIterator<any>;
        indexOf(arg0: any): number;
        indexOf(arg0: number): number;
    }
    type ShortList_ = ShortList;
    class ZoneOffsetTransitionRule$TimeDefinition extends Internal.Enum<Internal.ZoneOffsetTransitionRule$TimeDefinition> {
        static valueOf(arg0: string): Internal.ZoneOffsetTransitionRule$TimeDefinition;
        static values(): Internal.ZoneOffsetTransitionRule$TimeDefinition[];
        createDateTime(arg0: Internal.LocalDateTime, arg1: Internal.ZoneOffset, arg2: Internal.ZoneOffset): Internal.LocalDateTime;
        static readonly WALL: Internal.ZoneOffsetTransitionRule$TimeDefinition;
        static readonly UTC: Internal.ZoneOffsetTransitionRule$TimeDefinition;
        static readonly STANDARD: Internal.ZoneOffsetTransitionRule$TimeDefinition;
    }
    type ZoneOffsetTransitionRule$TimeDefinition_ = "utc" | "wall" | "standard" | ZoneOffsetTransitionRule$TimeDefinition;
    class CrystalAttributes extends Document.Object {
        getTotalTierLevel(): number;
        getPropertiesPerTier(arg0: boolean): Internal.List<Internal.CrystalProperty>;
        discoverAll(arg0: Internal.PlayerProgress): Internal.CrystalAttributes;
        getProperties(): Internal.List<Internal.CrystalProperty>;
        isEmpty(): boolean;
        modifyLevel(arg0: Internal.CrystalProperty_, arg1: number, arg2: boolean): Internal.CrystalAttributes;
        modifyLevel(arg0: Internal.CrystalProperty_, arg1: number): Internal.CrystalAttributes;
        addTooltip(arg0: Internal.List<Internal.ITextComponent>): Internal.CrystalAttributes$TooltipResult;
        addTooltip(arg0: Internal.List<Internal.ITextComponent>, arg1: Internal.CalculationContext): Internal.CrystalAttributes$TooltipResult;
        addTooltip(arg0: Internal.List<Internal.ITextComponent>, arg1: Internal.PlayerProgress): Internal.CrystalAttributes$TooltipResult;
        store(arg0: Internal.CompoundNBT_): void;
        store(arg0: Internal.ItemStack): void;
        getCrystalAttributes(): Internal.List<Internal.CrystalAttributes$Attribute>;
        static getCrystalAttributes(arg0: Internal.ItemStack): Internal.CrystalAttributes;
        static getCrystalAttributes(arg0: Internal.CompoundNBT_): Internal.CrystalAttributes;
        serialize(): Internal.CompoundNBT;
        hasUnknownAttributes(): boolean;
        getAttribute(arg0: Internal.CrystalProperty_): Internal.CrystalAttributes$Attribute;
        clampMaxTier(): Internal.CrystalAttributes;
        copy(): Internal.CrystalAttributes;
        static storeNull(arg0: Internal.CompoundNBT_): void;
        static storeNull(arg0: Internal.ItemStack): void;
        static deserialize(arg0: Internal.CompoundNBT_): Internal.CrystalAttributes;
        combine(arg0: Internal.CrystalAttributes, arg1: boolean): Internal.CrystalAttributes;
        combine(arg0: Internal.CrystalAttributes, arg1: boolean, arg2: number): Internal.CrystalAttributes;
        get totalTierLevel(): number;
        get crystalAttributes(): Internal.List<Internal.CrystalAttributes$Attribute>;
        get properties(): Internal.List<Internal.CrystalProperty>;
        get empty(): boolean;
    }
    type CrystalAttributes_ = CrystalAttributes;
    /**
    */
    class EntityJS extends Document.Object implements Internal.MessageSender, Internal.WrappedJS {
        setY(y: number): void;
        setX(x: number): void;
        isLiving(): boolean;
        isOnScoreboardTeam(teamID: string): boolean;
        isSprinting(): boolean;
        getItem(): Internal.ItemStackJS;
        getTags(): Internal.Set<string>;
        setGlowing(glowing: boolean): void;
        setZ(z: number): void;
        getHasCustomName(): boolean;
        setInvisible(invisible: boolean): void;
        runCommandSilent(command: string): number;
        isBoss(): boolean;
        getDistanceSq(x: number, y: number, z: number): number;
        getDistanceSq(pos: BlockPos): number;
        isGlowing(): boolean;
        getHorizontalFacing(): Internal.Direction;
        getServer(): Internal.ServerJS;
        setMotion(x: number, y: number, z: number): void;
        getProfile(): Internal.GameProfile;
        setRotation(yaw: number, pitch: number): void;
        isOnSameTeam(e: Internal.EntityJS): boolean;
        isAnimal(): boolean;
        getDisplayName(): Internal.Text;
        getType(): string;
        setCustomNameAlwaysVisible(b: boolean): void;
        addMotion(x: number, y: number, z: number): void;
        isInvisible(): boolean;
        isUnderWater(): boolean;
        getEyeHeight(): number;
        getFallDistance(): number;
        setOnFire(seconds: number): void;
        removePassengers(): void;
        attack(hp: number): void;
        attack(source: string, hp: number): void;
        playSound(id: Internal.SoundEvent_, volume: number, pitch: number): void;
        playSound(id: Internal.SoundEvent_): void;
        getDistance(x: number, y: number, z: number): number;
        getDistance(pos: BlockPos): number;
        setStatusMessage(message: Internal.ITextComponent_): void;
        isSwimming(): boolean;
        getCustomName(): Internal.Text;
        getStepHeight(): number;
        mergeFullNBT(tag: Internal.CompoundNBT_): Internal.EntityJS;
        kill(): void;
        getRidingEntity(): Internal.EntityJS;
        setPositionAndRotation(x: number, y: number, z: number, yaw: number, pitch: number): void;
        getLevel(): Internal.WorldJS;
        getPitch(): number;
        getPassengers(): Internal.EntityArrayList;
        isMonster(): boolean;
        setPitch(pitch: number): void;
        getFacing(): Internal.Direction;
        isOnGround(): boolean;
        isSilent(): boolean;
        isPassenger(e: Internal.EntityJS): boolean;
        getRecursivePassengers(): Internal.EntityArrayList;
        getNbt(): Internal.CompoundNBT;
        getWorld(): Internal.WorldJS;
        setFallDistance(fallDistance: number): void;
        getName(): Internal.Text;
        setCustomName(name: Internal.ITextComponent_): void;
        setStepHeight(stepHeight: number): void;
        tell(message: Internal.ITextComponent_): void;
        getTeamId(): string;
        isWaterCreature(): boolean;
        setNoClip(noClip: boolean): void;
        setPosition(x: number, y: number, z: number): void;
        setPosition(block: Internal.BlockContainerJS): void;
        extinguish(): void;
        setInvulnerable(invulnerable: boolean): void;
        setFullNBT(nbt: Internal.CompoundNBT_): void;
        getFullNBT(): Internal.CompoundNBT;
        getNoClip(): boolean;
        setYaw(yaw: number): void;
        getYaw(): number;
        isAlive(): boolean;
        setNoGravity(noGravity: boolean): void;
        isPlayer(): boolean;
        isCrouching(): boolean;
        getId(): Internal.UUID;
        getTicksExisted(): number;
        setSilent(isSilent: boolean): void;
        isFrame(): boolean;
        startRiding(e: Internal.EntityJS, force: boolean): boolean;
        runCommand(command: string): number;
        getCustomNameAlwaysVisible(): boolean;
        setMotionZ(z: number): void;
        setMotionY(y: number): void;
        getBlock(): Internal.BlockContainerJS;
        setMotionX(x: number): void;
        isInWater(): boolean;
        dismountRidingEntity(): void;
        isAmbientCreature(): boolean;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        isInvulnerable(): boolean;
        getX(): number;
        spawn(): void;
        getY(): number;
        getZ(): number;
        isPeacefulCreature(): boolean;
        getMotionZ(): number;
        getMotionX(): number;
        getMotionY(): number;
        getNoGravity(): boolean;
        readonly persistentData: Internal.CompoundNBT;
        readonly minecraftEntity: Internal.Entity;
        get invisible(): boolean;
        get customNameAlwaysVisible(): boolean;
        get type(): string;
        get hasCustomName(): boolean;
        get block(): Internal.BlockContainerJS;
        get pitch(): number;
        get id(): Internal.UUID;
        get item(): Internal.ItemStackJS;
        get passengers(): Internal.EntityArrayList;
        get level(): Internal.WorldJS;
        get profile(): Internal.GameProfile;
        get customName(): Internal.Text;
        get horizontalFacing(): Internal.Direction;
        get tags(): Internal.Set<string>;
        get sprinting(): boolean;
        get crouching(): boolean;
        get noGravity(): boolean;
        get fullNBT(): Internal.CompoundNBT;
        get name(): Internal.Text;
        get animal(): boolean;
        get peacefulCreature(): boolean;
        get stepHeight(): number;
        get frame(): boolean;
        get noClip(): boolean;
        get server(): Internal.ServerJS;
        get nbt(): Internal.CompoundNBT;
        get boss(): boolean;
        get alive(): boolean;
        get ticksExisted(): number;
        get displayName(): Internal.Text;
        get fallDistance(): number;
        get facing(): Internal.Direction;
        get ambientCreature(): boolean;
        get swimming(): boolean;
        get waterCreature(): boolean;
        get invulnerable(): boolean;
        get world(): Internal.WorldJS;
        get eyeHeight(): number;
        get underWater(): boolean;
        get player(): boolean;
        get motionZ(): number;
        get silent(): boolean;
        get living(): boolean;
        get motionY(): number;
        get motionX(): number;
        get ridingEntity(): Internal.EntityJS;
        get inWater(): boolean;
        get recursivePassengers(): Internal.EntityArrayList;
        get yaw(): number;
        get monster(): boolean;
        get glowing(): boolean;
        get onGround(): boolean;
        get teamId(): string;
        get x(): number;
        get y(): number;
        get z(): number;
        set noClip(noClip: boolean);
        set motionZ(z: number);
        set silent(isSilent: boolean);
        set motionY(y: number);
        set fallDistance(fallDistance: number);
        set motionX(x: number);
        set invisible(invisible: boolean);
        set customNameAlwaysVisible(b: boolean);
        set onFire(seconds: number);
        set yaw(yaw: number);
        set statusMessage(message: Internal.ITextComponent_);
        set invulnerable(invulnerable: boolean);
        set glowing(glowing: boolean);
        set noGravity(noGravity: boolean);
        set fullNBT(nbt: Internal.CompoundNBT_);
        set x(x: number);
        set y(y: number);
        set z(z: number);
        set position(block: Internal.BlockContainerJS);
        set pitch(pitch: number);
        set stepHeight(stepHeight: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(w: Internal.WorldJS, e: Internal.Entity);
    }
    type EntityJS_ = EntityJS;
    class TickEvent$ClientTickEvent extends Internal.TickEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TickEvent$Phase);
        constructor();
    }
    type TickEvent$ClientTickEvent_ = TickEvent$ClientTickEvent;
    class Products$P3 <F, T1, T2, T3> extends Document.Object {
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function3_<T1, T2, T3, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function3<T1, T2, T3, R_>>): Internal.App<F, R_>;
        and<T4_, T5_, T6_, T7_>(arg0: Internal.Products$P4<F, T4_, T5_, T6_, T7_>): Internal.Products$P7<F, T1, T2, T3, T4_, T5_, T6_, T7_>;
        and<T4_, T5_, T6_, T7_, T8_>(arg0: Internal.Products$P5<F, T4_, T5_, T6_, T7_, T8_>): Internal.Products$P8<F, T1, T2, T3, T4_, T5_, T6_, T7_, T8_>;
        and<T4_>(arg0: Internal.App<F, T4_>): Internal.Products$P4<F, T1, T2, T3, T4_>;
        and<T4_, T5_>(arg0: Internal.Products$P2<F, T4_, T5_>): Internal.Products$P5<F, T1, T2, T3, T4_, T5_>;
        and<T4_, T5_, T6_>(arg0: Internal.Products$P3<F, T4_, T5_, T6_>): Internal.Products$P6<F, T1, T2, T3, T4_, T5_, T6_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        t3(): Internal.App<F, T3>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>);
    }
    type Products$P3_<F, T1, T2, T3> = Products$P3<F, T1, T2, T3>;
    class GameRules$BooleanValue extends Internal.GameRules$RuleValue<Internal.GameRules$BooleanValue> implements Internal.GameRulesAccessor$BooleanValue, Internal.GameRulesAccessor$BooleanValueSimple {
        static func_223568_b(arg0: boolean): Internal.GameRules$RuleType<Internal.GameRules$BooleanValue>;
        static invokeCreateArchitectury_$md$e571c7$0(arg0: boolean, arg1: Internal.BiConsumer_<any,any>): Internal.GameRules$RuleType<any>;
        func_230313_a_(arg0: Internal.GameRules$BooleanValue, arg1: Internal.MinecraftServer): void;
        func_223570_a(arg0: boolean, arg1: Internal.MinecraftServer): void;
        static invokeCreateArchitectury_$md$e571c7$1(arg0: boolean): Internal.GameRules$RuleType<any>;
        func_223572_a(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.GameRules$RuleType<Internal.GameRules$BooleanValue>, arg1: boolean);
    }
    type GameRules$BooleanValue_ = GameRules$BooleanValue;
    interface ISceneBuilderJS {
        showBasePlate(): void;
        addKeyframe(): void;
        getWorld(): Internal.SceneBuilderJS$WorldInstructionsJS;
        setSceneOffsetY(arg0: number): void;
        debug(): Internal.SceneBuilder$DebugInstructions;
        overlay(): Internal.SceneBuilder$OverlayInstructions;
        idle(arg0: number): void;
        getInternal(): Internal.SceneBuilder;
        markAsFinished(): void;
        configureBasePlate(arg0: number, arg1: number, arg2: number): void;
        title(arg0: string, arg1: string): void;
        addLazyKeyframe(): void;
        special(): Internal.SceneBuilderJS$SpecialInstructionsJS;
        getEffects(): Internal.SceneBuilder$EffectInstructions;
        effects(): Internal.SceneBuilder$EffectInstructions;
        idleSeconds(arg0: number): void;
        world(): Internal.SceneBuilderJS$WorldInstructionsJS;
        getDebug(): Internal.SceneBuilder$DebugInstructions;
        getSpecial(): Internal.SceneBuilderJS$SpecialInstructionsJS;
        getOverlay(): Internal.SceneBuilder$OverlayInstructions;
        rotateCameraY(arg0: number): void;
        scaleSceneView(arg0: number): void;
    }
    type ISceneBuilderJS_ = ISceneBuilderJS;
    class PlayerPerkData extends Document.Object {
        getPerkExp(): number;
        updatePerkData(arg0: Internal.AbstractPerk, arg1: Internal.CompoundNBT_): boolean;
        static read(arg0: Internal.PacketBuffer, arg1: Internal.LogicalSide_): Internal.PlayerPerkData;
        getAllocationTypes(arg0: Internal.AbstractPerk): Internal.Collection<Internal.PerkAllocationType>;
        applyPerkAllocation(arg0: Internal.AbstractPerk, arg1: Internal.PlayerPerkAllocation, arg2: boolean): boolean;
        getAllocatedPerks(arg0: Internal.PerkAllocationType_): Internal.Collection<Internal.AbstractPerk>;
        getAvailablePerkPoints(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): number;
        removePerkAllocation(arg0: Internal.AbstractPerk, arg1: Internal.PlayerPerkAllocation, arg2: boolean): Internal.PerkRemovalResult;
        getPerkLevel(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): number;
        getEffectGrantingPerks(): Internal.Collection<Internal.AbstractPerk>;
        hasPerkAllocation(arg0: Internal.AbstractPerk): boolean;
        hasPerkAllocation(arg0: Internal.AbstractPerk, arg1: Internal.PerkAllocationType_): boolean;
        hasPerkAllocation(arg0: Internal.Predicate_<Internal.AbstractPerk_>): boolean;
        isPerkSealed(arg0: Internal.Predicate_<Internal.AbstractPerk_>): boolean;
        isPerkSealed(arg0: Internal.AbstractPerk): boolean;
        getPercentToNextLevel(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): number;
        getSealedPerks(): Internal.Collection<Internal.AbstractPerk>;
        hasFreeAllocationPoint(arg0: Internal.PlayerEntity, arg1: Internal.LogicalSide_): boolean;
        getFreePointTokens(): Internal.Collection<ResourceLocation>;
        getMetaData(arg0: Internal.AbstractPerk): Internal.CompoundNBT;
        write(arg0: Internal.PacketBuffer): void;
        getData(arg0: Internal.AbstractPerk): Internal.CompoundNBT;
        hasPerkEffect(arg0: Internal.Predicate_<Internal.AbstractPerk_>): boolean;
        hasPerkEffect(arg0: Internal.AbstractPerk): boolean;
        get perkExp(): number;
        get effectGrantingPerks(): Internal.Collection<Internal.AbstractPerk>;
        get sealedPerks(): Internal.Collection<Internal.AbstractPerk>;
        get freePointTokens(): Internal.Collection<ResourceLocation>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PlayerPerkData_ = PlayerPerkData;
    interface LongBidirectionalIterator extends Internal.LongIterator, Internal.ObjectBidirectionalIterator<number> {
        previousLong(): number;
        previous(): number;
        previous(): any;
        back(arg0: number): number;
        skip(arg0: number): number;
        (): number;
    }
    type LongBidirectionalIterator_ = (()=>number) | LongBidirectionalIterator;
    interface Kind1 <F, Mu> extends Internal.App<Mu, F> {
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>, arg10: Internal.App<Mu, T11_>): Internal.Products$P11<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>): Internal.Products$P10<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>): Internal.Products$P9<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>, arg10: Internal.App<Mu, T11_>, arg11: Internal.App<Mu, T12_>, arg12: Internal.App<Mu, T13_>, arg13: Internal.App<Mu, T14_>, arg14: Internal.App<Mu, T15_>, arg15: Internal.App<Mu, T16_>): Internal.Products$P16<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_, T16_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>, arg10: Internal.App<Mu, T11_>, arg11: Internal.App<Mu, T12_>, arg12: Internal.App<Mu, T13_>, arg13: Internal.App<Mu, T14_>, arg14: Internal.App<Mu, T15_>): Internal.Products$P15<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_, T15_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>, arg10: Internal.App<Mu, T11_>, arg11: Internal.App<Mu, T12_>, arg12: Internal.App<Mu, T13_>, arg13: Internal.App<Mu, T14_>): Internal.Products$P14<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_, T14_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>, arg10: Internal.App<Mu, T11_>, arg11: Internal.App<Mu, T12_>, arg12: Internal.App<Mu, T13_>): Internal.Products$P13<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_, T13_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>, arg8: Internal.App<Mu, T9_>, arg9: Internal.App<Mu, T10_>, arg10: Internal.App<Mu, T11_>, arg11: Internal.App<Mu, T12_>): Internal.Products$P12<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_, T9_, T10_, T11_, T12_>;
        group<T1_, T2_, T3_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>): Internal.Products$P3<Mu, T1_, T2_, T3_>;
        group<T1_, T2_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>): Internal.Products$P2<Mu, T1_, T2_>;
        group<T1_>(arg0: Internal.App<Mu, T1_>): Internal.Products$P1<Mu, T1_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>, arg7: Internal.App<Mu, T8_>): Internal.Products$P8<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_, T8_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_, T7_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>, arg6: Internal.App<Mu, T7_>): Internal.Products$P7<Mu, T1_, T2_, T3_, T4_, T5_, T6_, T7_>;
        group<T1_, T2_, T3_, T4_, T5_, T6_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>, arg5: Internal.App<Mu, T6_>): Internal.Products$P6<Mu, T1_, T2_, T3_, T4_, T5_, T6_>;
        group<T1_, T2_, T3_, T4_, T5_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>, arg4: Internal.App<Mu, T5_>): Internal.Products$P5<Mu, T1_, T2_, T3_, T4_, T5_>;
        group<T1_, T2_, T3_, T4_>(arg0: Internal.App<Mu, T1_>, arg1: Internal.App<Mu, T2_>, arg2: Internal.App<Mu, T3_>, arg3: Internal.App<Mu, T4_>): Internal.Products$P4<Mu, T1_, T2_, T3_, T4_>;
    }
    type Kind1_<F, Mu> = Kind1<F, Mu>;
    class BlockModelShapes extends Document.Object {
        func_178122_a(arg0: Internal.BlockState): Internal.TextureAtlasSprite;
        static func_209553_a(arg0: ResourceLocation_, arg1: Internal.BlockState): Internal.ModelResourceLocation;
        static func_209552_a(arg0: Internal.Map_<Internal.Property_<any>, Internal.Comparable_<any>>): string;
        static func_209554_c(arg0: Internal.BlockState): Internal.ModelResourceLocation;
        func_178126_b(): Internal.ModelManager;
        getTexture(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos): Internal.TextureAtlasSprite;
        func_178125_b(arg0: Internal.BlockState): Internal.IBakedModel;
        func_178124_c(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ModelManager);
    }
    type BlockModelShapes_ = BlockModelShapes;
    interface ITickList <T> {
        func_205362_a(arg0: BlockPos, arg1: T, arg2: number, arg3: Internal.TickPriority_): void;
        func_205361_b(arg0: BlockPos, arg1: T): boolean;
        func_205360_a(arg0: BlockPos, arg1: T, arg2: number): void;
        func_205359_a(arg0: BlockPos, arg1: T): boolean;
    }
    type ITickList_<T> = ITickList<T>;
    class LivingFallEvent extends Internal.LivingEvent {
        getDistance(): number;
        setDistance(arg0: number): void;
        setDamageMultiplier(arg0: number): void;
        getDamageMultiplier(): number;
        get distance(): number;
        get damageMultiplier(): number;
        set distance(arg0: number);
        set damageMultiplier(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LivingEntity, arg1: number, arg2: number);
        constructor();
    }
    type LivingFallEvent_ = LivingFallEvent;
    class Template extends Document.Object implements Internal.TemplateAccessor, Internal.TemplateAccess, Internal.IConnectionTemplate {
        func_215388_b(arg0: Internal.PlacementSettings, arg1: BlockPos): Internal.MutableBoundingBox;
        func_215386_a(arg0: BlockPos, arg1: Internal.PlacementSettings, arg2: Internal.Block_, arg3: boolean): Internal.List<Internal.Template$BlockInfo>;
        func_215381_a(arg0: BlockPos, arg1: Internal.PlacementSettings, arg2: Internal.Block_): Internal.List<Internal.Template$BlockInfo>;
        func_237146_a_(arg0: Internal.IServerWorld_, arg1: BlockPos, arg2: BlockPos, arg3: Internal.PlacementSettings, arg4: Internal.Random, arg5: number): boolean;
        func_237144_a_(arg0: Internal.IServerWorld_, arg1: BlockPos, arg2: Internal.PlacementSettings, arg3: Internal.Random): void;
        static func_186266_a(arg0: Internal.PlacementSettings, arg1: BlockPos): BlockPos;
        static func_222857_a(arg0: Internal.IWorld, arg1: number, arg2: Internal.VoxelShapePart, arg3: number, arg4: number, arg5: number): void;
        static func_215382_a(arg0: Internal.IServerWorld_, arg1: Internal.CompoundNBT_): Internal.Optional<Internal.Entity>;
        func_189961_a(arg0: BlockPos, arg1: Internal.Mirror_, arg2: Internal.Rotation_): BlockPos;
        static func_207667_a(arg0: Vec3, arg1: Internal.Mirror_, arg2: Internal.Rotation_, arg3: BlockPos): Vec3;
        setSize(arg0: BlockPos): void;
        func_186254_a(arg0: Internal.World, arg1: BlockPos, arg2: BlockPos, arg3: boolean, arg4: Internal.Block_): void;
        static func_207669_a(arg0: BlockPos, arg1: Internal.Mirror_, arg2: Internal.Rotation_, arg3: BlockPos): BlockPos;
        func_186252_a(arg0: string): void;
        handler$cee000$writeConnectionsToNBT($: Internal.CompoundNBT_, cir: Internal.CallbackInfoReturnable<any>): void;
        func_237150_a_(arg0: BlockPos, arg1: Internal.Rotation_, arg2: BlockPos, arg3: Internal.Mirror_): Internal.MutableBoundingBox;
        static func_191157_a(arg0: BlockPos, arg1: Internal.Mirror_, arg2: Internal.Rotation_, arg3: number, arg4: number): BlockPos;
        static processEntityInfos(arg0: Internal.Template, arg1: Internal.IWorld, arg2: BlockPos, arg3: Internal.PlacementSettings, arg4: Internal.List<Internal.Template$EntityInfo>): Internal.List<Internal.Template$EntityInfo>;
        handler$cee000$readConnectionsFromNBT(compound: Internal.CompoundNBT_, ci: Internal.CallbackInfo): void;
        getPalettes(): Internal.List<any>;
        func_186256_b(arg0: Internal.CompoundNBT_): void;
        func_189552_a(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        func_186257_a(arg0: Internal.Rotation_): BlockPos;
        static func_237145_a_(arg0: Internal.IWorld, arg1: BlockPos, arg2: BlockPos, arg3: Internal.PlacementSettings, arg4: Internal.List<Internal.Template$BlockInfo>): Internal.List<Internal.Template$BlockInfo>;
        handler$cee000$addConnectionsToWorld(iworld: Internal.IServerWorld_, startPos: BlockPos, p_237146_3_: BlockPos, orientation: Internal.PlacementSettings, p_237146_5_: Internal.Random, p_237146_6_: number, cir: Internal.CallbackInfoReturnable<any>): void;
        func_186259_a(): BlockPos;
        func_186262_a(arg0: Internal.PlacementSettings, arg1: BlockPos, arg2: Internal.PlacementSettings, arg3: BlockPos): BlockPos;
        func_186261_b(): string;
        getStoredConnections(): Internal.List<any>;
        func_237152_b_(arg0: Internal.IServerWorld_, arg1: BlockPos, arg2: Internal.PlacementSettings, arg3: Internal.Random): void;
        repurposedstructures_getBlocks(): Internal.List<any>;
        static processBlockInfos(arg0: Internal.IWorld, arg1: BlockPos, arg2: BlockPos, arg3: Internal.PlacementSettings, arg4: Internal.List<Internal.Template$BlockInfo>, arg5: Internal.Template): Internal.List<Internal.Template$BlockInfo>;
        handler$cee000$takeConnectionsFromWorld(worldIn: Internal.World, startPos: BlockPos, size: BlockPos, takeEntities: boolean, toIgnore: Internal.Block_, ci: Internal.CallbackInfo): void;
        static transformedVec3d(arg0: Internal.PlacementSettings, arg1: Vec3): Vec3;
        readonly field_186271_b: Internal.List<Internal.Template$EntityInfo>;
        readonly field_204769_a: Internal.List<Internal.Template$Palette>;
        get palettes(): Internal.List<any>;
        get storedConnections(): Internal.List<any>;
        set size(arg0: BlockPos);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Template_ = Template;
    interface IDataProcessor <T> {
        read(arg0: Internal.CompoundNBT_): T;
        write(arg0: T): Internal.CompoundNBT;
    }
    type IDataProcessor_<T> = IDataProcessor<T>;
    class ComponentEvent extends Internal.AWTEvent {
        getComponent(): Internal.Component;
        static readonly COMPONENT_MOVED: 100;
        static readonly COMPONENT_SHOWN: 102;
        static readonly COMPONENT_HIDDEN: 103;
        static readonly COMPONENT_LAST: 103;
        static readonly COMPONENT_FIRST: 100;
        static readonly COMPONENT_RESIZED: 101;
        get component(): Internal.Component;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Component, arg1: number);
    }
    type ComponentEvent_ = ComponentEvent;
    class ScriptFile extends Document.Object implements Internal.Comparable<Internal.ScriptFile> {
        getError(): Internal.Throwable;
        load(): boolean;
        compareTo(o: Internal.ScriptFile): number;
        compareTo(arg0: any): number;
        readonly source: Internal.ScriptSource;
        readonly pack: Internal.ScriptPack;
        readonly info: Internal.ScriptFileInfo;
        get error(): Internal.Throwable;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(p: Internal.ScriptPack, i: Internal.ScriptFileInfo, s: Internal.ScriptSource);
    }
    type ScriptFile_ = ScriptFile;
    class EventObject extends Document.Object implements Internal.Serializable {
        getSource(): any;
        get source(): any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
    }
    type EventObject_ = EventObject;
    interface BuiltInExceptionProvider {
        readerExpectedInt(): Internal.SimpleCommandExceptionType;
        readerExpectedBool(): Internal.SimpleCommandExceptionType;
        dispatcherUnknownArgument(): Internal.SimpleCommandExceptionType;
        readerExpectedStartOfQuote(): Internal.SimpleCommandExceptionType;
        doubleTooHigh(): Internal.Dynamic2CommandExceptionType;
        integerTooLow(): Internal.Dynamic2CommandExceptionType;
        readerInvalidLong(): Internal.DynamicCommandExceptionType;
        dispatcherUnknownCommand(): Internal.SimpleCommandExceptionType;
        dispatcherParseException(): Internal.DynamicCommandExceptionType;
        longTooLow(): Internal.Dynamic2CommandExceptionType;
        floatTooLow(): Internal.Dynamic2CommandExceptionType;
        readerExpectedDouble(): Internal.SimpleCommandExceptionType;
        readerInvalidInt(): Internal.DynamicCommandExceptionType;
        readerExpectedLong(): Internal.SimpleCommandExceptionType;
        doubleTooLow(): Internal.Dynamic2CommandExceptionType;
        literalIncorrect(): Internal.DynamicCommandExceptionType;
        floatTooHigh(): Internal.Dynamic2CommandExceptionType;
        readerInvalidEscape(): Internal.DynamicCommandExceptionType;
        readerInvalidBool(): Internal.DynamicCommandExceptionType;
        readerInvalidFloat(): Internal.DynamicCommandExceptionType;
        readerExpectedSymbol(): Internal.DynamicCommandExceptionType;
        dispatcherExpectedArgumentSeparator(): Internal.SimpleCommandExceptionType;
        longTooHigh(): Internal.Dynamic2CommandExceptionType;
        readerInvalidDouble(): Internal.DynamicCommandExceptionType;
        integerTooHigh(): Internal.Dynamic2CommandExceptionType;
        readerExpectedEndOfQuote(): Internal.SimpleCommandExceptionType;
        readerExpectedFloat(): Internal.SimpleCommandExceptionType;
    }
    type BuiltInExceptionProvider_ = BuiltInExceptionProvider;
    class StructureMode extends Internal.Enum<Internal.StructureMode> implements Internal.IStringSerializable {
        func_176610_l(): string;
        static valueOf(arg0: string): Internal.StructureMode;
        static values(): Internal.StructureMode[];
        func_242703_b(): Internal.ITextComponent;
        static readonly CORNER: Internal.StructureMode;
        static readonly LOAD: Internal.StructureMode;
        static readonly DATA: Internal.StructureMode;
        static readonly SAVE: Internal.StructureMode;
    }
    type StructureMode_ = "save" | "load" | "corner" | "data" | StructureMode;
    interface IRecipeSerializer <T> extends Internal.IForgeRegistryEntry<Internal.IRecipeSerializer<any>> {
        func_199425_a_(arg0: ResourceLocation_, arg1: Internal.JsonObject): T;
        func_199426_a_(arg0: ResourceLocation_, arg1: Internal.PacketBuffer): T;
        func_199427_a_(arg0: Internal.PacketBuffer, arg1: T): void;
    }
    type IRecipeSerializer_<T> = Registry.minecraft.recipe_serializer | IRecipeSerializer<T>;
    class CKeepAlivePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149460_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type CKeepAlivePacket_ = CKeepAlivePacket;
    class EntitySpawnPlacementRegistry$PlacementType extends Internal.Enum<Internal.EntitySpawnPlacementRegistry$PlacementType> implements Internal.IExtensibleEnum {
        init(): void;
        canSpawnAt(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.EntityType_<any>): boolean;
        static valueOf(arg0: string): Internal.EntitySpawnPlacementRegistry$PlacementType;
        static values(): Internal.EntitySpawnPlacementRegistry$PlacementType[];
        static create(arg0: string, arg1: Internal.TriPredicate_<Internal.IWorldReader_, BlockPos_, Internal.EntityType_<Internal.MobEntity_>>): Internal.EntitySpawnPlacementRegistry$PlacementType;
        static readonly IN_LAVA: Internal.EntitySpawnPlacementRegistry$PlacementType;
        static readonly IN_WATER: Internal.EntitySpawnPlacementRegistry$PlacementType;
        static readonly ON_GROUND: Internal.EntitySpawnPlacementRegistry$PlacementType;
        static readonly NO_RESTRICTIONS: Internal.EntitySpawnPlacementRegistry$PlacementType;
    }
    type EntitySpawnPlacementRegistry$PlacementType_ = "on_ground" | "in_water" | "no_restrictions" | "in_lava" | EntitySpawnPlacementRegistry$PlacementType;
    interface ISlurryProvider extends Internal.IChemicalProvider<Internal.Slurry> {
        getStack(arg0: number): Internal.SlurryStack;
        getStack(arg0: number): Internal.ChemicalStack<any>;
    }
    type ISlurryProvider_ = ISlurryProvider;
    interface TemporalUnit {
        isDurationEstimated(): boolean;
        getDuration(): Internal.Duration;
        isTimeBased(): boolean;
        addTo<R>(arg0: R, arg1: number): R;
        toString(): string;
        isDateBased(): boolean;
        between(arg0: Internal.Temporal, arg1: Internal.Temporal): number;
        isSupportedBy(arg0: Internal.Temporal): boolean;
    }
    type TemporalUnit_ = TemporalUnit;
    abstract class Goal extends Document.Object {
        func_220685_C_(): boolean;
        func_75246_d(): void;
        func_75250_a(): boolean;
        func_75249_e(): void;
        func_75253_b(): boolean;
        func_75251_c(): void;
        func_220684_a(arg0: Internal.EnumSet<Internal.Goal$Flag>): void;
        func_220686_i(): Internal.EnumSet<Internal.Goal$Flag>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Goal_ = Goal;
    class ContextFactory extends Document.Object {
        enterContext(cx: Internal.Context): Internal.Context;
        enterContext(): Internal.Context;
        static initGlobal(factory: Internal.ContextFactory): void;
        call<T_>(action: Internal.ContextAction_<T_>): T_;
        static hasExplicitGlobal(): boolean;
        isSealed(): boolean;
        static getGlobalSetter(): Internal.ContextFactory$GlobalSetter;
        seal(): void;
        static getGlobal(): Internal.ContextFactory;
        getApplicationClassLoader(): Internal.ClassLoader;
        removeListener(listener: Internal.ContextFactory$Listener): void;
        initApplicationClassLoader(loader: Internal.ClassLoader): void;
        addListener(listener: Internal.ContextFactory$Listener): void;
        get sealed(): boolean;
        get applicationClassLoader(): Internal.ClassLoader;
        get globalSetter(): Internal.ContextFactory$GlobalSetter;
        get global(): Internal.ContextFactory;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ContextFactory_ = ContextFactory;
    interface ClassDesc extends Internal.ConstantDesc, Internal.TypeDescriptor$OfField<Internal.ClassDesc> {
        componentType(): Internal.TypeDescriptor$OfField<any>;
        componentType(): Internal.ClassDesc;
        arrayType(): Internal.TypeDescriptor$OfField<any>;
        arrayType(): Internal.ClassDesc;
        arrayType(arg0: number): Internal.ClassDesc;
        displayName(): string;
        descriptorString(): string;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): any;
        resolveConstantDesc(arg0: Internal.MethodHandles$Lookup): Internal.Class<any>;
        isClassOrInterface(): boolean;
        nested(arg0: string, ...arg1: string[]): Internal.ClassDesc;
        nested(arg0: string): Internal.ClassDesc;
        equals(arg0: any): boolean;
        isArray(): boolean;
        packageName(): string;
        isPrimitive(): boolean;
    }
    type ClassDesc_ = ClassDesc;
    class GlBufferUsage extends Internal.Enum<Internal.GlBufferUsage> {
        static valueOf(name: string): Internal.GlBufferUsage;
        static values(): Internal.GlBufferUsage[];
        getId(): number;
        static readonly GL_STATIC_COPY: Internal.GlBufferUsage;
        static readonly GL_STATIC_DRAW: Internal.GlBufferUsage;
        static readonly GL_STREAM_READ: Internal.GlBufferUsage;
        static readonly GL_DYNAMIC_DRAW: Internal.GlBufferUsage;
        static readonly GL_DYNAMIC_READ: Internal.GlBufferUsage;
        static readonly GL_DYNAMIC_COPY: Internal.GlBufferUsage;
        static readonly GL_STATIC_READ: Internal.GlBufferUsage;
        static readonly GL_STREAM_DRAW: Internal.GlBufferUsage;
        static readonly GL_STREAM_COPY: Internal.GlBufferUsage;
        get id(): number;
    }
    type GlBufferUsage_ = "gl_stream_draw" | "gl_stream_read" | "gl_stream_copy" | "gl_static_draw" | "gl_static_read" | "gl_static_copy" | "gl_dynamic_draw" | "gl_dynamic_read" | "gl_dynamic_copy" | GlBufferUsage;
    interface IPartialSafeNBT {
        writeSafe(arg0: Internal.CompoundNBT_, arg1: boolean): void;
        (arg0: Internal.CompoundNBT, arg1: boolean): void;
    }
    type IPartialSafeNBT_ = ((arg0: Internal.CompoundNBT, arg1: boolean)=>void) | IPartialSafeNBT;
    interface SecureRandomParameters {
    }
    type SecureRandomParameters_ = SecureRandomParameters;
    class ServerBossInfo extends Internal.BossInfo {
        func_186761_b(arg0: Internal.ServerPlayerEntity): void;
        func_201359_g(): boolean;
        func_201360_b(): void;
        func_186758_d(arg0: boolean): void;
        func_186757_c(): Internal.Collection<Internal.ServerPlayerEntity>;
        func_186760_a(arg0: Internal.ServerPlayerEntity): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ITextComponent, arg1: Internal.BossInfo$Color, arg2: Internal.BossInfo$Overlay);
    }
    type ServerBossInfo_ = ServerBossInfo;
    interface IForgeItemStack extends Internal.ICapabilitySerializable<Internal.CompoundNBT> {
        getToolTypes(): Internal.Set<Internal.ToolType>;
        canElytraFly(arg0: Internal.LivingEntity): boolean;
        canEquip(arg0: EquipmentSlot_, arg1: Internal.Entity): boolean;
        getHarvestLevel(arg0: Internal.ToolType, arg1: Internal.PlayerEntity, arg2: Internal.BlockState): number;
        onBlockStartBreak(arg0: BlockPos, arg1: Internal.PlayerEntity): boolean;
        onHorseArmorTick(arg0: Internal.World, arg1: Internal.MobEntity): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack): boolean;
        getItemEnchantability(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getEntityLifespan(arg0: Internal.World): number;
        getXpRepairRatio(): number;
        getHighlightTip(arg0: Internal.ITextComponent_): Internal.ITextComponent;
        readShareTag(arg0: Internal.CompoundNBT_): void;
        onEntityItemUpdate(arg0: Internal.ItemEntity): boolean;
        onArmorTick(arg0: Internal.World, arg1: Internal.PlayerEntity): void;
        isBookEnchantable(arg0: Internal.ItemStack): boolean;
        hasContainerItem(): boolean;
        isShield(arg0: Internal.LivingEntity): boolean;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: Internal.LivingEntity): boolean;
        doesSneakBypassUse(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        onItemUseFirst(arg0: Internal.ItemUseContext): Internal.ActionResultType;
        getContainerItem(): Internal.ItemStack;
        onUsingTick(arg0: Internal.LivingEntity, arg1: number): void;
        isPiglinCurrency(): boolean;
        isRepairable(): boolean;
        getEquipmentSlot(): EquipmentSlot;
        getShareTag(): Internal.CompoundNBT;
        getBurnTime(arg0: Internal.IRecipeType<any>): number;
        getBurnTime(): number;
        onDroppedByPlayer(arg0: Internal.PlayerEntity): boolean;
        onEntitySwing(arg0: Internal.LivingEntity): boolean;
        equals(arg0: Internal.ItemStack, arg1: boolean): boolean;
        makesPiglinsNeutral(arg0: Internal.LivingEntity): boolean;
        elytraFlightTick(arg0: Internal.LivingEntity, arg1: number): boolean;
        getStack(): Internal.ItemStack;
        isEnderMask(arg0: Internal.PlayerEntity, arg1: Internal.EndermanEntity): boolean;
        areShareTagsEqual(arg0: Internal.ItemStack): boolean;
        canApplyAtEnchantingTable(arg0: Internal.Enchantment_): boolean;
    }
    type IForgeItemStack_ = IForgeItemStack;
    class MachineJS extends Document.Object {
        addItemToSlot(arg0: string, arg1: Internal.ItemStackJS_, arg2: boolean): Internal.ItemStackJS;
        addFluidToTank(arg0: string, arg1: Internal.FluidStackJS_, arg2: boolean): number;
        getEnergyStored(): number;
        addEnergy(arg0: number, arg1: boolean): number;
        removeItemFromSlot(arg0: string, arg1: number, arg2: boolean): Internal.ItemStackJS;
        getFluidStored(arg0: string): Internal.FluidStackJS;
        removeFluidFromTank(arg0: string, arg1: number, arg2: boolean): Internal.FluidStackJS;
        removeEnergy(arg0: number, arg1: boolean): number;
        getItemStored(arg0: string): Internal.ItemStackJS;
        getFluidCapacity(arg0: string): number;
        addFluid(arg0: Internal.FluidStackJS_, arg1: boolean): number;
        removeFluid(arg0: Internal.FluidStackJS_, arg1: boolean): Internal.FluidStackJS;
        getEnergyCapacity(): number;
        getItemCapacity(arg0: string): number;
        get energyStored(): number;
        get energyCapacity(): number;
    }
    type MachineJS_ = MachineJS;
    interface BufferedImageOp {
        getPoint2D(arg0: Internal.Point2D, arg1: Internal.Point2D): Internal.Point2D;
        filter(arg0: Internal.BufferedImage, arg1: Internal.BufferedImage): Internal.BufferedImage;
        getBounds2D(arg0: Internal.BufferedImage): Internal.Rectangle2D;
        getRenderingHints(): Internal.RenderingHints;
        createCompatibleDestImage(arg0: Internal.BufferedImage, arg1: Internal.ColorModel): Internal.BufferedImage;
    }
    type BufferedImageOp_ = BufferedImageOp;
    class EntityLeaveWorldEvent extends Internal.EntityEvent {
        getWorld(): Internal.World;
        get world(): Internal.World;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Entity, arg1: Internal.World);
    }
    type EntityLeaveWorldEvent_ = EntityLeaveWorldEvent;
    class LootTable extends Document.Object implements Internal.LootTableMixin {
        func_216122_a(): Internal.LootParameterSet;
        func_216120_b(arg0: Internal.LootContext, arg1: Internal.Consumer_<Internal.ItemStack_>): void;
        static func_216124_a(arg0: Internal.Consumer_<Internal.ItemStack_>): Internal.Consumer<Internal.ItemStack>;
        func_216113_a(arg0: Internal.LootContext): Internal.List<Internal.ItemStack>;
        func_216114_a(arg0: Internal.LootContext, arg1: Internal.Consumer_<Internal.ItemStack_>): void;
        getLootTableId(): ResourceLocation;
        func_216118_a(arg0: Internal.IInventory, arg1: Internal.LootContext): void;
        static func_216119_b(): Internal.LootTable$Builder;
        setLootTableId(arg0: ResourceLocation_): void;
        freeze(): void;
        addPool(arg0: Internal.LootPool): void;
        getPool(arg0: string): Internal.LootPool;
        removePool(arg0: string): Internal.LootPool;
        func_227506_a_(arg0: Internal.ValidationTracker): void;
        isFrozen(): boolean;
        getPools(): Internal.List<any>;
        static readonly field_216126_b: Internal.LootParameterSet;
        static readonly field_186464_a: Internal.LootTable;
        get lootTableId(): ResourceLocation;
        get frozen(): boolean;
        get pools(): Internal.List<any>;
        set lootTableId(arg0: ResourceLocation_);
    }
    type LootTable_ = LootTable;
    class JobAttributes$DestinationType extends Internal.AttributeValue {
        static readonly PRINTER: Internal.JobAttributes$DestinationType;
        static readonly FILE: Internal.JobAttributes$DestinationType;
    }
    type JobAttributes$DestinationType_ = JobAttributes$DestinationType;
    class Typed <A> extends Document.Object {
        getOptionalTyped<FT_>(arg0: Internal.OpticFinder<FT_>): Internal.Optional<Internal.Typed<FT_>>;
        getAll<FT_>(arg0: Internal.TypedOptic<A, any, FT_, any>): Internal.List<FT_>;
        getOrDefault<FT_>(arg0: Internal.OpticFinder<FT_>, arg1: FT_): FT_;
        set<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: Internal.Typed<FR_>): Internal.Typed<any>;
        set<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: com.mojang.datafixers.types.Type<FR_>, arg2: FR_): Internal.Typed<any>;
        set<FT_>(arg0: Internal.OpticFinder<FT_>, arg1: FT_): Internal.Typed<any>;
        getOrCreateTyped<FT_>(arg0: Internal.OpticFinder<FT_>): Internal.Typed<FT_>;
        update<FT_>(arg0: Internal.OpticFinder<FT_>, arg1: Internal.Function_<FT_, FT_>): Internal.Typed<any>;
        update<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: com.mojang.datafixers.types.Type<FR_>, arg2: Internal.Function_<FT_, FR_>): Internal.Typed<any>;
        getTyped<FT_>(arg0: Internal.OpticFinder<FT_>): Internal.Typed<FT_>;
        getAllTyped<FT_>(arg0: Internal.OpticFinder<FT_>): Internal.List<Internal.Typed<FT_>>;
        static pair<A_, B_>(arg0: Internal.Typed<A_>, arg1: Internal.Typed<B_>): Internal.Typed<Internal.Pair<A_, B_>>;
        out(): Internal.Typed<A>;
        getValue(): A;
        getOptional<FT_>(arg0: Internal.OpticFinder<FT_>): Internal.Optional<FT_>;
        getOps(): Internal.DynamicOps<any>;
        getType(): com.mojang.datafixers.types.Type<A>;
        get<FT_>(arg0: Internal.OpticFinder<FT_>): FT_;
        updateTyped<FT_>(arg0: Internal.OpticFinder<FT_>, arg1: Internal.Function_<Internal.Typed_<any>, Internal.Typed_<any>>): Internal.Typed<any>;
        updateTyped<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: com.mojang.datafixers.types.Type<FR_>, arg2: Internal.Function_<Internal.Typed_<any>, Internal.Typed_<any>>): Internal.Typed<any>;
        getOrCreate<FT_>(arg0: Internal.OpticFinder<FT_>): FT_;
        updateRecursiveTyped<FT_>(arg0: Internal.OpticFinder<FT_>, arg1: Internal.Function_<Internal.Typed_<any>, Internal.Typed_<any>>): Internal.Typed<any>;
        updateRecursiveTyped<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: com.mojang.datafixers.types.Type<FR_>, arg2: Internal.Function_<Internal.Typed_<any>, Internal.Typed_<any>>): Internal.Typed<any>;
        inj2<B_>(arg0: com.mojang.datafixers.types.Type<B_>): Internal.Typed<Internal.Either<B_, A>>;
        inj1<B_>(arg0: com.mojang.datafixers.types.Type<B_>): Internal.Typed<Internal.Either<A, B_>>;
        write(): Internal.DataResult<Internal.Dynamic<any>>;
        updateRecursive<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: com.mojang.datafixers.types.Type<FR_>, arg2: Internal.Function_<FT_, FR_>): Internal.Typed<any>;
        updateRecursive<FT_>(arg0: Internal.OpticFinder<FT_>, arg1: Internal.Function_<FT_, FT_>): Internal.Typed<any>;
        get ops(): Internal.DynamicOps<any>;
        get type(): com.mojang.datafixers.types.Type<A>;
        get value(): A;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: com.mojang.datafixers.types.Type<A>, arg1: Internal.DynamicOps<any>, arg2: A);
    }
    type Typed_<A> = Typed<A>;
    abstract class AbstractEventExecutorGroup extends Document.Object implements Internal.EventExecutorGroup {
        next(): Internal.EventExecutor;
        scheduleAtFixedRate(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        scheduleAtFixedRate(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): io.netty.util.concurrent.ScheduledFuture<any>;
        terminationFuture(): Internal.Future<any>;
        shutdownGracefully(): Internal.Future<any>;
        shutdownGracefully(arg0: number, arg1: number, arg2: Internal.TimeUnit_): Internal.Future<any>;
        submit(arg0: java_.util.concurrent.Callable_<any>): java_.util.concurrent.Future<any>;
        submit<T_>(arg0: java_.util.concurrent.Callable_<T_>): Internal.Future<T_>;
        submit(arg0: Internal.Runnable_): java_.util.concurrent.Future<any>;
        submit(arg0: Internal.Runnable_): Internal.Future<any>;
        submit(arg0: Internal.Runnable_, arg1: any): java_.util.concurrent.Future<any>;
        submit<T_>(arg0: Internal.Runnable_, arg1: T_): Internal.Future<T_>;
        spliterator(): Internal.Spliterator<Internal.EventExecutor>;
        isTerminated(): boolean;
        forEach(arg0: Internal.Consumer_<Internal.EventExecutor_>): void;
        scheduleWithFixedDelay(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        scheduleWithFixedDelay(arg0: Internal.Runnable_, arg1: number, arg2: number, arg3: Internal.TimeUnit_): io.netty.util.concurrent.ScheduledFuture<any>;
        invokeAll<T_>(arg0: Internal.Collection<java_.util.concurrent.Callable<T_>>, arg1: number, arg2: Internal.TimeUnit_): Internal.List<java_.util.concurrent.Future<T_>>;
        invokeAll<T_>(arg0: Internal.Collection<java_.util.concurrent.Callable<T_>>): Internal.List<java_.util.concurrent.Future<T_>>;
        execute(arg0: Internal.Runnable_): void;
        isShuttingDown(): boolean;
        schedule<V_>(arg0: java_.util.concurrent.Callable_<V_>, arg1: number, arg2: Internal.TimeUnit_): io.netty.util.concurrent.ScheduledFuture<V_>;
        schedule(arg0: java_.util.concurrent.Callable_<any>, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        schedule(arg0: Internal.Runnable_, arg1: number, arg2: Internal.TimeUnit_): io.netty.util.concurrent.ScheduledFuture<any>;
        schedule(arg0: Internal.Runnable_, arg1: number, arg2: Internal.TimeUnit_): Internal.ScheduledFuture<any>;
        iterator(): Internal.Iterator<Internal.EventExecutor>;
        awaitTermination(arg0: number, arg1: Internal.TimeUnit_): boolean;
        shutdownNow(): Internal.List<Internal.Runnable>;
        invokeAny<T_>(arg0: Internal.Collection<java_.util.concurrent.Callable<T_>>, arg1: number, arg2: Internal.TimeUnit_): T_;
        invokeAny<T_>(arg0: Internal.Collection<java_.util.concurrent.Callable<T_>>): T_;
        close(): void;
        shutdown(): void;
        isShutdown(): boolean;
        get shuttingDown(): boolean;
        get terminated(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AbstractEventExecutorGroup_ = AbstractEventExecutorGroup;
    class AlgorithmParameters extends Document.Object {
        init(arg0: number[]): void;
        init(arg0: number[], arg1: string): void;
        init(arg0: Internal.AlgorithmParameterSpec): void;
        getEncoded(): number[];
        getEncoded(arg0: string): number[];
        getAlgorithm(): string;
        getProvider(): Internal.Provider;
        static getInstance(arg0: string, arg1: Internal.Provider): Internal.AlgorithmParameters;
        static getInstance(arg0: string, arg1: string): Internal.AlgorithmParameters;
        static getInstance(arg0: string): Internal.AlgorithmParameters;
        getParameterSpec<T_>(arg0: Internal.Class<T_>): T_;
        get provider(): Internal.Provider;
        get encoded(): number[];
        get algorithm(): string;
    }
    type AlgorithmParameters_ = AlgorithmParameters;
    class Item$Properties extends Document.Object {
        func_200919_a(arg0: Internal.Item_): Internal.Item$Properties;
        func_208103_a(arg0: Internal.Rarity_): Internal.Item$Properties;
        func_200918_c(arg0: number): Internal.Item$Properties;
        func_200917_a(arg0: number): Internal.Item$Properties;
        func_234689_a_(): Internal.Item$Properties;
        func_221540_a(arg0: Internal.Food): Internal.Item$Properties;
        func_200915_b(arg0: number): Internal.Item$Properties;
        func_200916_a(arg0: Internal.ItemGroup): Internal.Item$Properties;
        setNoRepair(): Internal.Item$Properties;
        addToolType(arg0: Internal.ToolType, arg1: number): Internal.Item$Properties;
        setISTER(arg0: java_.util.function_.Supplier_<java_.util.concurrent.Callable_<Internal.ItemStackTileEntityRenderer_>>): Internal.Item$Properties;
        field_200920_a: number;
        field_200921_b: number;
        field_208104_e: Internal.Rarity;
        field_221541_f: Internal.Food;
        field_200922_c: Internal.Item;
        field_200923_d: Internal.ItemGroup;
        field_234688_g_: boolean;
        set iSTER(arg0: java_.util.function_.Supplier_<java_.util.concurrent.Callable_<Internal.ItemStackTileEntityRenderer_>>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Item$Properties_ = Item$Properties;
    class ClientWorld extends Internal.World implements Internal.ExtendedWorld, Internal.ClientWorldExtended {
        func_201696_r(arg0: BlockPos): number;
        func_217296_a(arg0: Vec3, arg1: Vec3, arg2: BlockPos, arg3: Internal.VoxelShape, arg4: Internal.BlockState): Internal.BlockRayTraceResult;
        func_226666_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.Stream<Internal.VoxelShape>;
        func_72912_H(): Internal.ClientWorld$ClientWorldInfo;
        func_239136_a_(arg0: BlockPos, arg1: number): void;
        func_217427_b(arg0: number, arg1: number, arg2: number): void;
        func_225521_a_(arg0: BlockPos, arg1: boolean, arg2: Internal.Entity): boolean;
        func_175707_a(arg0: BlockPos, arg1: BlockPos): boolean;
        func_217344_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        func_226669_j_(arg0: Internal.Entity): boolean;
        func_96443_a(arg0: Internal.Scoreboard): void;
        func_217348_a(arg0: number, arg1: number, arg2: Internal.ChunkStatus_): Internal.IChunk;
        func_226658_a_(arg0: Internal.LightType_, arg1: BlockPos): number;
        func_234939_c_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_217411_a(arg0: number, arg1: Internal.Entity): void;
        func_195597_b(arg0: BlockPos, arg1: Internal.BlockState): void;
        func_217374_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: Internal.AxisAlignedBB): Internal.List<T_>;
        func_242403_h(arg0: BlockPos): number;
        func_184156_a(arg0: BlockPos, arg1: Internal.SoundEvent_, arg2: Internal.SoundCategory_, arg3: number, arg4: number, arg5: boolean): void;
        func_217408_a(arg0: number, arg1: Internal.AbstractClientPlayerEntity): void;
        func_217370_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity): Internal.PlayerEntity;
        func_175710_j(arg0: BlockPos): boolean;
        func_217359_a(arg0: Internal.EntityPredicate, arg1: number, arg2: number, arg3: number): Internal.PlayerEntity;
        func_225317_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217299_a(arg0: Internal.RayTraceContext): Internal.BlockRayTraceResult;
        func_226663_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.ISelectionContext): boolean;
        func_228326_g_(arg0: number): number;
        func_243489_v(): number;
        func_217420_a(arg0: Internal.Entity, arg1: Internal.Entity): void;
        func_230547_a_(arg0: BlockPos, arg1: Internal.Block_): void;
        func_175627_a(arg0: BlockPos, arg1: Internal.Direction_): number;
        func_175623_d(arg0: BlockPos): boolean;
        func_242415_f(arg0: number): number;
        func_217417_b(arg0: Internal.Chunk): void;
        func_72839_b(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.List<Internal.Entity>;
        func_217360_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        func_72835_b(arg0: Internal.BooleanSupplier_): void;
        func_72877_b(arg0: number): void;
        func_242414_af(): number;
        func_73022_a(): void;
        func_175659_aa(): Internal.Difficulty;
        func_241457_a_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): Internal.Stream<Internal.VoxelShape>;
        func_217416_b(): Internal.Iterable<Internal.Entity>;
        func_217409_a(arg0: Internal.Chunk): void;
        func_226665_a__(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): boolean;
        func_217371_b(arg0: Internal.UUID): Internal.PlayerEntity;
        func_217349_x(arg0: BlockPos): Internal.IChunk;
        isAreaLoaded(arg0: BlockPos, arg1: number): boolean;
        func_217379_c(arg0: number, arg1: BlockPos, arg2: number): void;
        func_234865_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): boolean;
        func_234867_d_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_239132_a_(): Internal.DimensionRenderInfo;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_217298_h(arg0: BlockPos): number;
        func_184153_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Random, arg5: boolean, arg6: Internal.BlockPos$Mutable): void;
        func_190525_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Predicate_<Internal.Entity_>): Internal.PlayerEntity;
        func_217418_a(arg0: Internal.Entity): void;
        func_226668_i_(arg0: Internal.Entity): boolean;
        func_228332_n_(): number;
        func_217361_a<T_>(arg0: Internal.List<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number): T_;
        func_228323_e_(arg0: number, arg1: number): void;
        func_226659_b_(arg0: BlockPos, arg1: number): number;
        func_72953_d(arg0: Internal.AxisAlignedBB): boolean;
        func_241851_ab(): number;
        func_228328_h_(arg0: number): Vec3;
        func_226691_t_(arg0: BlockPos): Internal.Biome;
        func_228330_j_(arg0: number): number;
        func_239140_u_(): BlockPos;
        func_217413_d(arg0: number): void;
        func_217425_f(): number;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_217372_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: number, arg3: number, arg4: number): Internal.PlayerEntity;
        func_73029_E(arg0: number, arg1: number, arg2: number): void;
        func_217376_c(arg0: Internal.Entity): boolean;
        func_242405_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): boolean;
        func_217357_a<T_>(arg0: Internal.Class<T_>, arg1: Internal.AxisAlignedBB): Internal.List<T_>;
        func_217301_I(): number;
        func_175667_e(arg0: BlockPos): boolean;
        func_239134_a_(arg0: number): void;
        func_242413_ae(): number;
        func_228327_h_(): void;
        func_226660_f_(arg0: BlockPos): boolean;
        func_212866_a_(arg0: number, arg1: number): Internal.IChunk;
        func_234938_ad_(): number;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_217362_a(arg0: Internal.Entity, arg1: number): Internal.PlayerEntity;
        func_201671_F(arg0: BlockPos): boolean;
        func_217419_d(): void;
        func_205049_d(arg0: BlockPos, arg1: number): number;
        func_205770_a(arg0: Internal.Heightmap$Type_, arg1: BlockPos): BlockPos;
        func_217366_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): Internal.PlayerEntity;
        func_72863_F(): Internal.ClientChunkProvider;
        func_205052_D(arg0: BlockPos): number;
        func_201572_C(): number;
        func_234853_a_(arg0: Internal.AxisAlignedBB): Internal.Stream<Internal.BlockState>;
        func_225526_b_(arg0: number, arg1: number, arg2: number): Internal.Biome;
        func_226664_a_(arg0: Internal.AxisAlignedBB): boolean;
        func_175655_b(arg0: BlockPos, arg1: boolean): boolean;
        asKJS(): any;
        func_217373_a(arg0: Internal.EntityPredicate, arg1: Internal.LivingEntity, arg2: Internal.AxisAlignedBB): Internal.List<Internal.PlayerEntity>;
        func_228318_a_(arg0: BlockPos, arg1: number): Vec3;
        func_242406_i(arg0: BlockPos): Internal.Optional<Internal.RegistryKey<Internal.Biome>>;
        handler$cmj000$solarEclipseSunBrightness(arg0: number, arg1: Internal.CallbackInfoReturnable<any>): void;
        func_242402_a(arg0: Internal.VoxelShape, arg1: java_.util.function_.Supplier_<Internal.VoxelShape_>): number;
        func_228321_b_(arg0: BlockPos, arg1: Internal.ColorResolver_): number;
        func_225318_b<T_>(arg0: Internal.Class<T_>, arg1: Internal.EntityPredicate, arg2: Internal.LivingEntity, arg3: number, arg4: number, arg5: number, arg6: Internal.AxisAlignedBB): T_;
        getBiomeSeed(): number;
        func_217358_a(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        func_217369_A(): Internal.List<Internal.AbstractClientPlayerEntity>;
        get biomeSeed(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ClientPlayNetHandler, arg1: Internal.ClientWorld$ClientWorldInfo, arg2: Internal.RegistryKey<Internal.World>, arg3: Internal.DimensionType, arg4: number, arg5: java_.util.function_.Supplier<Internal.IProfiler>, arg6: Internal.WorldRenderer, arg7: boolean, arg8: number);
    }
    type ClientWorld_ = ClientWorld;
    interface ChangeListener <T> {
        onChanged(arg0: T): void;
        (arg0: T): void;
    }
    type ChangeListener_<T> = ((arg0: T)=>void) | ChangeListener<T>;
    interface PlayerInteractionManagerKJS {
        isDestroyingBlockKJS(): boolean;
        (): boolean;
    }
    type PlayerInteractionManagerKJS_ = (()=>boolean) | PlayerInteractionManagerKJS;
    class EntityType <T> extends Internal.ForgeRegistryEntry<Internal.EntityType<any>> {
        func_200715_a(): boolean;
        func_220342_a(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT_, arg2: Internal.ITextComponent_, arg3: Internal.PlayerEntity, arg4: BlockPos, arg5: Internal.SpawnReason_, arg6: boolean, arg7: boolean): T;
        func_210760_d(): string;
        getTags(): Internal.Set<ResourceLocation>;
        func_220341_a(arg0: Internal.ITag<Internal.EntityType<any>>): boolean;
        static func_200717_a(arg0: number, arg1: Internal.World): Internal.Entity;
        static func_200718_a(arg0: Internal.EntityType_<any>): ResourceLocation;
        func_225437_d(): boolean;
        func_220333_h(): number;
        func_220338_c(): boolean;
        func_233602_m_(): number;
        func_212546_e(): Internal.ITextComponent;
        static func_220335_a(arg0: Internal.CompoundNBT_, arg1: Internal.World, arg2: Internal.Function_<Internal.Entity_, Internal.Entity_>): Internal.Entity;
        func_220334_j(): Internal.EntitySize;
        func_220332_l(): number;
        func_220339_d(): Internal.EntityClassification;
        static func_208048_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: Internal.Entity, arg3: Internal.CompoundNBT_): void;
        func_200720_b(): boolean;
        func_200721_a(arg0: Internal.World): T;
        func_220331_a(arg0: Internal.ServerWorld, arg1: Internal.ItemStack, arg2: Internal.PlayerEntity, arg3: BlockPos, arg4: Internal.SpawnReason_, arg5: boolean, arg6: boolean): Internal.Entity;
        setRegistryName(arg0: ResourceLocation_): any;
        static func_220330_a(arg0: Internal.CompoundNBT_, arg1: Internal.World): Internal.Optional<Internal.Entity>;
        func_233597_a_(arg0: Internal.BlockState): boolean;
        func_220344_i(): number;
        func_220328_a(arg0: number, arg1: number, arg2: number): Internal.AxisAlignedBB;
        func_220348_g(): ResourceLocation;
        static func_220327_a(arg0: string): Internal.Optional<Internal.EntityType<any>>;
        static func_220347_a(arg0: Internal.CompoundNBT_): Internal.Optional<Internal.EntityType<any>>;
        customClientSpawn(arg0: Internal.FMLPlayMessages$SpawnEntity, arg1: Internal.World): T;
        func_220349_b(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT_, arg2: Internal.ITextComponent_, arg3: Internal.PlayerEntity, arg4: BlockPos, arg5: Internal.SpawnReason_, arg6: boolean, arg7: boolean): T;
        func_220340_m(): boolean;
        static readonly field_200795_i: Internal.EntityType<Internal.ChickenEntity>;
        static readonly field_200768_H: Internal.EntityType<Internal.LeashKnotEntity>;
        static readonly field_200723_aB: Internal.EntityType<Internal.WitherSkullEntity>;
        static readonly field_220356_B: Internal.EntityType<Internal.FoxEntity>;
        static readonly field_200799_m: Internal.EntityType<Internal.DragonFireballEntity>;
        static readonly field_220351_aK: Internal.EntityType<Internal.WanderingTraderEntity>;
        static readonly field_220360_g: Internal.EntityType<Internal.CatEntity>;
        static readonly field_200783_W: Internal.EntityType<Internal.ParrotEntity>;
        static readonly field_200737_ac: Internal.EntityType<Internal.SheepEntity>;
        static readonly field_200743_ai: Internal.EntityType<Internal.SlimeEntity>;
        static readonly field_200754_at: Internal.EntityType<Internal.PotionEntity>;
        static readonly field_203779_Z: Internal.EntityType<Internal.PufferfishEntity>;
        static readonly field_200791_e: Internal.EntityType<Internal.BatEntity>;
        static readonly field_200806_t: Internal.EntityType<Internal.EvokerEntity>;
        static readonly field_200764_D: Internal.EntityType<Internal.IllusionerEntity>;
        static readonly field_226289_e_: Internal.EntityType<Internal.BeeEntity>;
        static readonly field_200772_L: Internal.EntityType<Internal.MinecartEntity>;
        static readonly field_200726_aE: Internal.EntityType<Internal.ZombieHorseEntity>;
        static readonly field_200802_p: Internal.EntityType<Internal.EnderDragonEntity>;
        static readonly field_200776_P: Internal.EntityType<Internal.HopperMinecartEntity>;
        static readonly field_200748_an: Internal.EntityType<Internal.SpiderEntity>;
        static readonly field_200740_af: Internal.EntityType<Internal.SilverfishEntity>;
        static readonly field_200751_aq: Internal.EntityType<Internal.EggEntity>;
        static readonly field_200810_x: Internal.EntityType<Internal.FireworkRocketEntity>;
        static readonly field_200788_b: Internal.EntityType<Internal.AreaEffectCloudEntity>;
        static readonly field_200729_aH: Internal.EntityType<Internal.PlayerEntity>;
        static readonly field_200796_j: Internal.EntityType<Internal.CowEntity>;
        static readonly field_220354_ax: Internal.EntityType<Internal.TraderLlamaEntity>;
        static readonly field_200769_I: Internal.EntityType<Internal.LlamaEntity>;
        static readonly field_200780_T: Internal.EntityType<Internal.MooshroomEntity>;
        static readonly field_200759_ay: Internal.EntityType<Internal.WitchEntity>;
        static readonly field_200749_ao: Internal.EntityType<Internal.SquidEntity>;
        static readonly field_200784_X: Internal.EntityType<Internal.PigEntity>;
        static readonly field_200741_ag: Internal.EntityType<Internal.SkeletonEntity>;
        static readonly field_200735_aa: Internal.EntityType<Internal.TNTEntity>;
        static readonly field_200807_u: Internal.EntityType<Internal.ExperienceOrbEntity>;
        static readonly field_203778_ae: Internal.EntityType<Internal.SalmonEntity>;
        static readonly field_200752_ar: Internal.EntityType<Internal.EnderPearlEntity>;
        static readonly field_200761_A: Internal.EntityType<Internal.GuardianEntity>;
        static readonly field_203099_aq: Internal.EntityType<Internal.TurtleEntity>;
        static readonly field_200792_f: Internal.EntityType<Internal.BlazeEntity>;
        static readonly field_233588_G_: Internal.EntityType<Internal.HoglinEntity>;
        static readonly field_200803_q: Internal.EntityType<Internal.EndermanEntity>;
        static readonly field_200765_E: Internal.EntityType<Internal.ItemEntity>;
        static readonly field_200773_M: Internal.EntityType<Internal.ChestMinecartEntity>;
        static readonly field_200724_aC: Internal.EntityType<Internal.WolfEntity>;
        static readonly field_200777_Q: Internal.EntityType<Internal.SpawnerMinecartEntity>;
        static readonly field_200746_al: Internal.EntityType<Internal.SnowballEntity>;
        field_220359_bi: Internal.EntitySize;
        static readonly field_205137_n: Internal.EntityType<Internal.DolphinEntity>;
        static readonly field_200757_aw: Internal.EntityType<Internal.IronGolemEntity>;
        static readonly field_200811_y: Internal.EntityType<Internal.GhastEntity>;
        static readonly field_200789_c: Internal.EntityType<Internal.ArmorStandEntity>;
        static readonly field_200760_az: Internal.EntityType<Internal.WitherEntity>;
        static readonly field_200766_F: Internal.EntityType<Internal.ItemFrameEntity>;
        static readonly field_200727_aF: Internal.EntityType<Internal.ZombieVillagerEntity>;
        static readonly field_200797_k: Internal.EntityType<Internal.CreeperEntity>;
        static readonly field_200781_U: Internal.EntityType<Internal.OcelotEntity>;
        static readonly field_204262_at: Internal.EntityType<Internal.TropicalFishEntity>;
        static readonly field_200747_am: Internal.EntityType<Internal.SpectralArrowEntity>;
        static readonly field_242287_aj: Internal.EntityType<Internal.PiglinBruteEntity>;
        static readonly field_200750_ap: Internal.EntityType<Internal.StrayEntity>;
        static readonly field_200758_ax: Internal.EntityType<Internal.VindicatorEntity>;
        static readonly field_200808_v: Internal.EntityType<Internal.EyeOfEnderEntity>;
        static readonly field_200762_B: Internal.EntityType<Internal.HorseEntity>;
        static readonly field_200793_g: Internal.EntityType<Internal.BoatEntity>;
        static readonly field_200804_r: Internal.EntityType<Internal.EndermiteEntity>;
        static readonly field_200730_aI: Internal.EntityType<Internal.FishingBobberEntity>;
        static readonly field_233589_aE_: Internal.EntityType<Internal.StriderEntity>;
        static readonly field_200774_N: Internal.EntityType<Internal.CommandBlockMinecartEntity>;
        static readonly field_220352_aU: Internal.EntityType<Internal.RavagerEntity>;
        static readonly field_200800_n: Internal.EntityType<Internal.ElderGuardianEntity>;
        static readonly field_200722_aA: Internal.EntityType<Internal.WitherSkeletonEntity>;
        static readonly field_200778_R: Internal.EntityType<Internal.TNTMinecartEntity>;
        static readonly field_203097_aH: Internal.EntityType<Internal.PhantomEntity>;
        static readonly field_200738_ad: Internal.EntityType<Internal.ShulkerEntity>;
        static readonly field_200786_Z: Internal.EntityType<Internal.PolarBearEntity>;
        static readonly field_200744_aj: Internal.EntityType<Internal.SmallFireballEntity>;
        static readonly field_200755_au: Internal.EntityType<Internal.VexEntity>;
        static readonly field_200812_z: Internal.EntityType<Internal.GiantEntity>;
        static readonly field_203780_j: Internal.EntityType<Internal.CodEntity>;
        static readonly field_233592_ba_: Internal.EntityType<Internal.ZombifiedPiglinEntity>;
        static readonly field_200770_J: Internal.EntityType<Internal.LlamaSpitEntity>;
        static readonly field_200725_aD: Internal.EntityType<Internal.ZombieEntity>;
        static readonly field_200767_G: Internal.EntityType<Internal.FireballEntity>;
        static readonly field_200798_l: Internal.EntityType<Internal.DonkeyEntity>;
        static readonly field_200782_V: Internal.EntityType<Internal.PaintingEntity>;
        static readonly field_200745_ak: Internal.EntityType<Internal.SnowGolemEntity>;
        static readonly field_200739_ae: Internal.EntityType<Internal.ShulkerBulletEntity>;
        static readonly field_200809_w: Internal.EntityType<Internal.FallingBlockEntity>;
        static readonly field_200779_S: Internal.EntityType<Internal.MuleEntity>;
        static readonly field_233591_ai_: Internal.EntityType<Internal.PiglinEntity>;
        static readonly field_203098_aL: Internal.EntityType<Internal.TridentEntity>;
        static readonly field_200790_d: Internal.EntityType<Internal.ArrowEntity>;
        static readonly field_220353_aa: Internal.EntityType<Internal.PandaEntity>;
        static readonly field_233590_aW_: Internal.EntityType<Internal.ZoglinEntity>;
        static readonly field_200756_av: Internal.EntityType<Internal.VillagerEntity>;
        static readonly field_200805_s: Internal.EntityType<Internal.EvokerFangsEntity>;
        static readonly field_200763_C: Internal.EntityType<Internal.HuskEntity>;
        static readonly field_204724_o: Internal.EntityType<Internal.DrownedEntity>;
        static readonly field_200794_h: Internal.EntityType<Internal.CaveSpiderEntity>;
        static readonly field_200728_aG: Internal.EntityType<Internal.LightningBoltEntity>;
        static readonly field_200801_o: Internal.EntityType<Internal.EnderCrystalEntity>;
        static readonly field_200771_K: Internal.EntityType<Internal.MagmaCubeEntity>;
        static readonly field_200775_O: Internal.EntityType<Internal.FurnaceMinecartEntity>;
        static readonly field_220350_aJ: Internal.EntityType<Internal.PillagerEntity>;
        static readonly field_200742_ah: Internal.EntityType<Internal.SkeletonHorseEntity>;
        static readonly field_200736_ab: Internal.EntityType<Internal.RabbitEntity>;
        static readonly field_200753_as: Internal.EntityType<Internal.ExperienceBottleEntity>;
        get tags(): Internal.Set<ResourceLocation>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: Internal.EntityClassification, arg2: boolean, arg3: boolean, arg4: boolean, arg5: boolean, arg6: Internal.ImmutableSet<Internal.Block>, arg7: Internal.EntitySize, arg8: number, arg9: number, arg10: Internal.Predicate<Internal.EntityType<any>>, arg11: Internal.ToIntFunction<Internal.EntityType<any>>, arg12: Internal.ToIntFunction<Internal.EntityType<any>>, arg13: Internal.BiFunction<Internal.FMLPlayMessages$SpawnEntity, Internal.World, T>);
        constructor(arg0: any, arg1: Internal.EntityClassification, arg2: boolean, arg3: boolean, arg4: boolean, arg5: boolean, arg6: Internal.ImmutableSet<Internal.Block>, arg7: Internal.EntitySize, arg8: number, arg9: number);
    }
    type EntityType_<T> = Registry.minecraft.entity_type | EntityType<T>;
    interface IWeakConstellation extends Internal.IConstellation {
        getInfoMantleEffect(): Internal.ITextComponent;
        getConstellationEffect(): Internal.ConstellationEffectProvider;
        getMantleEffect(): Internal.MantleEffect;
        getInfoCorruptedRitualEffect(): Internal.ITextComponent;
        getInfoRitualEffect(): Internal.ITextComponent;
    }
    type IWeakConstellation_ = IWeakConstellation;
    interface ReadWriteLock {
        writeLock(): Internal.Lock;
        readLock(): Internal.Lock;
    }
    type ReadWriteLock_ = ReadWriteLock;
    class PlaySoundEvent extends net.minecraftforge.client.event.sound.SoundEvent {
        getName(): string;
        getResultSound(): Internal.ISound;
        setResultSound(arg0: Internal.ISound): void;
        getSound(): Internal.ISound;
        get resultSound(): Internal.ISound;
        get sound(): Internal.ISound;
        get name(): string;
        set resultSound(arg0: Internal.ISound);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.SoundEngine, arg1: Internal.ISound);
    }
    type PlaySoundEvent_ = PlaySoundEvent;
    interface SequencedSet <E> extends Internal.SequencedCollection<E>, Internal.Set<E> {
        reversed(): Internal.SequencedSet<E>;
        reversed(): Internal.SequencedCollection<any>;
        (): Internal.SequencedSet<E>;
    }
    type SequencedSet_<E> = (()=>Internal.SequencedSet<E>) | SequencedSet<E>;
    interface ISpectatorMenuRecipient {
        func_175257_a(arg0: Internal.SpectatorMenu): void;
        (arg0: Internal.SpectatorMenu): void;
    }
    type ISpectatorMenuRecipient_ = ((arg0: Internal.SpectatorMenu)=>void) | ISpectatorMenuRecipient;
    interface BlockChangeSet$StateChange {
        getOldState(): Internal.BlockState;
        getRelativePosition(): BlockPos;
        getNewState(): Internal.BlockState;
        getAbsolutePosition(): BlockPos;
    }
    type BlockChangeSet$StateChange_ = BlockChangeSet$StateChange;
    class NameMap$Builder <T> extends Document.Object {
        baseNameKey(key: string): Internal.NameMap$Builder<T>;
        color(p: Internal.Function_<T, Internal.Color4I_>): Internal.NameMap$Builder<T>;
        nameKey(p: Internal.Function_<T, string>): Internal.NameMap$Builder<T>;
        icon(p: Internal.Function_<T, Internal.Icon_>): Internal.NameMap$Builder<T>;
        name(p: Internal.Function_<T, Internal.ITextComponent_>): Internal.NameMap$Builder<T>;
        create(): Internal.NameMap<T>;
        id(p: Internal.Function_<T, string>): Internal.NameMap$Builder<T>;
    }
    type NameMap$Builder_<T> = NameMap$Builder<T>;
    class RenderState$LineState extends Internal.RenderState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.OptionalDouble);
    }
    type RenderState$LineState_ = RenderState$LineState;
    class VillagerEntity extends Internal.AbstractVillagerEntity implements Internal.IReputationTracking, Internal.IVillagerDataHolder, Internal.VillagerEntityAccessor {
        shouldRiderSit(): boolean;
        func_213707_a(arg0: Internal.PlayerEntity, arg1: Internal.ITextComponent_, arg2: number): void;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213761_t(arg0: number): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_175557_cr(): boolean;
        func_213768_b(arg0: Internal.MerchantOffers): void;
        func_223716_a(arg0: Internal.INBT): void;
        func_175555_cq(): boolean;
        func_213766_ei(): void;
        func_213770_a(arg0: Internal.ServerWorld): void;
        static func_234551_eU_(): Internal.AttributeModifierMap$MutableAttribute;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_223346_ep(): void;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_213753_a(arg0: Internal.VillagerData): void;
        func_241840_a(arg0: Internal.ServerWorld, arg1: Internal.AgeableEntity): Internal.VillagerEntity;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_223107_f(arg0: Internal.PlayerEntity): number;
        func_223722_es(): Internal.GossipManager;
        hasCooldown(): boolean;
        handler$bjm000$getPlayerReputation(arg0: Internal.PlayerEntity, arg1: Internal.CallbackInfoReturnable<any>): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_213375_cj(): Internal.Brain<Internal.VillagerEntity>;
        getEntity(): Internal.Entity;
        func_175556_cs(): boolean;
        func_242368_a(arg0: Internal.ServerWorld, arg1: Internal.VillagerEntity, arg2: number): void;
        asKJS(): any;
        func_242367_a(arg0: Internal.ServerWorld, arg1: number, arg2: number): void;
        func_213739_a(arg0: Internal.IReputationType, arg1: Internal.Entity): void;
        func_223350_a(arg0: number): boolean;
        func_213767_ej(): void;
        func_234552_eW_(): boolean;
        canRiderInteract(): boolean;
        callUpdateSpecialPrices(arg0: Internal.PlayerEntity): void;
        func_213742_a(arg0: Internal.MemoryModuleType_<Internal.GlobalPos_>): void;
        func_213700_eh(): Internal.VillagerData;
        func_223721_ek(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        getClassification(arg0: boolean): Internal.EntityClassification;
        static readonly field_213774_bB: {};
        static readonly field_213788_bA: {};
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.VillagerEntity>, arg1: Internal.World);
        constructor(arg0: Internal.EntityType<Internal.VillagerEntity>, arg1: Internal.World, arg2: Internal.VillagerType);
    }
    type VillagerEntity_ = VillagerEntity;
    abstract class MarketRegistryReloadEvent extends net.minecraftforge.eventbus.api.Event {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MarketRegistryReloadEvent_ = MarketRegistryReloadEvent;
    interface MessageSender {
        setStatusMessage(message: Internal.ITextComponent_): void;
        getName(): Internal.Text;
        getDisplayName(): Internal.Text;
        tell(arg0: Internal.ITextComponent_): void;
        runCommand(arg0: string): number;
        runCommandSilent(command: string): number;
    }
    type MessageSender_ = MessageSender;
    class DynamicRegistries$Impl extends Internal.DynamicRegistries {
        func_230521_a_<E_>(arg0: Internal.RegistryKey<Internal.Registry<E_>>): Internal.Optional<Internal.MutableRegistry<E_>>;
        static readonly field_243626_a: Internal.Codec<Internal.DynamicRegistries$Impl>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type DynamicRegistries$Impl_ = DynamicRegistries$Impl;
    interface GenericFutureListener <F> extends Internal.EventListener {
        operationComplete(arg0: F): void;
        (arg0: F): void;
    }
    type GenericFutureListener_<F> = ((arg0: F)=>void) | GenericFutureListener<F>;
    class FMLModIdMappingEvent extends Internal.ModLifecycleEvent {
        getRegistries(): Internal.ImmutableSet<ResourceLocation>;
        getRemaps(arg0: ResourceLocation_): Internal.ImmutableList<Internal.FMLModIdMappingEvent$ModRemapping>;
        readonly isFrozen: boolean;
        get registries(): Internal.ImmutableSet<ResourceLocation>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Map<ResourceLocation, Internal.Map<ResourceLocation, number[]>>, arg1: boolean);
    }
    type FMLModIdMappingEvent_ = FMLModIdMappingEvent;
    class LivingEntityJS extends Internal.EntityJS {
        getRevengeTimer(): number;
        getLastAttackedEntity(): Internal.LivingEntityJS;
        getMaxHealth(): number;
        getAbsorptionAmount(): number;
        getFeetArmorItem(): Internal.ItemStackJS;
        setMainHandItem(item: Internal.ItemStackJS_): void;
        getHeldItem(hand: Hand_): Internal.ItemStackJS;
        getRevengeTarget(): Internal.LivingEntityJS;
        getOffHandItem(): Internal.ItemStackJS;
        getEquipment(slot: EquipmentSlot_): Internal.ItemStackJS;
        damageHeldItem(hand: Hand_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStackJS_>): void;
        damageHeldItem(hand: Hand_, amount: number): void;
        damageHeldItem(): void;
        getIdleTime(): number;
        getMovementSpeed(): number;
        getChestArmorItem(): Internal.ItemStackJS;
        isUndead(): boolean;
        isOnLadder(): boolean;
        heal(hp: number): void;
        setRevengeTarget(target: Internal.LivingEntityJS): void;
        setChestArmorItem(item: Internal.ItemStackJS_): void;
        setMovementSpeed(speed: number): void;
        getMainHandItem(): Internal.ItemStackJS;
        setLegsArmorItem(item: Internal.ItemStackJS_): void;
        getHealth(): number;
        isChild(): boolean;
        setHealth(hp: number): void;
        setFeetArmorItem(item: Internal.ItemStackJS_): void;
        setStatusMessage(message: Internal.ITextComponent_): void;
        setMaxHealth(hp: number): void;
        getLastDamageSource(): Internal.DamageSourceJS;
        isElytraFlying(): boolean;
        getReachDistance(): number;
        setEquipment(slot: EquipmentSlot_, item: Internal.ItemStackJS_): void;
        isSleeping(): boolean;
        getLegsArmorItem(): Internal.ItemStackJS;
        getPotionEffects(): Internal.EntityPotionEffectsJS;
        swingArm(hand: Hand_): void;
        getAttackingEntity(): Internal.LivingEntityJS;
        rayTrace(): Internal.RayTraceResultJS;
        isHoldingInAnyHand(ingredient: any): boolean;
        setHeadArmorItem(item: Internal.ItemStackJS_): void;
        damageEquipment(slot: EquipmentSlot_): void;
        damageEquipment(slot: EquipmentSlot_, amount: number): void;
        damageEquipment(slot: EquipmentSlot_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStackJS_>): void;
        canEntityBeSeen(entity: Internal.EntityJS): boolean;
        setAbsorptionAmount(amount: number): void;
        getHeadArmorItem(): Internal.ItemStackJS;
        getLastAttackedEntityTime(): number;
        setOffHandItem(item: Internal.ItemStackJS_): void;
        setHeldItem(hand: Hand_, item: Internal.ItemStackJS_): void;
        readonly minecraftLivingEntity: Internal.LivingEntity;
        get absorptionAmount(): number;
        get revengeTimer(): number;
        get onLadder(): boolean;
        get mainHandItem(): Internal.ItemStackJS;
        get feetArmorItem(): Internal.ItemStackJS;
        get health(): number;
        get offHandItem(): Internal.ItemStackJS;
        get elytraFlying(): boolean;
        get lastAttackedEntityTime(): number;
        get chestArmorItem(): Internal.ItemStackJS;
        get movementSpeed(): number;
        get idleTime(): number;
        get sleeping(): boolean;
        get attackingEntity(): Internal.LivingEntityJS;
        get legsArmorItem(): Internal.ItemStackJS;
        get revengeTarget(): Internal.LivingEntityJS;
        get undead(): boolean;
        get lastAttackedEntity(): Internal.LivingEntityJS;
        get maxHealth(): number;
        get headArmorItem(): Internal.ItemStackJS;
        get lastDamageSource(): Internal.DamageSourceJS;
        get reachDistance(): number;
        get child(): boolean;
        get potionEffects(): Internal.EntityPotionEffectsJS;
        set absorptionAmount(amount: number);
        set legsArmorItem(item: Internal.ItemStackJS_);
        set revengeTarget(target: Internal.LivingEntityJS);
        set mainHandItem(item: Internal.ItemStackJS_);
        set feetArmorItem(item: Internal.ItemStackJS_);
        set health(hp: number);
        set offHandItem(item: Internal.ItemStackJS_);
        set maxHealth(hp: number);
        set headArmorItem(item: Internal.ItemStackJS_);
        set chestArmorItem(item: Internal.ItemStackJS_);
        set movementSpeed(speed: number);
        set statusMessage(message: Internal.ITextComponent_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(w: Internal.WorldJS, e: Internal.LivingEntity);
    }
    type LivingEntityJS_ = LivingEntityJS;
    interface IntIterator extends Internal.PrimitiveIterator$OfInt {
        next(): any;
        next(): number;
        skip(arg0: number): number;
        nextInt(): number;
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
        (): number;
    }
    type IntIterator_ = (()=>number) | IntIterator;
    class CPlayerDiggingPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_180762_c(): Internal.CPlayerDiggingPacket$Action;
        func_179715_a(): BlockPos;
        func_179714_b(): Internal.Direction;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.CPlayerDiggingPacket$Action, arg1: BlockPos, arg2: Internal.Direction);
    }
    type CPlayerDiggingPacket_ = CPlayerDiggingPacket;
    class TeamPropertyValue <T> extends Document.Object {
        copy(): Internal.TeamPropertyValue<T>;
        value: T;
        readonly key: Internal.TeamProperty<T>;
        consumer: Internal.Consumer<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TeamProperty<T>, arg1: T);
        constructor(arg0: Internal.TeamProperty<T>);
    }
    type TeamPropertyValue_<T> = TeamPropertyValue<T>;
    class TickEvent extends net.minecraftforge.eventbus.api.Event {
        readonly phase: Internal.TickEvent$Phase;
        readonly side: Internal.LogicalSide;
        readonly type: Internal.TickEvent$Type;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TickEvent$Type, arg1: Internal.LogicalSide, arg2: Internal.TickEvent$Phase);
        constructor();
    }
    type TickEvent_ = TickEvent;
    interface ServerPlayNetHandlerAccess extends Internal.PlayerUtils$ConnectionAccess {
        setClientIsFloating(arg0: boolean): void;
        setAboveGroundTickCount(arg0: number): void;
    }
    type ServerPlayNetHandlerAccess_ = ServerPlayNetHandlerAccess;
    interface Symbol {
    }
    type Symbol_ = Symbol;
    interface SequencedMap <K, V> extends Internal.Map<K, V> {
        pollFirstEntry(): Internal.Map$Entry<K, V>;
        putLast(arg0: K, arg1: V): V;
        lastEntry(): Internal.Map$Entry<K, V>;
        sequencedKeySet(): Internal.SequencedSet<K>;
        firstEntry(): Internal.Map$Entry<K, V>;
        putFirst(arg0: K, arg1: V): V;
        sequencedEntrySet(): Internal.SequencedSet<Internal.Map$Entry<K, V>>;
        sequencedValues(): Internal.SequencedCollection<V>;
        reversed(): Internal.SequencedMap<K, V>;
        pollLastEntry(): Internal.Map$Entry<K, V>;
        (): Internal.SequencedMap<K, V>;
    }
    type SequencedMap_<K, V> = (()=>Internal.SequencedMap<K, V>) | SequencedMap<K, V>;
    abstract class ThrowableEntity extends Internal.ProjectileEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type ThrowableEntity_ = ThrowableEntity;
    interface IForgeFluid {
        getAttributes(): Internal.FluidAttributes;
        getExplosionResistance(arg0: Internal.FluidState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): number;
        getFluid(): Internal.Fluid;
        getTags(): Internal.Set<ResourceLocation>;
        isEntityInside(arg0: Internal.FluidState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity, arg4: number, arg5: Internal.Tag<Internal.Fluid>, arg6: boolean): boolean;
        isAABBInsideMaterial(arg0: Internal.FluidState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.AxisAlignedBB, arg4: Internal.Material): boolean;
        isAABBInsideLiquid(arg0: Internal.FluidState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.AxisAlignedBB): boolean;
    }
    type IForgeFluid_ = IForgeFluid;
    abstract class MenuComponent extends Document.Object implements Internal.Serializable {
        setName(arg0: string): void;
        getParent(): Internal.MenuContainer;
        dispatchEvent(arg0: Internal.AWTEvent): void;
        getName(): string;
        removeNotify(): void;
        getFont(): Internal.Font;
        setFont(arg0: Internal.Font): void;
        getAccessibleContext(): Internal.AccessibleContext;
        postEvent(arg0: java_.awt.Event): boolean;
        get accessibleContext(): Internal.AccessibleContext;
        get parent(): Internal.MenuContainer;
        get name(): string;
        get font(): Internal.Font;
        set name(arg0: string);
        set font(arg0: Internal.Font);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MenuComponent_ = MenuComponent;
    class CableConfig extends Internal.EnergyConfig {
        getGeneration(arg0: Internal.Tier_): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type CableConfig_ = CableConfig;
    interface ObjectBidirectionalIterator <K> extends Internal.ObjectIterator<K>, Internal.BidirectionalIterator<K> {
        back(arg0: number): number;
        skip(arg0: number): number;
    }
    type ObjectBidirectionalIterator_<K> = ObjectBidirectionalIterator<K>;
    class ZoneOffset extends Internal.ZoneId implements Internal.TemporalAccessor, Internal.TemporalAdjuster, Internal.Comparable<Internal.ZoneOffset>, Internal.Serializable {
        getTotalSeconds(): number;
        static ofHoursMinutes(arg0: number, arg1: number): Internal.ZoneOffset;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        isSupported(arg0: Internal.TemporalField): boolean;
        compareTo(arg0: Internal.ZoneOffset): number;
        compareTo(arg0: any): number;
        getLong(arg0: Internal.TemporalField): number;
        static ofHours(arg0: number): Internal.ZoneOffset;
        static of(arg0: string): Internal.ZoneOffset;
        get(arg0: Internal.TemporalField): number;
        static from(arg0: Internal.TemporalAccessor): Internal.ZoneOffset;
        static ofHoursMinutesSeconds(arg0: number, arg1: number, arg2: number): Internal.ZoneOffset;
        static ofTotalSeconds(arg0: number): Internal.ZoneOffset;
        static readonly MIN: Internal.ZoneOffset;
        static readonly UTC: Internal.ZoneOffset;
        static readonly MAX: Internal.ZoneOffset;
        get totalSeconds(): number;
    }
    type ZoneOffset_ = ZoneOffset;
    abstract class EntityRenderer <T> extends Document.Object implements Internal.EntityLightSampler<any> {
        bridge$getBlockLight(entity: Internal.Entity, pos: BlockPos): number;
        func_76983_a(): Internal.FontRenderer;
        func_225627_b_(arg0: T, arg1: number): Vec3;
        func_229100_c_(arg0: T, arg1: number): number;
        bridge$getSkyLight(entity: Internal.Entity, pos: BlockPos): number;
        func_225626_a_(arg0: T, arg1: Internal.ClippingHelper, arg2: number, arg3: number, arg4: number): boolean;
        func_110775_a(arg0: T): ResourceLocation;
        func_225623_a_(arg0: T, arg1: number, arg2: number, arg3: Internal.MatrixStack, arg4: Internal.IRenderTypeBuffer_, arg5: number): void;
        func_177068_d(): Internal.EntityRendererManager;
        field_76989_e: number;
    }
    type EntityRenderer_<T> = EntityRenderer<T>;
    abstract class PosRuleTest extends Document.Object {
        func_230385_a_(arg0: BlockPos, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Random): boolean;
        static readonly field_237102_c_: Internal.Codec<Internal.PosRuleTest>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PosRuleTest_ = PosRuleTest;
    class SceneBuilderJS$SpecialInstructionsJS extends Document.Object implements Internal.ISceneBuilderJS$ISpecialInstructionsJS {
        birbOnTurntable(arg0: BlockPos): Internal.ElementLink<ParrotElement>;
        moveParrot(arg0: Internal.ElementLink<ParrotElement>, arg1: Vec3, arg2: number): void;
        changeBirbPose(arg0: Internal.ElementLink<ParrotElement>, arg1: java_.util.function_.Supplier_<Internal.ParrotElement$ParrotPose_>): void;
        createBirb(arg0: Vec3, arg1: java_.util.function_.Supplier_<Internal.ParrotElement$ParrotPose_>): Internal.ElementLink<ParrotElement>;
        birbOnSpinnyShaft(arg0: BlockPos): Internal.ElementLink<ParrotElement>;
        createCart(arg0: Vec3, arg1: number, arg2: Internal.MinecartElement$MinecartConstructor_): Internal.ElementLink<Internal.MinecartElement>;
        rotateParrot(arg0: Internal.ElementLink<ParrotElement>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        getInternal(): Internal.SceneBuilder$SpecialInstructions;
        movePointOfInterest(arg0: Vec3): void;
        rotateCart(arg0: Internal.ElementLink<Internal.MinecartElement>, arg1: number, arg2: number): void;
        moveCart(arg0: Internal.ElementLink<Internal.MinecartElement>, arg1: Vec3, arg2: number): void;
        hideElement<T_>(arg0: Internal.ElementLink<T_>, arg1: Internal.Direction_): void;
        get internal(): Internal.SceneBuilder$SpecialInstructions;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SceneBuilder$SpecialInstructions);
    }
    type SceneBuilderJS$SpecialInstructionsJS_ = SceneBuilderJS$SpecialInstructionsJS;
    class ServerJS extends Document.Object implements Internal.MessageSender, Internal.WithAttachedData {
        getAdvancement(id: ResourceLocation_): Internal.AdvancementJS;
        getPlayer(uuid: Internal.UUID): Internal.ServerPlayerJS;
        getPlayer(name: string): Internal.ServerPlayerJS;
        getPlayer(minecraftPlayer: Internal.PlayerEntity): Internal.ServerPlayerJS;
        getWorld(dimension: string): Internal.WorldJS;
        getWorld(minecraftLevel: Internal.World): Internal.WorldJS;
        getName(): Internal.Text;
        updateWorldList(): void;
        release(): void;
        tell(message: Internal.ITextComponent_): void;
        getHardcore(): boolean;
        getMotd(): string;
        getOverworld(): Internal.ServerWorldJS;
        runCommandSilent(command: string): number;
        scheduleInTicks(ticks: number, data: any, event: Internal.IScheduledEventCallback_): Internal.ScheduledEvent;
        scheduleInTicks(ticks: number, event: Internal.IScheduledEventCallback_): Internal.ScheduledEvent;
        isRunning(): boolean;
        setMotd(text: Internal.ITextComponent_): void;
        runCommand(command: string): number;
        isSinglePlayer(): boolean;
        getPlayers(): Internal.EntityArrayList;
        getData(): Internal.AttachedData;
        setStatusMessage(message: Internal.ITextComponent_): void;
        sendDataToAll(channel: string, data: Internal.CompoundNBT_): void;
        isDedicated(): boolean;
        getWorlds(): Internal.List<Internal.ServerWorldJS>;
        getLevel(minecraftLevel: Internal.World): Internal.WorldJS;
        getLevel(dimension: string): Internal.WorldJS;
        schedule(timer: number, data: any, event: Internal.IScheduledEventCallback_): Internal.ScheduledEvent;
        schedule(timer: number, event: Internal.IScheduledEventCallback_): Internal.ScheduledEvent;
        getMinecraftServer(): Internal.MinecraftServer;
        stop(): void;
        getDisplayName(): Internal.Text;
        getEntities(filter: string): Internal.EntityArrayList;
        getEntities(): Internal.EntityArrayList;
        readonly playerMap: Internal.Map<Internal.UUID, Internal.ServerPlayerDataJS>;
        readonly serverScriptManager: Internal.ServerScriptManager;
        static instance: Internal.ServerJS;
        readonly worlds: Internal.List<Internal.ServerWorldJS>;
        readonly persistentData: Internal.CompoundNBT;
        readonly fakePlayerMap: Internal.Map<Internal.UUID, Internal.FakeServerPlayerDataJS>;
        readonly scheduledEvents: Internal.List<Internal.ScheduledEvent>;
        readonly levelMap: Internal.Map<string, Internal.ServerWorldJS>;
        overworld: Internal.ServerWorldJS;
        readonly scheduledTickEvents: Internal.List<Internal.ScheduledEvent>;
        get running(): boolean;
        get singlePlayer(): boolean;
        get motd(): string;
        get dedicated(): boolean;
        get data(): Internal.AttachedData;
        get hardcore(): boolean;
        get entities(): Internal.EntityArrayList;
        get players(): Internal.EntityArrayList;
        get displayName(): Internal.Text;
        get name(): Internal.Text;
        get minecraftServer(): Internal.MinecraftServer;
        set statusMessage(message: Internal.ITextComponent_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(ms: Internal.MinecraftServer, m: Internal.ServerScriptManager);
    }
    type ServerJS_ = ServerJS;
    class DamageSourceJS extends Document.Object {
        getActual(): Internal.EntityJS;
        getPlayer(): Internal.PlayerJS<any>;
        getWorld(): Internal.WorldJS;
        getType(): string;
        getImmediate(): Internal.EntityJS;
        readonly source: Internal.DamageSource;
        get actual(): Internal.EntityJS;
        get world(): Internal.WorldJS;
        get immediate(): Internal.EntityJS;
        get type(): string;
        get player(): Internal.PlayerJS<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(w: Internal.WorldJS, s: Internal.DamageSource);
    }
    type DamageSourceJS_ = DamageSourceJS;
    class GeneralConfig extends Document.Object {
        readonly lens_of_ender: Internal.ForgeConfigSpec$BooleanValue;
        readonly poorUraniniteGenChance: Internal.ForgeConfigSpec$IntValue;
        readonly uraniniteGenChance: Internal.ForgeConfigSpec$IntValue;
        readonly oreGen: Internal.ForgeConfigSpec$BooleanValue;
        readonly dryIceGenChance: Internal.ForgeConfigSpec$IntValue;
        readonly coolantFluids: Internal.ForgeConfigSpec$ConfigValue<Internal.List<string>>;
        readonly heatBlocks: Internal.ForgeConfigSpec$ConfigValue<Internal.List<string>>;
        readonly binding_card_dim: Internal.ForgeConfigSpec$BooleanValue;
        readonly denseUraniniteGenChance: Internal.ForgeConfigSpec$IntValue;
        readonly player_aerial_pearl: Internal.ForgeConfigSpec$BooleanValue;
        readonly coolantFluidsAPI: Internal.ForgeConfigSpec$BooleanValue;
        readonly heatBlocksAPI: Internal.ForgeConfigSpec$BooleanValue;
        readonly fuelTicks: Internal.ForgeConfigSpec$LongValue;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type GeneralConfig_ = GeneralConfig;
    interface Temporal extends Internal.TemporalAccessor {
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        with(arg0: Internal.TemporalAdjuster_): Internal.Temporal;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
    }
    type Temporal_ = Temporal;
    interface IMinorConstellation extends Internal.IConstellation {
        affectConstellationEffect(arg0: Internal.ConstellationEffectProperties): void;
        getInfoTraitEffect(): Internal.ITextComponent;
        getShowupMoonPhases(arg0: number): Internal.List<Internal.MoonPhase>;
        (arg0: number): Internal.List<Internal.MoonPhase>;
    }
    type IMinorConstellation_ = ((arg0: number)=>Internal.List<Internal.MoonPhase>) | IMinorConstellation;
    class ConsoleJS extends Document.Object {
        printObject(o: any): void;
        printObject(o: any, tree: boolean): void;
        infof(message: any, ...args: any[]): void;
        log(message: any): void;
        errorf(message: string, ...args: any[]): void;
        setMuted(m: boolean): void;
        error(message: string, throwable: Internal.Throwable): void;
        error(message: any): void;
        error(message: string, throwable: Internal.Throwable, skip: Internal.Pattern): void;
        debugf(message: string, ...args: any[]): void;
        trace(): void;
        flush(): void;
        setWriteToFile(m: boolean): void;
        setLineNumber(b: boolean): void;
        getScriptLine(): number;
        warnf(message: string, ...args: any[]): void;
        info(message: any): void;
        group(): void;
        getMuted(): boolean;
        debug(message: any): void;
        printStackTrace(throwable: Internal.Throwable, skip: Internal.Pattern): void;
        getLogger(): Internal.Logger;
        shouldPrintDebug(): boolean;
        setDebugEnabled(m: boolean): void;
        resetFile(): void;
        warn(message: string, throwable: Internal.Throwable, skip: Internal.Pattern): void;
        warn(message: string, throwable: Internal.Throwable): void;
        warn(message: any): void;
        getDebugEnabled(): boolean;
        groupEnd(): void;
        printClass(className: string): void;
        printClass(className: string, tree: boolean): void;
        getWriteToFile(): boolean;
        static SERVER: Internal.ConsoleJS;
        static STARTUP: Internal.ConsoleJS;
        static CLIENT: Internal.ConsoleJS;
        get scriptLine(): number;
        get writeToFile(): boolean;
        get logger(): Internal.Logger;
        get debugEnabled(): boolean;
        get muted(): boolean;
        set writeToFile(m: boolean);
        set debugEnabled(m: boolean);
        set lineNumber(b: boolean);
        set muted(m: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(m: Internal.ScriptType, log: Internal.Logger);
    }
    type ConsoleJS_ = ConsoleJS;
    interface IModelTransform extends Internal.IForgeModelTransform {
        func_225615_b_(): Internal.TransformationMatrix;
        func_188049_c(): boolean;
    }
    type IModelTransform_ = IModelTransform;
    class ClocheRecipeJS extends Internal.IERecipeJS {
        render(o: any): Internal.ClocheRecipeJS;
        renderReference: Internal.ClocheRenderFunction$ClocheRenderReference;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ClocheRecipeJS_ = ClocheRecipeJS;
    interface AccessorWorldRenderer {
        getStarVBO(): Internal.VertexBuffer;
        getSkyVBO(): Internal.VertexBuffer;
        getSkyVertexFormat(): Internal.VertexFormat;
    }
    type AccessorWorldRenderer_ = AccessorWorldRenderer;
    class LookController extends Document.Object {
        func_180424_b(): boolean;
        func_220674_a(arg0: Vec3): void;
        func_180423_e(): number;
        func_180421_g(): number;
        func_180422_f(): number;
        func_75650_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        func_220679_a(arg0: number, arg1: number, arg2: number): void;
        func_75651_a(arg0: Internal.Entity, arg1: number, arg2: number): void;
        func_75649_a(): void;
        field_75657_b: number;
        field_75658_c: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MobEntity);
    }
    type LookController_ = LookController;
    class ClientPlayerNetworkEvent extends net.minecraftforge.eventbus.api.Event {
        getNetworkManager(): Internal.NetworkManager;
        getPlayer(): Internal.ClientPlayerEntity;
        getController(): Internal.PlayerController;
        get networkManager(): Internal.NetworkManager;
        get controller(): Internal.PlayerController;
        get player(): Internal.ClientPlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ClientPlayerNetworkEvent_ = ClientPlayerNetworkEvent;
    class BiomeGenerationSettingsBuilder extends Internal.BiomeGenerationSettings$Builder {
        getSurfaceBuilder(): Internal.Optional<java_.util.function_.Supplier<Internal.ConfiguredSurfaceBuilder<any>>>;
        getFeatures(arg0: DecorationGenerationStep_): Internal.List<java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>>;
        getCarvers(arg0: CarvingGenerationStep_): Internal.List<java_.util.function_.Supplier<Internal.ConfiguredCarver<any>>>;
        getStructures(): Internal.List<java_.util.function_.Supplier<Internal.StructureFeature<any, any>>>;
        get surfaceBuilder(): Internal.Optional<java_.util.function_.Supplier<Internal.ConfiguredSurfaceBuilder<any>>>;
        get structures(): Internal.List<java_.util.function_.Supplier<Internal.StructureFeature<any, any>>>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BiomeGenerationSettings);
    }
    type BiomeGenerationSettingsBuilder_ = BiomeGenerationSettingsBuilder;
    interface PlayerEntityAccess {
        botania$setCritTarget(arg0: Internal.LivingEntity): void;
        (arg0: Internal.LivingEntity): void;
    }
    type PlayerEntityAccess_ = ((arg0: Internal.LivingEntity)=>void) | PlayerEntityAccess;
    class WhitelistEntry extends Internal.UserListEntry<Internal.GameProfile> {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.GameProfile);
        constructor(arg0: Internal.JsonObject);
    }
    type WhitelistEntry_ = WhitelistEntry;
    class AdvancementBuildingEvent extends net.minecraftforge.eventbus.api.Event {
        static onBuildingAdvancement(arg0: Internal.Advancement$Builder, arg1: ResourceLocation_): void;
        getLocation(): ResourceLocation;
        getBuilder(): Internal.Advancement$Builder;
        get builder(): Internal.Advancement$Builder;
        get location(): ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AdvancementBuildingEvent_ = AdvancementBuildingEvent;
    interface RewardType$GuiProvider {
        openCreationGui(arg0: Internal.Runnable_, arg1: Internal.Quest, arg2: Internal.Consumer_<Internal.Reward_>): void;
        (arg0: Internal.Runnable, arg1: Internal.Quest, arg2: Internal.Consumer<Internal.Reward>): void;
    }
    type RewardType$GuiProvider_ = ((arg0: Internal.Runnable, arg1: Internal.Quest, arg2: Internal.Consumer<Internal.Reward>)=>void) | RewardType$GuiProvider;
    class PacketDispatcher extends Document.Object {
        sendPacket(arg0: ResourceLocation_, arg1: Internal.PacketBuffer): void;
    }
    type PacketDispatcher_ = PacketDispatcher;
    interface ProgressivePromise <V> extends Internal.Promise<V>, Internal.ProgressiveFuture<V> {
        setSuccess(arg0: V): Internal.ProgressivePromise<V>;
        setFailure(arg0: Internal.Throwable): Internal.ProgressivePromise<V>;
        removeListeners(...arg0: Internal.GenericFutureListener<Internal.Future<V>>[]): Internal.ProgressivePromise<V>;
        tryProgress(arg0: number, arg1: number): boolean;
        syncUninterruptibly(): Internal.ProgressivePromise<V>;
        setProgress(arg0: number, arg1: number): Internal.ProgressivePromise<V>;
        await(): Internal.ProgressivePromise<V>;
        awaitUninterruptibly(): Internal.ProgressivePromise<V>;
        removeListener(arg0: Internal.GenericFutureListener_<Internal.Future_<V>>): Internal.ProgressivePromise<V>;
        addListeners(...arg0: Internal.GenericFutureListener<Internal.Future<V>>[]): Internal.ProgressivePromise<V>;
        sync(): Internal.ProgressivePromise<V>;
        addListener(arg0: Internal.GenericFutureListener_<Internal.Future_<V>>): Internal.ProgressivePromise<V>;
    }
    type ProgressivePromise_<V> = ProgressivePromise<V>;
    class ConditionArrayParser extends Document.Object {
        func_234050_a_(arg0: Internal.JsonArray, arg1: string, arg2: Internal.LootParameterSet): Internal.ILootCondition[];
        func_234049_a_(): ResourceLocation;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.LootPredicateManager);
    }
    type ConditionArrayParser_ = ConditionArrayParser;
    class ItemStack$TooltipDisplayFlags extends Internal.Enum<Internal.ItemStack$TooltipDisplayFlags> {
        static valueOf(arg0: string): Internal.ItemStack$TooltipDisplayFlags;
        static values(): Internal.ItemStack$TooltipDisplayFlags[];
        func_242397_a(): number;
        static readonly DYE: Internal.ItemStack$TooltipDisplayFlags;
        static readonly CAN_DESTROY: Internal.ItemStack$TooltipDisplayFlags;
        static readonly ENCHANTMENTS: Internal.ItemStack$TooltipDisplayFlags;
        static readonly MODIFIERS: Internal.ItemStack$TooltipDisplayFlags;
        static readonly CAN_PLACE: Internal.ItemStack$TooltipDisplayFlags;
        static readonly UNBREAKABLE: Internal.ItemStack$TooltipDisplayFlags;
        static readonly ADDITIONAL: Internal.ItemStack$TooltipDisplayFlags;
    }
    type ItemStack$TooltipDisplayFlags_ = "enchantments" | "modifiers" | "unbreakable" | "can_destroy" | "can_place" | "additional" | "dye" | ItemStack$TooltipDisplayFlags;
    abstract class Texture extends Document.Object implements Internal.AutoCloseable {
        restoreLastBlurMipmap(): void;
        func_147631_c(): void;
        func_174937_a(arg0: boolean, arg1: boolean): void;
        func_195413_a(arg0: Internal.IResourceManager): void;
        func_215244_a(arg0: Internal.TextureManager, arg1: Internal.IResourceManager, arg2: ResourceLocation_, arg3: Internal.Executor_): void;
        setBlurMipmap(arg0: boolean, arg1: boolean): void;
        func_229148_d_(): void;
        func_110552_b(): number;
        close(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Texture_ = Texture;
    class AxisAlignedLinearPosTest extends Internal.PosRuleTest {
        static readonly field_237045_a_: Internal.Codec<Internal.AxisAlignedLinearPosTest>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Direction$Axis);
    }
    type AxisAlignedLinearPosTest_ = AxisAlignedLinearPosTest;
    class LivingEntityAttackEventJS extends Internal.LivingEntityEventJS {
        getDamage(): number;
        getSource(): Internal.DamageSourceJS;
        get damage(): number;
        get source(): Internal.DamageSourceJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(entity: Internal.LivingEntity, source: Internal.DamageSource, amount: number);
    }
    type LivingEntityAttackEventJS_ = LivingEntityAttackEventJS;
    abstract class AbstractArrowEntity extends Internal.ProjectileEntity {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_213872_b(arg0: number): void;
        func_70240_a(arg0: number): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213869_a(arg0: Internal.SoundEvent_): void;
        func_190547_a(arg0: Internal.LivingEntity, arg1: number): void;
        func_213865_o(arg0: boolean): void;
        func_70239_b(arg0: number): void;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        hasCooldown(): boolean;
        func_234593_u_(): boolean;
        isMultipartEntity(): boolean;
        func_213874_s(): number;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_203047_q(): boolean;
        func_213873_r(): boolean;
        func_213281_b(arg0: Internal.CompoundNBT_): void;
        func_70241_g(): boolean;
        func_70243_d(arg0: boolean): void;
        func_203045_n(arg0: boolean): void;
        func_70242_d(): number;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70037_a(arg0: Internal.CompoundNBT_): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        func_234594_z_(): void;
        field_70254_i: boolean;
        field_70249_b: number;
        field_70252_j: number;
        field_195056_av: Internal.BlockState;
        field_70251_a: Internal.AbstractArrowEntity$PickupStatus;
        field_213878_az: Internal.IntOpenHashSet;
        field_213875_aA: Internal.List<Internal.Entity>;
        field_70255_ao: number;
        field_70256_ap: number;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
    }
    type AbstractArrowEntity_ = AbstractArrowEntity;
    class GameRules$Category extends Internal.Enum<Internal.GameRules$Category> {
        static valueOf(arg0: string): Internal.GameRules$Category;
        static values(): Internal.GameRules$Category[];
        func_234908_a_(): string;
        static readonly PLAYER: Internal.GameRules$Category;
        static readonly DROPS: Internal.GameRules$Category;
        static readonly MOBS: Internal.GameRules$Category;
        static readonly CHAT: Internal.GameRules$Category;
        static readonly UPDATES: Internal.GameRules$Category;
        static readonly MISC: Internal.GameRules$Category;
        static readonly SPAWNING: Internal.GameRules$Category;
    }
    type GameRules$Category_ = "player" | "mobs" | "spawning" | "drops" | "updates" | "chat" | "misc" | GameRules$Category;
    class BannerDuplicateRecipe extends Internal.SpecialRecipe {
        func_77572_b(arg0: Internal.CraftingInventory): Internal.ItemStack;
        func_192400_c(): Internal.NonNullList<Internal.Ingredient>;
        func_179532_b(arg0: Internal.CraftingInventory): Internal.NonNullList<Internal.ItemStack>;
        func_179532_b(arg0: Internal.IInventory): Internal.NonNullList<any>;
        func_222127_g(): Internal.IRecipeType<any>;
        func_77569_a(arg0: Internal.CraftingInventory, arg1: Internal.World): boolean;
        func_222128_h(): Internal.ItemStack;
        func_193358_e(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
    }
    type BannerDuplicateRecipe_ = BannerDuplicateRecipe;
    interface ICollisionReader extends Internal.IBlockReader {
        func_226663_a_(arg0: Internal.BlockState, arg1: BlockPos, arg2: Internal.ISelectionContext): boolean;
        func_226666_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): Internal.Stream<Internal.VoxelShape>;
        func_195585_a(arg0: Internal.Entity, arg1: Internal.VoxelShape): boolean;
        func_226664_a_(arg0: Internal.AxisAlignedBB): boolean;
        func_241457_a_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): Internal.Stream<Internal.VoxelShape>;
        func_226668_i_(arg0: Internal.Entity): boolean;
        func_225522_c_(arg0: number, arg1: number): Internal.IBlockReader;
        func_230318_c_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_226665_a__(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB): boolean;
        func_234865_b_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): boolean;
        func_242405_a(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.BiPredicate_<Internal.BlockState_, BlockPos_>): boolean;
        func_226669_j_(arg0: Internal.Entity): boolean;
        func_234867_d_(arg0: Internal.Entity, arg1: Internal.AxisAlignedBB, arg2: Internal.Predicate_<Internal.Entity_>): Internal.Stream<Internal.VoxelShape>;
        func_175723_af(): Internal.WorldBorder;
    }
    type ICollisionReader_ = ICollisionReader;
    interface OpSupplier {
        create(arg0: dev.latvian.mods.rhino.util.unit.Unit, arg1: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        (arg0: dev.latvian.mods.rhino.util.unit.Unit, arg1: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
    }
    type OpSupplier_ = ((arg0: dev.latvian.mods.rhino.util.unit.Unit, arg1: dev.latvian.mods.rhino.util.unit.Unit)=>dev.latvian.mods.rhino.util.unit.Unit) | OpSupplier;
    class AudioFormat$Encoding extends Document.Object {
        static readonly PCM_UNSIGNED: Internal.AudioFormat$Encoding;
        static readonly ULAW: Internal.AudioFormat$Encoding;
        static readonly PCM_FLOAT: Internal.AudioFormat$Encoding;
        static readonly PCM_SIGNED: Internal.AudioFormat$Encoding;
        static readonly ALAW: Internal.AudioFormat$Encoding;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type AudioFormat$Encoding_ = AudioFormat$Encoding;
    class SkinManager extends Document.Object implements Internal.ISkinManager {
        func_152790_a(arg0: Internal.GameProfile, arg1: Internal.SkinManager$ISkinAvailableCallback_, arg2: boolean): void;
        func_152792_a(arg0: Internal.MinecraftProfileTexture, arg1: Internal.MinecraftProfileTexture$Type_): ResourceLocation;
        func_152788_a(arg0: Internal.GameProfile): Internal.Map<Internal.MinecraftProfileTexture$Type, Internal.MinecraftProfileTexture>;
        getSkinCacheDir(): Internal.File;
        get skinCacheDir(): Internal.File;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TextureManager, arg1: Internal.File, arg2: Internal.MinecraftSessionService);
    }
    type SkinManager_ = SkinManager;
    class ScreenPaintEventJS extends Internal.PaintEventJS {
        rawText(text: Internal.IReorderingProcessor_, x: number, y: number, color: number, shadow: boolean): void;
        scale(x: number, y: number): void;
        scale(scale: number): void;
        rectangle(x: number, y: number, z: number, w: number, h: number, color: number): void;
        rectangle(x: number, y: number, z: number, w: number, h: number, color: number, u0: number, v0: number, u1: number, v1: number): void;
        alignX(x: number, w: number, alignX: number): number;
        text(text: Internal.ITextComponent_, x: number, y: number, color: number, shadow: boolean): void;
        rotateRad(angle: number): void;
        rotateDeg(angle: number): void;
        alignY(y: number, h: number, alignY: number): number;
        translate(x: number, y: number): void;
        readonly mouseX: number;
        readonly mouseY: number;
        readonly width: number;
        readonly inventory: boolean;
        readonly height: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(m: Internal.Minecraft, s: Internal.Screen, ps: Internal.MatrixStack, mx: number, my: number, d: number);
        constructor(m: Internal.Minecraft, ps: Internal.MatrixStack, d: number);
    }
    type ScreenPaintEventJS_ = ScreenPaintEventJS;
    interface INBTType <T> {
        func_225651_c_(): boolean;
        func_225649_b_(arg0: Internal.DataInput, arg1: number, arg2: Internal.NBTSizeTracker): T;
        func_225650_b_(): string;
        func_225648_a_(): string;
    }
    type INBTType_<T> = INBTType<T>;
    class NativeJavaClass extends Internal.NativeJavaObject implements dev.latvian.mods.rhino.Function {
        call(cx: Internal.Context, scope: Internal.Scriptable, thisObj: Internal.Scriptable, args: any[]): any;
        getClassObject(): Internal.Class<any>;
        construct(cx: Internal.Context, scope: Internal.Scriptable, args: any[]): Internal.Scriptable;
        get classObject(): Internal.Class<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(scope: Internal.Scriptable, cl: Internal.Class<any>, isAdapter: boolean);
        constructor(scope: Internal.Scriptable, cl: Internal.Class<any>);
        constructor();
    }
    type NativeJavaClass_ = NativeJavaClass;
    interface IMouseHandler {
        handleMouseClickedOut(arg0: number): void;
        handleMouseScrolled(arg0: number, arg1: number, arg2: number): boolean;
        handleClick(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number, arg4: Internal.MouseClickState_): Internal.IMouseHandler;
    }
    type IMouseHandler_ = IMouseHandler;
    class ModelResourceLocation extends ResourceLocation {
        func_177518_c(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: string);
        constructor(arg0: ResourceLocation, arg1: string);
        constructor(arg0: string);
    }
    type ModelResourceLocation_ = ModelResourceLocation;
    class CHeldItemChangePacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_149614_c(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number);
    }
    type CHeldItemChangePacket_ = CHeldItemChangePacket;
    class PartyTeam extends Internal.Team {
        listAllies(arg0: Internal.CommandSource): number;
        kick(arg0: Internal.ServerPlayerEntity, arg1: Internal.Collection<Internal.GameProfile>): number;
        getOwnerPlayer(): Internal.ServerPlayerEntity;
        isOwner(arg0: Internal.UUID): boolean;
        leave(arg0: Internal.ServerPlayerEntity): number;
        addAlly(arg0: Internal.CommandSource, arg1: Internal.Collection<Internal.GameProfile>): number;
        transferOwnership(arg0: Internal.ServerPlayerEntity, arg1: Internal.ServerPlayerEntity): number;
        invite(arg0: Internal.ServerPlayerEntity, arg1: Internal.Collection<Internal.GameProfile>): number;
        join(arg0: Internal.CommandSource): number;
        removeAlly(arg0: Internal.CommandSource, arg1: Internal.Collection<Internal.GameProfile>): number;
        get ownerPlayer(): Internal.ServerPlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TeamManager);
    }
    type PartyTeam_ = PartyTeam;
    class CursorType extends Internal.Enum<Internal.CursorType> {
        static set(type: Internal.CursorType_): void;
        static valueOf(name: string): Internal.CursorType;
        static values(): Internal.CursorType[];
        static readonly VRESIZE: Internal.CursorType;
        static readonly ARROW: Internal.CursorType;
        static readonly CROSSHAIR: Internal.CursorType;
        static readonly IBEAM: Internal.CursorType;
        static readonly HRESIZE: Internal.CursorType;
        static readonly HAND: Internal.CursorType;
    }
    type CursorType_ = "arrow" | "ibeam" | "crosshair" | "hand" | "hresize" | "vresize" | CursorType;
    /**
    */
    class ItemStackJS extends Document.Object implements Internal.IngredientJS, Internal.NBTSerializable, Internal.ChangeListener<Internal.INBT>, Internal.SpecialEquality {
        getItemIds(): Internal.Set<string>;
        getNbt(): Internal.CompoundNBT;
        isBlock(): boolean;
        getName(): Internal.Text;
        getStacks(): Internal.Set<Internal.ItemStackJS>;
        getVanillaItems(): Internal.Set<Internal.Item>;
        getHarvestLevel(tool: ToolType, player: Internal.PlayerJS<any>, block: Internal.BlockContainerJS): number;
        getHarvestLevel(tool: ToolType): number;
        static findGroup(id: string): Internal.ItemGroup;
        getItem(): Internal.Item;
        hasEnchantment(enchantment: Internal.Enchantment_, level: number): boolean;
        getTags(): Internal.Collection<ResourceLocation>;
        getItemGroup(): string;
        setChance(c: number): void;
        static getList(): Internal.List<Internal.ItemStackJS>;
        getFirst(): Internal.ItemStackJS;
        withChance(c: number): Internal.ItemStackJS;
        withName(displayName: Internal.ITextComponent_): Internal.ItemStackJS;
        getCount(): number;
        setCount(count: number): void;
        testVanillaItem(item: Internal.Item_): boolean;
        hasTag(tag: ResourceLocation_): boolean;
        test(other: Internal.ItemStackJS_): boolean;
        hasChance(): boolean;
        asIngredientStack(): Internal.IngredientStackJS;
        getMinecraftNbt(): Internal.CompoundNBT;
        static getRawItem(o: any): Internal.Item;
        getNbtString(): string;
        createVanillaIngredient(): Internal.Ingredient;
        isNBTEqual(other: Internal.ItemStack): boolean;
        isNBTEqual(other: Internal.ItemStackJS_): boolean;
        toJson(): Internal.JsonElement;
        withCount(c: number): Internal.ItemStackJS;
        withCount(arg0: number): Internal.IngredientJS;
        static getListJS(): Internal.ListJS;
        specialEquals(o: any, shallow: boolean): boolean;
        anyStackMatches(ingredient: Internal.IngredientJS_): boolean;
        hasNBT(): boolean;
        areItemsEqual(other: Internal.ItemStack): boolean;
        areItemsEqual(other: Internal.ItemStackJS_): boolean;
        getMod(): string;
        getChance(): number;
        isInvalidRecipeIngredient(): boolean;
        getId(): string;
        weakNBT(): Internal.IngredientJS;
        static clearListCache(): void;
        not(): Internal.IngredientJS;
        toNBT(): Internal.CompoundNBT;
        toNBT(): Internal.INBT;
        getHarvestSpeed(): number;
        getHarvestSpeed(block: Internal.BlockContainerJS): number;
        toRawResultJson(): Internal.JsonElement;
        static of(o: any): Internal.ItemStackJS;
        getItemStack(): Internal.ItemStack;
        copy(): Internal.Copyable;
        copy(): Internal.IngredientJS;
        copy(): Internal.ItemStackJS;
        withNBT(nbt: Internal.CompoundNBT_): Internal.ItemStackJS;
        toResultJson(): Internal.JsonElement;
        chance(c: number): Internal.ItemStackJS;
        onChanged(arg0: any): void;
        onChanged(o: Internal.INBT): void;
        static getTypeList(): Internal.ListJS;
        isEmpty(): boolean;
        strongEquals(o: any): boolean;
        getVanillaPredicate(): Internal.Predicate<Internal.ItemStack>;
        filter(filter: Internal.IngredientJS_): Internal.IngredientJS;
        getEnchantments(): Internal.MapJS;
        getFluidStack(): Internal.FluidStackJS;
        removeNBT(): Internal.ItemStackJS;
        static resultFromRecipeJson(json: Internal.JsonElement): Internal.ItemStackJS;
        unwrapStackIngredient(): Internal.List<Internal.IngredientJS>;
        testVanilla(other: Internal.ItemStack): boolean;
        enchant(enchantments: Internal.MapJS): Internal.ItemStackJS;
        enchant(enchantment: Internal.Enchantment_, level: number): Internal.ItemStackJS;
        x(arg0: number): Internal.IngredientJS;
        x(c: number): Internal.ItemStackJS;
        ignoreNBT(): Internal.IngredientJS;
        removeChance(): void;
        setNbt(tag: Internal.CompoundNBT_): void;
        static readonly EMPTY: Internal.ItemStackJS;
        get nbt(): Internal.CompoundNBT;
        get itemStack(): Internal.ItemStack;
        get mod(): string;
        get itemIds(): Internal.Set<string>;
        get vanillaItems(): Internal.Set<Internal.Item>;
        get empty(): boolean;
        get harvestSpeed(): number;
        get typeList(): Internal.ListJS;
        get nbtString(): string;
        get block(): boolean;
        get id(): string;
        get minecraftNbt(): Internal.CompoundNBT;
        get invalidRecipeIngredient(): boolean;
        get itemGroup(): string;
        get item(): Internal.Item;
        get stacks(): Internal.Set<Internal.ItemStackJS>;
        get count(): number;
        get list(): Internal.List<Internal.ItemStackJS>;
        get enchantments(): Internal.MapJS;
        get listJS(): Internal.ListJS;
        get tags(): Internal.Collection<ResourceLocation>;
        get name(): Internal.Text;
        get fluidStack(): Internal.FluidStackJS;
        get first(): Internal.ItemStackJS;
        get vanillaPredicate(): Internal.Predicate<Internal.ItemStack>;
        set nbt(tag: Internal.CompoundNBT_);
        set count(count: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(s: Internal.ItemStack);
    }
    type ItemStackJS_ = Internal.Item_ | `${number}x ${string}` | object | ItemStackJS;
    abstract class FocusableGui extends Internal.AbstractGui implements Internal.INestedGuiEventHandler {
        func_231039_at__(): Internal.List<Internal.IGuiEventListener>;
        func_231037_b__(arg0: boolean): void;
        func_231035_a_(arg0: Internal.IGuiEventListener): void;
        func_212927_b(arg0: number, arg1: number): void;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_231047_b_(arg0: number, arg1: number): boolean;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        func_231041_ay__(): boolean;
        func_231048_c_(arg0: number, arg1: number, arg2: number): boolean;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_231046_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231044_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231049_c__(arg0: boolean): boolean;
        func_241217_q_(): Internal.IGuiEventListener;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FocusableGui_ = FocusableGui;
    class BlockModificationEventJS extends Internal.EventJS {
        modify(predicate: Internal.BlockStatePredicate_, c: Internal.Consumer_<Internal.BlockModificationProperties_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BlockModificationEventJS_ = BlockModificationEventJS;
    class Dialog$ModalityType extends Internal.Enum<Internal.Dialog$ModalityType> {
        static valueOf(arg0: string): Internal.Dialog$ModalityType;
        static values(): Internal.Dialog$ModalityType[];
        static readonly TOOLKIT_MODAL: Internal.Dialog$ModalityType;
        static readonly APPLICATION_MODAL: Internal.Dialog$ModalityType;
        static readonly MODELESS: Internal.Dialog$ModalityType;
        static readonly DOCUMENT_MODAL: Internal.Dialog$ModalityType;
    }
    type Dialog$ModalityType_ = "modeless" | "document_modal" | "application_modal" | "toolkit_modal" | Dialog$ModalityType;
    interface IModelGeometryPart {
        name(): string;
        getTextures(arg0: Internal.IModelConfiguration, arg1: Internal.Function_<ResourceLocation_, Internal.IUnbakedModel_>, arg2: Internal.Set<Internal.Pair<string, string>>): Internal.Collection<Internal.RenderMaterial>;
        addQuads(arg0: Internal.IModelConfiguration, arg1: Internal.IModelBuilder<any>, arg2: Internal.ModelBakery, arg3: Internal.Function_<Internal.RenderMaterial_, Internal.TextureAtlasSprite_>, arg4: Internal.IModelTransform, arg5: ResourceLocation_): void;
    }
    type IModelGeometryPart_ = IModelGeometryPart;
    class SBlockActionPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_179825_a(): BlockPos;
        func_211402_a(): boolean;
        func_148864_h(): number;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148868_c(): Internal.Block;
        func_148869_g(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: BlockPos, arg1: Internal.Block, arg2: number, arg3: number);
    }
    type SBlockActionPacket_ = SBlockActionPacket;
    class MatrixStack$Entry extends Document.Object {
        func_227872_b_(): Internal.Matrix3f;
        func_227870_a_(): Internal.Matrix4f;
    }
    type MatrixStack$Entry_ = MatrixStack$Entry;
    class RenderTooltipEvent$Color extends Internal.RenderTooltipEvent {
        setBorderStart(arg0: number): void;
        getOriginalBackground(): number;
        getOriginalBorderStart(): number;
        getBorderEnd(): number;
        setBorderEnd(arg0: number): void;
        setBackground(arg0: number): void;
        getBackground(): number;
        getOriginalBorderEnd(): number;
        getBorderStart(): number;
        get originalBackground(): number;
        get background(): number;
        get borderEnd(): number;
        get originalBorderStart(): number;
        get originalBorderEnd(): number;
        get borderStart(): number;
        set background(arg0: number);
        set borderEnd(arg0: number);
        set borderStart(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemStack, arg1: Internal.List<Internal.ITextProperties>, arg2: Internal.MatrixStack, arg3: number, arg4: number, arg5: Internal.FontRenderer, arg6: number, arg7: number, arg8: number);
        constructor();
    }
    type RenderTooltipEvent$Color_ = RenderTooltipEvent$Color;
    class ToolHarvestContext extends Document.Object {
        getSideHit(): Internal.Direction;
        isAOE(): boolean;
        getPlayer(): Internal.ServerPlayerEntity;
        getWorld(): Internal.ServerWorld;
        canHarvest(): boolean;
        getState(): Internal.BlockState;
        getPos(): BlockPos;
        getTargetedState(): Internal.BlockState;
        getTargetedPos(): BlockPos;
        getLiving(): Internal.LivingEntity;
        isEffective(): boolean;
        forPosition(arg0: BlockPos, arg1: Internal.BlockState): Internal.ToolHarvestContext;
        get effective(): boolean;
        get world(): Internal.ServerWorld;
        get living(): Internal.LivingEntity;
        get sideHit(): Internal.Direction;
        get pos(): BlockPos;
        get aOE(): boolean;
        get targetedPos(): BlockPos;
        get state(): Internal.BlockState;
        get targetedState(): Internal.BlockState;
        get player(): Internal.ServerPlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ServerWorld, arg1: Internal.LivingEntity, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.Direction, arg5: boolean, arg6: boolean);
        constructor(arg0: Internal.ServerWorld, arg1: Internal.ServerPlayerEntity, arg2: Internal.BlockState, arg3: BlockPos, arg4: Internal.Direction, arg5: boolean, arg6: boolean);
    }
    type ToolHarvestContext_ = ToolHarvestContext;
    class ForgeConfigSpec$EnumValue <T> extends Internal.ForgeConfigSpec$ConfigValue<T> {
    }
    type ForgeConfigSpec$EnumValue_<T> = ForgeConfigSpec$EnumValue<T>;
    abstract class MapCodec <A> extends Internal.CompressorHolder implements Internal.MapDecoder<A>, Internal.MapEncoder<A> {
        encode<T_>(arg0: A, arg1: Internal.DynamicOps<T_>, arg2: Internal.RecordBuilder<T_>): Internal.RecordBuilder<T_>;
        setPartial(arg0: java_.util.function_.Supplier_<A>): Internal.MapCodec<A>;
        keys<T_>(arg0: Internal.DynamicOps<T_>): Internal.Stream<T_>;
        deprecated(arg0: number): Internal.MapCodec<A>;
        decode<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.MapLike<T_>): Internal.DataResult<A>;
        flatXmap<S_>(arg0: Internal.Function_<A, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, Internal.DataResult_<A>>): Internal.MapCodec<S_>;
        comap<B_>(arg0: Internal.Function_<B_, A>): Internal.MapEncoder<B_>;
        static of<A_>(arg0: Internal.MapEncoder<A_>, arg1: Internal.MapDecoder<A_>, arg2: java_.util.function_.Supplier_<string>): Internal.MapCodec<A_>;
        static of<A_>(arg0: Internal.MapEncoder<A_>, arg1: Internal.MapDecoder<A_>): Internal.MapCodec<A_>;
        fieldOf(arg0: string): Internal.MapCodec<A>;
        xmap<S_>(arg0: Internal.Function_<A, S_>, arg1: Internal.Function_<S_, A>): Internal.MapCodec<S_>;
        map<B_>(arg0: Internal.Function_<A, B_>): Internal.MapDecoder<B_>;
        dependent<E_>(arg0: Internal.MapCodec<E_>, arg1: Internal.Function_<A, Internal.Pair_<E_, Internal.MapCodec_<E_>>>, arg2: Internal.BiFunction_<A, E_, A>): Internal.MapCodec<A>;
        flatComap<B_>(arg0: Internal.Function_<B_, Internal.DataResult_<A>>): Internal.MapEncoder<B_>;
        compressedDecode<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<A>;
        compressedBuilder<T_>(arg0: Internal.DynamicOps<T_>): Internal.RecordBuilder<T_>;
        decoder(): Internal.Decoder<A>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.MapDecoder<any>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.MapCodec<A>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.MapEncoder<any>;
        encoder(): Internal.Encoder<A>;
        orElse(arg0: A): Internal.MapCodec<A>;
        orElse(arg0: Internal.Consumer_<string>, arg1: A): Internal.MapCodec<A>;
        orElse(arg0: Internal.UnaryOperator<string>, arg1: A): Internal.MapCodec<A>;
        forGetter<O_>(arg0: Internal.Function_<O_, A>): Internal.RecordCodecBuilder<O_, A>;
        ap<E_>(arg0: Internal.MapDecoder<Internal.Function<A, E_>>): Internal.MapDecoder<E_>;
        flatMap<B_>(arg0: Internal.Function_<A, Internal.DataResult_<B_>>): Internal.MapDecoder<B_>;
        codec(): Internal.Codec<A>;
        static unit<A_>(arg0: A_): Internal.MapCodec<A_>;
        static unit<A_>(arg0: java_.util.function_.Supplier_<A_>): Internal.MapCodec<A_>;
        orElseGet(arg0: java_.util.function_.Supplier_<A>): Internal.MapCodec<A>;
        orElseGet(arg0: Internal.UnaryOperator<string>, arg1: java_.util.function_.Supplier_<A>): Internal.MapCodec<A>;
        orElseGet(arg0: Internal.Consumer_<string>, arg1: java_.util.function_.Supplier_<A>): Internal.MapCodec<A>;
        stable(): Internal.MapCodec<A>;
        mapResult(arg0: Internal.MapCodec$ResultFunction<A>): Internal.MapCodec<A>;
        set partial(arg0: java_.util.function_.Supplier_<A>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MapCodec_<A> = MapCodec<A>;
    interface TypeFamily {
        apply(arg0: number): com.mojang.datafixers.types.Type<any>;
        (arg0: number): com.mojang.datafixers.types.Type<any>;
    }
    type TypeFamily_ = ((arg0: number)=>com.mojang.datafixers.types.Type<any>) | TypeFamily;
    interface IntStream$IntMapMultiConsumer {
        accept(arg0: number, arg1: Internal.IntConsumer_): void;
        (arg0: number, arg1: Internal.IntConsumer): void;
    }
    type IntStream$IntMapMultiConsumer_ = ((arg0: number, arg1: Internal.IntConsumer)=>void) | IntStream$IntMapMultiConsumer;
    class AcaciaFoliagePlacer extends Internal.FoliagePlacer {
        static readonly field_236736_a_: Internal.Codec<Internal.AcaciaFoliagePlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.FeatureSpread, arg1: Internal.FeatureSpread);
    }
    type AcaciaFoliagePlacer_ = AcaciaFoliagePlacer;
    interface ExtendedVertexFormat {
        embeddium$getExtendedElements(): any[];
        (): any[];
    }
    type ExtendedVertexFormat_ = (()=>any[]) | ExtendedVertexFormat;
    class FurnaceContainer extends Internal.AbstractFurnaceContainer {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IInventory, arg3: Internal.IIntArray);
    }
    type FurnaceContainer_ = FurnaceContainer;
    class Int2IntOpenHashMap extends Internal.AbstractInt2IntMap implements Internal.Serializable, Internal.Cloneable, Internal.Hash {
        getOrDefault(arg0: any, arg1: any): any;
        getOrDefault(arg0: any, arg1: number): number;
        computeIfAbsent(arg0: any, arg1: Internal.Function_<any,any>): any;
        computeIfAbsent(arg0: number, arg1: Internal.Function_<number, number>): number;
        values(): Internal.Collection<any>;
        replace(arg0: number, arg1: number): number;
        replace(arg0: number, arg1: number, arg2: number): boolean;
        replace(arg0: any, arg1: any): any;
        replace(arg0: any, arg1: any, arg2: any): boolean;
        computeIfAbsentPartial(arg0: number, arg1: Internal.Int2IntFunction_): number;
        replaceAll(arg0: Internal.BiFunction_<number, number, number>): void;
        containsValue(arg0: any): boolean;
        andThen<V_>(arg0: Internal.Function_<number, V_>): Internal.Function<number, V_>;
        andThen(arg0: Internal.IntUnaryOperator_): Internal.IntUnaryOperator;
        put(arg0: any, arg1: any): any;
        put(arg0: number, arg1: number): number;
        remove(arg0: any): number;
        remove(arg0: any): any;
        remove(arg0: any, arg1: any): boolean;
        int2IntEntrySet(): Internal.ObjectSet<any>;
        int2IntEntrySet(): Internal.Int2IntMap$FastEntrySet;
        compute(arg0: number, arg1: Internal.BiFunction_<number, number, number>): number;
        compute(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        trim(): boolean;
        trim(arg0: number): boolean;
        merge(arg0: number, arg1: number, arg2: Internal.BiFunction_<number, number, number>): number;
        merge(arg0: any, arg1: any, arg2: Internal.BiFunction_<any,any,any>): any;
        get(arg0: any): number;
        get(arg0: any): any;
        keySet(): Internal.Set<any>;
        applyAsInt(arg0: number): number;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<number, number>>;
        entrySet(): Internal.Set<any>;
        apply(arg0: number): number;
        forEach(arg0: Internal.BiConsumer_<number, number>): void;
        containsKey(arg0: any): boolean;
        computeIfPresent(arg0: number, arg1: Internal.BiFunction_<number, number, number>): number;
        computeIfPresent(arg0: any, arg1: Internal.BiFunction_<any,any,any>): any;
        compose<V_>(arg0: Internal.Function_<V_, number>): Internal.Function<V_, number>;
        compose(arg0: Internal.IntUnaryOperator_): Internal.IntUnaryOperator;
        clone(): any;
        clone(): Internal.Int2IntOpenHashMap;
        addTo(arg0: number, arg1: number): number;
        putIfAbsent(arg0: number, arg1: number): number;
        putIfAbsent(arg0: any, arg1: any): any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<number, number>);
        constructor(arg0: Internal.Int2IntMap, arg1: number);
        constructor(arg0: Internal.Int2IntMap);
        constructor(arg0: number[], arg1: number[], arg2: number);
        constructor(arg0: number[], arg1: number[]);
        constructor(arg0: number, arg1: number);
        constructor(arg0: number);
        constructor();
        constructor(arg0: Internal.Map<number, number>, arg1: number);
    }
    type Int2IntOpenHashMap_ = Int2IntOpenHashMap;
    class RPConfig$Misc extends Document.Object implements Internal.ConfigData {
        validatePostLoad(): void;
        disableDataFixerUpper(): boolean;
        isMixinClassEnabled(arg0: string): boolean;
        underwaterBoatPassengerEjectionDelayTicks: number;
        bugFixes: Internal.RPConfig$MiscBugFixes;
        boatBuoyancyUnderFlowingWater: number;
        mixinBlacklist: Internal.List<string>;
        configReloadCommand: string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RPConfig$Misc_ = RPConfig$Misc;
    abstract class LoadingGui extends Internal.AbstractGui implements Internal.IRenderable {
        func_212969_a(): boolean;
        func_230430_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type LoadingGui_ = LoadingGui;
    interface ItemStackKJS extends Internal.AsKJS {
        removeTagKJS(): void;
        asKJS(): any;
        (): void;
    }
    type ItemStackKJS_ = (()=>void) | ItemStackKJS;
    interface ConfigWriter {
        writeToString(arg0: Internal.UnmodifiableConfig): string;
        write(arg0: Internal.UnmodifiableConfig, arg1: Internal.Path, arg2: Internal.WritingMode_, arg3: Internal.Charset): void;
        write(arg0: Internal.UnmodifiableConfig, arg1: Internal.File, arg2: Internal.WritingMode_): void;
        write(arg0: Internal.UnmodifiableConfig, arg1: Internal.File, arg2: Internal.WritingMode_, arg3: Internal.Charset): void;
        write(arg0: Internal.UnmodifiableConfig, arg1: Internal.URL): void;
        write(arg0: Internal.UnmodifiableConfig, arg1: Internal.Writer): void;
        write(arg0: Internal.UnmodifiableConfig, arg1: Internal.OutputStream, arg2: Internal.Charset): void;
        write(arg0: Internal.UnmodifiableConfig, arg1: Internal.OutputStream): void;
        write(arg0: Internal.UnmodifiableConfig, arg1: Internal.Path, arg2: Internal.WritingMode_): void;
        (arg0: Internal.UnmodifiableConfig, arg1: Internal.Writer): void;
    }
    type ConfigWriter_ = ((arg0: Internal.UnmodifiableConfig, arg1: Internal.Writer)=>void) | ConfigWriter;
    abstract class WorldCarver <C> extends Internal.ForgeRegistryEntry<Internal.WorldCarver<any>> implements Internal.WorldCarverAccess {
        func_222704_c(): number;
        func_212868_a_(arg0: Internal.Random, arg1: number, arg2: number, arg3: C): boolean;
        getReplaceableBlocks(): Internal.Set<any>;
        func_242761_a(arg0: C): Internal.ConfiguredCarver<C>;
        setRegistryName(arg0: ResourceLocation_): any;
        func_236244_c_(): Internal.Codec<Internal.ConfiguredCarver<C>>;
        setReplaceableBlocks(arg0: Internal.Set<any>): void;
        func_225555_a_(arg0: Internal.IChunk, arg1: Internal.Function_<BlockPos_, Internal.Biome_>, arg2: Internal.Random, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: Internal.BitSet, arg9: C): boolean;
        static readonly field_222709_a: Internal.WorldCarver<Internal.ProbabilityConfig>;
        static readonly field_236240_b_: Internal.WorldCarver<Internal.ProbabilityConfig>;
        static readonly field_222712_d: Internal.WorldCarver<Internal.ProbabilityConfig>;
        static readonly field_222713_e: Internal.WorldCarver<Internal.ProbabilityConfig>;
        static readonly field_222711_c: Internal.WorldCarver<Internal.ProbabilityConfig>;
        get replaceableBlocks(): Internal.Set<any>;
        set replaceableBlocks(arg0: Internal.Set<any>);
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<C>, arg1: number);
    }
    type WorldCarver_<C> = Registry.minecraft.worldgen$carver | WorldCarver<C>;
    abstract class Line2D extends Document.Object implements Internal.Shape, Internal.Cloneable {
        getP2(): Internal.Point2D;
        static relativeCCW(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        relativeCCW(arg0: number, arg1: number): number;
        relativeCCW(arg0: Internal.Point2D): number;
        intersects(arg0: Internal.Rectangle2D): boolean;
        intersects(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        static linesIntersect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): boolean;
        ptLineDistSq(arg0: number, arg1: number): number;
        ptLineDistSq(arg0: Internal.Point2D): number;
        static ptLineDistSq(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        getX2(): number;
        getP1(): Internal.Point2D;
        ptLineDist(arg0: Internal.Point2D): number;
        static ptLineDist(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        ptLineDist(arg0: number, arg1: number): number;
        getBounds(): Internal.Rectangle;
        ptSegDistSq(arg0: Internal.Point2D): number;
        static ptSegDistSq(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        ptSegDistSq(arg0: number, arg1: number): number;
        intersectsLine(arg0: Internal.Line2D): boolean;
        intersectsLine(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        contains(arg0: Internal.Point2D): boolean;
        contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        contains(arg0: number, arg1: number): boolean;
        contains(arg0: Internal.Rectangle2D): boolean;
        static ptSegDist(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
        ptSegDist(arg0: Internal.Point2D): number;
        ptSegDist(arg0: number, arg1: number): number;
        getY2(): number;
        getX1(): number;
        getPathIterator(arg0: Internal.AffineTransform): Internal.PathIterator;
        getPathIterator(arg0: Internal.AffineTransform, arg1: number): Internal.PathIterator;
        getY1(): number;
        getBounds2D(): Internal.Rectangle2D;
        clone(): any;
        setLine(arg0: number, arg1: number, arg2: number, arg3: number): void;
        setLine(arg0: Internal.Point2D, arg1: Internal.Point2D): void;
        setLine(arg0: Internal.Line2D): void;
        get p1(): Internal.Point2D;
        get p2(): Internal.Point2D;
        get bounds(): Internal.Rectangle;
        get y1(): number;
        get y2(): number;
        get x1(): number;
        get x2(): number;
        get bounds2D(): Internal.Rectangle2D;
        set line(arg0: Internal.Line2D);
    }
    type Line2D_ = Line2D;
    class HoldingPatternPhase extends Internal.Phase {
        func_188652_i(): Internal.PhaseType<Internal.HoldingPatternPhase>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type HoldingPatternPhase_ = HoldingPatternPhase;
    abstract class SittingPhase extends Internal.Phase {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity);
    }
    type SittingPhase_ = SittingPhase;
    class ProtectionDomain extends Document.Object {
        getPermissions(): Internal.PermissionCollection;
        getClassLoader(): Internal.ClassLoader;
        getPrincipals(): Internal.Principal[];
        implies(arg0: Internal.Permission): boolean;
        staticPermissionsOnly(): boolean;
        getCodeSource(): Internal.CodeSource;
        get classLoader(): Internal.ClassLoader;
        get permissions(): Internal.PermissionCollection;
        get principals(): Internal.Principal[];
        get codeSource(): Internal.CodeSource;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CodeSource, arg1: Internal.PermissionCollection);
        constructor(arg0: Internal.CodeSource, arg1: Internal.PermissionCollection, arg2: Internal.ClassLoader, arg3: Internal.Principal[]);
    }
    type ProtectionDomain_ = ProtectionDomain;
    interface Commands$IParser {
        parse(arg0: Internal.StringReader): void;
        (arg0: Internal.StringReader): void;
    }
    type Commands$IParser_ = ((arg0: Internal.StringReader)=>void) | Commands$IParser;
    interface IShearable {
        func_230263_a_(arg0: Internal.SoundCategory_): void;
        func_230262_K__(): boolean;
    }
    type IShearable_ = IShearable;
    interface Spliterator$OfLong extends Internal.Spliterator$OfPrimitive<number, Internal.LongConsumer, Internal.Spliterator$OfLong> {
        trySplit(): Internal.Spliterator$OfPrimitive<any, any, any>;
        trySplit(): Internal.Spliterator<any>;
        trySplit(): Internal.Spliterator$OfLong;
        tryAdvance(arg0: any): boolean;
        tryAdvance(arg0: Internal.Consumer_<number>): boolean;
        tryAdvance(arg0: Internal.LongConsumer_): boolean;
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: Internal.LongConsumer_): void;
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
    }
    type Spliterator$OfLong_ = Spliterator$OfLong;
    class PlayerInteractionManager extends Document.Object implements Internal.PlayerInteractionManagerKJS {
        func_73077_b(arg0: Internal.GameType_): void;
        func_180239_c(): boolean;
        func_73076_a(arg0: Internal.GameType_): void;
        func_73083_d(): boolean;
        func_180237_b(arg0: BlockPos): boolean;
        func_73075_a(): void;
        handler$cho000$diet$postBlockActivated(arg0: Internal.ServerPlayerEntity, arg1: Internal.World, arg2: Internal.ItemStack, arg3: Hand_, arg4: Internal.BlockRayTraceResult, arg5: Internal.CallbackInfoReturnable<any>): void;
        handler$bcj000$processItemUsage(arg0: Internal.ServerPlayerEntity, arg1: Internal.World, arg2: Internal.ItemStack, arg3: Hand_, arg4: Internal.BlockRayTraceResult, arg5: Internal.CallbackInfoReturnable<any>): void;
        func_73081_b(): Internal.GameType;
        func_229860_a_(arg0: BlockPos, arg1: Internal.CPlayerDiggingPacket$Action_, arg2: string): void;
        func_73080_a(arg0: Internal.ServerWorld): void;
        func_225416_a(arg0: BlockPos, arg1: Internal.CPlayerDiggingPacket$Action_, arg2: Internal.Direction_, arg3: number): void;
        handler$cho000$diet$preBlockActivated(arg0: Internal.ServerPlayerEntity, arg1: Internal.World, arg2: Internal.ItemStack, arg3: Hand_, arg4: Internal.BlockRayTraceResult, arg5: Internal.CallbackInfoReturnable<any>): void;
        func_219441_a(arg0: Internal.ServerPlayerEntity, arg1: Internal.World, arg2: Internal.ItemStack, arg3: Hand_, arg4: Internal.BlockRayTraceResult): Internal.ActionResultType;
        isDestroyingBlockKJS(): boolean;
        func_187250_a(arg0: Internal.ServerPlayerEntity, arg1: Internal.World, arg2: Internal.ItemStack, arg3: Hand_): Internal.ActionResultType;
        func_241820_a(arg0: Internal.GameType_, arg1: Internal.GameType_): void;
        func_241815_c_(): Internal.GameType;
        field_73100_i: number;
        field_73092_a: Internal.ServerWorld;
        field_73094_o: number;
        field_73090_b: Internal.ServerPlayerEntity;
        field_73097_j: boolean;
        field_73089_e: number;
        field_180240_f: BlockPos;
        field_73088_d: boolean;
        get destroyingBlockKJS(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ServerWorld);
    }
    type PlayerInteractionManager_ = PlayerInteractionManager;
    class UUID extends Document.Object implements Internal.Serializable, Internal.Comparable<Internal.UUID> {
        node(): number;
        getMostSignificantBits(): number;
        variant(): number;
        static randomUUID(): Internal.UUID;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.UUID): number;
        static fromString(arg0: string): Internal.UUID;
        static nameUUIDFromBytes(arg0: number[]): Internal.UUID;
        getLeastSignificantBits(): number;
        version(): number;
        clockSequence(): number;
        timestamp(): number;
        get mostSignificantBits(): number;
        get leastSignificantBits(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
    }
    type UUID_ = UUID;
    class CooldownTracker extends Document.Object {
        localvar$clo000$fireCooldownEvent(arg0: number): number;
        func_185141_a(arg0: Internal.Item_): boolean;
        func_185143_a(arg0: Internal.Item_, arg1: number): number;
        func_185142_b(arg0: Internal.Item_): void;
        func_185144_a(): void;
        func_185145_a(arg0: Internal.Item_, arg1: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type CooldownTracker_ = CooldownTracker;
    class SPlayEntityEffectPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_179707_f(): boolean;
        func_186984_g(): boolean;
        func_149429_c(): boolean;
        func_205527_h(): boolean;
        func_149427_e(): number;
        func_149428_f(): number;
        func_180755_e(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149426_d(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: Internal.EffectInstance);
    }
    type SPlayEntityEffectPacket_ = SPlayEntityEffectPacket;
    interface DisplayEffectScreenAccessor {
        hasEffects(): boolean;
        (): boolean;
    }
    type DisplayEffectScreenAccessor_ = (()=>boolean) | DisplayEffectScreenAccessor;
    class LocalDate extends Document.Object implements Internal.Temporal, Internal.TemporalAdjuster, Internal.ChronoLocalDate, Internal.Serializable {
        atStartOfDay(): Internal.LocalDateTime;
        atStartOfDay(arg0: Internal.ZoneId): Internal.ZonedDateTime;
        toEpochDay(): number;
        isEqual(arg0: Internal.ChronoLocalDate): boolean;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.ChronoLocalDate): number;
        getDayOfWeek(): Internal.DayOfWeek;
        lengthOfMonth(): number;
        getEra(): Internal.Era;
        getEra(): Internal.IsoEra;
        static from(arg0: Internal.TemporalAccessor): Internal.LocalDate;
        static ofYearDay(arg0: number, arg1: number): Internal.LocalDate;
        getMonth(): Internal.Month;
        plusMonths(arg0: number): Internal.LocalDate;
        plusYears(arg0: number): Internal.LocalDate;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        format(arg0: Internal.DateTimeFormatter): string;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isSupported(arg0: Internal.TemporalField): boolean;
        plus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDate;
        plus(arg0: Internal.TemporalAmount): Internal.LocalDate;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDate;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.LocalDate;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        atTime(arg0: Internal.LocalTime): Internal.ChronoLocalDateTime<any>;
        atTime(arg0: Internal.LocalTime): Internal.LocalDateTime;
        atTime(arg0: number, arg1: number, arg2: number, arg3: number): Internal.LocalDateTime;
        atTime(arg0: Internal.OffsetTime): Internal.OffsetDateTime;
        atTime(arg0: number, arg1: number, arg2: number): Internal.LocalDateTime;
        atTime(arg0: number, arg1: number): Internal.LocalDateTime;
        getYear(): number;
        toEpochSecond(arg0: Internal.LocalTime, arg1: Internal.ZoneOffset): number;
        withDayOfMonth(arg0: number): Internal.LocalDate;
        withMonth(arg0: number): Internal.LocalDate;
        isAfter(arg0: Internal.ChronoLocalDate): boolean;
        static ofInstant(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.LocalDate;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        minus(arg0: Internal.TemporalAmount): Internal.LocalDate;
        minus(arg0: Internal.TemporalAmount): Internal.ChronoLocalDate;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.LocalDate;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.ChronoLocalDate;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        datesUntil(arg0: Internal.LocalDate, arg1: Internal.Period): Internal.Stream<Internal.LocalDate>;
        datesUntil(arg0: Internal.LocalDate): Internal.Stream<Internal.LocalDate>;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        withYear(arg0: number): Internal.LocalDate;
        lengthOfYear(): number;
        plusDays(arg0: number): Internal.LocalDate;
        static now(): Internal.LocalDate;
        static now(arg0: Internal.Clock): Internal.LocalDate;
        static now(arg0: Internal.ZoneId): Internal.LocalDate;
        static of(arg0: number, arg1: number, arg2: number): Internal.LocalDate;
        static of(arg0: number, arg1: Internal.Month_, arg2: number): Internal.LocalDate;
        get(arg0: Internal.TemporalField): number;
        getDayOfYear(): number;
        plusWeeks(arg0: number): Internal.LocalDate;
        getChronology(): Internal.Chronology;
        getChronology(): Internal.IsoChronology;
        static ofEpochDay(arg0: number): Internal.LocalDate;
        getMonthValue(): number;
        minusYears(arg0: number): Internal.LocalDate;
        minusWeeks(arg0: number): Internal.LocalDate;
        withDayOfYear(arg0: number): Internal.LocalDate;
        isLeapYear(): boolean;
        static parse(arg0: Internal.CharSequence): Internal.LocalDate;
        static parse(arg0: Internal.CharSequence, arg1: Internal.DateTimeFormatter): Internal.LocalDate;
        isBefore(arg0: Internal.ChronoLocalDate): boolean;
        minusDays(arg0: number): Internal.LocalDate;
        getLong(arg0: Internal.TemporalField): number;
        minusMonths(arg0: number): Internal.LocalDate;
        with(arg0: Internal.TemporalAdjuster_): Internal.LocalDate;
        with(arg0: Internal.TemporalAdjuster_): Internal.Temporal;
        with(arg0: Internal.TemporalAdjuster_): Internal.ChronoLocalDate;
        with(arg0: Internal.TemporalField, arg1: number): Internal.LocalDate;
        with(arg0: Internal.TemporalField, arg1: number): Internal.ChronoLocalDate;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        until(arg0: Internal.ChronoLocalDate): Internal.Period;
        until(arg0: Internal.ChronoLocalDate): Internal.ChronoPeriod;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        getDayOfMonth(): number;
        static readonly MIN: Internal.LocalDate;
        static readonly MAX: Internal.LocalDate;
        static readonly EPOCH: Internal.LocalDate;
        get dayOfWeek(): Internal.DayOfWeek;
        get month(): Internal.Month;
        get era(): Internal.IsoEra;
        get year(): number;
        get dayOfYear(): number;
        get dayOfMonth(): number;
        get monthValue(): number;
        get chronology(): Internal.IsoChronology;
        get leapYear(): boolean;
    }
    type LocalDate_ = LocalDate;
    class ChunkManager extends Internal.ChunkLoader implements Internal.ChunkHolder$IPlayerProvider, Internal.ChunkMapFTBC {
        func_219219_b(arg0: number): Internal.ChunkHolder;
        func_219194_d(): number;
        func_219174_c(): number;
        func_219179_a(arg0: Internal.ChunkHolder): Internal.CompletableFuture<Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_219188_b(arg0: Internal.ChunkPos): Internal.CompletableFuture<Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_219243_d(arg0: Internal.ChunkPos): boolean;
        func_219244_a(arg0: Internal.ChunkHolder, arg1: Internal.ChunkStatus_): Internal.CompletableFuture<Internal.Either<Internal.IChunk, Internal.ChunkHolder$IChunkLoadingError>>;
        func_219212_a(arg0: number, arg1: Internal.ChunkHolder): void;
        handler$bdf000$smoothChunksaveChunks(arg0: Internal.CallbackInfo): void;
        func_219220_a(arg0: number): Internal.ChunkHolder;
        func_219097_a(arg0: Internal.ChunkPos, arg1: boolean): Internal.Stream<Internal.ServerPlayerEntity>;
        func_222973_a(arg0: Internal.Chunk): Internal.CompletableFuture<void>;
        func_222961_b(arg0: Internal.ChunkHolder): Internal.CompletableFuture<Internal.Either<Internal.Chunk, Internal.ChunkHolder$IChunkLoadingError>>;
        getChunksFTBC(): Internal.Long2ObjectLinkedOpenHashMap<any>;
        func_219183_a(arg0: Internal.ServerPlayerEntity): void;
        func_223491_f(): Internal.Iterable<Internal.ChunkHolder>;
        func_219209_c(arg0: Internal.ChunkPos): void;
        func_219191_c(arg0: number): Internal.IntSupplier;
        func_219170_a(arg0: Internal.ChunkPos): string;
        readonly field_219251_e: Internal.Long2ObjectLinkedOpenHashMap<Internal.ChunkHolder>;
        readonly field_219257_k: Internal.ThreadTaskExecutor<Internal.Runnable>;
        field_219262_p: boolean;
        static readonly field_219249_a: 44;
        readonly field_219255_i: Internal.ServerWorld;
        field_219252_f: Internal.Long2ObjectLinkedOpenHashMap<Internal.ChunkHolder>;
        readonly field_219253_g: Internal.Long2ObjectLinkedOpenHashMap<Internal.ChunkHolder>;
        readonly field_219266_t: Internal.IChunkStatusListener;
        get chunksFTBC(): Internal.Long2ObjectLinkedOpenHashMap<any>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ServerWorld, arg1: Internal.SaveFormat$LevelSave, arg2: Internal.DataFixer, arg3: Internal.TemplateManager, arg4: Internal.Executor, arg5: Internal.ThreadTaskExecutor<Internal.Runnable>, arg6: Internal.IChunkLightProvider, arg7: Internal.ChunkGenerator, arg8: Internal.IChunkStatusListener, arg9: java_.util.function_.Supplier<Internal.DimensionSavedDataManager>, arg10: number, arg11: boolean);
    }
    type ChunkManager_ = ChunkManager;
    class FlaggedPathPoint extends Internal.PathPoint {
        func_224763_d(): Internal.PathPoint;
        func_224764_e(): void;
        static func_224760_c(arg0: Internal.PacketBuffer): Internal.FlaggedPathPoint;
        func_224761_a(arg0: number, arg1: Internal.PathPoint): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
        constructor(arg0: Internal.PathPoint);
    }
    type FlaggedPathPoint_ = FlaggedPathPoint;
    class SoundEvent$SoundSourceEvent extends net.minecraftforge.client.event.sound.SoundEvent {
        getName(): string;
        getSource(): Internal.SoundSource;
        getSound(): Internal.ISound;
        get sound(): Internal.ISound;
        get name(): string;
        get source(): Internal.SoundSource;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.SoundEngine, arg1: Internal.ISound, arg2: Internal.SoundSource);
    }
    type SoundEvent$SoundSourceEvent_ = SoundEvent$SoundSourceEvent;
    class PerkRenderGroup extends Document.Object {
        add(arg0: Internal.AbstractRenderableTexture, arg1: number): void;
        getGroup(arg0: Internal.AbstractRenderableTexture): Internal.BatchPerkContext$TextureObjectGroup;
        batchRegister(arg0: Internal.BatchPerkContext): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PerkRenderGroup_ = PerkRenderGroup;
    class ForkyTrunkPlacer extends Internal.AbstractTrunkPlacer {
        static readonly field_236896_a_: Internal.Codec<Internal.ForkyTrunkPlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type ForkyTrunkPlacer_ = ForkyTrunkPlacer;
    abstract class FileChannel extends Internal.AbstractInterruptibleChannel implements Internal.SeekableByteChannel, Internal.GatheringByteChannel, Internal.ScatteringByteChannel {
        transferFrom(arg0: Internal.ReadableByteChannel_, arg1: number, arg2: number): number;
        read(arg0: Internal.ByteBuffer, arg1: number): number;
        read(arg0: Internal.ByteBuffer): number;
        read(arg0: Internal.ByteBuffer[], arg1: number, arg2: number): number;
        read(arg0: Internal.ByteBuffer[]): number;
        truncate(arg0: number): Internal.SeekableByteChannel;
        truncate(arg0: number): Internal.FileChannel;
        size(): number;
        lock(arg0: number, arg1: number, arg2: boolean): Internal.FileLock;
        lock(): Internal.FileLock;
        force(arg0: boolean): void;
        position(): number;
        position(arg0: number): Internal.FileChannel;
        position(arg0: number): Internal.SeekableByteChannel;
        transferTo(arg0: number, arg1: number, arg2: Internal.WritableByteChannel_): number;
        write(arg0: Internal.ByteBuffer, arg1: number): number;
        write(arg0: Internal.ByteBuffer): number;
        write(arg0: Internal.ByteBuffer[], arg1: number, arg2: number): number;
        write(arg0: Internal.ByteBuffer[]): number;
        map(arg0: Internal.FileChannel$MapMode, arg1: number, arg2: number, arg3: Internal.Arena): Internal.MemorySegment;
        map(arg0: Internal.FileChannel$MapMode, arg1: number, arg2: number): Internal.MappedByteBuffer;
        tryLock(arg0: number, arg1: number, arg2: boolean): Internal.FileLock;
        tryLock(): Internal.FileLock;
        static open(arg0: Internal.Path, ...arg1: Internal.OpenOption[]): Internal.FileChannel;
        static open(arg0: Internal.Path, arg1: Internal.Set<Internal.OpenOption>, ...arg2: any[]): Internal.FileChannel;
    }
    type FileChannel_ = FileChannel;
    class GossipManager$Gossips extends Document.Object {
        func_220895_a(arg0: Internal.UUID): Internal.Stream<Internal.GossipManager$GossipEntry>;
        func_220896_a(arg0: Internal.Predicate_<Internal.GossipType_>): number;
        func_223528_b(arg0: Internal.GossipType_): void;
        func_223529_a(): void;
        func_223530_b(): boolean;
        func_223531_a(arg0: Internal.GossipType_): void;
    }
    type GossipManager$Gossips_ = GossipManager$Gossips;
    interface Multiset <E> extends Internal.Collection<E> {
        add(arg0: E): boolean;
        add(arg0: E, arg1: number): number;
        forEachEntry(arg0: Internal.ObjIntConsumer_<E>): void;
        entrySet(): Internal.Set<Internal.Multiset$Entry<E>>;
        spliterator(): Internal.Spliterator<E>;
        forEach(arg0: Internal.Consumer_<E>): void;
        containsAll(arg0: Internal.Collection<any>): boolean;
        count(arg0: any): number;
        remove(arg0: any): boolean;
        remove(arg0: any, arg1: number): number;
        removeAll(arg0: Internal.Collection<any>): boolean;
        contains(arg0: any): boolean;
        iterator(): Internal.Iterator<E>;
        size(): number;
        elementSet(): Internal.Set<E>;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        setCount(arg0: E, arg1: number): number;
        setCount(arg0: E, arg1: number, arg2: number): boolean;
        retainAll(arg0: Internal.Collection<any>): boolean;
    }
    type Multiset_<E> = Multiset<E>;
    interface BiFunction <T, U, R> {
        apply(arg0: T, arg1: U): R;
        andThen<V>(arg0: Internal.Function_<R, V>): Internal.BiFunction<T, U, V>;
        (arg0: T, arg1: U): R;
    }
    type BiFunction_<T, U, R> = ((arg0: T, arg1: U)=>R) | BiFunction<T, U, R>;
    class UpdatePlayerLookEvent extends net.minecraftforge.eventbus.api.Event {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type UpdatePlayerLookEvent_ = UpdatePlayerLookEvent;
    class SRecipeBookPacket$State extends Internal.Enum<Internal.SRecipeBookPacket$State> {
        static valueOf(arg0: string): Internal.SRecipeBookPacket$State;
        static values(): Internal.SRecipeBookPacket$State[];
        static readonly ADD: Internal.SRecipeBookPacket$State;
        static readonly INIT: Internal.SRecipeBookPacket$State;
        static readonly REMOVE: Internal.SRecipeBookPacket$State;
    }
    type SRecipeBookPacket$State_ = "init" | "add" | "remove" | SRecipeBookPacket$State;
    class ItemModelMesher extends Document.Object {
        func_178083_a(): Internal.ModelManager;
        func_199311_a(arg0: Internal.Item_, arg1: Internal.ModelResourceLocation): void;
        func_199934_a(arg0: Internal.IItemProvider_): Internal.TextureAtlasSprite;
        func_199309_a(arg0: Internal.ItemStack): Internal.TextureAtlasSprite;
        func_178089_a(arg0: Internal.ItemStack): Internal.IBakedModel;
        func_199312_b(arg0: Internal.Item_): Internal.IBakedModel;
        func_178085_b(): void;
        readonly field_199313_a: Internal.Int2ObjectMap<Internal.ModelResourceLocation>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ModelManager);
    }
    type ItemModelMesher_ = ItemModelMesher;
    class GuiScreenEvent$KeyboardKeyReleasedEvent$Pre extends Internal.GuiScreenEvent$KeyboardKeyReleasedEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number);
    }
    type GuiScreenEvent$KeyboardKeyReleasedEvent$Pre_ = GuiScreenEvent$KeyboardKeyReleasedEvent$Pre;
    interface INBTSerializable <T> {
        serializeNBT(): T;
        deserializeNBT(arg0: T): void;
    }
    type INBTSerializable_<T> = INBTSerializable<T>;
    abstract class ImmutableMultimap <K, V> extends Internal.AbstractMultimap<K, V> implements Internal.Serializable {
        inverse(): Internal.ImmutableMultimap<V, K>;
        removeAll(arg0: any): Internal.ImmutableCollection<V>;
        removeAll(arg0: any): Internal.Collection<any>;
        entries(): Internal.ImmutableCollection<Internal.Map$Entry<K, V>>;
        entries(): Internal.Collection<any>;
        asMap(): Internal.ImmutableMap<K, Internal.Collection<V>>;
        asMap(): Internal.Map<any, any>;
        keys(): Internal.ImmutableMultiset<K>;
        keys(): Internal.Multiset<any>;
        static of<K_, V_>(): Internal.ImmutableMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_, arg6: K_, arg7: V_): Internal.ImmutableMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_, arg6: K_, arg7: V_, arg8: K_, arg9: V_): Internal.ImmutableMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_): Internal.ImmutableMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_): Internal.ImmutableMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_): Internal.ImmutableMultimap<K_, V_>;
        values(): Internal.Collection<any>;
        values(): Internal.ImmutableCollection<V>;
        get(arg0: any): Internal.Collection<any>;
        get(arg0: K): Internal.ImmutableCollection<V>;
        static builder<K_, V_>(): Internal.ImmutableMultimap$Builder<K_, V_>;
        static copyOf<K_, V_>(arg0: Internal.Iterable_<Internal.Map$Entry_<K_, V_>>): Internal.ImmutableMultimap<K_, V_>;
        static copyOf<K_, V_>(arg0: Internal.Multimap<K_, V_>): Internal.ImmutableMultimap<K_, V_>;
        replaceValues(arg0: K, arg1: Internal.Iterable_<V>): Internal.ImmutableCollection<V>;
        replaceValues(arg0: any, arg1: Internal.Iterable_<any>): Internal.Collection<any>;
        keySet(): Internal.Set<any>;
        keySet(): Internal.ImmutableSet<K>;
    }
    type ImmutableMultimap_<K, V> = ImmutableMultimap<K, V>;
    class PlayerEvent$TabListNameFormat extends Internal.PlayerEvent {
        getDisplayName(): Internal.ITextComponent;
        setDisplayName(arg0: Internal.ITextComponent_): void;
        get displayName(): Internal.ITextComponent;
        set displayName(arg0: Internal.ITextComponent_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.PlayerEntity);
    }
    type PlayerEvent$TabListNameFormat_ = PlayerEvent$TabListNameFormat;
    class Format$Field extends Internal.AttributedCharacterIterator$Attribute {
    }
    type Format$Field_ = Format$Field;
    class IFluidHandler$FluidAction extends Internal.Enum<Internal.IFluidHandler$FluidAction> {
        static valueOf(arg0: string): Internal.IFluidHandler$FluidAction;
        static values(): Internal.IFluidHandler$FluidAction[];
        simulate(): boolean;
        execute(): boolean;
        static readonly EXECUTE: Internal.IFluidHandler$FluidAction;
        static readonly SIMULATE: Internal.IFluidHandler$FluidAction;
    }
    type IFluidHandler$FluidAction_ = "execute" | "simulate" | IFluidHandler$FluidAction;
    abstract class PatrollerEntity extends Internal.MonsterEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        func_213635_r(arg0: boolean): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_213634_ed(): boolean;
        func_213630_eb(): boolean;
        getEntity(): Internal.Entity;
        static func_223330_b(arg0: Internal.EntityType_<Internal.PatrollerEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213636_ee(): void;
        func_213632_ea(): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_213638_dZ(): BlockPos;
        func_213637_dY(): boolean;
        func_213631_g(arg0: BlockPos): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type PatrollerEntity_ = PatrollerEntity;
    class JigsawTileEntity extends Internal.TileEntity {
        requestModelDataUpdate(): void;
        func_235664_a_(arg0: ResourceLocation_): void;
        func_235665_a_(arg0: Internal.ServerWorld, arg1: number, arg2: boolean): void;
        func_214055_a(arg0: string): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_235662_a_(arg0: Internal.JigsawTileEntity$OrientationType_): void;
        func_214054_f(): string;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_235670_g_(): ResourceLocation;
        func_235671_j_(): Internal.JigsawTileEntity$OrientationType;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        func_235667_c_(arg0: ResourceLocation_): void;
        func_235666_b_(arg0: ResourceLocation_): void;
        func_235669_f_(): ResourceLocation;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        func_235668_d_(): ResourceLocation;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TileEntityType<any>);
        constructor();
    }
    type JigsawTileEntity_ = JigsawTileEntity;
    class Slurry extends Internal.Chemical<Internal.Slurry> implements Internal.ISlurryProvider {
        static readFromNBT(arg0: Internal.CompoundNBT_): Internal.Slurry;
        getName(): string;
        getOreTag(): Internal.ITag<Internal.Item>;
        getStack(arg0: number): Internal.SlurryStack;
        getStack(arg0: number): Internal.ChemicalStack<any>;
        setRegistryName(arg0: ResourceLocation_): any;
        static getFromRegistry(arg0: ResourceLocation_): Internal.Slurry;
        get oreTag(): Internal.ITag<Internal.Item>;
        get name(): string;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any);
    }
    type Slurry_ = Registry.mekanism.slurry | Slurry;
    class TeamPropertyType <T> extends Document.Object {
        static read(arg0: Internal.PacketBuffer): Internal.TeamProperty<any>;
        static write(arg0: Internal.PacketBuffer, arg1: Internal.TeamProperty<any>): void;
        static register<Y_>(arg0: string, arg1: Internal.TeamPropertyType$FromNet_<Y_>): Internal.TeamPropertyType<Y_>;
        static readonly ENUM: Internal.TeamPropertyType<string>;
        static readonly PRIVACY_MODE: Internal.TeamPropertyType<Internal.PrivacyMode>;
        static readonly COLOR: Internal.TeamPropertyType<Internal.Color4I>;
        static readonly STRING: Internal.TeamPropertyType<string>;
        readonly deserializer: Internal.TeamPropertyType$FromNet<T>;
        static readonly DOUBLE: Internal.TeamPropertyType<number>;
        readonly id: string;
        static readonly MAP: {"boolean":Internal.TeamPropertyType<any>,"string":Internal.TeamPropertyType<any>,"color":Internal.TeamPropertyType<any>,"double":Internal.TeamPropertyType<any>,"privacy_mode":Internal.TeamPropertyType<any>,"int":Internal.TeamPropertyType<any>,"enum":Internal.TeamPropertyType<any>};
        static readonly BOOLEAN: Internal.TeamPropertyType<boolean>;
        static readonly INT: Internal.TeamPropertyType<number>;
    }
    type TeamPropertyType_<T> = TeamPropertyType<T>;
    class FolderName extends Document.Object {
        func_237255_a_(): string;
        static readonly field_237253_i_: Internal.FolderName;
        static readonly field_237251_g_: Internal.FolderName;
        static readonly field_237249_e_: Internal.FolderName;
        static readonly field_237252_h_: Internal.FolderName;
        static readonly field_237245_a_: Internal.FolderName;
        static readonly field_237248_d_: Internal.FolderName;
        static readonly field_237246_b_: Internal.FolderName;
        static readonly field_237250_f_: Internal.FolderName;
        static readonly field_237247_c_: Internal.FolderName;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type FolderName_ = FolderName;
    class KeyEvent extends Internal.InputEvent {
        isActionKey(): boolean;
        static getKeyModifiersText(arg0: number): string;
        getExtendedKeyCode(): number;
        static getKeyText(arg0: number): string;
        getKeyChar(): string;
        setKeyCode(arg0: number): void;
        getKeyLocation(): number;
        static getExtendedKeyCodeForChar(arg0: number): number;
        setKeyChar(arg0: string): void;
        setModifiers(arg0: number): void;
        getKeyCode(): number;
        static readonly VK_UNDEFINED: 0;
        static readonly VK_QUOTEDBL: 152;
        static readonly VK_BRACERIGHT: 162;
        static readonly VK_COPY: 65485;
        static readonly VK_LEFT_PARENTHESIS: 519;
        static readonly VK_NUMPAD3: 99;
        static readonly VK_NUMPAD4: 100;
        static readonly VK_NUMPAD5: 101;
        static readonly VK_NUMPAD6: 102;
        static readonly VK_HELP: 156;
        static readonly VK_NUMPAD0: 96;
        static readonly VK_NUMPAD1: 97;
        static readonly VK_NUMPAD2: 98;
        static readonly VK_RIGHT: 39;
        static readonly VK_AMPERSAND: 150;
        static readonly VK_ALT_GRAPH: 65406;
        static readonly VK_CANCEL: 3;
        static readonly VK_COLON: 513;
        static readonly VK_CIRCUMFLEX: 514;
        static readonly VK_CAPS_LOCK: 20;
        static readonly VK_ALL_CANDIDATES: 256;
        static readonly VK_LESS: 153;
        static readonly VK_PLUS: 521;
        static readonly VK_WINDOWS: 524;
        static readonly KEY_RELEASED: 402;
        static readonly VK_KANA: 21;
        static readonly VK_ASTERISK: 151;
        static readonly VK_DOLLAR: 515;
        static readonly VK_PAUSE: 19;
        static readonly VK_FINAL: 24;
        static readonly VK_DEAD_SEMIVOICED_SOUND: 143;
        static readonly VK_PROPS: 65482;
        static readonly VK_RIGHT_PARENTHESIS: 522;
        static readonly VK_BEGIN: 65368;
        static readonly VK_DEAD_BREVE: 133;
        static readonly VK_DEAD_ABOVEDOT: 134;
        static readonly VK_CUT: 65489;
        static readonly VK_BACK_QUOTE: 192;
        static readonly VK_HOME: 36;
        static readonly VK_UNDO: 65483;
        static readonly VK_ESCAPE: 27;
        static readonly VK_F9: 120;
        static readonly VK_F8: 119;
        static readonly VK_F7: 118;
        static readonly VK_F6: 117;
        static readonly VK_EXCLAMATION_MARK: 517;
        static readonly VK_F5: 116;
        static readonly VK_F4: 115;
        static readonly VK_F3: 114;
        static readonly VK_HALF_WIDTH: 244;
        static readonly VK_F2: 113;
        static readonly VK_F1: 112;
        static readonly VK_GREATER: 160;
        static readonly VK_KATAKANA: 241;
        static readonly VK_INVERTED_EXCLAMATION_MARK: 518;
        static readonly VK_UP: 38;
        static readonly VK_SLASH: 47;
        static readonly VK_CONVERT: 28;
        static readonly VK_SUBTRACT: 109;
        static readonly VK_CODE_INPUT: 258;
        static readonly VK_KP_UP: 224;
        static readonly VK_EURO_SIGN: 516;
        static readonly KEY_LAST: 402;
        static readonly VK_DIVIDE: 111;
        static readonly KEY_TYPED: 400;
        static readonly VK_PAGE_UP: 33;
        static readonly VK_SEMICOLON: 59;
        static readonly VK_SEPARATOR: 108;
        static readonly VK_ADD: 107;
        static readonly KEY_PRESSED: 401;
        static readonly VK_2: 50;
        static readonly VK_3: 51;
        static readonly VK_4: 52;
        static readonly VK_5: 53;
        static readonly VK_6: 54;
        static readonly VK_ALPHANUMERIC: 240;
        static readonly VK_7: 55;
        static readonly VK_8: 56;
        static readonly VK_9: 57;
        static readonly VK_DEAD_DOUBLEACUTE: 137;
        static readonly VK_0: 48;
        static readonly VK_1: 49;
        static readonly VK_DEAD_CEDILLA: 139;
        static readonly VK_B: 66;
        static readonly VK_C: 67;
        static readonly VK_D: 68;
        static readonly VK_E: 69;
        static readonly VK_F: 70;
        static readonly VK_G: 71;
        static readonly VK_H: 72;
        static readonly VK_I: 73;
        static readonly VK_OPEN_BRACKET: 91;
        static readonly VK_HIRAGANA: 242;
        static readonly VK_A: 65;
        static readonly VK_JAPANESE_KATAKANA: 259;
        static readonly VK_NUM_LOCK: 144;
        static readonly VK_AT: 512;
        static readonly VK_UNDERSCORE: 523;
        static readonly VK_KP_DOWN: 225;
        static readonly VK_BACK_SPACE: 8;
        static readonly VK_CLEAR: 12;
        static readonly VK_DELETE: 127;
        static readonly VK_DEAD_VOICED_SOUND: 142;
        static readonly VK_MULTIPLY: 106;
        static readonly VK_SPACE: 32;
        static readonly VK_FULL_WIDTH: 243;
        static readonly VK_PAGE_DOWN: 34;
        static readonly VK_END: 35;
        static readonly CHAR_UNDEFINED: "￿";
        static readonly KEY_LOCATION_LEFT: 2;
        static readonly VK_DOWN: 40;
        static readonly VK_DEAD_CIRCUMFLEX: 130;
        static readonly VK_EQUALS: 61;
        static readonly VK_JAPANESE_ROMAN: 261;
        static readonly VK_PERIOD: 46;
        static readonly VK_F12: 123;
        static readonly VK_F11: 122;
        static readonly VK_F14: 61441;
        static readonly VK_F13: 61440;
        static readonly VK_COMPOSE: 65312;
        static readonly VK_DEAD_ACUTE: 129;
        static readonly VK_F10: 121;
        static readonly VK_DEAD_DIAERESIS: 135;
        static readonly VK_PRINTSCREEN: 154;
        static readonly VK_R: 82;
        static readonly VK_DEAD_ABOVERING: 136;
        static readonly VK_S: 83;
        static readonly VK_T: 84;
        static readonly VK_U: 85;
        static readonly VK_PREVIOUS_CANDIDATE: 257;
        static readonly VK_V: 86;
        static readonly VK_W: 87;
        static readonly VK_X: 88;
        static readonly VK_Y: 89;
        static readonly VK_J: 74;
        static readonly VK_K: 75;
        static readonly VK_F19: 61446;
        static readonly VK_L: 76;
        static readonly VK_M: 77;
        static readonly VK_N: 78;
        static readonly VK_F16: 61443;
        static readonly VK_O: 79;
        static readonly VK_F15: 61442;
        static readonly VK_P: 80;
        static readonly VK_F18: 61445;
        static readonly VK_Q: 81;
        static readonly VK_F17: 61444;
        static readonly KEY_LOCATION_NUMPAD: 4;
        static readonly VK_F23: 61450;
        static readonly KEY_FIRST: 400;
        static readonly VK_F22: 61449;
        static readonly KEY_LOCATION_UNKNOWN: 0;
        static readonly VK_F24: 61451;
        static readonly VK_DEAD_TILDE: 131;
        static readonly KEY_LOCATION_RIGHT: 3;
        static readonly VK_DEAD_GRAVE: 128;
        static readonly VK_F21: 61448;
        static readonly VK_F20: 61447;
        static readonly VK_CONTROL: 17;
        static readonly VK_Z: 90;
        static readonly VK_QUOTE: 222;
        static readonly VK_KANA_LOCK: 262;
        static readonly VK_KP_RIGHT: 227;
        static readonly VK_NUMBER_SIGN: 520;
        static readonly VK_KP_LEFT: 226;
        static readonly VK_ENTER: 10;
        static readonly VK_DEAD_OGONEK: 140;
        static readonly VK_CONTEXT_MENU: 525;
        static readonly VK_KANJI: 25;
        static readonly VK_NONCONVERT: 29;
        static readonly VK_COMMA: 44;
        static readonly VK_DECIMAL: 110;
        static readonly VK_FIND: 65488;
        static readonly VK_DEAD_IOTA: 141;
        static readonly VK_SHIFT: 16;
        static readonly VK_MODECHANGE: 31;
        static readonly VK_BACK_SLASH: 92;
        static readonly VK_ROMAN_CHARACTERS: 245;
        static readonly VK_DEAD_MACRON: 132;
        static readonly VK_SEPARATER: 108;
        static readonly VK_MINUS: 45;
        static readonly VK_SCROLL_LOCK: 145;
        static readonly VK_PASTE: 65487;
        static readonly KEY_LOCATION_STANDARD: 1;
        static readonly VK_NUMPAD7: 103;
        static readonly VK_AGAIN: 65481;
        static readonly VK_NUMPAD8: 104;
        static readonly VK_NUMPAD9: 105;
        static readonly VK_LEFT: 37;
        static readonly VK_DEAD_CARON: 138;
        static readonly VK_TAB: 9;
        static readonly VK_INPUT_METHOD_ON_OFF: 263;
        static readonly VK_CLOSE_BRACKET: 93;
        static readonly VK_INSERT: 155;
        static readonly VK_ALT: 18;
        static readonly VK_ACCEPT: 30;
        static readonly VK_JAPANESE_HIRAGANA: 260;
        static readonly VK_STOP: 65480;
        static readonly VK_META: 157;
        static readonly VK_BRACELEFT: 161;
        get keyCode(): number;
        get keyLocation(): number;
        get actionKey(): boolean;
        get keyChar(): string;
        get extendedKeyCode(): number;
        set keyCode(arg0: number);
        set keyChar(arg0: string);
        set modifiers(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: string);
        constructor(arg0: Internal.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: string, arg6: number);
        constructor(arg0: Internal.Component, arg1: number, arg2: number, arg3: number, arg4: number);
    }
    type KeyEvent_ = KeyEvent;
    interface BinaryOperator <T> extends Internal.BiFunction<T, T, T> {
    }
    type BinaryOperator_<T> = BinaryOperator<T>;
    class BlockRenderType extends Internal.Enum<Internal.BlockRenderType> {
        static valueOf(arg0: string): Internal.BlockRenderType;
        static values(): Internal.BlockRenderType[];
        static readonly INVISIBLE: Internal.BlockRenderType;
        static readonly MODEL: Internal.BlockRenderType;
        static readonly ENTITYBLOCK_ANIMATED: Internal.BlockRenderType;
    }
    type BlockRenderType_ = "invisible" | "entityblock_animated" | "model" | BlockRenderType;
    class ArrayList <E> extends Internal.AbstractList<E> implements Internal.List<E>, Internal.RandomAccess, Internal.Cloneable, Internal.Serializable {
        subList(arg0: number, arg1: number): Internal.List<E>;
        trimToSize(): void;
        set(arg0: number, arg1: E): E;
        spliterator(): Internal.Spliterator<E>;
        removeLast(): E;
        getLast(): E;
        remove(arg0: number): E;
        iterator(): Internal.Iterator<E>;
        stream(): Internal.Stream<E>;
        getFirst(): E;
        removeFirst(): E;
        get(arg0: number): E;
        toArray<T_>(arg0: T_[]): T_[];
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        clone(): any;
        listIterator(arg0: number): Internal.ListIterator<E>;
        listIterator(): Internal.ListIterator<E>;
        parallelStream(): Internal.Stream<E>;
        ensureCapacity(arg0: number): void;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<E>;
        get last(): E;
        get first(): E;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Collection<E>);
        constructor();
        constructor(arg0: number);
    }
    type ArrayList_<E> = ArrayList<E>;
    class Enchantment$Rarity extends Internal.Enum<Internal.Enchantment$Rarity> {
        static valueOf(arg0: string): Internal.Enchantment$Rarity;
        static values(): Internal.Enchantment$Rarity[];
        func_185270_a(): number;
        static readonly RARE: Internal.Enchantment$Rarity;
        static readonly VERY_RARE: Internal.Enchantment$Rarity;
        static readonly UNCOMMON: Internal.Enchantment$Rarity;
        static readonly COMMON: Internal.Enchantment$Rarity;
    }
    type Enchantment$Rarity_ = "common" | "uncommon" | "rare" | "very_rare" | Enchantment$Rarity;
    class BonusChestFeature extends Internal.Feature<Internal.NoFeatureConfig> {
        func_241855_a(arg0: Internal.ISeedReader, arg1: Internal.ChunkGenerator, arg2: Internal.Random, arg3: BlockPos, arg4: Internal.NoFeatureConfig): boolean;
        setRegistryName(arg0: ResourceLocation_): any;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<Internal.NoFeatureConfig>);
    }
    type BonusChestFeature_ = BonusChestFeature;
    class EntityTrackingEvent extends Internal.EntityEvent {
        static onEntityTracking(arg0: Internal.Entity, arg1: boolean): void;
        isUpdating(): boolean;
        get updating(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type EntityTrackingEvent_ = EntityTrackingEvent;
    abstract class ForgeRegistryEntry <V> extends Document.Object implements Internal.IForgeRegistryEntry<V> {
        getRegistryType(): Internal.Class<V>;
        getRegistryName(): ResourceLocation;
        setRegistryName(arg0: string, arg1: string): V;
        setRegistryName(arg0: ResourceLocation_): any;
        setRegistryName(arg0: ResourceLocation_): V;
        setRegistryName(arg0: string): V;
        readonly delegate: Internal.IRegistryDelegate<V>;
        get registryType(): Internal.Class<V>;
        get registryName(): ResourceLocation;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ForgeRegistryEntry_<V> = ForgeRegistryEntry<V>;
    class NoFeatureConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236558_a_: Internal.Codec<Internal.NoFeatureConfig>;
        static readonly field_236559_b_: Internal.NoFeatureConfig;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type NoFeatureConfig_ = NoFeatureConfig;
    class CoatColors extends Internal.Enum<Internal.CoatColors> {
        static valueOf(arg0: string): Internal.CoatColors;
        static values(): Internal.CoatColors[];
        func_234253_a_(): number;
        static func_234254_a_(arg0: number): Internal.CoatColors;
        static readonly WHITE: Internal.CoatColors;
        static readonly GRAY: Internal.CoatColors;
        static readonly CHESTNUT: Internal.CoatColors;
        static readonly BLACK: Internal.CoatColors;
        static readonly DARKBROWN: Internal.CoatColors;
        static readonly BROWN: Internal.CoatColors;
        static readonly CREAMY: Internal.CoatColors;
    }
    type CoatColors_ = "white" | "creamy" | "chestnut" | "brown" | "black" | "gray" | "darkbrown" | CoatColors;
    interface BTEBeeAccessor {
        getTicksInHive(): number;
        (): number;
    }
    type BTEBeeAccessor_ = (()=>number) | BTEBeeAccessor;
    abstract class MonsterEntity extends Internal.CreatureEntity implements Internal.IMob {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        static func_223323_a(arg0: Internal.IServerWorld_, arg1: BlockPos, arg2: Internal.Random): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        static func_223325_c(arg0: Internal.EntityType_<Internal.MonsterEntity_>, arg1: Internal.IServerWorld_, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        static func_223324_d(arg0: Internal.EntityType_<Internal.MonsterEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        func_230292_f_(arg0: Internal.PlayerEntity): boolean;
        static func_234295_eP_(): Internal.AttributeModifierMap$MutableAttribute;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type MonsterEntity_ = MonsterEntity;
    abstract class AnimalEntity extends Internal.AgeableEntity implements Internal.AnimalEntityAccessor {
        shouldRiderSit(): boolean;
        func_70880_s(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_191993_do(): Internal.ServerPlayerEntity;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        static func_223316_b(arg0: Internal.EntityType_<Internal.AnimalEntity_>, arg1: Internal.IWorld, arg2: Internal.SpawnReason_, arg3: BlockPos, arg4: Internal.Random): boolean;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_234178_eO_(): number;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        func_234177_a_(arg0: Internal.ServerWorld, arg1: Internal.AnimalEntity): void;
        hasCooldown(): boolean;
        func_70875_t(): void;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        asKJS(): any;
        func_146082_f(arg0: Internal.PlayerEntity): void;
        canRiderInteract(): boolean;
        func_70877_b(arg0: Internal.ItemStack): boolean;
        func_204700_e(arg0: number): void;
        setLove(arg0: number): void;
        func_70878_b(arg0: Internal.AnimalEntity): boolean;
        func_204701_dC(): boolean;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_230254_b_(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        getClassification(arg0: boolean): Internal.EntityClassification;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get entity(): Internal.Entity;
        set love(arg0: number);
    }
    type AnimalEntity_ = AnimalEntity;
    interface CrystalPropertyModifierFunction {
        modify(arg0: number, arg1: number, arg2: number, arg3: Internal.CalculationContext): number;
        (arg0: number, arg1: number, arg2: number, arg3: Internal.CalculationContext): number;
    }
    type CrystalPropertyModifierFunction_ = ((arg0: number, arg1: number, arg2: number, arg3: Internal.CalculationContext)=>number) | CrystalPropertyModifierFunction;
    class ItemLeftClickEventJS extends Internal.PlayerEventJS {
        getItem(): Internal.ItemStackJS;
        get item(): Internal.ItemStackJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(player: Internal.PlayerEntity, hand: Hand);
    }
    type ItemLeftClickEventJS_ = ItemLeftClickEventJS;
    class DamageSource extends Document.Object {
        func_76348_h(): Internal.DamageSource;
        func_180136_u(): boolean;
        func_94540_d(): Internal.DamageSource;
        func_76346_g(): Internal.Entity;
        func_82725_o(): boolean;
        func_94541_c(): boolean;
        func_82726_p(): Internal.DamageSource;
        func_76349_b(): Internal.DamageSource;
        static func_188405_b(arg0: Internal.LivingEntity): Internal.DamageSource;
        static func_188403_a(arg0: Internal.Entity, arg1: Internal.LivingEntity): Internal.DamageSource;
        static func_226252_a_(arg0: Internal.LivingEntity): Internal.DamageSource;
        func_76347_k(): boolean;
        func_188404_v(): Vec3;
        static func_203096_a(arg0: Internal.Entity, arg1: Internal.Entity): Internal.DamageSource;
        static func_76358_a(arg0: Internal.LivingEntity): Internal.DamageSource;
        static func_76356_a(arg0: Internal.Entity, arg1: Internal.Entity): Internal.DamageSource;
        static func_233547_a_(arg0: Internal.AbstractFireballEntity, arg1: Internal.Entity): Internal.DamageSource;
        static func_233549_a_(arg0: Internal.WitherSkullEntity, arg1: Internal.Entity): Internal.DamageSource;
        static func_76354_b(arg0: Internal.Entity, arg1: Internal.Entity): Internal.DamageSource;
        func_76352_a(): boolean;
        static func_76353_a(arg0: Internal.AbstractArrowEntity, arg1: Internal.Entity): Internal.DamageSource;
        func_76355_l(): string;
        func_151518_m(): Internal.DamageSource;
        func_76359_i(): Internal.DamageSource;
        static func_94539_a(arg0: Internal.Explosion): Internal.DamageSource;
        func_76350_n(): boolean;
        func_76351_m(): Internal.DamageSource;
        func_76357_e(): boolean;
        func_151517_h(): boolean;
        static func_92087_a(arg0: Internal.Entity): Internal.DamageSource;
        func_151519_b(arg0: Internal.LivingEntity): Internal.ITextComponent;
        func_76361_j(): Internal.DamageSource;
        func_76345_d(): number;
        func_76364_f(): Internal.Entity;
        static func_233546_a_(): Internal.DamageSource;
        static func_233548_a_(arg0: Internal.FireworkRocketEntity, arg1: Internal.Entity): Internal.DamageSource;
        static func_76365_a(arg0: Internal.PlayerEntity): Internal.DamageSource;
        func_76363_c(): boolean;
        static readonly field_76368_d: Internal.DamageSource;
        static readonly field_76366_f: Internal.DamageSource;
        static readonly field_220302_v: Internal.DamageSource;
        static readonly field_188406_j: Internal.DamageSource;
        static readonly field_76380_i: Internal.DamageSource;
        static readonly field_190095_e: Internal.DamageSource;
        static readonly field_76376_m: Internal.DamageSource;
        static readonly field_82727_n: Internal.DamageSource;
        static readonly field_76379_h: Internal.DamageSource;
        static readonly field_76377_j: Internal.DamageSource;
        readonly field_76373_n: string;
        static readonly field_82728_o: Internal.DamageSource;
        static readonly field_76369_e: Internal.DamageSource;
        static readonly field_76367_g: Internal.DamageSource;
        static readonly field_82729_p: Internal.DamageSource;
        static readonly field_205132_u: Internal.DamageSource;
        static readonly field_191291_g: Internal.DamageSource;
        static readonly field_180137_b: Internal.DamageSource;
        static readonly field_76371_c: Internal.DamageSource;
        static readonly field_76372_a: Internal.DamageSource;
        static readonly field_76370_b: Internal.DamageSource;
        static readonly field_188407_q: Internal.DamageSource;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type DamageSource_ = "inFire" | "lightningBolt" | "onFire" | "lava" | "hotFloor" | "inWall" | "cramming" | "drown" | "starve" | "cactus" | "fall" | "flyIntoWall" | "outOfWorld" | "generic" | "magic" | "wither" | "anvil" | "fallingBlock" | "dragonBreath" | "dryout" | "sweetBerryBush" | DamageSource;
    interface Structure$IStartFactory <C> {
        create(arg0: net.minecraft.world.gen.feature.structure.Structure_<C>, arg1: number, arg2: number, arg3: Internal.MutableBoundingBox, arg4: number, arg5: number): Internal.StructureStart<C>;
        (arg0: net.minecraft.world.gen.feature.structure.Structure<C>, arg1: number, arg2: number, arg3: Internal.MutableBoundingBox, arg4: number, arg5: number): Internal.StructureStart<C>;
    }
    type Structure$IStartFactory_<C> = ((arg0: net.minecraft.world.gen.feature.structure.Structure<C>, arg1: number, arg2: number, arg3: Internal.MutableBoundingBox, arg4: number, arg5: number)=>Internal.StructureStart<C>) | Structure$IStartFactory<C>;
    class IntOpenHashSet extends Internal.AbstractIntSet implements Internal.Serializable, Internal.Cloneable, Internal.Hash {
        iterator(): Internal.Iterator<any>;
        trim(): boolean;
        trim(arg0: number): boolean;
        spliterator(): Internal.Spliterator<number>;
        stream(): Internal.Stream<number>;
        forEach(arg0: Internal.Consumer_<number>): void;
        forEach(arg0: Internal.IntConsumer_): void;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        clone(): any;
        clone(): Internal.IntOpenHashSet;
        parallelStream(): Internal.Stream<number>;
        removeIf(arg0: Internal.Predicate_<number>): boolean;
        removeIf(arg0: Internal.IntPredicate_): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Iterator<any>);
        constructor(arg0: Internal.Iterator<any>, arg1: number);
        constructor(arg0: Internal.IntIterator);
        constructor(arg0: Internal.IntIterator, arg1: number);
        constructor(arg0: number[]);
        constructor(arg0: number[], arg1: number);
        constructor(arg0: number[], arg1: number, arg2: number);
        constructor(arg0: number[], arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.Collection<number>, arg1: number);
        constructor();
        constructor(arg0: number);
        constructor(arg0: number, arg1: number);
        constructor(arg0: Internal.IntCollection);
        constructor(arg0: Internal.IntCollection, arg1: number);
        constructor(arg0: Internal.Collection<number>);
    }
    type IntOpenHashSet_ = IntOpenHashSet;
    class Goal$Flag extends Internal.Enum<Internal.Goal$Flag> {
        static valueOf(arg0: string): Internal.Goal$Flag;
        static values(): Internal.Goal$Flag[];
        static readonly TARGET: Internal.Goal$Flag;
        static readonly MOVE: Internal.Goal$Flag;
        static readonly LOOK: Internal.Goal$Flag;
        static readonly JUMP: Internal.Goal$Flag;
    }
    type Goal$Flag_ = "move" | "look" | "jump" | "target" | Goal$Flag;
    class GiftLootEventJS extends Internal.LootEventJS {
        addGift(id: ResourceLocation_, b: Internal.Consumer_<Internal.LootBuilder_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(c: Internal.Map<ResourceLocation, Internal.JsonElement>);
    }
    type GiftLootEventJS_ = GiftLootEventJS;
    class SceneBuildingUtil$VectorUtil extends Document.Object {
        of(arg0: number, arg1: number, arg2: number): Vec3;
        topOf(arg0: BlockPos): Vec3;
        topOf(arg0: number, arg1: number, arg2: number): Vec3;
        blockSurface(arg0: BlockPos, arg1: Internal.Direction_, arg2: number): Vec3;
        blockSurface(arg0: BlockPos, arg1: Internal.Direction_): Vec3;
        centerOf(arg0: BlockPos): Vec3;
        centerOf(arg0: number, arg1: number, arg2: number): Vec3;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SceneBuildingUtil);
    }
    type SceneBuildingUtil$VectorUtil_ = SceneBuildingUtil$VectorUtil;
    class BeeEntity$PollinateGoal extends Internal.BeeEntity$PassiveGoal {
        func_226503_k_(): boolean;
        func_226504_l_(): void;
        func_226507_o_(): Internal.Optional<BlockPos>;
        func_226500_a_(arg0: Internal.Predicate_<Internal.BlockState_>, arg1: number): Internal.Optional<BlockPos>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BeeEntity);
    }
    type BeeEntity$PollinateGoal_ = BeeEntity$PollinateGoal;
    class Sound$Type extends Internal.Enum<Internal.Sound$Type> {
        static valueOf(arg0: string): Internal.Sound$Type;
        static values(): Internal.Sound$Type[];
        static func_188704_a(arg0: string): Internal.Sound$Type;
        static readonly SOUND_EVENT: Internal.Sound$Type;
        static readonly FILE: Internal.Sound$Type;
    }
    type Sound$Type_ = "file" | "sound_event" | Sound$Type;
    class MegaJungleTrunkPlacer extends Internal.GiantTrunkPlacer {
        static readonly field_236901_b_: Internal.Codec<Internal.MegaJungleTrunkPlacer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type MegaJungleTrunkPlacer_ = MegaJungleTrunkPlacer;
    interface Object2ObjectFunction <K, V> extends it.unimi.dsi.fastutil.Function<K, V> {
        defaultReturnValue(arg0: V): void;
        defaultReturnValue(): V;
        get(arg0: any): V;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        (arg0: any): V;
    }
    type Object2ObjectFunction_<K, V> = ((arg0: any)=>V) | Object2ObjectFunction<K, V>;
    class PackMenuClient extends Document.Object {
        load(): void;
        static loadConfig(): void;
        hijackMenu(arg0: Internal.GuiOpenEvent): void;
        static folderPack: true;
        static panoramaFade: false;
        static slideshowDuration: 200;
        static readonly RESOURCE_PACK: Internal.File;
        static panoramaVariations: 1;
        static splashRotation: -20.0;
        static drawSplash: false;
        static title: Internal.PackMenuClient$Offset;
        static panoramaSpeed: 0.5;
        static javaEd: Internal.PackMenuClient$Offset;
        static drawJavaEd: false;
        static drawPanorama: true;
        static slideshowTextures: [];
        static logo: Internal.Logo;
        static splashAnchor: Internal.AnchorPoint;
        static readonly FOLDER_PACK: Internal.File;
        static forgeWarn: Internal.PackMenuClient$Offset;
        static drawTitle: false;
        static splashColor: -256;
        static readonly BUTTON_MANAGER: Internal.ButtonManager;
        static readonly PANORAMA_RESOURCES: Internal.VariedRenderSkyboxCube;
        static slideshowTransition: 20;
        static drawForgeInfo: false;
        static slideshow: false;
        static splash: Internal.PackMenuClient$Offset;
        static patreonUrl: "https://www.patreon.com/Shadows_of_Fire?fan_landing=true";
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PackMenuClient_ = PackMenuClient;
    class MetalPressRecipeJS extends Internal.IERecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MetalPressRecipeJS_ = MetalPressRecipeJS;
    class RenderType$OutlineState extends Internal.Enum<Internal.RenderType$OutlineState> {
        static valueOf(arg0: string): Internal.RenderType$OutlineState;
        static values(): Internal.RenderType$OutlineState[];
        static readonly IS_OUTLINE: Internal.RenderType$OutlineState;
        static readonly NONE: Internal.RenderType$OutlineState;
        static readonly AFFECTS_OUTLINE: Internal.RenderType$OutlineState;
    }
    type RenderType$OutlineState_ = "none" | "is_outline" | "affects_outline" | RenderType$OutlineState;
    class MainMenuScreen extends Internal.Screen {
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212927_b(arg0: number, arg1: number): void;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_231049_c__(arg0: boolean): boolean;
        func_73969_a(arg0: number, arg1: number): void;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        func_231048_c_(arg0: number, arg1: number, arg2: number): boolean;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        static func_213097_a(arg0: Internal.TextureManager, arg1: Internal.Executor_): Internal.CompletableFuture<void>;
        field_193979_N: number;
        static readonly field_110352_y: ResourceLocation;
        readonly field_213102_y: boolean;
        field_193978_M: number;
        static readonly field_213099_c: ResourceLocation;
        field_73973_d: net.minecraft.client.gui.widget.button.Button;
        readonly field_213101_e: boolean;
        static field_213098_a: Internal.RenderSkyboxCube;
        field_73975_c: string;
        static readonly field_213100_d: ResourceLocation;
        static readonly field_194400_H: ResourceLocation;
        field_183503_M: Internal.Screen;
        readonly field_209101_K: Internal.RenderSkybox;
        field_183502_L: boolean;
        field_213103_z: number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: boolean);
    }
    type MainMenuScreen_ = MainMenuScreen;
    interface IAngerable {
        func_233678_J__(): boolean;
        func_230256_F__(): number;
        func_70638_az(): Internal.LivingEntity;
        func_230246_e_(arg0: Internal.PlayerEntity): void;
        func_230258_H__(): void;
        func_241355_J__(): void;
        func_230260_a__(arg0: number): void;
        func_233682_c_(arg0: Internal.CompoundNBT_): void;
        func_233680_b_(arg0: Internal.LivingEntity): boolean;
        func_70624_b(arg0: Internal.LivingEntity): void;
        func_233681_b_(arg0: Internal.PlayerEntity): void;
        func_241359_a_(arg0: Internal.ServerWorld, arg1: boolean): void;
        func_241358_a_(arg0: Internal.ServerWorld, arg1: Internal.CompoundNBT_): void;
        func_70604_c(arg0: Internal.LivingEntity): void;
        func_241357_a_(arg0: Internal.World): boolean;
        func_230257_G__(): Internal.UUID;
        func_241356_K__(): void;
        func_230259_a_(arg0: Internal.UUID): void;
    }
    type IAngerable_ = IAngerable;
    class WriteBufferWaterMark extends Document.Object {
        high(): number;
        low(): number;
        static readonly DEFAULT: Internal.WriteBufferWaterMark;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
    }
    type WriteBufferWaterMark_ = WriteBufferWaterMark;
    abstract class Buffer extends Document.Object {
        hasArray(): boolean;
        hasRemaining(): boolean;
        clear(): Internal.Buffer;
        duplicate(): Internal.Buffer;
        remaining(): number;
        capacity(): number;
        isReadOnly(): boolean;
        rewind(): Internal.Buffer;
        slice(arg0: number, arg1: number): Internal.Buffer;
        slice(): Internal.Buffer;
        array(): any;
        limit(): number;
        limit(arg0: number): Internal.Buffer;
        arrayOffset(): number;
        reset(): Internal.Buffer;
        position(arg0: number): Internal.Buffer;
        position(): number;
        flip(): Internal.Buffer;
        isDirect(): boolean;
        mark(): Internal.Buffer;
        get direct(): boolean;
        get readOnly(): boolean;
    }
    type Buffer_ = Buffer;
    interface IReorderingProcessor {
        accept(arg0: Internal.ICharacterConsumer_): boolean;
        (arg0: Internal.ICharacterConsumer): boolean;
    }
    type IReorderingProcessor_ = ((arg0: Internal.ICharacterConsumer)=>boolean) | IReorderingProcessor;
    class EnderDragonEntity extends Internal.MobEntity implements Internal.IMob {
        shouldRiderSit(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_184663_l(arg0: number, arg1: number, arg2: number): number;
        foodEatenKJS(is: Internal.ItemStack): void;
        func_184670_cT(): Internal.PhaseManager;
        func_184666_a(arg0: number, arg1: number, arg2: Internal.PathPoint): net.minecraft.pathfinding.Path;
        func_213403_a(arg0: Internal.EnderDragonPartEntity, arg1: Internal.DamageSource_, arg2: number): boolean;
        func_184667_a(arg0: number, arg1: number[], arg2: number[]): number;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_184665_a(arg0: number): Vec3;
        func_82195_e(arg0: Internal.DamageSource_, arg1: number): boolean;
        hasCooldown(): boolean;
        func_213404_dT(): Internal.EnderDragonPartEntity[];
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        static func_234257_m_(): Internal.AttributeModifierMap$MutableAttribute;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        func_184664_cU(): Internal.DragonFightManager;
        func_184671_o(): number;
        func_184672_a(arg0: Internal.EnderCrystalEntity, arg1: BlockPos, arg2: Internal.DamageSource_): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70974_a(arg0: number, arg1: number): number[];
        getClassification(arg0: boolean): Internal.EntityClassification;
        field_70991_bC: number;
        field_70994_bF: boolean;
        field_70995_bG: number;
        static readonly field_184674_a: Internal.DataParameter<number>;
        field_70988_bD: number;
        field_226525_bB_: number;
        readonly field_70979_e: number[][];
        readonly field_70986_h: Internal.EnderDragonPartEntity;
        field_70976_f: number;
        field_70992_bH: Internal.EnderCrystalEntity;
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EntityType<Internal.EnderDragonEntity>, arg1: Internal.World);
    }
    type EnderDragonEntity_ = EnderDragonEntity;
    interface ITimerCallback <T> {
        func_212869_a_(arg0: T, arg1: Internal.TimerCallbackManager<T>, arg2: number): void;
        (arg0: T, arg1: Internal.TimerCallbackManager<T>, arg2: number): void;
    }
    type ITimerCallback_<T> = ((arg0: T, arg1: Internal.TimerCallbackManager<T>, arg2: number)=>void) | ITimerCallback<T>;
    interface Function9 <T1, T2, T3, T4, T5, T6, T7, T8, T9, R> {
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.BiFunction<T8, T9, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function<T9, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function4<T6, T7, T8, T9, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function3<T7, T8, T9, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function6<T4, T5, T6, T7, T8, T9, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function5<T5, T6, T7, T8, T9, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function7<T3, T4, T5, T6, T7, T8, T9, R>>;
        curry(): Internal.Function<T1, Internal.Function8<T2, T3, T4, T5, T6, T7, T8, T9, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9): R;
    }
    type Function9_<T1, T2, T3, T4, T5, T6, T7, T8, T9, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9)=>R) | Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, R>;
    class RoundingMode extends Internal.Enum<Internal.RoundingMode> {
        static valueOf(arg0: string): Internal.RoundingMode;
        static valueOf(arg0: number): Internal.RoundingMode;
        static values(): Internal.RoundingMode[];
        static readonly DOWN: Internal.RoundingMode;
        static readonly FLOOR: Internal.RoundingMode;
        static readonly UNNECESSARY: Internal.RoundingMode;
        static readonly CEILING: Internal.RoundingMode;
        static readonly HALF_EVEN: Internal.RoundingMode;
        static readonly UP: Internal.RoundingMode;
        static readonly HALF_UP: Internal.RoundingMode;
        static readonly HALF_DOWN: Internal.RoundingMode;
    }
    type RoundingMode_ = "up" | "down" | "ceiling" | "floor" | "half_up" | "half_down" | "half_even" | "unnecessary" | RoundingMode;
    abstract class Struct extends Internal.Pointer$Default {
        sizeof(): number;
        isNull(arg0: number): boolean;
        clear(): void;
        free(): void;
    }
    type Struct_ = Struct;
    class ServerWorldJS extends Internal.WorldJS {
        getSeed(): number;
        getPlayerData(player: Internal.PlayerEntity): Internal.ServerPlayerDataJS;
        getEntities(filter: string): Internal.EntityArrayList;
        setLocalTime(time: number): void;
        setTime(time: number): void;
        readonly persistentData: Internal.CompoundNBT;
        get seed(): number;
        set localTime(time: number);
        set time(time: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(s: Internal.ServerJS, w: Internal.ServerWorld);
    }
    type ServerWorldJS_ = ServerWorldJS;
    class WorldgenRemoveEventJSForge extends Internal.WorldgenRemoveEventJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(e: Internal.BiomeLoadingEvent);
    }
    type WorldgenRemoveEventJSForge_ = WorldgenRemoveEventJSForge;
    class BellTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity, Internal.IBellConnection {
        requestModelDataUpdate(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        getConnected(): Internal.IBellConnection$BellConnection;
        getTileEntity(): Internal.TileEntity;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        onLoad(): void;
        func_73660_a(): void;
        func_213939_a(arg0: Internal.Direction_): void;
        setConnected(arg0: Internal.IBellConnection$BellConnection_): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        field_213943_a: number;
        connection: Internal.IBellConnection$BellConnection;
        field_213944_b: boolean;
        field_213945_c: Internal.Direction;
        get connected(): Internal.IBellConnection$BellConnection;
        get modelData(): Internal.IModelData;
        get tileEntity(): Internal.TileEntity;
        set connected(arg0: Internal.IBellConnection$BellConnection_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BellTileEntity_ = BellTileEntity;
    class CPlayerPacket extends Document.Object implements Internal.IPacket<Internal.IServerPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IServerPlayNetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_186996_b(arg0: number): number;
        func_186997_a(arg0: number): number;
        func_186999_a(arg0: number): number;
        func_186998_b(arg0: number): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_187000_c(arg0: number): number;
        func_149465_i(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: boolean);
    }
    type CPlayerPacket_ = CPlayerPacket;
    class InputMappings$Type extends Internal.Enum<Internal.InputMappings$Type> {
        static valueOf(arg0: string): Internal.InputMappings$Type;
        static values(): Internal.InputMappings$Type[];
        func_197944_a(arg0: number): Internal.InputMappings$Input;
        static readonly SCANCODE: Internal.InputMappings$Type;
        static readonly MOUSE: Internal.InputMappings$Type;
        static readonly KEYSYM: Internal.InputMappings$Type;
    }
    type InputMappings$Type_ = "keysym" | "scancode" | "mouse" | InputMappings$Type;
    interface AccessorWitherEntity {
        botania_getHeadX(arg0: number): number;
        botania_getHeadY(arg0: number): number;
        botania_getHeadZ(arg0: number): number;
    }
    type AccessorWitherEntity_ = AccessorWitherEntity;
    class BooleanProperty extends Internal.TeamProperty<boolean> {
        toNBT(arg0: boolean): Internal.INBT;
        fromNBT(arg0: Internal.INBT): Internal.Optional<boolean>;
        getType(): Internal.TeamPropertyType<boolean>;
        fromString(arg0: string): Internal.Optional<boolean>;
        get type(): Internal.TeamPropertyType<boolean>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: boolean);
        constructor(arg0: ResourceLocation, arg1: Internal.PacketBuffer);
    }
    type BooleanProperty_ = BooleanProperty;
    abstract class UserListEntry <T> extends Document.Object {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: T);
    }
    type UserListEntry_<T> = UserListEntry<T>;
    class NopProcessor extends Internal.StructureProcessor {
        static readonly field_237097_a_: Internal.Codec<Internal.NopProcessor>;
        static readonly field_215199_a: Internal.NopProcessor;
    }
    type NopProcessor_ = NopProcessor;
    class IRenderTypeBuffer$Impl extends Document.Object implements Internal.IRenderTypeBuffer {
        func_228462_a_(arg0: Internal.RenderType): void;
        func_228461_a_(): void;
        getBuffer(arg0: Internal.RenderType): Internal.IVertexBuilder;
    }
    type IRenderTypeBuffer$Impl_ = IRenderTypeBuffer$Impl;
    interface IntStream$Builder extends Internal.IntConsumer {
        add(arg0: number): Internal.IntStream$Builder;
        build(): Internal.IntStream;
        accept(arg0: number): void;
    }
    type IntStream$Builder_ = IntStream$Builder;
    interface GameProfileRepository {
        findProfilesByNames(arg0: string[], arg1: Internal.Agent, arg2: Internal.ProfileLookupCallback): void;
        (arg0: string[], arg1: Internal.Agent, arg2: Internal.ProfileLookupCallback): void;
    }
    type GameProfileRepository_ = ((arg0: string[], arg1: Internal.Agent, arg2: Internal.ProfileLookupCallback)=>void) | GameProfileRepository;
    class PacketBuffer extends Internal.ByteBuf implements Internal.IForgePacketBuffer {
        writeItemStack(arg0: Internal.ItemStack, arg1: boolean): Internal.PacketBuffer;
        func_179258_d(): Internal.ITextComponent;
        func_150791_c(): Internal.ItemStack;
        func_150793_b(): Internal.CompoundNBT;
        func_211400_a(arg0: string, arg1: number): Internal.PacketBuffer;
        readRegistryId<T_>(): T_;
        func_244272_a(arg0: Internal.NBTSizeTracker): Internal.CompoundNBT;
        func_240629_a_<T_>(arg0: Internal.Codec<T_>, arg1: T_): void;
        writeRegistryIdUnsafe(arg0: Internal.IForgeRegistry<any>, arg1: ResourceLocation_): void;
        writeRegistryIdUnsafe<T_>(arg0: Internal.IForgeRegistry<T_>, arg1: T_): void;
        func_218668_a(arg0: Internal.BlockRayTraceResult): void;
        func_218667_g(): Internal.SectionPos;
        func_179249_a(arg0: Internal.Enum<any>): Internal.PacketBuffer;
        func_189423_a(arg0: number[], arg1: number): number[];
        func_189425_b(arg0: number): number[];
        func_150789_c(arg0: number): string;
        touch(): Internal.ReferenceCounted;
        touch(arg0: any): Internal.ReferenceCounted;
        func_192572_a(arg0: ResourceLocation_): Internal.PacketBuffer;
        readRegistryIdUnsafe<T_>(arg0: Internal.IForgeRegistry<T_>): T_;
        func_150787_b(arg0: number): Internal.PacketBuffer;
        func_192574_a(arg0: Internal.Date): Internal.PacketBuffer;
        func_218669_q(): Internal.BlockRayTraceResult;
        func_179250_a(arg0: number[]): Internal.PacketBuffer;
        func_179252_a(arg0: Internal.UUID): Internal.PacketBuffer;
        func_240628_a_<T_>(arg0: Internal.Codec<T_>): T_;
        static func_150790_a(arg0: number): number;
        func_180714_a(arg0: string): Internal.PacketBuffer;
        func_179256_a(arg0: Internal.ITextComponent_): Internal.PacketBuffer;
        func_179254_b(arg0: number): Internal.PacketBuffer;
        func_186873_b(arg0: number[]): number[];
        func_179253_g(): Internal.UUID;
        getBuffer(): Internal.PacketBuffer;
        func_186875_a(arg0: number[]): Internal.PacketBuffer;
        func_150792_a(): number;
        readFluidStack(): Internal.FluidStack;
        func_179259_c(): BlockPos;
        retain(): Internal.ReferenceCounted;
        retain(arg0: number): Internal.ReferenceCounted;
        readRegistryIdSafe<T_>(arg0: Internal.Class<T_>): T_;
        func_179260_f(): number;
        func_218666_n(): string;
        func_186863_b(): number[];
        func_186865_a(arg0: number[]): Internal.PacketBuffer;
        func_150786_a(arg0: Internal.CompoundNBT_): Internal.PacketBuffer;
        func_189424_c(arg0: number): number[];
        writeRegistryId<T_>(arg0: T_): void;
        func_150788_a(arg0: Internal.ItemStack): Internal.PacketBuffer;
        writeFluidStack(arg0: Internal.FluidStack): void;
        func_244273_m(): Internal.CompoundNBT;
        func_192575_l(): ResourceLocation;
        func_192573_m(): Internal.Date;
        func_179257_a<T_>(arg0: Internal.Class<T_>): T_;
        func_179251_a(): number[];
        func_179255_a(arg0: BlockPos): Internal.PacketBuffer;
        get buffer(): Internal.PacketBuffer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ByteBuf);
    }
    type PacketBuffer_ = PacketBuffer;
    class IntegratedServer extends Internal.MinecraftServer {
        func_71260_j(): void;
        func_213141_a<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Source_>, Internal.TickDelayedTask_>): Internal.CompletableFuture<Source_>;
        func_211527_b(arg0: Internal.UUID): void;
        func_71197_b(): boolean;
        func_71228_a(arg0: Internal.CrashReport): void;
        func_71217_p(arg0: Internal.BooleanSupplier_): void;
        func_233528_c_<Source_>(arg0: Internal.Function_<Internal.ITaskExecutor_<Internal.Either_<Source_, Internal.Exception_>>, Internal.TickDelayedTask_>): Internal.CompletableFuture<Source_>;
        asKJS(): any;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Thread, arg1: Internal.Minecraft, arg2: Internal.DynamicRegistries$Impl, arg3: Internal.SaveFormat$LevelSave, arg4: Internal.ResourcePackList, arg5: Internal.DataPackRegistries, arg6: Internal.IServerConfiguration, arg7: Internal.MinecraftSessionService, arg8: Internal.GameProfileRepository, arg9: Internal.PlayerProfileCache, arg10: any);
    }
    type IntegratedServer_ = IntegratedServer;
    class AudioFormat extends Document.Object {
        getEncoding(): Internal.AudioFormat$Encoding;
        getFrameSize(): number;
        getProperty(arg0: string): any;
        getSampleRate(): number;
        getChannels(): number;
        getSampleSizeInBits(): number;
        isBigEndian(): boolean;
        getFrameRate(): number;
        matches(arg0: Internal.AudioFormat): boolean;
        properties(): Internal.Map<string, any>;
        get bigEndian(): boolean;
        get frameRate(): number;
        get frameSize(): number;
        get channels(): number;
        get sampleSizeInBits(): number;
        get encoding(): Internal.AudioFormat$Encoding;
        get sampleRate(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: boolean, arg4: boolean);
        constructor(arg0: Internal.AudioFormat$Encoding, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: Internal.Map<string, any>);
        constructor(arg0: Internal.AudioFormat$Encoding, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean);
    }
    type AudioFormat_ = AudioFormat;
    interface AttributeMap {
        hasAttr<T>(arg0: Internal.AttributeKey<T>): boolean;
        attr<T>(arg0: Internal.AttributeKey<T>): Internal.Attribute<T>;
    }
    type AttributeMap_ = AttributeMap;
    abstract class AbstractFurnaceTileEntity extends Internal.LockableTileEntity implements Internal.ISidedInventory, Internal.IRecipeHolder, Internal.IRecipeHelperPopulator, Internal.ITickableTileEntity, Internal.AccessorAbstractFurnaceTileEntity, Internal.FurnaceTEAccess, vazkii.botania.mixin.AccessorAbstractFurnaceTileEntity {
        func_194018_a(arg0: Internal.RecipeItemHelper): void;
        setBurnTime(arg0: number): void;
        getCapability<T_>(arg0: Internal.Capability<T_>, arg1: Internal.Direction_): Internal.LazyOptional<T_>;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        setCookTime(arg0: number): void;
        func_213997_a(arg0: Internal.ItemStack): number;
        static func_214001_f(): Internal.Map<Internal.Item, number>;
        getCurrentCookTime(): number;
        func_73660_a(): void;
        func_145818_k_(): boolean;
        getItems(): Internal.NonNullList<any>;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getRecipeType(): Internal.IRecipeType<any>;
        getDataAccess(): Internal.IIntArray;
        func_174886_c(arg0: Internal.PlayerEntity): void;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        func_174889_b(arg0: Internal.PlayerEntity): void;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        func_235645_d_(arg0: Internal.PlayerEntity): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        requestModelDataUpdate(): void;
        func_213901_a(arg0: Internal.Item_): number;
        func_201560_d(arg0: Internal.PlayerEntity): void;
        func_235640_a_(arg0: Internal.World, arg1: Vec3): Internal.List<Internal.IRecipe<any>>;
        func_201561_a(arg0: Internal.World, arg1: Internal.ServerPlayerEntity, arg2: Internal.IRecipe<any>): boolean;
        func_213902_a(arg0: Internal.Set<Internal.Item>): boolean;
        func_70297_j_(): number;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        getCookTimeTotal(): number;
        func_180463_a(arg0: Internal.Direction_): number[];
        func_180462_a(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        func_180461_b(arg0: number, arg1: Internal.ItemStack, arg2: Internal.Direction_): boolean;
        botania_canSmelt(arg0: Internal.IRecipe<any>): boolean;
        redirect$bfd000$getRecipe(arg0: Internal.RecipeManager, arg1: Internal.IRecipeType<any>, arg2: Internal.IInventory, arg3: Internal.World): Internal.Optional<any>;
        getModelData(): Internal.IModelData;
        func_193056_a(arg0: Internal.IRecipe<any>): void;
        func_214006_r(): boolean;
        getBurnTime(): number;
        func_214007_c(arg0: Internal.IRecipe<any>): void;
        func_214008_b(arg0: Internal.IRecipe<any>): boolean;
        onLoad(): void;
        static func_213991_b(arg0: Internal.ItemStack): boolean;
        func_193055_i(): Internal.IRecipe<any>;
        readonly field_214014_c: Internal.IRecipeType<Internal.AbstractCookingRecipe>;
        field_214019_k: number;
        readonly field_214013_b: Internal.IIntArray;
        field_214018_j: number;
        static readonly field_214017_i: number[];
        static readonly field_214016_h: number[];
        readonly field_214022_n: Internal.Object2IntOpenHashMap<ResourceLocation>;
        static readonly field_214015_g: number[];
        field_214021_m: number;
        field_214020_l: number;
        get currentCookTime(): number;
        get dataAccess(): Internal.IIntArray;
        get modelData(): Internal.IModelData;
        get recipeType(): Internal.IRecipeType<any>;
        get burnTime(): number;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get items(): Internal.NonNullList<any>;
        get cookTimeTotal(): number;
        get tileEntity(): Internal.TileEntity;
        set burnTime(arg0: number);
        set cookTime(arg0: number);
    }
    type AbstractFurnaceTileEntity_ = AbstractFurnaceTileEntity;
    abstract class BMRecipeJS extends Internal.RecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type BMRecipeJS_ = BMRecipeJS;
    abstract class Point2D extends Document.Object implements Internal.Cloneable {
        getX(): number;
        getY(): number;
        static distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
        distance(arg0: Internal.Point2D): number;
        distance(arg0: number, arg1: number): number;
        setLocation(arg0: number, arg1: number): void;
        setLocation(arg0: Internal.Point2D): void;
        clone(): any;
        distanceSq(arg0: number, arg1: number): number;
        distanceSq(arg0: Internal.Point2D): number;
        static distanceSq(arg0: number, arg1: number, arg2: number, arg3: number): number;
        get x(): number;
        get y(): number;
        set location(arg0: Internal.Point2D);
    }
    type Point2D_ = Point2D;
    class RenderWorldLastEvent extends net.minecraftforge.eventbus.api.Event {
        getPartialTicks(): number;
        getProjectionMatrix(): Internal.Matrix4f;
        getFinishTimeNano(): number;
        getContext(): Internal.WorldRenderer;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get projectionMatrix(): Internal.Matrix4f;
        get context(): Internal.WorldRenderer;
        get finishTimeNano(): number;
        get partialTicks(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.WorldRenderer, arg1: Internal.MatrixStack, arg2: number, arg3: Internal.Matrix4f, arg4: number);
        constructor();
    }
    type RenderWorldLastEvent_ = RenderWorldLastEvent;
    interface SessionEventListener {
        onStartGameSession(arg0: Internal.GameSession): void;
        onLeaveGameSession(arg0: Internal.GameSession): void;
    }
    type SessionEventListener_ = SessionEventListener;
    class StarLightInterface extends Document.Object {
        blockChange(arg0: BlockPos): Internal.CompletableFuture<void>;
        getWorld(): Internal.World;
        removeChunkTasks(arg0: Internal.ChunkPos): void;
        checkBlockEdges(arg0: number, arg1: number, arg2: Internal.ShortCollection): void;
        checkBlockEdges(arg0: number, arg1: number): void;
        getSkyReader(): Internal.IWorldLightListener;
        checkChunkEdges(arg0: number, arg1: number): void;
        isClientSide(): boolean;
        relightChunks(arg0: Internal.Set<Internal.ChunkPos>, arg1: Internal.Consumer_<Internal.ChunkPos_>, arg2: Internal.IntConsumer_): void;
        scheduleChunkLight(arg0: Internal.ChunkPos, arg1: Internal.Runnable_): void;
        propagateChanges(): void;
        sectionChange(arg0: Internal.SectionPos, arg1: boolean): Internal.CompletableFuture<void>;
        forceLoadInChunk(arg0: Internal.IChunk, arg1: boolean[]): void;
        loadInChunk(arg0: number, arg1: number, arg2: boolean[]): void;
        lightChunk(arg0: Internal.IChunk, arg1: boolean[]): void;
        getLightAccess(): Internal.IChunkLightProvider;
        checkSkyEdges(arg0: number, arg1: number): void;
        checkSkyEdges(arg0: number, arg1: number, arg2: Internal.ShortCollection): void;
        getBlockReader(): Internal.IWorldLightListener;
        hasUpdates(): boolean;
        getAnyChunkNow(arg0: number, arg1: number): Internal.IChunk;
        static readonly CHUNK_WORK_TICKET: Internal.TicketType<Internal.ChunkPos>;
        get world(): Internal.World;
        get skyReader(): Internal.IWorldLightListener;
        get clientSide(): boolean;
        get lightAccess(): Internal.IChunkLightProvider;
        get blockReader(): Internal.IWorldLightListener;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IChunkLightProvider, arg1: boolean, arg2: boolean);
    }
    type StarLightInterface_ = StarLightInterface;
    class BlockWithContextConfig extends Document.Object implements Internal.IFeatureConfig {
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        static readonly field_236636_a_: Internal.Codec<Internal.BlockWithContextConfig>;
        readonly field_206924_a: Internal.BlockState;
        readonly field_206925_b: Internal.List<Internal.BlockState>;
        readonly field_206926_c: Internal.List<Internal.BlockState>;
        readonly field_206927_d: Internal.List<Internal.BlockState>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockState, arg1: Internal.List<Internal.BlockState>, arg2: Internal.List<Internal.BlockState>, arg3: Internal.List<Internal.BlockState>);
    }
    type BlockWithContextConfig_ = BlockWithContextConfig;
    class RegionRenderCacheBuilder extends Document.Object {
        func_228366_a_(arg0: Internal.RenderType): Internal.BufferBuilder;
        func_228367_b_(): void;
        func_228365_a_(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RegionRenderCacheBuilder_ = RegionRenderCacheBuilder;
    class MobSpawnerTileEntity extends Internal.TileEntity implements Internal.ITickableTileEntity {
        requestModelDataUpdate(): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        onLoad(): void;
        func_73660_a(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        func_145881_a(): Internal.AbstractSpawner;
        field_145882_a: Internal.AbstractSpawner;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MobSpawnerTileEntity_ = MobSpawnerTileEntity;
    class GasConversionRecipeJS extends Internal.MekanismRecipeJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type GasConversionRecipeJS_ = GasConversionRecipeJS;
    class RecipesGui extends Internal.Screen implements Internal.IRecipesGui, Internal.IShowsRecipeFocuses, Internal.IRecipeLogicStateListener {
        func_212927_b(arg0: number, arg1: number): void;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        show<V_>(arg0: Internal.IFocus<V_>): void;
        back(): void;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        func_231048_c_(arg0: number, arg1: number, arg2: number): boolean;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        showCategories(arg0: Internal.List<ResourceLocation>): void;
        isOpen(): boolean;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231049_c__(arg0: boolean): boolean;
        onStateChange(): void;
        canSetFocusWithMouse(): boolean;
        getIngredientUnderMouse(): any;
        getIngredientUnderMouse(arg0: number, arg1: number): Internal.IClickedIngredient<any>;
        getRecipeCatalystExtraWidth(): number;
        getArea(): Internal.Rectangle2d;
        get ingredientUnderMouse(): any;
        get area(): Internal.Rectangle2d;
        get recipeCatalystExtraWidth(): number;
        get open(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IRecipeManager, arg1: any, arg2: any, arg3: any, arg4: any);
    }
    type RecipesGui_ = RecipesGui;
    class MouseHelper extends Document.Object implements Internal.MouseHandlerFTBC {
        isMiddleDown(): boolean;
        func_198031_d(): boolean;
        func_241563_k_(): void;
        func_198030_b(): boolean;
        setMouseGrabbedFTBC(arg0: boolean): void;
        getXVelocity(): number;
        getYVelocity(): number;
        func_198035_h(): boolean;
        func_198034_i(): void;
        func_198026_f(): number;
        func_198029_a(arg0: number): void;
        func_198032_j(): void;
        func_198028_a(): void;
        func_198024_e(): number;
        func_198021_g(): void;
        get middleDown(): boolean;
        get xVelocity(): number;
        get yVelocity(): number;
        set mouseGrabbedFTBC(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type MouseHelper_ = MouseHelper;
    interface MobSpawnSettingsBuilderAccessor {
        getSpawners(): Internal.Map<Internal.EntityClassification, Internal.List<Internal.MobSpawnInfo$Spawners>>;
        setPlayerCanSpawn(arg0: boolean): void;
        getMobSpawnCosts(): Internal.Map<Internal.EntityType<any>, Internal.MobSpawnInfo$SpawnCosts>;
        isPlayerCanSpawn(): boolean;
    }
    type MobSpawnSettingsBuilderAccessor_ = MobSpawnSettingsBuilderAccessor;
    class AccessControlContext extends Document.Object {
        checkPermission(arg0: Internal.Permission): void;
        getDomainCombiner(): Internal.DomainCombiner;
        get domainCombiner(): Internal.DomainCombiner;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.AccessControlContext, arg1: Internal.DomainCombiner);
        constructor(arg0: Internal.ProtectionDomain[]);
    }
    type AccessControlContext_ = AccessControlContext;
    interface IMetadataSectionSerializer <T> {
        func_195812_a(arg0: Internal.JsonObject): T;
        func_110483_a(): string;
    }
    type IMetadataSectionSerializer_<T> = IMetadataSectionSerializer<T>;
    interface IParticleData$IDeserializer <T> {
        func_197543_b(arg0: Internal.ParticleType_<T>, arg1: Internal.PacketBuffer): T;
        func_197544_b(arg0: Internal.ParticleType_<T>, arg1: Internal.StringReader): T;
    }
    type IParticleData$IDeserializer_<T> = IParticleData$IDeserializer<T>;
    class RPConfig extends Document.Object implements Internal.ConfigData {
        validatePostLoad(): void;
        connectionTimeouts: Internal.RPConfig$ConnectionTimeouts;
        packetSizeLimits: Internal.RPConfig$PacketSizeLimits;
        client: Internal.RPConfig$Client;
        playerSpeedLimits: Internal.RPConfig$PlayerSpeedLimits;
        misc: Internal.RPConfig$Misc;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RPConfig_ = RPConfig;
    interface IParticleRenderType {
        func_217600_a(arg0: Internal.BufferBuilder, arg1: Internal.TextureManager): void;
        func_217599_a(arg0: Internal.Tessellator): void;
    }
    type IParticleRenderType_ = IParticleRenderType;
    class AttributeModifier extends Document.Object {
        func_111167_a(): Internal.UUID;
        func_111164_d(): number;
        func_111166_b(): string;
        static func_233800_a_(arg0: Internal.CompoundNBT_): Internal.AttributeModifier;
        func_220375_c(): Internal.AttributeModifier$Operation;
        func_233801_e_(): Internal.CompoundNBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.UUID, arg1: java_.util.function_.Supplier<string>, arg2: number, arg3: Internal.AttributeModifier$Operation);
        constructor(arg0: Internal.UUID, arg1: string, arg2: number, arg3: Internal.AttributeModifier$Operation);
        constructor(arg0: string, arg1: number, arg2: Internal.AttributeModifier$Operation);
    }
    type AttributeModifier_ = AttributeModifier;
    abstract class RecipeJS extends Document.Object {
        parseResultItemList(o: any): Internal.List<Internal.ItemStackJS>;
        ingredientAction(filter: Internal.IngredientActionFilter, action: Internal.IngredientAction): Internal.RecipeJS;
        convertReplacedInput(index: number, oldIngredient: Internal.IngredientJS_, newIngredient: Internal.IngredientJS_): Internal.IngredientJS;
        getUniqueId(): string;
        damageItem(filter: Internal.IngredientActionFilter): Internal.RecipeJS;
        damageItem(filter: Internal.IngredientActionFilter, damage: number): Internal.RecipeJS;
        replaceOutput(i: Internal.IngredientJS_, with_: Internal.ItemStackJS_, exact: boolean): boolean;
        replaceOutput(i: Internal.IngredientJS_, with_: Internal.ItemStackJS_, exact: boolean, func: Internal.BiFunction_<Internal.ItemStackJS_, Internal.ItemStackJS_, Internal.ItemStackJS_>): boolean;
        parseIngredientItemList(o: any): Internal.List<Internal.IngredientJS>;
        merge(data: any): Internal.RecipeJS;
        getPath(): string;
        create(arg0: Internal.ListJS): void;
        parseIngredientItemStackList(o: any): Internal.List<Internal.IngredientStackJS>;
        id(_id: ResourceLocation_): Internal.RecipeJS;
        parseIngredientItem(o: any, key: string): Internal.IngredientJS;
        parseIngredientItem(o: any): Internal.IngredientJS;
        group(g: string): Internal.RecipeJS;
        getOriginalRecipeResult(): Internal.ItemStackJS;
        getOriginalRecipeIngredients(): Internal.List<Internal.IngredientJS>;
        getInputIndex(ingredient: Internal.IngredientJS_, exact: boolean): number;
        setGroup(g: string): void;
        serialize(): void;
        replaceInput(i: Internal.IngredientJS_, with_: Internal.IngredientJS_, exact: boolean, func: Internal.BiFunction_<Internal.IngredientJS_, Internal.IngredientJS_, Internal.IngredientJS_>): boolean;
        replaceInput(i: Internal.IngredientJS_, with_: Internal.IngredientJS_, exact: boolean): boolean;
        getType(): string;
        getGroup(): string;
        keep(filter: Internal.IngredientActionFilter): Internal.RecipeJS;
        hasOutput(ingredient: Internal.IngredientJS_, exact: boolean): boolean;
        keepIngredient(filter: Internal.IngredientActionFilter): Internal.RecipeJS;
        customIngredientAction(filter: Internal.IngredientActionFilter, id: string): Internal.RecipeJS;
        getMod(): string;
        convertReplacedOutput(index: number, oldStack: Internal.ItemStackJS_, newStack: Internal.ItemStackJS_): Internal.ItemStackJS;
        save(): void;
        getJsonHashBytes(): number[];
        damageIngredient(filter: Internal.IngredientActionFilter, damage: number): Internal.RecipeJS;
        damageIngredient(filter: Internal.IngredientActionFilter): Internal.RecipeJS;
        getId(): string;
        dontAdd(): void;
        serializeJson(): void;
        createRecipe(): Internal.IRecipe<any>;
        getFromToString(): string;
        deserializeJson(): void;
        getOrCreateId(): ResourceLocation;
        deserialize(): void;
        serializeNBTAsJson(): boolean;
        getOutputIndex(ingredient: Internal.IngredientJS_, exact: boolean): number;
        set(data: any): Internal.RecipeJS;
        resultFromRecipeJson(json: Internal.JsonObject): Internal.ItemStackJS;
        serializeIngredientStack(in_: Internal.IngredientStackJS): Internal.JsonElement;
        stage(s: string): Internal.RecipeJS;
        serializeItemStack(stack: Internal.ItemStackJS_): Internal.JsonElement;
        replaceItem(filter: Internal.IngredientActionFilter, item: Internal.ItemStackJS_): Internal.RecipeJS;
        hasInput(ingredient: Internal.IngredientJS_, exact: boolean): boolean;
        parseResultItem(o: any): Internal.ItemStackJS;
        replaceIngredient(filter: Internal.IngredientActionFilter, item: Internal.ItemStackJS_): Internal.RecipeJS;
        static currentRecipe: Internal.RecipeJS;
        originalJson: Internal.JsonObject;
        serializeOutputs: boolean;
        originalRecipe: Internal.IRecipe<any>;
        readonly inputItems: Internal.List<Internal.IngredientJS>;
        static itemErrors: false;
        json: Internal.JsonObject;
        readonly outputItems: Internal.List<Internal.ItemStackJS>;
        type: Internal.RecipeTypeJS;
        serializeInputs: boolean;
        get path(): string;
        get originalRecipeIngredients(): Internal.List<Internal.IngredientJS>;
        get mod(): string;
        get jsonHashBytes(): number[];
        get originalRecipeResult(): Internal.ItemStackJS;
        get orCreateId(): ResourceLocation;
        get fromToString(): string;
        get uniqueId(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RecipeJS_ = RecipeJS;
    class FishingBobberEntity extends Internal.ProjectileEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_234607_k_(): Internal.Entity;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_146034_e(arg0: Internal.ItemStack): number;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_213281_b(arg0: Internal.CompoundNBT_): void;
        func_234606_i_(): Internal.PlayerEntity;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_234605_g_(): boolean;
        func_70037_a(arg0: Internal.CompoundNBT_): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        readonly field_191518_aw: number;
        readonly field_191519_ax: number;
        field_234597_c_: boolean;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PlayerEntity, arg1: Internal.World, arg2: number, arg3: number);
        constructor(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: number, arg3: number, arg4: number);
    }
    type FishingBobberEntity_ = FishingBobberEntity;
    class SimpleBlockPlacer extends Internal.BlockPlacer {
        static readonly field_236446_b_: Internal.Codec<Internal.SimpleBlockPlacer>;
        static readonly field_236447_c_: Internal.SimpleBlockPlacer;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type SimpleBlockPlacer_ = SimpleBlockPlacer;
    class IngameGui extends Internal.AbstractGui {
        func_212910_m(): void;
        func_184044_a(arg0: number, arg1: number, arg2: number, arg3: Internal.PlayerEntity, arg4: Internal.ItemStack): void;
        func_175179_f(): Internal.FontRenderer;
        func_175187_g(): Internal.SpectatorGui;
        func_73834_c(): number;
        func_73831_a(): void;
        func_244795_b(arg0: Internal.ITextComponent_): Internal.UUID;
        func_184046_j(): Internal.BossOverlayGui;
        func_238446_a_(arg0: Internal.MatrixStack, arg1: number): void;
        func_238445_a_(arg0: Internal.MatrixStack, arg1: number): void;
        func_238452_a_(arg0: Internal.ITextComponent_, arg1: Internal.ITextComponent_, arg2: number, arg3: number, arg4: number): void;
        func_238451_a_(arg0: Internal.ITextComponent_): void;
        func_238450_a_(arg0: Internal.ChatType_, arg1: Internal.ITextComponent_, arg2: Internal.UUID): void;
        func_181029_i(): void;
        func_238454_b_(arg0: Internal.MatrixStack, arg1: number): void;
        func_238453_b_(arg0: Internal.MatrixStack): void;
        func_146158_b(): Internal.NewChatGui;
        func_175181_h(): Internal.PlayerTabOverlayGui;
        func_175177_a(): void;
        func_175188_a(arg0: Internal.ITextComponent_, arg1: boolean): void;
        func_238455_c_(arg0: Internal.MatrixStack): void;
        field_73843_a: number;
        field_73838_g: Internal.ITextComponent;
        readonly field_184050_w: Internal.BossOverlayGui;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type IngameGui_ = IngameGui;
    interface FileNotFoundAction {
        run(arg0: Internal.Path, arg1: Internal.ConfigFormat<any>): boolean;
        (arg0: Internal.Path, arg1: Internal.ConfigFormat<any>): boolean;
    }
    type FileNotFoundAction_ = ((arg0: Internal.Path, arg1: Internal.ConfigFormat<any>)=>boolean) | FileNotFoundAction;
    class ModuleDescriptor$Requires extends Document.Object implements Internal.Comparable<Internal.ModuleDescriptor$Requires> {
        accessFlags(): Internal.Set<Internal.AccessFlag>;
        compiledVersion(): Internal.Optional<Internal.ModuleDescriptor$Version>;
        rawCompiledVersion(): Internal.Optional<string>;
        name(): string;
        compareTo(arg0: Internal.ModuleDescriptor$Requires): number;
        compareTo(arg0: any): number;
        modifiers(): Internal.Set<Internal.ModuleDescriptor$Requires$Modifier>;
    }
    type ModuleDescriptor$Requires_ = ModuleDescriptor$Requires;
    class ScheduledEvent extends Document.Object {
        reschedule(): void;
        reschedule(timer: number): Internal.ScheduledEvent;
        getServer(): Internal.ServerJS;
        getEndTime(): number;
        isUsingTicks(): boolean;
        getTimerDuration(): number;
        getTimer(): number;
        getData(): any;
        get server(): Internal.ServerJS;
        get timer(): number;
        get timerDuration(): number;
        get data(): any;
        get usingTicks(): boolean;
        get endTime(): number;
    }
    type ScheduledEvent_ = ScheduledEvent;
    abstract class BlockVoxelShape extends Internal.Enum<Internal.BlockVoxelShape> {
        func_241854_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        static valueOf(arg0: string): Internal.BlockVoxelShape;
        static values(): Internal.BlockVoxelShape[];
        static readonly CENTER: Internal.BlockVoxelShape;
        static readonly FULL: Internal.BlockVoxelShape;
        static readonly RIGID: Internal.BlockVoxelShape;
    }
    type BlockVoxelShape_ = "full" | "center" | "rigid" | BlockVoxelShape;
    class Products$P8 <F, T1, T2, T3, T4, T5, T6, T7, T8> extends Document.Object {
        t4(): Internal.App<F, T4>;
        t5(): Internal.App<F, T5>;
        t6(): Internal.App<F, T6>;
        t7(): Internal.App<F, T7>;
        t8(): Internal.App<F, T8>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.Function8_<T1, T2, T3, T4, T5, T6, T7, T8, R_>): Internal.App<F, R_>;
        apply<R_>(arg0: Internal.Applicative<F, any>, arg1: Internal.App<F, Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, R_>>): Internal.App<F, R_>;
        t1(): Internal.App<F, T1>;
        t2(): Internal.App<F, T2>;
        t3(): Internal.App<F, T3>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.App<F, T1>, arg1: Internal.App<F, T2>, arg2: Internal.App<F, T3>, arg3: Internal.App<F, T4>, arg4: Internal.App<F, T5>, arg5: Internal.App<F, T6>, arg6: Internal.App<F, T7>, arg7: Internal.App<F, T8>);
    }
    type Products$P8_<F, T1, T2, T3, T4, T5, T6, T7, T8> = Products$P8<F, T1, T2, T3, T4, T5, T6, T7, T8>;
    class RecipeManager extends Internal.JsonReloadListener implements Internal.RecipeManagerAccessor, Internal.AccessorRecipeManager, Internal.RecipeManagerKJS {
        func_215366_a<C_, T_>(arg0: Internal.IRecipeType<T_>): Internal.Map<ResourceLocation, Internal.IRecipe<C_>>;
        handler$ccj000$clearCache(arg0: Internal.Map_<any,any>, arg1: Internal.IResourceManager, arg2: Internal.IProfiler, arg3: Internal.CallbackInfo): void;
        static func_215377_a(arg0: ResourceLocation_, arg1: Internal.JsonObject): Internal.IRecipe<any>;
        func_215367_a(arg0: ResourceLocation_): Internal.Optional<Internal.IRecipe<any>>;
        customRecipesKJS(jsonMap: Internal.Map_<ResourceLocation_, Internal.JsonObject_>): void;
        func_215369_c<C_, T_>(arg0: Internal.IRecipeType<T_>, arg1: C_, arg2: Internal.World): Internal.NonNullList<Internal.ItemStack>;
        func_223389_a(arg0: Internal.Iterable_<Internal.IRecipe_<any>>): void;
        func_215378_c(): Internal.Stream<ResourceLocation>;
        botania_getRecipes(arg0: Internal.IRecipeType<any>): Internal.Map<any, any>;
        func_225594_i_(): string;
        setRecipesKJS(arg0: Internal.Map_<any,any>): void;
        func_215371_a(arg0: Internal.IRecipeType<any>, arg1: Internal.IInventory, arg2: Internal.World): Internal.Optional<any>;
        func_215370_b<C_, T_>(arg0: Internal.IRecipeType<T_>, arg1: C_, arg2: Internal.World): Internal.List<T_>;
        getRecipeMap(arg0: Internal.IRecipeType<any>): Internal.Map<any, any>;
        handler$ccj000$clearCacheClient(arg0: Internal.Iterable_<any>, arg1: Internal.CallbackInfo): void;
        func_199510_b(): Internal.Collection<Internal.IRecipe<any>>;
        func_241447_a_<C_, T_>(arg0: Internal.IRecipeType<T_>): Internal.List<T_>;
        getRecipesKJS(): Internal.Map<any, any>;
        field_199522_d: Internal.Map<Internal.IRecipeType<any>, Internal.Map<ResourceLocation, Internal.IRecipe<any>>>;
        get recipesKJS(): Internal.Map<any, any>;
        set recipesKJS(arg0: Internal.Map_<any,any>);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type RecipeManager_ = RecipeManager;
    class BlockEntityPredicate extends Document.Object implements Internal.BlockPredicate {
        data(cd: Internal.BlockEntityPredicateDataCheck_): Internal.BlockEntityPredicate;
        check(block: Internal.BlockContainerJS): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(i: ResourceLocation);
    }
    type BlockEntityPredicate_ = BlockEntityPredicate;
    abstract class DataBuffer extends Document.Object {
        getSize(): number;
        getNumBanks(): number;
        static getDataTypeSize(arg0: number): number;
        setElemDouble(arg0: number, arg1: number, arg2: number): void;
        setElemDouble(arg0: number, arg1: number): void;
        getElemDouble(arg0: number, arg1: number): number;
        getElemDouble(arg0: number): number;
        getDataType(): number;
        getOffset(): number;
        setElem(arg0: number, arg1: number, arg2: number): void;
        setElem(arg0: number, arg1: number): void;
        getOffsets(): number[];
        setElemFloat(arg0: number, arg1: number, arg2: number): void;
        setElemFloat(arg0: number, arg1: number): void;
        getElemFloat(arg0: number, arg1: number): number;
        getElemFloat(arg0: number): number;
        getElem(arg0: number, arg1: number): number;
        getElem(arg0: number): number;
        static readonly TYPE_INT: 3;
        static readonly TYPE_DOUBLE: 5;
        static readonly TYPE_SHORT: 2;
        static readonly TYPE_UNDEFINED: 32;
        static readonly TYPE_BYTE: 0;
        static readonly TYPE_USHORT: 1;
        static readonly TYPE_FLOAT: 4;
        get size(): number;
        get offset(): number;
        get offsets(): number[];
        get dataType(): number;
        get numBanks(): number;
    }
    type DataBuffer_ = DataBuffer;
    class SpellcastingIllagerEntity$SpellType extends Internal.Enum<Internal.SpellcastingIllagerEntity$SpellType> {
        static valueOf(arg0: string): Internal.SpellcastingIllagerEntity$SpellType;
        static values(): Internal.SpellcastingIllagerEntity$SpellType[];
        static func_193337_a(arg0: number): Internal.SpellcastingIllagerEntity$SpellType;
        static readonly SUMMON_VEX: Internal.SpellcastingIllagerEntity$SpellType;
        static readonly DISAPPEAR: Internal.SpellcastingIllagerEntity$SpellType;
        static readonly FANGS: Internal.SpellcastingIllagerEntity$SpellType;
        static readonly NONE: Internal.SpellcastingIllagerEntity$SpellType;
        static readonly WOLOLO: Internal.SpellcastingIllagerEntity$SpellType;
        static readonly BLINDNESS: Internal.SpellcastingIllagerEntity$SpellType;
    }
    type SpellcastingIllagerEntity$SpellType_ = "none" | "summon_vex" | "fangs" | "wololo" | "disappear" | "blindness" | SpellcastingIllagerEntity$SpellType;
    interface AsynchronousChannel extends java_.nio.channels.Channel {
        close(): void;
        (): void;
    }
    type AsynchronousChannel_ = (()=>void) | AsynchronousChannel;
    interface IForgeSelectionContext {
        getEntity(): Internal.Entity;
    }
    type IForgeSelectionContext_ = IForgeSelectionContext;
    class CustomServerBossInfo extends Internal.ServerBossInfo {
        func_201367_d(): number;
        func_201369_e(): Internal.ITextComponent;
        static func_201371_a(arg0: Internal.CompoundNBT_, arg1: ResourceLocation_): Internal.CustomServerBossInfo;
        func_201362_a(arg0: number): void;
        func_201372_a(arg0: Internal.UUID): void;
        func_201370_f(): Internal.CompoundNBT;
        func_201364_a(): ResourceLocation;
        func_201361_c(arg0: Internal.ServerPlayerEntity): void;
        func_201363_d(arg0: Internal.ServerPlayerEntity): void;
        func_201368_a(arg0: Internal.Collection<Internal.ServerPlayerEntity>): boolean;
        func_201365_c(): number;
        func_201366_b(arg0: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation, arg1: Internal.ITextComponent);
    }
    type CustomServerBossInfo_ = CustomServerBossInfo;
    interface Function14 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.Function5<T10, T11, T12, T13, T14, R>>;
        curry12(): Internal.Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Internal.BiFunction<T13, T14, R>>;
        curry13(): Internal.Function13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Internal.Function<T14, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13, arg13: T14): R;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function7<T8, T9, T10, T11, T12, T13, T14, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function6<T9, T10, T11, T12, T13, T14, R>>;
        curry10(): Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Internal.Function4<T11, T12, T13, T14, R>>;
        curry11(): Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Internal.Function3<T12, T13, T14, R>>;
        curry(): Internal.Function<T1, Internal.Function13<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function9<T6, T7, T8, T9, T10, T11, T12, T13, T14, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function8<T7, T8, T9, T10, T11, T12, T13, T14, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function11<T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function10<T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function12<T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13, arg13: T14): R;
    }
    type Function14_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13, arg13: T14)=>R) | Function14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R>;
    class PointOfInterestManager$Status extends Internal.Enum<Internal.PointOfInterestManager$Status> {
        static valueOf(arg0: string): Internal.PointOfInterestManager$Status;
        static values(): Internal.PointOfInterestManager$Status[];
        func_221035_a(): Internal.Predicate<Internal.PointOfInterest>;
        static readonly IS_OCCUPIED: Internal.PointOfInterestManager$Status;
        static readonly HAS_SPACE: Internal.PointOfInterestManager$Status;
        static readonly ANY: Internal.PointOfInterestManager$Status;
    }
    type PointOfInterestManager$Status_ = "has_space" | "is_occupied" | "any" | PointOfInterestManager$Status;
    class SDestroyEntitiesPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        func_149098_c(): number[];
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number[]);
    }
    type SDestroyEntitiesPacket_ = SDestroyEntitiesPacket;
    class BlockStateMatchRuleTest extends Internal.RuleTest {
        static readonly field_237079_a_: Internal.Codec<Internal.BlockStateMatchRuleTest>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockState);
    }
    type BlockStateMatchRuleTest_ = BlockStateMatchRuleTest;
    interface FieldNamingStrategy {
        translateName(arg0: Internal.Field): string;
        (arg0: Internal.Field): string;
    }
    type FieldNamingStrategy_ = ((arg0: Internal.Field)=>string) | FieldNamingStrategy;
    class PageAttributes$MediaType extends Internal.AttributeValue {
        static readonly ISO_B0: Internal.PageAttributes$MediaType;
        static readonly ISO_B1: Internal.PageAttributes$MediaType;
        static readonly ISO_B2: Internal.PageAttributes$MediaType;
        static readonly NA_10X13_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ISO_B3: Internal.PageAttributes$MediaType;
        static readonly NA_NUMBER_14_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ISO_B4: Internal.PageAttributes$MediaType;
        static readonly ENV_INVITE: Internal.PageAttributes$MediaType;
        static readonly ISO_B5: Internal.PageAttributes$MediaType;
        static readonly ISO_B6: Internal.PageAttributes$MediaType;
        static readonly ISO_C10: Internal.PageAttributes$MediaType;
        static readonly ISO_B7: Internal.PageAttributes$MediaType;
        static readonly INVITE: Internal.PageAttributes$MediaType;
        static readonly ISO_C8_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly A0: Internal.PageAttributes$MediaType;
        static readonly JIS_B9: Internal.PageAttributes$MediaType;
        static readonly A1: Internal.PageAttributes$MediaType;
        static readonly A2: Internal.PageAttributes$MediaType;
        static readonly JIS_B7: Internal.PageAttributes$MediaType;
        static readonly A3: Internal.PageAttributes$MediaType;
        static readonly JIS_B8: Internal.PageAttributes$MediaType;
        static readonly A4: Internal.PageAttributes$MediaType;
        static readonly ISO_C2_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly A5: Internal.PageAttributes$MediaType;
        static readonly A6: Internal.PageAttributes$MediaType;
        static readonly A7: Internal.PageAttributes$MediaType;
        static readonly A8: Internal.PageAttributes$MediaType;
        static readonly ISO_B8: Internal.PageAttributes$MediaType;
        static readonly A9: Internal.PageAttributes$MediaType;
        static readonly ISO_B9: Internal.PageAttributes$MediaType;
        static readonly PERSONAL_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ISO_C1: Internal.PageAttributes$MediaType;
        static readonly A10: Internal.PageAttributes$MediaType;
        static readonly ISO_C2: Internal.PageAttributes$MediaType;
        static readonly ISO_C3: Internal.PageAttributes$MediaType;
        static readonly ISO_C4: Internal.PageAttributes$MediaType;
        static readonly ISO_C5: Internal.PageAttributes$MediaType;
        static readonly ISO_C6: Internal.PageAttributes$MediaType;
        static readonly ISO_C7: Internal.PageAttributes$MediaType;
        static readonly ISO_C8: Internal.PageAttributes$MediaType;
        static readonly JIS_B1: Internal.PageAttributes$MediaType;
        static readonly NA_LETTER: Internal.PageAttributes$MediaType;
        static readonly ISO_2A0: Internal.PageAttributes$MediaType;
        static readonly JIS_B2: Internal.PageAttributes$MediaType;
        static readonly ENV_6X9: Internal.PageAttributes$MediaType;
        static readonly JIS_B0: Internal.PageAttributes$MediaType;
        static readonly JIS_B5: Internal.PageAttributes$MediaType;
        static readonly JIS_B6: Internal.PageAttributes$MediaType;
        static readonly JIS_B3: Internal.PageAttributes$MediaType;
        static readonly B0: Internal.PageAttributes$MediaType;
        static readonly JIS_B4: Internal.PageAttributes$MediaType;
        static readonly ISO_C0: Internal.PageAttributes$MediaType;
        static readonly NA_NUMBER_9_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly B1: Internal.PageAttributes$MediaType;
        static readonly B2: Internal.PageAttributes$MediaType;
        static readonly B3: Internal.PageAttributes$MediaType;
        static readonly B4: Internal.PageAttributes$MediaType;
        static readonly B5: Internal.PageAttributes$MediaType;
        static readonly B6: Internal.PageAttributes$MediaType;
        static readonly B7: Internal.PageAttributes$MediaType;
        static readonly B8: Internal.PageAttributes$MediaType;
        static readonly B9: Internal.PageAttributes$MediaType;
        static readonly ISO_C9: Internal.PageAttributes$MediaType;
        static readonly NA_7X9_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly MONARCH: Internal.PageAttributes$MediaType;
        static readonly ISO_C3_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ENV_9X11: Internal.PageAttributes$MediaType;
        static readonly ENV_ITALY: Internal.PageAttributes$MediaType;
        static readonly ENV_9X12: Internal.PageAttributes$MediaType;
        static readonly ENV_10X15: Internal.PageAttributes$MediaType;
        static readonly A: Internal.PageAttributes$MediaType;
        static readonly ENV_10X14: Internal.PageAttributes$MediaType;
        static readonly B: Internal.PageAttributes$MediaType;
        static readonly ENV_10X13: Internal.PageAttributes$MediaType;
        static readonly C: Internal.PageAttributes$MediaType;
        static readonly D: Internal.PageAttributes$MediaType;
        static readonly E: Internal.PageAttributes$MediaType;
        static readonly ISO_C9_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly C0: Internal.PageAttributes$MediaType;
        static readonly C1: Internal.PageAttributes$MediaType;
        static readonly C2: Internal.PageAttributes$MediaType;
        static readonly C3: Internal.PageAttributes$MediaType;
        static readonly ISO_DESIGNATED_LONG_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly PERSONAL: Internal.PageAttributes$MediaType;
        static readonly C4: Internal.PageAttributes$MediaType;
        static readonly C5: Internal.PageAttributes$MediaType;
        static readonly C6: Internal.PageAttributes$MediaType;
        static readonly NA_10X14_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly C7: Internal.PageAttributes$MediaType;
        static readonly C8: Internal.PageAttributes$MediaType;
        static readonly C9: Internal.PageAttributes$MediaType;
        static readonly NA_NUMBER_10_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ISO_A0: Internal.PageAttributes$MediaType;
        static readonly ISO_A1: Internal.PageAttributes$MediaType;
        static readonly ISO_A2: Internal.PageAttributes$MediaType;
        static readonly ISO_A3: Internal.PageAttributes$MediaType;
        static readonly ISO_A4: Internal.PageAttributes$MediaType;
        static readonly ISO_A5: Internal.PageAttributes$MediaType;
        static readonly ISO_A6: Internal.PageAttributes$MediaType;
        static readonly ISO_C1_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ISO_B5_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly NA_LEGAL: Internal.PageAttributes$MediaType;
        static readonly ISO_A7: Internal.PageAttributes$MediaType;
        static readonly ISO_C6_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ISO_A8: Internal.PageAttributes$MediaType;
        static readonly ISO_A9: Internal.PageAttributes$MediaType;
        static readonly NA_NUMBER_11_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly STATEMENT: Internal.PageAttributes$MediaType;
        static readonly LETTER: Internal.PageAttributes$MediaType;
        static readonly ISO_A10: Internal.PageAttributes$MediaType;
        static readonly NA_9X11_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ISO_C5_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly QUARTO: Internal.PageAttributes$MediaType;
        static readonly ISO_DESIGNATED_LONG: Internal.PageAttributes$MediaType;
        static readonly NA_6X9_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ISO_C4_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly C10: Internal.PageAttributes$MediaType;
        static readonly ISO_C10_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ISO_4A0: Internal.PageAttributes$MediaType;
        static readonly ITALY: Internal.PageAttributes$MediaType;
        static readonly NA_NUMBER_12_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly INVOICE: Internal.PageAttributes$MediaType;
        static readonly ENV_9: Internal.PageAttributes$MediaType;
        static readonly NA_9X12_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ITALY_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ISO_B4_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ENV_PERSONAL: Internal.PageAttributes$MediaType;
        static readonly ISO_B10: Internal.PageAttributes$MediaType;
        static readonly JIS_B10: Internal.PageAttributes$MediaType;
        static readonly ISO_C0_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly INVITE_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly NOTE: Internal.PageAttributes$MediaType;
        static readonly LEGAL: Internal.PageAttributes$MediaType;
        static readonly EXECUTIVE: Internal.PageAttributes$MediaType;
        static readonly ENV_MONARCH: Internal.PageAttributes$MediaType;
        static readonly ENV_11: Internal.PageAttributes$MediaType;
        static readonly B10: Internal.PageAttributes$MediaType;
        static readonly ENV_12: Internal.PageAttributes$MediaType;
        static readonly ENV_10: Internal.PageAttributes$MediaType;
        static readonly ISO_C7_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ENV_14: Internal.PageAttributes$MediaType;
        static readonly MONARCH_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly ENV_7X9: Internal.PageAttributes$MediaType;
        static readonly NA_10X15_ENVELOPE: Internal.PageAttributes$MediaType;
        static readonly TABLOID: Internal.PageAttributes$MediaType;
        static readonly LEDGER: Internal.PageAttributes$MediaType;
        static readonly FOLIO: Internal.PageAttributes$MediaType;
    }
    type PageAttributes$MediaType_ = PageAttributes$MediaType;
    interface BiomeGenerationSettingsAccess {
        setFeatures(arg0: Internal.List<Internal.List<java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>>>): void;
        getFeatures(): Internal.List<Internal.List<java_.util.function_.Supplier<Internal.ConfiguredFeature<any, any>>>>;
        getStructureStarts(): Internal.List<java_.util.function_.Supplier<Internal.StructureFeature<any, any>>>;
        setStructureStarts(arg0: Internal.List<java_.util.function_.Supplier<Internal.StructureFeature<any, any>>>): void;
    }
    type BiomeGenerationSettingsAccess_ = BiomeGenerationSettingsAccess;
    class ProtocolType extends Internal.Enum<Internal.ProtocolType> {
        static func_150760_a(arg0: number): Internal.ProtocolType;
        static valueOf(arg0: string): Internal.ProtocolType;
        static func_150752_a(arg0: Internal.IPacket<any>): Internal.ProtocolType;
        static values(): Internal.ProtocolType[];
        func_150759_c(): number;
        func_179246_a(arg0: Internal.PacketDirection_, arg1: Internal.IPacket<any>): number;
        func_179244_a(arg0: Internal.PacketDirection_, arg1: number): Internal.IPacket<any>;
        static readonly PLAY: Internal.ProtocolType;
        static readonly STATUS: Internal.ProtocolType;
        static readonly LOGIN: Internal.ProtocolType;
        static readonly HANDSHAKING: Internal.ProtocolType;
    }
    type ProtocolType_ = "handshaking" | "play" | "status" | "login" | ProtocolType;
    interface ITickableTileEntity {
        func_73660_a(): void;
        (): void;
    }
    type ITickableTileEntity_ = (()=>void) | ITickableTileEntity;
    interface GlTessellation {
        bind(arg0: Internal.CommandList): void;
        unbind(arg0: Internal.CommandList): void;
        getPrimitiveType(): Internal.GlPrimitiveType;
        delete(arg0: Internal.CommandList): void;
    }
    type GlTessellation_ = GlTessellation;
    interface IEnergyConfig <V> extends Internal.IConfig<V> {
        getTransfer(arg0: V): number;
        getGeneration(arg0: V): number;
        getCapacity(arg0: V): number;
    }
    type IEnergyConfig_<V> = IEnergyConfig<V>;
    class OpEntry extends Internal.UserListEntry<Internal.GameProfile> {
        func_152644_a(): number;
        func_183024_b(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.GameProfile, arg1: number, arg2: boolean);
        constructor(arg0: Internal.JsonObject);
    }
    type OpEntry_ = OpEntry;
    interface DoubleUnaryOperator {
        applyAsDouble(arg0: number): number;
        compose(arg0: Internal.DoubleUnaryOperator_): Internal.DoubleUnaryOperator;
        andThen(arg0: Internal.DoubleUnaryOperator_): Internal.DoubleUnaryOperator;
        (arg0: number): number;
    }
    type DoubleUnaryOperator_ = ((arg0: number)=>number) | DoubleUnaryOperator;
    class EnderGateConfig extends Internal.EnderCellConfig {
        getGeneration(arg0: Internal.Tier_): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ForgeConfigSpec$Builder);
    }
    type EnderGateConfig_ = EnderGateConfig;
    interface Int2IntMap$FastEntrySet extends Internal.ObjectSet<Internal.Int2IntMap$Entry> {
        fastForEach(arg0: Internal.Consumer_<Internal.Int2IntMap$Entry_>): void;
        fastIterator(): Internal.ObjectIterator<Internal.Int2IntMap$Entry>;
        (): Internal.ObjectIterator<Internal.Int2IntMap$Entry>;
    }
    type Int2IntMap$FastEntrySet_ = (()=>Internal.ObjectIterator<Internal.Int2IntMap$Entry>) | Int2IntMap$FastEntrySet;
    interface IForgeMinecraft {
        getSelf(): Internal.Minecraft;
        popGuiLayer(): void;
        pushGuiLayer(arg0: Internal.Screen): void;
    }
    type IForgeMinecraft_ = IForgeMinecraft;
    interface AccessorItemOverrideList {
        getOverrideBakedModels(): Internal.List<Internal.IBakedModel>;
        (): Internal.List<Internal.IBakedModel>;
    }
    type AccessorItemOverrideList_ = (()=>Internal.List<Internal.IBakedModel>) | AccessorItemOverrideList;
    interface IShapedRecipe <T> extends Internal.IRecipe<T> {
        getRecipeWidth(): number;
        getRecipeHeight(): number;
    }
    type IShapedRecipe_<T> = IShapedRecipe<T>;
    abstract class TileEntityTick extends Internal.TileEntitySynchronized implements Internal.ITickableTileEntity, Internal.TileRequiresMultiblock {
        requestModelDataUpdate(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        seesSkyInNoSkyWorlds(): boolean;
        doesSeeSky(): boolean;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_73660_a(): void;
        getRequiredStructureType(): Internal.StructureType;
        getTicksExisted(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        hasMultiblock(): boolean;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get ticksExisted(): number;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get requiredStructureType(): Internal.StructureType;
        get tileEntity(): Internal.TileEntity;
    }
    type TileEntityTick_ = TileEntityTick;
    class RaidManager extends Internal.WorldSavedData {
        serializeNBT(): Internal.INBT;
        static func_234620_a_(arg0: Internal.DimensionType): string;
        func_215167_a(arg0: number): Internal.Raid;
        static func_215165_a(arg0: Internal.AbstractRaiderEntity, arg1: Internal.Raid): boolean;
        func_215174_a(arg0: BlockPos, arg1: number): Internal.Raid;
        func_215171_a(): void;
        func_215170_a(arg0: Internal.ServerPlayerEntity): Internal.Raid;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ServerWorld);
    }
    type RaidManager_ = RaidManager;
    class ShulkerBulletEntity extends Internal.ProjectileEntity {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: Internal.LivingEntity, arg2: Internal.Entity, arg3: Internal.Direction$Axis);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number);
        constructor(arg0: Internal.EntityType<Internal.ShulkerBulletEntity>, arg1: Internal.World);
    }
    type ShulkerBulletEntity_ = ShulkerBulletEntity;
    class WorldgenRemoveEventJS extends Internal.StartupEventJS {
        removeAllSpawns(): void;
        removeSpawnsByCategory(p: Internal.Consumer_<Internal.RemoveSpawnsByCategoryProperties_>): void;
        isNotInBiomes(filter: string[]): boolean;
        printSpawns(category: Internal.EntityClassification_): void;
        printSpawns(): void;
        removeFeatureById(type: DecorationGenerationStep_, id: ResourceLocation[]): void;
        printFeatures(type: DecorationGenerationStep_): void;
        printFeatures(): void;
        removeAllFeatures(type: DecorationGenerationStep_): void;
        removeAllFeatures(): void;
        removeSpawnsByID(p: Internal.Consumer_<Internal.RemoveSpawnsByIDProperties_>): void;
        removeOres(p: Internal.Consumer_<Internal.RemoveOresProperties_>): void;
        getConfiguredFeatureKey(feature: Internal.ConfiguredFeature<any, any>): ResourceLocation;
        isInBiomes(filter: string[]): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type WorldgenRemoveEventJS_ = WorldgenRemoveEventJS;
    interface ChunkStatusListenerManager {
        setListener(arg0: Internal.ChunkStatusListener): void;
        (arg0: Internal.ChunkStatusListener): void;
    }
    type ChunkStatusListenerManager_ = ((arg0: Internal.ChunkStatusListener)=>void) | ChunkStatusListenerManager;
    interface IGlyphProvider extends Internal.Closeable {
        func_230428_a_(): Internal.IntSet;
        func_212248_a(arg0: number): Internal.IGlyphInfo;
        close(): void;
        (): Internal.IntSet;
    }
    type IGlyphProvider_ = (()=>Internal.IntSet) | IGlyphProvider;
    interface ListLike <T> extends Internal.CustomJavaObjectWrapper {
        wrapAsJavaObject(cx: Internal.Context, scope: Internal.Scriptable, staticType: Internal.Class<any>): Internal.Scriptable;
        setLL(index: number, value: T): void;
        removeLL(index: number): void;
        clearLL(): void;
        sizeLL(): number;
        getLL(arg0: number): T;
    }
    type ListLike_<T> = ListLike<T>;
    class AlwaysTrueRuleTest extends Internal.RuleTest {
        static readonly field_237043_a_: Internal.Codec<Internal.AlwaysTrueRuleTest>;
        static readonly field_215190_a: Internal.AlwaysTrueRuleTest;
    }
    type AlwaysTrueRuleTest_ = AlwaysTrueRuleTest;
    interface SpecialEquality {
        specialEquals(o: any, shallow: boolean): boolean;
    }
    type SpecialEquality_ = SpecialEquality;
    interface IAudioStream extends Internal.Closeable {
        func_216454_a(): Internal.AudioFormat;
        func_216455_a(arg0: number): Internal.ByteBuffer;
    }
    type IAudioStream_ = IAudioStream;
    abstract class DyingHorseEntity extends Internal.AbstractHorseEntity implements Internal.IDying {
        shouldRiderSit(): boolean;
        isDying(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        dyingInteract(arg0: Internal.PlayerEntity, arg1: Hand_): Internal.ActionResultType;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        formatLoc(arg0: Vec3): string;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        foodEatenKJS(is: Internal.ItemStack): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        get dying(): boolean;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
    }
    type DyingHorseEntity_ = DyingHorseEntity;
    class BlobReplacementConfig extends Document.Object implements Internal.IFeatureConfig {
        func_242823_b(): Internal.FeatureSpread;
        func_241856_an_(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        static readonly field_242817_a: Internal.Codec<Internal.BlobReplacementConfig>;
        readonly field_242818_b: Internal.BlockState;
        readonly field_242819_c: Internal.BlockState;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.FeatureSpread);
    }
    type BlobReplacementConfig_ = BlobReplacementConfig;
    class BlackStoneReplacementProcessor extends Internal.StructureProcessor {
        static readonly field_237057_a_: Internal.Codec<Internal.BlackStoneReplacementProcessor>;
        static readonly field_237058_b_: Internal.BlackStoneReplacementProcessor;
    }
    type BlackStoneReplacementProcessor_ = BlackStoneReplacementProcessor;
    interface IMinecartCollisionHandler {
        getCollisionBox(arg0: Internal.AbstractMinecartEntity, arg1: Internal.Entity): Internal.AxisAlignedBB;
        getMinecartCollisionBox(arg0: Internal.AbstractMinecartEntity): Internal.AxisAlignedBB;
        getBoundingBox(arg0: Internal.AbstractMinecartEntity): Internal.AxisAlignedBB;
        onEntityCollision(arg0: Internal.AbstractMinecartEntity, arg1: Internal.Entity): void;
    }
    type IMinecartCollisionHandler_ = IMinecartCollisionHandler;
    class LocalTime extends Document.Object implements Internal.Temporal, Internal.TemporalAdjuster, Internal.Comparable<Internal.LocalTime>, Internal.Serializable {
        static ofInstant(arg0: Internal.Instant, arg1: Internal.ZoneId): Internal.LocalTime;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        minus(arg0: number, arg1: Internal.TemporalUnit): Internal.LocalTime;
        minus(arg0: Internal.TemporalAmount): Internal.LocalTime;
        minus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plusHours(arg0: number): Internal.LocalTime;
        minusHours(arg0: number): Internal.LocalTime;
        atDate(arg0: Internal.LocalDate): Internal.LocalDateTime;
        adjustInto(arg0: Internal.Temporal): Internal.Temporal;
        range(arg0: Internal.TemporalField): Internal.ValueRange;
        compareTo(arg0: any): number;
        compareTo(arg0: Internal.LocalTime): number;
        plusMinutes(arg0: number): Internal.LocalTime;
        toSecondOfDay(): number;
        minusMinutes(arg0: number): Internal.LocalTime;
        static now(): Internal.LocalTime;
        static now(arg0: Internal.Clock): Internal.LocalTime;
        static now(arg0: Internal.ZoneId): Internal.LocalTime;
        static of(arg0: number, arg1: number, arg2: number): Internal.LocalTime;
        static of(arg0: number, arg1: number, arg2: number, arg3: number): Internal.LocalTime;
        static of(arg0: number, arg1: number): Internal.LocalTime;
        get(arg0: Internal.TemporalField): number;
        plusSeconds(arg0: number): Internal.LocalTime;
        getMinute(): number;
        getHour(): number;
        static from(arg0: Internal.TemporalAccessor): Internal.LocalTime;
        plusNanos(arg0: number): Internal.LocalTime;
        withMinute(arg0: number): Internal.LocalTime;
        withHour(arg0: number): Internal.LocalTime;
        static ofNanoOfDay(arg0: number): Internal.LocalTime;
        atOffset(arg0: Internal.ZoneOffset): Internal.OffsetTime;
        truncatedTo(arg0: Internal.TemporalUnit): Internal.LocalTime;
        query<R_>(arg0: Internal.TemporalQuery_<R_>): R_;
        minusNanos(arg0: number): Internal.LocalTime;
        getNano(): number;
        format(arg0: Internal.DateTimeFormatter): string;
        static parse(arg0: Internal.CharSequence): Internal.LocalTime;
        static parse(arg0: Internal.CharSequence, arg1: Internal.DateTimeFormatter): Internal.LocalTime;
        isSupported(arg0: Internal.TemporalUnit): boolean;
        isSupported(arg0: Internal.TemporalField): boolean;
        isBefore(arg0: Internal.LocalTime): boolean;
        plus(arg0: Internal.TemporalAmount): Internal.LocalTime;
        plus(arg0: Internal.TemporalAmount): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.Temporal;
        plus(arg0: number, arg1: Internal.TemporalUnit): Internal.LocalTime;
        withNano(arg0: number): Internal.LocalTime;
        getLong(arg0: Internal.TemporalField): number;
        static ofSecondOfDay(arg0: number): Internal.LocalTime;
        with(arg0: Internal.TemporalAdjuster_): Internal.LocalTime;
        with(arg0: Internal.TemporalAdjuster_): Internal.Temporal;
        with(arg0: Internal.TemporalField, arg1: number): Internal.LocalTime;
        with(arg0: Internal.TemporalField, arg1: number): Internal.Temporal;
        toNanoOfDay(): number;
        toEpochSecond(arg0: Internal.LocalDate, arg1: Internal.ZoneOffset): number;
        getSecond(): number;
        until(arg0: Internal.Temporal, arg1: Internal.TemporalUnit): number;
        minusSeconds(arg0: number): Internal.LocalTime;
        isAfter(arg0: Internal.LocalTime): boolean;
        withSecond(arg0: number): Internal.LocalTime;
        static readonly MIN: Internal.LocalTime;
        static readonly NOON: Internal.LocalTime;
        static readonly MAX: Internal.LocalTime;
        static readonly MIDNIGHT: Internal.LocalTime;
        get hour(): number;
        get nano(): number;
        get minute(): number;
        get second(): number;
    }
    type LocalTime_ = LocalTime;
    abstract class LootEntry extends Document.Object implements Internal.ILootEntry {
        expand(arg0: Internal.LootContext, arg1: Internal.Consumer_<Internal.ILootGenerator_>): boolean;
        func_216133_a(arg0: Internal.ILootEntry_): Internal.ILootEntry;
        func_216135_b(arg0: Internal.ILootEntry_): Internal.ILootEntry;
        func_225579_a_(arg0: Internal.ValidationTracker): void;
        func_230420_a_(): Internal.LootPoolEntryType;
        readonly field_216144_d: Internal.ILootCondition[];
    }
    type LootEntry_ = LootEntry;
    abstract class GuiScreenEvent$KeyboardKeyReleasedEvent extends Internal.GuiScreenEvent$KeyboardKeyEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Screen, arg1: number, arg2: number, arg3: number);
        constructor();
    }
    type GuiScreenEvent$KeyboardKeyReleasedEvent_ = GuiScreenEvent$KeyboardKeyReleasedEvent;
    interface IRecipeLayout {
        getIngredientsGroup<T>(arg0: Internal.IIngredientType_<T>): Internal.IGuiIngredientGroup<T>;
        moveRecipeTransferButton(arg0: number, arg1: number): void;
        getItemStacks(): Internal.IGuiItemStackGroup;
        getRecipeCategory(): Internal.IRecipeCategory<any>;
        getFluidStacks(): Internal.IGuiFluidStackGroup;
        getFocus(): Internal.IFocus<any>;
        getFocus<V>(arg0: Internal.IIngredientType_<V>): Internal.IFocus<V>;
        setShapeless(): void;
    }
    type IRecipeLayout_ = IRecipeLayout;
    class AddSpawnProperties extends Document.Object {
        setCategory(s: string): void;
        setEntity(s: string): void;
        readonly biomes: Internal.WorldgenEntryList;
        weight: number;
        _category: Internal.EntityClassification;
        minCount: number;
        maxCount: number;
        _entity: Internal.EntityType<any>;
        set category(s: string);
        set entity(s: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AddSpawnProperties_ = AddSpawnProperties;
    class PerkAttributeMap extends Document.Object implements Internal.ReadWriteLockable {
        hasModifiers(arg0: Internal.PerkAttributeType_): boolean;
        read(arg0: Internal.Runnable_): void;
        read<T_>(arg0: java_.util.function_.Supplier_<T_>): T_;
        getLock(): Internal.ReadWriteLock;
        getModifier(arg0: Internal.PlayerEntity, arg1: Internal.PlayerProgress, arg2: Internal.PerkAttributeType_, arg3: Internal.ModifierType_): number;
        getModifier(arg0: Internal.PlayerEntity, arg1: Internal.PlayerProgress, arg2: Internal.PerkAttributeType_): number;
        getModifier(arg0: Internal.PlayerEntity, arg1: Internal.PlayerProgress, arg2: Internal.PerkAttributeType_, arg3: Internal.Collection<Internal.ModifierType>): number;
        lock<T_>(arg0: java_.util.function_.Supplier_<Internal.Lock_>, arg1: java_.util.function_.Supplier_<T_>): T_;
        modifyValue(arg0: Internal.PlayerEntity, arg1: Internal.PlayerProgress, arg2: Internal.PerkAttributeType_, arg3: number): number;
        write(arg0: Internal.Runnable_): void;
        write<T_>(arg0: java_.util.function_.Supplier_<T_>): T_;
    }
    type PerkAttributeMap_ = PerkAttributeMap;
    class DefaultedRegistry <T> extends Internal.SimpleRegistry<T> {
        flatComapMap<S_>(arg0: Internal.Function_<T, S_>, arg1: Internal.Function_<S_, Internal.DataResult_<T>>): Internal.Codec<S_>;
        func_241873_b(arg0: ResourceLocation_): Internal.Optional<T>;
        dispatch<E_>(arg0: Internal.Function_<E_, T>, arg1: Internal.Function_<T, Internal.Codec_<E_>>): Internal.Codec<E_>;
        dispatch<E_>(arg0: string, arg1: Internal.Function_<E_, T>, arg2: Internal.Function_<T, Internal.Codec_<E_>>): Internal.Codec<E_>;
        deprecated(arg0: number): Internal.Codec<T>;
        simple(): Internal.Decoder$Simple<T>;
        dispatchMap<E_>(arg0: Internal.Function_<E_, T>, arg1: Internal.Function_<T, Internal.Codec_<E_>>): Internal.MapCodec<E_>;
        dispatchMap<E_>(arg0: string, arg1: Internal.Function_<E_, T>, arg2: Internal.Function_<T, Internal.Codec_<E_>>): Internal.MapCodec<E_>;
        func_218382_a<V_>(arg0: number, arg1: Internal.RegistryKey<T>, arg2: V_, arg3: Internal.Lifecycle): V_;
        decode<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<Internal.Pair<T, T_>>;
        comapFlatMap<S_>(arg0: Internal.Function_<T, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, T>): Internal.Codec<S_>;
        promotePartial(arg0: Internal.Consumer_<any>): Internal.Decoder<any>;
        promotePartial(arg0: Internal.Consumer_<string>): Internal.Codec<T>;
        flatXmap<S_>(arg0: Internal.Function_<T, Internal.DataResult_<S_>>, arg1: Internal.Function_<S_, Internal.DataResult_<T>>): Internal.Codec<S_>;
        comap<B_>(arg0: Internal.Function_<B_, T>): Internal.Encoder<B_>;
        func_186801_a(arg0: Internal.Random): T;
        fieldOf(arg0: string): Internal.MapDecoder<any>;
        fieldOf(arg0: string): Internal.MapCodec<T>;
        fieldOf(arg0: string): Internal.MapEncoder<any>;
        listOf(): Internal.Codec<Internal.List<T>>;
        xmap<S_>(arg0: Internal.Function_<T, S_>, arg1: Internal.Function_<S_, T>): Internal.Codec<S_>;
        map<B_>(arg0: Internal.Function_<T, B_>): Internal.Decoder<B_>;
        encodeStart<T_>(arg0: Internal.DynamicOps<T_>, arg1: T): Internal.DataResult<T_>;
        optionalFieldOf(arg0: string, arg1: Internal.Lifecycle, arg2: T, arg3: Internal.Lifecycle): Internal.MapCodec<T>;
        optionalFieldOf(arg0: string, arg1: T): Internal.MapCodec<T>;
        optionalFieldOf(arg0: string, arg1: T, arg2: Internal.Lifecycle): Internal.MapCodec<T>;
        optionalFieldOf(arg0: string): Internal.MapCodec<Internal.Optional<T>>;
        flatComap<B_>(arg0: Internal.Function_<B_, Internal.DataResult_<T>>): Internal.Encoder<B_>;
        func_148745_a(arg0: number): T;
        spliterator(): Internal.Spliterator<T>;
        forEach(arg0: Internal.Consumer_<T>): void;
        partialDispatch<E_>(arg0: string, arg1: Internal.Function_<E_, Internal.DataResult_<T>>, arg2: Internal.Function_<T, Internal.DataResult_<Internal.Codec_<E_>>>): Internal.Codec<E_>;
        func_212609_b(): ResourceLocation;
        func_82594_a(arg0: ResourceLocation_): T;
        terminal(): Internal.Decoder$Terminal<T>;
        parse<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<T>;
        parse<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<T>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Codec<T>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Encoder<any>;
        withLifecycle(arg0: Internal.Lifecycle): Internal.Decoder<any>;
        orElse(arg0: T): Internal.Codec<T>;
        orElse(arg0: Internal.Consumer_<string>, arg1: T): Internal.Codec<T>;
        orElse(arg0: Internal.UnaryOperator<string>, arg1: T): Internal.Codec<T>;
        flatMap<B_>(arg0: Internal.Function_<T, Internal.DataResult_<B_>>): Internal.Decoder<B_>;
        boxed(): Internal.Decoder$Boxed<T>;
        dispatchStable<E_>(arg0: Internal.Function_<E_, T>, arg1: Internal.Function_<T, Internal.Codec_<E_>>): Internal.Codec<E_>;
        orElseGet(arg0: java_.util.function_.Supplier_<T>): Internal.Codec<T>;
        orElseGet(arg0: Internal.Consumer_<string>, arg1: java_.util.function_.Supplier_<T>): Internal.Codec<T>;
        orElseGet(arg0: Internal.UnaryOperator<string>, arg1: java_.util.function_.Supplier_<T>): Internal.Codec<T>;
        stable(): Internal.Codec<T>;
        mapResult(arg0: Internal.Codec$ResultFunction<T>): Internal.Codec<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.RegistryKey<Internal.Registry<T>>, arg2: Internal.Lifecycle);
    }
    type DefaultedRegistry_<T> = DefaultedRegistry<T>;
    class ServerData$ServerResourceMode extends Internal.Enum<Internal.ServerData$ServerResourceMode> {
        func_152589_a(): Internal.ITextComponent;
        static valueOf(arg0: string): Internal.ServerData$ServerResourceMode;
        static values(): Internal.ServerData$ServerResourceMode[];
        static readonly DISABLED: Internal.ServerData$ServerResourceMode;
        static readonly PROMPT: Internal.ServerData$ServerResourceMode;
        static readonly ENABLED: Internal.ServerData$ServerResourceMode;
    }
    type ServerData$ServerResourceMode_ = "enabled" | "disabled" | "prompt" | ServerData$ServerResourceMode;
    class ImmutableSetMultimap <K, V> extends Internal.ImmutableMultimap<K, V> implements Internal.SetMultimap<K, V> {
        inverse(): Internal.ImmutableMultimap<any, any>;
        inverse(): Internal.ImmutableSetMultimap<V, K>;
        asMap(): Internal.Map<any, any>;
        keys(): Internal.Multiset<any>;
        values(): Internal.Collection<any>;
        static copyOf<K_, V_>(arg0: Internal.Multimap<K_, V_>): Internal.ImmutableSetMultimap<K_, V_>;
        static copyOf<K_, V_>(arg0: Internal.Iterable_<Internal.Map$Entry_<K_, V_>>): Internal.ImmutableSetMultimap<K_, V_>;
        replaceValues(arg0: any, arg1: Internal.Iterable_<any>): Internal.Set<any>;
        replaceValues(arg0: K, arg1: Internal.Iterable_<V>): Internal.ImmutableSet<V>;
        replaceValues(arg0: any, arg1: Internal.Iterable_<any>): Internal.ImmutableCollection<any>;
        replaceValues(arg0: any, arg1: Internal.Iterable_<any>): Internal.Collection<any>;
        static toImmutableSetMultimap<T_, K_, V_>(arg0: Internal.Function_<T_, K_>, arg1: Internal.Function_<T_, V_>): Internal.Collector<T_, any, Internal.ImmutableSetMultimap<K_, V_>>;
        static flatteningToImmutableSetMultimap<T_, K_, V_>(arg0: Internal.Function_<T_, K_>, arg1: Internal.Function_<T_, Internal.Stream_<V_>>): Internal.Collector<T_, any, Internal.ImmutableSetMultimap<K_, V_>>;
        removeAll(arg0: any): Internal.ImmutableSet<V>;
        removeAll(arg0: any): Internal.Collection<any>;
        removeAll(arg0: any): Internal.ImmutableCollection<any>;
        removeAll(arg0: any): Internal.Set<any>;
        entries(): Internal.ImmutableSet<Internal.Map$Entry<K, V>>;
        entries(): Internal.Collection<any>;
        entries(): Internal.ImmutableCollection<any>;
        entries(): Internal.Set<any>;
        static of<K_, V_>(arg0: K_, arg1: V_): Internal.ImmutableSetMultimap<K_, V_>;
        static of<K_, V_>(): Internal.ImmutableSetMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_): Internal.ImmutableSetMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_, arg6: K_, arg7: V_): Internal.ImmutableSetMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_, arg6: K_, arg7: V_, arg8: K_, arg9: V_): Internal.ImmutableSetMultimap<K_, V_>;
        static of<K_, V_>(arg0: K_, arg1: V_, arg2: K_, arg3: V_, arg4: K_, arg5: V_): Internal.ImmutableSetMultimap<K_, V_>;
        get(arg0: any): Internal.ImmutableCollection<any>;
        get(arg0: K): Internal.ImmutableSet<V>;
        get(arg0: any): Internal.Collection<any>;
        get(arg0: any): Internal.Set<any>;
        static builder<K_, V_>(): Internal.ImmutableSetMultimap$Builder<K_, V_>;
        keySet(): Internal.Set<any>;
    }
    type ImmutableSetMultimap_<K, V> = ImmutableSetMultimap<K, V>;
    class ISuggestionProvider$Coordinates extends Document.Object {
        readonly field_209008_e: string;
        static readonly field_209004_a: Internal.ISuggestionProvider$Coordinates;
        static readonly field_209005_b: Internal.ISuggestionProvider$Coordinates;
        readonly field_209006_c: string;
        readonly field_209007_d: string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: string, arg2: string);
    }
    type ISuggestionProvider$Coordinates_ = ISuggestionProvider$Coordinates;
    interface Cancellable {
        cancel(): void;
        isCancelled(): boolean;
        isCancellable(): boolean;
    }
    type Cancellable_ = Cancellable;
    class ConstantUnit extends Internal.FixedUnit {
        readonly name: string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(n: string, f: number);
    }
    type ConstantUnit_ = ConstantUnit;
    class ScoreObjective extends Document.Object {
        func_199866_a(arg0: Internal.ScoreCriteria$RenderType_): void;
        func_96682_a(): Internal.Scoreboard;
        func_96680_c(): Internal.ScoreCriteria;
        func_199864_a(arg0: Internal.ITextComponent_): void;
        func_96678_d(): Internal.ITextComponent;
        func_197890_e(): Internal.ITextComponent;
        func_96679_b(): string;
        func_199865_f(): Internal.ScoreCriteria$RenderType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Scoreboard, arg1: string, arg2: Internal.ScoreCriteria, arg3: Internal.ITextComponent, arg4: Internal.ScoreCriteria$RenderType);
    }
    type ScoreObjective_ = ScoreObjective;
    class EntitySpawnedEventJS extends Internal.EntityEventJS {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(entity: Internal.Entity, world: Internal.World);
    }
    type EntitySpawnedEventJS_ = EntitySpawnedEventJS;
    interface Function16 <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R> {
        curry9(): Internal.Function9<T1, T2, T3, T4, T5, T6, T7, T8, T9, Internal.Function7<T10, T11, T12, T13, T14, T15, T16, R>>;
        curry12(): Internal.Function12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Internal.Function4<T13, T14, T15, T16, R>>;
        curry13(): Internal.Function13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Internal.Function3<T14, T15, T16, R>>;
        apply(arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13, arg13: T14, arg14: T15, arg15: T16): R;
        curry14(): Internal.Function14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Internal.BiFunction<T15, T16, R>>;
        curry7(): Internal.Function7<T1, T2, T3, T4, T5, T6, T7, Internal.Function9<T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry15(): Internal.Function15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Internal.Function<T16, R>>;
        curry8(): Internal.Function8<T1, T2, T3, T4, T5, T6, T7, T8, Internal.Function8<T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry10(): Internal.Function10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Internal.Function6<T11, T12, T13, T14, T15, T16, R>>;
        curry11(): Internal.Function11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Internal.Function5<T12, T13, T14, T15, T16, R>>;
        curry(): Internal.Function<T1, Internal.Function15<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry5(): Internal.Function5<T1, T2, T3, T4, T5, Internal.Function11<T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry6(): Internal.Function6<T1, T2, T3, T4, T5, T6, Internal.Function10<T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry3(): Internal.Function3<T1, T2, T3, Internal.Function13<T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry4(): Internal.Function4<T1, T2, T3, T4, Internal.Function12<T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        curry2(): Internal.BiFunction<T1, T2, Internal.Function14<T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>>;
        (arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13, arg13: T14, arg14: T15, arg15: T16): R;
    }
    type Function16_<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R> = ((arg0: T1, arg1: T2, arg2: T3, arg3: T4, arg4: T5, arg5: T6, arg6: T7, arg7: T8, arg8: T9, arg9: T10, arg10: T11, arg11: T12, arg12: T13, arg13: T14, arg14: T15, arg15: T16)=>R) | Function16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>;
    class MapDecoration extends Document.Object {
        func_204309_g(): Internal.ITextComponent;
        func_176111_d(): number;
        func_191179_b(): Internal.MapDecoration$Type;
        func_176112_b(): number;
        func_176113_c(): number;
        func_176110_a(): number;
        render(arg0: number): boolean;
        func_191180_f(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.MapDecoration$Type, arg1: number, arg2: number, arg3: number, arg4: Internal.ITextComponent);
    }
    type MapDecoration_ = MapDecoration;
    class StartupEventJS extends Internal.EventJS {
        post(id: string): boolean;
        post(id: string, sub: string): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type StartupEventJS_ = StartupEventJS;
    abstract class StructureProcessor extends Document.Object {
        func_230386_a_(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings): Internal.Template$BlockInfo;
        process(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos, arg3: Internal.Template$BlockInfo, arg4: Internal.Template$BlockInfo, arg5: Internal.PlacementSettings, arg6: Internal.Template): Internal.Template$BlockInfo;
        processEntity(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Template$EntityInfo, arg3: Internal.Template$EntityInfo, arg4: Internal.PlacementSettings, arg5: Internal.Template): Internal.Template$EntityInfo;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type StructureProcessor_ = StructureProcessor;
    class PointOfInterestData extends Document.Object {
        func_218248_a(arg0: BlockPos): void;
        func_218247_a(arg0: Internal.Predicate_<Internal.PointOfInterestType_>, arg1: Internal.PointOfInterestManager$Status_): Internal.Stream<Internal.PointOfInterest>;
        func_218244_d(arg0: BlockPos): Internal.Optional<Internal.PointOfInterestType>;
        func_218240_a(arg0: Internal.Consumer_<Internal.BiConsumer_<BlockPos_, Internal.PointOfInterestType_>>): void;
        static func_234158_a_(arg0: Internal.Runnable_): Internal.Codec<Internal.PointOfInterestData>;
        func_218245_a(arg0: BlockPos, arg1: Internal.Predicate_<Internal.PointOfInterestType_>): boolean;
        func_218251_c(arg0: BlockPos): boolean;
        func_218243_a(arg0: BlockPos, arg1: Internal.PointOfInterestType_): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Runnable);
    }
    type PointOfInterestData_ = PointOfInterestData;
    interface GPUWarningAccess {
        getWarnings(): Internal.ImmutableMap<string, string>;
        setWarnings(arg0: Internal.ImmutableMap<string, string>): void;
    }
    type GPUWarningAccess_ = GPUWarningAccess;
    class EntityLootEventJS extends Internal.LootEventJS {
        addEntity(type: Internal.EntityType_<any>, b: Internal.Consumer_<Internal.LootBuilder_>): void;
        modifyEntity(type: Internal.EntityType_<any>, b: Internal.Consumer_<Internal.LootBuilder_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(c: Internal.Map<ResourceLocation, Internal.JsonElement>);
    }
    type EntityLootEventJS_ = EntityLootEventJS;
    class ChannelManager$Entry extends Document.Object {
        func_217888_a(arg0: Internal.Consumer_<Internal.SoundSource_>): void;
        func_217889_a(): boolean;
        func_217891_b(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: Internal.SoundSource);
    }
    type ChannelManager$Entry_ = ChannelManager$Entry;
    class ModifierId extends ResourceLocation {
        static tryCreate(arg0: string): Internal.ModifierId;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: ResourceLocation);
        constructor(arg0: string, arg1: string);
        constructor(arg0: string);
    }
    type ModifierId_ = ModifierId;
    class CocoaTreeDecorator extends Internal.TreeDecorator {
        static readonly field_236866_a_: Internal.Codec<Internal.CocoaTreeDecorator>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number);
    }
    type CocoaTreeDecorator_ = CocoaTreeDecorator;
    class ChatVisibility extends Internal.Enum<Internal.ChatVisibility> {
        func_221254_a(): number;
        func_221251_b(): string;
        static func_221252_a(arg0: number): Internal.ChatVisibility;
        static valueOf(arg0: string): Internal.ChatVisibility;
        static values(): Internal.ChatVisibility[];
        static readonly SYSTEM: Internal.ChatVisibility;
        static readonly HIDDEN: Internal.ChatVisibility;
        static readonly FULL: Internal.ChatVisibility;
    }
    type ChatVisibility_ = "full" | "system" | "hidden" | ChatVisibility;
    interface ASPacket$Encoder <T> extends Internal.BiConsumer<T, Internal.PacketBuffer> {
    }
    type ASPacket$Encoder_<T> = ASPacket$Encoder<T>;
    class EnderDragonPartEntity extends Internal.PartEntity<Internal.EnderDragonEntity> {
        shouldRiderSit(): boolean;
        hasCooldown(): boolean;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        isMultipartEntity(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        getEntity(): Internal.Entity;
        asKJS(): any;
        canRiderInteract(): boolean;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        getClassification(arg0: boolean): Internal.EntityClassification;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        getParts(): Internal.PartEntity<any>[];
        readonly field_213852_b: Internal.EnderDragonEntity;
        readonly field_213853_c: string;
        get multipartEntity(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get entity(): Internal.Entity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.EnderDragonEntity, arg1: string, arg2: number, arg3: number);
    }
    type EnderDragonPartEntity_ = EnderDragonPartEntity;
    abstract class ParticleType <T> extends Internal.ForgeRegistryEntry<Internal.ParticleType<any>> {
        func_197571_g(): Internal.IParticleData$IDeserializer<T>;
        func_197575_f(): boolean;
        setRegistryName(arg0: ResourceLocation_): any;
        func_230522_e_(): Internal.Codec<T>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean, arg1: Internal.IParticleData$IDeserializer<T>);
    }
    type ParticleType_<T> = Registry.minecraft.particle_type | ParticleType<T>;
    class GraphicsDevice$WindowTranslucency extends Internal.Enum<Internal.GraphicsDevice$WindowTranslucency> {
        static valueOf(arg0: string): Internal.GraphicsDevice$WindowTranslucency;
        static values(): Internal.GraphicsDevice$WindowTranslucency[];
        static readonly PERPIXEL_TRANSPARENT: Internal.GraphicsDevice$WindowTranslucency;
        static readonly TRANSLUCENT: Internal.GraphicsDevice$WindowTranslucency;
        static readonly PERPIXEL_TRANSLUCENT: Internal.GraphicsDevice$WindowTranslucency;
    }
    type GraphicsDevice$WindowTranslucency_ = "perpixel_transparent" | "translucent" | "perpixel_translucent" | GraphicsDevice$WindowTranslucency;
    class DropTargetContext extends Document.Object implements Internal.Serializable {
        getComponent(): Internal.Component;
        dropComplete(arg0: boolean): void;
        getDropTarget(): Internal.DropTarget;
        get component(): Internal.Component;
        get dropTarget(): Internal.DropTarget;
    }
    type DropTargetContext_ = DropTargetContext;
    class SPlayerListItemPacket$AddPlayerData extends Document.Object {
        func_179961_d(): Internal.ITextComponent;
        func_179963_b(): number;
        func_179962_a(): Internal.GameProfile;
        func_179960_c(): Internal.GameType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.SPlayerListItemPacket, arg1: Internal.GameProfile, arg2: number, arg3: Internal.GameType, arg4: Internal.ITextComponent);
    }
    type SPlayerListItemPacket$AddPlayerData_ = SPlayerListItemPacket$AddPlayerData;
    abstract class AbstractChunkProvider extends Document.Object implements Internal.IChunkLightProvider, Internal.AutoCloseable {
        func_212863_j_(): Internal.WorldLightManager;
        func_212864_k_(): Internal.IBlockReader;
        func_225313_a(arg0: number, arg1: number): Internal.Chunk;
        func_212849_a_(arg0: number, arg1: number, arg2: Internal.ChunkStatus_, arg3: boolean): Internal.IChunk;
        func_217204_a(arg0: Internal.Entity): boolean;
        func_73148_d(): string;
        func_217203_a(arg0: boolean, arg1: boolean): void;
        func_217202_b(arg0: number, arg1: number): Internal.IBlockReader;
        func_222866_a(arg0: BlockPos): boolean;
        func_73149_a(arg0: number, arg1: number): boolean;
        func_217201_a(arg0: Internal.LightType_, arg1: Internal.SectionPos): void;
        func_222865_a(arg0: Internal.ChunkPos): boolean;
        func_217206_a(arg0: Internal.ChunkPos, arg1: boolean): void;
        func_217205_a(arg0: number, arg1: number, arg2: boolean): Internal.Chunk;
        close(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type AbstractChunkProvider_ = AbstractChunkProvider;
    interface ChannelProgressivePromise extends Internal.ProgressivePromise<void>, Internal.ChannelProgressiveFuture, Internal.ChannelPromise {
        unvoid(): Internal.ChannelProgressivePromise;
        setSuccess(arg0: void): Internal.ChannelProgressivePromise;
        setSuccess(): Internal.ChannelProgressivePromise;
        setFailure(arg0: Internal.Throwable): Internal.ChannelProgressivePromise;
        removeListeners(...arg0: Internal.GenericFutureListener<Internal.Future<void>>[]): Internal.ChannelProgressivePromise;
        syncUninterruptibly(): Internal.ChannelProgressivePromise;
        setProgress(arg0: number, arg1: number): Internal.ChannelProgressivePromise;
        await(): Internal.ChannelProgressivePromise;
        awaitUninterruptibly(): Internal.ChannelProgressivePromise;
        removeListener(arg0: Internal.GenericFutureListener_<Internal.Future_<void>>): Internal.ChannelProgressivePromise;
        addListeners(...arg0: Internal.GenericFutureListener<Internal.Future<void>>[]): Internal.ChannelProgressivePromise;
        sync(): Internal.ChannelProgressivePromise;
        addListener(arg0: Internal.GenericFutureListener_<Internal.Future_<void>>): Internal.ChannelProgressivePromise;
    }
    type ChannelProgressivePromise_ = ChannelProgressivePromise;
    interface SingleJigsawPieceAccessor {
        getTemplate(): Internal.Either<ResourceLocation, Internal.Template>;
        getProcessors(): java_.util.function_.Supplier<Internal.StructureProcessorList>;
    }
    type SingleJigsawPieceAccessor_ = SingleJigsawPieceAccessor;
    interface TriConsumer <K, V, S> {
        accept(k: K, v: V, s: S): void;
        (k: K, v: V, s: S): void;
    }
    type TriConsumer_<K, V, S> = ((k: K, v: V, s: S)=>void) | TriConsumer<K, V, S>;
    class LivingEvent$LivingJumpEvent extends Internal.LivingEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.LivingEntity);
        constructor();
    }
    type LivingEvent$LivingJumpEvent_ = LivingEvent$LivingJumpEvent;
    class TickEvent$PlayerTickEvent extends Internal.TickEvent {
        readonly player: Internal.PlayerEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TickEvent$Phase, arg1: Internal.PlayerEntity);
        constructor();
    }
    type TickEvent$PlayerTickEvent_ = TickEvent$PlayerTickEvent;
    class RewardTable extends Internal.QuestObjectBase {
        addMouseOverText(arg0: Internal.TooltipList, arg1: boolean, arg2: boolean): void;
        getFilename(): string;
        getTotalWeight(arg0: boolean): number;
        lootTableId: ResourceLocation;
        useTitle: boolean;
        readonly file: Internal.QuestFile;
        filename: string;
        emptyWeight: number;
        lootCrate: Internal.LootCrate;
        readonly fakeQuest: Internal.Quest;
        readonly rewards: Internal.List<Internal.WeightedReward>;
        lootSize: number;
        hideTooltip: boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.QuestFile);
    }
    type RewardTable_ = RewardTable;
    class RenderState$ShadeModelState extends Internal.RenderState {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: boolean);
    }
    type RenderState$ShadeModelState_ = RenderState$ShadeModelState;
    class SUpdateRecipesPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_199616_a(): Internal.List<Internal.IRecipe<any>>;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148833_a(arg0: Internal.INetHandler): void;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        static func_218771_a<T_>(arg0: T_, arg1: Internal.PacketBuffer): void;
        static func_218772_c(arg0: Internal.PacketBuffer): Internal.IRecipe<any>;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.Collection<Internal.IRecipe<any>>);
    }
    type SUpdateRecipesPacket_ = SUpdateRecipesPacket;
    interface VertexDrain {
        createSink<T>(arg0: Internal.VertexType_<T>): T;
        (arg0: Internal.VertexType<T>): T;
    }
    type VertexDrain_ = ((arg0: Internal.VertexType<T>)=>T) | VertexDrain;
    class ChunkBuildResult <T> extends Document.Object {
        readonly data: Internal.ChunkRenderData;
        passesToUpload: Internal.BlockRenderPass[];
        readonly render: Internal.ChunkRenderContainer<T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(render: Internal.ChunkRenderContainer<T>, data: Internal.ChunkRenderData);
    }
    type ChunkBuildResult_<T> = ChunkBuildResult<T>;
    class ZoneOffsetTransitionRule extends Document.Object implements Internal.Serializable {
        isMidnightEndOfDay(): boolean;
        getDayOfWeek(): Internal.DayOfWeek;
        getLocalTime(): Internal.LocalTime;
        static of(arg0: Internal.Month_, arg1: number, arg2: Internal.DayOfWeek_, arg3: Internal.LocalTime, arg4: boolean, arg5: Internal.ZoneOffsetTransitionRule$TimeDefinition_, arg6: Internal.ZoneOffset, arg7: Internal.ZoneOffset, arg8: Internal.ZoneOffset): Internal.ZoneOffsetTransitionRule;
        getOffsetAfter(): Internal.ZoneOffset;
        getOffsetBefore(): Internal.ZoneOffset;
        getStandardOffset(): Internal.ZoneOffset;
        createTransition(arg0: number): Internal.ZoneOffsetTransition;
        getTimeDefinition(): Internal.ZoneOffsetTransitionRule$TimeDefinition;
        getMonth(): Internal.Month;
        getDayOfMonthIndicator(): number;
        get localTime(): Internal.LocalTime;
        get dayOfWeek(): Internal.DayOfWeek;
        get dayOfMonthIndicator(): number;
        get midnightEndOfDay(): boolean;
        get standardOffset(): Internal.ZoneOffset;
        get month(): Internal.Month;
        get timeDefinition(): Internal.ZoneOffsetTransitionRule$TimeDefinition;
        get offsetAfter(): Internal.ZoneOffset;
        get offsetBefore(): Internal.ZoneOffset;
    }
    type ZoneOffsetTransitionRule_ = ZoneOffsetTransitionRule;
    class LootingLevelEvent extends Internal.LivingEvent {
        getLootingLevel(): number;
        getDamageSource(): Internal.DamageSource;
        setLootingLevel(arg0: number): void;
        get damageSource(): Internal.DamageSource;
        get lootingLevel(): number;
        set lootingLevel(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.LivingEntity, arg1: Internal.DamageSource, arg2: number);
    }
    type LootingLevelEvent_ = LootingLevelEvent;
    interface ASPacket$Handler <T> extends Internal.BiConsumer<T, java_.util.function_.Supplier<Internal.NetworkEvent$Context>> {
        handleServer(arg0: T, arg1: Internal.NetworkEvent$Context): void;
        handleClient(arg0: T, arg1: Internal.NetworkEvent$Context): void;
        handle(arg0: T, arg1: Internal.NetworkEvent$Context, arg2: Internal.LogicalSide_): void;
        accept(arg0: any, arg1: any): void;
        accept(arg0: T, arg1: java_.util.function_.Supplier_<Internal.NetworkEvent$Context_>): void;
        (arg0: T, arg1: Internal.NetworkEvent$Context, arg2: Internal.LogicalSide): void;
    }
    type ASPacket$Handler_<T> = ((arg0: T, arg1: Internal.NetworkEvent$Context, arg2: Internal.LogicalSide)=>void) | ASPacket$Handler<T>;
    class ClientAdvancementManager extends Document.Object {
        func_194230_a(arg0: Internal.Advancement, arg1: boolean): void;
        func_192799_a(arg0: Internal.SAdvancementInfoPacket): void;
        func_194229_a(): Internal.AdvancementList;
        handler$cmn000$patchouli_onSync(arg0: Internal.SAdvancementInfoPacket, arg1: Internal.CallbackInfo): void;
        func_192798_a(arg0: Internal.ClientAdvancementManager$IListener): void;
        field_194231_f: Internal.Advancement;
        readonly field_192803_d: Internal.Map<Internal.Advancement, Internal.AdvancementProgress>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Minecraft);
    }
    type ClientAdvancementManager_ = ClientAdvancementManager;
    abstract class PointFree <T> extends Document.Object {
        eval(): Internal.Function<Internal.DynamicOps<any>, T>;
        static indent(arg0: number): string;
        toString(arg0: number): string;
        evalCached(): Internal.Function<Internal.DynamicOps<any>, T>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PointFree_<T> = PointFree<T>;
    class BlockLootEventJS extends Internal.LootEventJS {
        addSimpleBlock(blocks: Internal.BlockStatePredicate_): void;
        addSimpleBlock(blocks: Internal.BlockStatePredicate_, item: Internal.ItemStack): void;
        build(blocks: Internal.BlockStatePredicate_, b: Internal.Consumer_<Internal.LootBuilder_>): void;
        addBlock(blocks: Internal.BlockStatePredicate_, b: Internal.Consumer_<Internal.LootBuilder_>): void;
        modifyBlock(blocks: Internal.BlockStatePredicate_, b: Internal.Consumer_<Internal.LootBuilder_>): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(c: Internal.Map<ResourceLocation, Internal.JsonElement>);
    }
    type BlockLootEventJS_ = BlockLootEventJS;
    class EntityRendererManager extends Document.Object {
        func_229099_b_(arg0: Internal.Entity): number;
        func_229098_b_(): Internal.Quaternion;
        getSkinMap(): Internal.Map<string, Internal.PlayerRenderer>;
        func_78717_a(arg0: Internal.World): void;
        func_178634_b(): boolean;
        func_78716_a(): Internal.FontRenderer;
        func_178633_a(arg0: boolean): void;
        func_78714_a(arg0: number, arg1: number, arg2: number): number;
        validateRendererExistence(): void;
        func_178629_b(arg0: boolean): void;
        func_229088_a_(arg0: Internal.World, arg1: Internal.ActiveRenderInfo, arg2: Internal.Entity): void;
        func_229085_a_<E_>(arg0: E_, arg1: number): number;
        func_229084_a_<E_>(arg0: E_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.MatrixStack, arg7: Internal.IRenderTypeBuffer_, arg8: number): void;
        func_229089_a_(arg0: Internal.Quaternion): void;
        func_229086_a_<E_>(arg0: E_, arg1: Internal.ClippingHelper, arg2: number, arg3: number, arg4: number): boolean;
        func_229087_a_<T_>(arg0: Internal.EntityType_<T_>, arg1: Internal.EntityRenderer<T_>): void;
        func_78713_a<T_>(arg0: T_): Internal.EntityRenderer<T_>;
        field_147941_i: Internal.Entity;
        field_178637_m: Internal.PlayerRenderer;
        field_217783_c: Internal.ActiveRenderInfo;
        readonly field_78733_k: Internal.GameSettings;
        readonly field_78724_e: Internal.TextureManager;
        field_78729_o: Internal.Map<Internal.EntityType<any>, Internal.EntityRenderer<any>>;
        get skinMap(): Internal.Map<string, Internal.PlayerRenderer>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TextureManager, arg1: Internal.ItemRenderer, arg2: any, arg3: Internal.FontRenderer, arg4: Internal.GameSettings);
    }
    type EntityRendererManager_ = EntityRendererManager;
    abstract class Screen extends Internal.FocusableGui implements Internal.IScreen, Internal.IRenderable {
        renderToolTip(arg0: Internal.MatrixStack, arg1: Internal.List<Internal.IReorderingProcessor>, arg2: number, arg3: number, arg4: Internal.FontRenderer): void;
        static func_231174_t_(): boolean;
        func_238651_a_(arg0: Internal.MatrixStack, arg1: number): void;
        func_231178_ax__(): boolean;
        func_238654_b_(arg0: Internal.MatrixStack, arg1: Internal.List<Internal.IReorderingProcessor>, arg2: number, arg3: number): void;
        func_230446_a_(arg0: Internal.MatrixStack): void;
        func_212927_b(arg0: number, arg1: number): void;
        func_212928_a(arg0: Internal.IGuiEventListener): void;
        func_243308_b(arg0: Internal.MatrixStack, arg1: Internal.List<Internal.ITextComponent>, arg2: number, arg3: number): void;
        func_231159_b_(arg0: string, arg1: boolean): void;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_231175_as__(): void;
        static func_231153_a_(arg0: Internal.Runnable_, arg1: string, arg2: string): void;
        static func_231170_j_(arg0: number): boolean;
        func_230455_a_(arg0: Internal.Style): boolean;
        func_231044_a_(arg0: number, arg1: number, arg2: number): boolean;
        static func_231169_i_(arg0: number): boolean;
        renderWrappedToolTip(arg0: Internal.MatrixStack, arg1: Internal.List<Internal.ITextProperties>, arg2: number, arg3: number, arg4: Internal.FontRenderer): void;
        func_231177_au__(): boolean;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_230476_a_(arg0: Internal.List<Internal.Path>): void;
        func_231151_a_(arg0: Internal.ItemStack): Internal.List<Internal.ITextComponent>;
        func_231171_q_(): Internal.ITextComponent;
        static func_231172_r_(): boolean;
        static func_231168_h_(arg0: number): boolean;
        static func_231173_s_(): boolean;
        func_231164_f_(): void;
        func_238652_a_(arg0: Internal.MatrixStack, arg1: Internal.ITextComponent_, arg2: number, arg3: number): void;
        func_231161_c_(arg0: string): void;
        func_231158_b_(arg0: Internal.Minecraft, arg1: number, arg2: number): void;
        func_231023_e_(): void;
        func_212932_b(arg0: Internal.IGuiEventListener): void;
        getMinecraft(): Internal.Minecraft;
        func_231048_c_(arg0: number, arg1: number, arg2: number): boolean;
        func_230430_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
        func_212930_a(arg0: number, arg1: number): Internal.Optional<Internal.IGuiEventListener>;
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_230480_a_<T_>(arg0: T_): T_;
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231049_c__(arg0: boolean): boolean;
        func_231152_a_(arg0: Internal.Minecraft, arg1: number, arg2: number): void;
        static func_231166_g_(arg0: number): boolean;
        func_231167_h_(): string;
        func_231165_f_(arg0: number): void;
        field_230709_l_: number;
        field_230708_k_: number;
        field_230710_m_: Internal.List<net.minecraft.client.gui.widget.Widget>;
        field_230711_n_: boolean;
        field_230712_o_: Internal.FontRenderer;
        get minecraft(): Internal.Minecraft;
    }
    type Screen_ = Screen;
    class ItemStack extends Internal.CapabilityProvider<Internal.ItemStack> implements Internal.IForgeItemStack, Internal.ItemFiltersStack, Internal.ItemStackKJS {
        func_77953_t(): Internal.Rarity;
        getToolTypes(): Internal.Set<Internal.ToolType>;
        func_222117_E(): boolean;
        func_185136_b(arg0: Internal.ItemStack): boolean;
        func_190926_b(): boolean;
        static func_185132_d(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_77983_a(arg0: string, arg1: Internal.INBT): void;
        func_179548_a(arg0: Internal.World, arg1: Internal.BlockState, arg2: BlockPos, arg3: Internal.PlayerEntity): void;
        getItemEnchantability(): number;
        func_77957_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: Hand_): Internal.ActionResult<Internal.ItemStack>;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_77976_d(): number;
        getInventoryFilterData(): Internal.ItemInventory;
        getXpRepairRatio(): number;
        func_82836_z(): Internal.ItemFrameEntity;
        onEntityItemUpdate(arg0: Internal.ItemEntity): boolean;
        func_185129_a(arg0: net.minecraft.entity.ai.attributes.Attribute_, arg1: Internal.AttributeModifier, arg2: EquipmentSlot_): void;
        func_190915_d(arg0: number): void;
        func_96631_a(arg0: number, arg1: Internal.Random, arg2: Internal.ServerPlayerEntity): boolean;
        func_77946_l(): Internal.ItemStack;
        func_234694_A_(): Internal.Entity;
        func_77942_o(): boolean;
        func_226629_F_(): Internal.SoundEvent;
        canDisableShield(arg0: Internal.ItemStack, arg1: Internal.LivingEntity, arg2: Internal.LivingEntity): boolean;
        func_150997_a(arg0: Internal.BlockState): number;
        func_196085_b(arg0: number): void;
        func_111282_a_(arg0: Internal.PlayerEntity, arg1: Internal.LivingEntity, arg2: Hand_): Internal.ActionResultType;
        isPiglinCurrency(): boolean;
        func_77984_f(): boolean;
        func_77969_a(arg0: Internal.ItemStack): boolean;
        func_179543_a(arg0: string): Internal.CompoundNBT;
        getShareTag(): Internal.CompoundNBT;
        onDroppedByPlayer(arg0: Internal.PlayerEntity): boolean;
        func_151000_E(): Internal.ITextComponent;
        onEntitySwing(arg0: Internal.LivingEntity): boolean;
        handler$cmd000$addPrismEnchantmentGlint(arg0: Internal.CallbackInfoReturnable<any>): void;
        areShareTagsEqual(arg0: Internal.ItemStack): boolean;
        func_77988_m(): number;
        static func_222120_a(arg0: Internal.List<Internal.ITextComponent>, arg1: Internal.ListNBT): void;
        canEquip(arg0: EquipmentSlot_, arg1: Internal.Entity): boolean;
        func_77980_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: number): void;
        func_77961_a(arg0: Internal.LivingEntity, arg1: Internal.PlayerEntity): void;
        getStringValueFilterData(): Internal.StringValueData<any>;
        onBlockStartBreak(arg0: BlockPos, arg1: Internal.PlayerEntity): boolean;
        static func_179545_c(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_77977_a(): string;
        getEntityLifespan(arg0: Internal.World): number;
        func_82838_A(): number;
        removeTagKJS(): void;
        func_82839_y(): boolean;
        func_77958_k(): number;
        onArmorTick(arg0: Internal.World, arg1: Internal.PlayerEntity): void;
        func_226630_G_(): Internal.SoundEvent;
        hasContainerItem(): boolean;
        func_234695_a_(arg0: Internal.Entity): void;
        isShield(arg0: Internal.LivingEntity): boolean;
        func_200301_q(): Internal.ITextComponent;
        onItemUseFirst(arg0: Internal.ItemUseContext): Internal.ActionResultType;
        func_150998_b(arg0: Internal.BlockState): boolean;
        getItemFiltersData(): any;
        func_77950_b(arg0: Internal.World, arg1: Internal.LivingEntity): Internal.ItemStack;
        func_77973_b(): Internal.Item;
        func_196084_a(arg0: Internal.ItemUseContext): Internal.ActionResultType;
        redirect$cml000$enhanceEnchantmentTooltip(arg0: Internal.ItemStack): Internal.ListNBT;
        func_77985_e(): boolean;
        func_77966_a(arg0: Internal.Enchantment_, arg1: number): void;
        static func_77989_b(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        equals(arg0: Internal.ItemStack, arg1: boolean): boolean;
        makesPiglinsNeutral(arg0: Internal.LivingEntity): boolean;
        static func_199557_a(arg0: Internal.CompoundNBT_): Internal.ItemStack;
        isEnderMask(arg0: Internal.PlayerEntity, arg1: Internal.EndermanEntity): boolean;
        canApplyAtEnchantingTable(arg0: Internal.Enchantment_): boolean;
        func_77962_s(): boolean;
        func_77978_p(): Internal.CompoundNBT;
        func_190916_E(): number;
        canElytraFly(arg0: Internal.LivingEntity): boolean;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        createDataIF(arg0: Internal.Item_): any;
        func_190920_e(arg0: number): void;
        getHarvestLevel(arg0: Internal.ToolType, arg1: Internal.PlayerEntity, arg2: Internal.BlockState): number;
        func_77955_b(arg0: Internal.CompoundNBT_): Internal.CompoundNBT;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack): boolean;
        func_77951_h(): boolean;
        handler$cml000$addMissingEnchantmentTooltip(arg0: Internal.PlayerEntity, arg1: Internal.ITooltipFlag_, arg2: Internal.CallbackInfoReturnable<any>, arg3: Internal.List<any>): void;
        readShareTag(arg0: Internal.CompoundNBT_): void;
        func_82841_c(arg0: number): void;
        isBookEnchantable(arg0: Internal.ItemStack): boolean;
        static func_77970_a(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        func_196083_e(arg0: string): void;
        func_200302_a(arg0: Internal.ITextComponent_): Internal.ItemStack;
        onUsingTick(arg0: Internal.LivingEntity, arg1: number): void;
        func_190917_f(arg0: number): void;
        func_206847_b(arg0: Internal.ITagCollectionSupplier, arg1: Internal.CachedBlockInfo): boolean;
        func_77974_b(arg0: Internal.World, arg1: Internal.LivingEntity, arg2: number): void;
        isRepairable(): boolean;
        getBurnTime(arg0: Internal.IRecipeType<any>): number;
        getBurnTime(): number;
        func_77948_v(): boolean;
        elytraFlightTick(arg0: Internal.LivingEntity, arg1: number): boolean;
        func_77986_q(): Internal.ListNBT;
        func_111283_C(arg0: EquipmentSlot_): Internal.Multimap<net.minecraft.entity.ai.attributes.Attribute, Internal.AttributeModifier>;
        func_190925_c(arg0: string): Internal.CompoundNBT;
        func_77956_u(): boolean;
        func_222122_m(): boolean;
        func_77982_d(arg0: Internal.CompoundNBT_): void;
        onHorseArmorTick(arg0: Internal.World, arg1: Internal.MobEntity): void;
        func_196082_o(): Internal.CompoundNBT;
        func_77979_a(arg0: number): Internal.ItemStack;
        func_77952_i(): number;
        getHighlightTip(arg0: Internal.ITextComponent_): Internal.ITextComponent;
        func_77975_n(): Internal.UseAction;
        func_82840_a(arg0: Internal.PlayerEntity, arg1: Internal.ITooltipFlag_): Internal.List<Internal.ITextComponent>;
        func_82837_s(): boolean;
        func_190921_D(): number;
        doesSneakBypassUse(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        func_222118_a<T_>(arg0: number, arg1: T_, arg2: Internal.Consumer_<T_>): void;
        getContainerItem(): Internal.ItemStack;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        func_242395_a(arg0: Internal.ItemStack$TooltipDisplayFlags_): void;
        asKJS(): any;
        func_206848_a(arg0: Internal.ITagCollectionSupplier, arg1: Internal.CachedBlockInfo): boolean;
        func_190918_g(arg0: number): void;
        func_77945_a(arg0: Internal.World, arg1: Internal.Entity, arg2: number, arg3: boolean): void;
        getEquipmentSlot(): EquipmentSlot;
        func_135074_t(): void;
        func_222121_b(arg0: Internal.World, arg1: Internal.LivingEntity, arg2: number): void;
        getStack(): Internal.ItemStack;
        static readonly field_234691_a_: Internal.Codec<Internal.ItemStack>;
        static readonly field_111284_a: Internal.DecimalFormat;
        static readonly field_190927_a: Internal.ItemStack;
        get stack(): Internal.ItemStack;
        get itemFiltersData(): any;
        get itemEnchantability(): number;
        get equipmentSlot(): EquipmentSlot;
        get containerItem(): Internal.ItemStack;
        get xpRepairRatio(): number;
        get shareTag(): Internal.CompoundNBT;
        get repairable(): boolean;
        get inventoryFilterData(): Internal.ItemInventory;
        get stringValueFilterData(): Internal.StringValueData<any>;
        get burnTime(): number;
        get piglinCurrency(): boolean;
        get toolTypes(): Internal.Set<Internal.ToolType>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IItemProvider, arg1: number, arg2: Internal.CompoundNBT);
        constructor(arg0: Internal.IItemProvider, arg1: number);
        constructor(arg0: Internal.IItemProvider);
    }
    type ItemStack_ = ItemStack;
    class SmokerContainer extends Internal.AbstractFurnaceContainer {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: Internal.PlayerInventory);
        constructor(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.IInventory, arg3: Internal.IIntArray);
    }
    type SmokerContainer_ = SmokerContainer;
    interface UnmodifiableCommentedConfig$Entry extends Internal.UnmodifiableConfig$Entry {
        getComment(): string;
        (): string;
    }
    type UnmodifiableCommentedConfig$Entry_ = (()=>string) | UnmodifiableCommentedConfig$Entry;
    class RenderSkyEvent extends Internal.WorldRenderEvent {
        getPartialTicks(): number;
        getMatrixStack(): Internal.MatrixStack;
        get matrixStack(): Internal.MatrixStack;
        get partialTicks(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.MatrixStack, arg1: number);
    }
    type RenderSkyEvent_ = RenderSkyEvent;
    class ItemEntity extends Internal.Entity implements Internal.IFluidRecipeInput, Internal.ItemEntityAccess, Internal.AccessorItemEntity {
        shouldRiderSit(): boolean;
        getAge(): number;
        getPickedResult(arg0: Internal.RayTraceResult): Internal.ItemStack;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        canBeRiddenInWater(arg0: Internal.Entity): boolean;
        func_174868_q(): void;
        func_174869_p(): void;
        static func_226533_a_(arg0: Internal.ItemStack, arg1: Internal.ItemStack, arg2: number): Internal.ItemStack;
        handler$cch000$interactio$checkFluidRecipes(arg0: Internal.CallbackInfo): void;
        handler$cch000$interactio$invalidateInputs(arg0: Internal.CallbackInfo): void;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        func_174867_a(arg0: number): void;
        interactio$updateValidInputs(): void;
        getAgeNonsided(): number;
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntitySize): number;
        func_234272_a_(arg0: number): number;
        getParts(): Internal.PartEntity<any>[];
        isI2FInput(): boolean;
        func_174872_o(): number;
        hasCooldown(): boolean;
        func_174871_r(): void;
        func_234273_t_(): Internal.ItemEntity;
        func_174870_v(): void;
        func_174873_u(): void;
        func_174874_s(): boolean;
        isMultipartEntity(): boolean;
        isF2FInput(): boolean;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.INBT): void;
        getEntity(): Internal.Entity;
        static func_226532_a_(arg0: Internal.ItemStack, arg1: Internal.ItemStack): boolean;
        asKJS(): any;
        getPickupDelay(): number;
        canRiderInteract(): boolean;
        func_200214_m(): Internal.UUID;
        func_92059_d(): Internal.ItemStack;
        func_200215_l(): Internal.UUID;
        func_92058_a(arg0: Internal.ItemStack): void;
        func_213281_b(arg0: Internal.CompoundNBT_): void;
        func_200217_b(arg0: Internal.UUID): void;
        func_200216_c(arg0: Internal.UUID): void;
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntitySize;
        func_70037_a(arg0: Internal.CompoundNBT_): void;
        getClassification(arg0: boolean): Internal.EntityClassification;
        setAge(arg0: number): void;
        lifespan: number;
        field_70292_b: number;
        field_70290_d: number;
        field_145804_b: number;
        get pickupDelay(): number;
        get ageNonsided(): number;
        get i2FInput(): boolean;
        get parts(): Internal.PartEntity<any>[];
        get multipartEntity(): boolean;
        get f2FInput(): boolean;
        get age(): number;
        get entity(): Internal.Entity;
        set age(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number, arg4: Internal.ItemStack);
        constructor(arg0: Internal.World, arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.EntityType<Internal.ItemEntity>, arg1: Internal.World);
    }
    type ItemEntity_ = ItemEntity;
    class ScriptPack extends Document.Object {
        readonly manager: Internal.ScriptManager;
        scope: Internal.Scriptable;
        context: Internal.Context;
        readonly scripts: Internal.List<Internal.ScriptFile>;
        readonly info: Internal.ScriptPackInfo;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(m: Internal.ScriptManager, i: Internal.ScriptPackInfo);
    }
    type ScriptPack_ = ScriptPack;
    class BlockState extends Internal.AbstractBlock$AbstractBlockState implements Internal.IForgeBlockState, Internal.BlockStateFTBC {
        rotate(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.Rotation_): Internal.BlockState;
        getStateAtViewpoint(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Vec3): Internal.BlockState;
        onBlockExploded(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Explosion): void;
        getBedDirection(arg0: Internal.IWorldReader, arg1: BlockPos): Internal.Direction;
        getHarvestLevel(): number;
        isBed(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.LivingEntity): boolean;
        canHarvestBlock(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.PlayerEntity): boolean;
        getBedSpawnPosition(arg0: Internal.EntityType_<any>, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: number, arg4: Internal.LivingEntity): Internal.Optional<Vec3>;
        isLadder(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.LivingEntity): boolean;
        shouldDisplayFluidOverlay(arg0: Internal.IBlockDisplayReader, arg1: BlockPos, arg2: Internal.FluidState): boolean;
        getFTBCIsWater(): boolean;
        canStickTo(arg0: Internal.BlockState): boolean;
        onNeighborChange(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos): void;
        getPickBlock(arg0: Internal.RayTraceResult, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.PlayerEntity): Internal.ItemStack;
        getWeakChanges(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        isBurning(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        canEntityDestroy(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Entity): boolean;
        getHarvestTool(): Internal.ToolType;
        hasTileEntity(): boolean;
        isPortalFrame(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        getExplosionResistance(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Explosion): number;
        isScaffolding(arg0: Internal.LivingEntity): boolean;
        canSustainPlant(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_, arg3: Internal.IPlantable_): boolean;
        observedNeighborChange(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Block_, arg3: BlockPos): void;
        canDropFromExplosion(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Explosion): boolean;
        removedByPlayer(arg0: Internal.World, arg1: BlockPos, arg2: Internal.PlayerEntity, arg3: boolean, arg4: Internal.FluidState): boolean;
        createTileEntity(arg0: Internal.IBlockReader): Internal.TileEntity;
        isStickyBlock(): boolean;
        isFertile(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        getFogColor(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Entity, arg3: Vec3, arg4: number): Vec3;
        getAiPathNodeType(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.MobEntity): Internal.PathNodeType;
        getAiPathNodeType(arg0: Internal.IBlockReader, arg1: BlockPos): Internal.PathNodeType;
        isSlimeBlock(): boolean;
        getLightValue(arg0: Internal.IBlockReader, arg1: BlockPos): number;
        getFireSpreadSpeed(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): number;
        getBlockState(): Internal.BlockState;
        isAir(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        getToolModifiedState(arg0: Internal.World, arg1: BlockPos, arg2: Internal.PlayerEntity, arg3: Internal.ItemStack, arg4: Internal.ToolType): Internal.BlockState;
        getBeaconColorMultiplier(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos): number[];
        getExpDrop(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: number, arg3: number): number;
        isConduitFrame(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: BlockPos): boolean;
        canBeReplacedByLogs(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        shouldCheckWeakPower(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Entity): boolean;
        addLandingEffects(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.LivingEntity, arg4: number): boolean;
        canCreatureSpawn(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.EntitySpawnPlacementRegistry$PlacementType_, arg3: Internal.EntityType_<any>): boolean;
        getSoundType(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Entity): Internal.SoundType;
        isToolEffective(arg0: Internal.ToolType): boolean;
        addRunningEffects(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Entity): boolean;
        canBeReplacedByLeaves(arg0: Internal.IWorldReader, arg1: BlockPos): boolean;
        getSlipperiness(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Entity): number;
        isFlammable(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        addDestroyEffects(arg0: Internal.World, arg1: BlockPos, arg2: Internal.ParticleManager): boolean;
        getEnchantPowerBonus(arg0: Internal.IWorldReader, arg1: BlockPos): number;
        setBedOccupied(arg0: Internal.World, arg1: BlockPos, arg2: Internal.LivingEntity, arg3: boolean): void;
        isFireSource(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        getRespawnPosition(arg0: Internal.EntityType_<any>, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: number, arg4: Internal.LivingEntity): Internal.Optional<Vec3>;
        catchFire(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Direction_, arg3: Internal.LivingEntity): void;
        canConnectRedstone(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        addHitEffects(arg0: Internal.World, arg1: Internal.RayTraceResult, arg2: Internal.ParticleManager): boolean;
        getFlammability(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.Direction_): number;
        static readonly field_235877_b_: Internal.Codec<Internal.BlockState>;
        get blockState(): Internal.BlockState;
        get stickyBlock(): boolean;
        get slimeBlock(): boolean;
        get fTBCIsWater(): boolean;
        get harvestTool(): Internal.ToolType;
        get harvestLevel(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Block, arg1: Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>, arg2: Internal.MapCodec<Internal.BlockState>);
    }
    type BlockState_ = BlockState;
    interface ILootConditionConsumer <T> {
        func_212862_c_(): T;
        func_212840_b_(arg0: Internal.ILootCondition$IBuilder_): T;
    }
    type ILootConditionConsumer_<T> = ILootConditionConsumer<T>;
    interface AccessorRenderTypeBuffers {
        getFixedBuffers(): Internal.SortedMap<Internal.RenderType, Internal.BufferBuilder>;
        (): Internal.SortedMap<Internal.RenderType, Internal.BufferBuilder>;
    }
    type AccessorRenderTypeBuffers_ = (()=>Internal.SortedMap<Internal.RenderType, Internal.BufferBuilder>) | AccessorRenderTypeBuffers;
    class DifficultyInstance extends Document.Object {
        func_180170_c(): number;
        func_203095_a(): Internal.Difficulty;
        func_180168_b(): number;
        func_193845_a(arg0: number): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Difficulty, arg1: number, arg2: number, arg3: number);
    }
    type DifficultyInstance_ = DifficultyInstance;
    class ArcRecipeJS extends Internal.BMRecipeJS {
        consumeIngredient(arg0: boolean): Internal.ArcRecipeJS;
        outputFluid(arg0: any): Internal.ArcRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ArcRecipeJS_ = ArcRecipeJS;
    class MemoryStack extends Internal.Pointer$Default implements Internal.AutoCloseable {
        static stackASCIISafe(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        static stackASCIISafe(arg0: Internal.CharSequence): Internal.ByteBuffer;
        getPointerAddress(): number;
        static stackASCII(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        static stackASCII(arg0: Internal.CharSequence): Internal.ByteBuffer;
        static stackMallocLong(arg0: number): Internal.LongBuffer;
        static stackGet(): Internal.MemoryStack;
        ASCII(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        ASCII(arg0: Internal.CharSequence): Internal.ByteBuffer;
        static stackPop(): Internal.MemoryStack;
        static stackMallocDouble(arg0: number): Internal.DoubleBuffer;
        static stackBytes(arg0: number): Internal.ByteBuffer;
        static stackBytes(arg0: number, arg1: number): Internal.ByteBuffer;
        static stackBytes(arg0: number, arg1: number, arg2: number, arg3: number): Internal.ByteBuffer;
        static stackBytes(...arg0: number[]): Internal.ByteBuffer;
        static stackBytes(arg0: number, arg1: number, arg2: number): Internal.ByteBuffer;
        static stackMallocPointer(arg0: number): Internal.PointerBuffer;
        static create(arg0: number): Internal.MemoryStack;
        static create(arg0: Internal.ByteBuffer): Internal.MemoryStack;
        static create(): Internal.MemoryStack;
        static stackLongs(arg0: number, arg1: number, arg2: number, arg3: number): Internal.LongBuffer;
        static stackLongs(...arg0: number[]): Internal.LongBuffer;
        static stackLongs(arg0: number, arg1: number, arg2: number): Internal.LongBuffer;
        static stackLongs(arg0: number, arg1: number): Internal.LongBuffer;
        static stackLongs(arg0: number): Internal.LongBuffer;
        static stackDoubles(...arg0: number[]): Internal.DoubleBuffer;
        static stackDoubles(arg0: number): Internal.DoubleBuffer;
        static stackDoubles(arg0: number, arg1: number): Internal.DoubleBuffer;
        static stackDoubles(arg0: number, arg1: number, arg2: number): Internal.DoubleBuffer;
        static stackDoubles(arg0: number, arg1: number, arg2: number, arg3: number): Internal.DoubleBuffer;
        mallocPointer(arg0: number): Internal.PointerBuffer;
        callocDouble(arg0: number): Internal.DoubleBuffer;
        pointers(arg0: number, arg1: number, arg2: number): Internal.PointerBuffer;
        pointers(arg0: number, arg1: number, arg2: number, arg3: number): Internal.PointerBuffer;
        pointers(...arg0: number[]): Internal.PointerBuffer;
        pointers(arg0: number, arg1: number): Internal.PointerBuffer;
        pointers(arg0: number): Internal.PointerBuffer;
        pointers(arg0: Internal.Pointer_, arg1: Internal.Pointer_, arg2: Internal.Pointer_, arg3: Internal.Pointer_): Internal.PointerBuffer;
        pointers(arg0: Internal.Buffer, arg1: Internal.Buffer, arg2: Internal.Buffer, arg3: Internal.Buffer): Internal.PointerBuffer;
        pointers(arg0: Internal.Pointer_, arg1: Internal.Pointer_, arg2: Internal.Pointer_): Internal.PointerBuffer;
        pointers(arg0: Internal.Buffer, arg1: Internal.Buffer, arg2: Internal.Buffer): Internal.PointerBuffer;
        pointers(arg0: Internal.Buffer, arg1: Internal.Buffer): Internal.PointerBuffer;
        pointers(arg0: Internal.Buffer): Internal.PointerBuffer;
        pointers(arg0: Internal.Pointer_): Internal.PointerBuffer;
        pointers(arg0: Internal.Pointer_, arg1: Internal.Pointer_): Internal.PointerBuffer;
        pointers(...arg0: Internal.Pointer[]): Internal.PointerBuffer;
        pointers(...arg0: Internal.Buffer[]): Internal.PointerBuffer;
        static stackMallocFloat(arg0: number): Internal.FloatBuffer;
        callocPointer(arg0: number): Internal.PointerBuffer;
        nmalloc(arg0: number): number;
        nmalloc(arg0: number, arg1: number): number;
        static stackUTF16(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        static stackUTF16(arg0: Internal.CharSequence): Internal.ByteBuffer;
        callocInt(arg0: number): Internal.IntBuffer;
        floats(...arg0: number[]): Internal.FloatBuffer;
        floats(arg0: number): Internal.FloatBuffer;
        floats(arg0: number, arg1: number): Internal.FloatBuffer;
        floats(arg0: number, arg1: number, arg2: number): Internal.FloatBuffer;
        floats(arg0: number, arg1: number, arg2: number, arg3: number): Internal.FloatBuffer;
        static stackMallocShort(arg0: number): Internal.ShortBuffer;
        setPointer(arg0: number): void;
        static stackMallocInt(arg0: number): Internal.IntBuffer;
        push(): Internal.MemoryStack;
        static stackCallocLong(arg0: number): Internal.LongBuffer;
        getFrameIndex(): number;
        nUTF16(arg0: Internal.CharSequence, arg1: boolean): number;
        doubles(arg0: number): Internal.DoubleBuffer;
        doubles(arg0: number, arg1: number, arg2: number, arg3: number): Internal.DoubleBuffer;
        doubles(arg0: number, arg1: number): Internal.DoubleBuffer;
        doubles(arg0: number, arg1: number, arg2: number): Internal.DoubleBuffer;
        doubles(...arg0: number[]): Internal.DoubleBuffer;
        mallocFloat(arg0: number): Internal.FloatBuffer;
        UTF8(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        UTF8(arg0: Internal.CharSequence): Internal.ByteBuffer;
        nUTF16Safe(arg0: Internal.CharSequence, arg1: boolean): number;
        static stackCallocShort(arg0: number): Internal.ShortBuffer;
        callocFloat(arg0: number): Internal.FloatBuffer;
        static ncreate(arg0: number, arg1: number): Internal.MemoryStack;
        UTF16(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        UTF16(arg0: Internal.CharSequence): Internal.ByteBuffer;
        callocLong(arg0: number): Internal.LongBuffer;
        ASCIISafe(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        ASCIISafe(arg0: Internal.CharSequence): Internal.ByteBuffer;
        static stackPush(): Internal.MemoryStack;
        static stackMalloc(arg0: number): Internal.ByteBuffer;
        UTF8Safe(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        UTF8Safe(arg0: Internal.CharSequence): Internal.ByteBuffer;
        callocShort(arg0: number): Internal.ShortBuffer;
        static stackUTF8Safe(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        static stackUTF8Safe(arg0: Internal.CharSequence): Internal.ByteBuffer;
        static stackCalloc(arg0: number): Internal.ByteBuffer;
        ncalloc(arg0: number, arg1: number, arg2: number): number;
        nUTF8(arg0: Internal.CharSequence, arg1: boolean): number;
        nUTF8Safe(arg0: Internal.CharSequence, arg1: boolean): number;
        calloc(arg0: number, arg1: number): Internal.ByteBuffer;
        calloc(arg0: number): Internal.ByteBuffer;
        mallocInt(arg0: number): Internal.IntBuffer;
        static stackShorts(arg0: number, arg1: number, arg2: number, arg3: number): Internal.ShortBuffer;
        static stackShorts(...arg0: number[]): Internal.ShortBuffer;
        static stackShorts(arg0: number, arg1: number): Internal.ShortBuffer;
        static stackShorts(arg0: number): Internal.ShortBuffer;
        static stackShorts(arg0: number, arg1: number, arg2: number): Internal.ShortBuffer;
        static stackCallocInt(arg0: number): Internal.IntBuffer;
        static stackCallocDouble(arg0: number): Internal.DoubleBuffer;
        mallocLong(arg0: number): Internal.LongBuffer;
        pop(): Internal.MemoryStack;
        static stackUTF16Safe(arg0: Internal.CharSequence): Internal.ByteBuffer;
        static stackUTF16Safe(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        longs(arg0: number): Internal.LongBuffer;
        longs(arg0: number, arg1: number): Internal.LongBuffer;
        longs(arg0: number, arg1: number, arg2: number): Internal.LongBuffer;
        longs(...arg0: number[]): Internal.LongBuffer;
        longs(arg0: number, arg1: number, arg2: number, arg3: number): Internal.LongBuffer;
        UTF16Safe(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        UTF16Safe(arg0: Internal.CharSequence): Internal.ByteBuffer;
        ints(arg0: number, arg1: number, arg2: number): Internal.IntBuffer;
        ints(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IntBuffer;
        ints(...arg0: number[]): Internal.IntBuffer;
        ints(arg0: number): Internal.IntBuffer;
        ints(arg0: number, arg1: number): Internal.IntBuffer;
        static stackPointers(arg0: Internal.Pointer_, arg1: Internal.Pointer_, arg2: Internal.Pointer_, arg3: Internal.Pointer_): Internal.PointerBuffer;
        static stackPointers(arg0: Internal.Pointer_, arg1: Internal.Pointer_, arg2: Internal.Pointer_): Internal.PointerBuffer;
        static stackPointers(...arg0: Internal.Pointer[]): Internal.PointerBuffer;
        static stackPointers(arg0: number, arg1: number, arg2: number, arg3: number): Internal.PointerBuffer;
        static stackPointers(arg0: number, arg1: number, arg2: number): Internal.PointerBuffer;
        static stackPointers(arg0: number, arg1: number): Internal.PointerBuffer;
        static stackPointers(arg0: number): Internal.PointerBuffer;
        static stackPointers(arg0: Internal.Pointer_, arg1: Internal.Pointer_): Internal.PointerBuffer;
        static stackPointers(arg0: Internal.Pointer_): Internal.PointerBuffer;
        static stackPointers(...arg0: number[]): Internal.PointerBuffer;
        static nstackCalloc(arg0: number, arg1: number, arg2: number): number;
        getAddress(): number;
        shorts(arg0: number, arg1: number, arg2: number, arg3: number): Internal.ShortBuffer;
        shorts(arg0: number, arg1: number, arg2: number): Internal.ShortBuffer;
        shorts(arg0: number): Internal.ShortBuffer;
        shorts(arg0: number, arg1: number): Internal.ShortBuffer;
        shorts(...arg0: number[]): Internal.ShortBuffer;
        close(): void;
        nASCIISafe(arg0: Internal.CharSequence, arg1: boolean): number;
        malloc(arg0: number, arg1: number): Internal.ByteBuffer;
        malloc(arg0: number): Internal.ByteBuffer;
        mallocShort(arg0: number): Internal.ShortBuffer;
        static nstackMalloc(arg0: number): number;
        static nstackMalloc(arg0: number, arg1: number): number;
        static stackCallocFloat(arg0: number): Internal.FloatBuffer;
        static stackFloats(arg0: number, arg1: number, arg2: number, arg3: number): Internal.FloatBuffer;
        static stackFloats(arg0: number, arg1: number, arg2: number): Internal.FloatBuffer;
        static stackFloats(arg0: number, arg1: number): Internal.FloatBuffer;
        static stackFloats(arg0: number): Internal.FloatBuffer;
        static stackFloats(...arg0: number[]): Internal.FloatBuffer;
        static stackUTF8(arg0: Internal.CharSequence, arg1: boolean): Internal.ByteBuffer;
        static stackUTF8(arg0: Internal.CharSequence): Internal.ByteBuffer;
        getPointer(): number;
        nASCII(arg0: Internal.CharSequence, arg1: boolean): number;
        getSize(): number;
        mallocDouble(arg0: number): Internal.DoubleBuffer;
        static stackInts(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IntBuffer;
        static stackInts(arg0: number, arg1: number, arg2: number): Internal.IntBuffer;
        static stackInts(arg0: number, arg1: number): Internal.IntBuffer;
        static stackInts(arg0: number): Internal.IntBuffer;
        static stackInts(...arg0: number[]): Internal.IntBuffer;
        bytes(arg0: number, arg1: number, arg2: number): Internal.ByteBuffer;
        bytes(...arg0: number[]): Internal.ByteBuffer;
        bytes(arg0: number, arg1: number, arg2: number, arg3: number): Internal.ByteBuffer;
        bytes(arg0: number): Internal.ByteBuffer;
        bytes(arg0: number, arg1: number): Internal.ByteBuffer;
        static stackCallocPointer(arg0: number): Internal.PointerBuffer;
        get pointerAddress(): number;
        get frameIndex(): number;
        get pointer(): number;
        get address(): number;
        get size(): number;
        set pointer(arg0: number);
    }
    type MemoryStack_ = MemoryStack;
    class Template$BlockInfo extends Document.Object {
        readonly field_186242_a: BlockPos;
        readonly field_186243_b: Internal.BlockState;
        readonly field_186244_c: Internal.CompoundNBT;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: BlockPos, arg1: Internal.BlockState, arg2: Internal.CompoundNBT);
    }
    type Template$BlockInfo_ = Template$BlockInfo;
    interface Delayed extends Internal.Comparable<Internal.Delayed> {
        getDelay(arg0: Internal.TimeUnit_): number;
        (arg0: Internal.TimeUnit): number;
    }
    type Delayed_ = ((arg0: Internal.TimeUnit)=>number) | Delayed;
    interface Principal {
        getName(): string;
        hashCode(): number;
        equals(arg0: any): boolean;
        toString(): string;
        implies(arg0: Internal.Subject): boolean;
    }
    type Principal_ = Principal;
    interface IRecipeHelperPopulator {
        func_194018_a(arg0: Internal.RecipeItemHelper): void;
        (arg0: Internal.RecipeItemHelper): void;
    }
    type IRecipeHelperPopulator_ = ((arg0: Internal.RecipeItemHelper)=>void) | IRecipeHelperPopulator;
    class SoundHandler extends Internal.ReloadListener<Internal.SoundHandler$Loader> {
        func_147689_b(): void;
        func_147687_e(): void;
        func_225594_i_(): string;
        func_184399_a(arg0: Internal.SoundCategory_, arg1: number): void;
        func_184398_a(arg0: ResourceLocation_): Internal.SoundEventAccessor;
        func_215293_f(): string;
        func_229364_a_(arg0: Internal.ITickableSound): void;
        func_215289_a(arg0: Internal.ActiveRenderInfo): void;
        getResourceType(): Internal.IResourceType;
        func_147682_a(arg0: Internal.ISound): void;
        func_215294_c(arg0: Internal.ISound): boolean;
        func_147690_c(): void;
        func_147681_a(arg0: Internal.ISound, arg1: number): void;
        func_147683_b(arg0: Internal.ISound): void;
        func_184402_a(arg0: Internal.ISoundEventListener_): void;
        func_215290_a(arg0: boolean): void;
        func_147685_d(): void;
        func_184400_b(arg0: Internal.ISoundEventListener_): void;
        func_195477_a(): Internal.Collection<ResourceLocation>;
        func_195478_a(arg0: ResourceLocation_, arg1: Internal.SoundCategory_): void;
        static readonly field_147700_a: Internal.Sound;
        readonly field_147694_f: Internal.SoundEngine;
        get resourceType(): Internal.IResourceType;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.IResourceManager, arg1: Internal.GameSettings);
    }
    type SoundHandler_ = SoundHandler;
    interface INPC {
    }
    type INPC_ = INPC;
    interface CustomVertexType <T, A> extends Internal.BufferVertexType<T> {
        getBufferVertexFormat(): Internal.BufferVertexFormat;
        getCustomVertexFormat(): Internal.GlVertexFormat<A>;
        (): Internal.GlVertexFormat<A>;
    }
    type CustomVertexType_<T, A> = (()=>Internal.GlVertexFormat<A>) | CustomVertexType<T, A>;
    class IDSqueezerRecipeJS extends Internal.RecipeJS {
        duration(i: number): Internal.IDSqueezerRecipeJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type IDSqueezerRecipeJS_ = IDSqueezerRecipeJS;
    class ItemCameraTransforms extends Document.Object {
        func_181687_c(arg0: Internal.ItemCameraTransforms$TransformType_): boolean;
        func_181688_b(arg0: Internal.ItemCameraTransforms$TransformType_): Internal.ItemTransformVec3f;
        static readonly field_178357_a: Internal.ItemCameraTransforms;
        readonly field_188037_l: Internal.ItemTransformVec3f;
        readonly field_178354_e: Internal.ItemTransformVec3f;
        readonly field_188038_m: Internal.ItemTransformVec3f;
        readonly field_178353_d: Internal.ItemTransformVec3f;
        readonly field_188036_k: Internal.ItemTransformVec3f;
        readonly field_181700_p: Internal.ItemTransformVec3f;
        readonly field_181699_o: Internal.ItemTransformVec3f;
        readonly field_188039_n: Internal.ItemTransformVec3f;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ItemTransformVec3f, arg1: Internal.ItemTransformVec3f, arg2: Internal.ItemTransformVec3f, arg3: Internal.ItemTransformVec3f, arg4: Internal.ItemTransformVec3f, arg5: Internal.ItemTransformVec3f, arg6: Internal.ItemTransformVec3f, arg7: Internal.ItemTransformVec3f);
        constructor(arg0: Internal.ItemCameraTransforms);
    }
    type ItemCameraTransforms_ = ItemCameraTransforms;
    interface IResourceManager {
        func_199004_b(arg0: ResourceLocation_): Internal.List<Internal.IResource>;
        func_219533_b(arg0: ResourceLocation_): boolean;
        func_230232_b_(): Internal.Stream<Internal.IResourcePack>;
        func_199001_a(): Internal.Set<string>;
        func_199003_a(arg0: string, arg1: Internal.Predicate_<string>): Internal.Collection<ResourceLocation>;
        func_199002_a(arg0: ResourceLocation_): Internal.IResource;
    }
    type IResourceManager_ = IResourceManager;
    class VariantBlockStateGenerator$Model extends Document.Object {
        toJson(): Internal.JsonObject;
        uvlock(): Internal.VariantBlockStateGenerator$Model;
        x(_x: number): Internal.VariantBlockStateGenerator$Model;
        y(_y: number): Internal.VariantBlockStateGenerator$Model;
        model(s: string): Internal.VariantBlockStateGenerator$Model;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type VariantBlockStateGenerator$Model_ = VariantBlockStateGenerator$Model;
    interface IReputationType {
    }
    type IReputationType_ = IReputationType;
    class StringRange extends Document.Object {
        static encompassing(arg0: Internal.StringRange, arg1: Internal.StringRange): Internal.StringRange;
        static at(arg0: number): Internal.StringRange;
        getStart(): number;
        get(arg0: string): string;
        get(arg0: Internal.ImmutableStringReader): string;
        isEmpty(): boolean;
        getLength(): number;
        getEnd(): number;
        static between(arg0: number, arg1: number): Internal.StringRange;
        get start(): number;
        get length(): number;
        get end(): number;
        get empty(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
    }
    type StringRange_ = StringRange;
    class LecternTileEntity extends Internal.TileEntity implements Internal.IClearable, Internal.INamedContainerProvider {
        requestModelDataUpdate(): void;
        func_214033_c(): Internal.ItemStack;
        func_214041_g(): number;
        createMenu(arg0: number, arg1: Internal.PlayerInventory, arg2: Internal.PlayerEntity): Internal.Container;
        func_214045_a(arg0: Internal.ItemStack): void;
        func_174888_l(): void;
        getCapability<T_>(arg0: Internal.Capability<T_>): Internal.LazyOptional<T_>;
        func_214046_f(): boolean;
        deserializeNBT(arg0: Internal.INBT): void;
        deserializeNBT(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        deserializeNBT(arg0: Internal.CompoundNBT_): void;
        func_145748_c_(): Internal.ITextComponent;
        func_214040_a(arg0: Internal.ItemStack, arg1: Internal.PlayerEntity): void;
        func_214034_r(): number;
        serializeNBT(): Internal.INBT;
        serializeNBT(): Internal.CompoundNBT;
        getModelData(): Internal.IModelData;
        getRenderBoundingBox(): Internal.AxisAlignedBB;
        getTileEntity(): Internal.TileEntity;
        onDataPacket(arg0: Internal.NetworkManager, arg1: Internal.SUpdateTileEntityPacket): void;
        onLoad(): void;
        handleUpdateTag(arg0: Internal.BlockState, arg1: Internal.CompoundNBT_): void;
        get modelData(): Internal.IModelData;
        get renderBoundingBox(): Internal.AxisAlignedBB;
        get tileEntity(): Internal.TileEntity;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type LecternTileEntity_ = LecternTileEntity;
    class Block extends Internal.AbstractBlock implements Internal.IItemProvider, Internal.IForgeBlock, Internal.BlockColorSettings<any> {
        getStateAtViewpoint(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Vec3): Internal.BlockState;
        func_235333_g_(): Internal.IFormattableTextComponent;
        useSmoothColorBlending(arg0: Internal.IBlockDisplayReader, arg1: any, arg2: BlockPos): boolean;
        useSmoothColorBlending(view: Internal.IBlockDisplayReader, state: Internal.BlockState, pos: BlockPos): boolean;
        func_176199_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Entity): void;
        func_149653_t(arg0: Internal.BlockState): boolean;
        getTags(): Internal.Set<ResourceLocation>;
        func_181623_g(): boolean;
        func_149638_a(): number;
        isBed(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        func_200123_i(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        isLadder(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.LivingEntity): boolean;
        static func_220054_a(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.TileEntity, arg4: Internal.Entity, arg5: Internal.ItemStack): void;
        static func_220077_a(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.TileEntity, arg4: Internal.Entity, arg5: Internal.ItemStack): Internal.List<Internal.ItemStack>;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState, arg1: Internal.IBlockDisplayReader, arg2: BlockPos, arg3: Internal.FluidState): boolean;
        func_196258_a(arg0: Internal.BlockItemUseContext): Internal.BlockState;
        static func_220073_a(arg0: Internal.Block_): boolean;
        func_208618_m(): number;
        onNeighborChange(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): void;
        getPickBlock(arg0: Internal.BlockState, arg1: Internal.RayTraceResult, arg2: Internal.IBlockReader, arg3: BlockPos, arg4: Internal.PlayerEntity): Internal.ItemStack;
        canEntityDestroy(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        func_235332_a_(arg0: Internal.Block_): boolean;
        getHarvestTool(arg0: Internal.BlockState): Internal.ToolType;
        hasTileEntity(arg0: Internal.BlockState): boolean;
        isPortalFrame(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        func_180658_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Entity, arg3: number): void;
        static func_180635_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.ItemStack): void;
        canDropFromExplosion(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): boolean;
        func_176224_k(arg0: Internal.World, arg1: BlockPos): void;
        removedByPlayer(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity, arg4: boolean, arg5: Internal.FluidState): boolean;
        isStickyBlock(arg0: Internal.BlockState): boolean;
        isFertile(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        static func_149634_a(arg0: Internal.Item_): Internal.Block;
        getFireSpreadSpeed(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
        isAir(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        getToolModifiedState(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.PlayerEntity, arg4: Internal.ItemStack, arg5: Internal.ToolType): Internal.BlockState;
        static func_196246_j(arg0: Internal.BlockState): number;
        isConduitFrame(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): boolean;
        static func_208061_a(arg0: Internal.VoxelShape, arg1: Internal.Direction_): boolean;
        func_176216_a(arg0: Internal.IBlockReader, arg1: Internal.Entity): void;
        func_176223_P(): Internal.BlockState;
        collisionExtendsVertically(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Entity): boolean;
        func_149739_a(): string;
        canCreatureSpawn(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.EntitySpawnPlacementRegistry$PlacementType_, arg4: Internal.EntityType_<any>): boolean;
        getSoundType(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity): Internal.SoundType;
        isToolEffective(arg0: Internal.BlockState, arg1: Internal.ToolType): boolean;
        getBlockStatesKJS(): Internal.List<Internal.BlockState>;
        static func_208617_a(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        func_176208_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.PlayerEntity): void;
        func_226891_m_(): number;
        addDestroyEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.ParticleManager): boolean;
        getEnchantPowerBonus(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): number;
        func_220072_p(arg0: Internal.BlockState): Internal.SoundType;
        func_180655_c(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Random): void;
        isFireSource(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        onPlantGrow(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: BlockPos): void;
        static func_220064_c(arg0: Internal.IBlockReader, arg1: BlockPos): boolean;
        catchFire(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Direction_, arg4: Internal.LivingEntity): void;
        static func_241468_a_(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.IWorld, arg3: BlockPos, arg4: number, arg5: number): void;
        addHitEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: Internal.RayTraceResult, arg3: Internal.ParticleManager): boolean;
        getFlammability(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): number;
        rotate(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: Internal.Rotation_): Internal.BlockState;
        onBlockExploded(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Explosion): void;
        getBedDirection(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): Internal.Direction;
        static func_208062_a(arg0: Internal.VoxelShape): boolean;
        func_149659_a(arg0: Internal.Explosion): boolean;
        getHarvestLevel(arg0: Internal.BlockState): number;
        canHarvestBlock(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.PlayerEntity): boolean;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.BlockState): boolean;
        func_185473_a(arg0: Internal.IBlockReader, arg1: BlockPos, arg2: Internal.BlockState): Internal.ItemStack;
        static func_196263_a(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.IWorld, arg3: BlockPos, arg4: number): void;
        getBedSpawnPosition(arg0: Internal.EntityType_<any>, arg1: Internal.BlockState, arg2: Internal.IWorldReader, arg3: BlockPos, arg4: number, arg5: Internal.LivingEntity): Internal.Optional<Vec3>;
        static func_220075_c(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos): void;
        func_149666_a(arg0: Internal.ItemGroup, arg1: Internal.NonNullList<Internal.ItemStack>): void;
        canStickTo(arg0: Internal.BlockState, arg1: Internal.BlockState): boolean;
        getWeakChanges(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        isBurning(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): boolean;
        func_180652_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.Explosion): void;
        getExplosionResistance(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Explosion): number;
        static func_199601_a(arg0: Internal.BlockState, arg1: Internal.BlockState, arg2: Internal.World, arg3: BlockPos): Internal.BlockState;
        isScaffolding(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.LivingEntity): boolean;
        canSustainPlant(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        observedNeighborChange(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Block_, arg4: BlockPos): void;
        func_180637_b(arg0: Internal.ServerWorld, arg1: BlockPos, arg2: number): void;
        func_180633_a(arg0: Internal.World, arg1: BlockPos, arg2: Internal.BlockState, arg3: Internal.LivingEntity, arg4: Internal.ItemStack): void;
        getIdKJS(): string;
        createTileEntity(arg0: Internal.BlockState, arg1: Internal.IBlockReader): Internal.TileEntity;
        getFogColor(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity, arg4: Vec3, arg5: number): Vec3;
        getAiPathNodeType(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.MobEntity): Internal.PathNodeType;
        isSlimeBlock(arg0: Internal.BlockState): boolean;
        getLightValue(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos): number;
        getBeaconColorMultiplier(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: BlockPos): number[];
        getExpDrop(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: number, arg4: number): number;
        func_190948_a(arg0: Internal.ItemStack, arg1: Internal.IBlockReader, arg2: Internal.List<Internal.ITextComponent>, arg3: Internal.ITooltipFlag_): void;
        canBeReplacedByLogs(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        func_208619_r(): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        addLandingEffects(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.LivingEntity, arg5: number): boolean;
        static func_220055_a(arg0: Internal.IWorldReader, arg1: BlockPos, arg2: Internal.Direction_): boolean;
        func_203417_a(arg0: Internal.ITag<Internal.Block>): boolean;
        static func_196257_b(arg0: number): Internal.BlockState;
        addRunningEffects(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.Entity): boolean;
        static func_220070_a(arg0: Internal.BlockState, arg1: Internal.ServerWorld, arg2: BlockPos, arg3: Internal.TileEntity): Internal.List<Internal.ItemStack>;
        canBeReplacedByLeaves(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos): boolean;
        getSlipperiness(arg0: Internal.BlockState, arg1: Internal.IWorldReader, arg2: BlockPos, arg3: Internal.Entity): number;
        func_176194_O(): Internal.StateContainer<Internal.Block, Internal.BlockState>;
        isFlammable(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        func_226892_n_(): number;
        getBlock(): Internal.Block;
        static func_176225_a(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        setBedOccupied(arg0: Internal.BlockState, arg1: Internal.World, arg2: BlockPos, arg3: Internal.LivingEntity, arg4: boolean): void;
        setRegistryName(arg0: ResourceLocation_): any;
        func_180657_a(arg0: Internal.World, arg1: Internal.PlayerEntity, arg2: BlockPos, arg3: Internal.BlockState, arg4: Internal.TileEntity, arg5: Internal.ItemStack): void;
        static func_199770_b(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos): Internal.BlockState;
        func_176206_d(arg0: Internal.IWorld, arg1: BlockPos, arg2: Internal.BlockState): void;
        static func_220059_a(arg0: Internal.BlockState, arg1: Internal.IWorld, arg2: BlockPos, arg3: Internal.TileEntity): void;
        getRespawnPosition(arg0: Internal.BlockState, arg1: Internal.EntityType_<any>, arg2: Internal.IWorldReader, arg3: BlockPos, arg4: number, arg5: Internal.LivingEntity): Internal.Optional<Vec3>;
        canConnectRedstone(arg0: Internal.BlockState, arg1: Internal.IBlockReader, arg2: BlockPos, arg3: Internal.Direction_): boolean;
        static readonly field_176229_d: Internal.ObjectIntIdentityMap<Internal.BlockState>;
        field_149770_b: string;
        get blockStatesKJS(): Internal.List<Internal.BlockState>;
        get block(): Internal.Block;
        get tags(): Internal.Set<ResourceLocation>;
        get idKJS(): string;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.AbstractBlock$Properties);
    }
    type Block_ = Registry.minecraft.block | Block;
    class RenderType$State$Builder extends Document.Object {
        func_228714_a_(arg0: Internal.RenderState$CullState): Internal.RenderType$State$Builder;
        func_228713_a_(arg0: Internal.RenderState$AlphaState): Internal.RenderType$State$Builder;
        func_228720_a_(arg0: Internal.RenderState$LineState): Internal.RenderType$State$Builder;
        func_228721_a_(arg0: Internal.RenderState$TargetState): Internal.RenderType$State$Builder;
        func_228727_a_(arg0: Internal.RenderState$WriteMaskState): Internal.RenderType$State$Builder;
        func_230173_a_(arg0: Internal.RenderType$OutlineState_): Internal.RenderType$State;
        func_228726_a_(arg0: Internal.RenderState$TransparencyState): Internal.RenderType$State$Builder;
        func_228728_a_(arg0: boolean): Internal.RenderType$State;
        func_228724_a_(arg0: Internal.RenderState$TextureState): Internal.RenderType$State$Builder;
        func_228725_a_(arg0: Internal.RenderState$TexturingState): Internal.RenderType$State$Builder;
        func_228723_a_(arg0: Internal.RenderState$ShadeModelState): Internal.RenderType$State$Builder;
        func_228722_a_(arg0: Internal.RenderState$OverlayState): Internal.RenderType$State$Builder;
        func_228718_a_(arg0: Internal.RenderState$LayerState): Internal.RenderType$State$Builder;
        func_228717_a_(arg0: Internal.RenderState$FogState): Internal.RenderType$State$Builder;
        func_228715_a_(arg0: Internal.RenderState$DepthTestState): Internal.RenderType$State$Builder;
        func_228716_a_(arg0: Internal.RenderState$DiffuseLightingState): Internal.RenderType$State$Builder;
        func_228719_a_(arg0: Internal.RenderState$LightmapState): Internal.RenderType$State$Builder;
    }
    type RenderType$State$Builder_ = RenderType$State$Builder;
    class Alternative$Builder extends Document.Object implements Internal.ILootCondition$IBuilder {
        func_216298_a(): Internal.ILootCondition$IBuilder;
        func_216297_a(arg0: Internal.ILootCondition$IBuilder_): Internal.Alternative$Builder;
        build(): Internal.ILootCondition;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.ILootCondition$IBuilder[]);
    }
    type Alternative$Builder_ = Alternative$Builder;
    interface UnaryOperator <T> extends Internal.Function<T, T> {
    }
    type UnaryOperator_<T> = UnaryOperator<T>;
    class Activity extends Internal.ForgeRegistryEntry<Internal.Activity> {
        func_221364_a(): string;
        setRegistryName(arg0: ResourceLocation_): any;
        static readonly field_221369_e: Internal.Activity;
        static readonly field_221366_b: Internal.Activity;
        static readonly field_221372_h: Internal.Activity;
        static readonly field_234622_l_: Internal.Activity;
        static readonly field_221365_a: Internal.Activity;
        static readonly field_221371_g: Internal.Activity;
        static readonly field_234623_m_: Internal.Activity;
        static readonly field_221368_d: Internal.Activity;
        static readonly field_221374_j: Internal.Activity;
        static readonly field_234621_k_: Internal.Activity;
        static readonly field_221367_c: Internal.Activity;
        static readonly field_221373_i: Internal.Activity;
        static readonly field_221370_f: Internal.Activity;
        static readonly field_234624_n_: Internal.Activity;
        static readonly field_234625_o_: Internal.Activity;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string);
    }
    type Activity_ = Registry.minecraft.activity | Activity;
    class ScalingSettings extends Document.Object {
        func_236155_d_(): number;
        func_236153_b_(): number;
        func_236154_c_(): number;
        func_236151_a_(): number;
        static readonly field_236145_a_: Internal.Codec<Internal.ScalingSettings>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type ScalingSettings_ = ScalingSettings;
    class ByteOrder extends Document.Object {
        static nativeOrder(): Internal.ByteOrder;
        static readonly BIG_ENDIAN: Internal.ByteOrder;
        static readonly LITTLE_ENDIAN: Internal.ByteOrder;
    }
    type ByteOrder_ = ByteOrder;
    class ClientPlayerNetworkEvent$LoggedOutEvent extends Internal.ClientPlayerNetworkEvent {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.PlayerController, arg1: Internal.ClientPlayerEntity, arg2: Internal.NetworkManager);
        constructor();
    }
    type ClientPlayerNetworkEvent$LoggedOutEvent_ = ClientPlayerNetworkEvent$LoggedOutEvent;
    /**
    */
    abstract class FluidStackJS extends Document.Object implements Internal.WrappedJS, Internal.Copyable {
        nbt(nbt: Internal.CompoundNBT_): Internal.FluidStackJS;
        getNbt(): Internal.CompoundNBT;
        amount(amount: number): Internal.FluidStackJS;
        getChance(): number;
        hasTag(tag: ResourceLocation_): boolean;
        isEmpty(): boolean;
        strongEquals(o: any): boolean;
        hasChance(): boolean;
        getTags(): Internal.Collection<ResourceLocation>;
        getId(): string;
        getFluidStack(): me.shedaniel.architectury.fluid.FluidStack;
        toJson(): Internal.JsonObject;
        toNBT(): Internal.CompoundNBT;
        setChance(c: number): void;
        static of(o: any, amount: number, nbt: Internal.CompoundNBT_): Internal.FluidStackJS;
        static of(o: any): Internal.FluidStackJS;
        getFluid(): Internal.Fluid;
        static fromJson(e: Internal.JsonElement): Internal.FluidStackJS;
        withAmount(amount: number): Internal.FluidStackJS;
        removeChance(): void;
        withChance(c: number): Internal.FluidStackJS;
        copy(): Internal.FluidStackJS;
        copy(): Internal.Copyable;
        setAmount(arg0: number): void;
        setNbt(arg0: Internal.CompoundNBT_): void;
        withNBT(nbt: Internal.CompoundNBT_): Internal.FluidStackJS;
        getAmount(): number;
        get chance(): number;
        get fluidStack(): me.shedaniel.architectury.fluid.FluidStack;
        get fluid(): Internal.Fluid;
        get id(): string;
        get empty(): boolean;
        get tags(): Internal.Collection<ResourceLocation>;
        set chance(c: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FluidStackJS_ = Registry.minecraft.fluid | FluidStackJS;
    interface VoxelShapePart$ILineConsumer {
        consume(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
    }
    type VoxelShapePart$ILineConsumer_ = ((arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number)=>void) | VoxelShapePart$ILineConsumer;
    class ChemicalIngredientInfo <CHEMICAL, STACK> extends Document.Object implements Internal.IEmptyStackProvider<CHEMICAL, STACK> {
        getTagLocation(arg0: Internal.ITag<CHEMICAL>): ResourceLocation;
        createStack(arg0: CHEMICAL, arg1: number): STACK;
        createStack(arg0: STACK, arg1: number): STACK;
        getEmptyStack(): STACK;
        getSerializationKey(): string;
        static readonly SLURRY: Internal.ChemicalIngredientInfo<Internal.Slurry, Internal.SlurryStack>;
        static readonly GAS: Internal.ChemicalIngredientInfo<Internal.Gas, Internal.GasStack>;
        static readonly INFUSION: Internal.ChemicalIngredientInfo<Internal.InfuseType, Internal.InfusionStack>;
        static readonly PIGMENT: Internal.ChemicalIngredientInfo<Internal.Pigment, Internal.PigmentStack>;
        get emptyStack(): STACK;
        get serializationKey(): string;
    }
    type ChemicalIngredientInfo_<CHEMICAL, STACK> = ChemicalIngredientInfo<CHEMICAL, STACK>;
    interface PrimitiveIterator$OfDouble extends Internal.PrimitiveIterator<number, Internal.DoubleConsumer> {
        next(): any;
        next(): number;
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: Internal.DoubleConsumer_): void;
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
        nextDouble(): number;
        (): number;
    }
    type PrimitiveIterator$OfDouble_ = (()=>number) | PrimitiveIterator$OfDouble;
    class CodeSource extends Document.Object implements Internal.Serializable {
        getLocation(): Internal.URL;
        getCodeSigners(): any[];
        getCertificates(): Internal.Certificate[];
        implies(arg0: Internal.CodeSource): boolean;
        get codeSigners(): any[];
        get certificates(): Internal.Certificate[];
        get location(): Internal.URL;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.URL, arg1: Internal.Certificate[]);
        constructor(arg0: Internal.URL, arg1: any[]);
    }
    type CodeSource_ = CodeSource;
    abstract class Graphics2D extends Internal.Graphics {
        rotate(arg0: number): void;
        rotate(arg0: number, arg1: number, arg2: number): void;
        getStroke(): Internal.Stroke;
        drawRenderedImage(arg0: Internal.RenderedImage, arg1: Internal.AffineTransform): void;
        getRenderingHint(arg0: Internal.RenderingHints$Key): any;
        getRenderingHints(): Internal.RenderingHints;
        scale(arg0: number, arg1: number): void;
        drawRenderableImage(arg0: Internal.RenderableImage, arg1: Internal.AffineTransform): void;
        setBackground(arg0: java_.awt.Color): void;
        drawString(arg0: string, arg1: number, arg2: number): void;
        drawString(arg0: Internal.AttributedCharacterIterator, arg1: number, arg2: number): void;
        translate(arg0: number, arg1: number): void;
        hit(arg0: Internal.Rectangle, arg1: Internal.Shape, arg2: boolean): boolean;
        transform(arg0: Internal.AffineTransform): void;
        getDeviceConfiguration(): Internal.GraphicsConfiguration;
        drawGlyphVector(arg0: Internal.GlyphVector, arg1: number, arg2: number): void;
        setTransform(arg0: Internal.AffineTransform): void;
        getFontRenderContext(): Internal.FontRenderContext;
        setComposite(arg0: Internal.Composite_): void;
        setStroke(arg0: Internal.Stroke_): void;
        getPaint(): Internal.Paint;
        getTransform(): Internal.AffineTransform;
        setPaint(arg0: Internal.Paint_): void;
        setRenderingHint(arg0: Internal.RenderingHints$Key, arg1: any): void;
        shear(arg0: number, arg1: number): void;
        draw(arg0: Internal.Shape): void;
        fill(arg0: Internal.Shape): void;
        getComposite(): Internal.Composite;
        drawImage(arg0: Internal.Image, arg1: Internal.AffineTransform, arg2: Internal.ImageObserver_): boolean;
        drawImage(arg0: Internal.BufferedImage, arg1: Internal.BufferedImageOp, arg2: number, arg3: number): void;
        setRenderingHints(arg0: Internal.Map_<any, any>): void;
        addRenderingHints(arg0: Internal.Map_<any, any>): void;
        getBackground(): java_.awt.Color;
        clip(arg0: Internal.Shape): void;
        get composite(): Internal.Composite;
        get background(): java_.awt.Color;
        get renderingHints(): Internal.RenderingHints;
        get fontRenderContext(): Internal.FontRenderContext;
        get paint(): Internal.Paint;
        get deviceConfiguration(): Internal.GraphicsConfiguration;
        get stroke(): Internal.Stroke;
        set composite(arg0: Internal.Composite_);
        set background(arg0: java_.awt.Color);
        set paint(arg0: Internal.Paint_);
        set stroke(arg0: Internal.Stroke_);
    }
    type Graphics2D_ = Graphics2D;
    class PlayerProgress extends Document.Object {
        getTierReached(): Internal.ProgressionTier;
        loadKnowledge(arg0: Internal.CompoundNBT_): void;
        hasSeenConstellation(arg0: ResourceLocation_): boolean;
        hasSeenConstellation(arg0: Internal.IConstellation_): boolean;
        getAttunedConstellation(): Internal.IMajorConstellation;
        isValid(): boolean;
        hasConstellationDiscovered(arg0: Internal.IConstellation_): boolean;
        hasConstellationDiscovered(arg0: ResourceLocation_): boolean;
        store(arg0: Internal.CompoundNBT_): void;
        getStoredConstellationPapers(): Internal.List<ResourceLocation>;
        getKnownConstellations(): Internal.List<ResourceLocation>;
        getPerkData(): Internal.PlayerPerkData;
        doPerkAbilities(): boolean;
        wasOnceAttuned(): boolean;
        load(arg0: Internal.CompoundNBT_): void;
        storeKnowledge(arg0: Internal.CompoundNBT_): void;
        isAttuned(): boolean;
        getResearchProgression(): Internal.Collection<Internal.ResearchProgression>;
        didReceiveTome(): boolean;
        getSeenConstellations(): Internal.List<ResourceLocation>;
        acceptMergeFrom(arg0: Internal.PlayerProgress): void;
        hasResearch(arg0: Internal.ResearchProgression_): boolean;
        get valid(): boolean;
        get storedConstellationPapers(): Internal.List<ResourceLocation>;
        get attunedConstellation(): Internal.IMajorConstellation;
        get attuned(): boolean;
        get knownConstellations(): Internal.List<ResourceLocation>;
        get researchProgression(): Internal.Collection<Internal.ResearchProgression>;
        get tierReached(): Internal.ProgressionTier;
        get seenConstellations(): Internal.List<ResourceLocation>;
        get perkData(): Internal.PlayerPerkData;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type PlayerProgress_ = PlayerProgress;
    class DragSourceDropEvent extends Internal.DragSourceEvent {
        getDropSuccess(): boolean;
        getDropAction(): number;
        get dropSuccess(): boolean;
        get dropAction(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.DragSourceContext);
        constructor(arg0: Internal.DragSourceContext, arg1: number, arg2: boolean, arg3: number, arg4: number);
        constructor(arg0: Internal.DragSourceContext, arg1: number, arg2: boolean);
    }
    type DragSourceDropEvent_ = DragSourceDropEvent;
    class BlockPos$Mutable extends BlockPos {
        func_177981_b(arg0: number): Vec3i;
        func_223471_o(arg0: number): void;
        func_239622_a_(arg0: Vec3i, arg1: Internal.Direction_): Internal.BlockPos$Mutable;
        func_239620_a_(arg0: Internal.Direction$Axis_, arg1: number, arg2: number): Internal.BlockPos$Mutable;
        func_239621_a_(arg0: Vec3i, arg1: number, arg2: number, arg3: number): Internal.BlockPos$Mutable;
        func_223472_q(arg0: number): void;
        func_181079_c(arg0: number, arg1: number, arg2: number): Internal.BlockPos$Mutable;
        func_185336_p(arg0: number): void;
        func_189534_c(arg0: Internal.Direction_, arg1: number): Internal.BlockPos$Mutable;
        func_189532_c(arg0: number, arg1: number, arg2: number): Internal.BlockPos$Mutable;
        func_177955_d(arg0: Vec3i): Vec3i;
        func_177979_c(arg0: number): Vec3i;
        func_196234_d(arg0: number, arg1: number, arg2: number): Internal.BlockPos$Mutable;
        func_189533_g(arg0: Vec3i): Internal.BlockPos$Mutable;
        func_189536_c(arg0: Internal.Direction_): Internal.BlockPos$Mutable;
        func_243531_h(arg0: Vec3i): Internal.BlockPos$Mutable;
        func_177967_a(arg0: Internal.Direction_, arg1: number): Vec3i;
        func_218294_g(arg0: number): Internal.BlockPos$Mutable;
        func_177977_b(): Vec3i;
        func_218295_a(arg0: Internal.AxisRotation_, arg1: number, arg2: number, arg3: number): Internal.BlockPos$Mutable;
        func_177984_a(): Vec3i;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number);
        constructor(arg0: number, arg1: number, arg2: number);
        constructor();
    }
    type BlockPos$Mutable_ = BlockPos$Mutable;
    interface ISoundLists {
    }
    type ISoundLists_ = ISoundLists;
    class EntityViewRenderEvent$FOVModifier extends Internal.EntityViewRenderEvent {
        setFOV(arg0: number): void;
        getFOV(): number;
        get fOV(): number;
        set fOV(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.GameRenderer, arg1: Internal.ActiveRenderInfo, arg2: number, arg3: number);
    }
    type EntityViewRenderEvent$FOVModifier_ = EntityViewRenderEvent$FOVModifier;
    class BlockRenderPass extends Internal.Enum<Internal.BlockRenderPass> {
        endDrawing(): void;
        static valueOf(name: string): Internal.BlockRenderPass;
        static values(): Internal.BlockRenderPass[];
        startDrawing(): void;
        isTranslucent(): boolean;
        static readonly CUTOUT: Internal.BlockRenderPass;
        static readonly TRANSLUCENT: Internal.BlockRenderPass;
        static readonly CUTOUT_MIPPED: Internal.BlockRenderPass;
        static readonly TRIPWIRE: Internal.BlockRenderPass;
        static readonly VALUES: Internal.BlockRenderPass[];
        static readonly COUNT: 5;
        static readonly SOLID: Internal.BlockRenderPass;
        get translucent(): boolean;
    }
    type BlockRenderPass_ = "solid" | "cutout" | "cutout_mipped" | "translucent" | "tripwire" | BlockRenderPass;
    class SimpleRegistry$Entry <T> extends Document.Object {
        readonly field_243546_a: Internal.RegistryKey<T>;
        readonly field_243547_b: number;
        readonly field_243548_c: T;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.RegistryKey<T>, arg1: number, arg2: T);
    }
    type SimpleRegistry$Entry_<T> = SimpleRegistry$Entry<T>;
    class RenderSkybox extends Document.Object {
        func_217623_a(arg0: number, arg1: number): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.RenderSkyboxCube);
    }
    type RenderSkybox_ = RenderSkybox;
    class LongOpenHashSet extends Internal.AbstractLongSet implements Internal.Serializable, Internal.Cloneable, Internal.Hash {
        iterator(): Internal.Iterator<any>;
        trim(): boolean;
        trim(arg0: number): boolean;
        spliterator(): Internal.Spliterator<number>;
        stream(): Internal.Stream<number>;
        forEach(arg0: Internal.Consumer_<number>): void;
        forEach(arg0: Internal.LongConsumer_): void;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        clone(): any;
        clone(): Internal.LongOpenHashSet;
        parallelStream(): Internal.Stream<number>;
        removeIf(arg0: Internal.Predicate_<number>): boolean;
        removeIf(arg0: Internal.LongPredicate_): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Iterator<any>);
        constructor(arg0: Internal.Iterator<any>, arg1: number);
        constructor(arg0: Internal.LongIterator);
        constructor(arg0: Internal.LongIterator, arg1: number);
        constructor(arg0: number[]);
        constructor(arg0: number[], arg1: number);
        constructor(arg0: number[], arg1: number, arg2: number);
        constructor(arg0: number[], arg1: number, arg2: number, arg3: number);
        constructor(arg0: Internal.Collection<number>, arg1: number);
        constructor();
        constructor(arg0: number);
        constructor(arg0: number, arg1: number);
        constructor(arg0: Internal.LongCollection);
        constructor(arg0: Internal.LongCollection, arg1: number);
        constructor(arg0: Internal.Collection<number>);
    }
    type LongOpenHashSet_ = LongOpenHashSet;
    abstract class BuilderBase extends Document.Object {
        add(): void;
        translationKey(key: string): Internal.BuilderBase;
        getBuilderType(): string;
        newID(pre: string, post: string): ResourceLocation;
        displayName(name: string): Internal.BuilderBase;
        readonly id: ResourceLocation;
        get builderType(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(s: string);
    }
    type BuilderBase_ = BuilderBase;
    class ListJS extends Internal.ArrayList<any> implements Internal.StringBuilderAppendable, Internal.ChangeListener<any>, Internal.Copyable, Internal.JsonSerializable, Internal.NBTSerializable {
        static nbt(list: any): Internal.CollectionNBT<any>;
        appendString(builder: Internal.StringBuilder): void;
        onChanged(o: any): void;
        splice(pos: number, deleteCount: number, ...items: any[]): Internal.ListJS;
        shift(): any;
        static ofArray(array: any): Internal.ListJS;
        reverse(): Internal.ListJS;
        push(...o: any[]): Internal.ListJS;
        remove(index: number): any;
        pop(): any;
        filter(predicate: Internal.Predicate_<any>): Internal.ListJS;
        toJson(): Internal.JsonElement;
        toJson(): Internal.JsonArray;
        toNBT(): Internal.CollectionNBT<any>;
        toNBT(): Internal.INBT;
        stream(): Internal.Stream<any>;
        static of(o: any): Internal.ListJS;
        static of(array: number[]): Internal.ListJS;
        static of(array: number[]): Internal.ListJS;
        static of(array: number[]): Internal.ListJS;
        static of(array: number[]): Internal.ListJS;
        static of(array: number[]): Internal.ListJS;
        static of(array: number[]): Internal.ListJS;
        static of(array: string[]): Internal.ListJS;
        toArray<T_>(arg0: Internal.IntFunction_<T_[]>): T_[];
        static orSelf(o: any): Internal.ListJS;
        static json(array: any): Internal.JsonArray;
        getLength(): number;
        parallelStream(): Internal.Stream<any>;
        unshift(...o: any[]): Internal.ListJS;
        copy(): Internal.ListJS;
        copy(): Internal.Copyable;
        map(transformer: Internal.Function_<any, any>): Internal.ListJS;
        reversed(): Internal.SequencedCollection<any>;
        reversed(): Internal.List<any>;
        changeListener: Internal.ChangeListener<Internal.ListJS>;
        get length(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(s: number);
    }
    type ListJS_ = ListJS;
    interface FuncSupplier$Func2 extends Internal.FuncSupplier {
        create2(arg0: dev.latvian.mods.rhino.util.unit.Unit, arg1: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        create(args: Internal.List<dev.latvian.mods.rhino.util.unit.Unit>): dev.latvian.mods.rhino.util.unit.Unit;
        (arg0: dev.latvian.mods.rhino.util.unit.Unit, arg1: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
    }
    type FuncSupplier$Func2_ = ((arg0: dev.latvian.mods.rhino.util.unit.Unit, arg1: dev.latvian.mods.rhino.util.unit.Unit)=>dev.latvian.mods.rhino.util.unit.Unit) | FuncSupplier$Func2;
    class SConfirmTransactionPacket extends Document.Object implements Internal.IPacket<Internal.IClientPlayNetHandler> {
        func_148833_a(arg0: Internal.INetHandler): void;
        func_148833_a(arg0: Internal.IClientPlayNetHandler): void;
        func_148889_c(): number;
        func_211402_a(): boolean;
        func_148837_a(arg0: Internal.PacketBuffer): void;
        func_148888_e(): boolean;
        func_148890_d(): number;
        func_148840_b(arg0: Internal.PacketBuffer): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: number, arg1: number, arg2: boolean);
    }
    type SConfirmTransactionPacket_ = SConfirmTransactionPacket;
    interface KeyListener extends Internal.EventListener {
        keyPressed(arg0: Internal.KeyEvent): void;
        keyReleased(arg0: Internal.KeyEvent): void;
        keyTyped(arg0: Internal.KeyEvent): void;
    }
    type KeyListener_ = KeyListener;
    class Thread$State extends Internal.Enum<Internal.Thread$State> {
        static valueOf(arg0: string): Internal.Thread$State;
        static values(): Internal.Thread$State[];
        static readonly NEW: Internal.Thread$State;
        static readonly TERMINATED: Internal.Thread$State;
        static readonly RUNNABLE: Internal.Thread$State;
        static readonly BLOCKED: Internal.Thread$State;
        static readonly WAITING: Internal.Thread$State;
        static readonly TIMED_WAITING: Internal.Thread$State;
    }
    type Thread$State_ = "new" | "runnable" | "blocked" | "waiting" | "timed_waiting" | "terminated" | Thread$State;
    class ParseResults <S> extends Document.Object {
        getExceptions(): Internal.Map<Internal.CommandNode<S>, Internal.CommandSyntaxException>;
        getReader(): Internal.ImmutableStringReader;
        getContext(): Internal.CommandContextBuilder<S>;
        get reader(): Internal.ImmutableStringReader;
        get context(): Internal.CommandContextBuilder<S>;
        get exceptions(): Internal.Map<Internal.CommandNode<S>, Internal.CommandSyntaxException>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.CommandContextBuilder<S>, arg1: Internal.ImmutableStringReader, arg2: Internal.Map<Internal.CommandNode<S>, Internal.CommandSyntaxException>);
        constructor(arg0: Internal.CommandContextBuilder<S>);
    }
    type ParseResults_<S> = ParseResults<S>;
    class ScriptManager extends Document.Object {
        loadFromDirectory(): void;
        load(): void;
        handler$cea000$captureJacaClass(scope: Internal.Scriptable, args: any[], cir: Internal.CallbackInfoReturnable<any>): void;
        isClassAllowed(name: string): boolean;
        loadJavaClass(scope: Internal.Scriptable, args: any[]): Internal.NativeJavaClass;
        unload(): void;
        readonly exampleScript: string;
        readonly type: Internal.ScriptType;
        firstLoad: boolean;
        readonly directory: Internal.Path;
        readonly packs: Internal.Map<string, Internal.ScriptPack>;
        readonly events: Internal.EventsJS;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(t: Internal.ScriptType, p: Internal.Path, e: string);
    }
    type ScriptManager_ = ScriptManager;
    interface ISeedReader extends Internal.IServerWorld {
        func_241827_a(arg0: Internal.SectionPos, arg1: net.minecraft.world.gen.feature.structure.Structure_<any>): Internal.Stream<Internal.StructureStart<any>>;
        func_72905_C(): number;
    }
    type ISeedReader_ = ISeedReader;
    interface TNTEntityAccess {
        setOwner(arg0: Internal.LivingEntity): void;
        (arg0: Internal.LivingEntity): void;
    }
    type TNTEntityAccess_ = ((arg0: Internal.LivingEntity)=>void) | TNTEntityAccess;
    class ToolType extends Document.Object {
        getName(): string;
        static get(arg0: string): Internal.ToolType;
        static readonly PICKAXE: Internal.ToolType;
        static readonly SHOVEL: Internal.ToolType;
        static readonly AXE: Internal.ToolType;
        static readonly HOE: Internal.ToolType;
        get name(): string;
    }
    type ToolType_ = ToolType;
    class MultipartBlockStateGenerator$Part extends Document.Object {
        toJson(): Internal.JsonObject;
        model(s: string): Internal.VariantBlockStateGenerator$Model;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type MultipartBlockStateGenerator$Part_ = MultipartBlockStateGenerator$Part;
    class DataResult$PartialResult <R> extends Document.Object {
        flatMap<R2_>(arg0: Internal.Function_<R, Internal.DataResult$PartialResult_<R2_>>): Internal.DataResult$PartialResult<R2_>;
        message(): string;
        map<R2_>(arg0: Internal.Function_<R, R2_>): Internal.DataResult$PartialResult<R2_>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: Internal.Optional<R>);
    }
    type DataResult$PartialResult_<R> = DataResult$PartialResult<R>;
    class PaintingType extends Internal.ForgeRegistryEntry<Internal.PaintingType> {
        func_200834_b(): number;
        func_200832_c(): number;
        setRegistryName(arg0: ResourceLocation_): any;
        static readonly field_200857_p: Internal.PaintingType;
        static readonly field_200856_o: Internal.PaintingType;
        static readonly field_200855_n: Internal.PaintingType;
        static readonly field_200854_m: Internal.PaintingType;
        static readonly field_200853_l: Internal.PaintingType;
        static readonly field_200852_k: Internal.PaintingType;
        static readonly field_200851_j: Internal.PaintingType;
        static readonly field_200850_i: Internal.PaintingType;
        static readonly field_200863_v: Internal.PaintingType;
        static readonly field_200864_w: Internal.PaintingType;
        static readonly field_200862_u: Internal.PaintingType;
        static readonly field_200865_x: Internal.PaintingType;
        static readonly field_200861_t: Internal.PaintingType;
        static readonly field_200866_y: Internal.PaintingType;
        static readonly field_200849_h: Internal.PaintingType;
        static readonly field_200860_s: Internal.PaintingType;
        static readonly field_200867_z: Internal.PaintingType;
        static readonly field_200848_g: Internal.PaintingType;
        static readonly field_200847_f: Internal.PaintingType;
        static readonly field_200846_e: Internal.PaintingType;
        static readonly field_200845_d: Internal.PaintingType;
        static readonly field_200837_A: Internal.PaintingType;
        static readonly field_200844_c: Internal.PaintingType;
        static readonly field_200843_b: Internal.PaintingType;
        static readonly field_200859_r: Internal.PaintingType;
        static readonly field_200858_q: Internal.PaintingType;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number);
    }
    type PaintingType_ = Registry.minecraft.motive | PaintingType;
    interface RenderTypeAccess {
        getName(): string;
        (): string;
    }
    type RenderTypeAccess_ = (()=>string) | RenderTypeAccess;
    abstract class AbstractButton extends net.minecraft.client.gui.widget.Widget {
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_212927_b(arg0: number, arg1: number): void;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_230930_b_(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.ITextComponent);
    }
    type AbstractButton_ = AbstractButton;
    class ForestFlowerBlockStateProvider extends Internal.BlockStateProvider {
        static readonly field_236801_b_: Internal.Codec<Internal.ForestFlowerBlockStateProvider>;
        static readonly field_236802_c_: Internal.ForestFlowerBlockStateProvider;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type ForestFlowerBlockStateProvider_ = ForestFlowerBlockStateProvider;
}
declare namespace com.mojang.authlib.properties {
    class Property extends Document.Object {
        getValue(): string;
        getName(): string;
        getSignature(): string;
        isSignatureValid(arg0: Internal.PublicKey): boolean;
        hasSignature(): boolean;
        get signature(): string;
        get name(): string;
        get value(): string;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: string);
        constructor(arg0: string, arg1: string, arg2: string);
    }
    type Property_ = Property;
}
declare namespace me.shedaniel.architectury.fluid {
    class FluidStack extends Document.Object {
        getRawFluidSupplier(): java_.util.function_.Supplier<Internal.Fluid>;
        removeChildTag(childName: string): void;
        getRawFluid(): Internal.Fluid;
        grow(amount: Internal.Fraction): void;
        static read(buf: Internal.PacketBuffer): me.shedaniel.architectury.fluid.FluidStack;
        static read(tag: Internal.CompoundNBT_): me.shedaniel.architectury.fluid.FluidStack;
        getName(): Internal.ITextComponent;
        hasTag(): boolean;
        shrink(amount: Internal.Fraction): void;
        getTranslationKey(): string;
        isEmpty(): boolean;
        getOrCreateChildTag(childName: string): Internal.CompoundNBT;
        getTag(): Internal.CompoundNBT;
        static empty(): me.shedaniel.architectury.fluid.FluidStack;
        isFluidStackEqual(other: me.shedaniel.architectury.fluid.FluidStack): boolean;
        getChildTag(childName: string): Internal.CompoundNBT;
        static bucketAmount(): Internal.Fraction;
        getOrCreateTag(): Internal.CompoundNBT;
        getFluid(): Internal.Fluid;
        static create(fluid: Internal.Fluid_, amount: Internal.Fraction, tag: Internal.CompoundNBT_): me.shedaniel.architectury.fluid.FluidStack;
        static create(fluid: Internal.Fluid_, amount: Internal.Fraction): me.shedaniel.architectury.fluid.FluidStack;
        static create(fluid: java_.util.function_.Supplier_<Internal.Fluid_>, amount: Internal.Fraction): me.shedaniel.architectury.fluid.FluidStack;
        static create(fluid: java_.util.function_.Supplier_<Internal.Fluid_>, amount: Internal.Fraction, tag: Internal.CompoundNBT_): me.shedaniel.architectury.fluid.FluidStack;
        static create(stack: me.shedaniel.architectury.fluid.FluidStack, amount: Internal.Fraction): me.shedaniel.architectury.fluid.FluidStack;
        setTag(tag: Internal.CompoundNBT_): void;
        copy(): me.shedaniel.architectury.fluid.FluidStack;
        setAmount(amount: Internal.Fraction): void;
        write(buf: Internal.PacketBuffer): void;
        write(tag: Internal.CompoundNBT_): Internal.CompoundNBT;
        getAmount(): Internal.Fraction;
        get orCreateTag(): Internal.CompoundNBT;
        get rawFluid(): Internal.Fluid;
        get amount(): Internal.Fraction;
        get rawFluidSupplier(): java_.util.function_.Supplier<Internal.Fluid>;
        get translationKey(): string;
        get name(): Internal.ITextComponent;
        get fluid(): Internal.Fluid;
        get tag(): Internal.CompoundNBT;
        set amount(amount: Internal.Fraction);
        set tag(tag: Internal.CompoundNBT_);
    }
    type FluidStack_ = FluidStack;
}
declare namespace dev.latvian.mods.rhino.mod.util.color {
    /**
    */
    interface Color extends Internal.SpecialEquality {
        getRgbKJS(): number;
        getHexKJS(): string;
        getArgbKJS(): number;
        createTextColorKJS(): Internal.Color;
        getFireworkColorKJS(): number;
        getSerializeKJS(): string;
        specialEquals(o: any, shallow: boolean): boolean;
        (): number;
    }
    type Color_ = string | (()=>number) | Color;
}
declare namespace net.mehvahdjukaar.supplementaries.mixins.accessors {
    interface ChickenEntityAccessor {
    }
    type ChickenEntityAccessor_ = ChickenEntityAccessor;
}
declare namespace com.simibubi.create.foundation.fluid {
    abstract class FluidIngredient extends Document.Object implements Internal.Predicate<Internal.FluidStack> {
        or(arg0: Internal.Predicate_<Internal.FluidStack_>): Internal.Predicate<Internal.FluidStack>;
        static fromTag(arg0: Internal.ITag$INamedTag_<Internal.Fluid_>, arg1: number): com.simibubi.create.foundation.fluid.FluidIngredient;
        static read(arg0: Internal.PacketBuffer): com.simibubi.create.foundation.fluid.FluidIngredient;
        test(arg0: any): boolean;
        test(arg0: Internal.FluidStack): boolean;
        static isFluidIngredient(arg0: Internal.JsonElement): boolean;
        static fromFluid(arg0: Internal.Fluid_, arg1: number): com.simibubi.create.foundation.fluid.FluidIngredient;
        getMatchingFluidStacks(): Internal.List<Internal.FluidStack>;
        serialize(): Internal.JsonObject;
        and(arg0: Internal.Predicate_<Internal.FluidStack_>): Internal.Predicate<Internal.FluidStack>;
        negate(): Internal.Predicate<Internal.FluidStack>;
        getRequiredAmount(): number;
        write(arg0: Internal.PacketBuffer): void;
        static fromFluidStack(arg0: Internal.FluidStack): com.simibubi.create.foundation.fluid.FluidIngredient;
        static deserialize(arg0: Internal.JsonElement): com.simibubi.create.foundation.fluid.FluidIngredient;
        matchingFluidStacks: Internal.List<Internal.FluidStack>;
        static readonly EMPTY: com.simibubi.create.foundation.fluid.FluidIngredient;
        get requiredAmount(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type FluidIngredient_ = FluidIngredient;
}
declare namespace java_.util.function_ {
    interface Supplier <T> {
        get(): T;
        (): T;
    }
    type Supplier_<T> = (()=>T) | Supplier<T>;
}
declare namespace io.netty.util.concurrent {
    interface ScheduledFuture <V> extends Internal.Future<V>, Internal.ScheduledFuture<V> {
    }
    type ScheduledFuture_<V> = ScheduledFuture<V>;
}
declare namespace java_.awt {
    class Color extends Document.Object implements Internal.Paint, Internal.Serializable {
        brighter(): java_.awt.Color;
        static getColor(arg0: string, arg1: number): java_.awt.Color;
        static getColor(arg0: string, arg1: java_.awt.Color): java_.awt.Color;
        static getColor(arg0: string): java_.awt.Color;
        static HSBtoRGB(arg0: number, arg1: number, arg2: number): number;
        static decode(arg0: string): java_.awt.Color;
        getColorSpace(): Internal.ColorSpace;
        getBlue(): number;
        createContext(arg0: Internal.ColorModel, arg1: Internal.Rectangle, arg2: Internal.Rectangle2D, arg3: Internal.AffineTransform, arg4: Internal.RenderingHints): Internal.PaintContext;
        getTransparency(): number;
        getRGBColorComponents(arg0: number[]): number[];
        getAlpha(): number;
        getColorComponents(arg0: number[]): number[];
        getColorComponents(arg0: Internal.ColorSpace, arg1: number[]): number[];
        darker(): java_.awt.Color;
        getGreen(): number;
        getRed(): number;
        getRGBComponents(arg0: number[]): number[];
        getComponents(arg0: Internal.ColorSpace, arg1: number[]): number[];
        getComponents(arg0: number[]): number[];
        static getHSBColor(arg0: number, arg1: number, arg2: number): java_.awt.Color;
        static RGBtoHSB(arg0: number, arg1: number, arg2: number, arg3: number[]): number[];
        getRGB(): number;
        static readonly lightGray: java_.awt.Color;
        static readonly magenta: java_.awt.Color;
        static readonly GRAY: java_.awt.Color;
        static readonly pink: java_.awt.Color;
        static readonly BLUE: java_.awt.Color;
        static readonly yellow: java_.awt.Color;
        static readonly cyan: java_.awt.Color;
        static readonly red: java_.awt.Color;
        static readonly gray: java_.awt.Color;
        static readonly PINK: java_.awt.Color;
        static readonly white: java_.awt.Color;
        static readonly BLACK: java_.awt.Color;
        static readonly ORANGE: java_.awt.Color;
        static readonly WHITE: java_.awt.Color;
        static readonly green: java_.awt.Color;
        static readonly black: java_.awt.Color;
        static readonly GREEN: java_.awt.Color;
        static readonly RED: java_.awt.Color;
        static readonly orange: java_.awt.Color;
        static readonly LIGHT_GRAY: java_.awt.Color;
        static readonly blue: java_.awt.Color;
        static readonly darkGray: java_.awt.Color;
        static readonly MAGENTA: java_.awt.Color;
        static readonly YELLOW: java_.awt.Color;
        static readonly DARK_GRAY: java_.awt.Color;
        static readonly CYAN: java_.awt.Color;
        get colorSpace(): Internal.ColorSpace;
        get transparency(): number;
        get alpha(): number;
        get rGB(): number;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
        constructor(arg0: number);
        constructor(arg0: number, arg1: boolean);
        constructor(arg0: number, arg1: number, arg2: number);
        constructor(arg0: number, arg1: number, arg2: number);
        constructor(arg0: Internal.ColorSpace, arg1: number[], arg2: number);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
    }
    type Color_ = Color;
    class Container extends Internal.Component {
        getListeners<T_>(arg0: Internal.Class<T_>): T_[];
        insets(): Internal.Insets;
        countComponents(): number;
        isFocusTraversalPolicySet(): boolean;
        isFocusCycleRoot(): boolean;
        setLayout(arg0: Internal.LayoutManager): void;
        getComponentZOrder(arg0: Internal.Component): number;
        remove(arg0: Internal.Component): void;
        remove(arg0: number): void;
        setFocusTraversalPolicy(arg0: Internal.FocusTraversalPolicy): void;
        getLayout(): Internal.LayoutManager;
        removeAll(): void;
        getContainerListeners(): Internal.ContainerListener[];
        isFocusTraversalPolicyProvider(): boolean;
        getMousePosition(arg0: boolean): Internal.Point;
        getComponents(): Internal.Component[];
        addContainerListener(arg0: Internal.ContainerListener): void;
        add(arg0: string, arg1: Internal.Component): Internal.Component;
        add(arg0: Internal.Component, arg1: number): Internal.Component;
        add(arg0: Internal.Component, arg1: any): void;
        add(arg0: Internal.Component, arg1: any, arg2: number): void;
        add(arg0: Internal.Component): Internal.Component;
        setComponentZOrder(arg0: Internal.Component, arg1: number): void;
        transferFocusDownCycle(): void;
        setFocusCycleRoot(arg0: boolean): void;
        getInsets(): Internal.Insets;
        findComponentAt(arg0: Internal.Point): Internal.Component;
        findComponentAt(arg0: number, arg1: number): Internal.Component;
        getComponentCount(): number;
        isAncestorOf(arg0: Internal.Component): boolean;
        isValidateRoot(): boolean;
        paintComponents(arg0: Internal.Graphics): void;
        removeContainerListener(arg0: Internal.ContainerListener): void;
        getFocusTraversalPolicy(): Internal.FocusTraversalPolicy;
        getComponent(arg0: number): Internal.Component;
        setFocusTraversalPolicyProvider(arg0: boolean): void;
        printComponents(arg0: Internal.Graphics): void;
        get focusTraversalPolicySet(): boolean;
        get layout(): Internal.LayoutManager;
        get components(): Internal.Component[];
        get componentCount(): number;
        get focusTraversalPolicy(): Internal.FocusTraversalPolicy;
        get focusCycleRoot(): boolean;
        get focusTraversalPolicyProvider(): boolean;
        get validateRoot(): boolean;
        get containerListeners(): Internal.ContainerListener[];
        set layout(arg0: Internal.LayoutManager);
        set focusTraversalPolicy(arg0: Internal.FocusTraversalPolicy);
        set focusCycleRoot(arg0: boolean);
        set focusTraversalPolicyProvider(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Container_ = Container;
    class Event extends Document.Object implements Internal.Serializable {
        shiftDown(): boolean;
        controlDown(): boolean;
        metaDown(): boolean;
        translate(arg0: number, arg1: number): void;
        static readonly DOWN: 1005;
        static readonly PRINT_SCREEN: 1020;
        static readonly BACK_SPACE: 8;
        when: number;
        static readonly MOUSE_UP: 502;
        static readonly SCROLL_ABSOLUTE: 605;
        static readonly KEY_RELEASE: 402;
        static readonly MOUSE_DRAG: 506;
        static readonly UP: 1004;
        static readonly SCROLL_PAGE_UP: 603;
        id: number;
        static readonly LIST_DESELECT: 702;
        static readonly LOAD_FILE: 1002;
        static readonly MOUSE_EXIT: 505;
        static readonly LEFT: 1006;
        static readonly F1: 1008;
        static readonly MOUSE_DOWN: 501;
        static readonly F2: 1009;
        static readonly F3: 1010;
        static readonly F4: 1011;
        static readonly F5: 1012;
        static readonly F6: 1013;
        static readonly SAVE_FILE: 1003;
        static readonly F7: 1014;
        static readonly F8: 1015;
        static readonly F9: 1016;
        static readonly NUM_LOCK: 1023;
        static readonly MOUSE_ENTER: 504;
        static readonly SCROLL_END: 607;
        static readonly END: 1001;
        static readonly INSERT: 1025;
        static readonly WINDOW_DEICONIFY: 204;
        static readonly GOT_FOCUS: 1004;
        static readonly WINDOW_DESTROY: 201;
        static readonly SCROLL_BEGIN: 606;
        static readonly CAPS_LOCK: 1022;
        static readonly SCROLL_LINE_DOWN: 602;
        static readonly WINDOW_EXPOSE: 202;
        clickCount: number;
        static readonly SHIFT_MASK: 1;
        static readonly KEY_ACTION: 403;
        static readonly ENTER: 10;
        static readonly LOST_FOCUS: 1005;
        modifiers: number;
        static readonly PAUSE: 1024;
        static readonly KEY_PRESS: 401;
        static readonly DELETE: 127;
        static readonly LIST_SELECT: 701;
        arg: any;
        static readonly CTRL_MASK: 2;
        static readonly ALT_MASK: 8;
        static readonly RIGHT: 1007;
        static readonly WINDOW_MOVED: 205;
        key: number;
        evt: java_.awt.Event;
        static readonly PGDN: 1003;
        static readonly F10: 1017;
        static readonly WINDOW_ICONIFY: 203;
        static readonly F12: 1019;
        static readonly SCROLL_LINE_UP: 601;
        static readonly F11: 1018;
        static readonly ESCAPE: 27;
        target: any;
        static readonly MOUSE_MOVE: 503;
        static readonly SCROLL_LOCK: 1021;
        static readonly TAB: 9;
        static readonly PGUP: 1002;
        static readonly SCROLL_PAGE_DOWN: 604;
        static readonly ACTION_EVENT: 1001;
        x: number;
        y: number;
        static readonly KEY_ACTION_RELEASE: 404;
        static readonly META_MASK: 4;
        static readonly HOME: 1000;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: any, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number);
        constructor(arg0: any, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: any);
        constructor(arg0: any, arg1: number, arg2: any);
    }
    type Event_ = Event;
}
declare namespace net.minecraft.world {
    class Dimension extends Document.Object {
        static func_236062_a_(arg0: Internal.SimpleRegistry<net.minecraft.world.Dimension>): Internal.SimpleRegistry<net.minecraft.world.Dimension>;
        func_236063_b_(): Internal.DimensionType;
        func_236059_a_(): java_.util.function_.Supplier<Internal.DimensionType>;
        static func_236060_a_(arg0: number, arg1: Internal.SimpleRegistry<net.minecraft.world.Dimension>): boolean;
        func_236064_c_(): Internal.ChunkGenerator;
        static readonly field_236052_a_: Internal.Codec<net.minecraft.world.Dimension>;
        static readonly field_236054_c_: Internal.RegistryKey<net.minecraft.world.Dimension>;
        static readonly field_236053_b_: Internal.RegistryKey<net.minecraft.world.Dimension>;
        static readonly field_236055_d_: Internal.RegistryKey<net.minecraft.world.Dimension>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: java_.util.function_.Supplier<Internal.DimensionType>, arg1: Internal.ChunkGenerator);
    }
    type Dimension_ = Dimension;
}
declare namespace org.apache.logging.log4j.message {
    interface Message extends Internal.Serializable {
        getParameters(): any[];
        getFormattedMessage(): string;
        getFormat(): string;
        getThrowable(): Internal.Throwable;
    }
    type Message_ = Message;
}
declare namespace com.simibubi.create.foundation.utility {
    class Pair <F, S> extends Document.Object {
        setSecond(arg0: S): void;
        setFirst(arg0: F): void;
        swap(): com.simibubi.create.foundation.utility.Pair<S, F>;
        getFirst(): F;
        static of<F_, S_>(arg0: F_, arg1: S_): com.simibubi.create.foundation.utility.Pair<F_, S_>;
        getSecond(): S;
        copy(): com.simibubi.create.foundation.utility.Pair<F, S>;
        get first(): F;
        get second(): S;
        set first(arg0: F);
        set second(arg0: S);
    }
    type Pair_<F, S> = Pair<F, S>;
    class Color extends Document.Object {
        getGreenAsFloat(): number;
        getRedAsFloat(): number;
        static rainbowColor(arg0: number): com.simibubi.create.foundation.utility.Color;
        setGreen(arg0: number): com.simibubi.create.foundation.utility.Color;
        setGreen(arg0: number): com.simibubi.create.foundation.utility.Color;
        setRed(arg0: number): com.simibubi.create.foundation.utility.Color;
        setRed(arg0: number): com.simibubi.create.foundation.utility.Color;
        getAlpha(): number;
        darker(): com.simibubi.create.foundation.utility.Color;
        getRed(): number;
        setBlue(arg0: number): com.simibubi.create.foundation.utility.Color;
        setBlue(arg0: number): com.simibubi.create.foundation.utility.Color;
        copy(): com.simibubi.create.foundation.utility.Color;
        copy(arg0: boolean): com.simibubi.create.foundation.utility.Color;
        getRGB(): number;
        getBlueAsFloat(): number;
        static mixColors(arg0: number, arg1: number, arg2: number): number;
        static mixColors(arg0: Internal.Couple<com.simibubi.create.foundation.utility.Color>, arg1: number): com.simibubi.create.foundation.utility.Color;
        static mixColors(arg0: com.simibubi.create.foundation.utility.Color, arg1: com.simibubi.create.foundation.utility.Color, arg2: number): com.simibubi.create.foundation.utility.Color;
        brighter(): com.simibubi.create.foundation.utility.Color;
        asVector(): Vec3;
        setAlpha(arg0: number): com.simibubi.create.foundation.utility.Color;
        setAlpha(arg0: number): com.simibubi.create.foundation.utility.Color;
        static generateFromLong(arg0: number): com.simibubi.create.foundation.utility.Color;
        getBlue(): number;
        setImmutable(): com.simibubi.create.foundation.utility.Color;
        static vectorFromRGB(arg0: number): Vec3;
        scaleAlpha(arg0: number): com.simibubi.create.foundation.utility.Color;
        getGreen(): number;
        setValue(arg0: number): com.simibubi.create.foundation.utility.Color;
        modifyValue(arg0: Internal.UnaryOperator<number>): com.simibubi.create.foundation.utility.Color;
        mixWith(arg0: com.simibubi.create.foundation.utility.Color, arg1: number): com.simibubi.create.foundation.utility.Color;
        applyAlpha(arg0: number): com.simibubi.create.foundation.utility.Color;
        getAlphaAsFloat(): number;
        static readonly RED: com.simibubi.create.foundation.utility.Color;
        static readonly TRANSPARENT_BLACK: com.simibubi.create.foundation.utility.Color;
        static readonly WHITE: com.simibubi.create.foundation.utility.Color;
        static readonly BLACK: com.simibubi.create.foundation.utility.Color;
        static readonly SPRING_GREEN: com.simibubi.create.foundation.utility.Color;
        static readonly GREEN: com.simibubi.create.foundation.utility.Color;
        get redAsFloat(): number;
        get red(): number;
        get green(): number;
        get blue(): number;
        get blueAsFloat(): number;
        get alpha(): number;
        get alphaAsFloat(): number;
        get greenAsFloat(): number;
        get rGB(): number;
        set red(arg0: number);
        set green(arg0: number);
        set blue(arg0: number);
        set alpha(arg0: number);
        set value(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: boolean);
        constructor(arg0: number);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
        constructor(arg0: number, arg1: number, arg2: number, arg3: number);
        constructor(arg0: number, arg1: number, arg2: number);
    }
    type Color_ = Color;
}
declare namespace java_.nio.channels {
    interface Channel extends Internal.Closeable {
        isOpen(): boolean;
        close(): void;
    }
    type Channel_ = Channel;
}
declare namespace com.mojang.datafixers.util {
    class Unit extends Internal.Enum<com.mojang.datafixers.util.Unit> {
        static valueOf(arg0: string): com.mojang.datafixers.util.Unit;
        static values(): com.mojang.datafixers.util.Unit[];
        static readonly INSTANCE: com.mojang.datafixers.util.Unit;
    }
    type Unit_ = "instance" | Unit;
}
declare namespace net.minecraft.state {
    class BooleanProperty extends Internal.Property<boolean> {
        static func_177716_a(arg0: string): net.minecraft.state.BooleanProperty;
        func_185929_b(arg0: string): Internal.Optional<boolean>;
        func_177700_c(): Internal.Collection<boolean>;
        func_177702_a(arg0: boolean): string;
    }
    type BooleanProperty_ = BooleanProperty;
}
declare namespace net.minecraft.entity.ai.brain.task {
    abstract class Task <E> extends Document.Object {
        func_220380_e(arg0: Internal.ServerWorld, arg1: E, arg2: number): void;
        func_220376_b(): Internal.Task$Status;
        func_220377_c(arg0: Internal.ServerWorld, arg1: E, arg2: number): void;
        func_220378_b(arg0: Internal.ServerWorld, arg1: E, arg2: number): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Map<Internal.MemoryModuleType<any>, Internal.MemoryModuleStatus>, arg1: number, arg2: number);
        constructor(arg0: Internal.Map<Internal.MemoryModuleType<any>, Internal.MemoryModuleStatus>, arg1: number);
        constructor(arg0: Internal.Map<Internal.MemoryModuleType<any>, Internal.MemoryModuleStatus>);
    }
    type Task_<E> = Task<E>;
}
declare namespace hellfirepvp.astralsorcery.common.util.block {
    interface ILocatable {
        getLocationPos(): BlockPos;
        (): BlockPos;
    }
    type ILocatable_ = (()=>BlockPos) | ILocatable;
}
declare namespace it.unimi.dsi.fastutil {
    interface Function <K, V> extends Internal.Function<K, V> {
        size(): number;
        apply(arg0: K): V;
        containsKey(arg0: any): boolean;
        get(arg0: any): V;
        clear(): void;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        (arg0: any): V;
    }
    type Function_<K, V> = ((arg0: any)=>V) | Function<K, V>;
}
declare namespace com.google.common.base {
    interface Supplier <T> extends java_.util.function_.Supplier<T> {
        get(): T;
        (): T;
    }
    type Supplier_<T> = (()=>T) | Supplier<T>;
    interface Predicate <T> extends Internal.Predicate<T> {
        test(arg0: T): boolean;
        apply(arg0: T): boolean;
        equals(arg0: any): boolean;
    }
    type Predicate_<T> = Predicate<T>;
}
declare namespace net.minecraftforge.eventbus.api {
    class Event extends Document.Object {
        setCanceled(arg0: boolean): void;
        getListenerList(): Internal.ListenerList;
        isCanceled(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        getResult(): Internal.Event$Result;
        hasResult(): boolean;
        isCancelable(): boolean;
        getPhase(): Internal.EventPriority;
        setPhase(arg0: Internal.EventPriority_): void;
        get result(): Internal.Event$Result;
        get phase(): Internal.EventPriority;
        get canceled(): boolean;
        get cancelable(): boolean;
        get listenerList(): Internal.ListenerList;
        set phase(arg0: Internal.EventPriority_);
        set result(arg0: Internal.Event$Result_);
        set canceled(arg0: boolean);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Event_ = Event;
}
declare namespace shadows.placebo.config {
    class Property extends Document.Object {
        getIntList(): number[];
        getValidValues(): string[];
        setLanguageKey(arg0: string): shadows.placebo.config.Property;
        requiresWorldRestart(): boolean;
        setShowInGui(arg0: boolean): shadows.placebo.config.Property;
        getName(): string;
        getDefaults(): string[];
        getMaxListLength(): number;
        isDoubleList(): boolean;
        showInGui(): boolean;
        getLanguageKey(): string;
        setValidValues(arg0: string[]): shadows.placebo.config.Property;
        isLongValue(): boolean;
        hasChanged(): boolean;
        setValues(arg0: number[]): shadows.placebo.config.Property;
        setValues(arg0: string[]): shadows.placebo.config.Property;
        setValues(arg0: boolean[]): shadows.placebo.config.Property;
        setValues(arg0: number[]): shadows.placebo.config.Property;
        isDoubleValue(): boolean;
        wasRead(): boolean;
        setMaxListLength(arg0: number): shadows.placebo.config.Property;
        getValidationPattern(): Internal.Pattern;
        getDoubleList(): number[];
        setMaxValue(arg0: number): shadows.placebo.config.Property;
        setMaxValue(arg0: number): shadows.placebo.config.Property;
        getInt(): number;
        getInt(arg0: number): number;
        isDefault(): boolean;
        getType(): Internal.Property$Type;
        setToDefault(): shadows.placebo.config.Property;
        setValidationPattern(arg0: Internal.Pattern): shadows.placebo.config.Property;
        isIntList(): boolean;
        getStringList(): string[];
        setMinValue(arg0: number): shadows.placebo.config.Property;
        setMinValue(arg0: number): shadows.placebo.config.Property;
        setDefaultValue(arg0: boolean): shadows.placebo.config.Property;
        setDefaultValue(arg0: number): shadows.placebo.config.Property;
        setDefaultValue(arg0: number): shadows.placebo.config.Property;
        setDefaultValue(arg0: string): shadows.placebo.config.Property;
        setName(arg0: string): void;
        isBooleanValue(): boolean;
        getBooleanList(): boolean[];
        getMaxValue(): string;
        getDouble(): number;
        getDouble(arg0: number): number;
        requiresMcRestart(): boolean;
        isList(): boolean;
        isBooleanList(): boolean;
        setIsListLengthFixed(arg0: boolean): shadows.placebo.config.Property;
        setDefaultValues(arg0: number[]): shadows.placebo.config.Property;
        setDefaultValues(arg0: boolean[]): shadows.placebo.config.Property;
        setDefaultValues(arg0: number[]): shadows.placebo.config.Property;
        setDefaultValues(arg0: string[]): shadows.placebo.config.Property;
        isIntValue(): boolean;
        setRequiresMcRestart(arg0: boolean): shadows.placebo.config.Property;
        getComment(): string;
        getBoolean(arg0: boolean): boolean;
        getBoolean(): boolean;
        set(arg0: string[]): void;
        set(arg0: string): void;
        set(arg0: number): void;
        set(arg0: number[]): void;
        set(arg0: number): void;
        set(arg0: boolean[]): void;
        set(arg0: number[]): void;
        set(arg0: number): void;
        set(arg0: boolean): void;
        setRequiresWorldRestart(arg0: boolean): shadows.placebo.config.Property;
        getDefault(): string;
        getString(): string;
        getLong(): number;
        getLong(arg0: number): number;
        getMinValue(): string;
        setValue(arg0: boolean): shadows.placebo.config.Property;
        setValue(arg0: string): shadows.placebo.config.Property;
        setValue(arg0: number): shadows.placebo.config.Property;
        setValue(arg0: number): shadows.placebo.config.Property;
        isListLengthFixed(): boolean;
        setComment(arg0: string): void;
        get validationPattern(): Internal.Pattern;
        get string(): string;
        get intList(): boolean;
        get validValues(): string[];
        get type(): Internal.Property$Type;
        get languageKey(): string;
        get longValue(): boolean;
        get long(): number;
        get default(): string;
        get minValue(): string;
        get maxValue(): string;
        get double(): number;
        get intValue(): boolean;
        get doubleList(): number[];
        get listLengthFixed(): boolean;
        get doubleValue(): boolean;
        get list(): boolean;
        get int(): number;
        get maxListLength(): number;
        get boolean(): boolean;
        get defaults(): string[];
        get stringList(): string[];
        get name(): string;
        get booleanValue(): boolean;
        get comment(): string;
        get booleanList(): boolean;
        set validationPattern(arg0: Internal.Pattern);
        set maxListLength(arg0: number);
        set defaultValue(arg0: boolean);
        set values(arg0: number[]);
        set name(arg0: string);
        set defaultValues(arg0: number[]);
        set comment(arg0: string);
        set validValues(arg0: string[]);
        set value(arg0: boolean);
        set languageKey(arg0: string);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: string, arg1: string[], arg2: Internal.Property$Type);
        constructor(arg0: string, arg1: string, arg2: Internal.Property$Type, arg3: string[], arg4: string);
        constructor(arg0: string, arg1: string[], arg2: Internal.Property$Type, arg3: string);
        constructor(arg0: string, arg1: string, arg2: Internal.Property$Type);
        constructor(arg0: string, arg1: string, arg2: Internal.Property$Type, arg3: boolean);
        constructor(arg0: string, arg1: string, arg2: Internal.Property$Type, arg3: boolean, arg4: string);
        constructor(arg0: string, arg1: string, arg2: Internal.Property$Type, arg3: string);
        constructor(arg0: string, arg1: string, arg2: Internal.Property$Type, arg3: string[]);
    }
    type Property_ = Property;
}
declare namespace net.minecraft.entity.ai.attributes {
    class Attribute extends Internal.ForgeRegistryEntry<net.minecraft.entity.ai.attributes.Attribute> {
        func_233754_c_(): string;
        func_111109_a(arg0: number): number;
        func_233753_a_(arg0: boolean): net.minecraft.entity.ai.attributes.Attribute;
        func_111111_c(): boolean;
        setRegistryName(arg0: ResourceLocation_): any;
        func_111110_b(): number;
        set registryName(arg0: ResourceLocation_);
    }
    type Attribute_ = Registry.minecraft.attribute | Attribute;
}
declare namespace net.minecraft.pathfinding {
    class Path extends Document.Object {
        func_75881_a(arg0: Internal.Entity, arg1: number): Vec3;
        func_224771_h(): boolean;
        func_75870_c(): Internal.PathPoint;
        func_75875_a(): void;
        func_224770_k(): BlockPos;
        func_189965_h(): Internal.PathPoint[];
        func_189966_g(): Internal.PathPoint[];
        func_75872_c(arg0: number): void;
        func_242950_i(): Internal.PathPoint;
        func_242945_b(): boolean;
        func_224769_l(): number;
        func_242947_d(arg0: number): BlockPos;
        func_215747_b(arg0: number): void;
        func_242948_g(): BlockPos;
        static func_186311_b(arg0: Internal.PacketBuffer): net.minecraft.pathfinding.Path;
        func_75873_e(): number;
        func_75877_a(arg0: number): Internal.PathPoint;
        func_75874_d(): number;
        func_237225_h_(): Internal.PathPoint;
        func_75876_a(arg0: net.minecraft.pathfinding.Path): boolean;
        func_75878_a(arg0: Internal.Entity): Vec3;
        func_186309_a(arg0: number, arg1: Internal.PathPoint): void;
        func_75879_b(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.List<Internal.PathPoint>, arg1: BlockPos, arg2: boolean);
    }
    type Path_ = Path;
}
declare namespace dev.ftb.mods.ftblibrary.ui.input {
    class Key extends Document.Object {
        selectAll(): boolean;
        deselectAll(): boolean;
        getInputMapping(): Internal.InputMappings$Input;
        backspace(): boolean;
        cut(): boolean;
        esc(): boolean;
        is(k: number): boolean;
        paste(): boolean;
        copy(): boolean;
        enter(): boolean;
        escOrInventory(): boolean;
        readonly keyCode: number;
        readonly modifiers: Internal.KeyModifiers;
        readonly scanCode: number;
        get inputMapping(): Internal.InputMappings$Input;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(k: number, s: number, m: number);
    }
    type Key_ = Key;
}
declare namespace org.objectweb.asm {
    class Type extends Document.Object {
        static getDescriptor(arg0: Internal.Class<any>): string;
        getDescriptor(): string;
        getElementType(): org.objectweb.asm.Type;
        static getArgumentTypes(arg0: Internal.Method): org.objectweb.asm.Type[];
        getArgumentTypes(): org.objectweb.asm.Type[];
        static getArgumentTypes(arg0: string): org.objectweb.asm.Type[];
        static getArgumentsAndReturnSizes(arg0: string): number;
        getArgumentsAndReturnSizes(): number;
        getArgumentCount(): number;
        static getArgumentCount(arg0: string): number;
        getDimensions(): number;
        getSort(): number;
        getSize(): number;
        static getMethodDescriptor(arg0: org.objectweb.asm.Type, ...arg1: org.objectweb.asm.Type[]): string;
        static getMethodDescriptor(arg0: Internal.Method): string;
        static getReturnType(arg0: string): org.objectweb.asm.Type;
        static getReturnType(arg0: Internal.Method): org.objectweb.asm.Type;
        getReturnType(): org.objectweb.asm.Type;
        static getInternalName(arg0: Internal.Class<any>): string;
        getInternalName(): string;
        static getType(arg0: string): org.objectweb.asm.Type;
        static getType(arg0: Internal.Class<any>): org.objectweb.asm.Type;
        static getType(arg0: Internal.Method): org.objectweb.asm.Type;
        static getType(arg0: Internal.Constructor<any>): org.objectweb.asm.Type;
        static getConstructorDescriptor(arg0: Internal.Constructor<any>): string;
        static getObjectType(arg0: string): org.objectweb.asm.Type;
        static getMethodType(arg0: org.objectweb.asm.Type, ...arg1: org.objectweb.asm.Type[]): org.objectweb.asm.Type;
        static getMethodType(arg0: string): org.objectweb.asm.Type;
        getClassName(): string;
        getOpcode(arg0: number): number;
        static readonly CHAR_TYPE: org.objectweb.asm.Type;
        static readonly FLOAT: 6;
        static readonly DOUBLE_TYPE: org.objectweb.asm.Type;
        static readonly ARRAY: 9;
        static readonly LONG_TYPE: org.objectweb.asm.Type;
        static readonly BYTE_TYPE: org.objectweb.asm.Type;
        static readonly CHAR: 2;
        static readonly VOID_TYPE: org.objectweb.asm.Type;
        static readonly OBJECT: 10;
        static readonly BOOLEAN_TYPE: org.objectweb.asm.Type;
        static readonly FLOAT_TYPE: org.objectweb.asm.Type;
        static readonly BOOLEAN: 1;
        static readonly INT: 5;
        static readonly SHORT: 4;
        static readonly BYTE: 3;
        static readonly METHOD: 11;
        static readonly SHORT_TYPE: org.objectweb.asm.Type;
        static readonly DOUBLE: 8;
        static readonly VOID: 0;
        static readonly LONG: 7;
        static readonly INT_TYPE: org.objectweb.asm.Type;
        get argumentsAndReturnSizes(): number;
        get argumentCount(): number;
        get internalName(): string;
        get size(): number;
        get className(): string;
        get descriptor(): string;
        get argumentTypes(): org.objectweb.asm.Type[];
        get sort(): number;
        get elementType(): org.objectweb.asm.Type;
        get returnType(): org.objectweb.asm.Type;
        get dimensions(): number;
    }
    type Type_ = Type;
}
declare namespace org.apache.commons.lang3.tuple {
    abstract class Pair <L, R> extends Document.Object implements Internal.Map$Entry<L, R>, Internal.Comparable<org.apache.commons.lang3.tuple.Pair<L, R>>, Internal.Serializable {
        getKey(): L;
        getValue(): R;
        getRight(): R;
        setValue(arg0: R): R;
        static of<L_, R_>(arg0: L_, arg1: R_): org.apache.commons.lang3.tuple.Pair<L_, R_>;
        toString(arg0: string): string;
        compareTo(arg0: org.apache.commons.lang3.tuple.Pair<L, R>): number;
        compareTo(arg0: any): number;
        getLeft(): L;
        get left(): L;
        get right(): R;
        get value(): R;
        get key(): L;
        set value(arg0: R);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Pair_<L, R> = Pair<L, R>;
}
declare namespace blusunrize.immersiveengineering.mixin.accessors {
    interface ContainerAccess {
        getLastSlots(): Internal.NonNullList<Internal.ItemStack>;
        (): Internal.NonNullList<Internal.ItemStack>;
    }
    type ContainerAccess_ = (()=>Internal.NonNullList<Internal.ItemStack>) | ContainerAccess;
}
declare namespace me.shedaniel.architectury.event {
    interface Event <T> {
        unregister(arg0: T): void;
        isRegistered(arg0: T): boolean;
        invoker(): T;
        clearListeners(): void;
        register(arg0: T): void;
    }
    type Event_<T> = Event<T>;
}
declare namespace dev.latvian.mods.rhino.util.unit {
    abstract class Unit extends Document.Object {
        sub(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        mod(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        mul(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        log(): dev.latvian.mods.rhino.util.unit.Unit;
        log1p(): dev.latvian.mods.rhino.util.unit.Unit;
        log10(): dev.latvian.mods.rhino.util.unit.Unit;
        cos(): dev.latvian.mods.rhino.util.unit.Unit;
        deg(): dev.latvian.mods.rhino.util.unit.Unit;
        lt(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        atan(): dev.latvian.mods.rhino.util.unit.Unit;
        getAsInt(): number;
        div(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        neg(): dev.latvian.mods.rhino.util.unit.Unit;
        not(): dev.latvian.mods.rhino.util.unit.Unit;
        shiftLeft(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        min(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        rad(): dev.latvian.mods.rhino.util.unit.Unit;
        sqrt(): dev.latvian.mods.rhino.util.unit.Unit;
        and(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        get(): number;
        gte(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        pow(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        sin(): dev.latvian.mods.rhino.util.unit.Unit;
        xor(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        neq(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        lte(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        floor(): dev.latvian.mods.rhino.util.unit.Unit;
        isFixed(): boolean;
        sq(): dev.latvian.mods.rhino.util.unit.Unit;
        atan2(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        add(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        tan(): dev.latvian.mods.rhino.util.unit.Unit;
        or(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        max(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        toBool(): dev.latvian.mods.rhino.util.unit.Unit;
        ceil(): dev.latvian.mods.rhino.util.unit.Unit;
        eq(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        gt(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        shiftRight(with_: dev.latvian.mods.rhino.util.unit.Unit): dev.latvian.mods.rhino.util.unit.Unit;
        abs(): dev.latvian.mods.rhino.util.unit.Unit;
        getAsBoolean(): boolean;
        append(arg0: Internal.StringBuilder): void;
        get asInt(): number;
        get fixed(): boolean;
        get asBoolean(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Unit_ = Unit;
}
declare namespace net.minecraft.scoreboard {
    abstract class Team extends Document.Object {
        func_96661_b(): string;
        func_186681_k(): Internal.Team$CollisionRule;
        func_96670_d(): Internal.Collection<string>;
        func_178771_j(): Internal.Team$Visible;
        func_178770_i(): Internal.Team$Visible;
        func_230427_d_(arg0: Internal.ITextComponent_): Internal.IFormattableTextComponent;
        func_96665_g(): boolean;
        func_178775_l(): Internal.TextFormatting;
        func_142054_a(arg0: net.minecraft.scoreboard.Team): boolean;
        func_98297_h(): boolean;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Team_ = Team;
}
declare namespace net.minecraftforge.client.model.pipeline {
    interface IVertexConsumer {
        setQuadOrientation(arg0: Internal.Direction_): void;
        setTexture(arg0: Internal.TextureAtlasSprite): void;
        setApplyDiffuseLighting(arg0: boolean): void;
        setQuadTint(arg0: number): void;
        getVertexFormat(): Internal.VertexFormat;
        put(arg0: number, ...arg1: number[]): void;
    }
    type IVertexConsumer_ = IVertexConsumer;
}
declare namespace java_.lang.module {
    class Configuration extends Document.Object {
        findModule(arg0: string): Internal.Optional<Internal.ResolvedModule>;
        resolve(arg0: Internal.ModuleFinder, arg1: Internal.ModuleFinder, arg2: Internal.Collection<string>): java_.lang.module.Configuration;
        static resolve(arg0: Internal.ModuleFinder, arg1: Internal.List<java_.lang.module.Configuration>, arg2: Internal.ModuleFinder, arg3: Internal.Collection<string>): java_.lang.module.Configuration;
        static resolveAndBind(arg0: Internal.ModuleFinder, arg1: Internal.List<java_.lang.module.Configuration>, arg2: Internal.ModuleFinder, arg3: Internal.Collection<string>): java_.lang.module.Configuration;
        resolveAndBind(arg0: Internal.ModuleFinder, arg1: Internal.ModuleFinder, arg2: Internal.Collection<string>): java_.lang.module.Configuration;
        modules(): Internal.Set<Internal.ResolvedModule>;
        parents(): Internal.List<java_.lang.module.Configuration>;
        static empty(): java_.lang.module.Configuration;
    }
    type Configuration_ = Configuration;
}
declare namespace java_.util.concurrent {
    interface Callable <V> {
        call(): V;
        (): V;
    }
    type Callable_<V> = (()=>V) | Callable<V>;
    interface Future <V> {
        cancel(arg0: boolean): boolean;
        resultNow(): V;
        isCancelled(): boolean;
        exceptionNow(): Internal.Throwable;
        get(arg0: number, arg1: Internal.TimeUnit_): V;
        get(): V;
        state(): Internal.Future$State;
        isDone(): boolean;
    }
    type Future_<V> = Future<V>;
}
declare namespace net.minecraft.world.gen.feature.structure {
    abstract class Structure <C> extends Internal.ForgeRegistryEntry<net.minecraft.world.gen.feature.structure.Structure<any>> implements Internal.IForgeStructure, Internal.StructureAccess {
        getDefaultSpawnList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        func_236398_h_(): Internal.Codec<Internal.StructureFeature<C, net.minecraft.world.gen.feature.structure.Structure<C>>>;
        func_202279_e(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        func_242785_a(arg0: Internal.DynamicRegistries, arg1: Internal.ChunkGenerator, arg2: Internal.BiomeProvider, arg3: Internal.TemplateManager, arg4: number, arg5: Internal.ChunkPos, arg6: Internal.Biome_, arg7: number, arg8: Internal.SharedSeedRandom, arg9: Internal.StructureSeparationSettings, arg10: C): Internal.StructureStart<any>;
        setRegistryName(arg0: ResourceLocation_): any;
        func_236388_a_(arg0: Internal.IWorldReader, arg1: Internal.StructureManager, arg2: BlockPos, arg3: number, arg4: boolean, arg5: number, arg6: Internal.StructureSeparationSettings): BlockPos;
        getSpawnList(arg0: Internal.EntityClassification_): Internal.List<Internal.MobSpawnInfo$Spawners>;
        static getStructureStep_$md$e571c7$0(): Internal.Map<any, any>;
        getDefaultCreatureSpawnList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        func_214469_f(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        getDefaultRestrictsSpawnsToInside(): boolean;
        static func_236397_g_(): void;
        func_143025_a(): string;
        getStructure(): net.minecraft.world.gen.feature.structure.Structure<any>;
        func_236396_f_(): DecorationGenerationStep;
        static func_236393_a_(arg0: Internal.TemplateManager, arg1: Internal.CompoundNBT_, arg2: number): Internal.StructureStart<any>;
        func_214557_a(): Internal.Structure$IStartFactory<C>;
        func_236392_a_(arg0: Internal.StructureSeparationSettings, arg1: number, arg2: Internal.SharedSeedRandom, arg3: number, arg4: number): Internal.ChunkPos;
        func_236391_a_(arg0: C): Internal.StructureFeature<C, net.minecraft.world.gen.feature.structure.Structure<C>>;
        static readonly field_236376_l_: net.minecraft.world.gen.feature.structure.Structure<Internal.NoFeatureConfig>;
        static readonly field_236375_k_: net.minecraft.world.gen.feature.structure.Structure<Internal.NoFeatureConfig>;
        static readonly field_236380_p_: net.minecraft.world.gen.feature.structure.Structure<Internal.ProbabilityConfig>;
        static readonly field_236381_q_: net.minecraft.world.gen.feature.structure.Structure<Internal.VillageConfig>;
        static readonly field_236369_e_: net.minecraft.world.gen.feature.structure.Structure<Internal.NoFeatureConfig>;
        static readonly field_236383_s_: net.minecraft.world.gen.feature.structure.Structure<Internal.VillageConfig>;
        static readonly field_236370_f_: net.minecraft.world.gen.feature.structure.Structure<Internal.NoFeatureConfig>;
        static readonly field_236382_r_: net.minecraft.world.gen.feature.structure.Structure<Internal.NoFeatureConfig>;
        static readonly field_236371_g_: net.minecraft.world.gen.feature.structure.Structure<Internal.NoFeatureConfig>;
        static readonly field_236367_c_: net.minecraft.world.gen.feature.structure.Structure<Internal.MineshaftConfig>;
        static readonly field_236368_d_: net.minecraft.world.gen.feature.structure.Structure<Internal.NoFeatureConfig>;
        static readonly field_236372_h_: net.minecraft.world.gen.feature.structure.Structure<Internal.RuinedPortalFeature>;
        static field_236384_t_: [undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined];
        static readonly field_236385_u_: {};
        static readonly field_236373_i_: net.minecraft.world.gen.feature.structure.Structure<Internal.ShipwreckConfig>;
        static readonly field_236365_a_: {"pillager_outpost":Internal.PillagerOutpostStructure,"mineshaft":Internal.MineshaftStructure,"mansion":Internal.WoodlandMansionStructure,"jungle_pyramid":Internal.JunglePyramidStructure,"desert_pyramid":Internal.DesertPyramidStructure,"igloo":Internal.IglooStructure,"ruined_portal":Internal.RuinedPortalStructure,"shipwreck":Internal.ShipwreckStructure,"swamp_hut":Internal.SwampHutStructure,"stronghold":Internal.StrongholdStructure,"monument":Internal.OceanMonumentStructure,"ocean_ruin":Internal.OceanRuinStructure,"fortress":Internal.FortressStructure,"endcity":Internal.EndCityStructure,"buried_treasure":Internal.BuriedTreasureStructure,"village":Internal.VillageStructure,"nether_fossil":Internal.NetherFossilStructure,"bastion_remnant":Internal.BastionRemantsStructure,"atum:girafi_tomb":Internal.GirafiTombStructure,"atum:tomb":Internal.TombStructure,"atum:ruin":Internal.RuinStructure,"atum:pyramid":Internal.PyramidStructure,"atum:mineshaft":Internal.AtumMineshaftStructure,"atum:gatehouse":Internal.GatehouseStructure,"towers_of_the_wild:tower":Internal.TowerStructure,"towers_of_the_wild:ice_tower":Internal.IceTowerStructure,"towers_of_the_wild:jungle_tower":Internal.JungleTowerStructure,"towers_of_the_wild:derelict_tower":Internal.DerelictTowerStructure,"towers_of_the_wild:derelict_grass_tower":Internal.DerelictGrassTowerStructure,"towers_of_the_wild:ocean_tower":Internal.OceanTowerStructure,"towers_of_the_wild:ocean_warm_tower":Internal.OceanWarmTowerStructure,"quark:big_dungeon":Internal.BigDungeonStructure,"astralsorcery:ancient_shrine":Internal.FeatureAncientShrineStructure,"astralsorcery:desert_shrine":Internal.FeatureDesertShrineStructure,"astralsorcery:small_shrine":Internal.FeatureSmallShrineStructure,"betterendforge:mountain_structure":Internal.MountainStructure,"betterendforge:megalake_structure":Internal.MegaLakeStructure,"betterendforge:megalake_small_structure":Internal.MegaLakeStructure,"betterendforge:giant_mossy_glowshroom_structure":Internal.GiantMossyGlowshroomStructure,"betterendforge:painted_mountain_structure":Internal.PaintedMountainStructure,"betterendforge:eternal_portal_structure":Internal.EternalPortalStructure,"betterendforge:giant_ice_star_structure":Internal.GiantIceStarStructure,"dungeons_plus:tower":com.legacy.dungeons_plus.structures.TowerStructure,"dungeons_plus:bigger_dungeon":Internal.BiggerDungeonStructure,"dungeons_plus:leviathan":Internal.LeviathanStructure,"dungeons_plus:snowy_temple":Internal.SnowyTempleStructure,"dungeons_plus:end_ruins":Internal.EndRuinsStructure,"dungeons_plus:warped_garden":Internal.WarpedGardenStructure,"dungeons_plus:soul_prison":Internal.SoulPrisonStructure,"appliedenergistics2:meteorite":Internal.MeteoriteStructure,"supplementaries:way_sign":Internal.WaySignStructure,"repurposed_structures:mineshaft_birch":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:mineshaft_dark_forest":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:mineshaft_desert":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:mineshaft_end":Internal.MineshaftEndStructure,"repurposed_structures:mineshaft_nether":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:mineshaft_crimson":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:mineshaft_warped":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:mineshaft_icy":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:mineshaft_jungle":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:mineshaft_ocean":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:mineshaft_savanna":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:mineshaft_stone":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:mineshaft_swamp":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:mineshaft_taiga":com.telepathicgrunt.repurposedstructures.world.structures.MineshaftStructure,"repurposed_structures:stronghold_nether":Internal.AdvancedDistanceJigsawStructure,"repurposed_structures:stronghold_end":Internal.StrongholdEndStructure,"repurposed_structures:fortress_jungle":Internal.AdvancedJigsawStructure,"repurposed_structures:igloo_grassy":Internal.GenericJigsawStructure,"repurposed_structures:igloo_stone":Internal.GenericJigsawStructure,"repurposed_structures:temple_nether_wasteland":Internal.GenericNetherJigsawStructure,"repurposed_structures:temple_nether_soul":Internal.GenericNetherJigsawStructure,"repurposed_structures:temple_nether_basalt":Internal.GenericNetherJigsawStructure,"repurposed_structures:temple_nether_crimson":Internal.GenericNetherJigsawStructure,"repurposed_structures:temple_nether_warped":Internal.GenericNetherJigsawStructure,"repurposed_structures:outpost_nether_brick":Internal.GenericNetherJigsawStructure,"repurposed_structures:outpost_warped":Internal.GenericNetherJigsawStructure,"repurposed_structures:outpost_crimson":Internal.GenericNetherJigsawStructure,"repurposed_structures:outpost_birch":Internal.GenericJigsawStructure,"repurposed_structures:outpost_jungle":Internal.GenericJigsawStructure,"repurposed_structures:outpost_giant_tree_taiga":Internal.GenericJigsawStructure,"repurposed_structures:outpost_desert":Internal.GenericJigsawStructure,"repurposed_structures:outpost_badlands":Internal.GenericJigsawStructure,"repurposed_structures:outpost_snowy":Internal.GenericJigsawStructure,"repurposed_structures:outpost_icy":Internal.GenericJigsawStructure,"repurposed_structures:outpost_taiga":Internal.GenericJigsawStructure,"repurposed_structures:outpost_oak":Internal.GenericJigsawStructure,"repurposed_structures:outpost_end":Internal.GenericJigsawStructure,"repurposed_structures:pyramid_badlands":Internal.BuriableStructure,"repurposed_structures:pyramid_nether":Internal.GenericNetherJigsawStructure,"repurposed_structures:pyramid_snowy":Internal.BuriableStructure,"repurposed_structures:pyramid_end":Internal.LandBasedEndStructure,"repurposed_structures:pyramid_icy":Internal.BuriableStructure,"repurposed_structures:pyramid_jungle":Internal.BuriableStructure,"repurposed_structures:pyramid_mushroom":Internal.BuriableStructure,"repurposed_structures:pyramid_ocean":Internal.BuriableStructure,"repurposed_structures:pyramid_giant_tree_taiga":Internal.BuriableStructure,"repurposed_structures:pyramid_flower_forest":Internal.BuriableStructure,"repurposed_structures:shipwreck_end":Internal.ShipwreckEndStructure,"repurposed_structures:shipwreck_nether_bricks":Internal.ShipwreckNetherStructure,"repurposed_structures:shipwreck_crimson":Internal.ShipwreckNetherStructure,"repurposed_structures:shipwreck_warped":Internal.ShipwreckNetherStructure,"repurposed_structures:village_badlands":Internal.GenericJigsawStructure,"repurposed_structures:village_birch":Internal.GenericJigsawStructure,"repurposed_structures:village_dark_oak":Internal.GenericJigsawStructure,"repurposed_structures:village_jungle":Internal.GenericJigsawStructure,"repurposed_structures:village_swamp":Internal.GenericJigsawStructure,"repurposed_structures:village_mountains":Internal.GenericJigsawStructure,"repurposed_structures:village_giant_taiga":Internal.GenericJigsawStructure,"repurposed_structures:village_crimson":Internal.GenericNetherJigsawStructure,"repurposed_structures:village_warped":Internal.GenericNetherJigsawStructure,"repurposed_structures:village_oak":Internal.GenericJigsawStructure,"repurposed_structures:village_mushroom":Internal.GenericJigsawStructure,"repurposed_structures:ruined_portal_end":Internal.LandBasedEndStructure,"repurposed_structures:ruins_nether":Internal.GenericNetherJigsawStructure,"repurposed_structures:ruins_land_warm":Internal.GenericJigsawStructure,"repurposed_structures:ruins_land_hot":Internal.GenericJigsawStructure,"repurposed_structures:city_nether":Internal.CityNetherStructure,"repurposed_structures:mansion_birch":Internal.MansionStructure,"repurposed_structures:mansion_jungle":Internal.MansionStructure,"repurposed_structures:mansion_oak":Internal.MansionStructure,"repurposed_structures:mansion_savanna":Internal.MansionStructure,"repurposed_structures:mansion_taiga":Internal.MansionStructure,"repurposed_structures:mansion_desert":Internal.MansionStructure,"repurposed_structures:mansion_snowy":Internal.MansionStructure,"repurposed_structures:witch_hut_oak":Internal.GenericJigsawStructure,"repurposed_structures:witch_hut_taiga":Internal.GenericJigsawStructure,"repurposed_structures:witch_hut_birch":Internal.GenericJigsawStructure,"repurposed_structures:witch_hut_dark_forest":Internal.GenericJigsawStructure,"repurposed_structures:witch_hut_giant_tree_taiga":Internal.GenericJigsawStructure,"repurposed_structures:bastion_underground":Internal.GenericJigsawStructure,"better mineshaft":Internal.BetterMineshaftStructure,"dungeons_arise:monastery":Internal.MonasteryStructure,"dungeons_arise:illager_campsite":Internal.IllagerCampsiteStructure,"dungeons_arise:illager_castle":Internal.IllagerCastleStructure,"dungeons_arise:abandoned_temple":Internal.AbandonedTempleStructure,"dungeons_arise:lighthouse":Internal.LighthouseStructure,"dungeons_arise:mushroom_village":Internal.MushroomVillageStructure,"dungeons_arise:illager_hall":Internal.IllagerHallStructure,"dungeons_arise:small_prairie_house":Internal.SmallPrairieHouseStructure,"dungeons_arise:fishing_hut":Internal.FishingHutStructure,"dungeons_arise:mushroom_mines":Internal.MushroomMinesStructure,"dungeons_arise:coliseum":Internal.ColiseumStructure,"dungeons_arise:merchant_campsite":Internal.MerchantCampsiteStructure,"dungeons_arise:wishing_well":Internal.WishingWellStructure,"dungeons_arise:illager_fort":Internal.IllagerFortStructure,"dungeons_arise:infested_temple":Internal.InfestedTempleStructure,"dungeons_arise:heavenly_rider":Internal.HeavenlyRiderStructure,"dungeons_arise:mining_system":Internal.MiningSystemStructure,"dungeons_arise:heavenly_conqueror":Internal.HeavenlyConquerorStructure,"dungeons_arise:scorched_mines":Internal.ScorchedMinesStructure,"dungeons_arise:undead_pirate_ship":Internal.UndeadPirateShipStructure,"dungeons_arise:foundry":Internal.FoundryStructure,"dungeons_arise:small_blimp":Internal.SmallBlimpStructure,"dungeons_arise:bandit_village":Internal.BanditVillageStructure,"dungeons_arise:typhon":Internal.TyphonStructure,"dungeons_arise:ceryneian_hind":Internal.CeryneianHindStructure,"dungeons_arise:heavenly_challenger":Internal.HeavenlyChallengerStructure,"dungeons_arise:illager_corsair":Internal.IllagerCorsairStructure,"dungeons_arise:illager_galley":Internal.IllagerGalleyStructure,"dungeons_arise:mushroom_house":Internal.MushroomHouseStructure,"dungeons_arise:giant_mushroom":Internal.GiantMushroomStructure,"dungeons_arise:shiraz_palace":Internal.ShirazPalaceStructure,"dungeons_arise:plague_asylum":Internal.PlagueAsylumStructure,"dungeons_arise:bandit_towers":Internal.BanditTowersStructure,"dungeons_arise:thornborn_towers":Internal.ThornbornTowersStructure,"dungeons_arise:jungle_tree_house":Internal.JungleTreeHouseStructure,"dungeons_arise:aviary":Internal.AviaryStructure,"dungeons_arise:illager_windmill":Internal.IllagerWindmillStructure,"mythicbotany:andwari_cave":Internal.AndwariCave,"undergarden:catacombs":Internal.CatacombsStructure,"dungeoncrawl:dungeon":Internal.Dungeon,"tconstruct:earth_slime_island":Internal.EarthSlimeIslandStructure,"tconstruct:overworld_slime_island":Internal.SkySlimeIslandStructure,"tconstruct:clay_island":Internal.ClayIslandStructure,"tconstruct:nether_slime_island":Internal.BloodSlimeIslandStructure,"tconstruct:end_slime_island":Internal.EnderSlimeIslandStructure,"valhelsia_structures:castle":Internal.CastleStructure,"valhelsia_structures:castle_ruin":Internal.CastleRuinStructure,"valhelsia_structures:desert_house":Internal.DesertHouseStructure,"valhelsia_structures:forge":Internal.ForgeStructure,"valhelsia_structures:player_house":Internal.PlayerHouseStructure,"valhelsia_structures:spawner_dungeon":Internal.SpawnerDungeonStructure,"valhelsia_structures:tower_ruin":Internal.TowerRuinStructure,"valhelsia_structures:witch_hut":Internal.WitchHutStructure,"valhelsia_structures:big_tree":Internal.BigTreeStructure};
        static readonly field_236366_b_: net.minecraft.world.gen.feature.structure.Structure<Internal.VillageConfig>;
        static readonly field_236374_j_: Internal.SwampHutStructure;
        static readonly field_236379_o_: net.minecraft.world.gen.feature.structure.Structure<Internal.NoFeatureConfig>;
        static readonly field_236378_n_: net.minecraft.world.gen.feature.structure.Structure<Internal.NoFeatureConfig>;
        static readonly field_236377_m_: net.minecraft.world.gen.feature.structure.Structure<Internal.OceanRuinConfig>;
        get structureStep_$md$e571c7$0(): Internal.Map<any, any>;
        get defaultRestrictsSpawnsToInside(): boolean;
        get defaultCreatureSpawnList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        get defaultSpawnList(): Internal.List<Internal.MobSpawnInfo$Spawners>;
        get structure(): net.minecraft.world.gen.feature.structure.Structure<any>;
        set registryName(arg0: ResourceLocation_);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.Codec<C>);
    }
    type Structure_<C> = Registry.minecraft.worldgen$structure_feature | Structure<C>;
}
declare namespace com.yungnickyoung.minecraft.yungsapi.mixin {
    interface ChunkGeneratorAccessor {
        yungsapi_setSettings(arg0: Internal.DimensionStructuresSettings): void;
        yungsapi_getCodec(): Internal.Codec<Internal.ChunkGenerator>;
    }
    type ChunkGeneratorAccessor_ = ChunkGeneratorAccessor;
}
declare namespace net.minecraftforge.client.event.sound {
    class SoundEvent extends net.minecraftforge.eventbus.api.Event {
        getManager(): Internal.SoundEngine;
        get manager(): Internal.SoundEngine;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
        constructor(arg0: Internal.SoundEngine);
    }
    type SoundEvent_ = SoundEvent;
}
declare namespace net.minecraft.client.gui.fonts {
    class Font extends Document.Object implements Internal.AutoCloseable {
        func_211188_a(arg0: Internal.IGlyph_): Internal.TexturedGlyph;
        func_238557_a_(arg0: number): Internal.IGlyph;
        func_228157_b_(): Internal.TexturedGlyph;
        func_238559_b_(arg0: number): Internal.TexturedGlyph;
        func_211570_a(arg0: Internal.List<Internal.IGlyphProvider>): void;
        close(): void;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: Internal.TextureManager, arg1: ResourceLocation);
    }
    type Font_ = Font;
}
declare namespace com.mojang.datafixers.types {
    abstract class Type <A> extends Document.Object implements Internal.App<Internal.Type$Mu, A> {
        template(): Internal.TypeTemplate;
        updateMu(arg0: Internal.RecursiveTypeFamily): com.mojang.datafixers.types.Type<any>;
        findTypeInChildren<FT_, FR_>(arg0: com.mojang.datafixers.types.Type<FT_>, arg1: com.mojang.datafixers.types.Type<FR_>, arg2: Internal.Type$TypeMatcher_<FT_, FR_>, arg3: boolean): Internal.Either<Internal.TypedOptic<A, any, FT_, FR_>, Internal.Type$FieldNotFoundException>;
        rewriteOrNop(arg0: Internal.TypeRewriteRule_): Internal.RewriteResult<A, any>;
        point(arg0: Internal.DynamicOps<any>): Internal.Optional<A>;
        findChoiceType(arg0: string, arg1: number): Internal.Optional<Internal.TaggedChoice$TaggedChoiceType<any>>;
        ifSame<B_>(arg0: com.mojang.datafixers.types.Type<B_>, arg1: B_): Internal.Optional<A>;
        ifSame<B_>(arg0: Internal.Typed<B_>): Internal.Optional<A>;
        ifSame<B_>(arg0: com.mojang.datafixers.types.Type<B_>, arg1: Internal.RewriteResult<B_, any>): Internal.Optional<Internal.RewriteResult<A, any>>;
        findType<FT_, FR_>(arg0: com.mojang.datafixers.types.Type<FT_>, arg1: com.mojang.datafixers.types.Type<FR_>, arg2: Internal.Type$TypeMatcher_<FT_, FR_>, arg3: boolean): Internal.Either<Internal.TypedOptic<A, any, FT_, FR_>, Internal.Type$FieldNotFoundException>;
        static opticView<S_, T_, A_, B_>(arg0: com.mojang.datafixers.types.Type<S_>, arg1: Internal.RewriteResult<A_, B_>, arg2: Internal.TypedOptic<S_, T_, A_, B_>): Internal.RewriteResult<S_, T_>;
        getSetType<FT_, FR_>(arg0: Internal.OpticFinder<FT_>, arg1: com.mojang.datafixers.types.Type<FR_>): com.mojang.datafixers.types.Type<any>;
        pointTyped(arg0: Internal.DynamicOps<any>): Internal.Optional<Internal.Typed<A>>;
        readAndWrite<T_>(arg0: Internal.DynamicOps<T_>, arg1: com.mojang.datafixers.types.Type<any>, arg2: Internal.TypeRewriteRule_, arg3: Internal.PointFreeRule_, arg4: T_): Internal.DataResult<T_>;
        write<T_>(arg0: Internal.DynamicOps<T_>, arg1: A): Internal.DataResult<T_>;
        findCheckedType(arg0: number): Internal.Optional<com.mojang.datafixers.types.Type<any>>;
        all(arg0: Internal.TypeRewriteRule_, arg1: boolean, arg2: boolean): Internal.RewriteResult<A, any>;
        writeDynamic<T_>(arg0: Internal.DynamicOps<T_>, arg1: A): Internal.DataResult<Internal.Dynamic<T_>>;
        read<T_>(arg0: Internal.DynamicOps<T_>, arg1: Internal.TypeRewriteRule_, arg2: Internal.PointFreeRule_, arg3: T_): Internal.DataResult<Internal.Pair<Internal.Optional<any>, T_>>;
        read<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<Internal.Pair<A, Internal.Dynamic<T_>>>;
        one(arg0: Internal.TypeRewriteRule_): Internal.Optional<Internal.RewriteResult<A, any>>;
        rewrite(arg0: Internal.TypeRewriteRule_, arg1: Internal.PointFreeRule_): Internal.Optional<Internal.RewriteResult<A, any>>;
        finder(): Internal.OpticFinder<A>;
        codec(): Internal.Codec<A>;
        everywhere(arg0: Internal.TypeRewriteRule_, arg1: Internal.PointFreeRule_, arg2: boolean, arg3: boolean): Internal.Optional<Internal.RewriteResult<A, any>>;
        static unbox<A_>(arg0: Internal.App<Internal.Type$Mu, A_>): com.mojang.datafixers.types.Type<A_>;
        equals(arg0: any, arg1: boolean, arg2: boolean): boolean;
        findFieldType(arg0: string): com.mojang.datafixers.types.Type<any>;
        buildTemplate(): Internal.TypeTemplate;
        findField(arg0: string): Internal.OpticFinder<any>;
        findFieldTypeOpt(arg0: string): Internal.Optional<com.mojang.datafixers.types.Type<any>>;
        readTyped<T_>(arg0: Internal.Dynamic<T_>): Internal.DataResult<Internal.Pair<Internal.Typed<A>, T_>>;
        readTyped<T_>(arg0: Internal.DynamicOps<T_>, arg1: T_): Internal.DataResult<Internal.Pair<Internal.Typed<A>, T_>>;
        findTypeCached<FT_, FR_>(arg0: com.mojang.datafixers.types.Type<FT_>, arg1: com.mojang.datafixers.types.Type<FR_>, arg2: Internal.Type$TypeMatcher_<FT_, FR_>, arg3: boolean): Internal.Either<Internal.TypedOptic<A, any, FT_, FR_>, Internal.Type$FieldNotFoundException>;
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type Type_<A> = Type<A>;
}
declare namespace dev.latvian.mods.rhino {
    interface Function extends Internal.Scriptable, Internal.Callable {
        call(arg0: Internal.Context, arg1: Internal.Scriptable, arg2: Internal.Scriptable, arg3: any[]): any;
        construct(arg0: Internal.Context, arg1: Internal.Scriptable, arg2: any[]): Internal.Scriptable;
    }
    type Function_ = Function;
}
declare namespace dev.latvian.mods.rhino.util {
    interface MapLike <K, T> extends Internal.CustomJavaObjectWrapper {
        wrapAsJavaObject(cx: Internal.Context, scope: Internal.Scriptable, staticType: Internal.Class<any>): Internal.Scriptable;
        containsKeyML(key: K): boolean;
        clearML(): void;
        keysML(): Internal.Collection<K>;
        removeML(key: K): void;
        getML(arg0: K): T;
        putML(key: K, value: T): void;
        (arg0: K): T;
    }
    type MapLike_<K, T> = ((arg0: K)=>T) | MapLike<K, T>;
}
declare namespace com.google.gson.reflect {
    class TypeToken <T> extends Document.Object {
        getRawType(): Internal.Class<T>;
        getType(): Internal.Type;
        static get(arg0: Internal.Type): com.google.gson.reflect.TypeToken<any>;
        static get<T_>(arg0: Internal.Class<T_>): com.google.gson.reflect.TypeToken<T_>;
        static getArray(arg0: Internal.Type): com.google.gson.reflect.TypeToken<any>;
        isAssignableFrom(arg0: com.google.gson.reflect.TypeToken<any>): boolean;
        isAssignableFrom(arg0: Internal.Type): boolean;
        isAssignableFrom(arg0: Internal.Class<any>): boolean;
        static getParameterized(arg0: Internal.Type, ...arg1: Internal.Type[]): com.google.gson.reflect.TypeToken<any>;
        get rawType(): Internal.Class<T>;
        get type(): Internal.Type;
    }
    type TypeToken_<T> = TypeToken<T>;
}
declare namespace net.minecraftforge.client.event {
    class InputEvent extends net.minecraftforge.eventbus.api.Event {
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor();
    }
    type InputEvent_ = InputEvent;
}
declare namespace net.minecraft.client.gui.widget {
    abstract class Widget extends Internal.AbstractGui implements Internal.IRenderable, Internal.IGuiEventListener {
        func_230999_j_(): boolean;
        func_212927_b(arg0: number, arg1: number): void;
        setFGColor(arg0: number): void;
        func_231042_a_(arg0: string, arg1: number): boolean;
        func_230431_b_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
        func_231046_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231044_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_230449_g_(): boolean;
        func_230991_b_(arg0: number): void;
        func_223281_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_230994_c_(arg0: number): void;
        func_230988_a_(arg0: Internal.SoundHandler): void;
        getFGColor(): number;
        func_231000_a__(arg0: number, arg1: number): void;
        func_238483_d_(): number;
        func_230443_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number): void;
        func_230982_a_(arg0: number, arg1: number): void;
        func_230986_a_(arg0: number): void;
        clearFGColor(): void;
        func_238482_a_(arg0: Internal.ITextComponent_): void;
        func_231047_b_(arg0: number, arg1: number): boolean;
        setHeight(arg0: number): void;
        func_231048_c_(arg0: number, arg1: number, arg2: number): boolean;
        func_230430_a_(arg0: Internal.MatrixStack, arg1: number, arg2: number, arg3: number): void;
        func_231045_a_(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        func_231043_a_(arg0: number, arg1: number, arg2: number): boolean;
        func_231049_c__(arg0: boolean): boolean;
        func_230998_h_(): number;
        func_230458_i_(): Internal.ITextComponent;
        field_230688_j_: number;
        static readonly field_230687_i_: ResourceLocation;
        static readonly UNSET_FG_COLOR: -1;
        field_230694_p_: boolean;
        field_230692_n_: boolean;
        field_230690_l_: number;
        field_230693_o_: boolean;
        field_230691_m_: number;
        field_230689_k_: number;
        get fGColor(): number;
        set fGColor(arg0: number);
        set height(arg0: number);
        /**
         * Internal constructor, not callable unless via `java()`.
         */
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.ITextComponent);
    }
    type Widget_ = Widget;
}
declare namespace Document {
    class ThermalRecipes extends stub.probejs.thermal {
        bottler(output: Internal.ItemStackJS_, input: Type.SelfOrArray<Type.TEMixedInput>): Internal.BasicThermalRecipeJS;
        brewer(output: Internal.FluidStackJS_, input: Type.SelfOrArray<Type.TEMixedInput>): Internal.BasicThermalRecipeJS;
        centrifuge(outputs: Type.SelfOrArray<Type.TEMixedOutput>, input: Internal.IngredientJS_): Internal.BasicThermalRecipeJS;
        compression_fuel(input: Internal.IngredientJS_): Internal.FuelRecipeJS;
        crucible(output: Internal.FluidStackJS_, input: Internal.IngredientJS_): Internal.BasicThermalRecipeJS;
        furnace(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.BasicThermalRecipeJS;
        insolator(output: Type.SelfOrArray<Internal.ItemStackJS_>, input: Internal.IngredientJS_): Internal.InsolatorRecipeJS;
        insolator_catalyst(input: Internal.IngredientJS_): Internal.CatalystRecipeJS;
        lapidary_fuel(input: Internal.IngredientJS_): Internal.FuelRecipeJS;
        magmatic_fuel(input: Internal.IngredientJS_): Internal.FuelRecipeJS;
        numismatic_fuel(input: Internal.IngredientJS_): Internal.FuelRecipeJS;
        press(outputs: Type.SelfOrArray<Type.TEMixedOutput>, input: Type.SelfOrArray<Internal.IngredientJS_>): Internal.BasicThermalRecipeJS;
        pulverizer(outputs: Type.SelfOrArray<Internal.ItemStackJS_>, input: Internal.IngredientJS_): Internal.BasicThermalRecipeJS;
        pulverizer_catalyst(input: Internal.IngredientJS_): Internal.CatalystRecipeJS;
        pyrolyzer(outputs: Type.SelfOrArray<Type.TEMixedOutput>, input: Internal.IngredientJS_): Internal.BasicThermalRecipeJS;
        refinery(outputs: Type.SelfOrArray<Type.TEMixedOutput>, input: Internal.FluidStackJS_): Internal.BasicThermalRecipeJS;
        sawmill(outputs: Type.SelfOrArray<Internal.ItemStackJS_>, input: Internal.IngredientJS_): Internal.BasicThermalRecipeJS;
        smelter(outputs: Type.SelfOrArray<Internal.ItemStackJS_>, input: Type.SelfOrArray<Internal.IngredientJS_>): Internal.BasicThermalRecipeJS;
        smelter_catalyst(input: Internal.IngredientJS_): Internal.CatalystRecipeJS;
        stirling_fuel(input: Internal.IngredientJS_): Internal.FuelRecipeJS;
    }
    class ArsNouveauRecipes extends stub.probejs.ars_nouveau {
        enchanting_apparatus(output: Internal.ItemStackJS_, reagent: Internal.IngredientJS_, inputs: Internal.IngredientJS_[]): Internal.ArsNouveauEnchantingApparatusRecipeJS;
        enchantment(enchantment: string, level: number, inputs: Internal.IngredientJS_[]): Internal.ArsNouveauEnchantmentRecipeJS;
        enchantment(enchantment: string, level: number, inputs: Internal.IngredientJS_[], mana: number): Internal.ArsNouveauEnchantmentRecipeJS;
        glyph_recipe(output: Internal.ItemStackJS_, input: Internal.ItemStackJS_, tier: string): Internal.ArsNouveauEnchantmentRecipeJS;
    }
    class CreateRecipes extends stub.probejs.create {
        /**
        * Creates a recipe for Crushing Wheels.
        *
        * Specifying chances on outputs will make them output with chance.
        */
        crushing(outputs: Internal.ItemStackJS_[], input: Internal.IngredientJS_): Internal.ProcessingRecipeJS;
        /**
        * Creates a recipe for Millstone.
        *
        * Specifying chances on outputs will make them output with chance.
        */
        milling(outputs: Internal.ItemStackJS_[], input: Internal.IngredientJS_): Internal.ProcessingRecipeJS;
        /**
        * Creates a recipe for Compacting.
        */
        compacting(output: Type.ItemStackOrFluid, inputs: Type.IngredientOrFluid[]): Internal.ProcessingRecipeJS;
        /**
        * Creates a recipe for Mixing.
        */
        mixing(output: Type.ItemStackOrFluid, inputs: Type.IngredientOrFluid[]): Internal.ProcessingRecipeJS;
        /**
        * Creates a recipe for Pressing.
        *
        * Pressing uses Depot or Belt as container, and can only have 1 item slot as input.
        *
        * Pressing is available as an Assembly step.
        */
        pressing(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.ProcessingRecipeJS;
        /**
        * Creates a recipe for Deploying.
        *
        * Deploying is available as an Assembly step.
        */
        deploying(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.ProcessingRecipeJS;
        /**
        * Creates a recipe for Cutting.
        *
        * Cutting is available as an Assembly step.
        */
        cutting(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.ProcessingRecipeJS;
        /**
        * Creates a recipe for Filling.
        *
        * Filling is available as an Assembly step.
        */
        filling(output: Internal.ItemStackJS_, input: Type.IngredientOrFluid[]): Internal.ProcessingRecipeJS;
        /**
        * Creates a recipe for Sequenced Assembly.
        *
        * The sequnce must use recipes which is available for Assembly.
        */
        sequenced_assembly(output: Internal.ItemStackJS_[], input: Internal.IngredientJS_, sequence: Internal.ProcessingRecipeJS_[]): Internal.SequencedAssemblyRecipeJS;
        /**
        * Creates a recipe for Splashing.
        */
        splashing(output: Internal.ItemStackJS_[], input: Internal.IngredientJS_): Internal.ProcessingRecipeJS;
        /**
        * Creates a recipe for Sandpaper Polishing.
        */
        sandpaper_polishing(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.ProcessingRecipeJS;
        /**
        * Creates a recipe for Mechanical Crafting.
        */
        mechanical_crafting(output: Internal.ItemStackJS_, pattern: string[], items: { [x in string]: Internal.IngredientJS_ }): Internal.ProcessingRecipeJS;
        /**
        * Creates a recipe for Emptying.
        */
        emptying(output: Type.ItemStackOrFluid[], input: Internal.IngredientJS_): Internal.ProcessingRecipeJS;
    }
    class RecipeHolder extends stub.probejs.RecipeHolder {
        /**
        * Recipes from Create.
        */
        readonly create: Document.CreateRecipes;
        /**
        * Vanilla recipes
        */
        readonly minecraft: Document.MinecraftRecipes;
        /**
        * The builtin support for Integrated Dynamics is not complete in KubeJS.
        *
        * If you need Basin or Mechanical Basin, please use event.custom() .
        */
        readonly integrateddynamics: Document.IntegratedDynamicsRecipes;
        readonly ars_nouveau: Document.ArsNouveauRecipes;
        readonly botania: Document.BotaniaRecipes;
        readonly botanypots: Document.BotanyPotsRecipes;
        readonly cucumber: Document.CucumberRecipes;
        /**
        * Recipes from Thermal Series
        *
        * Most of them require Thermal Expansion
        */
        readonly thermal: Document.ThermalRecipes;
    }
    class BotanyPotsRecipes extends stub.probejs.botanypots {
        /**
        * @param outputs any of the `ItemStackJS`, or `{item: ItemStackJS, minRolls: number, maxRolls: number}`
        */
        crop(outputs: object | Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.BotanyPotsCropRecipeJS;
    }
    class CucumberRecipes extends stub.probejs.cucumber {
        shaped_no_mirror(output: Internal.ItemStackJS_, pattern: string[], items: { [x in string]: Internal.IngredientJS_ }): Internal.ShapedRecipeJS;
    }
    class BotaniaRecipes extends stub.probejs.botania {
        runic_altar(output: Internal.ItemStackJS_, inputs: Internal.IngredientJS_[]): Internal.BotaniaRunicAltarRecipeJS;
        runic_altar(output: Internal.ItemStackJS_, inputs: Internal.IngredientJS_[], mana: number): Internal.BotaniaRunicAltarRecipeJS;
    }
    class IntegratedDynamicsRecipes extends stub.probejs.integrateddynamics {
        /**
        * Adds a recipe of Squeezer.
        *
        * @param output The outputs, **NOTE:** The first item in output must not have a chance.
        */
        squeezer(outputs: Internal.ItemStackJS_[], input: Internal.IngredientJS_): Internal.IDSqueezerRecipeJS;
        /**
        * Adds a recipe of Mechanical Squeezer.
        *
        * @param output The outputs, **NOTE:** The first item in output must not have a chance.
        */
        mechanical_squeezer(outputs: Internal.ItemStackJS_[], input: Internal.IngredientJS_): Internal.IDSqueezerRecipeJS;
    }
    class MinecraftRecipes extends stub.probejs.minecraft {
        /**
        * Adds a smelting recipe to Minecraft.
        * Used by Furnaces.
        */
        smelting(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.CookingRecipeJS;
        /**
        * Adds a smelting recipe to Minecraft.
        * Used by Smokers.
        */
        smoking(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.CookingRecipeJS;
        /**
        * Adds a smelting recipe to Minecraft.
        * Used by Blast Furnaces.
        */
        blasting(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.CookingRecipeJS;
        /**
        * Adds a shaped crafting recipe.
        */
        crafting_shaped(output: Internal.ItemStackJS_, pattern: string[], items: {[x in string]: Internal.IngredientJS_}): Internal.ShapedRecipeJS;
        /**
        * Adds a shapeless crafting recipe.
        */
        crafting_shapeless(output: Internal.ItemStackJS_, inputs: Internal.IngredientJS_[]): Internal.ShapelessRecipeJS;
        /**
        * Adds a smelting recipe to Minecraft.
        * Used by Campfire.
        */
        camefire_cooking(output: Internal.ItemStackJS_, input: Internal.IngredientJS_): Internal.CookingRecipeJS;
        /**
        * Adds a stonecutting recipe.
        */
        stonecutting(output: Internal.ItemStackJS_, inputs: Internal.IngredientJS_): Internal.StonecuttingRecipeJS;
        /**
        * Adds a smithing recipe.
        */
        smithing(output: Internal.ItemStackJS_, base: Internal.IngredientJS_, addition: Internal.IngredientJS_): Internal.SmithingRecipeJS;
    }
    class Object  {
        getClass(): Internal.Class<Document.Object>;
        wait(arg0: number): void;
        wait(arg0: number, arg1: number): void;
        wait(): void;
        hashCode(): number;
        notifyAll(): void;
        equals(arg0: any): boolean;
        toString(): string;
        notify(): void;
        get class(): Internal.Class<Document.Object>;
    }
}
declare namespace Type {
    type ItemStackOrFluid = Internal.ItemStackJS | Internal.FluidStackJS;
    type IngredientOrFluid = Internal.IngredientJS | Internal.FluidStackJS;
    type TEMixedOutput = Internal.ItemStackJS | Internal.FluidStackJS;
    type TEMixedInput = Internal.IngredientJS | Internal.FluidStackJS;
}
// Raw TS doc region start
declare const Text = text;
declare const Ingredient = ingredient;
declare const Utils = utils;
declare const Fluid = fluid;

type SelfOrArray<T> = T | T[]
// Raw TS doc region end
